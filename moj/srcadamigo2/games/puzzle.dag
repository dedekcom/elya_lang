new int iPuzzleTryb = 1;
new string sPuzzle = "jesien";
new vector vecpory	{
	.type("string");
	.beginadd("begin", "wiosna", "lato", "jesien", "zima");
};

game MenuPuzzleTryb : classadvadamigo2 , TMenu	{
	init()	{
		classadvadamigo2::init;
		.loadsoldat( 740, 440 );
		ansoldat.anaddfilter;
		ansoldat.rotate( 30 );
		.tinit("mpuzzlet", "scripts/puzzle/", "menupuzt.pyz");
		.buildsnds(A,
			"sndintro", "Wybierz tryb gry", "soldatstand",
			"sndwstawe", "wstawianie figur tryb ³atwy","soldatstand",
			"sndwstawh", "wstawianie figur tryb zaawansowany", "soldatstand",
			"sndpuzzlee", "puzzle tryb ³atwy", "soldatstand",
			"sndpuzzleh", "puzzle tryb zaawansowany", "soldatstand"	);
		.cbplay("sndintro");
	}
	cbplay(@s)	{ .soldattalk(s);	}
	startgame(int i)	{
		iPuzzleTryb = i;
		gameapi.play("MenuPuzzle");
	}
	wstawe_BUTCLICK()	{	.startgame(1);	}
	wstawh_BUTCLICK()	{	.startgame(2);	}
	puzzlee_BUTCLICK()	{	.startgame(3);	}
	puzzleh_BUTCLICK()	{	.startgame(4);	}
}

game MenuPuzzle : classadvadamigo2 , TMenu, Dymarka	{
	init()	{
		classadvadamigo2::init;
		new anima anblink {
			.load("scripts/puzzle/bgblink.pyz");
			.setz(10);
			.hide;
			.setdelay(4);
			.addmethod("onfinish", func { .hide; } );
		};
		.timer = ("timblink", 500+0->rand(10)*100, func { .delay(500+0->rand(10)*600);
			anblink.show; anblink.play(0);	.play;	} );
		timblink.play;
		.tinit("mpuzzle", "scripts/puzzle/", "menupuz.pyz");
		.buildsnds(A,
			"sndintro", "Wybierz planszê", null,
			"sndwiosna", "wiosna",null,
			"sndlato", "lato", null,
			"sndjesien", "jesieñ", null,
			"sndzima", "zima", null );
		.initdym;
		anmano.addmethod("onfinish", "startuj" );
		anmano.move(400-anmano.getw/2, -20);
		.cbplay("sndintro");
	}
	startuj	{
		if( iPuzzleTryb>2 )	gameapi.play("Puzzle");
		else	gameapi.play("gamewstawianka");
	}
	startgame(string s)	{
		if( .getlock ) return;
		.lock;
		if( iPuzzleTryb>2 )	{
			sPuzzle = s;
			anmano.play(-1);
		} else {
			igmwstawtype = iPuzzleTryb;
			bgmwstaw = true;
			sgamewstaw = s;
			anmano.play(-1);
		}
	}
	wiosna_BUTCLICK()	{	.startgame("wiosna");	}
	lato_BUTCLICK()	{	.startgame("lato");	}
	jesien_BUTCLICK()	{	.startgame("jesien");	}
	zima_BUTCLICK()	{	.startgame("zima");	}
}

game Puzzle : classadvadamigo2, GameController	{
	init()	{
		new int iCols;
		new int iRows;
		if( iPuzzleTryb==3 )	|iCols, iRows| = 5,3;
		else					|iCols, iRows| = 7,6;
		
		classadvadamigo2::init;
		GameController::init("puzzle");
		
		.sfxs = (A, "getpuz 60", "putpuz 50", "koloL", "kolostop 50");
		
		.setgraphpath("scripts/puzzle/");
		.newimg("imgbkg", "bgpuzle.png", 0);
		new gmimgvec grel;
		new gmimgvec grend;
		"grel" ..< ("el" + (iPuzzleTryb-2)+ sPuzzle+".pyz");
		grel.setz(10);
		new int iid = 0;
		new int iile = grel.size;
		new real rspeed = 15;
		new int ibadajl = 25;
		
		.cnewtimerfin("timstart", 3000, 1, func { itimstate=2; } );
		igmstate=0;
		.buildsnds( A,
			"sndintro", "Rozpoczynam miesznie", func { <GAME>.buildcircle; },
			"sndend", "Brawo! Obrazek idealnie u³o¿ony", func {
				sPuzzle = vecpory.vecnext( sPuzzle );
				.cnewtimerfin("timend", 3000, 1, "askrestart");
				timend.play;
			});
		.cbplay("sndintro");
		new DelayMover cmov;
		new SimpleCounter cnt(200);
		
		new int iX = 79;
		new int iY = 58;
		grel.move( iX, iY );
		
	}
	cmov_GET()	{
		if( grel.isin( mouse.getpos, true, true ) )	{
			string s = grel.getsfound;
			<s>.setz(900);
			.mssetobj( s );
			fxgetpuz.play;
		}
	}
	bool cwithin(string s)	{
		int i;
		if( .gettype!="anima" )	{
			for( i=0; i < .size; i++)	{if( <.get(i)>.cwithin( s ) )	return true;}
			return false;
		} else {
			if( <s>.gettype=="anima" )	{
				int id = .framenr;
				int im = id%iCols;
				A;
				if( im>0 )			id-1;
				if( im<iCols-1 )	id+1;
				im = id/iCols;
				if( im>0 )			id-iCols;
				if( im<iRows-1)	id+iCols;
				return <s>.framenr->in;
			} else {
				for( i=0; i< <s>.size; i++)		{if( .cwithin( <s>.get(i) ) )	return true;}
				return false;
			}
		}
	}
	cblit(string s)	{
		if( <s>.gettype=="anima" )	{
			<s> {
				.setz(1);
				.setpos(iX,iY);
				int x = .getpx;
				int y = .getpy;
				.anaddfilter;
				.setopacity(128);
				.setpos(x,y);
				imgbkg.blit( this );
				.unlink;
				.setpos(iX,iY);
				.hide;
			};
		} else	for( int i=0; i< <s>.size; i++ )		.cblit( <s>.get(i) );
	}
	cmov_PUT()	{
		<GAME>.cput;
		fxputpuz.play;
	}
	cput()	{
		string s = cmov.getmover;
		<s>.setz(100+cnt.next);
		cmov.free;
		grel {
			.sortimgs;
			.each( func { (int i) .setz(10+i); } );
		};
		string s1 = s, string s2;
		while(<s>.gettype != "anima")	s=<s>.get(0);
		if( ibadajl.length( <s>.lodx+iX-<s>.getpx, <s>.lody+iY-<s>.getpy ) < ibadajl )	{
			.cblit(s1);
			grel.remove(s1);
			grend.add(s1);
			if( grel.empty )	{
				grend.show;
				.cbplay("sndend");
			}
		} else {
			grel.remove(s1);
			for( int i=0; i<grel.size; i++)	{
				s = grel.get(i);
				if( cllen.iposlen(s,s1)<ibadajl && <s1>.cwithin(s) )	{
					|int x, int y| = <s>.getpos;
					if( <s>.gettype=="anima")	{
						if( <s1>.gettype=="anima" )	{
							s2 = "gr" + s;
							new gmimgvec <s2>;
							<s2>.add(s);
							<s2>.add(s1);
						} else {
							<s1>.add(s);
							s2 = s1;
						}
						grel.remove(s);
						grel.add(s2);
					} else {
						if( <s1>.gettype=="anima" )	{
							<s>.add(s1);
						} else {
							<s>.addgr(s1);
						}
						s2 = s;
					}
					<s2>.setpos(x,y);
					<s2>.setz( <s1>.getz );
					grel.sortimgs;
					return;
				}
			}
			grel.add(s1);
		}
	}
	mouse_rclick()	{
//		if( igmdebug ) grel.print;
	}
	/********************************************/
	cgetpos(int i)	{	return <grel.get(i)>.getcx, <grel.get(i)>.getcy;	}
	cgetdest(int i)	{
		i = ((i+iid)%iile)*2;
		return vpos.get(i), vpos.get(i+1);
	}
	buildcircle()	{
		real kat = 360/iile;
		real r = 200.0;
		real k = 0.0;
		int x, int y;
		new vector vpos;
		vpos.type("int");
		string s;
		for( int i=0; i<iile; i++)	{
			vpos.add(400 + r*k.cos );
			vpos.add(300 - r*k.sin);
			k+=kat;
			s = "trl" + i;
			new classwalker <s>;
			_ = <s>.countsteps(.cgetpos(i), vpos.get(2*i), vpos.get(2*i+1), rspeed );
		}
		.cnewtimercyclefin("timhash", 1, 1, "fintim");
		new int itimstate=0;
		timhash.play;
	}
	bool allreached()	{
		grel.ineach( func {(int i) <"trl"+i>.reached2( .cgetpos(i) ); } );
	}
	setallpos() {
		string s;
		for(int i=0; i<iile; i++)	{
			s = "trl"+i;
			if( !<s>.reached2( .cgetpos(i) ) )
				<grel.get(i)>.move( <s>.getdx, <s>.getdy );
		}
	}
	fintim()	{
		int i;
		if( itimstate==0)	{
			if( .allreached )	{
				itimstate=1;
				timstart.play;
				fxkolo.play;
			}
			.setallpos;
		} else if (itimstate==1)	{
			if( trl0.reached2( .cgetpos(0) ) )	{
				iid = (iid+1)%iile;
				for( i=0; i<iile; i++)	_ = <"trl"+i>.countsteps(.cgetpos(i), .cgetdest(i), rspeed );
			}
			.setallpos;
		} else if (itimstate==2)	{
			grel.each( func { (int i) .setz(10+i.rand(40)); } );
			grel.sortimgs;
			for( i=0; i<iile; i++)	{
				_ = <"trl"+i>.countsteps(.cgetpos(i), 150+i.rand(500), 300+i.rand(200), rspeed );
			}
			fxkolo.stop(false);
			fxkolostop.play;
			itimstate = 3;
			.setallpos;
		} else if (itimstate==3)	{
			if( .allreached )	{
				igmstate = 1;
				cmov.unlock;
				return;
			}
			.setallpos;
		}
		.play;
	}
}
