
|iMemoW, iMemoH| = 8, 6;
|iMemoW, iMemoH| = 4, 4;
iMemoTryb = 2;

class Gracze	{
	init(int imode)	{
		new int idrugi = 1;
		if( imode==1 )	idrugi=2;	// 1 - p vs comp, 2 - p vs p
		new anima angracz1;
		angracz1.load("scripts/memo/gracze.pyz");
		.copyanima("angracz1", "anactive1");
		anactive1.setframe(0,1);
		.copyanima("angracz1", "angracz2");
		angracz2.setframe(idrugi,0);
		.copyanima("angracz1", "anactive2");
		anactive2.setframe(idrugi,1);
		.var("aktualny");
		.set(1);
		new gmimgvec gracz1;
		_ = "gracz1" .+ "angracz1" .+ "anactive1";
		new gmimgvec gracz2;
		_ = "gracz2" .+ "angracz2" .+ "anactive2";
		gracz1.addtogamevars("gracz1");
		gracz2.addtogamevars("gracz2");
	}
	set(int id)	{
		anactive1.setframe(0,1);
		anactive2.setframe(idrugi,1);
		if( id==1 )	anactive1.setframe(0,2);
		else	anactive2.setframe(idrugi,2);
	}
}

game MenuMemo	: classadvadamigo2	{
	init()	{
		classadvadamigo2::init;
		.sfxs=(A,"ikonka 60", "getpuz", "przekladnia");
		.setgraphpath("scripts/memo/");
		.newanima("anbkg", "bgmenu.pyz", 0);
		new gmimgvec grtryb;
		"grtryb" .* "tryb.pyz";
		new gmimgvec grhard;
		"grhard" .* "trudnosc.pyz";
		grhard.move( 9, 40 );
		new gmimgvec grdim;
		"grdim" .* "wymiar.pyz";
		@xdim = -20;
		@ydim = 270;
		grdim.move( xdim, ydim );
		.newanima("anreka", "reka.pyz", 15);
		grdim.setz(10);
		.newanima("anwajcha", "wajchabg.pyz", 5);
		anwajcha.move( xdim, ydim);
		anreka.move(xdim, ydim);
		grhard.hide;
		.newanima("anpoziom", "poziom.pyz",2);
		.newanima("anplansza", "plansza.pyz",2);
		anpoziom.hide;
		new gmimgvec gral;
		_ = "gral" .+ "grtryb" .+ "grhard" .+ "grdim";
		_ = .set( "player" );
		_ = .set( "4x4" );
		_ = .set( 1 );
		antrudnosc0.ansetframe(1);
		anwymiar0.ansetframe(0);
		antryb0.ansetframe(1);
		new @slast = null;
		new classsimplebutton cstart;
		cstart.build("scripts/memo/start.pyz", "imglobcurs", 0, 0, 10, 0);
	}
	cstart_MOVEON	{	fxikonka.play;	}
	cstart_CLICK	{	gameapi.play("Memo");	}
	mousemove	{
		if( gral.isin(mouse.getpos, true, true) )	{
			@s = gral.getsfound;
			if( !bsms.isact || (s=="grdim" && slast!="grdim") || (s!="grdim"&&slast!=<s>.getsfound)	) {
				slast = s=="grdim" ? "grdim" : <s>.getsfound;
				bsms.setact;
				fxikonka.play;
			}
		} else {
			bsms.setstd;
			slast = null;
		}
	}
	bool set(string s2)	{
		match( s2 )	{
			"player"	=> {	grhard.hide; anpoziom.hide;	iMemoTryb = 0;		}
			"pvp"	=> {		grhard.hide;anpoziom.hide;	iMemoTryb = 2;	}
			"pvc"	=> {		grhard.show;anpoziom.show;	iMemoTryb = 1;	}
			? => if( s2.contains("x") )	{
					int iw = s2.getb(0,1);
					int ih = s2.gete(0,1);
					if( iw==iMemoW && ih==iMemoH )	return false; 
					iMemoW = iw;
					iMemoH = ih;
				} else iMemoAI = grhard.getfound;
		}
		true;
	}
	mouselclick()	{
		if( gral.isin(mouse.getpos, true, true) )	{
			string s0 = gral.getsfound;
			string s = <s0>.getsfound;
			string s2 = <s>.actionname;
			@bplay = .set(s2);
			<s0>.changeframe(0);
			if( s0=="grdim" )	{anreka.setframe( 0, <s>.actionnr(-1) ); if( bplay) fxprzekladnia.play; }
			else {<s>.setframe( s2, 1 );	fxgetpuz.play;	}
		}
	}
}

game Memo : classadvadamigo2, TMemo {
	init()	{
		classadvadamigo2::init;
		
		if( iMemoW > 6 )	.tinit("memo", "scripts/memo/", "bkgame.pyz", "tmale.pyz", "tafmaly.pyz", 2);
		else	.tinit("memo", "scripts/memo/", "bkgame.pyz", "tduze.pyz", "tafduzy.pyz", 3);
		@ymove = 65;
		grtaf.move(0,ymove);
		grnak.move(0,ymove);
		
		.sfxs = (A, "elektropik", "mikrofala", "brawo", "buu");
		.buildsnds( A,
			"sndintro0", "Znajd¼ wszystkie pary najszybciej jak potrafisz!", func { ttc.play; .tstart; },
			"sndintro1", "Zaczyna gracz pierwszy", "tstart",
			"sndwin1", "Zwyciê¿y³ Gracz pierwszy!", "askrestart2",
			"sndwin2", "Zwyciê¿y³ Gracz drugi!", "askrestart2",
			"sndwincomp", "Zwyciê¿y³ komputer!", "askrestart",
			"sndremis", "Ale¿ zaciêty pojedynek! Mamy remis proszê pañstwa!", "askrestart2",
			"sndrekord", "Brawo! Brawo! Rekord czasowy pobity!", "askrestart",
			"sndnierekord", "Niestety nie uda³o siê pobiæ rekordu", "askrestart");
		
		if( iMemoTryb==0 )	{
			//.newanima("anbgcnt", "counterbg.pyz", 0);
			.newimg("anbgcnt", "licznik1.png", 0);
			@skala = 0.75;
			new TextTimeCounter ttc(null,skala*30, 220,220,220,
				anbgcnt.getpx+15, anbgcnt.getpy+13,1000, "hms");
			.cbplay("sndintro0");
		} else {
			new Cypher ct1(null,40, 255,210,210, 10,150, 1000);
			new Cypher ct2(null,40, 210,210,255, 760,150, 1000);
			.cbplay("sndintro1");
			new Gracze gracze( iMemoTryb );
			gracz2.setpos( 800-gracz2.getw, 0 );
		}
	}
	tnextplayer	{
		TMemo::tnextplayer;
		gracze.set( iplayer );
	}
	askrestart2()	{
		if( iMemoTryb==1 )		claskexit.askrestart;
		else	claskexit.askrestart2;
	}
	tfinish()	{
		if( iMemoTryb==0 )	{
			ttc.stop;
			int ile = ttc.gettime;
			@sfile = "saves/memrek"+iMemoW+iMemoH;
			int iczas;
			if( engine.fileexist(sfile) )	{
				iczas.load( sfile, 0 );
				if (iczas>ile) {
					.cbplay("sndrekord");
					ile.save( sfile );
				} else .cbplay( "sndnierekord" );
				_ = .consttext("Dotychczasowy rekord na planszy: "+ clstrdigit::gettime(iczas,"hms"),
					210, 20, 20, 242, 242, 242);
			} else {
				ile.save( sfile );
				.cbplay("sndrekord");
			}
		} else {
			<"ct" + iplayer>.++;
			int c1 = ct1.get;
			int c2 = ct2.get;
			if( c1==c2 )	{.cbplay("sndremis"); fxbrawo.play;}
			else if (c1>c2)	{.cbplay("sndwin1"); fxbrawo.play;	}
			else	if( iMemoTryb==2)	{ .cbplay("sndwin2"); fxbrawo.play;	}
			else {.cbplay("sndwincomp"); fxbuu.play;	}
		}
	}
	tpoint()	{
		if( iMemoTryb>0 )	{
			<"ct" + iplayer>.++;
		}
		fxmikrofala.play;
	}
	tchoose	{	fxelektropik.play;	}
	terror	{	}
	mouse_lclick()	{
	}
}
