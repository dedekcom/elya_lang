
new string bookdir = dbconf.dbget("bookdir:");
new string screenmode = dbconf.dbget("screenmode:");
new string storyfile = dbconf.dbget("storyfile:");

new string sAskerGame;
new string sGotoGame;
class StdGame : classadv, GameController, Localize	{
	init(string s)	{
		igmstate = 0;
		classadv::init;
		GameController::init(s);
		Localize::init;
		clbuts.setcursorpos(0, 0);
		claskexit.setcursorpos(0, 0);
		.path = ( bookdir + "/" + s);
		.setwavpath(SNDPATH);
		clmusic.play;
		clbuts.reset;
		claskexit.reset;
		advmouse.setstd;
		new Music mus;
		
		new Button but1;
		.cutscene;
	}
	/********************* adv **************************************/
	cutscene	{
		new CutScene ccs(0, 0, iResX, iResY);
		ccs.delay(50);
		ccs.setz(2000);
	}
	gotogame(string sgame)	{
		if( sgmstate=="go" )	{
			sgmstate="end";
			sGotoGame = sgame;
			ccs.close( func { gameapi.play(sGotoGame); } );
		}
	}
	stdstart	{	ccs.enter( func { sgmstate="go"; } );	}
	/***********************************************************/
	key_down	{
		if( igmdebug && keyboard.iskeydown("lctrl") && keyboard.iskey("r") )	.crestart;
	}
	public askrestart	{	claskexit.askrestart;	}
	/***********************************************************/
	onmusicfin      {	mus.play;	}
	exit	{
		.game_exit;
		if( igmsubtitle )	{
			subtitle.reset;
		}
	}
}

