

public string internal_filter	{
	@s = "__ft" + this;
	if( .hasvar(s) ) {
		<s>.link(this);
		<s>.setopacity(255);
		s;
	} else {
		new filter <s>;
		<s>.link(this);
		s;
	}
}

public string internal_timer	{
	@s = "__tim" + this;
	if( .hasvar(s) ) s;
	else {
		new timer <s>;
		<s>.setcycle(1);
		<s>.vars2(A, "sfunc", null);
		s;
	}
}

public ansetopacity(int iop)	{
	<.internal_filter>.setopacity(iop);
}
public anzoomin(int ms, string sfun)	{
	.anzoomfadeinout(ms,1,0,sfun);
}
public anzoomout(int ms, string sfun)	{
	.anzoomfadeinout(ms,-1,0,sfun);
}
public anfadein(int ms, string sfun)	{
	.anzoomfadeinout(ms,0,1,sfun);
}
public anzoomfadein(int ms, string sfun)	{
	.anzoomfadeinout(ms,1,1,sfun);
}
public anzoomfadeout(int ms, string sfun)	{
	.anzoomfadeinout(ms,-1,-1,sfun);
}
public anfadeout(int ms, string sfun)	{
	.anzoomfadeinout(ms,0,-1,sfun);
}
public anzoomfadeinout(int ms, int zoomdir, int dir, string sfun)	{
	if( dir>0 ) dir=1;
	else if (dir<0) dir=-1;
	
	if(zoomdir>0 ) zoomdir=1;
	else if(zoomdir<0) zoomdir=-1;
	
	.show;
	@sf = .internal_filter;
	@st = .internal_timer;
	<sf>.link(this);
	<st>.sfunc = (sfun);
	
	ms = ms / engine.getloopdelay;
	if( ms<=0 )	{
		if( dir>0 )	.ansetopacity(255);
		else	.ansetopacity(0);
		if( sfun!=null ) .<sfun>;
		return;
	}
	
	real step = 255.0/ms;
	if( step<1.0 ) step = 1.0;
	real stepzoom = 1.0/ms;
	<st>.vars2(A, "sfilter", sf, "rstep", step * dir, "ropacity", 0.0, "rstepzoom", stepzoom*zoomdir, "rzoom", 0.0);
	if( dir )	{
		<sf>.setopacity( dir==1 ? 0 : 255 );
		<st>.ropacity = ( <sf>.getopacity );
	}
	if( zoomdir )	{
		<sf>.setzoom( zoomdir==1 ? stepzoom : 1 );
		<st>.rzoom = ( <sf>.getzoomx );
	}
	<st>.addmethod("onfinish", func {
		ropacity += rstep;
		rzoom += rstepzoom;
		if( (ropacity>=255 && rstep>0) || (rzoom>=1 && rstepzoom>0) )	{
			if( rstepzoom>0 ) <sfilter>.setzoom( 1 );
			if( rstep>0 )	<sfilter>.setopacity(255);
			if( sfunc!=null ) <.getbuildername>.<sfunc>;
		} else if ( (ropacity<=0 && rstep<0) || (rstepzoom<0 && rzoom<-rstepzoom) )	{
			if( rstepzoom<0 ) .hide;
			if( rstep<0)	<sfilter>.setopacity(0);
			if( sfunc!=null ) <.getbuildername>.<sfunc>;
		} else {
			if( rstep !=0.0 )
				<sfilter>.setopacity(ropacity);
			if( rstepzoom!=0.0 )
				<sfilter>.setzoom(rzoom);
			.play;
		}
		} );
	<st>.play;
}

public imgbuildfromlist	{
	new vector __vtmp;
	__vtmp.type("string");
	__vtmp.vecloadargs;
	.imgbuildfromvec("__vtmp");
	delete __vtmp;
}
public imgbuildfromvec(string svec)	{
	if( <svec>.empty ) return;
	string s = <svec>.first;
	int x = <s>.getpx;
	int y = <s>.getpy;
	int ex = <s>.getex;
	int ey = <s>.getey;
	for( int i=1; i < <svec>.size; i++ )	{
		s = <svec>.get(i);
		if( x > <s>.getpx ) x = <s>.getpx;
		if( y > <s>.getpy ) y = <s>.getpy;
		if( ex < <s>.getex ) ex = <s>.getex;
		if( ey < <s>.getey ) ey = <s>.getey;
	}
	.create( ex-x, ey-y, .transparent );
	.setpos(x, y);
	for( i=0; i< <svec>.size; i++)	{
		.blit(<svec>.get(i));
	}
}
