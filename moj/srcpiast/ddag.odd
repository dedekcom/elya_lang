; Dominik Dagiel   ix 2005

	new int,igmstate
	class newvars
	method init
	new string,_sclpath
	push ""
	pop _sclpath
	new string,_sclwavpath
	push ""
	pop _sclwavpath
	end method
	method setgraphpath
	localstring $1
	pop $1
	push $1
	pop _sclpath
	end method
	method setwavpath
	localstring $1
	pop $1
	push $1
	pop _sclwavpath
	end method
	method getgraphpath
	push _sclpath
	ret
	end method
	method newanima
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	popax
	spush $a
	spop $e
	new anima,[$e]
	push $1
	popax
	spush $a
	push _sclpath
	push $2
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],load
	push $1
	popax
	spush $a
	push $3
	spop $a
	call [$a],setz
	end method
	method newstdanima
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	cthis newanima
	push $1
	cthis stdanaction
	end method
	method copyanimaactz
	localstring $1
	localstring $2
	localstring $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	cthis copyanimaact
	push $2
	popax
	spush $a
	push $4
	spop $a
	call [$a],setz
	end method
	method copyanimaact
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	cthis copyanima
	push $2
	popax
	spush $a
	push $3
	push 0
	spop $a
	call [$a],setframe
	end method
	method copyanima
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $2
	popax
	spush $a
	spop $e
	new anima,[$e]
	push $2
	popax
	spush $a
	push $1
	spop $a
	call [$a],copy
	end method
	method copyanimas
	localstring $1
	localstring $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $4
	push 0
	pop $b
	popax
	cmp $a,$b
	jl l2
	push 0
	jmp l3
l2:
	push 1
l3:
	popax
	cmp $a,0
	je l4
	ret
	jmp l1
l4:
l1:
	localint $5
	push 0
	pop $5
l5:
	push $5
	push $4
	pop $b
	popax
	cmp $a,$b
	jl l6
	push 0
	jmp l7
l6:
	push 1
l7:
	popax
	cmp $a,0
	je l8
	jmp l10
l9:
	add $5,1
	pop $5
	jmp l5
l10:
	push $1
	push $2
	push $3
	push $5
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	add $a,$b
	cthis copyanima
	jmp l9
l8:
	end method
	method newanimas
	localstring $1
	localstring $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $4
	push 0
	pop $b
	popax
	cmp $a,$b
	jl l12
	push 0
	jmp l13
l12:
	push 1
l13:
	popax
	cmp $a,0
	je l14
	ret
	jmp l11
l14:
l11:
	push $1
	push "0"
	pop $b
	popax
	add $a,$b
	push $2
	push $3
	cthis newanima
	push $1
	push "0"
	pop $b
	popax
	add $a,$b
	push $1
	push 1
	push $4
	push 1
	pop $b
	popax
	sub $a,$b
	cthis copyanimas
	end method
	method newanframes
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	localint $4
	push $1
	popax
	spush $a
	push $3
	spop $a
	call [$a],nofframes
	pop $4
	push $1
	push $2
	push 0
	push $4
	cthis copyanimas
	localint $5
	push 0
	pop $5
l15:
	push $5
	push $4
	pop $b
	popax
	cmp $a,$b
	jl l16
	push 0
	jmp l17
l16:
	push 1
l17:
	popax
	cmp $a,0
	je l18
	jmp l20
l19:
	add $5,1
	pop $5
	jmp l15
l20:
	push $2
	push $5
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	push $3
	push $5
	spop $a
	call [$a],setframe
	jmp l19
l18:
	push $4
	ret
	end method
	method newcanvas
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	localint $7
	localint $8
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	popax
	spush $a
	spop $e
	new img,[$e]
	push $1
	popax
	spush $a
	push $2
	push $3
	push $4
	push $5
	push $6
	push $7
	spop $a
	call [$a],create
	push $1
	popax
	spush $a
	push $8
	spop $a
	call [$a],setz
	end method
	method newimg
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	popax
	spush $a
	spop $e
	new img,[$e]
	push $1
	popax
	spush $a
	push _sclpath
	push $2
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],load
	push $1
	popax
	spush $a
	push $3
	spop $a
	call [$a],setz
	end method
	method copyimg
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $2
	popax
	spush $a
	spop $e
	new img,[$e]
	push $2
	popax
	spush $a
	push $1
	spop $a
	call [$a],copy
	end method
	method playmusic
	localstring $1
	pop $1
	push _sclwavpath
	push $1
	pop $b
	popax
	add $a,$b
	call gameapi,playmusic
	end method
	method newsnd
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	popax
	spush $a
	spop $e
	new snd,[$e]
	push $1
	popax
	spush $a
	push _sclwavpath
	push $2
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],load
	end method
	method _stdsndloop
	cthis play
	end method
	method newsndloop
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	cthis newsnd
	push $1
	cthis looponfinish1
	end method
	method looponfinish1
	localstring $1
	pop $1
	push $1
	popax
	spush $a
	push "onfinish"
	push "_stdsndloop"
	spop $a
	call [$a],addmethod
	end method
	method sndplayloop
	localstring $1
	pop $1
	push $1
	cthis looponfinish1
	push $1
	popax
	spush $a
	spop $a
	call [$a],play
	end method
	method newsnds
	localstring $1
	localint $2
	localstring $3
	localint $4
	localint $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	localstring $6
	localint $7
	push $5
	push $4
	pop $b
	popax
	sub $a,$b
	push 1
	pop $b
	popax
	add $a,$b
	pop $7
	localint $8
	push 0
	pop $8
l21:
	push $8
	push $7
	pop $b
	popax
	cmp $a,$b
	jl l22
	push 0
	jmp l23
l22:
	push 1
l23:
	popax
	cmp $a,0
	je l24
	jmp l26
l25:
	add $8,1
	pop $8
	jmp l21
l26:
	push $1
	push $2
	push $8
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	add $a,$b
	pop $6
	push $6
	popax
	spush $a
	spop $e
	new snd,[$e]
	push $6
	popax
	spush $a
	push _sclwavpath
	push $3
	pop $b
	popax
	add $a,$b
	push $4
	push $8
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	add $a,$b
	push ".wav"
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],load
	jmp l25
l24:
	end method
	method newtimer
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	popax
	spush $a
	spop $e
	new timer,[$e]
	push $1
	popax
	spush $a
	push $3
	spop $a
	call [$a],settick
	push $1
	popax
	spush $a
	push $2
	spop $a
	call [$a],delay
	end method
	method newtimercycle
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	popax
	spush $a
	spop $e
	new timer,[$e]
	push $1
	popax
	spush $a
	push $3
	spop $a
	call [$a],settick
	push $1
	popax
	spush $a
	push $2
	spop $a
	call [$a],setcycle
	end method
	method _stdanloop
	push 1
	popax
	sub 0,$a
	cthis play
	end method
	method _stdanhide
	cthis hide
	end method
	method looponfinish
	localstring $1
	pop $1
	push $1
	popax
	spush $a
	push "onfinish"
	push "_stdanloop"
	spop $a
	call [$a],addmethod
	end method
	method hideonfinish
	localstring $1
	pop $1
	push $1
	popax
	spush $a
	push "onfinish"
	push "_stdanhide"
	spop $a
	call [$a],addmethod
	end method
	method stdanaction
	localstring $1
	pop $1
	localstring $2
	push $1
	popax
	spush $a
	spop $a
	call [$a],actionname
	pop $2
	push "L"
	call $2,contains
	push 0
	pop $b
	popax
	cmp $a,$b
	jne l28
	push 0
	jmp l29
l28:
	push 1
l29:
	popax
	cmp $a,0
	je l30
	push $1
	cthis looponfinish
	jmp l27
l30:
	push "H"
	call $2,contains
	push 0
	pop $b
	popax
	cmp $a,$b
	jne l32
	push 0
	jmp l33
l32:
	push 1
l33:
	popax
	cmp $a,0
	je l34
	push $1
	cthis hideonfinish
	jmp l31
l34:
l31:
l27:
	push "P"
	call $2,contains
	push 0
	pop $b
	popax
	cmp $a,$b
	jne l36
	push 0
	jmp l37
l36:
	push 1
l37:
	popax
	cmp $a,0
	je l38
	push $1
	popax
	spush $a
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],play
	jmp l35
l38:
l35:
	end method
	method newanactions
	localstring $1
	localstring $2
	pop $2
	pop $1
	localint $3
	push $1
	popax
	spush $a
	spop $a
	call [$a],nofactions
	pop $3
	push $1
	push $2
	push 0
	push $3
	cthis copyanimas
	localint $4
	push 0
	pop $4
l39:
	push $4
	push $3
	pop $b
	popax
	cmp $a,$b
	jl l40
	push 0
	jmp l41
l40:
	push 1
l41:
	popax
	cmp $a,0
	je l42
	jmp l44
l43:
	add $4,1
	pop $4
	jmp l39
l44:
	push $2
	push $4
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	push $4
	push 0
	spop $a
	call [$a],setframe
	push $2
	push $4
	pop $b
	popax
	add $a,$b
	cthis stdanaction
	jmp l43
l42:
	push $3
	ret
	end method
	method newanfrbyact
	localstring $1
	localstring $2
	pop $2
	pop $1
	localint $3
	push $1
	popax
	spush $a
	spop $a
	call [$a],nofactions
	pop $3
	localint $4
	localint $5
	push 0
	pop $5
l45:
	push $5
	push $3
	pop $b
	popax
	cmp $a,$b
	jl l46
	push 0
	jmp l47
l46:
	push 1
l47:
	popax
	cmp $a,0
	je l48
	jmp l50
l49:
	add $5,1
	pop $5
	jmp l45
l50:
	push $1
	push $2
	push $5
	pop $b
	popax
	add $a,$b
	push "_"
	pop $b
	popax
	add $a,$b
	push $5
	cthis newanframes
	pop $4
	jmp l49
l48:
	push $3
	ret
	end method
	method loadanfrbyact
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	localstring $4
	push "_"
	push $1
	pop $b
	popax
	add $a,$b
	pop $4
	push $4
	push $2
	push $3
	cthis newanima
	localint $5
	push $4
	push $1
	cthis newanfrbyact
	pop $5
	push $4
	popax
	spush $a
	spop $a
	call [$a],hide
	push $5
	ret
	end method
	method loadanactions
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	localstring $4
	push "_"
	push $1
	pop $b
	popax
	add $a,$b
	pop $4
	push $4
	push $2
	push $3
	cthis newanima
	localint $5
	push $4
	push $1
	cthis newanactions
	pop $5
	push $4
	popax
	spush $a
	spop $a
	call [$a],hide
	push $5
	ret
	end method
	method loadanframes
	localstring $1
	localstring $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	localstring $5
	push "_"
	push $1
	pop $b
	popax
	add $a,$b
	pop $5
	push $5
	push $2
	push $4
	cthis newanima
	localint $6
	push $5
	push $1
	push $3
	cthis newanframes
	pop $6
	push $5
	popax
	spush $a
	spop $a
	call [$a],hide
	push $6
	ret
	end method
	method newbutimg
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	popax
	spush $a
	spop $e
	new button,[$e]
	push $1
	popax
	spush $a
	push $2
	push $3
	push $4
	spop $a
	call [$a],set
	push $1
	popax
	spush $a
	push $5
	spop $a
	call [$a],setmouse
	end method
	method newbutan
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	popax
	spush $a
	spop $e
	new button,[$e]
	push $1
	popax
	spush $a
	push $2
	push $3
	push $4
	spop $a
	call [$a],setan
	push $1
	popax
	spush $a
	push $5
	spop $a
	call [$a],setmouse
	end method
	method newdb
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	popax
	spush $a
	spop $e
	new db,[$e]
	push $1
	popax
	spush $a
	push _sclpath
	push $2
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],load
	end method
	method swap
	localstring $1
	localstring $2
	pop $2
	pop $1
	localstring $3
	push $1
	popax
	mov $a,[$a]
	psax
	pop $3
	push $1
	popax
	spush $a
	push $2
	popax
	mov $a,[$a]
	psax
	spop $b
	popax
	mov [$b],$a
	push $2
	popax
	spush $a
	push $3
	spop $b
	popax
	mov [$b],$a
	end method
	method anloopfin
	push "onfinish"
	push "_stdanloop"
	cthis addmethod
	end method
	method anloopplay
	localint $1
	pop $1
	cthis anloopfin
	push $1
	cthis play
	end method
	method anhidefin
	push "onfinish"
	push "_stdanhide"
	cthis addmethod
	end method
	method anputgr
	cthis getey
	cthis setz
	end method
	method ansetposgr
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	cthis setpos
	cthis anputgr
	end method
	method anplayz
	localint $1
	localint $2
	pop $2
	pop $1
	push $2
	cthis setz
	push $1
	cthis play
	end method
	method anplaygr
	localint $1
	pop $1
	push $1
	cthis play
	cthis anputgr
	end method
	method anplayzpos
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $3
	push $4
	cthis setpos
	push $1
	push $2
	cthis anplayz
	end method
	method anplaypos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	cthis setpos
	push 1
	popax
	sub 0,$a
	cthis play
	end method
	method anplayposgr
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	cthis ansetposgr
	push 1
	popax
	sub 0,$a
	cthis play
	end method
	method anplaypos2
	localint $1
	localint $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	cthis setpos
	push $3
	cthis play
	end method
	method anplaypos3
	localint $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	cthis setpos
	push $3
	cthis play
	end method
	method anhide
	push 0
	cthis stop
	cthis hide
	end method
	method andownpos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	cthis geth
	pop $b
	popax
	sub $a,$b
	cthis setpos
	end method
	method ansetbpos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	cthis lodx
	pop $b
	popax
	sub $a,$b
	push $2
	cthis lody
	pop $b
	popax
	sub $a,$b
	cthis setpos
	end method
	method anonscreen
	cthis getcx
	cthis getcy
	cthis getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	cthis geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	call clsurf,inscreen
	ret
	end method
	method objplayfin
	localstring $1
	pop $1
	push "onfinish"
	push $1
	cthis addmethod
	cthis play
	end method
	method objplayloop
	push "onfinish"
	push "_stdsndloop"
	cthis addmethod
	cthis play
	end method
	method anplayfin
	localint $1
	localstring $2
	pop $2
	pop $1
	push "onfinish"
	push $2
	cthis addmethod
	push $1
	cthis play
	end method
	end class

	module classdbreader
	method init
	new db,dbl
	end method
	method readdb
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
	localint $3
	call dbl,getrowsno
	pop $3
l51:
	push $2
	push $3
	pop $b
	popax
	cmp $a,$b
	jl l52
	push 0
	jmp l53
l52:
	push 1
l53:
	popax
	cmp $a,0
	je l54
	push $1
	popax
	spush $a
	push $2
	spop $d
	cthis [$d]
	add $2,1
	pop $2
	jmp l51
l54:
	end method
	method readrow
	localstring $1
	localstring $2
	pop $2
	pop $1
	localint $3
	push $1
	call dbl,findbyrow
	pop $3
	push $3
	push 0
	pop $b
	popax
	cmp $a,$b
	jae l56
	push 0
	jmp l57
l56:
	push 1
l57:
	popax
	cmp $a,0
	je l58
	push $2
	popax
	spush $a
	push $3
	spop $d
	cthis [$d]
	jmp l55
l58:
l55:
	end method
	end module

	new img,imglobcurs
	module bsms
	method init
	new img,imgstd
	new img,imgact
	push "configs/kursorstd.png"
	push "configs/kursoract.png"
	cthis load
	new int,msid
	push 0
	pop msid
	end method
	method load
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	call imgstd,load
	push $2
	call imgact,load
	push "imgact"
	call imglobcurs,copy
	call imglobcurs,hide
	call imgstd,hide
	call imgact,hide
	cthis reset
	push "imgstd"
	call engine,stdbutcursor
	end method
	method setinitial
	call mouse,stdcursor
	push 0
	pop msid
	end method
	method setstd
	push "imgstd"
	call mouse,setcursor
	push "imgstd"
	call engine,stdbutcursor
	push 1
	pop msid
	end method
	method setact
	push "imgact"
	call mouse,setcursor
	push 2
	pop msid
	end method
	method setown
	push 3
	pop msid
	end method
	method isinitial
	push msid
	push 0
	pop $b
	popax
	cmp $a,$b
	je l60
	push 0
	jmp l61
l60:
	push 1
l61:
	popax
	cmp $a,0
	je l62
	push 1
	ret
	jmp l59
l62:
	push 0
	ret
l59:
	end method
	method isstd
	push msid
	push 1
	pop $b
	popax
	cmp $a,$b
	je l64
	push 0
	jmp l65
l64:
	push 1
l65:
	popax
	cmp $a,0
	je l66
	push 1
	ret
	jmp l63
l66:
	push 0
	ret
l63:
	end method
	method isact
	push msid
	push 2
	pop $b
	popax
	cmp $a,$b
	je l68
	push 0
	jmp l69
l68:
	push 1
l69:
	popax
	cmp $a,0
	je l70
	push 1
	ret
	jmp l67
l70:
	push 0
	ret
l67:
	end method
	method isown
	push msid
	push 3
	pop $b
	popax
	cmp $a,$b
	je l72
	push 0
	jmp l73
l72:
	push 1
l73:
	popax
	cmp $a,0
	je l74
	push 1
	ret
	jmp l71
l74:
	push 0
	ret
l71:
	end method
	end module

	module clsav
	method init
	new vector,vqsav
	push "string"
	call vqsav,type
	new vector,vvqsav
	push "string"
	call vvqsav,type
	end method
	method free
	call vqsav,free
	call vvqsav,free
	end method
	method load
	localstring $1
	pop $1
	cthis free
	end method
	method save
	localstring $1
	pop $1
	end method
	method qadd
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	call vqsav,add
	push $2
	call vvqsav,add
	end method
	method qsave
	localstring $1
	localstring $2
	pop $2
	pop $1
	localint $3
	push $1
	call vqsav,find
	pop $3
	push $3
	push 0
	pop $b
	popax
	cmp $a,$b
	jl l76
	push 0
	jmp l77
l76:
	push 1
l77:
	popax
	cmp $a,0
	je l78
	push $1
	push $2
	cthis qadd
	jmp l75
l78:
	push $3
	push $2
	call vvqsav,set
l75:
	end method
	method qload
	localstring $1
	localstring $2
	pop $2
	pop $1
	localint $3
	push $1
	call vqsav,find
	pop $3
	push $3
	push 0
	pop $b
	popax
	cmp $a,$b
	jl l80
	push 0
	jmp l81
l80:
	push 1
l81:
	popax
	cmp $a,0
	je l82
	push $1
	push $2
	cthis qadd
	push $2
	ret
	jmp l79
l82:
	push $3
	call vvqsav,get
	ret
l79:
	end method
	end module

	class classquest
	method init
	new vector,vqst
	push "string"
	call vqst,type
	end method
	method isdone
	localstring $1
	pop $1
	push $1
	call vqst,contains
	ret
	end method
	method notdone
	localstring $1
	pop $1
	push $1
	call vqst,contains
	push 0
	pop $b
	popax
	cmp $a,$b
	je l84
	push 0
	jmp l85
l84:
	push 1
l85:
	popax
	cmp $a,0
	je l86
	push 1
	ret
	jmp l83
l86:
l83:
	push 0
	ret
	end method
	method done
	localstring $1
	pop $1
	push $1
	call vqst,contains
	push 0
	pop $b
	popax
	cmp $a,$b
	je l88
	push 0
	jmp l89
l88:
	push 1
l89:
	popax
	cmp $a,0
	je l90
	push $1
	call vqst,add
	jmp l87
l90:
l87:
	end method
	method reset
	call vqst,free
	end method
	method save
	localstring $1
	pop $1
	push $1
	call vqst,save
	end method
	method load
	localstring $1
	pop $1
	push $1
	call vqst,load
	end method
	end class

	new classquest,clqs
	module cllen
	method init
	new int,il1
	new int,ilx
	new int,ily
	end method
	method ilenx
	push ilx
	ret
	end method
	method ileny
	push ily
	ret
	end method
	method ilen4
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	pop $b
	popax
	sub $a,$b
	call $1,abs
	ret
	end method
	method ilen3
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	popax
	spush $a
	spop $a
	call [$a],getcx
	push $1
	popax
	spush $a
	spop $a
	call [$a],getcy
	push $2
	popax
	spush $a
	spop $a
	call [$a],getcx
	push $2
	popax
	spush $a
	spop $a
	call [$a],getcy
	cthis ilen
	ret
	end method
	method ilen2
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	popax
	spush $a
	spop $a
	call [$a],getcx
	push $1
	popax
	spush $a
	spop $a
	call [$a],getcy
	push $2
	push $3
	cthis ilen
	ret
	end method
	method ilen
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $3
	pop $b
	popax
	sub $a,$b
	pop ilx
	push $2
	push $4
	pop $b
	popax
	sub $a,$b
	pop ily
	push ilx
	push ily
	call il1,length
	ret
	end method
	method iclenx
	localstring $1
	localint $2
	pop $2
	pop $1
	push $1
	popax
	spush $a
	spop $a
	call [$a],getcx
	push $2
	pop $b
	popax
	sub $a,$b
	ret
	end method
	method iclenx2
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	popax
	spush $a
	spop $a
	call [$a],getcx
	push $2
	popax
	spush $a
	spop $a
	call [$a],getcx
	pop $b
	popax
	sub $a,$b
	ret
	end method
	method icleny
	localstring $1
	localint $2
	pop $2
	pop $1
	push $1
	popax
	spush $a
	spop $a
	call [$a],getcy
	push $2
	pop $b
	popax
	sub $a,$b
	ret
	end method
	method icleny2
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	popax
	spush $a
	spop $a
	call [$a],getcy
	push $2
	popax
	spush $a
	spop $a
	call [$a],getcy
	pop $b
	popax
	sub $a,$b
	ret
	end method
	method isbetween2
	localstring $1
	localstring $2
	localint $3
	localint $4
	localint $5
	localint $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	popax
	spush $a
	spop $a
	call [$a],getcx
	push $2
	popax
	spush $a
	spop $a
	call [$a],getcy
	push $3
	push $4
	push $5
	push $6
	cthis isbetween
	ret
	end method
	method isbetween
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	localint $7
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	cthis ilen
	pop il1
	push ilx
	push $4
	pop $b
	popax
	cmp $a,$b
	jae l92
	push 0
	jmp l93
l92:
	push 1
l93:
	push ilx
	push $6
	pop $b
	popax
	cmp $a,$b
	jle l94
	push 0
	jmp l95
l94:
	push 1
l95:
	popax
	pop $b
	and $a,$b
	push ily
	push $5
	pop $b
	popax
	cmp $a,$b
	jae l96
	push 0
	jmp l97
l96:
	push 1
l97:
	popax
	pop $b
	and $a,$b
	push ily
	push $7
	pop $b
	popax
	cmp $a,$b
	jle l98
	push 0
	jmp l99
l98:
	push 1
l99:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l100
	push 1
	ret
	jmp l91
l100:
	push 0
	ret
l91:
	end method
	end module

	module clsurf
	method init
	end method
	method isin
	localint $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $3
	pop $b
	popax
	cmp $a,$b
	jae l102
	push 0
	jmp l103
l102:
	push 1
l103:
	push $1
	push $5
	pop $b
	popax
	cmp $a,$b
	jle l104
	push 0
	jmp l105
l104:
	push 1
l105:
	popax
	pop $b
	and $a,$b
	push $2
	push $4
	pop $b
	popax
	cmp $a,$b
	jae l106
	push 0
	jmp l107
l106:
	push 1
l107:
	popax
	pop $b
	and $a,$b
	push $2
	push $6
	pop $b
	popax
	cmp $a,$b
	jle l108
	push 0
	jmp l109
l108:
	push 1
l109:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l110
	push 1
	ret
	jmp l101
l110:
	push 0
	ret
l101:
	end method
	method inscreen
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push $3
	pop $b
	popax
	sub $a,$b
	push 0
	push $4
	pop $b
	popax
	sub $a,$b
	push 800
	push $3
	pop $b
	popax
	add $a,$b
	push 600
	push $4
	pop $b
	popax
	add $a,$b
	cthis isin
	ret
	end method
	end module

	module clanpack
	method init
	end method
	method _csetbpos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	cthis lodx
	pop $b
	popax
	sub $a,$b
	push $2
	cthis lody
	pop $b
	popax
	sub $a,$b
	cthis setpos
	end method
	method _cbuildpomvars
	new int,_ixp
	new int,_iyp
	end method
	method _csaverelpos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	cthis getpx
	pop $b
	popax
	sub $a,$b
	pop _ixp
	push $2
	cthis getpy
	pop $b
	popax
	sub $a,$b
	pop _iyp
	end method
	method _csetrelpos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push _ixp
	pop $b
	popax
	sub $a,$b
	push $2
	push _iyp
	pop $b
	popax
	sub $a,$b
	cthis setbpos
	end method
	method _cmssaverelpos
	call mouse,getpx
	call mouse,getpy
	cthis saverelpos
	end method
	method _cmssetrelpos
	call mouse,getpx
	call mouse,getpy
	cthis setrelpos
	end method
	method _crplay
	localstring $1
	pop $1
	push $1
	cthis isplaying
	push 0
	pop $b
	popax
	cmp $a,$b
	je l112
	push 0
	jmp l113
l112:
	push 1
l113:
	popax
	cmp $a,0
	je l114
	push $1
	cthis play
	jmp l111
l114:
l111:
	end method
	method resizemethods
	localstring $1
	pop $1
	push $1
	popax
	spush $a
	push "_cbuildpomvars"
	push "_cbuildpomvars"
	spop $a
	call [$a],addmethod
	push $1
	popax
	spush $a
	spop $a
	call [$a],_cbuildpomvars
	push $1
	popax
	spush $a
	push "setbpos"
	push "_csetbpos"
	spop $a
	call [$a],addmethod
	push $1
	popax
	spush $a
	push "saverelpos"
	push "_csaverelpos"
	spop $a
	call [$a],addmethod
	push $1
	popax
	spush $a
	push "setrelpos"
	push "_csetrelpos"
	spop $a
	call [$a],addmethod
	push $1
	popax
	spush $a
	push "mssaverelpos"
	push "_cmssaverelpos"
	spop $a
	call [$a],addmethod
	push $1
	popax
	spush $a
	push "mssetrelpos"
	push "_cmssetrelpos"
	spop $a
	call [$a],addmethod
	push $1
	popax
	spush $a
	push "rplay"
	push "_crplay"
	spop $a
	call [$a],addmethod
	end method
	end module

	class classbgmover
	method init
	new string,sim1
	new string,sim2
	end method
	method _load
	localstring $1
	localstring $2
	localstring $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $2
	popax
	spush $a
	push "im1"
	push $3
	push $4
	spop $d
	clparent newvars,[$d]
	push $1
	popax
	spush $a
	spop $d
	new [$d],im2
	push "im1"
	call im2,copy
	end method
	method loadimg
	localstring $1
	localint $2
	pop $2
	pop $1
	push "img"
	push "newimg"
	push $1
	push $2
	cthis _load
	end method
	method loadan
	localstring $1
	localint $2
	pop $2
	pop $1
	push "anima"
	push "newanima"
	push $1
	push $2
	cthis _load
	end method
	method _set
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	popax
	spush $a
	spop $d
	new [$d],im1
	push $1
	popax
	spush $a
	spop $d
	new [$d],im2
	push $2
	call im1,copy
	push $2
	call im2,copy
	end method
	method setimg
	localstring $1
	pop $1
	push "img"
	push $1
	cthis _set
	end method
	method setan
	localstring $1
	pop $1
	push "anima"
	push $1
	cthis _set
	end method
	method setdir
	localstring $1
	pop $1
	push $1
	push "up"
	pop $b
	popax
	cmp $a,$b
	je l116
	push 0
	jmp l117
l116:
	push 1
l117:
	push $1
	push "down"
	pop $b
	popax
	cmp $a,$b
	je l118
	push 0
	jmp l119
l118:
	push 1
l119:
	popax
	pop $b
	or $a,$b
	popax
	cmp $a,0
	je l120
	push 0
	push 0
	call im1,setpos
	push 0
	call im1,getey
	call im2,setpos
	push "im1"
	pop sim1
	push "im2"
	pop sim2
	jmp l115
l120:
	push $1
	push "left"
	pop $b
	popax
	cmp $a,$b
	je l122
	push 0
	jmp l123
l122:
	push 1
l123:
	push $1
	push "right"
	pop $b
	popax
	cmp $a,$b
	je l124
	push 0
	jmp l125
l124:
	push 1
l125:
	popax
	pop $b
	or $a,$b
	popax
	cmp $a,0
	je l126
	push 0
	push 0
	call im1,setpos
	call im1,getex
	push 0
	call im2,setpos
	push "im1"
	pop sim1
	push "im2"
	pop sim2
	jmp l121
l126:
l121:
l115:
	end method
	method movup
	localint $1
	pop $1
	push 0
	push $1
	call im1,move
	push 0
	push $1
	call im2,move
	push sim2
	popax
	spush $a
	spop $a
	call [$a],getey
	push 600
	pop $b
	popax
	cmp $a,$b
	jl l128
	push 0
	jmp l129
l128:
	push 1
l129:
	popax
	cmp $a,0
	je l130
	push sim1
	popax
	spush $a
	push 0
	push sim2
	popax
	spush $a
	spop $a
	call [$a],getey
	spop $a
	call [$a],setpos
	push "sim1"
	push "sim2"
	clparent newvars,swap
	jmp l127
l130:
l127:
	end method
	method movdown
	localint $1
	pop $1
	push 0
	push $1
	call im1,move
	push 0
	push $1
	call im2,move
	push sim1
	popax
	spush $a
	spop $a
	call [$a],getpy
	push 0
	pop $b
	popax
	cmp $a,$b
	ja l132
	push 0
	jmp l133
l132:
	push 1
l133:
	popax
	cmp $a,0
	je l134
	push sim2
	popax
	spush $a
	push 0
	push sim1
	popax
	spush $a
	spop $a
	call [$a],getpy
	push sim2
	popax
	spush $a
	spop $a
	call [$a],geth
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setpos
	push "sim1"
	push "sim2"
	clparent newvars,swap
	jmp l131
l134:
l131:
	end method
	method movleft
	localint $1
	pop $1
	push $1
	push 0
	call im1,move
	push $1
	push 0
	call im2,move
	push sim2
	popax
	spush $a
	spop $a
	call [$a],getex
	push 800
	pop $b
	popax
	cmp $a,$b
	jl l136
	push 0
	jmp l137
l136:
	push 1
l137:
	popax
	cmp $a,0
	je l138
	push sim1
	popax
	spush $a
	push sim2
	popax
	spush $a
	spop $a
	call [$a],getex
	push 0
	spop $a
	call [$a],setpos
	push "sim1"
	push "sim2"
	clparent newvars,swap
	jmp l135
l138:
l135:
	end method
	method movright
	localint $1
	pop $1
	push $1
	push 0
	call im1,move
	push $1
	push 0
	call im2,move
	push sim1
	popax
	spush $a
	spop $a
	call [$a],getpx
	push 0
	pop $b
	popax
	cmp $a,$b
	ja l140
	push 0
	jmp l141
l140:
	push 1
l141:
	popax
	cmp $a,0
	je l142
	push sim2
	popax
	spush $a
	push sim1
	popax
	spush $a
	spop $a
	call [$a],getpx
	push sim2
	popax
	spush $a
	spop $a
	call [$a],getw
	pop $b
	popax
	sub $a,$b
	push 0
	spop $a
	call [$a],setpos
	push "sim1"
	push "sim2"
	clparent newvars,swap
	jmp l139
l142:
l139:
	end method
	end class

	class classancounter
	method init
	new int,iile
	new int,id
	new string,_san
	new vector,_vs
	new int,_pos
	end method
	method set
	localstring $1
	localint $2
	pop $2
	pop $1
	push $1
	pop _san
	push $2
	pop iile
	push 0
	pop id
	call $1,length
	pop _pos
	push $2
	push 0
	call _vs,resize
	end method
	method get
	localstring $1
	push _san
	push id
	pop $b
	popax
	add $a,$b
	pop $1
	push id
	push 1
	pop $b
	popax
	add $a,$b
	push iile
	pop $b
	popax
	div $a,$b
	push $d
	pop id
	push $1
	ret
	end method
	method getf
	localint $1
	push 0
	pop $1
l143:
	push $1
	push iile
	pop $b
	popax
	cmp $a,$b
	jl l144
	push 0
	jmp l145
l144:
	push 1
l145:
	popax
	cmp $a,0
	je l146
	jmp l148
l147:
	add $1,1
	pop $1
	jmp l143
l148:
	push $1
	call _vs,get
	push 0
	pop $b
	popax
	cmp $a,$b
	je l150
	push 0
	jmp l151
l150:
	push 1
l151:
	popax
	cmp $a,0
	je l152
	push $1
	push 1
	call _vs,set
	push _san
	push $1
	pop $b
	popax
	add $a,$b
	ret
	jmp l149
l152:
l149:
	jmp l147
l146:
	push "null"
	ret
	end method
	method retf
	localstring $1
	pop $1
	push _pos
	push 10
	call $1,getb
	push 0
	call _vs,set
	end method
	method isfree
	localint $1
	pop $1
	push $1
	call _vs,get
	ret
	end method
	method getile
	push iile
	ret
	end method
	end class

	class classlives
	method init
	end method
	method set
	localint $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	localint $7
	localint $8
	localint $9
	localint $10
	localint $11
	localint $12
	localint $13
	localint $14
	localstring $15
	pop $15
	pop $14
	pop $13
	pop $12
	pop $11
	pop $10
	pop $9
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	new int,iside
	push $15
	push "left"
	pop $b
	popax
	cmp $a,$b
	je l154
	push 0
	jmp l155
l154:
	push 1
l155:
	popax
	cmp $a,0
	je l156
	push 1
	popax
	sub 0,$a
	pop iside
	jmp l153
l156:
	push 1
	pop iside
l153:
	new int,iilezyc
	push $1
	pop iilezyc
	new int,ibum
	push $2
	pop ibum
	localint $16
	push iilezyc
	push ibum
	pop $b
	popax
	mul $a,$b
	pop $16
	new int,iposxsila
	push $3
	pop iposxsila
	new int,iendxsila
	push $3
	push $16
	pop $b
	popax
	add $a,$b
	pop iendxsila
	new int,iposysila
	push $4
	pop iposysila
	push "imgsilapodkladka"
	push $16
	push $5
	push $6
	push $7
	push $8
	push $9
	push $14
	push 1
	pop $b
	popax
	sub $a,$b
	clparent newvars,newcanvas
	push "imgsila"
	push $16
	push $5
	push $10
	push $11
	push $12
	push $13
	push $14
	clparent newvars,newcanvas
	push iposxsila
	push iposysila
	call imgsila,setpos
	push iposxsila
	push 0
	call imgsila,getex
	push 600
	call imgsila,clip
	push iposxsila
	push iposysila
	call imgsilapodkladka,setpos
	end method
	method reset
	push iposxsila
	push iposysila
	call imgsila,setpos
	end method
	method damage
	localint $1
	pop $1
	push iside
	push $1
	pop $b
	popax
	mul $a,$b
	push ibum
	pop $b
	popax
	mul $a,$b
	push 0
	call imgsila,move
	end method
	method destroyed
	push iside
	push 0
	pop $b
	popax
	cmp $a,$b
	jl l158
	push 0
	jmp l159
l158:
	push 1
l159:
	popax
	cmp $a,0
	je l160
	call imgsila,getex
	push iposxsila
	pop $b
	popax
	cmp $a,$b
	jl l162
	push 0
	jmp l163
l162:
	push 1
l163:
	popax
	cmp $a,0
	je l164
	push 1
	ret
	jmp l161
l164:
	push 0
	ret
l161:
	jmp l157
l160:
	call imgsila,getpx
	push iendxsila
	pop $b
	popax
	cmp $a,$b
	ja l166
	push 0
	jmp l167
l166:
	push 1
l167:
	popax
	cmp $a,0
	je l168
	push 1
	ret
	jmp l165
l168:
	push 0
	ret
l165:
l157:
	end method
	method heal
	localint $1
	pop $1
	push iside
	popax
	sub 0,$a
	push $1
	pop $b
	popax
	mul $a,$b
	push ibum
	pop $b
	popax
	mul $a,$b
	push 0
	call imgsila,move
	push iside
	push 0
	pop $b
	popax
	cmp $a,$b
	ja l170
	push 0
	jmp l171
l170:
	push 1
l171:
	popax
	cmp $a,0
	je l172
	call imgsila,getpx
	push iposxsila
	pop $b
	popax
	cmp $a,$b
	jl l174
	push 0
	jmp l175
l174:
	push 1
l175:
	popax
	cmp $a,0
	je l176
	push iposxsila
	push iposysila
	call imgsila,setpos
	jmp l173
l176:
l173:
	jmp l169
l172:
	call imgsila,getpx
	push iposxsila
	pop $b
	popax
	cmp $a,$b
	ja l178
	push 0
	jmp l179
l178:
	push 1
l179:
	popax
	cmp $a,0
	je l180
	push iposxsila
	push iposysila
	call imgsila,setpos
	jmp l177
l180:
l177:
l169:
	end method
	end class

	class classtriangle
	method init
	new real,rdx
	new real,rdy
	end method
	method getdx
	push rdx
	ret
	end method
	method getdy
	push rdy
	ret
	end method
	method talesxy
	localreal $1
	localreal $2
	localreal $3
	localreal $4
	localreal $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	popax
	sub $3,$a
	pop $3
	push $2
	popax
	sub $4,$a
	pop $4
	push $3
	push 0
	pop $b
	popax
	cmp $a,$b
	je l182
	push 0
	jmp l183
l182:
	push 1
l183:
	push $4
	push 0
	pop $b
	popax
	cmp $a,$b
	je l184
	push 0
	jmp l185
l184:
	push 1
l185:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l186
	push 0
	pop rdx
	push 0
	pop rdy
	push 0
	ret
	jmp l181
l186:
	push $3
	push $4
	call $1,length
	pop $1
	push $3
	push $1
	pop $b
	popax
	div $a,$b
	psax
	push $5
	pop $b
	popax
	mul $a,$b
	pop rdx
	push $4
	push $1
	pop $b
	popax
	div $a,$b
	psax
	push $5
	pop $b
	popax
	mul $a,$b
	pop rdy
	push $1
	ret
l181:
	end method
	end class

	class classwalker
	parent classtriangle
	method init
	clparent classtriangle,init
	new real,rodleg
	new int,_ix
	new int,_iy
	end method
	method countsteps
	localint $1
	localint $2
	localint $3
	localint $4
	localreal $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $3
	push $4
	cthis setdest
	push $1
	push $2
	push $3
	push $4
	push $5
	cthis talesxy
	pop rodleg
	push rodleg
	ret
	end method
	method setdest
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	pop _ix
	push $2
	pop _iy
	end method
	method getdestx
	push _ix
	ret
	end method
	method getdesty
	push _iy
	ret
	end method
	method reached
	localint $1
	localint $2
	pop $2
	pop $1
	localreal $3
	push $1
	push _ix
	pop $b
	popax
	sub $a,$b
	push $2
	push _iy
	pop $b
	popax
	sub $a,$b
	call $3,length
	pop $3
	push $3
	push rodleg
	pop $b
	popax
	cmp $a,$b
	jae l188
	push 0
	jmp l189
l188:
	push 1
l189:
	popax
	cmp $a,0
	je l190
	push 1
	ret
	jmp l187
l190:
	push $3
	pop rodleg
	push 0
	ret
l187:
	end method
	method reached2
	localint $1
	localint $2
	pop $2
	pop $1
	localreal $3
	push $1
	push _ix
	pop $b
	popax
	sub $a,$b
	push $2
	push _iy
	pop $b
	popax
	sub $a,$b
	call $3,length
	pop $3
	push $3
	push rodleg
	pop $b
	popax
	cmp $a,$b
	ja l192
	push 0
	jmp l193
l192:
	push 1
l193:
	popax
	cmp $a,0
	je l194
	push 1
	ret
	jmp l191
l194:
	push $3
	pop rodleg
	push 0
	ret
l191:
	end method
	end class

	class gmobjvec
	method init
	new vector,lsim
	push "string"
	call lsim,type
	end method
	method size
	call lsim,size
	ret
	end method
	method hash
	call lsim,hash
	end method
	method first
	push 0
	call lsim,get
	ret
	end method
	method last
	call lsim,size
	push 1
	pop $b
	popax
	sub $a,$b
	call lsim,get
	ret
	end method
	method print
	call lsim,print
	end method
	method get
	localint $1
	pop $1
	push $1
	call lsim,get
	ret
	end method
	method add
	localstring $1
	pop $1
	push $1
	call lsim,add
	end method
	method addonce
	localstring $1
	pop $1
	push $1
	call lsim,contains
	push 0
	pop $b
	popax
	cmp $a,$b
	je l196
	push 0
	jmp l197
l196:
	push 1
l197:
	popax
	cmp $a,0
	je l198
	push $1
	call lsim,add
	jmp l195
l198:
l195:
	end method
	method remove
	localstring $1
	pop $1
	push $1
	call lsim,remove
	end method
	method find
	localstring $1
	pop $1
	push $1
	call lsim,find
	ret
	end method
	method contains
	localstring $1
	pop $1
	push $1
	call lsim,contains
	ret
	end method
	method addgroup
	localstring $1
	localint $2
	pop $2
	pop $1
	push $1
	push 0
	push $2
	push 1
	pop $b
	popax
	sub $a,$b
	cthis addgroup2
	end method
	method addgroup2
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
l199:
	push $2
	push $3
	pop $b
	popax
	cmp $a,$b
	jle l200
	push 0
	jmp l201
l200:
	push 1
l201:
	popax
	cmp $a,0
	je l202
	push $1
	push $2
	pop $b
	popax
	add $a,$b
	cthis add
	add $2,1
	pop $2
	jmp l199
l202:
	end method
	method movefrom
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	localint $4
	push $1
	cthis find
	pop $4
	push $4
	push 0
	pop $b
	popax
	cmp $a,$b
	jae l204
	push 0
	jmp l205
l204:
	push 1
l205:
	popax
	cmp $a,0
	je l206
l207:
	push $4
	call lsim,size
	pop $b
	popax
	cmp $a,$b
	jl l208
	push 0
	jmp l209
l208:
	push 1
l209:
	popax
	cmp $a,0
	je l210
	push $4
	call lsim,get
	popax
	spush $a
	push $2
	push $3
	spop $a
	call [$a],move
	add $4,1
	pop $4
	jmp l207
l210:
	jmp l203
l206:
l203:
	end method
	method move
	localint $1
	localint $2
	pop $2
	pop $1
	localint $3
	call lsim,size
	pop $3
	localint $4
	push 0
	pop $4
l211:
	push $4
	push $3
	pop $b
	popax
	cmp $a,$b
	jl l212
	push 0
	jmp l213
l212:
	push 1
l213:
	popax
	cmp $a,0
	je l214
	jmp l216
l215:
	add $4,1
	pop $4
	jmp l211
l216:
	push $4
	call lsim,get
	popax
	spush $a
	push $1
	push $2
	spop $a
	call [$a],move
	jmp l215
l214:
	end method
	method setpos
	localint $1
	localint $2
	pop $2
	pop $1
	localint $3
	push 0
	pop $3
l217:
	push $3
	call lsim,size
	pop $b
	popax
	cmp $a,$b
	jl l218
	push 0
	jmp l219
l218:
	push 1
l219:
	popax
	cmp $a,0
	je l220
	jmp l222
l221:
	add $3,1
	pop $3
	jmp l217
l222:
	push $3
	call lsim,get
	popax
	spush $a
	push $1
	push $2
	spop $a
	call [$a],setpos
	jmp l221
l220:
	end method
	method show
	localint $1
	push 0
	pop $1
l223:
	push $1
	call lsim,size
	pop $b
	popax
	cmp $a,$b
	jl l224
	push 0
	jmp l225
l224:
	push 1
l225:
	popax
	cmp $a,0
	je l226
	jmp l228
l227:
	add $1,1
	pop $1
	jmp l223
l228:
	push $1
	call lsim,get
	popax
	spush $a
	spop $a
	call [$a],show
	jmp l227
l226:
	end method
	method hide
	localint $1
	push 0
	pop $1
l229:
	push $1
	call lsim,size
	pop $b
	popax
	cmp $a,$b
	jl l230
	push 0
	jmp l231
l230:
	push 1
l231:
	popax
	cmp $a,0
	je l232
	jmp l234
l233:
	add $1,1
	pop $1
	jmp l229
l234:
	push $1
	call lsim,get
	popax
	spush $a
	spop $a
	call [$a],hide
	jmp l233
l232:
	end method
	method stop
	localint $1
	pop $1
	localint $2
	push 0
	pop $2
l235:
	push $2
	call lsim,size
	pop $b
	popax
	cmp $a,$b
	jl l236
	push 0
	jmp l237
l236:
	push 1
l237:
	popax
	cmp $a,0
	je l238
	jmp l240
l239:
	add $2,1
	pop $2
	jmp l235
l240:
	push $2
	call lsim,get
	popax
	spush $a
	push $1
	spop $a
	call [$a],stop
	jmp l239
l238:
	end method
	method play
	localint $1
	push 0
	pop $1
l241:
	push $1
	call lsim,size
	pop $b
	popax
	cmp $a,$b
	jl l242
	push 0
	jmp l243
l242:
	push 1
l243:
	popax
	cmp $a,0
	je l244
	jmp l246
l245:
	add $1,1
	pop $1
	jmp l241
l246:
	push $1
	call lsim,get
	popax
	spush $a
	spop $a
	call [$a],play
	jmp l245
l244:
	end method
	method nplay
	localint $1
	pop $1
	localint $2
	push 0
	pop $2
l247:
	push $2
	call lsim,size
	pop $b
	popax
	cmp $a,$b
	jl l248
	push 0
	jmp l249
l248:
	push 1
l249:
	popax
	cmp $a,0
	je l250
	jmp l252
l251:
	add $2,1
	pop $2
	jmp l247
l252:
	push $2
	call lsim,get
	popax
	spush $a
	push $1
	spop $a
	call [$a],play
	jmp l251
l250:
	end method
	method splay
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l253:
	push $2
	call lsim,size
	pop $b
	popax
	cmp $a,$b
	jl l254
	push 0
	jmp l255
l254:
	push 1
l255:
	popax
	cmp $a,0
	je l256
	jmp l258
l257:
	add $2,1
	pop $2
	jmp l253
l258:
	push $2
	call lsim,get
	popax
	spush $a
	push $1
	spop $a
	call [$a],play
	jmp l257
l256:
	end method
	method setdelay
	localint $1
	pop $1
	localint $2
	push 0
	pop $2
l259:
	push $2
	call lsim,size
	pop $b
	popax
	cmp $a,$b
	jl l260
	push 0
	jmp l261
l260:
	push 1
l261:
	popax
	cmp $a,0
	je l262
	jmp l264
l263:
	add $2,1
	pop $2
	jmp l259
l264:
	push $2
	call lsim,get
	popax
	spush $a
	push $1
	spop $a
	call [$a],setdelay
	jmp l263
l262:
	end method
	method addmethod
	localstring $1
	localstring $2
	pop $2
	pop $1
	localint $3
	push 0
	pop $3
l265:
	push $3
	call lsim,size
	pop $b
	popax
	cmp $a,$b
	jl l266
	push 0
	jmp l267
l266:
	push 1
l267:
	popax
	cmp $a,0
	je l268
	jmp l270
l269:
	add $3,1
	pop $3
	jmp l265
l270:
	push $3
	call lsim,get
	popax
	spush $a
	push $1
	push $2
	spop $a
	call [$a],addmethod
	jmp l269
l268:
	end method
	method getimg
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	localint $5
	call lsim,size
	pop $5
	localint $6
	push 0
	pop $6
l271:
	push $6
	push $5
	pop $b
	popax
	cmp $a,$b
	jl l272
	push 0
	jmp l273
l272:
	push 1
l273:
	popax
	cmp $a,0
	je l274
	jmp l276
l275:
	add $6,1
	pop $6
	jmp l271
l276:
	push $6
	call lsim,get
	popax
	spush $a
	push $1
	push $2
	push $3
	push $4
	spop $a
	call [$a],isin
	push 1
	pop $b
	popax
	cmp $a,$b
	je l278
	push 0
	jmp l279
l278:
	push 1
l279:
	popax
	cmp $a,0
	je l280
	push $6
	call lsim,get
	ret
	jmp l277
l280:
l277:
	jmp l275
l274:
	push "null"
	ret
	end method
	method ssetframe
	localstring $1
	localint $2
	pop $2
	pop $1
	localint $3
	push 0
	pop $3
l281:
	push $3
	call lsim,size
	pop $b
	popax
	cmp $a,$b
	jl l282
	push 0
	jmp l283
l282:
	push 1
l283:
	popax
	cmp $a,0
	je l284
	jmp l286
l285:
	add $3,1
	pop $3
	jmp l281
l286:
	push $3
	call lsim,get
	popax
	spush $a
	push $1
	push $2
	spop $a
	call [$a],setframe
	jmp l285
l284:
	end method
	method isetframe
	localint $1
	localint $2
	pop $2
	pop $1
	localint $3
	push 0
	pop $3
l287:
	push $3
	call lsim,size
	pop $b
	popax
	cmp $a,$b
	jl l288
	push 0
	jmp l289
l288:
	push 1
l289:
	popax
	cmp $a,0
	je l290
	jmp l292
l291:
	add $3,1
	pop $3
	jmp l287
l292:
	push $3
	call lsim,get
	popax
	spush $a
	push $1
	push $2
	spop $a
	call [$a],setframe
	jmp l291
l290:
	end method
	method eval
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l293:
	push $2
	call lsim,size
	pop $b
	popax
	cmp $a,$b
	jl l294
	push 0
	jmp l295
l294:
	push 1
l295:
	popax
	cmp $a,0
	je l296
	jmp l298
l297:
	add $2,1
	pop $2
	jmp l293
l298:
	push $2
	call lsim,get
	popax
	spush $a
	push $1
	popax
	spush $a
	spop $d
	spop $a
	call [$a],[$d]
	jmp l297
l296:
	end method
	end class

	class classsound
	method init
	new string,_csplay
	push "null"
	pop _csplay
	end method
	method creset
	push "null"
	pop _csplay
	end method
	method cgetactsnd
	push _csplay
	ret
	end method
	method crselfplay
	localstring $1
	pop $1
	cthis cisplaying
	push 0
	pop $b
	popax
	cmp $a,$b
	je l300
	push 0
	jmp l301
l300:
	push 1
l301:
	popax
	cmp $a,0
	je l302
	push $1
	cthis cbplay
	jmp l299
l302:
	cthis cgetactsnd
	push $1
	pop $b
	popax
	cmp $a,$b
	jne l304
	push 0
	jmp l305
l304:
	push 1
l305:
	popax
	cmp $a,0
	je l306
	push $1
	cthis cbplay
	jmp l303
l306:
l303:
l299:
	end method
	method cbplay
	localstring $1
	pop $1
	push _csplay
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l308
	push 0
	jmp l309
l308:
	push 1
l309:
	popax
	cmp $a,0
	je l310
	push _csplay
	popax
	spush $a
	push 1
	spop $a
	call [$a],stop
	jmp l307
l310:
l307:
	push $1
	pop _csplay
	push $1
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l312
	push 0
	jmp l313
l312:
	push 1
l313:
	popax
	cmp $a,0
	je l314
	push $1
	popax
	spush $a
	spop $a
	call [$a],play
	jmp l311
l314:
l311:
	end method
	method crplay
	localstring $1
	pop $1
	push _csplay
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l316
	push 0
	jmp l317
l316:
	push 1
l317:
	popax
	cmp $a,0
	je l318
	push _csplay
	popax
	spush $a
	spop $a
	call [$a],isplaying
	push 1
	pop $b
	popax
	cmp $a,$b
	je l320
	push 0
	jmp l321
l320:
	push 1
l321:
	popax
	cmp $a,0
	je l322
	ret
	jmp l319
l322:
l319:
	jmp l315
l318:
l315:
	push $1
	pop _csplay
	push $1
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l324
	push 0
	jmp l325
l324:
	push 1
l325:
	popax
	cmp $a,0
	je l326
	push $1
	popax
	spush $a
	spop $a
	call [$a],play
	jmp l323
l326:
l323:
	end method
	method crandplay
	localstring $1
	localint $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $2
	call $2,rand
	push 0
	pop $b
	popax
	cmp $a,$b
	je l328
	push 0
	jmp l329
l328:
	push 1
l329:
	popax
	cmp $a,0
	je l330
	push "c"
	push $3
	pop $b
	popax
	add $a,$b
	push "play"
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	push $1
	spop $d
	cthis [$d]
	jmp l327
l330:
l327:
	end method
	method cactsndstop
	localint $1
	pop $1
	push _csplay
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l332
	push 0
	jmp l333
l332:
	push 1
l333:
	popax
	cmp $a,0
	je l334
	push _csplay
	popax
	spush $a
	push $1
	spop $a
	call [$a],stop
	jmp l331
l334:
l331:
	end method
	method cisplaying
	push _csplay
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l336
	push 0
	jmp l337
l336:
	push 1
l337:
	popax
	cmp $a,0
	je l338
	push _csplay
	popax
	spush $a
	spop $a
	call [$a],isplaying
	ret
	jmp l335
l338:
	push 0
	ret
l335:
	end method
	method crbgplay
	localstring $1
	pop $1
	push $1
	push "null"
	pop $b
	popax
	cmp $a,$b
	je l340
	push 0
	jmp l341
l340:
	push 1
l341:
	popax
	cmp $a,0
	je l342
	ret
	jmp l339
l342:
l339:
	push $1
	popax
	spush $a
	spop $a
	call [$a],isplaying
	push 0
	pop $b
	popax
	cmp $a,$b
	je l344
	push 0
	jmp l345
l344:
	push 1
l345:
	popax
	cmp $a,0
	je l346
	push $1
	popax
	spush $a
	spop $a
	call [$a],play
	jmp l343
l346:
l343:
	end method
	end class

	class classsndbank
	method init
	new int,itype
	new int,ilicz
	push 0
	pop ilicz
	new int,iile
	new string,splay
	push "null"
	pop splay
	new string,ssnd
	push "snd"
	pop ssnd
	end method
	method loadsingle
	localstring $1
	localint $2
	pop $2
	pop $1
	push $2
	push 0
	pop $b
	popax
	cmp $a,$b
	jle l348
	push 0
	jmp l349
l348:
	push 1
l349:
	popax
	cmp $a,0
	je l350
	push 0
	pop iile
	ret
	jmp l347
l350:
l347:
	push $2
	pop iile
	push 0
	pop itype
	localint $3
	push 0
	pop $3
l351:
	push $3
	push $2
	pop $b
	popax
	cmp $a,$b
	jl l352
	push 0
	jmp l353
l352:
	push 1
l353:
	popax
	cmp $a,0
	je l354
	jmp l356
l355:
	add $3,1
	pop $3
	jmp l351
l356:
	push ssnd
	push $3
	pop $b
	popax
	add $a,$b
	push $1
	clparent newvars,newsnd
	jmp l355
l354:
	end method
	method load
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $3
	push $2
	pop $b
	popax
	sub $a,$b
	push 1
	pop $b
	popax
	add $a,$b
	pop iile
	push iile
	push 0
	pop $b
	popax
	cmp $a,$b
	jle l358
	push 0
	jmp l359
l358:
	push 1
l359:
	popax
	cmp $a,0
	je l360
	push 0
	pop iile
	ret
	jmp l357
l360:
l357:
	push ssnd
	push 0
	push $1
	push $2
	push $3
	clparent newvars,newsnds
	push $4
	pop itype
	push $5
	push 1
	pop $b
	popax
	cmp $a,$b
	je l362
	push 0
	jmp l363
l362:
	push 1
l363:
	popax
	cmp $a,0
	je l364
	push iile
	call ilicz,rand
	pop ilicz
	jmp l361
l364:
l361:
	end method
	method addmethod
	localstring $1
	localstring $2
	pop $2
	pop $1
	localint $3
	push 0
	pop $3
l365:
	push $3
	push iile
	pop $b
	popax
	cmp $a,$b
	jl l366
	push 0
	jmp l367
l366:
	push 1
l367:
	popax
	cmp $a,0
	je l368
	jmp l370
l369:
	add $3,1
	pop $3
	jmp l365
l370:
	push ssnd
	push $3
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	push $1
	push $2
	spop $a
	call [$a],addmethod
	jmp l369
l368:
	end method
	method stop
	localint $1
	pop $1
	push splay
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l372
	push 0
	jmp l373
l372:
	push 1
l373:
	popax
	cmp $a,0
	je l374
	push splay
	popax
	spush $a
	push $1
	spop $a
	call [$a],stop
	jmp l371
l374:
l371:
	end method
	method isplaying
	push splay
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l376
	push 0
	jmp l377
l376:
	push 1
l377:
	popax
	cmp $a,0
	je l378
	push splay
	popax
	spush $a
	spop $a
	call [$a],isplaying
	ret
	jmp l375
l378:
	push 0
	ret
l375:
	end method
	method randplay
	localint $1
	pop $1
	push $1
	call $1,rand
	push 0
	pop $b
	popax
	cmp $a,$b
	je l380
	push 0
	jmp l381
l380:
	push 1
l381:
	popax
	cmp $a,0
	je l382
	cthis play
	jmp l379
l382:
l379:
	end method
	method play
	push 0
	cthis stop
	cthis bgplay
	end method
	method rbgplay
	cthis isplaying
	push 1
	pop $b
	popax
	cmp $a,$b
	je l384
	push 0
	jmp l385
l384:
	push 1
l385:
	popax
	cmp $a,0
	je l386
	ret
	jmp l383
l386:
l383:
	cthis bgplay
	end method
	method rplay
	cthis isplaying
	push 0
	pop $b
	popax
	cmp $a,$b
	je l388
	push 0
	jmp l389
l388:
	push 1
l389:
	popax
	cmp $a,0
	je l390
	cthis play
	jmp l387
l390:
l387:
	end method
	method bgplay
	push ssnd
	push ilicz
	pop $b
	popax
	add $a,$b
	pop splay
	push splay
	popax
	spush $a
	spop $a
	call [$a],play
	push itype
	push 0
	pop $b
	popax
	cmp $a,$b
	je l392
	push 0
	jmp l393
l392:
	push 1
l393:
	popax
	cmp $a,0
	je l394
	push ilicz
	push 1
	pop $b
	popax
	add $a,$b
	push iile
	pop $b
	popax
	div $a,$b
	push $d
	pop ilicz
	jmp l391
l394:
	push itype
	push 1
	pop $b
	popax
	cmp $a,$b
	je l396
	push 0
	jmp l397
l396:
	push 1
l397:
	popax
	cmp $a,0
	je l398
	push iile
	call ilicz,rand
	pop ilicz
	jmp l395
l398:
l395:
l391:
	end method
	method setvol
	localint $1
	pop $1
	localint $2
	push 0
	pop $2
l399:
	push $2
	push iile
	pop $b
	popax
	cmp $a,$b
	jl l400
	push 0
	jmp l401
l400:
	push 1
l401:
	popax
	cmp $a,0
	je l402
	jmp l404
l403:
	add $2,1
	pop $2
	jmp l399
l404:
	push ssnd
	push $2
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	push $1
	spop $a
	call [$a],setvol
	jmp l403
l402:
	end method
	end class

	class classgame
	parent newvars
	parent classsound
	method init
	clparent newvars,init
	clparent classsound,init
	new int,__iendstate
	end method
	method csetbkg
	localstring $1
	pop $1
	push "imgbkg"
	push $1
	push 0
	cthis newimg
	end method
	method cstdbkg
	push "bkg.png"
	cthis csetbkg
	end method
	method csndplayloop
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	cthis newsndloop
	push $1
	popax
	spush $a
	spop $a
	call [$a],play
	end method
	method csndbgr
	localstring $1
	pop $1
	push "sndbgr"
	push $1
	cthis csndplayloop
	end method
	method cloadcursor
	localstring $1
	pop $1
	push "imgkursor"
	push $1
	push 0
	cthis newimg
	call imgkursor,hide
	push "imgkursor"
	call mouse,setcursor
	push "imgkursor"
	call engine,stdbutcursor
	call bsms,setown
	end method
	method cplayintro
	localstring $1
	pop $1
	push "sndintro"
	push $1
	cthis newsnd
	push "sndintro"
	cthis cbplay
	end method
	method cplayintrofun
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	cthis cplayintro
	push "sndintro"
	push $2
	cthis cfinmethod
	end method
	method csavevar
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	popax
	spush $a
	push $2
	spop $b
	popax
	mov [$b],$a
	call gameapi,getgamename
	push $1
	push $2
	call clsav,varsave
	end method
	method cloadvar
	localstring $1
	localstring $2
	pop $2
	pop $1
	call gameapi,getgamename
	push $1
	push $2
	call clsav,varload
	end method
	method cputgr
	localstring $1
	pop $1
	push $1
	popax
	spush $a
	push $1
	popax
	spush $a
	spop $a
	call [$a],getey
	spop $a
	call [$a],setz
	end method
	method cputgr2
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	popax
	spush $a
	push $2
	push $3
	spop $a
	call [$a],setpos
	push $1
	popax
	spush $a
	push $1
	popax
	spush $a
	spop $a
	call [$a],getey
	spop $a
	call [$a],setz
	end method
	method cloadbgelem
	localstring $1
	pop $1
	localint $2
	push "anbg"
	push $1
	push 0
	cthis loadanactions
	pop $2
	localint $3
	push 0
	pop $3
l405:
	push $3
	push $2
	pop $b
	popax
	cmp $a,$b
	jl l406
	push 0
	jmp l407
l406:
	push 1
l407:
	popax
	cmp $a,0
	je l408
	jmp l410
l409:
	add $3,1
	pop $3
	jmp l405
l410:
	push "anbg"
	push $3
	pop $b
	popax
	add $a,$b
	cthis cputgr
	jmp l409
l408:
	call _anbg,hide
	end method
	method cnewanimagr
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	cthis newanima
	push $1
	cthis cputgr
	end method
	method copyanimaactgr
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	cthis copyanimaact
	push $2
	cthis cputgr
	end method
	method __clbplaysnd
	push sclsnd
	cthis cbplay
	end method
	method __clrplaysnd
	push sclsnd
	cthis crplay
	end method
	method __clrbgplaysnd
	push sclsnd
	cthis crbgplay
	end method
	method __clgetsndname
	localstring $1
	pop $1
	new string,sclsnd
	push $1
	pop sclsnd
	end method
	method _cplayonfin
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	popax
	spush $a
	push $2
	spop $a
	call [$a],__clgetsndname
	push $1
	popax
	spush $a
	push "onfinish"
	push "__cl"
	push $3
	pop $b
	popax
	add $a,$b
	push "playsnd"
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],addmethod
	end method
	method cplayonfin
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push "b"
	cthis _cplayonfin
	end method
	method cbplayonfin
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push "b"
	cthis _cplayonfin
	end method
	method crplayonfin
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push "r"
	cthis _cplayonfin
	end method
	method crbgplayonfin
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push "rbg"
	cthis _cplayonfin
	end method
	method cplayonfinplay
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	cthis cplayonfin
	push $1
	cthis cbplay
	end method
	method csetstate
	localint $1
	pop $1
	push $1
	pop igmstate
	end method
	method cgetstate
	push _igmstate
	ret
	end method
	method _csetstatefin
	cthis cgetendstate
	cthis csetstate
	end method
	method csavestate
	localint $1
	pop $1
	push $1
	pop __iendstate
	end method
	method cgetendstate
	push __iendstate
	ret
	end method
	method cbplaystate
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $3
	cthis csavestate
	push $2
	cthis csetstate
	push $1
	popax
	spush $a
	push "onfinish"
	push "_csetstatefin"
	spop $a
	call [$a],addmethod
	push $1
	cthis cbplay
	end method
	method cfinmethod
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	popax
	spush $a
	push "onfinish"
	push $2
	spop $a
	call [$a],addmethod
	end method
	method cplaywithfin
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	cthis cfinmethod
	push $1
	popax
	spush $a
	spop $a
	call [$a],play
	end method
	method cbplaywithfin
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	cthis cfinmethod
	push $1
	cthis cbplay
	end method
	method crplaywithfin
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	cthis cfinmethod
	push $1
	cthis crplay
	end method
	method cnplaywithfin
	localstring $1
	localint $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $3
	cthis cfinmethod
	push $1
	popax
	spush $a
	push $2
	spop $a
	call [$a],play
	end method
	method csplaywithfin
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $3
	cthis cfinmethod
	push $1
	popax
	spush $a
	push $2
	spop $a
	call [$a],play
	end method
	method cnewsndfin
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	cthis newsnd
	push $1
	push $3
	cthis cfinmethod
	end method
	method cnewsndsfin
	localstring $1
	localint $2
	localstring $3
	localint $4
	localint $5
	localstring $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	push $5
	cthis newsnds
	push $1
	push $2
	push $2
	push $5
	push $4
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	add $a,$b
	push $6
	cthis caddobjsfunfin
	end method
	method cnewsndfinbplay
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	cthis cnewsndfin
	push $1
	cthis cbplay
	end method
	method cnewtimerfin
	localstring $1
	localint $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	cthis newtimer
	push $1
	push $4
	cthis cfinmethod
	end method
	method cnewtimercyclefin
	localstring $1
	localint $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	cthis newtimercycle
	push $1
	push $4
	cthis cfinmethod
	end method
	method caddobjsfun
	localstring $1
	localint $2
	localint $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
l411:
	push $2
	push $3
	pop $b
	popax
	cmp $a,$b
	jle l412
	push 0
	jmp l413
l412:
	push 1
l413:
	popax
	cmp $a,0
	je l414
	push $1
	push $2
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	push $4
	push $5
	push $2
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],addmethod
	add $2,1
	pop $2
	jmp l411
l414:
	end method
	method caddobjsfunfin
	localstring $1
	localint $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push "onfinish"
	push $4
	cthis caddobjsfun
	end method
	method canfindaction
	localstring $1
	localint $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	push "actionname"
	clparent clfindfunc,_stdfindfunc
	ret
	end method
	method canfindact2
	localstring $1
	localint $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push "actionname"
	clparent clfindfunc,_stdfindfunc2
	ret
	end method
	method cfindframe
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	localint $4
	push $1
	popax
	spush $a
	push $2
	spop $a
	call [$a],nofframes
	pop $4
	localint $5
	push 0
	pop $5
l415:
	push $5
	push $4
	pop $b
	popax
	cmp $a,$b
	jl l416
	push 0
	jmp l417
l416:
	push 1
l417:
	popax
	cmp $a,0
	je l418
	jmp l420
l419:
	add $5,1
	pop $5
	jmp l415
l420:
	push $1
	popax
	spush $a
	push $2
	push $5
	spop $a
	call [$a],setframe
	push $1
	popax
	spush $a
	spop $a
	call [$a],framename
	push $3
	pop $b
	popax
	cmp $a,$b
	je l422
	push 0
	jmp l423
l422:
	push 1
l423:
	popax
	cmp $a,0
	je l424
	push $5
	ret
	jmp l421
l424:
l421:
	jmp l419
l418:
	push 1
	popax
	sub 0,$a
	ret
	end method
	method cfindy
	localstring $1
	localint $2
	pop $2
	pop $1
	localint $3
	push $1
	popax
	spush $a
	spop $a
	call [$a],getpy
	pop $3
	localint $4
	push $1
	popax
	spush $a
	spop $a
	call [$a],getey
	pop $4
l425:
	push $1
	popax
	spush $a
	push $2
	push $3
	push 0
	push 1
	spop $a
	call [$a],isin
	push 0
	pop $b
	popax
	cmp $a,$b
	je l426
	push 0
	jmp l427
l426:
	push 1
l427:
	push $3
	push $4
	pop $b
	popax
	cmp $a,$b
	jl l428
	push 0
	jmp l429
l428:
	push 1
l429:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l430
	add $3,1
	pop $3
	jmp l425
l430:
	push $3
	ret
	end method
	method cfinddyactf
	localstring $1
	localint $2
	localstring $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	popax
	spush $a
	push $3
	push $4
	spop $a
	call [$a],setframe
	push $1
	popax
	spush $a
	push $1
	popax
	spush $a
	spop $a
	call [$a],lodx
	popax
	sub 0,$a
	push $1
	popax
	spush $a
	spop $a
	call [$a],lody
	popax
	sub 0,$a
	spop $a
	call [$a],setpos
	push $1
	push $2
	cthis cfindy
	ret
	end method
	method newancounter
	localstring $1
	localstring $2
	localstring $3
	localint $4
	localint $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $2
	push $3
	push $4
	push $5
	cthis newanimas
	push $1
	popax
	spush $a
	spop $e
	new classancounter,[$e]
	push $1
	popax
	spush $a
	push $2
	push $5
	spop $a
	call [$a],set
	end method
	method newancounterh
	localstring $1
	localstring $2
	localstring $3
	localint $4
	localint $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	push $5
	cthis newancounter
	localint $6
	push 0
	pop $6
l431:
	push $6
	push $5
	pop $b
	popax
	cmp $a,$b
	jl l432
	push 0
	jmp l433
l432:
	push 1
l433:
	popax
	cmp $a,0
	je l434
	jmp l436
l435:
	add $6,1
	pop $6
	jmp l431
l436:
	push $2
	push $6
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	spop $a
	call [$a],hide
	jmp l435
l434:
	end method
	method newancounterf
	localstring $1
	localstring $2
	localstring $3
	localint $4
	localint $5
	localstring $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	push $5
	cthis newancounter
	localint $7
	push 0
	pop $7
l437:
	push $7
	push $5
	pop $b
	popax
	cmp $a,$b
	jl l438
	push 0
	jmp l439
l438:
	push 1
l439:
	popax
	cmp $a,0
	je l440
	jmp l442
l441:
	add $7,1
	pop $7
	jmp l437
l442:
	push $2
	push $7
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	push "onfinish"
	push $6
	spop $a
	call [$a],addmethod
	jmp l441
l440:
	end method
	method newancounterhf
	localstring $1
	localstring $2
	localstring $3
	localint $4
	localint $5
	localstring $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	push $5
	cthis newancounter
	localint $7
	push 0
	pop $7
l443:
	push $7
	push $5
	pop $b
	popax
	cmp $a,$b
	jl l444
	push 0
	jmp l445
l444:
	push 1
l445:
	popax
	cmp $a,0
	je l446
	jmp l448
l447:
	add $7,1
	pop $7
	jmp l443
l448:
	push $2
	push $7
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	push "onfinish"
	push $6
	spop $a
	call [$a],addmethod
	push $2
	push $7
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	spop $a
	call [$a],hide
	jmp l447
l446:
	end method
	method cnewanimafin
	localstring $1
	localstring $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	cthis newanima
	push $1
	popax
	spush $a
	push "onfinish"
	push $4
	spop $a
	call [$a],addmethod
	end method
	method ccopyanimafin
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	cthis copyanima
	push $2
	popax
	spush $a
	push "onfinish"
	push $3
	spop $a
	call [$a],addmethod
	end method
	method cloadwavs
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	cthis newdb
	localint $3
	push 0
	pop $3
	localint $4
	push $1
	popax
	spush $a
	spop $a
	call [$a],getrowsno
	pop $4
	localint $5
	localint $6
	localint $7
	localint $8
	localint $9
	localint $10
	localstring $11
	localstring $12
	localstring $13
	localstring $14
	localstring $15
l449:
	push $3
	push $4
	pop $b
	popax
	cmp $a,$b
	jl l450
	push 0
	jmp l451
l450:
	push 1
l451:
	popax
	cmp $a,0
	je l452
	push $1
	popax
	spush $a
	push $3
	spop $a
	call [$a],getcolsno
	pop $6
	push 0
	pop $7
	push $1
	popax
	spush $a
	push $3
	push $7
	spop $a
	call [$a],get
	pop $12
	add $7,1
	pop $7
	push 0
	push 1
	call $12,getb
	push "#"
	pop $b
	popax
	cmp $a,$b
	jne l454
	push 0
	jmp l455
l454:
	push 1
l455:
	popax
	cmp $a,0
	je l456
	push $1
	popax
	spush $a
	push $3
	push $7
	spop $a
	call [$a],get
	pop $14
	add $7,1
	pop $7
	push $12
	push "wav"
	pop $b
	popax
	cmp $a,$b
	je l458
	push 0
	jmp l459
l458:
	push 1
l459:
	push $12
	push "sfx"
	pop $b
	popax
	cmp $a,$b
	je l460
	push 0
	jmp l461
l460:
	push 1
l461:
	popax
	pop $b
	or $a,$b
	popax
	cmp $a,0
	je l462
	push $1
	popax
	spush $a
	push $3
	push $7
	spop $a
	call [$a],get
	pop $13
	add $7,1
	pop $7
	push $12
	push "sfx"
	pop $b
	popax
	cmp $a,$b
	je l464
	push 0
	jmp l465
l464:
	push 1
l465:
	popax
	cmp $a,0
	je l466
	push $14
	push "sfx/"
	push $13
	pop $b
	popax
	add $a,$b
	cthis newsnd
	jmp l463
l466:
	push $14
	push $13
	cthis newsnd
l463:
	push $7
	push $6
	pop $b
	popax
	cmp $a,$b
	jl l468
	push 0
	jmp l469
l468:
	push 1
l469:
	popax
	cmp $a,0
	je l470
	push $1
	popax
	spush $a
	push $3
	push $7
	spop $a
	call [$a],get
	pop $12
	add $7,1
	pop $7
	push $1
	popax
	spush $a
	push $3
	push $7
	spop $a
	call [$a],get
	pop $13
	add $7,1
	pop $7
	push $12
	push "method"
	pop $b
	popax
	cmp $a,$b
	je l472
	push 0
	jmp l473
l472:
	push 1
l473:
	popax
	cmp $a,0
	je l474
	push $14
	popax
	spush $a
	push "onfinish"
	push $13
	spop $a
	call [$a],addmethod
	jmp l471
l474:
	push 0
	push 4
	call $12,gete
	push "play"
	pop $b
	popax
	cmp $a,$b
	je l476
	push 0
	jmp l477
l476:
	push 1
l477:
	popax
	cmp $a,0
	je l478
	push "c"
	push 4
	push 10
	call $12,gete
	pop $b
	popax
	add $a,$b
	push "playonfin"
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	push $14
	push $13
	spop $d
	cthis [$d]
	jmp l475
l478:
	push $12
	push "vol"
	pop $b
	popax
	cmp $a,$b
	je l480
	push 0
	jmp l481
l480:
	push 1
l481:
	popax
	cmp $a,0
	je l482
	push $14
	popax
	spush $a
	push $13
	spop $a
	call [$a],setvol
	jmp l479
l482:
l479:
l475:
l471:
	jmp l467
l470:
l467:
	jmp l457
l462:
	push $12
	push "group"
	pop $b
	popax
	cmp $a,$b
	je l484
	push 0
	jmp l485
l484:
	push 1
l485:
	popax
	cmp $a,0
	je l486
	push $1
	popax
	spush $a
	push $3
	push $7
	spop $a
	call [$a],get
	pop $13
	add $7,1
	pop $7
	push $1
	popax
	spush $a
	push $3
	push $7
	spop $a
	call [$a],get
	pop $8
	add $7,1
	pop $7
	push $1
	popax
	spush $a
	push $3
	push $7
	spop $a
	call [$a],get
	pop $9
	add $7,1
	pop $7
	push $7
	push $6
	pop $b
	popax
	cmp $a,$b
	jl l488
	push 0
	jmp l489
l488:
	push 1
l489:
	popax
	cmp $a,0
	je l490
	push $1
	popax
	spush $a
	push $3
	push $7
	spop $a
	call [$a],get
	pop $12
	add $7,1
	pop $7
	push $12
	push "method"
	pop $b
	popax
	cmp $a,$b
	je l492
	push 0
	jmp l493
l492:
	push 1
l493:
	popax
	cmp $a,0
	je l494
	push $1
	popax
	spush $a
	push $3
	push $7
	spop $a
	call [$a],get
	pop $15
	add $7,1
	pop $7
	push $14
	push $8
	push $13
	push $8
	push $9
	push $15
	cthis cnewsndsfin
	jmp l491
l494:
l491:
	jmp l487
l490:
	push $14
	push $8
	push $13
	push $8
	push $9
	cthis newsnds
l487:
	jmp l483
l486:
	push $12
	push "bank"
	pop $b
	popax
	cmp $a,$b
	je l496
	push 0
	jmp l497
l496:
	push 1
l497:
	popax
	cmp $a,0
	je l498
	push $1
	popax
	spush $a
	push $3
	push $7
	spop $a
	call [$a],get
	pop $13
	add $7,1
	pop $7
	push $1
	popax
	spush $a
	push $3
	push $7
	spop $a
	call [$a],get
	pop $5
	add $7,1
	pop $7
	push $1
	popax
	spush $a
	push $3
	push $7
	spop $a
	call [$a],get
	pop $8
	add $7,1
	pop $7
	push $1
	popax
	spush $a
	push $3
	push $7
	spop $a
	call [$a],get
	pop $9
	add $7,1
	pop $7
	push $1
	popax
	spush $a
	push $3
	push $7
	spop $a
	call [$a],get
	pop $10
	add $7,1
	pop $7
	push $14
	popax
	spush $a
	spop $e
	new classsndbank,[$e]
	push $14
	popax
	spush $a
	push $13
	push $5
	push $8
	push $9
	push $10
	spop $a
	call [$a],load
	push $7
	push $6
	pop $b
	popax
	cmp $a,$b
	jl l500
	push 0
	jmp l501
l500:
	push 1
l501:
	popax
	cmp $a,0
	je l502
	push $1
	popax
	spush $a
	push $3
	push $7
	spop $a
	call [$a],get
	pop $12
	add $7,1
	pop $7
	push $12
	push "method"
	pop $b
	popax
	cmp $a,$b
	je l504
	push 0
	jmp l505
l504:
	push 1
l505:
	popax
	cmp $a,0
	je l506
	push $1
	popax
	spush $a
	push $3
	push $7
	spop $a
	call [$a],get
	pop $15
	add $7,1
	pop $7
	push $14
	popax
	spush $a
	push "onfinish"
	push $15
	spop $a
	call [$a],addmethod
	jmp l503
l506:
	push $12
	push "vol"
	pop $b
	popax
	cmp $a,$b
	je l508
	push 0
	jmp l509
l508:
	push 1
l509:
	popax
	cmp $a,0
	je l510
	push $14
	popax
	spush $a
	push $1
	popax
	spush $a
	push $3
	push $7
	spop $a
	call [$a],get
	spop $a
	call [$a],setvol
	jmp l507
l510:
l507:
l503:
	jmp l499
l502:
l499:
	jmp l495
l498:
	push $12
	push "method"
	pop $b
	popax
	cmp $a,$b
	je l512
	push 0
	jmp l513
l512:
	push 1
l513:
	popax
	cmp $a,0
	je l514
	push $1
	popax
	spush $a
	push $3
	push $7
	spop $a
	call [$a],get
	pop $13
	add $7,1
	pop $7
	push $1
	popax
	spush $a
	push $3
	push $7
	spop $a
	call [$a],get
	pop $8
	add $7,1
	pop $7
	push $1
	popax
	spush $a
	push $3
	push $7
	spop $a
	call [$a],get
	pop $9
	add $7,1
	pop $7
l515:
	push $8
	push $9
	pop $b
	popax
	cmp $a,$b
	jle l516
	push 0
	jmp l517
l516:
	push 1
l517:
	popax
	cmp $a,0
	je l518
	push $13
	push $8
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	push "onfinish"
	push $14
	spop $a
	call [$a],addmethod
	add $8,1
	pop $8
	jmp l515
l518:
	jmp l511
l514:
	push $12
	push "singlebank"
	pop $b
	popax
	cmp $a,$b
	je l520
	push 0
	jmp l521
l520:
	push 1
l521:
	popax
	cmp $a,0
	je l522
	push $1
	popax
	spush $a
	push $3
	push $7
	spop $a
	call [$a],get
	pop $13
	add $7,1
	pop $7
	push $1
	popax
	spush $a
	push $3
	push $7
	spop $a
	call [$a],get
	pop $8
	add $7,1
	pop $7
	push $14
	popax
	spush $a
	spop $e
	new classsndbank,[$e]
	push $14
	popax
	spush $a
	push $13
	push $8
	spop $a
	call [$a],loadsingle
	jmp l519
l522:
	push $12
	push "bgr"
	pop $b
	popax
	cmp $a,$b
	je l524
	push 0
	jmp l525
l524:
	push 1
l525:
	popax
	cmp $a,0
	je l526
	push $14
	cthis csndbgr
	push $7
	push $6
	pop $b
	popax
	cmp $a,$b
	jl l528
	push 0
	jmp l529
l528:
	push 1
l529:
	popax
	cmp $a,0
	je l530
	push $1
	popax
	spush $a
	push $3
	push $7
	spop $a
	call [$a],get
	push "vol"
	pop $b
	popax
	cmp $a,$b
	je l532
	push 0
	jmp l533
l532:
	push 1
l533:
	popax
	cmp $a,0
	je l534
	add $7,1
	pop $7
	push $1
	popax
	spush $a
	push $3
	push $7
	spop $a
	call [$a],get
	call sndbgr,setvol
	add $7,1
	pop $7
	jmp l531
l534:
l531:
	jmp l527
l530:
l527:
	jmp l523
l526:
	push $12
	push "music"
	pop $b
	popax
	cmp $a,$b
	je l536
	push 0
	jmp l537
l536:
	push 1
l537:
	popax
	cmp $a,0
	je l538
	push $14
	cthis playmusic
	push $7
	push $6
	pop $b
	popax
	cmp $a,$b
	jl l540
	push 0
	jmp l541
l540:
	push 1
l541:
	popax
	cmp $a,0
	je l542
	push $1
	popax
	spush $a
	push $3
	push $7
	spop $a
	call [$a],get
	push "vol"
	pop $b
	popax
	cmp $a,$b
	je l544
	push 0
	jmp l545
l544:
	push 1
l545:
	popax
	cmp $a,0
	je l546
	add $7,1
	pop $7
	push $1
	popax
	spush $a
	push $3
	push $7
	spop $a
	call [$a],get
	call sndbgr,setvol
	add $7,1
	pop $7
	jmp l543
l546:
l543:
	jmp l539
l542:
l539:
	jmp l535
l538:
l535:
l523:
l519:
l511:
l495:
l483:
l457:
	jmp l453
l456:
l453:
	add $3,1
	pop $3
	jmp l449
l452:
	end method
	method crestart
	call gameapi,getgamename
	call gameapi,play
	end method
	end class

	class clfindfunc
	method init
	end method
	method _stdfindfunc
	localstring $1
	localint $2
	localint $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
l547:
	push $2
	push $3
	pop $b
	popax
	cmp $a,$b
	jle l548
	push 0
	jmp l549
l548:
	push 1
l549:
	popax
	cmp $a,0
	je l550
	push $1
	push $2
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	push $5
	popax
	spush $a
	spop $d
	spop $a
	call [$a],[$d]
	push $4
	pop $b
	popax
	cmp $a,$b
	je l552
	push 0
	jmp l553
l552:
	push 1
l553:
	popax
	cmp $a,0
	je l554
	push $2
	ret
	jmp l551
l554:
	add $2,1
	pop $2
l551:
	jmp l547
l550:
	push 1
	popax
	sub 0,$a
	ret
	end method
	method _stdfindfunc2
	localstring $1
	localint $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push 0
	push $2
	push 1
	pop $b
	popax
	sub $a,$b
	push $3
	push $4
	cthis _stdfindfunc
	ret
	end method
	method cfindandeval2
	localstring $1
	localint $2
	localstring $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push 0
	push $2
	push 1
	pop $b
	popax
	sub $a,$b
	push $3
	push $4
	push $5
	cthis cfindandeval
	end method
	method cfindandeval
	localstring $1
	localint $2
	localint $3
	localstring $4
	localstring $5
	localstring $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	localint $7
	push $1
	push $2
	push $3
	push $4
	push $5
	cthis _stdfindfunc
	pop $7
	push $7
	push 0
	pop $b
	popax
	cmp $a,$b
	jae l556
	push 0
	jmp l557
l556:
	push 1
l557:
	popax
	cmp $a,0
	je l558
	push $1
	push $7
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	push $6
	popax
	spush $a
	spop $d
	spop $a
	call [$a],[$d]
	jmp l555
l558:
l555:
	end method
	end class

	class classgamepause
	method init
	new button,butpause
	push 0
	push 0
	push 800
	push 600
	call butpause,setrect
	push "onclick"
	push "resume"
	call butpause,addmethod
	call butpause,disable
	end method
	method resume
	call butpause,disable
	call gameapi,resume
	end method
	method pause
	call gameapi,pause
	call butpause,enable
	call butpause,resume
	end method
	end class

	class classgamemusic
	parent classdbreader
	method init
	clparent classdbreader,init
	new string,smuspath
	push ""
	pop smuspath
	new string,sbgrpath
	push ""
	pop sbgrpath
	new snd,_sndbgr
	push "onfinish"
	push "_stdsndloop"
	call _sndbgr,addmethod
	end method
	method reset
	call gameapi,stopmusic
	cthis stopbgr
	end method
	method _stdsndloop
	cthis play
	end method
	method load
	localstring $1
	pop $1
	push $1
	call dbl,load
	end method
	method musicpath
	localstring $1
	pop $1
	push $1
	pop smuspath
	end method
	method sndbgrpath
	localstring $1
	pop $1
	push $1
	pop sbgrpath
	end method
	method _play
	localint $1
	pop $1
	localint $2
	localint $3
	localint $4
	localstring $5
	localstring $6
	push 1
	pop $2
	push $1
	call dbl,getcolsno
	pop $3
l559:
	push $2
	push $3
	pop $b
	popax
	cmp $a,$b
	jl l560
	push 0
	jmp l561
l560:
	push 1
l561:
	popax
	cmp $a,0
	je l562
	push $1
	push $2
	call dbl,get
	pop $5
	add $2,1
	pop $2
	push $5
	push "music"
	pop $b
	popax
	cmp $a,$b
	je l564
	push 0
	jmp l565
l564:
	push 1
l565:
	popax
	cmp $a,0
	je l566
	push smuspath
	push $1
	push $2
	call dbl,get
	pop $b
	popax
	add $a,$b
	pop $6
	add $2,1
	pop $2
	push $2
	push $3
	pop $b
	popax
	cmp $a,$b
	jl l568
	push 0
	jmp l569
l568:
	push 1
l569:
	popax
	cmp $a,0
	je l570
	push $1
	push $2
	call dbl,get
	push "vol"
	pop $b
	popax
	cmp $a,$b
	je l572
	push 0
	jmp l573
l572:
	push 1
l573:
	popax
	cmp $a,0
	je l574
	add $2,1
	pop $2
	push $1
	push $2
	call dbl,get
	call gameapi,setmusicvol
	add $2,1
	pop $2
	jmp l571
l574:
l571:
	jmp l567
l570:
	push 100
	call gameapi,setmusicvol
l567:
	push $6
	call gameapi,playmusic
	jmp l563
l566:
	push $5
	push "bgr"
	pop $b
	popax
	cmp $a,$b
	je l576
	push 0
	jmp l577
l576:
	push 1
l577:
	popax
	cmp $a,0
	je l578
	push sbgrpath
	push $1
	push $2
	call dbl,get
	pop $b
	popax
	add $a,$b
	call _sndbgr,load
	add $2,1
	pop $2
	push $2
	push $3
	pop $b
	popax
	cmp $a,$b
	jl l580
	push 0
	jmp l581
l580:
	push 1
l581:
	popax
	cmp $a,0
	je l582
	push $1
	push $2
	call dbl,get
	push "vol"
	pop $b
	popax
	cmp $a,$b
	je l584
	push 0
	jmp l585
l584:
	push 1
l585:
	popax
	cmp $a,0
	je l586
	add $2,1
	pop $2
	push $1
	push $2
	call dbl,get
	call _sndbgr,setvol
	add $2,1
	pop $2
	jmp l583
l586:
l583:
	jmp l579
l582:
	push 100
	call _sndbgr,setvol
l579:
	cthis playbgr
	jmp l575
l578:
	add $2,1
	pop $2
l575:
l563:
	jmp l559
l562:
	end method
	method play
	cthis reset
	call gameapi,getgamename
	push "_play"
	cthis readrow
	end method
	method playbgr
	call _sndbgr,play
	end method
	method stopbgr
	push 0
	call _sndbgr,stop
	end method
	end class

	class classasker
	parent newvars
	method init
	clparent newvars,init
	new string,sfuncyes
	push "null"
	pop sfuncyes
	new string,sfuncno
	push "null"
	pop sfuncno
	new string,ssndask
	new string,ssndyes
	new string,ssndno
	new classsound,clsnd
	end method
	method reset
	push "null"
	pop sfuncyes
	push "null"
	pop sfuncno
	end method
	method setfuncs
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	pop sfuncyes
	push $2
	pop sfuncno
	end method
	method fxonmovon
	localstring $1
	pop $1
	push $1
	call buts,sfxonmovon
	end method
	method setmouse
	localstring $1
	pop $1
	push "yes"
	push $1
	call buts,newmouse
	push "no"
	push $1
	call buts,newmouse
	end method
	method load
	localstring $1
	localint $2
	pop $2
	pop $1
	new classbutton,buts
	push $1
	push $2
	push "null"
	call buts,build
	call engine,actclassname
	push "butclick"
	call buts,transclickfunc
	call engine,actclassname
	push "butmovon"
	call buts,transmovonfunc
	call buts,disableall
	end method
	method ask
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $4
	push $5
	cthis setfuncs
	push $1
	push $2
	push $3
	cthis ask2
	end method
	method ask2
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	pop ssndask
	push $2
	pop ssndyes
	push $3
	pop ssndno
	call gameapi,pause
	call buts,benableall
	push "bkg"
	call buts,pause
	call clsnd,creset
	push $1
	call clsnd,cbplay
	end method
	method butmovon
	localstring $1
	pop $1
	push $1
	push "yes"
	pop $b
	popax
	cmp $a,$b
	je l588
	push 0
	jmp l589
l588:
	push 1
l589:
	popax
	cmp $a,0
	je l590
	push ssndask
	popax
	spush $a
	push 0
	spop $a
	call [$a],stop
	push ssndyes
	call clsnd,cbplay
	jmp l587
l590:
	push $1
	push "no"
	pop $b
	popax
	cmp $a,$b
	je l592
	push 0
	jmp l593
l592:
	push 1
l593:
	popax
	cmp $a,0
	je l594
	push ssndask
	popax
	spush $a
	push 0
	spop $a
	call [$a],stop
	push ssndno
	call clsnd,cbplay
	jmp l591
l594:
l591:
l587:
	end method
	method butclick
	localstring $1
	pop $1
	push $1
	push "bkg"
	pop $b
	popax
	cmp $a,$b
	je l596
	push 0
	jmp l597
l596:
	push 1
l597:
	popax
	cmp $a,0
	je l598
	ret
	jmp l595
l598:
l595:
	call gameapi,resume
	call buts,disableall
	push 0
	call clsnd,cactsndstop
	push $1
	push "yes"
	pop $b
	popax
	cmp $a,$b
	je l600
	push 0
	jmp l601
l600:
	push 1
l601:
	push sfuncyes
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l602
	push 0
	jmp l603
l602:
	push 1
l603:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l604
	push sfuncyes
	popax
	spush $a
	spop $d
	cthis [$d]
	jmp l599
l604:
	push $1
	push "no"
	pop $b
	popax
	cmp $a,$b
	je l606
	push 0
	jmp l607
l606:
	push 1
l607:
	push sfuncno
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l608
	push 0
	jmp l609
l608:
	push 1
l609:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l610
	push sfuncno
	popax
	spush $a
	spop $d
	cthis [$d]
	jmp l605
l610:
l605:
l599:
	end method
	end class

	class classfadeinout
	method init
	new timer,timf
	new string,_sob
	new int,_istep
	new int,_ival
	new int,_ib1
	new int,_ib2
	new string,_sfun
	new string,_sfunfin
	push "onfinish"
	push "_ctimffin"
	call timf,addmethod
	end method
	method _cfinito
	localint $1
	pop $1
	push _sob
	popax
	spush $a
	push _sfun
	popax
	spush $a
	push $1
	spop $d
	spop $a
	call [$a],[$d]
	push _sfunfin
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l612
	push 0
	jmp l613
l612:
	push 1
l613:
	popax
	cmp $a,0
	je l614
	push _sfunfin
	popax
	spush $a
	spop $d
	cthis [$d]
	jmp l611
l614:
l611:
	end method
	method _ctimffin
	push _istep
	popax
	add _ival,$a
	pop _ival
	push _ival
	push _ib2
	pop $b
	popax
	cmp $a,$b
	jae l616
	push 0
	jmp l617
l616:
	push 1
l617:
	popax
	cmp $a,0
	je l618
	push _ib2
	cthis _cfinito
	jmp l615
l618:
	push _ival
	push _ib1
	pop $b
	popax
	cmp $a,$b
	jle l620
	push 0
	jmp l621
l620:
	push 1
l621:
	popax
	cmp $a,0
	je l622
	push _ib1
	cthis _cfinito
	jmp l619
l622:
	push _sob
	popax
	spush $a
	push _sfun
	popax
	spush $a
	push _ival
	spop $d
	spop $a
	call [$a],[$d]
	cthis play
l619:
l615:
	end method
	method _play
	localint $1
	localint $2
	localstring $3
	localstring $4
	localint $5
	localint $6
	localstring $7
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $7
	pop _sfunfin
	push $5
	pop _ib1
	push $6
	pop _ib2
	localint $8
	push $2
	call $2,abs
	pop $8
	push $1
	push 0
	pop $b
	popax
	cmp $a,$b
	jle l624
	push 0
	jmp l625
l624:
	push 1
l625:
	push $8
	push $5
	pop $b
	popax
	cmp $a,$b
	je l626
	push 0
	jmp l627
l626:
	push 1
l627:
	popax
	pop $b
	or $a,$b
	push $8
	push $6
	pop $b
	popax
	cmp $a,$b
	ja l628
	push 0
	jmp l629
l628:
	push 1
l629:
	popax
	pop $b
	or $a,$b
	popax
	cmp $a,0
	je l630
	ret
	jmp l623
l630:
l623:
	push $4
	pop _sfun
	push $1
	call timf,setcycle
	push $3
	pop _sob
	push $2
	push 0
	pop $b
	popax
	cmp $a,$b
	ja l632
	push 0
	jmp l633
l632:
	push 1
l633:
	popax
	cmp $a,0
	je l634
	push _ib1
	pop _ival
	jmp l631
l634:
	push $2
	push 0
	pop $b
	popax
	cmp $a,$b
	jl l636
	push 0
	jmp l637
l636:
	push 1
l637:
	popax
	cmp $a,0
	je l638
	push _ib2
	pop _ival
	jmp l635
l638:
	ret
l635:
l631:
	push $3
	popax
	spush $a
	push $4
	popax
	spush $a
	push _ival
	spop $d
	spop $a
	call [$a],[$d]
	push $2
	pop _istep
	call timf,play
	end method
	method imgtransparency
	localint $1
	localint $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push "transparency"
	push 0
	push 255
	push $4
	cthis _play
	end method
	method sndvolume
	localint $1
	localint $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push "setvol"
	push 0
	push 100
	push $4
	cthis _play
	end method
	end class

	class classnextgame
	method init
	new db,dbn
	new int,idgame
	push 0
	pop idgame
	end method
	method load
	localstring $1
	pop $1
	push 0
	pop idgame
	push $1
	call dbn,load
	end method
	method next
	localint $1
	pop $1
	call gameapi,getgamename
	call dbn,findbyrow
	push $1
	pop $b
	popax
	add $a,$b
	pop idgame
	localint $2
	call dbn,getrowsno
	pop $2
	push idgame
	push 0
	pop $b
	popax
	cmp $a,$b
	jl l640
	push 0
	jmp l641
l640:
	push 1
l641:
	popax
	cmp $a,0
	je l642
	push $2
	push 1
	pop $b
	popax
	sub $a,$b
	pop idgame
	jmp l639
l642:
	push idgame
	push $2
	pop $b
	popax
	cmp $a,$b
	jae l644
	push 0
	jmp l645
l644:
	push 1
l645:
	popax
	cmp $a,0
	je l646
	push 0
	pop idgame
	jmp l643
l646:
l643:
l639:
	push idgame
	push 0
	call dbn,get
	call gameapi,play
	end method
	method checkkey
	push "n"
	call keyboard,iskey
	push 1
	pop $b
	popax
	cmp $a,$b
	je l648
	push 0
	jmp l649
l648:
	push 1
l649:
	popax
	cmp $a,0
	je l650
	push 1
	cthis next
	jmp l647
l650:
	push "m"
	call keyboard,iskey
	push 1
	pop $b
	popax
	cmp $a,$b
	je l652
	push 0
	jmp l653
l652:
	push 1
l653:
	popax
	cmp $a,0
	je l654
	push 1
	popax
	sub 0,$a
	cthis next
	jmp l651
l654:
l651:
l647:
	end method
	end class

	class classeasysaver
	method init
	new int,ilevel
	push 1
	popax
	sub 0,$a
	pop ilevel
	new db,dbl
	new string,slevelfile
	end method
	method getlevel
	push ilevel
	ret
	end method
	method setlevel
	localint $1
	pop $1
	push $1
	pop ilevel
	end method
	method getgame
	localint $1
	pop $1
	push $1
	push 0
	call dbl,get
	ret
	end method
	method load
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push 1
	popax
	sub 0,$a
	call ilevel,load
	push $1
	pop slevelfile
	push $2
	call dbl,load
	end method
	method save
	localint $1
	call gameapi,getgamename
	call dbl,findbyrow
	pop $1
	push $1
	push ilevel
	pop $b
	popax
	cmp $a,$b
	ja l656
	push 0
	jmp l657
l656:
	push 1
l657:
	popax
	cmp $a,0
	je l658
	push $1
	pop ilevel
	push slevelfile
	call ilevel,save
	jmp l655
l658:
l655:
	end method
	end class

	class classbutton
	method init
	new string,san
	push "anbut"
	pop san
	new string,sbut
	push "but"
	pop sbut
	new int,iilebut
	push 0
	pop iilebut
	new string,sfxmon
	push "null"
	pop sfxmon
	end method
	method _cbuildbutname
	localstring $1
	pop $1
	new string,_sbutname
	push $1
	pop _sbutname
	end method
	method cgetbutname
	push _sbutname
	ret
	end method
	method build
	localstring $1
	localint $2
	localstring $3
	pop $3
	pop $2
	pop $1
	localstring $4
	push "_"
	push san
	pop $b
	popax
	add $a,$b
	pop $4
	push $4
	popax
	spush $a
	spop $e
	new anima,[$e]
	push $4
	popax
	spush $a
	push $1
	spop $a
	call [$a],load
	push $4
	popax
	spush $a
	push $2
	spop $a
	call [$a],setz
	localint $5
	push $4
	popax
	spush $a
	spop $a
	call [$a],nofactions
	pop $5
	localint $6
	localint $7
	localint $8
	push 0
	pop $8
	localstring $9
	localstring $10
	localstring $11
	localstring $12
	localint $13
	push 0
	pop $13
l659:
	push $13
	push $5
	pop $b
	popax
	cmp $a,$b
	jl l660
	push 0
	jmp l661
l660:
	push 1
l661:
	popax
	cmp $a,0
	je l662
	jmp l664
l663:
	add $13,1
	pop $13
	jmp l659
l664:
	push "null"
	pop $9
	push "null"
	pop $10
	push "null"
	pop $11
	push $4
	popax
	spush $a
	push $13
	spop $a
	call [$a],nofframes
	pop $6
	push 1
	pop $7
l665:
	push $7
	push $6
	pop $b
	popax
	cmp $a,$b
	jle l666
	push 0
	jmp l667
l666:
	push 1
l667:
	popax
	cmp $a,0
	je l668
	jmp l670
l669:
	add $7,1
	pop $7
	jmp l665
l670:
	push san
	push $8
	pop $b
	popax
	add $a,$b
	pop $12
	push $7
	push 1
	pop $b
	popax
	cmp $a,$b
	je l672
	push 0
	jmp l673
l672:
	push 1
l673:
	popax
	cmp $a,0
	je l674
	push $12
	pop $9
	jmp l671
l674:
	push $7
	push 2
	pop $b
	popax
	cmp $a,$b
	je l676
	push 0
	jmp l677
l676:
	push 1
l677:
	popax
	cmp $a,0
	je l678
	push $12
	pop $10
	jmp l675
l678:
	push $7
	push 3
	pop $b
	popax
	cmp $a,$b
	je l680
	push 0
	jmp l681
l680:
	push 1
l681:
	popax
	cmp $a,0
	je l682
	push $12
	pop $11
	jmp l679
l682:
l679:
l675:
l671:
	push $4
	push $12
	clparent newvars,copyanima
	push $12
	popax
	spush $a
	push $13
	push $7
	push 1
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setframe
	add $8,1
	pop $8
	jmp l669
l668:
	push $9
	push $10
	push $11
	push $3
	cthis addbut
	jmp l663
l662:
	push $4
	popax
	spush $a
	spop $a
	call [$a],hide
	end method
	method _buildfuncclick
	localstring $1
	pop $1
	new string,_sfunclick
	push $1
	pop _sfunclick
	end method
	method _stdbutclick
	push _sfunclick
	popax
	spush $a
	cthis getbutname
	spop $d
	cthis [$d]
	end method
	method _buildfuncrel
	localstring $1
	pop $1
	new string,_sfuncrel
	push $1
	pop _sfuncrel
	end method
	method _stdbutrel
	push _sfuncrel
	popax
	spush $a
	cthis getbutname
	spop $d
	cthis [$d]
	end method
	method _buildfuncmovon
	localstring $1
	pop $1
	new string,_sfunmovon
	push $1
	pop _sfunmovon
	end method
	method _stdbutmovon
	push sfxmon
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l684
	push 0
	jmp l685
l684:
	push 1
l685:
	popax
	cmp $a,0
	je l686
	push sfxmon
	popax
	spush $a
	spop $a
	call [$a],play
	jmp l683
l686:
l683:
	push _sfunmovon
	popax
	spush $a
	cthis getbutname
	spop $d
	cthis [$d]
	end method
	method _buildfuncmovoff
	localstring $1
	pop $1
	new string,_sfunmovoff
	push $1
	pop _sfunmovoff
	end method
	method _stdbutmovoff
	push _sfunmovoff
	popax
	spush $a
	cthis getbutname
	spop $d
	cthis [$d]
	end method
	method butsigfun
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $2
	push "null"
	pop $b
	popax
	cmp $a,$b
	je l688
	push 0
	jmp l689
l688:
	push 1
l689:
	popax
	cmp $a,0
	je l690
	ret
	jmp l687
l690:
l687:
	push $1
	popax
	spush $a
	push $4
	push $4
	spop $a
	call [$a],addmethod
	push $1
	popax
	spush $a
	push $4
	popax
	spush $a
	push $2
	spop $d
	spop $a
	call [$a],[$d]
	push $1
	popax
	spush $a
	push $3
	push $5
	spop $a
	call [$a],addmethod
	end method
	method sigfunc
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	localint $5
	push 0
	pop $5
l691:
	push $5
	push iilebut
	pop $b
	popax
	cmp $a,$b
	jl l692
	push 0
	jmp l693
l692:
	push 1
l693:
	popax
	cmp $a,0
	je l694
	jmp l696
l695:
	add $5,1
	pop $5
	jmp l691
l696:
	push sbut
	push $5
	pop $b
	popax
	add $a,$b
	push $1
	push $2
	push $3
	push $4
	cthis butsigfun
	jmp l695
l694:
	end method
	method print
	localint $1
	push 0
	pop $1
l697:
	push $1
	push iilebut
	pop $b
	popax
	cmp $a,$b
	jl l698
	push 0
	jmp l699
l698:
	push 1
l699:
	popax
	cmp $a,0
	je l700
	jmp l702
l701:
	add $1,1
	pop $1
	jmp l697
l702:
	push sbut
	push $1
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	spop $a
	call [$a],getbutname
	call engine,print
	jmp l701
l700:
	end method
	method sfxonmovon
	localstring $1
	pop $1
	push $1
	pop sfxmon
	end method
	method clickfunc
	localstring $1
	pop $1
	push $1
	push "onclick"
	push "_buildfuncclick"
	push "_stdbutclick"
	cthis sigfunc
	end method
	method relfunc
	localstring $1
	pop $1
	push $1
	push "onrel"
	push "_buildfuncrel"
	push "_stdbutrel"
	cthis sigfunc
	end method
	method movonfunc
	localstring $1
	pop $1
	push $1
	push "onmoveon"
	push "_buildfuncmovon"
	push "_stdbutmovon"
	cthis sigfunc
	end method
	method movofffunc
	localstring $1
	pop $1
	push $1
	push "onmoveoff"
	push "_buildfuncmovoff"
	push "_stdbutmovoff"
	cthis sigfunc
	end method
	method ilebuts
	push iilebut
	ret
	end method
	method ifind
	localstring $1
	pop $1
	push sbut
	push iilebut
	push $1
	push "getbutname"
	clparent clfindfunc,_stdfindfunc2
	ret
	end method
	method sfind
	localstring $1
	pop $1
	localint $2
	push sbut
	push iilebut
	push $1
	push "getbutname"
	clparent clfindfunc,_stdfindfunc2
	pop $2
	push $2
	push 0
	pop $b
	popax
	cmp $a,$b
	jae l704
	push 0
	jmp l705
l704:
	push 1
l705:
	popax
	cmp $a,0
	je l706
	push sbut
	push $2
	pop $b
	popax
	add $a,$b
	ret
	jmp l703
l706:
	push "null"
	ret
l703:
	end method
	method _cbutfun
	localstring $1
	localstring $2
	pop $2
	pop $1
	push sbut
	cthis ilebuts
	push $1
	push "getbutname"
	push $2
	clparent clfindfunc,cfindandeval2
	end method
	method _callbutfunc
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l707:
	push $2
	push iilebut
	pop $b
	popax
	cmp $a,$b
	jl l708
	push 0
	jmp l709
l708:
	push 1
l709:
	popax
	cmp $a,0
	je l710
	jmp l712
l711:
	add $2,1
	pop $2
	jmp l707
l712:
	push sbut
	push $2
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	push $1
	popax
	spush $a
	spop $d
	spop $a
	call [$a],[$d]
	jmp l711
l710:
	end method
	method _cibutfunc
	localstring $1
	localint $2
	pop $2
	pop $1
	push $2
	push iilebut
	pop $b
	popax
	cmp $a,$b
	ja l714
	push 0
	jmp l715
l714:
	push 1
l715:
	popax
	cmp $a,0
	je l716
	push iilebut
	pop $2
	jmp l713
l716:
l713:
	localint $3
	push 0
	pop $3
l717:
	push $3
	push $2
	pop $b
	popax
	cmp $a,$b
	jl l718
	push 0
	jmp l719
l718:
	push 1
l719:
	popax
	cmp $a,0
	je l720
	jmp l722
l721:
	add $3,1
	pop $3
	jmp l717
l722:
	push sbut
	push $3
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	push $1
	popax
	spush $a
	spop $d
	spop $a
	call [$a],[$d]
	jmp l721
l720:
	end method
	method ienable
	localint $1
	pop $1
	push "enable"
	push $1
	cthis _cibutfunc
	end method
	method benableall
	cthis resumeall
	cthis enableall
	end method
	method pauseall
	push "pause"
	cthis _callbutfunc
	end method
	method resumeall
	push "resume"
	cthis _callbutfunc
	end method
	method enableall
	push "enable"
	cthis _callbutfunc
	end method
	method disableall
	push "disable"
	cthis _callbutfunc
	end method
	method benable
	localstring $1
	pop $1
	push $1
	cthis resume
	push $1
	cthis enable
	end method
	method disable
	localstring $1
	pop $1
	push $1
	push "disable"
	cthis _cbutfun
	end method
	method enable
	localstring $1
	pop $1
	push $1
	push "enable"
	cthis _cbutfun
	end method
	method pause
	localstring $1
	pop $1
	push $1
	push "pause"
	cthis _cbutfun
	end method
	method resume
	localstring $1
	pop $1
	push $1
	push "resume"
	cthis _cbutfun
	end method
	method getimg
	localstring $1
	pop $1
	localstring $2
	push $1
	cthis sfind
	pop $2
	push $2
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l724
	push 0
	jmp l725
l724:
	push 1
l725:
	popax
	cmp $a,0
	je l726
	push $2
	popax
	spush $a
	spop $a
	call [$a],getimg
	ret
	jmp l723
l726:
	push "null"
	ret
l723:
	end method
	method newmouse
	localstring $1
	localstring $2
	pop $2
	pop $1
	localstring $3
	push $1
	cthis sfind
	pop $3
	push $3
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l728
	push 0
	jmp l729
l728:
	push 1
l729:
	popax
	cmp $a,0
	je l730
	push $3
	popax
	spush $a
	push $2
	spop $a
	call [$a],setmouse
	jmp l727
l730:
l727:
	end method
	method addbut
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	localstring $5
	push sbut
	push iilebut
	pop $b
	popax
	add $a,$b
	pop $5
	push $5
	push $1
	push $2
	push $3
	push $4
	clparent newvars,newbutan
	push $5
	popax
	spush $a
	push "getbutname"
	push "cgetbutname"
	spop $a
	call [$a],addmethod
	push $5
	popax
	spush $a
	push $1
	popax
	spush $a
	spop $a
	call [$a],actionname
	spop $a
	call [$a],_cbuildbutname
	add iilebut,1
	pop iilebut
	end method
	method _addfunc
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push "null"
	pop $b
	popax
	cmp $a,$b
	je l732
	push 0
	jmp l733
l732:
	push 1
l733:
	popax
	cmp $a,0
	je l734
	ret
	jmp l731
l734:
l731:
	push $1
	push $2
	push "onclick"
	push "_buildfuncclick"
	push "_stdbutclick"
	cthis butsigfun
	push $1
	push $3
	push "onrel"
	push "_buildfuncrel"
	push "_stdbutrel"
	cthis butsigfun
	push $1
	push $4
	push "onmoveon"
	push "_buildfuncmovon"
	push "_stdbutmovon"
	cthis butsigfun
	push $1
	push $5
	push "onmoveoff"
	push "_buildfuncmovoff"
	push "_stdbutmovoff"
	cthis butsigfun
	end method
	method addfuncto
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	cthis sfind
	push $2
	push $3
	push $4
	push $5
	cthis _addfunc
	end method
	method addfunctolast
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push sbut
	push iilebut
	push 1
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	add $a,$b
	push $1
	push $2
	push $3
	push $4
	cthis _addfunc
	end method
	method _transmet
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push "_sob"
	push $4
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	spop $e
	new string,[$e]
	push $1
	pop [$e]
	push "_sf"
	push $4
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	spop $e
	new string,[$e]
	push $2
	pop [$e]
	push $3
	popax
	spush $a
	push "_trf"
	push $4
	pop $b
	popax
	add $a,$b
	spop $d
	cthis [$d]
	end method
	method transclickfunc
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push "clickfunc"
	push "cl"
	cthis _transmet
	end method
	method transrelfunc
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push "relfunc"
	push "rl"
	cthis _transmet
	end method
	method transmovonfunc
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push "movonfunc"
	push "mn"
	cthis _transmet
	end method
	method transmovofffunc
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push "movofffunc"
	push "mf"
	cthis _transmet
	end method
	method _trfcl
	localstring $1
	pop $1
	push _sobcl
	popax
	spush $a
	push _sfcl
	popax
	spush $a
	push $1
	spop $d
	spop $a
	call [$a],[$d]
	end method
	method _trfrl
	localstring $1
	pop $1
	push _sobrl
	popax
	spush $a
	push _sfrl
	popax
	spush $a
	push $1
	spop $d
	spop $a
	call [$a],[$d]
	end method
	method _trfmn
	localstring $1
	pop $1
	push sfxmon
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l736
	push 0
	jmp l737
l736:
	push 1
l737:
	popax
	cmp $a,0
	je l738
	push sfxmon
	popax
	spush $a
	spop $a
	call [$a],play
	jmp l735
l738:
l735:
	push _sobmn
	popax
	spush $a
	push _sfmn
	popax
	spush $a
	push $1
	spop $d
	spop $a
	call [$a],[$d]
	end method
	method _trfmf
	localstring $1
	pop $1
	push _sobmf
	popax
	spush $a
	push _sfmf
	popax
	spush $a
	push $1
	spop $d
	spop $a
	call [$a],[$d]
	end method
	end class

	class classmask
	parent classbutton
	method init
	clparent classbutton,init
	end method
	method buildmask
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push 0
	push $2
	cthis build
	localint $3
	cthis ilebuts
	pop $3
	localint $4
	push 0
	pop $4
l739:
	push $4
	push $3
	pop $b
	popax
	cmp $a,$b
	jl l740
	push 0
	jmp l741
l740:
	push 1
l741:
	popax
	cmp $a,0
	je l742
	jmp l744
l743:
	add $4,1
	pop $4
	jmp l739
l744:
	push sbut
	push $4
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	push 0
	push 0
	spop $a
	call [$a],setflags
	push sbut
	push $4
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	spop $a
	call [$a],hide
	jmp l743
l742:
	end method
	method buildmaskfunc
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	cthis buildmask
	push $3
	cthis clickfunc
	end method
	method addmask
	localstring $1
	localstring $2
	localstring $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	localstring $5
	push sbut
	push iilebut
	pop $b
	popax
	add $a,$b
	pop $5
	push $5
	push $1
	push "null"
	push "null"
	push $3
	clparent newvars,newbutan
	push $5
	popax
	spush $a
	push "getbutname"
	push "cgetbutname"
	spop $a
	call [$a],addmethod
	push $2
	push "null"
	pop $b
	popax
	cmp $a,$b
	je l746
	push 0
	jmp l747
l746:
	push 1
l747:
	popax
	cmp $a,0
	je l748
	push $5
	popax
	spush $a
	push $1
	popax
	spush $a
	spop $a
	call [$a],actionname
	spop $a
	call [$a],_cbuildbutname
	jmp l745
l748:
	push $5
	popax
	spush $a
	push $2
	spop $a
	call [$a],_cbuildbutname
l745:
	push $4
	push 1
	pop $b
	popax
	cmp $a,$b
	je l750
	push 0
	jmp l751
l750:
	push 1
l751:
	popax
	cmp $a,0
	je l752
	push $5
	popax
	spush $a
	push 0
	push 0
	spop $a
	call [$a],setflags
	push $5
	popax
	spush $a
	spop $a
	call [$a],hide
	jmp l749
l752:
l749:
	add iilebut,1
	pop iilebut
	end method
	method addadvmask
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push 0
	cthis addmask
	push $4
	push "null"
	push "null"
	push "null"
	cthis addfunctolast
	end method
	end class

	class classpathf
	method init
	new path,ptf
	new string,swalkto
	push "null"
	pop swalkto
	new string,_sanim
	push "onfinish"
	push "_cptffin"
	call ptf,addmethod
	push "_cptfstdreach"
	push "_cptfstdarrive"
	cthis addsigs
	end method
	method build
	localstring $1
	localstring $2
	localint $3
	localint $4
	localint $5
	localint $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	push $5
	push $6
	call ptf,build
	push $1
	pop _sanim
	end method
	method copy
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $2
	popax
	spush $a
	spop $e
	new classpathf,[$e]
	push $2
	popax
	spush $a
	push $1
	push "ptf"
	push $3
	spop $a
	call [$a],copy
	end method
	method addsigs
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l754
	push 0
	jmp l755
l754:
	push 1
l755:
	popax
	cmp $a,0
	je l756
	push "onreach"
	push $1
	call ptf,addmethod
	jmp l753
l756:
l753:
	push $2
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l758
	push 0
	jmp l759
l758:
	push 1
l759:
	popax
	cmp $a,0
	je l760
	push "onarrive"
	push $2
	call ptf,addmethod
	jmp l757
l760:
l757:
	end method
	method _cptfstdreach
	localstring $1
	pop $1
	end method
	method _cptfstdarrive
	end method
	method move
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call ptf,move
	end method
	method setpos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call ptf,setpos
	end method
	method show
	call ptf,show
	end method
	method walkto
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	pop swalkto
	push $2
	push $3
	call ptf,goto
	end method
	method goto
	localint $1
	localint $2
	pop $2
	pop $1
	push "null"
	push $1
	push $2
	cthis walkto
	end method
	method gotorel
	localint $1
	localint $2
	pop $2
	pop $1
	push _sanim
	popax
	spush $a
	spop $a
	call [$a],getpx
	push $1
	pop $b
	popax
	add $a,$b
	push _sanim
	popax
	spush $a
	spop $a
	call [$a],getey
	push $2
	pop $b
	popax
	add $a,$b
	cthis goto
	end method
	method iswalking
	call ptf,iswalking
	ret
	end method
	method stand
	call ptf,stand
	end method
	method anstand
	push _sanim
	popax
	spush $a
	push "stand"
	cthis getdir
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],play
	end method
	method ansay
	push _sanim
	popax
	spush $a
	push "talk"
	cthis getdir
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],play
	end method
	method _cptffin
	push swalkto
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l762
	push 0
	jmp l763
l762:
	push 1
l763:
	popax
	cmp $a,0
	je l764
	push swalkto
	call ptf,onreach
	push "null"
	pop swalkto
	jmp l761
l764:
	call ptf,onarrive
l761:
	end method
	method getdir
	localstring $1
	push _sanim
	popax
	spush $a
	spop $a
	call [$a],actionname
	pop $1
	push 0
	push 2
	call $1,gete
	ret
	end method
	end class

	class classadv
	parent classgame
	method init
	clparent classgame,init
	end method
	method newclpathf
	localstring $1
	localstring $2
	localstring $3
	localint $4
	localint $5
	localint $6
	localint $7
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	popax
	spush $a
	spop $e
	new classpathf,[$e]
	push $1
	popax
	spush $a
	push $2
	push $3
	push $4
	push $5
	push $6
	push $7
	spop $a
	call [$a],build
	end method
	method cwalkto
	localstring $1
	localstring $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	popax
	spush $a
	push $2
	popax
	spush $a
	spop $a
	call [$a],actionname
	push $2
	popax
	spush $a
	spop $a
	call [$a],getcx
	push $3
	pop $b
	popax
	add $a,$b
	push $2
	popax
	spush $a
	spop $a
	call [$a],getcy
	push $4
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],walkto
	end method
	method cwalkto2
	localstring $1
	localstring $2
	localstring $3
	localint $4
	localint $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	popax
	spush $a
	push $3
	push $2
	popax
	spush $a
	spop $a
	call [$a],getcx
	push $4
	pop $b
	popax
	add $a,$b
	push $2
	popax
	spush $a
	spop $a
	call [$a],getcy
	push $5
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],walkto
	end method
	method newclbut
	localstring $1
	localstring $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	popax
	spush $a
	spop $e
	new classbutton,[$e]
	push $1
	popax
	spush $a
	cthis getgraphpath
	push $2
	pop $b
	popax
	add $a,$b
	push $3
	push $4
	spop $a
	call [$a],build
	end method
	method newclmask
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	popax
	spush $a
	spop $e
	new classmask,[$e]
	push $1
	popax
	spush $a
	cthis getgraphpath
	push $2
	pop $b
	popax
	add $a,$b
	push $3
	spop $a
	call [$a],buildmask
	end method
	method newclmaskfunc
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	popax
	spush $a
	spop $e
	new classmask,[$e]
	push $1
	popax
	spush $a
	cthis getgraphpath
	push $2
	pop $b
	popax
	add $a,$b
	push $3
	push $4
	spop $a
	call [$a],buildmaskfunc
	end method
	method cherotalk2
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $5
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l766
	push 0
	jmp l767
l766:
	push 1
l767:
	popax
	cmp $a,0
	je l768
	push $5
	popax
	spush $a
	push 0
	spop $a
	call [$a],stop
	push $5
	popax
	spush $a
	push 1
	popax
	sub 0,$a
	push 0
	spop $a
	call [$a],setframe
	jmp l765
l768:
l765:
	push $1
	push $2
	push $3
	push $4
	cthis cherotalk
	end method
	method cherotalk
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $3
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l770
	push 0
	jmp l771
l770:
	push 1
l771:
	popax
	cmp $a,0
	je l772
	push $3
	popax
	spush $a
	push $4
	spop $a
	call [$a],play
	jmp l769
l772:
l769:
	push $1
	push $2
	cthis cbplaywithfin
	end method
	method cherosay
	localstring $1
	localint $2
	localstring $3
	localstring $4
	localstring $5
	localint $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $2
	pop igmstate
	push $3
	cthis cbplay
	push $6
	push 1
	pop $b
	popax
	cmp $a,$b
	je l774
	push 0
	jmp l775
l774:
	push 1
l775:
	popax
	cmp $a,0
	je l776
	push $1
	popax
	spush $a
	push "talk"
	push $4
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],play
	push $5
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l778
	push 0
	jmp l779
l778:
	push 1
l779:
	popax
	cmp $a,0
	je l780
	push $5
	popax
	spush $a
	spop $d
	cthis [$d]
	jmp l777
l780:
l777:
	jmp l773
l776:
	push $6
	push 0
	pop $b
	popax
	cmp $a,$b
	je l782
	push 0
	jmp l783
l782:
	push 1
l783:
	popax
	cmp $a,0
	je l784
	push $5
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l786
	push 0
	jmp l787
l786:
	push 1
l787:
	popax
	cmp $a,0
	je l788
	push $5
	popax
	spush $a
	spop $d
	cthis [$d]
	jmp l785
l788:
l785:
	push $1
	popax
	spush $a
	push "stand"
	push $4
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],play
	jmp l781
l784:
l781:
l773:
	end method
	method cgetanbyaction
	localstring $1
	localint $2
	localstring $3
	pop $3
	pop $2
	pop $1
	localint $4
	push $1
	push $2
	push $3
	cthis canfindact2
	pop $4
	push $4
	push 0
	pop $b
	popax
	cmp $a,$b
	jae l790
	push 0
	jmp l791
l790:
	push 1
l791:
	popax
	cmp $a,0
	je l792
	push $1
	push $4
	pop $b
	popax
	add $a,$b
	ret
	jmp l789
l792:
	push "null"
	ret
l789:
	end method
	method cgetelembyaction
	localstring $1
	pop $1
	push "anbg"
	call anbg0,nofactions
	push $1
	cthis cgetanbyaction
	ret
	end method
	method caddelemtomask
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $2
	popax
	spush $a
	spop $e
	new string,[$e]
	push "anbg"
	call anbg0,nofactions
	push $3
	cthis cgetanbyaction
	pop [$e]
	push $1
	popax
	spush $a
	push $2
	popax
	mov $a,[$a]
	psax
	push $4
	push "imglobcurs"
	push $5
	spop $a
	call [$a],addadvmask
	end method
	method _cstdelemframe
	cthis getey
	cthis setz
	end method
	method cstdelemframe
	localstring $1
	pop $1
	push $1
	popax
	spush $a
	push "onsetframe"
	push "_cstdelemframe"
	spop $a
	call [$a],addmethod
	end method
	method cplayelem
	localstring $1
	pop $1
	push $1
	cthis cstdelemframe
	push $1
	popax
	spush $a
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],play
	end method
	method cplayelemfin
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	popax
	spush $a
	push "onfinish"
	push $2
	spop $a
	call [$a],addmethod
	push $1
	cthis cplayelem
	end method
	method canplayfin
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	popax
	spush $a
	push "onfinish"
	push $2
	spop $a
	call [$a],addmethod
	push $1
	popax
	spush $a
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],play
	end method
	method _movybkg
	localint $1
	localstring $2
	pop $2
	pop $1
	call imgbkg,getpy
	push $1
	pop $b
	popax
	add $a,$b
	push 0
	pop $b
	popax
	cmp $a,$b
	jle l794
	push 0
	jmp l795
l794:
	push 1
l795:
	call imgbkg,getey
	push $1
	pop $b
	popax
	add $a,$b
	push 600
	pop $b
	popax
	cmp $a,$b
	jae l796
	push 0
	jmp l797
l796:
	push 1
l797:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l798
	push $2
	popax
	spush $a
	push 0
	push $1
	spop $a
	call [$a],move
	jmp l793
l798:
l793:
	end method
	method _movxbkg
	localint $1
	localstring $2
	pop $2
	pop $1
	call imgbkg,getpx
	push $1
	pop $b
	popax
	add $a,$b
	push 0
	pop $b
	popax
	cmp $a,$b
	jle l800
	push 0
	jmp l801
l800:
	push 1
l801:
	call imgbkg,getex
	push $1
	pop $b
	popax
	add $a,$b
	push 800
	pop $b
	popax
	cmp $a,$b
	jae l802
	push 0
	jmp l803
l802:
	push 1
l803:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l804
	push $2
	popax
	spush $a
	push $1
	push 0
	spop $a
	call [$a],move
	jmp l799
l804:
l799:
	end method
	method cmovybkg
	localint $1
	localint $2
	localint $3
	localint $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	pop $b
	popax
	cmp $a,$b
	jl l806
	push 0
	jmp l807
l806:
	push 1
l807:
	popax
	cmp $a,0
	je l808
	push $4
	push $5
	cthis _movybkg
	jmp l805
l808:
	push $1
	push $3
	pop $b
	popax
	cmp $a,$b
	ja l810
	push 0
	jmp l811
l810:
	push 1
l811:
	popax
	cmp $a,0
	je l812
	push $4
	popax
	sub 0,$a
	push $5
	cthis _movybkg
	jmp l809
l812:
l809:
l805:
	end method
	method cmovxbkg
	localint $1
	localint $2
	localint $3
	localint $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	pop $b
	popax
	cmp $a,$b
	jl l814
	push 0
	jmp l815
l814:
	push 1
l815:
	popax
	cmp $a,0
	je l816
	push $4
	push $5
	cthis _movxbkg
	jmp l813
l816:
	push $1
	push $3
	pop $b
	popax
	cmp $a,$b
	ja l818
	push 0
	jmp l819
l818:
	push 1
l819:
	popax
	cmp $a,0
	je l820
	push $4
	popax
	sub 0,$a
	push $5
	cthis _movxbkg
	jmp l817
l820:
l817:
l813:
	end method
	end class

	class classadvpiast
	parent classadv
	method init
	push 0
	pop igmstate
	clparent classadv,init
	push "sounds/polanie/"
	cthis setwavpath
	push "sfxgetitem"
	push "sfx/getitem.wav"
	cthis newsnd
	call bsms,setstd
	call clmusic,play
	call clbuts,reset
	call clesav,save
	end method
	method exit
	call bsms,setstd
	end method
	method cloadpiast
	localstring $1
	cthis getgraphpath
	pop $1
	push "scripts/common/"
	cthis setgraphpath
	push "anpiast"
	push "piasts.pyz"
	push 50
	cthis newanima
	push 2
	call anpiast,setdelay
	push $1
	cthis setgraphpath
	end method
	method cloadpathf
	localstring $1
	pop $1
	push "ptpiast"
	push "anpiast"
	cthis getgraphpath
	push $1
	pop $b
	popax
	add $a,$b
	push 19
	push 19
	push 8
	push 1
	cthis newclpathf
	push "mptreach"
	push "mfinptpiast"
	call ptpiast,addsigs
	end method
	method cloadterrain
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	cthis setgraphpath
	push $2
	cthis csetbkg
	push $3
	cthis cloadbgelem
	end method
	method mbuildmask
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push "clm"
	push $1
	push $2
	push $3
	push "mclickmask"
	cthis caddelemtomask
	end method
	method advclick
	push igmstate
	push 0
	pop $b
	popax
	cmp $a,$b
	je l822
	push 0
	jmp l823
l822:
	push 1
l823:
	push igmstate
	push 5
	pop $b
	popax
	cmp $a,$b
	je l824
	push 0
	jmp l825
l824:
	push 1
l825:
	popax
	pop $b
	or $a,$b
	popax
	cmp $a,0
	je l826
	push igmdebug
	push 1
	pop $b
	popax
	cmp $a,$b
	je l828
	push 0
	jmp l829
l828:
	push 1
l829:
	popax
	cmp $a,0
	je l830
	push 1
	cthis cactsndstop
	jmp l827
l830:
l827:
	jmp l821
l826:
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	je l832
	push 0
	jmp l833
l832:
	push 1
l833:
	popax
	cmp $a,0
	je l834
	call mouse,getpx
	call mouse,getpy
	call ptpiast,goto
	jmp l831
l834:
l831:
l821:
	end method
	method keydown
	push igmdebug
	push 0
	pop $b
	popax
	cmp $a,$b
	je l836
	push 0
	jmp l837
l836:
	push 1
l837:
	popax
	cmp $a,0
	je l838
	ret
	jmp l835
l838:
l835:
	push "p"
	call keyboard,iskey
	push 1
	pop $b
	popax
	cmp $a,$b
	je l840
	push 0
	jmp l841
l840:
	push 1
l841:
	popax
	cmp $a,0
	je l842
	call clpause,pause
	jmp l839
l842:
	push "escape"
	call keyboard,iskey
	push 1
	pop $b
	popax
	cmp $a,$b
	je l844
	push 0
	jmp l845
l844:
	push 1
l845:
	popax
	cmp $a,0
	je l846
	call claskexit,askexittomenu
	jmp l843
l846:
	call clnextgm,checkkey
l843:
l839:
	end method
	end class

	new int,igmdebug
	new int,igmeasy
	new int,igmdemo
	new classgamepause,clpause
	new classgamemusic,clmusic
	new classeasysaver,clesav
	new snd,sndakskermovon
	module claskexit
	parent classasker
	method init
	clparent classasker,init
	push "sounds/polanie/"
	cthis setwavpath
	push "sndaskexit"
	push "nar07.wav"
	cthis newsnd
	push "sndyes"
	push "nar08.wav"
	cthis newsnd
	push "sndno"
	push "nar09.wav"
	cthis newsnd
	push "sndaskdif"
	push "nar10.wav"
	cthis newsnd
	push "sndaskrestart"
	push "nar11.wav"
	cthis newsnd
	push "sndrestartbajka"
	push "nar12.wav"
	cthis newsnd
	push "sndeasygame"
	push "nar13.wav"
	cthis newsnd
	push "sounds/polanie/sfx/butmovon.wav"
	call sndakskermovon,load
	new int,ieasier
	push "scripts/common/asker.pyz"
	push 2000
	cthis load
	push "sndakskermovon"
	cthis fxonmovon
	end method
	method askexittomenu
	push "sndaskexit"
	push "sndyes"
	push "sndno"
	push "myestomenu"
	push "mnotomenu"
	cthis ask
	end method
	method askplayeasy
	push "sndaskdif"
	push "sndyes"
	push "sndno"
	push "myeseasy"
	push "mnoeasy"
	cthis ask
	end method
	method askplayeasy2
	localstring $1
	localstring $2
	pop $2
	pop $1
	push "sndaskdif"
	push "sndyes"
	push "sndno"
	push $1
	push $2
	cthis ask
	end method
	method myeseasy
	push 1
	pop igmeasy
	end method
	method mnoeasy
	push 0
	pop igmeasy
	end method
	method askrestart
	call gameapi,getgamename
	push "gamebajka"
	pop $b
	popax
	cmp $a,$b
	je l848
	push 0
	jmp l849
l848:
	push 1
l849:
	popax
	cmp $a,0
	je l850
	push "sndrestartbajka"
	push "sndyes"
	push "sndno"
	push "myesrestart"
	push "mnorestart"
	cthis ask
	jmp l847
l850:
	push "sndaskrestart"
	push "sndyes"
	push "sndno"
	push "myesrestart"
	push "mnorestart"
	cthis ask
l847:
	end method
	method mnotomenu
	end method
	method myestomenu
	call gameapi,getgamename
	push "gamemenu"
	pop $b
	popax
	cmp $a,$b
	je l852
	push 0
	jmp l853
l852:
	push 1
l853:
	popax
	cmp $a,0
	je l854
	push "gameoutro"
	call gameapi,play
	jmp l851
l854:
	push "gamemenu"
	call gameapi,play
l851:
	end method
	method mnorestart
	end method
	method myesrestart
	cthis crestart
	end method
	end module

	module clbuts
	method init
	end method
	method load
	new classbutton,buts
	push "scripts/common/buttons.pyz"
	push 4000
	push "imglobcurs"
	call buts,build
	call engine,actclassname
	push "butclick"
	call buts,transclickfunc
	call engine,actclassname
	push "butmovon"
	call buts,transmovonfunc
	call buts,disableall
	new db,dbb
	push "scripts/common/buts.db"
	call dbb,load
	new snd,sndfxglobon
	push "sounds/polanie/sfx/globbutmovon.wav"
	call sndfxglobon,load
	end method
	method reset
	call buts,disableall
	localint $1
	call gameapi,getgamename
	call dbb,findbyrow
	pop $1
	push $1
	push 0
	pop $b
	popax
	cmp $a,$b
	jae l856
	push 0
	jmp l857
l856:
	push 1
l857:
	popax
	cmp $a,0
	je l858
	localint $2
	push $1
	call dbb,getcolsno
	pop $2
	localint $3
	push 1
	pop $3
l859:
	push $3
	push $2
	pop $b
	popax
	cmp $a,$b
	jl l860
	push 0
	jmp l861
l860:
	push 1
l861:
	popax
	cmp $a,0
	je l862
	jmp l864
l863:
	add $3,1
	pop $3
	jmp l859
l864:
	push $1
	push $3
	call dbb,get
	call buts,enable
	jmp l863
l862:
	jmp l855
l858:
l855:
	end method
	method enable
	localstring $1
	pop $1
	push $1
	call buts,enable
	end method
	method butmovon
	localstring $1
	pop $1
	call sndfxglobon,play
	end method
	method butclick
	localstring $1
	pop $1
	push $1
	push "pause"
	pop $b
	popax
	cmp $a,$b
	je l866
	push 0
	jmp l867
l866:
	push 1
l867:
	popax
	cmp $a,0
	je l868
	call clpause,pause
	jmp l865
l868:
	push $1
	push "exit"
	pop $b
	popax
	cmp $a,$b
	je l870
	push 0
	jmp l871
l870:
	push 1
l871:
	popax
	cmp $a,0
	je l872
	call claskexit,askexittomenu
	jmp l869
l872:
	push $1
	push "restart"
	pop $b
	popax
	cmp $a,$b
	je l874
	push 0
	jmp l875
l874:
	push 1
l875:
	popax
	cmp $a,0
	je l876
	call claskexit,askrestart
	jmp l873
l876:
l873:
l869:
l865:
	end method
	end module

	game gameintro
	parent classadvpiast
	method init
	clparent classadvpiast,init
	push "scripts/introutro/"
	cthis setgraphpath
	push "inoutbkg.png"
	cthis csetbkg
	push "annapis1"
	push "intro.pyz"
	push 10
	cthis newanima
	push "annapis1"
	push "annapis2"
	cthis copyanima
	push 20
	call annapis2,setz
	push 1
	push 0
	call annapis2,setframe
	push "sndnar2"
	push "nar06.wav"
	cthis newsnd
	push "nar01.wav"
	cthis cplayintro
	push "onfinish"
	push "finintro"
	call sndintro,addmethod
	push "onfinish"
	push "finsnd2"
	call sndnar2,addmethod
	push 0
	call annapis1,play
	end method
	method finintro
	push "sndnar2"
	cthis cbplay
	push 1
	call annapis2,play
	end method
	method finsnd2
	push "gamemenu"
	call gameapi,play
	end method
	method mouselclick
	push 1
	cthis cactsndstop
	end method
	end game

	game gamemenu
	parent classadvpiast
	method init
	clparent classadvpiast,init
	call clsav,free
	push "scripts/menu/"
	cthis setgraphpath
	push "menubkg.png"
	cthis csetbkg
	push "sndbajka"
	push "nar15.wav"
	cthis newsnd
	push "sndgra"
	push "nar14.wav"
	cthis newsnd
	push "sndload"
	push "nar03.wav"
	cthis newsnd
	push "clb"
	push "buts.pyz"
	push 10
	push "imglobcurs"
	cthis newclbut
	push "gmbutclick"
	call clb,clickfunc
	push "gmbutmove"
	call clb,movonfunc
	end method
	method gmbutmove
	localstring $1
	pop $1
	call sndakskermovon,play
	push $1
	push "bajka"
	pop $b
	popax
	cmp $a,$b
	je l878
	push 0
	jmp l879
l878:
	push 1
l879:
	popax
	cmp $a,0
	je l880
	push "sndbajka"
	cthis crselfplay
	jmp l877
l880:
	push $1
	push "gra"
	pop $b
	popax
	cmp $a,$b
	je l882
	push 0
	jmp l883
l882:
	push 1
l883:
	popax
	cmp $a,0
	je l884
	push "sndgra"
	cthis crselfplay
	jmp l881
l884:
	push $1
	push "load"
	pop $b
	popax
	cmp $a,$b
	je l886
	push 0
	jmp l887
l886:
	push 1
l887:
	popax
	cmp $a,0
	je l888
	push "sndload"
	cthis crselfplay
	jmp l885
l888:
	push "cos innego: "
	push $1
	pop $b
	popax
	add $a,$b
	call engine,print
l885:
l881:
l877:
	end method
	method gmbutclick
	localstring $1
	pop $1
	push $1
	push "bajka"
	pop $b
	popax
	cmp $a,$b
	je l890
	push 0
	jmp l891
l890:
	push 1
l891:
	popax
	cmp $a,0
	je l892
	push igmdemo
	push 0
	pop $b
	popax
	cmp $a,$b
	je l894
	push 0
	jmp l895
l894:
	push 1
l895:
	popax
	cmp $a,0
	je l896
	push "gamebajka"
	call gameapi,play
	jmp l893
l896:
l893:
	jmp l889
l892:
	push $1
	push "gra"
	pop $b
	popax
	cmp $a,$b
	je l898
	push 0
	jmp l899
l898:
	push 1
l899:
	popax
	cmp $a,0
	je l900
	push "gamepodworko1"
	call gameapi,play
	jmp l897
l900:
	push $1
	push "load"
	pop $b
	popax
	cmp $a,$b
	je l902
	push 0
	jmp l903
l902:
	push 1
l903:
	popax
	cmp $a,0
	je l904
	push "gameload"
	call gameapi,play
	jmp l901
l904:
	push "cos innego: "
	push $1
	pop $b
	popax
	add $a,$b
	call engine,print
l901:
l897:
l889:
	end method
	end game

	game gameload
	parent classadvpiast
	method init
	clparent classadvpiast,init
	push "scripts/saves/"
	cthis setgraphpath
	push "loadbkg.png"
	cthis csetbkg
	push "clb"
	push "buts.pyz"
	push 10
	push "imglobcurs"
	cthis newclbut
	push "gmbutclick"
	call clb,clickfunc
	push "gmmovon"
	call clb,movonfunc
	call clb,disableall
	call clesav,getlevel
	push 1
	pop $b
	popax
	add $a,$b
	call clb,ienable
	new string,splaygame
	end method
	method gmmovon
	localstring $1
	pop $1
	call sndakskermovon,play
	end method
	method gmbutclick
	localstring $1
	pop $1
	localint $2
	push $1
	pop $2
	push $2
	push 1
	pop $b
	popax
	sub $a,$b
	call clesav,getgame
	pop splaygame
	push splaygame
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l906
	push 0
	jmp l907
l906:
	push 1
l907:
	popax
	cmp $a,0
	je l908
	push "mloadeasy"
	push "mloadhard"
	call claskexit,askplayeasy2
	jmp l905
l908:
l905:
	end method
	method mloadeasy
	push 1
	pop igmeasy
	push splaygame
	call gameapi,play
	end method
	method mloadhard
	push 0
	pop igmeasy
	push splaygame
	call gameapi,play
	end method
	end game

	game gameoutro
	parent classadvpiast
	method init
	clparent classadvpiast,init
	push "scripts/introutro/"
	cthis setgraphpath
	push "inoutbkg.png"
	cthis csetbkg
	push "timfin"
	push 23000
	push 1
	push "timfinito"
	cthis cnewtimerfin
	push "timaut"
	push 3000
	push 1
	push "timfinaut"
	cthis cnewtimerfin
	push "anout"
	push "outro.pyz"
	push 10
	cthis newanima
	call anout,hide
	new int,ileau
	push "anout"
	push "ano"
	cthis newanactions
	pop ileau
	new int,id
	push 0
	pop id
	new gmobjvec,graut
	localint $1
	push 0
	pop $1
l909:
	push $1
	push ileau
	pop $b
	popax
	cmp $a,$b
	jl l910
	push 0
	jmp l911
l910:
	push 1
l911:
	popax
	cmp $a,0
	je l912
	jmp l914
l913:
	add $1,1
	pop $1
	jmp l909
l914:
	push "ano"
	push $1
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	push "onfinish"
	push "finano"
	spop $a
	call [$a],addmethod
	push "ano"
	push $1
	pop $b
	popax
	add $a,$b
	call graut,add
	jmp l913
l912:
	push 0
	call ano0,play
	push "imgautorzy"
	push "autorzy.png"
	push 10
	cthis newimg
	call imgautorzy,hide
	end method
	method finano
	add id,1
	pop id
	push id
	call anout,nofactions
	pop $b
	popax
	cmp $a,$b
	jl l916
	push 0
	jmp l917
l916:
	push 1
l917:
	popax
	cmp $a,0
	je l918
	push "ano"
	push id
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],play
	jmp l915
l918:
	call timaut,play
l915:
	end method
	method timfinaut
	call graut,hide
	call imgautorzy,show
	call timfin,play
	end method
	method timfinito
	push igmdemo
	push 0
	pop $b
	popax
	cmp $a,$b
	je l920
	push 0
	jmp l921
l920:
	push 1
l921:
	popax
	cmp $a,0
	je l922
	call gameapi,exit
	jmp l919
l922:
	push "gamedemoout"
	call gameapi,play
l919:
	end method
	method mouselclick
	cthis timfinito
	end method
	end game

	game gamedemoout
	parent classadvpiast
	method init
	clparent classadvpiast,init
	call gameapi,stdbkg
	push "anscr"
	push "scripts/demo/screens.pyz"
	push 10
	cthis newanima
	push 0
	call anscr,anloopplay
	end method
	method mouselclick
	call gameapi,exit
	end method
	end game

	new classnextgame,clnextgm
	game main
	method init
	push 0
	pop igmstate
	push 1
	pop igmdebug
	push 0
	pop igmeasy
	push 1
	pop igmdemo
	call bsms,setstd
	push "sounds/polanie/bgr/"
	call clmusic,sndbgrpath
	push "sounds/polanie/music/"
	call clmusic,musicpath
	push "sounds/musicpolanie.db"
	call clmusic,load
	push "scripts/common/games.db"
	call clnextgm,load
	call clbuts,load
	push "scripts/saves/lastlev"
	push "scripts/saves/loads.db"
	call clesav,load
	push "gameintro"
	call gameapi,play
	end method
	end game

	game gameroznice
	parent classadvpiast
	method init
	clparent classadvpiast,init
	push "scripts/part1/roznice/"
	cthis setgraphpath
	push "bkgroznice.png"
	cthis csetbkg
	push "anwoznica"
	push "woznica.pyz"
	push 20
	cthis newanima
	push "anroznice"
	push "roznice.pyz"
	push 10
	cthis newanima
	push "ankufer"
	push "kurerek.pyz"
	push 30
	cthis newanima
	call ankufer,hide
	push 0
	push 2
	call ankufer,move
	new int,ileroznic
	push "anroznice"
	push "anr"
	push 0
	cthis newanframes
	pop ileroznic
	call anroznice,hide
	push 0
	pop igmstate
	push 1
	call anwoznica,setdelay
	push "anwoznica"
	push "nadchodzi"
	push "woznicafin"
	cthis csplaywithfin
	push "kursormlot.png"
	cthis cloadcursor
	push "sndpias"
	push 2
	push "part1piast"
	push 2
	push 8
	cthis newsnds
	push "sndmar"
	push 1
	push "part1maras"
	push 1
	push 7
	cthis newsnds
	push "sndbum"
	push "sfx/napraw.wav"
	cthis newsnd
	end method
	method mwoznicatalk
	localstring $1
	localstring $2
	pop $2
	pop $1
	push "gada"
	call anwoznica,play
	push $1
	push $2
	cthis cbplaywithfin
	end method
	method mpiasttalk
	localstring $1
	localstring $2
	pop $2
	pop $1
	push 0
	call anwoznica,stop
	push $1
	push $2
	cthis cbplaywithfin
	end method
	method mwoznadchodzi
	push igmstate
	push 0
	pop $b
	popax
	cmp $a,$b
	je l924
	push 0
	jmp l925
l924:
	push 1
l925:
	popax
	cmp $a,0
	je l926
	push 2
	call anwoznica,setdelay
	push "sndmar1"
	push "mfinmar1"
	cthis mwoznicatalk
	jmp l923
l926:
	push igmstate
	push 2
	pop $b
	popax
	cmp $a,$b
	je l928
	push 0
	jmp l929
l928:
	push 1
l929:
	popax
	cmp $a,0
	je l930
	push 2
	call anwoznica,setdelay
	push "sndmar4"
	push "mfinmar4"
	cthis mwoznicatalk
	jmp l927
l930:
l927:
l923:
	end method
	method mfinmar4
	push "sndpias5"
	push "mfinp5"
	cthis mpiasttalk
	end method
	method mfinp5
	push "sndmar5"
	push "mfinmar5"
	cthis mwoznicatalk
	end method
	method mfinmar5
	push "sndpias6"
	push "mfinp6"
	cthis mpiasttalk
	end method
	method mfinp6
	push "sndmar6"
	push "mfinmar6"
	cthis mwoznicatalk
	end method
	method mfinmar6
	push "sndpias7"
	push "mfinp7"
	cthis mpiasttalk
	end method
	method mfinp7
	push "sndmar7"
	push "mfinmar7"
	cthis mwoznicatalk
	end method
	method mfinmar7
	push "sndpias8"
	push "mfinp8"
	cthis mpiasttalk
	push 0
	call ankufer,play
	end method
	method mfinp8
	push "gamepodworko2"
	call gameapi,play
	end method
	method mfinmar1
	push "sndpias2"
	push "mfinp2"
	cthis mpiasttalk
	end method
	method mfinp2
	push "sndmar2"
	push "mfinmar2"
	cthis mwoznicatalk
	end method
	method mfinmar2
	push 1
	call anwoznica,setdelay
	push "odchodzi"
	call anwoznica,play
	end method
	method mwozgada
	push 1
	popax
	sub 0,$a
	cthis play
	end method
	method mwozodchodzi
	push igmstate
	push 0
	pop $b
	popax
	cmp $a,$b
	je l932
	push 0
	jmp l933
l932:
	push 1
l933:
	popax
	cmp $a,0
	je l934
	call anwoznica,hide
	push "sndpias3"
	push "mfinp3"
	cthis cbplaywithfin
	jmp l931
l934:
l931:
	end method
	method mfinp3
	call sndmar3,play
	push 1
	pop igmstate
	end method
	method woznicafin
	push "mwoz"
	cthis actionname
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	spop $d
	cthis [$d]
	end method
	method usunroznice
	call sndbum,play
	sub ileroznic,1
	pop ileroznic
	push ileroznic
	push 0
	pop $b
	popax
	cmp $a,$b
	jle l936
	push 0
	jmp l937
l936:
	push 1
l937:
	popax
	cmp $a,0
	je l938
	push 2
	pop igmstate
	push "nadchodzi"
	call anwoznica,play
	call sndpias4,play
	jmp l935
l938:
l935:
	end method
	method mouselclick
	push igmdebug
	push 1
	pop $b
	popax
	cmp $a,$b
	je l940
	push 0
	jmp l941
l940:
	push 1
l941:
	popax
	cmp $a,0
	je l942
	push 1
	cthis cactsndstop
	jmp l939
l942:
l939:
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	je l944
	push 0
	jmp l945
l944:
	push 1
l945:
	popax
	cmp $a,0
	je l946
	localstring $1
	call mouse,getpx
	call mouse,getpy
	push 10
	pop $b
	popax
	add $a,$b
	push 1
	push 1
	push 10
	push 10
	call engine,getimg
	pop $1
	push $1
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l948
	push 0
	jmp l949
l948:
	push 1
l949:
	popax
	cmp $a,0
	je l950
	push $1
	popax
	spush $a
	spop $a
	call [$a],hide
	cthis usunroznice
	jmp l947
l950:
l947:
	jmp l943
l946:
l943:
	end method
	end game

	class classpart1
	parent classadvpiast
	method init
	clparent classadvpiast,init
	push "sfxstep"
	push "sfx/step.wav"
	cthis newsnd
	end method
	method loadpiast
	cthis cloadpiast
	push "anpiast"
	push 270
	push 240
	cthis cputgr2
	end method
	method loadwoz
	push "sndgalop"
	push "sfx/tentent.wav"
	cthis newsndloop
	push "sndparsk"
	push "sfx/konparsk.wav"
	cthis newsnd
	push "scripts/part1/podworze/"
	cthis setgraphpath
	push "anwoz"
	push "woz.pyz"
	push 30
	cthis newanima
	push "anwoz"
	push "anwoznica"
	cthis copyanima
	push "anwoz"
	push "ankon"
	cthis copyanima
	new gmobjvec,grwoz
	push "anwoz"
	call grwoz,add
	push "anwoznica"
	call grwoz,add
	push "ankon"
	call grwoz,add
	push 2
	call grwoz,setdelay
	push "kongo"
	push 0
	call ankon,setframe
	push "woz"
	push 0
	call anwoz,setframe
	push "woznica"
	push 0
	call anwoznica,setframe
	push "ankon"
	cthis looponfinish
	push "onendframe"
	push "konframe"
	call ankon,addmethod
	push "anwoz"
	cthis looponfinish
	push "anwoz"
	cthis cputgr
	push "anwoznica"
	cthis cputgr
	push "ankon"
	cthis cputgr
	end method
	method loadbkg
	push "scripts/part1/podworze/"
	cthis setgraphpath
	push "part1bkg.png"
	cthis csetbkg
	push "elpodworko.pyz"
	cthis cloadbgelem
	end method
	method loadpathf
	push "scripts/part1/podworze/"
	cthis setgraphpath
	push "part1mask.png"
	cthis cloadpathf
	end method
	end class

	game gamepodworko1
	parent classpart1
	method init
	clparent classpart1,init
	cthis loadbkg
	cthis loadpiast
	push "standdd"
	call anpiast,play
	cthis loadwoz
	push "timfin"
	push 2500
	push 1
	push "fintimfin"
	cthis cnewtimerfin
	push "sndpiast1"
	push "part1piast1.wav"
	cthis newsnd
	push "sndnar2"
	push "part1nar2.wav"
	push "finsndnar2"
	cthis cnewsndfin
	push "sndnar3"
	push "part1nar3.wav"
	push "gamestart"
	cthis cnewsndfin
	push "part1nar1.wav"
	cthis cplayintro
	push "sndintro"
	push "sndnar2"
	cthis cplayonfin
	call claskexit,askplayeasy
	end method
	method finsndnar2
	push "sndnar3"
	cthis cbplay
	call sndgalop,play
	call sndparsk,play
	push 50
	call sndgalop,setvol
	push 50
	call sndparsk,setvol
	end method
	method gamestart
	push 100
	call sndgalop,setvol
	push 100
	call sndparsk,setvol
	push 0
	call sndparsk,stop
	push "sndparsk"
	push "startwozy"
	cthis cplaywithfin
	push 1
	pop igmstate
	end method
	method startwozy
	call sndpiast1,play
	push 1
	popax
	sub 0,$a
	call grwoz,nplay
	end method
	method konframe
	cthis getpx
	push 240
	pop $b
	popax
	cmp $a,$b
	ja l952
	push 0
	jmp l953
l952:
	push 1
l953:
	popax
	cmp $a,0
	je l954
	push 8
	popax
	sub 0,$a
	push 0
	call grwoz,move
	jmp l951
l954:
	push 0
	call sndgalop,stop
	push 0
	call grwoz,stop
	push "konstand"
	push 0
	cthis setframe
	push "standrr"
	push 0
	call anpiast,setframe
	call timfin,play
l951:
	end method
	method fintimfin
	push "gameroznice"
	call gameapi,play
	end method
	method mouselclick
	push igmdebug
	push 1
	pop $b
	popax
	cmp $a,$b
	je l956
	push 0
	jmp l957
l956:
	push 1
l957:
	popax
	cmp $a,0
	je l958
	push 1
	cthis cactsndstop
	jmp l955
l958:
l955:
	end method
	end game

	game gamepodworko2
	parent classpart1
	method init
	clparent classpart1,init
	cthis loadbkg
	cthis loadpiast
	push "standuu"
	push 0
	call anpiast,setframe
	cthis loadwoz
	push 540
	popax
	sub 0,$a
	push 0
	call grwoz,move
	push "konstand"
	push 0
	call ankon,setframe
	cthis loadpathf
	push "sndmar1"
	push "part1maras8.wav"
	push "mfintimgo"
	cthis cnewsndfinbplay
	push "clm"
	push "maska.pyz"
	push "imglobcurs"
	push "mclickmask"
	cthis newclmaskfunc
	push "las"
	call clm,disable
	new string,sandom
	push "dom"
	call clm,getimg
	pop sandom
	new classfadeinout,clfio
	end method
	method mclickmask
	localstring $1
	pop $1
	push $1
	push "dom"
	pop $b
	popax
	cmp $a,$b
	je l960
	push 0
	jmp l961
l960:
	push 1
l961:
	popax
	cmp $a,0
	je l962
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	je l964
	push 0
	jmp l965
l964:
	push 1
l965:
	popax
	cmp $a,0
	je l966
	push "ptpiast"
	push sandom
	push 0
	push 0
	cthis cwalkto
	jmp l963
l966:
l963:
	jmp l959
l962:
	push "mask click error: "
	push $1
	pop $b
	popax
	add $a,$b
	call engine,print
l959:
	end method
	method konframe
	call anwoz,getex
	push 0
	pop $b
	popax
	cmp $a,$b
	jl l968
	push 0
	jmp l969
l968:
	push 1
l969:
	popax
	cmp $a,0
	je l970
	push 0
	call grwoz,stop
	push 1
	pop igmstate
	push 2
	push 2
	popax
	sub 0,$a
	push "sndgalop"
	push "mfingalop"
	call clfio,sndvolume
	jmp l967
l970:
	push 8
	popax
	sub 0,$a
	push 0
	call grwoz,move
l967:
	end method
	method mfingalop
	push 0
	call sndgalop,stop
	end method
	method mfinptpiast
	call ptpiast,stand
	end method
	method mptreach
	localstring $1
	pop $1
	call ptpiast,stand
	push "gamerzepicha1"
	call gameapi,play
	end method
	method mfintimgo
	push "kongo"
	push 0
	call ankon,setframe
	push 1
	popax
	sub 0,$a
	call grwoz,nplay
	push "sndgalop"
	cthis sndplayloop
	call sndparsk,play
	end method
	method mouselclick
	cthis advclick
	end method
	end game

	game gamepodworko3
	parent classpart1
	method init
	clparent classpart1,init
	cthis loadbkg
	cthis loadpiast
	push "standdd"
	push 0
	call anpiast,setframe
	push 20
	popax
	sub 0,$a
	push 40
	popax
	sub 0,$a
	call anpiast,move
	call anpiast,anloopfin
	cthis loadpathf
	push "clm"
	push "maska.pyz"
	push "imglobcurs"
	push "mclickmask"
	cthis newclmaskfunc
	push "dom"
	call clm,disable
	new string,sanlas
	push "las"
	call clm,getimg
	pop sanlas
	call anpiast,getpx
	call anpiast,getey
	push 40
	pop $b
	popax
	add $a,$b
	call ptpiast,goto
	push "sndintro"
	push "part1piast27.wav"
	push "mstartgame"
	cthis cnewsndfin
	end method
	method mstartgame
	push 1
	pop igmstate
	call ptpiast,stand
	end method
	method mfinptpiast
	push igmstate
	push 0
	pop $b
	popax
	cmp $a,$b
	je l972
	push 0
	jmp l973
l972:
	push 1
l973:
	popax
	cmp $a,0
	je l974
	push "sndintro"
	cthis cbplay
	call ptpiast,ansay
	jmp l971
l974:
	call ptpiast,stand
l971:
	end method
	method mptreach
	localstring $1
	pop $1
	call ptpiast,stand
	push "gamepart1las1"
	call gameapi,play
	end method
	method mclickmask
	localstring $1
	pop $1
	push $1
	push "las"
	pop $b
	popax
	cmp $a,$b
	je l976
	push 0
	jmp l977
l976:
	push 1
l977:
	popax
	cmp $a,0
	je l978
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	je l980
	push 0
	jmp l981
l980:
	push 1
l981:
	popax
	cmp $a,0
	je l982
	push "ptpiast"
	push sanlas
	push 0
	push 0
	cthis cwalkto
	jmp l979
l982:
l979:
	jmp l975
l978:
	push "mask click error: "
	push $1
	pop $b
	popax
	add $a,$b
	call engine,print
l975:
	end method
	method mouselclick
	cthis advclick
	end method
	end game

	game gamepuzzle
	parent classadvpiast
	method init
	clparent classadvpiast,init
	push "scripts/part1/puzzle/"
	cthis setgraphpath
	cthis cstdbkg
	push "clb"
	push "strzalki.pyz"
	push 20
	push "imglobcurs"
	cthis newclbut
	push "gmbutclick"
	call clb,clickfunc
	push "gmbutrel"
	call clb,relfunc
	push "gmbutrel"
	call clb,movofffunc
	push "timrev"
	push 50
	push 1
	push "fintimrev"
	cthis cnewtimerfin
	push "anpodklad"
	push "puzzle.pyz"
	push 20
	cthis newanima
	new int,ilepuz
	push "anpodklad"
	push "anp"
	push 0
	cthis newanframes
	pop ilepuz
	push 1
	push 0
	call anpodklad,setframe
	push 5
	call anpodklad,setz
	localstring $1
	new int,posx
	push 30
	pop posx
	new int,iy1
	call clb,getpulap1
	pop iy1
	new int,iy2
	call clb,getpulap2
	pop iy2
	new gmobjvec,grpz
	localint $2
	push iy1
	pop $2
	localint $3
	push 0
	pop $3
	localint $4
	localint $5
	push 0
	pop $5
l983:
	push $5
	push ilepuz
	pop $b
	popax
	cmp $a,$b
	jl l984
	push 0
	jmp l985
l984:
	push 1
l985:
	popax
	cmp $a,0
	je l986
	jmp l988
l987:
	add $5,1
	pop $5
	jmp l983
l988:
	push "anp"
	push $5
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	call clanpack,resizemethods
	push $1
	call grpz,add
	jmp l987
l986:
	call grpz,hash
	localint $6
	push 0
	pop $6
l989:
	push $6
	push ilepuz
	pop $b
	popax
	cmp $a,$b
	jl l990
	push 0
	jmp l991
l990:
	push 1
l991:
	popax
	cmp $a,0
	je l992
	jmp l994
l993:
	add $6,1
	pop $6
	jmp l989
l994:
	push $6
	call grpz,get
	pop $1
	push $1
	popax
	spush $a
	push posx
	push $2
	spop $a
	call [$a],setbpos
	push $1
	popax
	spush $a
	push 0
	push iy1
	push 800
	push iy2
	spop $a
	call [$a],clip
	push $1
	popax
	spush $a
	spop $a
	call [$a],geth
	popax
	add $2,$a
	pop $2
	jmp l993
l992:
	new string,sdir
	new string,smov
	push "null"
	pop smov
	new int,iznr
	push 20
	pop iznr
	new classsndbank,csok
	push "part1piast"
	push 12
	push 21
	push 0
	push 0
	call csok,load
	push "sndsiem1"
	push "part1siemowit1.wav"
	cthis newsnd
	push "sndrzep"
	push 2
	push "part1rzepicha"
	push 2
	push 3
	cthis newsnds
	push "sndpias"
	push 22
	push "part1piast"
	push 22
	push 23
	cthis newsnds
	push "part1piast11.wav"
	push "mstartgame"
	cthis cplayintrofun
	push "sfxrew"
	push "sfx/przesun.wav"
	cthis newsndloop
	push "sfxget"
	push "sfx/getpuz.wav"
	cthis newsnd
	push "sfxput"
	push "sfx/putpuz.wav"
	cthis newsnd
	push "sfxbad"
	push "sfx/putbadpuz.wav"
	cthis newsnd
	end method
	method getpulap1
	push "up"
	cthis getimg
	popax
	spush $a
	spop $a
	call [$a],getey
	push 10
	pop $b
	popax
	add $a,$b
	ret
	end method
	method getpulap2
	push "down"
	cthis getimg
	popax
	spush $a
	spop $a
	call [$a],getpy
	push 10
	pop $b
	popax
	sub $a,$b
	ret
	end method
	method gmbutclick
	localstring $1
	pop $1
	call grpz,size
	push 0
	pop $b
	popax
	cmp $a,$b
	jle l996
	push 0
	jmp l997
l996:
	push 1
l997:
	popax
	cmp $a,0
	je l998
	ret
	jmp l995
l998:
l995:
	push $1
	pop sdir
	cthis mclickbut
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1000
	push 0
	jmp l1001
l1000:
	push 1
l1001:
	popax
	cmp $a,0
	je l1002
	call timrev,play
	call sfxrew,play
	jmp l999
l1002:
l999:
	end method
	method gmbutrel
	localstring $1
	pop $1
	push 0
	call timrev,stop
	push 0
	call sfxrew,stop
	end method
	method mclickbut
	call grpz,size
	push 0
	pop $b
	popax
	cmp $a,$b
	jle l1004
	push 0
	jmp l1005
l1004:
	push 1
l1005:
	popax
	cmp $a,0
	je l1006
	push 0
	ret
	jmp l1003
l1006:
l1003:
	push sdir
	push "down"
	pop $b
	popax
	cmp $a,$b
	je l1008
	push 0
	jmp l1009
l1008:
	push 1
l1009:
	call grpz,last
	popax
	spush $a
	spop $a
	call [$a],getey
	push iy2
	pop $b
	popax
	cmp $a,$b
	ja l1010
	push 0
	jmp l1011
l1010:
	push 1
l1011:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l1012
	push 0
	push 20
	popax
	sub 0,$a
	call grpz,move
	push 1
	ret
	jmp l1007
l1012:
	push sdir
	push "up"
	pop $b
	popax
	cmp $a,$b
	je l1014
	push 0
	jmp l1015
l1014:
	push 1
l1015:
	call grpz,first
	popax
	spush $a
	spop $a
	call [$a],getpy
	push iy1
	pop $b
	popax
	cmp $a,$b
	jl l1016
	push 0
	jmp l1017
l1016:
	push 1
l1017:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l1018
	push 0
	push 20
	call grpz,move
	push 1
	ret
	jmp l1013
l1018:
l1013:
l1007:
	push 0
	ret
	end method
	method fintimrev
	cthis mclickbut
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1020
	push 0
	jmp l1021
l1020:
	push 1
l1021:
	popax
	cmp $a,0
	je l1022
	cthis play
	jmp l1019
l1022:
	push 0
	call sfxrew,stop
l1019:
	end method
	method mstartgame
	push 1
	pop igmstate
	end method
	method mousemove
	push smov
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l1024
	push 0
	jmp l1025
l1024:
	push 1
l1025:
	popax
	cmp $a,0
	je l1026
	push smov
	popax
	spush $a
	call mouse,getpx
	call mouse,getpy
	spop $a
	call [$a],setrelpos
	jmp l1023
l1026:
l1023:
	end method
	method misnear
	localstring $1
	pop $1
	push $1
	popax
	spush $a
	spop $a
	call [$a],getpx
	push $1
	popax
	spush $a
	spop $a
	call [$a],getpy
	push $1
	popax
	spush $a
	spop $a
	call [$a],lodx
	push $1
	popax
	spush $a
	spop $a
	call [$a],lody
	call cllen,ilen
	push 30
	pop $b
	popax
	cmp $a,$b
	jle l1028
	push 0
	jmp l1029
l1028:
	push 1
l1029:
	popax
	cmp $a,0
	je l1030
	push 1
	ret
	jmp l1027
l1030:
	push 0
	ret
l1027:
	end method
	method mwstaw
	call sfxput,play
	sub ilepuz,1
	pop ilepuz
	push ilepuz
	push 0
	pop $b
	popax
	cmp $a,$b
	jle l1032
	push 0
	jmp l1033
l1032:
	push 1
l1033:
	popax
	cmp $a,0
	je l1034
	push 2
	pop igmstate
	push "sndpias22"
	push "mfinp22"
	cthis cbplaywithfin
	jmp l1031
l1034:
	push "csok"
	cthis crplay
l1031:
	end method
	method mfinp22
	push "sndrzep2"
	push "mfinrzep2"
	cthis cbplaywithfin
	end method
	method mfinrzep2
	push "sndpias23"
	push "mfinp23"
	cthis cbplaywithfin
	end method
	method mfinp23
	push "sndsiem1"
	push "mfinsiem1"
	cthis cbplaywithfin
	end method
	method mfinsiem1
	push "sndrzep3"
	push "mfinrzep3"
	cthis cbplaywithfin
	end method
	method mfinrzep3
	push "gamerzep2"
	call gameapi,play
	end method
	method mouselrel
	push smov
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l1036
	push 0
	jmp l1037
l1036:
	push 1
l1037:
	popax
	cmp $a,0
	je l1038
	push smov
	cthis misnear
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1040
	push 0
	jmp l1041
l1040:
	push 1
l1041:
	popax
	cmp $a,0
	je l1042
	push smov
	popax
	spush $a
	push 0
	push 0
	spop $a
	call [$a],setpos
	push smov
	popax
	spush $a
	push 10
	spop $a
	call [$a],setz
	push "null"
	pop smov
	cthis mwstaw
	jmp l1039
l1042:
	call mouse,getpx
	call mouse,getpy
	push 1
	push 1
	call anpodklad,isin
	push 0
	pop $b
	popax
	cmp $a,$b
	jne l1044
	push 0
	jmp l1045
l1044:
	push 1
l1045:
	popax
	cmp $a,0
	je l1046
	add iznr,1
	pop iznr
	push iznr
	push 999
	pop $b
	popax
	cmp $a,$b
	ja l1048
	push 0
	jmp l1049
l1048:
	push 1
l1049:
	popax
	cmp $a,0
	je l1050
	push 20
	pop iznr
	jmp l1047
l1050:
l1047:
	push smov
	popax
	spush $a
	push iznr
	spop $a
	call [$a],setz
	push "null"
	pop smov
	call sfxbad,play
	jmp l1043
l1046:
	push smov
	popax
	spush $a
	push 20
	spop $a
	call [$a],setz
	push smov
	popax
	spush $a
	push 0
	push iy1
	push 800
	push iy2
	spop $a
	call [$a],clip
	call grpz,size
	push 0
	pop $b
	popax
	cmp $a,$b
	ja l1052
	push 0
	jmp l1053
l1052:
	push 1
l1053:
	popax
	cmp $a,0
	je l1054
	push smov
	popax
	spush $a
	push posx
	call grpz,last
	popax
	spush $a
	spop $a
	call [$a],getey
	spop $a
	call [$a],setbpos
	jmp l1051
l1054:
	push smov
	popax
	spush $a
	push posx
	call clb,getpulap1
	spop $a
	call [$a],setbpos
l1051:
	push smov
	call grpz,add
	push "null"
	pop smov
	call sfxbad,play
l1043:
l1039:
	jmp l1035
l1038:
l1035:
	end method
	method mouselclick
	push igmdebug
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1056
	push 0
	jmp l1057
l1056:
	push 1
l1057:
	popax
	cmp $a,0
	je l1058
	push 1
	cthis cactsndstop
	jmp l1055
l1058:
l1055:
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1060
	push 0
	jmp l1061
l1060:
	push 1
l1061:
	popax
	cmp $a,0
	je l1062
	localint $1
	call mouse,getpx
	pop $1
	localint $2
	call mouse,getpy
	pop $2
	localstring $3
	push $1
	push $2
	push 1
	push 1
	push 20
	push 999
	call engine,getimg
	pop $3
	push $3
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l1064
	push 0
	jmp l1065
l1064:
	push 1
l1065:
	popax
	cmp $a,0
	je l1066
	call sfxget,play
	push $3
	pop smov
	push $3
	popax
	spush $a
	push $1
	push $2
	spop $a
	call [$a],saverelpos
	push $3
	popax
	spush $a
	push 1000
	spop $a
	call [$a],setz
	push $3
	popax
	spush $a
	push 0
	push 0
	push 800
	push 600
	spop $a
	call [$a],clip
	push $3
	push 0
	push $3
	popax
	spush $a
	spop $a
	call [$a],geth
	popax
	sub 0,$a
	call grpz,movefrom
	push $3
	call grpz,remove
	push $3
	popax
	spush $a
	push $1
	push $2
	spop $a
	call [$a],setrelpos
	jmp l1063
l1066:
l1063:
	jmp l1059
l1062:
l1059:
	end method
	end game

	class classpiasthouse
	parent classadvpiast
	method init
	clparent classadvpiast,init
	push "scripts/part1/rzepicha/"
	cthis setgraphpath
	cthis cstdbkg
	push "anfire"
	push "ogien.pyz"
	push 10
	cthis newstdanima
	push "anrzep"
	push "rzepicha.pyz"
	push 10
	cthis newstdanima
	call anrzep,hide
	end method
	method mouselclick
	push igmdebug
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1068
	push 0
	jmp l1069
l1068:
	push 1
l1069:
	popax
	cmp $a,0
	je l1070
	push 1
	cthis cactsndstop
	jmp l1067
l1070:
l1067:
	end method
	end class

	game gamerzepicha1
	parent classpiasthouse
	method init
	clparent classpiasthouse,init
	push "sndpias"
	push 9
	push "part1piast"
	push 9
	push 10
	cthis newsnds
	push "sndrzep1"
	push "part1rzepicha1.wav"
	cthis newsnd
	push "sndpias9"
	push "mfinp9"
	push "null"
	push "null"
	cthis cherotalk
	end method
	method mfinp9
	push "sndrzep1"
	push "mfinr1"
	push "anrzep"
	push "gadaL"
	cthis cherotalk
	end method
	method mfinr1
	push "sndpias10"
	push "mfinp10"
	push "anrzep"
	push "gadaL"
	push "anrzep"
	cthis cherotalk2
	call anrzep,anhide
	end method
	method mfinp10
	push "gamepuzzle"
	call gameapi,play
	end method
	end game

	game gamerzep2
	parent classpiasthouse
	method init
	clparent classpiasthouse,init
	push "sndpias"
	push 24
	push "part1piast"
	push 24
	push 26
	cthis newsnds
	push "sndrzep"
	push 4
	push "part1rzepicha"
	push 4
	push 5
	cthis newsnds
	push "sndsiem3"
	push "part1siemowit2.wav"
	cthis newsnd
	push "sndpias24"
	push "mfinp24"
	push "null"
	push "null"
	cthis cherotalk
	end method
	method mfinp24
	push "sndrzep4"
	push "mfinr4"
	push "anrzep"
	push "gadaL"
	cthis cherotalk
	end method
	method mfinr4
	push "sndpias25"
	push "mfinp25"
	push "null"
	push "null"
	push "anrzep"
	cthis cherotalk2
	call anrzep,hide
	end method
	method mfinp25
	push "sndsiem3"
	push "mfins3"
	push "null"
	push "null"
	cthis cherotalk
	end method
	method mfins3
	push "sndrzep5"
	push "mfinr5"
	push "anrzep"
	push "gadaL"
	cthis cherotalk
	end method
	method mfinr5
	push "sndpias26"
	push "mfinp26"
	push "null"
	push "null"
	push "anrzep"
	cthis cherotalk2
	call anrzep,hide
	end method
	method mfinp26
	push "gamepodworko3"
	call gameapi,play
	end method
	end game

	game gamepart1las1
	parent classadvpiast
	method init
	clparent classadvpiast,init
	cthis cloadpiast
	push "scripts/part1/las1/"
	push "bkg.png"
	push "elems.pyz"
	cthis cloadterrain
	push "clm"
	push "maski.pyz"
	push "imglobcurs"
	push "mclickmask"
	cthis newclmaskfunc
	new string,sanlas
	push "las2"
	call clm,getimg
	pop sanlas
	push "maska.png"
	cthis cloadpathf
	push "ankij"
	push "jemiolkij.pyz"
	push 20
	cthis newanima
	push "ilas1zgory"
	push 0
	call clsav,qload
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1072
	push 0
	jmp l1073
l1072:
	push 1
l1073:
	popax
	cmp $a,0
	je l1074
	push "anpiast"
	push 750
	push 560
	cthis cputgr2
	push 50
	popax
	sub 0,$a
	push 10
	popax
	sub 0,$a
	call ptpiast,gotorel
	jmp l1071
l1074:
	push "anpiast"
	push 0
	push 200
	cthis cputgr2
	push 100
	push 100
	call ptpiast,gotorel
l1071:
	push "onendframe"
	push "mpiastendframe"
	call anpiast,addmethod
	push "sndp"
	push 35
	push "part1piast"
	push 35
	push 40
	cthis newsnds
	localint $1
	push "ilas1jemiol"
	push 0
	call clsav,qload
	pop $1
	push $1
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1076
	push 0
	jmp l1077
l1076:
	push 1
l1077:
	push $1
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1078
	push 0
	jmp l1079
l1078:
	push 1
l1079:
	popax
	pop $b
	or $a,$b
	popax
	cmp $a,0
	je l1080
	push "ankij"
	push "anjem"
	cthis copyanima
	push "jemiola"
	push 0
	call anjem,setframe
	push 600
	call anjem,setz
	push "ankij"
	push "kij"
	push "imglobcurs"
	push 0
	call clm,addmask
	push "mclickmask"
	push "null"
	push "null"
	push "null"
	call clm,addfunctolast
	push "ankij"
	call clanpack,resizemethods
	push "anjem"
	push "jemiola"
	push "imglobcurs"
	push 0
	call clm,addmask
	call anjem,mbuildvars
	push "mclickmask"
	push "null"
	push "null"
	push "null"
	call clm,addfunctolast
	push $1
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1082
	push 0
	jmp l1083
l1082:
	push 1
l1083:
	popax
	cmp $a,0
	je l1084
	cthis mhidekij
	push 1
	popax
	sub 0,$a
	push 1
	popax
	sub 0,$a
	call anjem,nofframes
	push 1
	pop $b
	popax
	sub $a,$b
	call anjem,setframe
	cthis mfinjem
	jmp l1081
l1084:
l1081:
	jmp l1075
l1080:
l1075:
	new int,iklikinajem
	push 0
	pop iklikinajem
	push "sfxjemiol"
	push "sfx/jemioladown.wav"
	cthis newsnd
	push "sfxkij"
	push "sfx/las1getkij.wav"
	cthis newsnd
	end method
	method mbuildvars
	new int,ispadla
	push 0
	pop ispadla
	end method
	method msetspad
	localint $1
	pop $1
	push $1
	pop ispadla
	end method
	method mczyspadla
	push ispadla
	ret
	end method
	method mpiastendframe
	cthis getey
	cthis setz
	end method
	method mstartgame
	push 1
	pop igmstate
	end method
	method mfinptpiast
	call ptpiast,stand
	push igmstate
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1086
	push 0
	jmp l1087
l1086:
	push 1
l1087:
	popax
	cmp $a,0
	je l1088
	cthis mstartgame
	jmp l1085
l1088:
l1085:
	end method
	method mptreach
	localstring $1
	pop $1
	call ptpiast,stand
	push $1
	push "las2"
	pop $b
	popax
	cmp $a,$b
	je l1090
	push 0
	jmp l1091
l1090:
	push 1
l1091:
	popax
	cmp $a,0
	je l1092
	push "gamepart1las2"
	call gameapi,play
	jmp l1089
l1092:
	push $1
	push "jemiola"
	pop $b
	popax
	cmp $a,$b
	je l1094
	push 0
	jmp l1095
l1094:
	push 1
l1095:
	popax
	cmp $a,0
	je l1096
	push "jemiola"
	call clm,disable
	call sfxgetitem,play
	push "ilas1jemiol"
	push 2
	call clsav,qsave
	push "blas2juzwie"
	call clqs,isdone
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1098
	push 0
	jmp l1099
l1098:
	push 1
l1099:
	popax
	cmp $a,0
	je l1100
	push "sndp37"
	push 5
	push 1
	cthis cbplaystate
	jmp l1097
l1100:
	push "sndp40"
	push 5
	push 1
	cthis cbplaystate
l1097:
	jmp l1093
l1096:
l1093:
l1089:
	end method
	method mclickmask
	localstring $1
	pop $1
	push $1
	push "las2"
	pop $b
	popax
	cmp $a,$b
	je l1102
	push 0
	jmp l1103
l1102:
	push 1
l1103:
	popax
	cmp $a,0
	je l1104
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1106
	push 0
	jmp l1107
l1106:
	push 1
l1107:
	popax
	cmp $a,0
	je l1108
	push "ptpiast"
	push sanlas
	push 0
	push 0
	cthis cwalkto
	jmp l1105
l1108:
l1105:
	jmp l1101
l1104:
	push $1
	push "kij"
	pop $b
	popax
	cmp $a,$b
	je l1110
	push 0
	jmp l1111
l1110:
	push 1
l1111:
	popax
	cmp $a,0
	je l1112
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1114
	push 0
	jmp l1115
l1114:
	push 1
l1115:
	popax
	cmp $a,0
	je l1116
	call sfxkij,play
	push "sndp35"
	cthis crplay
	push 2
	pop igmstate
	call ankij,getcx
	call ankij,getcy
	call ptpiast,goto
	call mouse,getpx
	call mouse,getpy
	call ankij,saverelpos
	push 700
	call ankij,setz
	jmp l1113
l1116:
l1113:
	jmp l1109
l1112:
	push $1
	push "jemiola"
	pop $b
	popax
	cmp $a,$b
	je l1118
	push 0
	jmp l1119
l1118:
	push 1
l1119:
	popax
	cmp $a,0
	je l1120
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1122
	push 0
	jmp l1123
l1122:
	push 1
l1123:
	popax
	cmp $a,0
	je l1124
	call anjem,mczyspadla
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1126
	push 0
	jmp l1127
l1126:
	push 1
l1127:
	popax
	cmp $a,0
	je l1128
	push "ptpiast"
	push "anjem"
	push 0
	push 0
	cthis cwalkto
	jmp l1125
l1128:
	push "blas2juzwie"
	call clqs,isdone
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1130
	push 0
	jmp l1131
l1130:
	push 1
l1131:
	popax
	cmp $a,0
	je l1132
	push "sndp36"
	cthis crplay
	jmp l1129
l1132:
	push iklikinajem
	push 2
	pop $b
	popax
	cmp $a,$b
	jl l1134
	push 0
	jmp l1135
l1134:
	push 1
l1135:
	popax
	cmp $a,0
	je l1136
	add iklikinajem,1
	pop iklikinajem
	push "sndp38"
	push 5
	push 1
	cthis cbplaystate
	jmp l1133
l1136:
	push "sndp39"
	push 5
	push 1
	cthis cbplaystate
l1133:
l1129:
l1125:
	jmp l1121
l1124:
l1121:
	jmp l1117
l1120:
	push "mask click error: "
	push $1
	pop $b
	popax
	add $a,$b
	call engine,print
l1117:
l1109:
l1101:
	end method
	method mfinjem
	push 1
	pop igmstate
	push "anjem"
	cthis cputgr
	push 1
	call anjem,msetspad
	push "ilas1jemiol"
	push 1
	call clsav,qsave
	end method
	method mousemove
	push igmstate
	push 2
	pop $b
	popax
	cmp $a,$b
	je l1138
	push 0
	jmp l1139
l1138:
	push 1
l1139:
	popax
	cmp $a,0
	je l1140
	call mouse,getpx
	call mouse,getpy
	call ankij,setrelpos
	jmp l1137
l1140:
l1137:
	end method
	method mhidekij
	push "kij"
	call clm,disable
	call ankij,show
	push 0
	push 0
	call ankij,setpos
	push 20
	call ankij,setz
	end method
	method mouselrel
	push igmstate
	push 2
	pop $b
	popax
	cmp $a,$b
	je l1142
	push 0
	jmp l1143
l1142:
	push 1
l1143:
	popax
	cmp $a,0
	je l1144
	call ankij,getpx
	call ankij,getpy
	push 1
	push 1
	call anjem,isin
	push 0
	pop $b
	popax
	cmp $a,$b
	jne l1146
	push 0
	jmp l1147
l1146:
	push 1
l1147:
	popax
	cmp $a,0
	je l1148
	push 3
	pop igmstate
	push 1
	popax
	sub 0,$a
	call anjem,play
	push "onfinish"
	push "mfinjem"
	call anjem,addmethod
	cthis mhidekij
	call sfxjemiol,play
	jmp l1145
l1148:
	push 1
	pop igmstate
	push 20
	call ankij,setz
	push 0
	push 0
	call ankij,setpos
l1145:
	jmp l1141
l1144:
l1141:
	end method
	method mouselclick
	cthis advclick
	end method
	end game

	game gamepart1las2
	parent classadvpiast
	method init
	clparent classadvpiast,init
	push "ilas1zgory"
	push 1
	call clsav,qsave
	cthis cloadpiast
	push "anpiast"
	push 550
	push 570
	cthis cputgr2
	push "scripts/part1/las2/"
	push "bkg.png"
	push "elems.pyz"
	cthis cloadterrain
	push "clm"
	push "maski.pyz"
	push "imglobcurs"
	push "mclickmask"
	cthis newclmaskfunc
	new string,sanjasny
	push "jasny"
	call clm,getimg
	pop sanjasny
	new string,sanciemny
	push "ciemny"
	call clm,getimg
	pop sanciemny
	push "maska.png"
	cthis cloadpathf
	push "andruid"
	push "druid.pyz"
	push 10
	cthis newstdanima
	push "andruid"
	cthis cputgr
	push 4
	call andruid,setdelay
	push "anogrod"
	push "ogrodek.pyz"
	push 10
	cthis newanima
	push "anogrod"
	push "ogrod"
	push "imglobcurs"
	push 0
	call clm,addmask
	push "mclickmask"
	push "null"
	push "null"
	push "null"
	call clm,addfunctolast
	push "andruid"
	push "druid"
	push "imglobcurs"
	push 0
	call clm,addmask
	push "mclickmask"
	push "null"
	push "null"
	push "null"
	call clm,addfunctolast
	push 50
	popax
	sub 0,$a
	push 10
	popax
	sub 0,$a
	call ptpiast,gotorel
	push "onendframe"
	push "mpiastendframe"
	call anpiast,addmethod
	push "onfinish"
	push "mpiastfin"
	call anpiast,addmethod
	push "sndp"
	push 41
	push "part1piast"
	push 41
	push 50
	push "mfinp"
	cthis cnewsndsfin
	push "snddr"
	push 1
	push "part1druid"
	push 1
	push 13
	push "mfindr"
	cthis cnewsndsfin
	new int,ijemiol
	push "ilas1jemiol"
	push 0
	call clsav,qload
	pop ijemiol
	new int,bogrodek
	push 0
	pop bogrodek
	end method
	method mcbplay
	localint $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	pop igmstate
	push $2
	cthis cbplay
	push 3
	push 1
	call $2,getb
	pop $2
	push $2
	push "p"
	pop $b
	popax
	cmp $a,$b
	je l1150
	push 0
	jmp l1151
l1150:
	push 1
l1151:
	popax
	cmp $a,0
	je l1152
	push $3
	cthis mpssay
	cthis mdrhear
	jmp l1149
l1152:
	push $2
	push "d"
	pop $b
	popax
	cmp $a,$b
	je l1154
	push 0
	jmp l1155
l1154:
	push 1
l1155:
	popax
	cmp $a,0
	je l1156
	cthis mdrsay
	push $3
	cthis mpshear
	jmp l1153
l1156:
l1153:
l1149:
	end method
	method mfinp41
	push 5
	push "snddr1"
	push "rd"
	cthis mcbplay
	end method
	method mfinp42
	push 5
	push "snddr3"
	push "rd"
	cthis mcbplay
	end method
	method mfinp43
	push 5
	push "snddr2"
	push "rr"
	cthis mcbplay
	end method
	method mfinp44
	push 5
	push "snddr4"
	push "rr"
	cthis mcbplay
	end method
	method mfinp45
	push 5
	push "snddr5"
	push "rr"
	cthis mcbplay
	end method
	method mfinp46
	push 5
	push "snddr6"
	push "rr"
	cthis mcbplay
	end method
	method mfinp47
	push 5
	push "snddr7"
	push "rr"
	cthis mcbplay
	end method
	method mfinp48
	push 5
	push "snddr8"
	push "rr"
	cthis mcbplay
	end method
	method mfinp49
	push 0
	pop igmstate
	push 100
	popax
	sub 0,$a
	push 0
	call ptpiast,gotorel
	end method
	method mfinp50
	push 0
	pop igmstate
	push 100
	popax
	sub 0,$a
	push 0
	call ptpiast,gotorel
	end method
	method mfindr1
	push 5
	push "sndp42"
	push "rd"
	cthis mcbplay
	end method
	method mfindr2
	push 1
	pop igmstate
	cthis mdrhear
	end method
	method mfindr3
	cthis mdrhear
	push "blas2juzwie"
	call clqs,done
	push ijemiol
	push 2
	pop $b
	popax
	cmp $a,$b
	je l1158
	push 0
	jmp l1159
l1158:
	push 1
l1159:
	popax
	cmp $a,0
	je l1160
	push "blas2maodrazu"
	call clqs,done
	push "ptpiast"
	push "andruid"
	push "druid"
	push 45
	popax
	sub 0,$a
	push 45
	cthis cwalkto2
	jmp l1157
l1160:
	push 1
	pop igmstate
l1157:
	end method
	method mwykonal
	push 1
	pop igmstate
	cthis mdrhear
	push "blas2finito"
	call clqs,done
	end method
	method mfindr4
	push 5
	push "sndp45"
	push "lu"
	cthis mcbplay
	end method
	method mfindr5
	push 5
	push "sndp46"
	push "rr"
	cthis mcbplay
	end method
	method mfindr6
	cthis mwykonal
	end method
	method mfindr7
	push 5
	push "sndp48"
	push "rr"
	cthis mcbplay
	end method
	method mfindr8
	cthis mwykonal
	end method
	method mfindr9
	push 1
	pop igmstate
	cthis mdrhear
	end method
	method mfindr10
	push 1
	pop igmstate
	cthis mdrhear
	end method
	method mfindr11
	push 5
	push "sndp49"
	push "lu"
	cthis mcbplay
	end method
	method mfindr12
	push 5
	push "sndp50"
	push "lu"
	cthis mcbplay
	end method
	method mfindr13
	push 1
	pop igmstate
	cthis mdrhear
	end method
	method mpiastendframe
	cthis getey
	cthis setz
	end method
	method mpiastfin
	push 1
	popax
	sub 0,$a
	cthis play
	end method
	method mstartgame
	push 1
	pop igmstate
	end method
	method mfinptpiast
	call ptpiast,stand
	push igmstate
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1162
	push 0
	jmp l1163
l1162:
	push 1
l1163:
	popax
	cmp $a,0
	je l1164
	cthis mstartgame
	jmp l1161
l1164:
l1161:
	end method
	method mpssay
	localstring $1
	pop $1
	push "talk"
	push $1
	pop $b
	popax
	add $a,$b
	call anpiast,play
	end method
	method mpshear
	localstring $1
	pop $1
	push "stand"
	push $1
	pop $b
	popax
	add $a,$b
	call anpiast,play
	end method
	method mdrsay
	push "gada"
	call andruid,play
	end method
	method mdrhear
	push "stoiPL"
	call andruid,play
	end method
	method mptreach
	localstring $1
	pop $1
	call ptpiast,stand
	push $1
	push "jasny"
	pop $b
	popax
	cmp $a,$b
	je l1166
	push 0
	jmp l1167
l1166:
	push 1
l1167:
	popax
	cmp $a,0
	je l1168
	push "gamepart1las1"
	call gameapi,play
	jmp l1165
l1168:
	push $1
	push "ciemny"
	pop $b
	popax
	cmp $a,$b
	je l1170
	push 0
	jmp l1171
l1170:
	push 1
l1171:
	popax
	cmp $a,0
	je l1172
	push "blas2ciemny"
	call clqs,isdone
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1174
	push 0
	jmp l1175
l1174:
	push 1
l1175:
	popax
	cmp $a,0
	je l1176
	push "blas2ciemny"
	call clqs,done
	push 5
	push "sndp41"
	call ptpiast,getdir
	cthis mcbplay
	jmp l1173
l1176:
	push "blas2finito"
	call clqs,isdone
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1178
	push 0
	jmp l1179
l1178:
	push 1
l1179:
	popax
	cmp $a,0
	je l1180
	push "gamepart1platforma"
	call gameapi,play
	jmp l1177
l1180:
	push 5
	push "snddr10"
	call ptpiast,getdir
	cthis mcbplay
l1177:
l1173:
	jmp l1169
l1172:
	push $1
	push "ogrod"
	pop $b
	popax
	cmp $a,$b
	je l1182
	push 0
	jmp l1183
l1182:
	push 1
l1183:
	popax
	cmp $a,0
	je l1184
	push bogrodek
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1186
	push 0
	jmp l1187
l1186:
	push 1
l1187:
	popax
	cmp $a,0
	je l1188
	push 1
	pop bogrodek
	push 5
	push "snddr11"
	call ptpiast,getdir
	cthis mcbplay
	jmp l1185
l1188:
	push 5
	push "snddr12"
	call ptpiast,getdir
	cthis mcbplay
l1185:
	jmp l1181
l1184:
	push $1
	push "druid"
	pop $b
	popax
	cmp $a,$b
	je l1190
	push 0
	jmp l1191
l1190:
	push 1
l1191:
	popax
	cmp $a,0
	je l1192
	push "blas2ciemny"
	call clqs,isdone
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1194
	push 0
	jmp l1195
l1194:
	push 1
l1195:
	popax
	cmp $a,0
	je l1196
	push 5
	push "sndp43"
	push "rr"
	cthis mcbplay
	jmp l1193
l1196:
	push "blas2finito"
	call clqs,isdone
	push 0
	pop $b
	popax
	cmp $a,$b
	jne l1198
	push 0
	jmp l1199
l1198:
	push 1
l1199:
	popax
	cmp $a,0
	je l1200
	push 5
	push "snddr13"
	push "rr"
	cthis mcbplay
	jmp l1197
l1200:
	push "blas2maodrazu"
	call clqs,isdone
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1202
	push 0
	jmp l1203
l1202:
	push 1
l1203:
	popax
	cmp $a,0
	je l1204
	push 5
	push "sndp44"
	push "rr"
	cthis mcbplay
	jmp l1201
l1204:
	push ijemiol
	push 2
	pop $b
	popax
	cmp $a,$b
	je l1206
	push 0
	jmp l1207
l1206:
	push 1
l1207:
	popax
	cmp $a,0
	je l1208
	push 5
	push "sndp47"
	push "rr"
	cthis mcbplay
	jmp l1205
l1208:
	push 5
	push "snddr9"
	push "rr"
	cthis mcbplay
l1205:
l1201:
l1197:
l1193:
	jmp l1189
l1192:
l1189:
l1181:
l1169:
l1165:
	end method
	method mclickmask
	localstring $1
	pop $1
	push $1
	push "jasny"
	pop $b
	popax
	cmp $a,$b
	je l1210
	push 0
	jmp l1211
l1210:
	push 1
l1211:
	popax
	cmp $a,0
	je l1212
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1214
	push 0
	jmp l1215
l1214:
	push 1
l1215:
	popax
	cmp $a,0
	je l1216
	push "ptpiast"
	push sanjasny
	push 0
	push 0
	cthis cwalkto
	jmp l1213
l1216:
l1213:
	jmp l1209
l1212:
	push $1
	push "ciemny"
	pop $b
	popax
	cmp $a,$b
	je l1218
	push 0
	jmp l1219
l1218:
	push 1
l1219:
	popax
	cmp $a,0
	je l1220
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1222
	push 0
	jmp l1223
l1222:
	push 1
l1223:
	popax
	cmp $a,0
	je l1224
	push "ptpiast"
	push sanciemny
	push 0
	push 0
	cthis cwalkto
	jmp l1221
l1224:
l1221:
	jmp l1217
l1220:
	push $1
	push "ogrod"
	pop $b
	popax
	cmp $a,$b
	je l1226
	push 0
	jmp l1227
l1226:
	push 1
l1227:
	popax
	cmp $a,0
	je l1228
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1230
	push 0
	jmp l1231
l1230:
	push 1
l1231:
	popax
	cmp $a,0
	je l1232
	push "ptpiast"
	push "anogrod"
	push "ogrod"
	push 0
	push 0
	cthis cwalkto2
	jmp l1229
l1232:
l1229:
	jmp l1225
l1228:
	push $1
	push "druid"
	pop $b
	popax
	cmp $a,$b
	je l1234
	push 0
	jmp l1235
l1234:
	push 1
l1235:
	popax
	cmp $a,0
	je l1236
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1238
	push 0
	jmp l1239
l1238:
	push 1
l1239:
	popax
	cmp $a,0
	je l1240
	push "ptpiast"
	push "andruid"
	push "druid"
	push 45
	popax
	sub 0,$a
	push 45
	cthis cwalkto2
	jmp l1237
l1240:
l1237:
	jmp l1233
l1236:
	push "mask click error: "
	push $1
	pop $b
	popax
	add $a,$b
	call engine,print
l1233:
l1225:
l1217:
l1209:
	end method
	method mouselclick
	cthis advclick
	end method
	end game

	game gamepart1platforma
	parent classadvpiast
	method init
	clparent classadvpiast,init
	push 0
	pop igmstate
	new int,MASKZ
	push 10
	pop MASKZ
	new int,TRAMPZ
	push 5
	pop TRAMPZ
	new int,STWORZ
	push 20
	pop STWORZ
	new int,PIASTZ
	push 30
	pop PIASTZ
	localstring $1
	push "scripts/part1/platforma/"
	cthis setgraphpath
	cthis cstdbkg
	push "imgm"
	push "maska.png"
	push MASKZ
	cthis newimg
	push 0
	push 1
	call imgm,move
	call imgm,hide
	new gmobjvec,grall
	push "imgbkg"
	call grall,add
	push "imgm"
	call grall,add
	new classlives,clliv
	push 40
	push 5
	push 20
	push 5
	push 5
	push 245
	push 43
	push 45
	push 255
	push 45
	push 212
	push 45
	push 255
	push 2
	push "left"
	call clliv,set
	push "antramp"
	push "trampoliny.pyz"
	push TRAMPZ
	cthis newanima
	push 2
	call antramp,setdelay
	localint $2
	push "antramp"
	push "antr"
	cthis newanactions
	pop $2
	call antramp,hide
	localint $3
	push 0
	pop $3
l1241:
	push $3
	push $2
	pop $b
	popax
	cmp $a,$b
	jl l1242
	push 0
	jmp l1243
l1242:
	push 1
l1243:
	popax
	cmp $a,0
	je l1244
	jmp l1246
l1245:
	add $3,1
	pop $3
	jmp l1241
l1246:
	push "antr"
	push $3
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	popax
	spush $a
	push "onfinish"
	push "mfintramp"
	spop $a
	call [$a],addmethod
	push $1
	call grall,add
	push $1
	popax
	spush $a
	spop $a
	call [$a],mbuildtramp
	push $1
	popax
	spush $a
	push "onsetframe"
	push "mframetramp"
	spop $a
	call [$a],addmethod
	jmp l1245
l1244:
	push "anpiast"
	push "piast.pyz"
	push PIASTZ
	cthis newanima
	push 2
	call anpiast,setdelay
	push 0
	push 400
	call anpiast,setpos
	push "onendframe"
	push "mpiastframe"
	call anpiast,addmethod
	push "onfinish"
	push "mpiastfin"
	call anpiast,addmethod
	push "piastmov"
	push "mpiastmove"
	call anpiast,addmethod
	push "standr"
	call anpiast,play
	call anpiast,mbuildpiast
	push "anpiast"
	call clanpack,resizemethods
	push "anlokacja"
	push "stwory.pyz"
	push STWORZ
	cthis newanima
	push 3
	call anlokacja,setdelay
	push 0
	call anlokacja,setz
	call anlokacja,hide
	push "lokacje"
	push 0
	call anlokacja,setframe
	localint $4
	push 1
	popax
	sub 0,$a
	call anlokacja,nofframes
	pop $4
	push "anlokacja"
	push "anpt"
	push 0
	push $4
	cthis copyanimas
	push 0
	pop $3
l1247:
	push $3
	push $4
	pop $b
	popax
	cmp $a,$b
	jl l1248
	push 0
	jmp l1249
l1248:
	push 1
l1249:
	popax
	cmp $a,0
	je l1250
	jmp l1252
l1251:
	add $3,1
	pop $3
	jmp l1247
l1252:
	push "anpt"
	push $3
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	popax
	spush $a
	push "onfinish"
	push "mstworfin"
	spop $a
	call [$a],addmethod
	push $1
	popax
	spush $a
	push $3
	spop $a
	call [$a],mbuild
	push $1
	call grall,add
	jmp l1251
l1250:
	push "anpiast"
	call grall,add
	push "timmov"
	push 50
	push 1
	push "mfintimmov"
	cthis cnewtimerfin
	push "timkoment"
	push 15000
	push 1
	push "mfintimcom"
	cthis cnewtimerfin
	new classsndbank,csjmp
	new classsndbank,csau
	new classsndbank,cscom
	push "plpiast"
	push 2
	push 7
	push 0
	push 0
	call csjmp,load
	push "plpiast"
	push 12
	push 16
	push 0
	push 0
	call csau,load
	push "plpiast"
	push 8
	push 10
	push 0
	push 0
	call cscom,load
	push "plpiast1.wav"
	push "msndstartfin"
	cthis cplayintrofun
	push "sndkoniec"
	push "plpiast17.wav"
	cthis newsnd
	push "sndrestart"
	push "plnar1.wav"
	cthis newsnd
	push "sfxwylot"
	push "sfx/wylatuje.wav"
	cthis newsnd
	call anpiast,mrownaj
	new classsndbank,csskok
	push "sfx/skok"
	push 1
	push 3
	push 0
	push 0
	call csskok,load
	end method
	method mfintimcom
	push "cscom"
	cthis crplay
	cthis play
	end method
	method msndstartfin
	push 1
	pop igmstate
	call timkoment,play
	end method
	method mbuild
	localint $1
	pop $1
	push 1
	popax
	sub 0,$a
	push $1
	call anlokacja,setframe
	localstring $2
	call anlokacja,framename
	pop $2
	localstring $3
	push 0
	push 1
	call $2,gete
	pop $3
	push 0
	push 3
	call $2,getb
	pop $2
	push $2
	push "l"
	pop $b
	popax
	add $a,$b
	push 0
	cthis setframe
	new int,il
	push 1
	popax
	sub 0,$a
	cthis actionnr
	pop il
	push $2
	push "p"
	pop $b
	popax
	add $a,$b
	push 0
	cthis setframe
	new int,ip
	push 1
	popax
	sub 0,$a
	cthis actionnr
	pop ip
	call anlokacja,getpx
	call anlokacja,getpy
	cthis setpos
	push $2
	push "mch"
	pop $b
	popax
	cmp $a,$b
	je l1254
	push 0
	jmp l1255
l1254:
	push 1
l1255:
	push $2
	push "hel"
	pop $b
	popax
	cmp $a,$b
	je l1256
	push 0
	jmp l1257
l1256:
	push 1
l1257:
	popax
	pop $b
	or $a,$b
	popax
	cmp $a,0
	je l1258
	push "onendframe"
	push "mfinstwor"
	cthis addmethod
	jmp l1253
l1258:
	push "onendframe"
	push "mfinstwor2"
	cthis addmethod
	push "mfinstwor"
	push "mfinstwor"
	cthis addmethod
	push "mrownaj"
	push "mrownaj"
	cthis addmethod
l1253:
	push $3
	push "l"
	pop $b
	popax
	cmp $a,$b
	je l1260
	push 0
	jmp l1261
l1260:
	push 1
l1261:
	popax
	cmp $a,0
	je l1262
	push il
	cthis play
	jmp l1259
l1262:
	push ip
	cthis play
l1259:
	end method
	method mbuildtramp
	new int,_bbylskok
	push 0
	pop _bbylskok
	end method
	method mokgo
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 1
	call imgm,isin
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1264
	push 0
	jmp l1265
l1264:
	push 1
l1265:
	push $1
	call imgbkg,getpx
	pop $b
	popax
	cmp $a,$b
	ja l1266
	push 0
	jmp l1267
l1266:
	push 1
l1267:
	popax
	pop $b
	and $a,$b
	push $1
	call imgbkg,getex
	pop $b
	popax
	cmp $a,$b
	jl l1268
	push 0
	jmp l1269
l1268:
	push 1
l1269:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l1270
	push 1
	ret
	jmp l1263
l1270:
l1263:
	push 0
	ret
	end method
	method mrownaj
	localint $1
	cthis getcx
	pop $1
l1271:
	push $1
	cthis getey
	push 0
	push 1
	call imgm,isin
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1272
	push 0
	jmp l1273
l1272:
	push 1
l1273:
	popax
	cmp $a,0
	je l1274
	push 0
	push 1
	cthis move
	jmp l1271
l1274:
l1275:
	push $1
	cthis getey
	push 0
	push 1
	call imgm,isin
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1276
	push 0
	jmp l1277
l1276:
	push 1
l1277:
	popax
	cmp $a,0
	je l1278
	push 0
	push 1
	popax
	sub 0,$a
	cthis move
	jmp l1275
l1278:
	end method
	method mdie
	push "stand"
	push sside
	pop $b
	popax
	add $a,$b
	cthis play
	push "r"
	pop sside
	cthis mrownaj
	end method
	method mdamage
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	jne l1280
	push 0
	jmp l1281
l1280:
	push 1
l1281:
	popax
	cmp $a,0
	je l1282
	ret
	jmp l1279
l1282:
l1279:
	push 1
	call clliv,damage
	push "csau"
	cthis crplay
	call clliv,destroyed
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1284
	push 0
	jmp l1285
l1284:
	push 1
l1285:
	popax
	cmp $a,0
	je l1286
	push 4
	pop igmstate
	push "sndrestart"
	push "mfinrestart"
	cthis cbplaywithfin
	call anpiast,mdie
	jmp l1283
l1286:
l1283:
	end method
	method mfinrestart
	call imgbkg,getpx
	popax
	sub 0,$a
	push 0
	call grall,move
	push 0
	push 0
	call imgbkg,setpos
	push 0
	push 0
	call imgm,setpos
	push 0
	push 500
	call anpiast,setpos
	push "standr"
	call anpiast,play
	call anpiast,mrownaj
	push 0
	pop igmstate
	push "sndintro"
	cthis cbplay
	call clliv,reset
	end method
	method mstworfin
	push 1
	popax
	sub 0,$a
	cthis play
	cthis getname
	push "anpiast"
	call cllen,ilen3
	push 60
	pop $b
	popax
	cmp $a,$b
	jle l1288
	push 0
	jmp l1289
l1288:
	push 1
l1289:
	popax
	cmp $a,0
	je l1290
	cthis mdamage
	jmp l1287
l1290:
l1287:
	end method
	method mfinstwor2
	cthis mfinstwor
	cthis mrownaj
	end method
	method mfinstwor
	push 1
	popax
	sub 0,$a
	cthis actionnr
	push il
	pop $b
	popax
	cmp $a,$b
	je l1292
	push 0
	jmp l1293
l1292:
	push 1
l1293:
	popax
	cmp $a,0
	je l1294
	cthis getpx
	push 5
	pop $b
	popax
	add $a,$b
	cthis getey
	push 10
	pop $b
	popax
	sub $a,$b
	cthis mokgo
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1296
	push 0
	jmp l1297
l1296:
	push 1
l1297:
	popax
	cmp $a,0
	je l1298
	push 5
	popax
	sub 0,$a
	push 0
	cthis move
	jmp l1295
l1298:
	push ip
	cthis play
l1295:
	jmp l1291
l1294:
	cthis getex
	push 5
	pop $b
	popax
	sub $a,$b
	cthis getey
	push 10
	pop $b
	popax
	sub $a,$b
	cthis mokgo
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1300
	push 0
	jmp l1301
l1300:
	push 1
l1301:
	popax
	cmp $a,0
	je l1302
	push 5
	push 0
	cthis move
	jmp l1299
l1302:
	push il
	cthis play
l1299:
l1291:
	end method
	method mprzesun
	localint $1
	pop $1
	push $1
	push 300
	push 500
	push 8
	push "grall"
	cthis cmovxbkg
	end method
	method mfintimmov
	call mouse,getpx
	cthis mprzesun
	cthis play
	end method
	method mbuildpiast
	new int,ist
	push 0
	pop ist
	new vector,vjmp
	push "begin"
	push 7
	popax
	sub 0,$a
	push 9
	popax
	sub 0,$a
	push 9
	popax
	sub 0,$a
	push 8
	popax
	sub 0,$a
	push 7
	popax
	sub 0,$a
	push 7
	popax
	sub 0,$a
	push 6
	popax
	sub 0,$a
	push 5
	popax
	sub 0,$a
	push 4
	popax
	sub 0,$a
	push 2
	popax
	sub 0,$a
	push 1
	popax
	sub 0,$a
	push 0
	push 1
	push 3
	push 5
	call vjmp,beginadd
	new int,idvj
	push 0
	pop idvj
	new string,sside
	push "r"
	pop sside
	new int,iwsp
	push 0
	pop iwsp
	new string,stramp
	end method
	method mozna
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 1
	call imgm,isin
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1304
	push 0
	jmp l1305
l1304:
	push 1
l1305:
	popax
	cmp $a,0
	je l1306
	push 1
	ret
	jmp l1303
l1306:
l1303:
	push 0
	ret
	end method
	method mvxp2
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	cthis getpy
	push 8
	pop $b
	popax
	add $a,$b
	cthis mozna
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1308
	push 0
	jmp l1309
l1308:
	push 1
l1309:
	push $1
	cthis getcy
	cthis mozna
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1310
	push 0
	jmp l1311
l1310:
	push 1
l1311:
	popax
	pop $b
	and $a,$b
	push $1
	cthis getey
	push 8
	pop $b
	popax
	sub $a,$b
	cthis mozna
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1312
	push 0
	jmp l1313
l1312:
	push 1
l1313:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l1314
	push $2
	push 0
	cthis move
	push ist
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1316
	push 0
	jmp l1317
l1316:
	push 1
l1317:
	popax
	cmp $a,0
	je l1318
	push "go"
	push sside
	pop $b
	popax
	add $a,$b
	cthis framenr
	cthis setframe
	jmp l1315
l1318:
	push ist
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1320
	push 0
	jmp l1321
l1320:
	push 1
l1321:
	popax
	cmp $a,0
	je l1322
	push "down"
	push sside
	pop $b
	popax
	add $a,$b
	cthis framenr
	cthis setframe
	jmp l1319
l1322:
	push "jmp"
	push sside
	pop $b
	popax
	add $a,$b
	cthis framenr
	cthis setframe
l1319:
l1315:
	jmp l1307
l1314:
l1307:
	end method
	method mpiastmove
	localint $1
	pop $1
	localint $2
	cthis getpx
	push $1
	pop $b
	popax
	add $a,$b
	pop $2
	localint $3
	cthis getex
	push $1
	pop $b
	popax
	add $a,$b
	pop $3
	push $2
	call imgbkg,getpx
	pop $b
	popax
	cmp $a,$b
	jae l1324
	push 0
	jmp l1325
l1324:
	push 1
l1325:
	push $3
	call imgbkg,getex
	pop $b
	popax
	cmp $a,$b
	jle l1326
	push 0
	jmp l1327
l1326:
	push 1
l1327:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l1328
	push sside
	push "r"
	pop $b
	popax
	cmp $a,$b
	je l1330
	push 0
	jmp l1331
l1330:
	push 1
l1331:
	popax
	cmp $a,0
	je l1332
	push $3
	push $1
	cthis mvxp2
	jmp l1329
l1332:
	push $2
	push $1
	cthis mvxp2
l1329:
	jmp l1323
l1328:
l1323:
	end method
	method mspada
	localint $1
	push 0
	pop $1
	localint $2
	cthis getcx
	pop $2
l1333:
	push $2
	cthis getey
	push $1
	pop $b
	popax
	add $a,$b
	push 0
	push 1
	call imgm,isin
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1334
	push 0
	jmp l1335
l1334:
	push 1
l1335:
	push $1
	push 8
	pop $b
	popax
	cmp $a,$b
	jl l1336
	push 0
	jmp l1337
l1336:
	push 1
l1337:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l1338
	add $1,1
	pop $1
	jmp l1333
l1338:
	push $1
	push 8
	pop $b
	popax
	cmp $a,$b
	jae l1340
	push 0
	jmp l1341
l1340:
	push 1
l1341:
	popax
	cmp $a,0
	je l1342
	push 1
	ret
	jmp l1339
l1342:
l1339:
	push 0
	ret
	end method
	method mspadaj
	push 1
	pop ist
	push 0
	push 8
	cthis move
	push "down"
	push sside
	pop $b
	popax
	add $a,$b
	cthis rplay
	end method
	method psjump
	localint $1
	pop $1
	push 2
	pop ist
	push 0
	pop idvj
	push "csjmp"
	cthis crplay
	call csskok,play
	push "jmp"
	push sside
	pop $b
	popax
	add $a,$b
	cthis rplay
	push $1
	cthis jmpmove
	end method
	method mvy2
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push 8
	pop $b
	popax
	sub $a,$b
	push $2
	cthis mozna
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1344
	push 0
	jmp l1345
l1344:
	push 1
l1345:
	push $1
	push $2
	cthis mozna
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1346
	push 0
	jmp l1347
l1346:
	push 1
l1347:
	popax
	pop $b
	and $a,$b
	push $1
	push 8
	pop $b
	popax
	add $a,$b
	push $2
	cthis mozna
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1348
	push 0
	jmp l1349
l1348:
	push 1
l1349:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l1350
	push 1
	ret
	jmp l1343
l1350:
	push 0
	ret
l1343:
	end method
	method jmpmove
	localint $1
	pop $1
	localint $2
	cthis getcx
	pop $2
	localint $3
	push idvj
	call vjmp,get
	push iwsp
	pop $b
	popax
	sub $a,$b
	pop $3
	push $2
	cthis getpy
	push $3
	pop $b
	popax
	add $a,$b
	cthis mvy2
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1352
	push 0
	jmp l1353
l1352:
	push 1
l1353:
	popax
	cmp $a,0
	je l1354
	push 0
	push $3
	cthis move
	push iwsp
	push 0
	pop $b
	popax
	cmp $a,$b
	ja l1356
	push 0
	jmp l1357
l1356:
	push 1
l1357:
	popax
	cmp $a,0
	je l1358
	sub iwsp,1
	pop iwsp
	jmp l1355
l1358:
l1355:
	add idvj,1
	pop idvj
	jmp l1351
l1354:
	call vjmp,size
	pop idvj
l1351:
	push $2
	cthis getey
	push $3
	pop $b
	popax
	add $a,$b
	cthis mvy2
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1360
	push 0
	jmp l1361
l1360:
	push 1
l1361:
	push idvj
	call vjmp,size
	pop $b
	popax
	cmp $a,$b
	jae l1362
	push 0
	jmp l1363
l1362:
	push 1
l1363:
	popax
	pop $b
	or $a,$b
	popax
	cmp $a,0
	je l1364
	cthis mpiaststd
	jmp l1359
l1364:
l1359:
	end method
	method mpiastfin
	push 1
	popax
	sub 0,$a
	cthis play
	push "anpiast"
	call imgbkg,getex
	call imgbkg,getey
	call cllen,ilen2
	push 70
	pop $b
	popax
	cmp $a,$b
	jle l1366
	push 0
	jmp l1367
l1366:
	push 1
l1367:
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1368
	push 0
	jmp l1369
l1368:
	push 1
l1369:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l1370
	push 2
	pop igmstate
	push "standr"
	call anpiast,play
	call anpiast,mrownaj
	push "sndkoniec"
	push "mfinkoniec"
	cthis cbplaywithfin
	jmp l1365
l1370:
l1365:
	end method
	method mfinkoniec
	push igmdemo
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1372
	push 0
	jmp l1373
l1372:
	push 1
l1373:
	popax
	cmp $a,0
	je l1374
	push "gamepart2miasto"
	call gameapi,play
	jmp l1371
l1374:
	push "gamemenu"
	call gameapi,play
l1371:
	end method
	method mwstan
	localint $1
	pop $1
	push 0
	pop ist
	cthis mrownaj
	push $1
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1376
	push 0
	jmp l1377
l1376:
	push 1
l1377:
	popax
	cmp $a,0
	je l1378
	push "stand"
	push sside
	pop $b
	popax
	add $a,$b
	cthis rplay
	jmp l1375
l1378:
l1375:
	end method
	method mpiastframe
	push ist
	push 3
	pop $b
	popax
	cmp $a,$b
	je l1380
	push 0
	jmp l1381
l1380:
	push 1
l1381:
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	jne l1382
	push 0
	jmp l1383
l1382:
	push 1
l1383:
	popax
	pop $b
	or $a,$b
	popax
	cmp $a,0
	je l1384
	ret
	jmp l1379
l1384:
l1379:
	localint $1
	push 0
	pop $1
	push "right"
	call keyboard,iskeydown
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1386
	push 0
	jmp l1387
l1386:
	push 1
l1387:
	popax
	cmp $a,0
	je l1388
	push "r"
	pop sside
	push 8
	pop $1
	push 8
	cthis piastmov
	push 0
	call timkoment,stop
	call timkoment,play
	jmp l1385
l1388:
	push "left"
	call keyboard,iskeydown
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1390
	push 0
	jmp l1391
l1390:
	push 1
l1391:
	popax
	cmp $a,0
	je l1392
	push "l"
	pop sside
	push 8
	popax
	sub 0,$a
	pop $1
	push 8
	popax
	sub 0,$a
	cthis piastmov
	push 0
	call timkoment,stop
	call timkoment,play
	jmp l1389
l1392:
l1389:
l1385:
	push "up"
	call keyboard,iskeydown
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1394
	push 0
	jmp l1395
l1394:
	push 1
l1395:
	push ist
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1396
	push 0
	jmp l1397
l1396:
	push 1
l1397:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l1398
	push $1
	cthis psjump
	push 0
	call timkoment,stop
	call timkoment,play
	jmp l1393
l1398:
	push ist
	push 2
	pop $b
	popax
	cmp $a,$b
	je l1400
	push 0
	jmp l1401
l1400:
	push 1
l1401:
	popax
	cmp $a,0
	je l1402
	push $1
	cthis jmpmove
	jmp l1399
l1402:
	cthis mspada
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1404
	push 0
	jmp l1405
l1404:
	push 1
l1405:
	popax
	cmp $a,0
	je l1406
	cthis mspadaj
	jmp l1403
l1406:
	push $1
	cthis mwstan
l1403:
l1399:
l1393:
	localint $2
	cthis getcx
	pop $2
	push $2
	cthis mprzesun
	push $2
	cthis getey
	push 1
	push 1
	push TRAMPZ
	push TRAMPZ
	call engine,getimg
	pop stramp
	push stramp
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l1408
	push 0
	jmp l1409
l1408:
	push 1
l1409:
	popax
	cmp $a,0
	je l1410
	push stramp
	popax
	spush $a
	spop $a
	call [$a],mniemoze
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1412
	push 0
	jmp l1413
l1412:
	push 1
l1413:
	popax
	cmp $a,0
	je l1414
	push 3
	pop ist
	push stramp
	popax
	spush $a
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],play
	jmp l1411
l1414:
l1411:
	jmp l1407
l1410:
l1407:
	end method
	method mniemoze
	push _bbylskok
	ret
	end method
	method mwyskocz
	push ist
	push 3
	pop $b
	popax
	cmp $a,$b
	je l1416
	push 0
	jmp l1417
l1416:
	push 1
l1417:
	popax
	cmp $a,0
	je l1418
	push 0
	pop ist
	push 15
	pop iwsp
	push 0
	cthis psjump
	jmp l1415
l1418:
l1415:
	end method
	method mpiaststd
	push 1
	pop ist
	push "down"
	push sside
	pop $b
	popax
	add $a,$b
	cthis rplay
	end method
	method mpiaststate
	localint $1
	pop $1
	push $1
	pop ist
	end method
	method mfintramp
	push 0
	pop _bbylskok
	end method
	method mframetramp
	push _bbylskok
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1420
	push 0
	jmp l1421
l1420:
	push 1
l1421:
	popax
	cmp $a,0
	je l1422
	localint $1
	cthis getname
	call anpiast,getcx
	cthis cfindy
	pop $1
	push $1
	cthis getey
	pop $b
	popax
	cmp $a,$b
	jne l1424
	push 0
	jmp l1425
l1424:
	push 1
l1425:
	popax
	cmp $a,0
	je l1426
	call anpiast,getpx
	call anpiast,lodx
	pop $b
	popax
	sub $a,$b
	push $1
	call anpiast,geth
	pop $b
	popax
	sub $a,$b
	call anpiast,setpos
	jmp l1423
l1426:
	call anpiast,mpiaststd
l1423:
	jmp l1419
l1422:
l1419:
	cthis framename
	push "jump"
	pop $b
	popax
	cmp $a,$b
	je l1428
	push 0
	jmp l1429
l1428:
	push 1
l1429:
	popax
	cmp $a,0
	je l1430
	call anpiast,mwyskocz
	push 1
	pop _bbylskok
	call sfxwylot,play
	jmp l1427
l1430:
l1427:
	end method
	method mouselclick
	push igmdebug
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1432
	push 0
	jmp l1433
l1432:
	push 1
l1433:
	popax
	cmp $a,0
	je l1434
	push 1
	cthis cactsndstop
	jmp l1431
l1434:
l1431:
	end method
	end game

	game gamepart2miasto
	parent classadvpiast
	method init
	clparent classadvpiast,init
	cthis cloadpiast
	push "scripts/part2/miasto/"
	push "bkg.png"
	push "elems.pyz"
	cthis cloadterrain
	push "maska.png"
	cthis cloadpathf
	push "anstraznik"
	push "straznik.pyz"
	push 20
	cthis newstdanima
	push "onendframe"
	push "mpiastendframe"
	call anpiast,addmethod
	push "anpiast"
	cthis looponfinish
	push "sndp"
	push 1
	push "mspiast"
	push 1
	push 10
	push "mfinp"
	cthis cnewsndsfin
	push "sndryc"
	push 2
	push "msryc"
	push 2
	push 7
	push "mfinryc"
	cthis cnewsndsfin
	new classmask,clm
	push "anstraznik"
	push "straznik"
	push "imglobcurs"
	push 0
	call clm,addmask
	push "mclickmask"
	push "null"
	push "null"
	push "null"
	call clm,addfunctolast
	localint $1
	call anbg0,nofactions
	pop $1
	new string,sstud
	push "anbg"
	push $1
	push "studnia"
	cthis cgetanbyaction
	pop sstud
	push sstud
	push "studnia"
	push "imglobcurs"
	push 0
	call clm,addmask
	push "mclickmask"
	push "null"
	push "null"
	push "null"
	call clm,addfunctolast
	new int,idy
	push 600
	call imgbkg,geth
	pop $b
	popax
	sub $a,$b
	pop idy
	push "anpiast"
	push 280
	push 560
	cthis cputgr2
	new gmobjvec,grall
	push "anstraznik"
	call grall,add
	push "imgbkg"
	call grall,add
	push "ptpiast"
	call grall,add
	push "anbg"
	push $1
	call grall,addgroup
	push 0
	push idy
	call grall,move
	push "anpiast"
	call grall,add
	call anpiast,mpiastendframe
	push 100
	push 50
	popax
	sub 0,$a
	call ptpiast,gotorel
	push "timkoment"
	push 45000
	push 1
	push "mfintimcom"
	cthis cnewtimerfin
	new classquest,clq
	end method
	method mfinp1
	push 1
	pop igmstate
	call ptpiast,anstand
	end method
	method mfinp2
	push "sndryc2"
	push "ru"
	cthis mstrazsay
	end method
	method mfinp3
	push "sndryc3"
	push "ru"
	cthis mstrazsay
	end method
	method mfinp4
	push "sndryc4"
	push "ru"
	cthis mstrazsay
	end method
	method mfinp5
	push "sndryc5"
	push "ru"
	cthis mstrazsay
	end method
	method mfinp6
	push "sndryc6"
	push "ru"
	cthis mstrazsay
	end method
	method mfinp7
	push "sndryc7"
	push "ru"
	cthis mstrazsay
	end method
	method mfinp8
	push 1
	pop igmstate
	call ptpiast,anstand
	end method
	method mfinp9
	push 1
	pop igmstate
	call ptpiast,anstand
	end method
	method mfinp10
	push "gamepart2labirynt"
	call gameapi,play
	end method
	method mfinryc2
	push "sndp3"
	push "ru"
	cthis mpiastsay2
	end method
	method mfinryc3
	push "sndp4"
	push "ru"
	cthis mpiastsay2
	end method
	method mfinryc4
	push "sndp5"
	push "ru"
	cthis mpiastsay2
	end method
	method mfinryc5
	push "sndp6"
	push "dd"
	cthis mpiastsay2
	end method
	method mfinryc6
	push "sndp7"
	push "ru"
	cthis mpiastsay2
	push "miastopogadal"
	call clq,done
	call timkoment,play
	end method
	method mfinryc7
	push 1
	pop igmstate
	cthis mstrazhear
	end method
	method mstrazniksay
	push "gada"
	call anstraznik,play
	end method
	method mstrazhear
	push "stoiPL"
	call anstraznik,play
	end method
	method mpiastsay2
	localstring $1
	localstring $2
	pop $2
	pop $1
	push "anpiast"
	push 5
	push $1
	push $2
	push "mstrazhear"
	push 1
	cthis cherosay
	end method
	method mstrazsay
	localstring $1
	localstring $2
	pop $2
	pop $1
	push "anpiast"
	push 5
	push $1
	push $2
	push "mstrazniksay"
	push 0
	cthis cherosay
	end method
	method mpiastsay
	localstring $1
	pop $1
	push "anpiast"
	push 5
	push $1
	call ptpiast,getdir
	push "null"
	push 1
	cthis cherosay
	end method
	method mfintimcom
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1436
	push 0
	jmp l1437
l1436:
	push 1
l1437:
	cthis cisplaying
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1438
	push 0
	jmp l1439
l1438:
	push 1
l1439:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l1440
	push "sndp9"
	cthis mpiastsay
	jmp l1435
l1440:
	cthis play
l1435:
	end method
	method mpiastendframe
	cthis getey
	push idy
	pop $b
	popax
	sub $a,$b
	cthis setz
	cthis getcy
	push 380
	push 430
	push 8
	push "grall"
	cthis cmovybkg
	end method
	method mstartgame
	push "sndp1"
	cthis mpiastsay
	end method
	method mfinptpiast
	call ptpiast,stand
	push igmstate
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1442
	push 0
	jmp l1443
l1442:
	push 1
l1443:
	popax
	cmp $a,0
	je l1444
	cthis mstartgame
	jmp l1441
l1444:
l1441:
	end method
	method mptreach
	localstring $1
	pop $1
	call ptpiast,stand
	push $1
	push "studnia"
	pop $b
	popax
	cmp $a,$b
	je l1446
	push 0
	jmp l1447
l1446:
	push 1
l1447:
	popax
	cmp $a,0
	je l1448
	push "sndp10"
	cthis mpiastsay
	jmp l1445
l1448:
	push $1
	push "straznik"
	pop $b
	popax
	cmp $a,$b
	je l1450
	push 0
	jmp l1451
l1450:
	push 1
l1451:
	popax
	cmp $a,0
	je l1452
	push "miastopogadal"
	call clq,isdone
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1454
	push 0
	jmp l1455
l1454:
	push 1
l1455:
	popax
	cmp $a,0
	je l1456
	push "sndp2"
	push "ru"
	cthis mpiastsay2
	jmp l1453
l1456:
	push "sndp7"
	push "ru"
	cthis mpiastsay2
l1453:
	jmp l1449
l1452:
l1449:
l1445:
	end method
	method mclickmask
	localstring $1
	pop $1
	push $1
	push "straznik"
	pop $b
	popax
	cmp $a,$b
	je l1458
	push 0
	jmp l1459
l1458:
	push 1
l1459:
	popax
	cmp $a,0
	je l1460
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1462
	push 0
	jmp l1463
l1462:
	push 1
l1463:
	popax
	cmp $a,0
	je l1464
	push "ptpiast"
	push "anstraznik"
	push "straznik"
	push 0
	push 80
	cthis cwalkto2
	jmp l1461
l1464:
l1461:
	jmp l1457
l1460:
	push $1
	push "studnia"
	pop $b
	popax
	cmp $a,$b
	je l1466
	push 0
	jmp l1467
l1466:
	push 1
l1467:
	popax
	cmp $a,0
	je l1468
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1470
	push 0
	jmp l1471
l1470:
	push 1
l1471:
	popax
	cmp $a,0
	je l1472
	push "miastopogadal"
	call clq,isdone
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1474
	push 0
	jmp l1475
l1474:
	push 1
l1475:
	popax
	cmp $a,0
	je l1476
	push "sndp8"
	cthis mpiastsay
	jmp l1473
l1476:
	push 3
	pop igmstate
	push "ptpiast"
	push sstud
	push "studnia"
	push 50
	push 40
	cthis cwalkto2
l1473:
	jmp l1469
l1472:
l1469:
	jmp l1465
l1468:
	push "mask click error: "
	push $1
	pop $b
	popax
	add $a,$b
	call engine,print
l1465:
l1457:
	end method
	method mouselclick
	cthis advclick
	end method
	end game

	game gamepart2labirynt
	parent classadvpiast
	method init
	clparent classadvpiast,init
	push "scripts/part2/labirynt/"
	cthis setgraphpath
	cthis cstdbkg
	push "imgmask"
	push "maska.png"
	push 0
	cthis newimg
	call imgmask,hide
	push "anstart"
	push "maski.pyz"
	push 10
	cthis newanima
	call anstart,hide
	push "anstart"
	push "anend"
	push "end"
	cthis copyanimaact
	push "anpiast"
	push "piast.pyz"
	push 20
	cthis newanima
	push "anpiast"
	cthis looponfinish
	call anstart,getpx
	push 10
	pop $b
	popax
	sub $a,$b
	call anstart,getpy
	push 20
	pop $b
	popax
	sub $a,$b
	call anpiast,setpos
	push 3
	call anpiast,setdelay
	push "standu"
	call anpiast,play
	push "onendframe"
	push "mpiastframe"
	call anpiast,addmethod
	push "anpiast"
	call clanpack,resizemethods
	push "labpiast1.wav"
	push "msndstartfin"
	cthis cplayintrofun
	push "sndfin"
	push "labpiast6.wav"
	push "msndfinfin"
	cthis cnewsndfin
	new classsndbank,cscom
	push "labpiast"
	push 2
	push 5
	push 0
	push 0
	call cscom,load
	push "timkoment"
	push 20000
	push 1
	push "mfintimcom"
	cthis cnewtimerfin
	call timkoment,play
	end method
	method mfintimcom
	push "cscom"
	cthis crplay
	cthis play
	end method
	method msndfinfin
	push "gamepart2zamek"
	call gameapi,play
	end method
	method msndstartfin
	push 1
	pop igmstate
	end method
	method mozna
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 1
	call imgmask,isin
	ret
	end method
	method mvpiast
	localint $1
	localint $2
	localstring $3
	pop $3
	pop $2
	pop $1
	call anpiast,getcx
	push $1
	pop $b
	popax
	add $a,$b
	call anpiast,getcy
	push $2
	pop $b
	popax
	add $a,$b
	cthis mozna
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1478
	push 0
	jmp l1479
l1478:
	push 1
l1479:
	popax
	cmp $a,0
	je l1480
	push $1
	push $2
	call anpiast,move
	push "go"
	push $3
	pop $b
	popax
	add $a,$b
	call anpiast,rplay
	jmp l1477
l1480:
	push "stand"
	push $3
	pop $b
	popax
	add $a,$b
	call anpiast,rplay
l1477:
	end method
	method mpiastframe
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	jne l1482
	push 0
	jmp l1483
l1482:
	push 1
l1483:
	popax
	cmp $a,0
	je l1484
	ret
	jmp l1481
l1484:
l1481:
	localstring $1
	cthis actionname
	pop $1
	push "up"
	call keyboard,iskeydown
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1486
	push 0
	jmp l1487
l1486:
	push 1
l1487:
	popax
	cmp $a,0
	je l1488
	push 0
	push 9
	popax
	sub 0,$a
	push "u"
	cthis mvpiast
	jmp l1485
l1488:
	push "down"
	call keyboard,iskeydown
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1490
	push 0
	jmp l1491
l1490:
	push 1
l1491:
	popax
	cmp $a,0
	je l1492
	push 0
	push 9
	push "d"
	cthis mvpiast
	jmp l1489
l1492:
	push "right"
	call keyboard,iskeydown
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1494
	push 0
	jmp l1495
l1494:
	push 1
l1495:
	popax
	cmp $a,0
	je l1496
	push 9
	push 0
	push "r"
	cthis mvpiast
	jmp l1493
l1496:
	push "left"
	call keyboard,iskeydown
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1498
	push 0
	jmp l1499
l1498:
	push 1
l1499:
	popax
	cmp $a,0
	je l1500
	push 9
	popax
	sub 0,$a
	push 0
	push "l"
	cthis mvpiast
	jmp l1497
l1500:
	push "stand"
	push 0
	push 1
	call $1,gete
	pop $b
	popax
	add $a,$b
	cthis rplay
l1497:
l1493:
l1489:
l1485:
	cthis getcx
	cthis getcy
	push 0
	push 0
	call anend,isin
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1502
	push 0
	jmp l1503
l1502:
	push 1
l1503:
	popax
	cmp $a,0
	je l1504
	push "stand"
	push 0
	push 1
	call $1,gete
	pop $b
	popax
	add $a,$b
	cthis rplay
	push 2
	pop igmstate
	push "sndfin"
	cthis cbplay
	jmp l1501
l1504:
l1501:
	end method
	end game

	game gamepart2zamek
	parent classadvpiast
	method init
	clparent classadvpiast,init
	cthis cloadpiast
	push "scripts/part2/zamek/"
	push "bkg.png"
	push "elems.pyz"
	cthis cloadterrain
	push "maska.png"
	cthis cloadpathf
	push "onendframe"
	push "mpiastendframe"
	call anpiast,addmethod
	push "anpiast"
	cthis looponfinish
	push "andruid"
	push "druid.pyz"
	push 0
	cthis newstdanima
	push "andruid"
	cthis cputgr
	push "anprince"
	push "prince.pyz"
	push 0
	cthis newstdanima
	push "anprince"
	cthis cputgr
	new classmask,clm
	push "anprince"
	push "ksiaze"
	push "imglobcurs"
	push 0
	call clm,addmask
	push "mclickmask"
	push "null"
	push "null"
	push "null"
	call clm,addfunctolast
	push "andruid"
	push "druid"
	push "imglobcurs"
	push 0
	call clm,addmask
	push "mclickmask"
	push "null"
	push "null"
	push "null"
	call clm,addfunctolast
	new int,iileelems
	call anbg0,nofactions
	pop iileelems
	localint $1
	push 1
	pop $1
l1505:
	push $1
	push 4
	pop $b
	popax
	cmp $a,$b
	jle l1506
	push 0
	jmp l1507
l1506:
	push 1
l1507:
	popax
	cmp $a,0
	je l1508
	jmp l1510
l1509:
	add $1,1
	pop $1
	jmp l1505
l1510:
	push "sryc"
	push $1
	pop $b
	popax
	add $a,$b
	push "ryc"
	push $1
	pop $b
	popax
	add $a,$b
	push "ryc"
	push $1
	pop $b
	popax
	add $a,$b
	cthis mbuildmask
	jmp l1509
l1508:
	push "sbaby"
	push "baby"
	push "baby"
	cthis mbuildmask
	push "smnich"
	push "mnichPL"
	push "mnich"
	cthis mbuildmask
	push "sndp"
	push 2
	push "zampiast"
	push 2
	push 9
	push "mfinp"
	cthis cnewsndsfin
	push "sndpaf"
	push 1
	push "zampaf"
	push 1
	push 8
	push "mfinpaf"
	cthis cnewsndsfin
	push "sndryc"
	push 1
	push "zamryc"
	push 1
	push 4
	cthis newsnds
	push "sndbaby"
	push "zambaby.wav"
	cthis newsnd
	push "sndmnich"
	push "zammn1.wav"
	cthis newsnd
	push "sndx"
	push 1
	push "zamx"
	push 1
	push 3
	push "mfinx"
	cthis cnewsndsfin
	push "anpiast"
	push 630
	push 470
	cthis cputgr2
	push "standdd"
	call anpiast,play
	call ptpiast,ansay
	new classquest,clq
	push "zampiast1.wav"
	push "mstartgame"
	cthis cplayintrofun
	end method
	method mfinx1
	cthis mnorma
	end method
	method mfinx2
	push "sndx3"
	push "mxhear"
	call ptpiast,getdir
	cthis mherosay
	end method
	method mfinx3
	cthis mnorma
	push "bxzezwolil"
	call clq,done
	end method
	method mfinp2
	push "sndpaf1"
	cthis mdruidtopiast2
	end method
	method mfinp3
	push "sndpaf3"
	cthis mdruidtopiast2
	end method
	method mfinp4
	push "sndpaf4"
	cthis mdruidtopiast2
	end method
	method mfinp5
	push "sndpaf5"
	cthis mdruidtopiast2
	end method
	method mfinp6
	push "sndpaf6"
	cthis mdruidtopiast2
	end method
	method mfinp7
	push "sndx2"
	push "ll"
	cthis mxtopiast
	end method
	method mfinp8
	push "sndpaf8"
	cthis mdruidtopiast2
	end method
	method mfinp9
	push "sndpaf2"
	cthis mdruidtopiast2
	end method
	method mfinpaf1
	push "sndp9"
	cthis mpiasttodruid2
	end method
	method mfinpaf2
	push "sndp3"
	cthis mpiasttodruid2
	end method
	method mfinpaf3
	push "sndp4"
	cthis mpiasttodruid2
	end method
	method mfinpaf4
	push "sndp5"
	cthis mpiasttodruid2
	end method
	method mfinpaf5
	push "sndp6"
	cthis mpiasttodruid2
	end method
	method mfinpaf6
	push "sndpaf7"
	cthis mdruidtopiast2
	push "bdruidgadal"
	call clq,done
	end method
	method mfinpaf7
	cthis mnorma
	cthis mdruidhear
	end method
	method mfinpaf8
	cthis mfinitogame
	end method
	method mnorma
	push 1
	pop igmstate
	call ptpiast,anstand
	end method
	method mfinitogame
	push "lot1restart"
	push 0
	call clsav,qsave
	push "gamelot1"
	call gameapi,play
	end method
	method mdruidsay
	push "gada"
	call andruid,play
	end method
	method mdruidhear
	push "siedziL"
	call andruid,play
	end method
	method mxsay
	push "odwraca"
	call anprince,play
	end method
	method mxhear
	push "gadaPL"
	call anprince,play
	end method
	method mpiastsay
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push "anpiast"
	push 5
	push $1
	push $3
	push $2
	push 1
	cthis cherosay
	end method
	method mpiasttodruid2
	localstring $1
	pop $1
	push $1
	call ptpiast,getdir
	cthis mpiasttodruid
	end method
	method mpiasttodruid
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push "mdruidhear"
	push $2
	cthis mpiastsay
	end method
	method mpiasttox
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push "mxhear"
	push $2
	cthis mpiastsay
	end method
	method mherosay
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push "anpiast"
	push 5
	push $1
	push $3
	push $2
	push 0
	cthis cherosay
	end method
	method mdruidtopiast
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push "mdruidsay"
	push $2
	cthis mherosay
	end method
	method mdruidtopiast2
	localstring $1
	pop $1
	push $1
	call ptpiast,getdir
	cthis mdruidtopiast
	end method
	method mxtopiast
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push "mxsay"
	push $2
	cthis mherosay
	end method
	method mpiastendframe
	cthis getey
	cthis setz
	end method
	method mstartgame
	push 1
	pop igmstate
	call ptpiast,anstand
	end method
	method mfinptpiast
	call ptpiast,stand
	end method
	method mptreach
	localstring $1
	pop $1
	call ptpiast,stand
	push $1
	push "druid"
	pop $b
	popax
	cmp $a,$b
	je l1512
	push 0
	jmp l1513
l1512:
	push 1
l1513:
	popax
	cmp $a,0
	je l1514
	push "bdruidgadal"
	call clq,isdone
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1516
	push 0
	jmp l1517
l1516:
	push 1
l1517:
	popax
	cmp $a,0
	je l1518
	push "sndp2"
	push "ru"
	cthis mpiasttodruid
	jmp l1515
l1518:
	push "bxzezwolil"
	call clq,isdone
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1520
	push 0
	jmp l1521
l1520:
	push 1
l1521:
	popax
	cmp $a,0
	je l1522
	push "sndpaf7"
	push "ru"
	cthis mdruidtopiast
	jmp l1519
l1522:
	push "sndp8"
	push "ru"
	cthis mpiasttodruid
l1519:
l1515:
	jmp l1511
l1514:
	push $1
	push "ksiaze"
	pop $b
	popax
	cmp $a,$b
	je l1524
	push 0
	jmp l1525
l1524:
	push 1
l1525:
	popax
	cmp $a,0
	je l1526
	push "bdruidgadal"
	call clq,isdone
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1528
	push 0
	jmp l1529
l1528:
	push 1
l1529:
	popax
	cmp $a,0
	je l1530
	push "sndx1"
	push "mxhear"
	call ptpiast,getdir
	cthis mherosay
	jmp l1527
l1530:
	push "sndp7"
	push "ll"
	cthis mpiasttox
l1527:
	jmp l1523
l1526:
	push $1
	push "mnich"
	pop $b
	popax
	cmp $a,$b
	je l1532
	push 0
	jmp l1533
l1532:
	push 1
l1533:
	popax
	cmp $a,0
	je l1534
	push "sndmnich"
	cthis crbgplay
	jmp l1531
l1534:
	push $1
	push "ryc1"
	pop $b
	popax
	cmp $a,$b
	je l1536
	push 0
	jmp l1537
l1536:
	push 1
l1537:
	popax
	cmp $a,0
	je l1538
	push "sndryc1"
	cthis crbgplay
	jmp l1535
l1538:
	push $1
	push "ryc2"
	pop $b
	popax
	cmp $a,$b
	je l1540
	push 0
	jmp l1541
l1540:
	push 1
l1541:
	popax
	cmp $a,0
	je l1542
	push "sndryc2"
	cthis crbgplay
	jmp l1539
l1542:
	push $1
	push "ryc3"
	pop $b
	popax
	cmp $a,$b
	je l1544
	push 0
	jmp l1545
l1544:
	push 1
l1545:
	popax
	cmp $a,0
	je l1546
	push "sndryc3"
	cthis crbgplay
	jmp l1543
l1546:
	push $1
	push "ryc4"
	pop $b
	popax
	cmp $a,$b
	je l1548
	push 0
	jmp l1549
l1548:
	push 1
l1549:
	popax
	cmp $a,0
	je l1550
	push "sndryc4"
	cthis crbgplay
	jmp l1547
l1550:
	push $1
	push "baby"
	pop $b
	popax
	cmp $a,$b
	je l1552
	push 0
	jmp l1553
l1552:
	push 1
l1553:
	popax
	cmp $a,0
	je l1554
	push "sndbaby"
	cthis crbgplay
	jmp l1551
l1554:
l1551:
l1547:
l1543:
l1539:
l1535:
l1531:
l1523:
l1511:
	end method
	method mclickmask
	localstring $1
	pop $1
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1556
	push 0
	jmp l1557
l1556:
	push 1
l1557:
	popax
	cmp $a,0
	je l1558
	push $1
	push "druid"
	pop $b
	popax
	cmp $a,$b
	je l1560
	push 0
	jmp l1561
l1560:
	push 1
l1561:
	popax
	cmp $a,0
	je l1562
	push "ptpiast"
	push "andruid"
	push "druid"
	push 40
	popax
	sub 0,$a
	push 60
	cthis cwalkto2
	jmp l1559
l1562:
	push $1
	push "ksiaze"
	pop $b
	popax
	cmp $a,$b
	je l1564
	push 0
	jmp l1565
l1564:
	push 1
l1565:
	popax
	cmp $a,0
	je l1566
	push "ptpiast"
	push "anprince"
	push "ksiaze"
	push 40
	push 50
	cthis cwalkto2
	jmp l1563
l1566:
	push $1
	push "mnich"
	pop $b
	popax
	cmp $a,$b
	je l1568
	push 0
	jmp l1569
l1568:
	push 1
l1569:
	popax
	cmp $a,0
	je l1570
	push "ptpiast"
	push smnich
	push "mnich"
	push 0
	push 0
	cthis cwalkto2
	jmp l1567
l1570:
	push $1
	push "ryc1"
	pop $b
	popax
	cmp $a,$b
	je l1572
	push 0
	jmp l1573
l1572:
	push 1
l1573:
	popax
	cmp $a,0
	je l1574
	push "ptpiast"
	push sryc1
	push "ryc1"
	push 0
	push 0
	cthis cwalkto2
	jmp l1571
l1574:
	push $1
	push "ryc2"
	pop $b
	popax
	cmp $a,$b
	je l1576
	push 0
	jmp l1577
l1576:
	push 1
l1577:
	popax
	cmp $a,0
	je l1578
	push "ptpiast"
	push sryc2
	push "ryc2"
	push 0
	push 0
	cthis cwalkto2
	jmp l1575
l1578:
	push $1
	push "ryc3"
	pop $b
	popax
	cmp $a,$b
	je l1580
	push 0
	jmp l1581
l1580:
	push 1
l1581:
	popax
	cmp $a,0
	je l1582
	push "ptpiast"
	push sryc3
	push "ryc3"
	push 0
	push 0
	cthis cwalkto2
	jmp l1579
l1582:
	push $1
	push "ryc4"
	pop $b
	popax
	cmp $a,$b
	je l1584
	push 0
	jmp l1585
l1584:
	push 1
l1585:
	popax
	cmp $a,0
	je l1586
	push "ptpiast"
	push sryc4
	push "ryc4"
	push 20
	popax
	sub 0,$a
	push 80
	cthis cwalkto2
	jmp l1583
l1586:
	push $1
	push "baby"
	pop $b
	popax
	cmp $a,$b
	je l1588
	push 0
	jmp l1589
l1588:
	push 1
l1589:
	popax
	cmp $a,0
	je l1590
	push "ptpiast"
	push sbaby
	push "baby"
	push 20
	popax
	sub 0,$a
	push 80
	cthis cwalkto2
	jmp l1587
l1590:
l1587:
l1583:
l1579:
l1575:
l1571:
l1567:
l1563:
l1559:
	jmp l1555
l1558:
l1555:
	end method
	method mouselclick
	cthis advclick
	end method
	end game

	game gamelot1
	parent classadvpiast
	method init
	clparent classadvpiast,init
	push "scripts/lot1/lot/"
	cthis setgraphpath
	new classbgmover,clmv
	push "bkg.png"
	push 0
	call clmv,loadimg
	push "up"
	call clmv,setdir
	new gmobjvec,grall
	push "imgzamek"
	push "zamek.png"
	push 1
	cthis newimg
	push 800
	call imgzamek,getw
	pop $b
	popax
	sub $a,$b
	push 600
	call imgzamek,geth
	pop $b
	popax
	sub $a,$b
	call imgzamek,setpos
	push "imgzamek"
	call grall,add
	localint $1
	push 50
	pop $1
	push "cnjp"
	push "anjap"
	push "japco.pyz"
	push 30
	push $1
	cthis newancounter
	localstring $2
	localint $3
	push 0
	pop $3
l1591:
	push $3
	push $1
	pop $b
	popax
	cmp $a,$b
	jl l1592
	push 0
	jmp l1593
l1592:
	push 1
l1593:
	popax
	cmp $a,0
	je l1594
	jmp l1596
l1595:
	add $3,1
	pop $3
	jmp l1591
l1596:
	push "anjap"
	push $3
	pop $b
	popax
	add $a,$b
	pop $2
	push $2
	popax
	spush $a
	push "onfinish"
	push "mjapfin"
	spop $a
	call [$a],addmethod
	push $2
	popax
	spush $a
	spop $a
	call [$a],hide
	push $2
	popax
	spush $a
	spop $a
	call [$a],mjapbuild
	jmp l1595
l1594:
	push 25
	pop $1
	push "cnel"
	push "anel"
	push "elems.pyz"
	push 20
	push $1
	cthis newancounter
	push 0
	pop $3
l1597:
	push $3
	push $1
	pop $b
	popax
	cmp $a,$b
	jl l1598
	push 0
	jmp l1599
l1598:
	push 1
l1599:
	popax
	cmp $a,0
	je l1600
	jmp l1602
l1601:
	add $3,1
	pop $3
	jmp l1597
l1602:
	push "anel"
	push $3
	pop $b
	popax
	add $a,$b
	pop $2
	push $2
	popax
	spush $a
	spop $a
	call [$a],hide
	push $2
	popax
	spush $a
	push "onfinish"
	push "melfin"
	spop $a
	call [$a],addmethod
	jmp l1601
l1600:
	push 15
	pop $1
	push "cnkr"
	push "ankr"
	push "krasnal.pyz"
	push 25
	push $1
	cthis newancounter
	push 0
	pop $3
l1603:
	push $3
	push $1
	pop $b
	popax
	cmp $a,$b
	jl l1604
	push 0
	jmp l1605
l1604:
	push 1
l1605:
	popax
	cmp $a,0
	je l1606
	jmp l1608
l1607:
	add $3,1
	pop $3
	jmp l1603
l1608:
	push "ankr"
	push $3
	pop $b
	popax
	add $a,$b
	pop $2
	push $2
	popax
	spush $a
	spop $a
	call [$a],hide
	push $2
	popax
	spush $a
	push "onfinish"
	push "mkrasfin"
	spop $a
	call [$a],addmethod
	jmp l1607
l1606:
	push 25
	pop $1
	push "cnpc"
	push "anpach"
	push "pach.pyz"
	push 60
	push $1
	cthis newancounter
	push 0
	pop $3
l1609:
	push $3
	push $1
	pop $b
	popax
	cmp $a,$b
	jl l1610
	push 0
	jmp l1611
l1610:
	push 1
l1611:
	popax
	cmp $a,0
	je l1612
	jmp l1614
l1613:
	add $3,1
	pop $3
	jmp l1609
l1614:
	push "anpach"
	push $3
	pop $b
	popax
	add $a,$b
	pop $2
	push $2
	popax
	spush $a
	spop $a
	call [$a],hide
	push $2
	popax
	spush $a
	push "onfinish"
	push "mpachfin"
	spop $a
	call [$a],addmethod
	jmp l1613
l1612:
	push 10
	pop $1
	push "cnpr"
	push "anpr"
	push "proca.pyz"
	push 25
	push $1
	cthis newancounter
	push 0
	pop $3
l1615:
	push $3
	push $1
	pop $b
	popax
	cmp $a,$b
	jl l1616
	push 0
	jmp l1617
l1616:
	push 1
l1617:
	popax
	cmp $a,0
	je l1618
	jmp l1620
l1619:
	add $3,1
	pop $3
	jmp l1615
l1620:
	push "anpr"
	push $3
	pop $b
	popax
	add $a,$b
	pop $2
	push $2
	popax
	spush $a
	spop $a
	call [$a],hide
	push $2
	popax
	spush $a
	push "onfinish"
	push "mprocfin"
	spop $a
	call [$a],addmethod
	jmp l1619
l1618:
	push 140
	pop $1
	push "cnpt"
	push "anptak"
	push "ptaszyle.pyz"
	push 26
	push $1
	cthis newancounter
	push 0
	pop $3
l1621:
	push $3
	push $1
	pop $b
	popax
	cmp $a,$b
	jl l1622
	push 0
	jmp l1623
l1622:
	push 1
l1623:
	popax
	cmp $a,0
	je l1624
	jmp l1626
l1625:
	add $3,1
	pop $3
	jmp l1621
l1626:
	push "anptak"
	push $3
	pop $b
	popax
	add $a,$b
	pop $2
	push $2
	popax
	spush $a
	spop $a
	call [$a],hide
	push $2
	cthis looponfinish
	push $2
	popax
	spush $a
	push "onendframe"
	push "mptakframe"
	spop $a
	call [$a],addmethod
	jmp l1625
l1624:
	push "anjap0"
	push "anczas"
	cthis copyanima
	push "onfinish"
	push "mfintimmv"
	call anczas,addmethod
	push 1
	call anczas,setdelay
	push 200
	popax
	sub 0,$a
	push 0
	call anczas,setpos
	push 0
	call anczas,play
	push "timzamek"
	push 100
	push 1
	push "mfintimzamek"
	cthis cnewtimerfin
	call timzamek,play
	push "timnew"
	push 2000
	push 1
	push "mfintimnew"
	cthis cnewtimerfin
	push "anlot"
	push "samolot.pyz"
	push 50
	cthis newanima
	push 2
	call anlot,setdelay
	push "onfinish"
	push "mlotfin"
	call anlot,addmethod
	push "onendframe"
	push "mlotframe"
	call anlot,addmethod
	push "anlot"
	push "ancien"
	cthis copyanima
	push 2
	call ancien,setdelay
	push "ancien"
	cthis looponfinish
	push 40
	call ancien,setz
	push "up"
	cthis mplaylot
	push 550
	push 250
	cthis msetlot
	push igmeasy
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1628
	push 0
	jmp l1629
l1628:
	push 1
l1629:
	popax
	cmp $a,0
	je l1630
	push "dbel"
	push "easyelms.db"
	cthis newdb
	jmp l1627
l1630:
	push "dbel"
	push "elms.db"
	cthis newdb
l1627:
	new int,idbwsk
	push 0
	pop idbwsk
	new int,istep
	push 6
	pop istep
	push "sndp"
	push 1
	push "lot1piast"
	push 1
	push 3
	cthis newsnds
	push "sndp7"
	push "lot1piast7.wav"
	push "mfinp7"
	cthis cnewsndfin
	push "sndpaf"
	push 1
	push "lot1paf"
	push 1
	push 6
	cthis newsnds
	push "onfinish"
	push "mstart"
	call sndpaf2,addmethod
	push "onfinish"
	push "mpaf3fin"
	call sndpaf3,addmethod
	push "sndpaf3"
	push "sndp3"
	cthis cplayonfin
	new classsndbank,cpnon
	push "lot1piast"
	push 8
	push 12
	push 0
	push 0
	call cpnon,load
	new classsndbank,cpok
	push "lot1piast"
	push 13
	push 17
	push 0
	push 0
	call cpok,load
	push "sndkrau"
	push "lot1kras6.wav"
	cthis newsnd
	push "sndprocau"
	push "lot1proc3.wav"
	cthis newsnd
	new classsndbank,cpkr
	push "lot1kras"
	push 1
	push 5
	push 0
	push 0
	call cpkr,load
	new classsndbank,cppr
	push "lot1proc"
	push 1
	push 2
	push 0
	push 0
	call cppr,load
	push "lot1restart"
	push 0
	call clsav,qload
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1632
	push 0
	jmp l1633
l1632:
	push 1
l1633:
	popax
	cmp $a,0
	je l1634
	push "sndp1"
	push "sndpaf1"
	cthis cplayonfinplay
	push "sndpaf1"
	push "sndpaf2"
	cthis cplayonfin
	jmp l1631
l1634:
	push "sndpaf4"
	push "sndp2"
	cthis cplayonfinplay
	push "sndp2"
	push "sndpaf5"
	cthis cplayonfin
	push "sndpaf5"
	push "sndpaf6"
	cthis cplayonfin
	push "onfinish"
	push "mstart"
	call sndpaf6,addmethod
l1631:
	new classlives,clliv
	push 40
	push 3
	push 20
	push 5
	push 5
	push 245
	push 43
	push 45
	push 255
	push 45
	push 12
	push 245
	push 255
	push 200
	push "left"
	call clliv,set
	push "dbwavs"
	push "wavs.db"
	cthis cloadwavs
	push 0
	call gameapi,setmusicvol
	end method
	method mfinp7
	push "lot1restart"
	push 1
	call clsav,qsave
	push "gamelot1"
	call gameapi,play
	end method
	method mretptak
	localstring $1
	pop $1
	push $1
	popax
	spush $a
	push 0
	spop $a
	call [$a],stop
	push $1
	popax
	spush $a
	spop $a
	call [$a],hide
	push $1
	call cnpt,retf
	end method
	method mptakframe
	cthis getpy
	push 600
	pop $b
	popax
	cmp $a,$b
	jl l1636
	push 0
	jmp l1637
l1636:
	push 1
l1637:
	popax
	cmp $a,0
	je l1638
	localint $1
	cthis getcx
	pop $1
	localint $2
	cthis getey
	push 3
	pop $b
	popax
	sub $a,$b
	pop $2
	push $1
	push $2
	push 1
	push 1
	call anlot,isin
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1640
	push 0
	jmp l1641
l1640:
	push 1
l1641:
	push $1
	push 5
	pop $b
	popax
	sub $a,$b
	push $2
	push 1
	push 1
	call anlot,isin
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1642
	push 0
	jmp l1643
l1642:
	push 1
l1643:
	popax
	pop $b
	or $a,$b
	push $1
	push 5
	pop $b
	popax
	add $a,$b
	push $2
	push 1
	push 1
	call anlot,isin
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1644
	push 0
	jmp l1645
l1644:
	push 1
l1645:
	popax
	pop $b
	or $a,$b
	popax
	cmp $a,0
	je l1646
	cthis getname
	cthis mretptak
	push $1
	push $2
	cthis mbum
	push 1
	cthis mkilnij
	jmp l1639
l1646:
	push 0
	push 4
	cthis move
l1639:
	jmp l1635
l1638:
	cthis getname
	cthis mretptak
l1635:
	end method
	method mpachfin
	cthis getname
	call grall,remove
	cthis hide
	end method
	method mprocfin
	cthis getpy
	push 600
	pop $b
	popax
	cmp $a,$b
	jl l1648
	push 0
	jmp l1649
l1648:
	push 1
l1649:
	popax
	cmp $a,0
	je l1650
	push 1
	popax
	sub 0,$a
	cthis actionnr
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1652
	push 0
	jmp l1653
l1652:
	push 1
l1653:
	popax
	cmp $a,0
	je l1654
	call sfxfir2,isplaying
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1656
	push 0
	jmp l1657
l1656:
	push 1
l1657:
	popax
	cmp $a,0
	je l1658
	call sfxfir2,play
	jmp l1655
l1658:
l1655:
	cthis getcx
	cthis getcy
	push 5
	popax
	sub 0,$a
	push 10
	push 1
	cthis mjapfire
	cthis getcx
	cthis getcy
	push 5
	push 10
	push 1
	cthis mjapfire
	call cppr,rplay
	jmp l1651
l1654:
l1651:
	push 1
	popax
	sub 0,$a
	cthis play
	jmp l1647
l1650:
	cthis getname
	call grall,remove
	push 25
	cthis setz
	cthis hide
l1647:
	end method
	method mkrasfin
	cthis getpy
	push 600
	pop $b
	popax
	cmp $a,$b
	jl l1660
	push 0
	jmp l1661
l1660:
	push 1
l1661:
	popax
	cmp $a,0
	je l1662
	localstring $1
	cthis actionname
	pop $1
	push 0
	push 1
	call $1,getb
	push "r"
	pop $b
	popax
	cmp $a,$b
	je l1664
	push 0
	jmp l1665
l1664:
	push 1
l1665:
	popax
	cmp $a,0
	je l1666
	localint $2
	cthis getpy
	push 5
	pop $b
	popax
	add $a,$b
	pop $2
	call sfxfir2,play
	push 0
	push 1
	call $1,gete
	push "p"
	pop $b
	popax
	cmp $a,$b
	je l1668
	push 0
	jmp l1669
l1668:
	push 1
l1669:
	popax
	cmp $a,0
	je l1670
	cthis getex
	push $2
	push 15
	push 5
	push 10
	call $2,rand
	pop $b
	popax
	sub $a,$b
	push istep
	pop $b
	popax
	add $a,$b
	push 1
	cthis mjapfire
	jmp l1667
l1670:
	cthis getpx
	push $2
	push 15
	popax
	sub 0,$a
	push 5
	push 10
	call $2,rand
	pop $b
	popax
	sub $a,$b
	push istep
	pop $b
	popax
	add $a,$b
	push 1
	cthis mjapfire
l1667:
	call cpkr,rplay
	jmp l1663
l1666:
l1663:
	push 1
	popax
	sub 0,$a
	cthis play
	jmp l1659
l1662:
	cthis getname
	call grall,remove
	push 25
	cthis setz
	cthis hide
l1659:
	end method
	method mjapbuild
	new int,idx
	new int,idy
	new int,ikto
	end method
	method mjfin0
	localint $1
	localint $2
	pop $2
	pop $1
	localstring $3
	push $1
	push $2
	push 1
	push 1
	push 25
	push 26
	call engine,getimg
	pop $3
	push $3
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l1672
	push 0
	jmp l1673
l1672:
	push 1
l1673:
	popax
	cmp $a,0
	je l1674
	localstring $4
	push 2
	push 2
	call $3,getb
	pop $4
	push $4
	push "kr"
	pop $b
	popax
	cmp $a,$b
	je l1676
	push 0
	jmp l1677
l1676:
	push 1
l1677:
	popax
	cmp $a,0
	je l1678
	push $3
	popax
	spush $a
	spop $a
	call [$a],actionname
	pop $4
	push $3
	popax
	spush $a
	push "lezy"
	push 0
	push 1
	call $4,gete
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],play
	push $3
	popax
	spush $a
	push 24
	spop $a
	call [$a],setz
	call sndkrau,playif
	push "cpok"
	push 2
	push "r"
	cthis crandplay
	call cfbum2,playif
	jmp l1675
l1678:
	push $4
	push "pr"
	pop $b
	popax
	cmp $a,$b
	je l1680
	push 0
	jmp l1681
l1680:
	push 1
l1681:
	popax
	cmp $a,0
	je l1682
	call cnpr,get
	pop $4
	push $3
	popax
	spush $a
	push 1
	spop $a
	call [$a],play
	push $4
	popax
	spush $a
	push $3
	popax
	spush $a
	spop $a
	call [$a],getpx
	push 10
	pop $b
	popax
	add $a,$b
	push $3
	popax
	spush $a
	spop $a
	call [$a],getpy
	spop $a
	call [$a],setpos
	push $4
	popax
	spush $a
	push 2
	spop $a
	call [$a],play
	push $3
	popax
	spush $a
	push 24
	spop $a
	call [$a],setz
	push $4
	popax
	spush $a
	push 24
	spop $a
	call [$a],setz
	push $4
	call grall,add
	call sndkrau,playif
	push "cpok"
	cthis crbgplay
	call cfbum2,playif
	jmp l1679
l1682:
	push $4
	push "pt"
	pop $b
	popax
	cmp $a,$b
	je l1684
	push 0
	jmp l1685
l1684:
	push 1
l1685:
	popax
	cmp $a,0
	je l1686
	push $3
	cthis mretptak
	push "cpok"
	push 12
	push "r"
	cthis crandplay
	call cfbum,bgplay
	jmp l1683
l1686:
l1683:
l1679:
l1675:
	push $1
	push $2
	cthis mbum
	push 1
	ret
	jmp l1671
l1674:
	push 0
	ret
l1671:
	end method
	method mbum
	localint $1
	localint $2
	pop $2
	pop $1
	localstring $3
	call cnpc,get
	pop $3
	push $3
	popax
	spush $a
	push $1
	push $2
	spop $a
	call [$a],setpos
	push $3
	popax
	spush $a
	push 2
	call $1,rand
	spop $a
	call [$a],play
	push $3
	call grall,add
	cthis getname
	call grall,remove
	cthis hide
	end method
	method mjfin1
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 1
	call anlot,isin
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1688
	push 0
	jmp l1689
l1688:
	push 1
l1689:
	popax
	cmp $a,0
	je l1690
	push $1
	push $2
	cthis mbum
	push 1
	cthis mkilnij
	push 1
	ret
	jmp l1687
l1690:
	push 0
	ret
l1687:
	end method
	method mjapfin
	push idx
	push idy
	cthis move
	localint $1
	cthis getcx
	pop $1
	localint $2
	cthis getcy
	pop $2
	push $1
	push $2
	push 10
	popax
	sub 0,$a
	push 10
	popax
	sub 0,$a
	push 810
	push 610
	call clsurf,isin
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1692
	push 0
	jmp l1693
l1692:
	push 1
l1693:
	popax
	cmp $a,0
	je l1694
	push "mjfin"
	push ikto
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	push $1
	push $2
	spop $d
	cthis [$d]
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1696
	push 0
	jmp l1697
l1696:
	push 1
l1697:
	popax
	cmp $a,0
	je l1698
	push 0
	cthis play
	jmp l1695
l1698:
l1695:
	jmp l1691
l1694:
	cthis hide
l1691:
	end method
	method msetjap
	localint $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	pop idx
	push $2
	pop idy
	push $3
	pop ikto
	end method
	method mjapfire
	localint $1
	localint $2
	localint $3
	localint $4
	localint $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	localstring $6
	call cnjp,get
	pop $6
	push $6
	popax
	spush $a
	push $3
	push $4
	push $5
	spop $a
	call [$a],msetjap
	push $6
	popax
	spush $a
	push $1
	push $2
	spop $a
	call [$a],setpos
	push $6
	popax
	spush $a
	push 0
	spop $a
	call [$a],play
	end method
	method mkilnij
	localint $1
	pop $1
	push $1
	call clliv,damage
	call clliv,destroyed
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1700
	push 0
	jmp l1701
l1700:
	push 1
l1701:
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1702
	push 0
	jmp l1703
l1702:
	push 1
l1703:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l1704
	push 0
	pop igmstate
	push "sndp7"
	cthis cbplay
	call sfxout,play
	jmp l1699
l1704:
	push "cpnon"
	cthis crplay
	call cfbum3,play
l1699:
	end method
	method mlotfin
	push 1
	popax
	sub 0,$a
	cthis play
	end method
	method melfin
	cthis getpy
	push 600
	pop $b
	popax
	cmp $a,$b
	jl l1706
	push 0
	jmp l1707
l1706:
	push 1
l1707:
	popax
	cmp $a,0
	je l1708
	push 1
	popax
	sub 0,$a
	cthis play
	jmp l1705
l1708:
	cthis getname
	call grall,remove
	cthis hide
l1705:
	end method
	method msetlot
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call anlot,setpos
	push $1
	push $2
	call ancien,setpos
	end method
	method mmovlot
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call anlot,move
	push $1
	push $2
	call ancien,move
	end method
	method mbgmov
	localint $1
	pop $1
	push $1
	call clmv,movdown
	push 0
	push $1
	call grall,move
	end method
	method mplaylot
	localstring $1
	pop $1
	push $1
	call anlot,play
	push 1
	popax
	sub 0,$a
	call anlot,actionnr
	push 4
	pop $b
	popax
	add $a,$b
	call ancien,play
	end method
	method mactlot
	localstring $1
	pop $1
	localint $2
	call anlot,framenr
	pop $2
	push $1
	push $2
	call anlot,setframe
	push 1
	popax
	sub 0,$a
	call anlot,actionnr
	push 4
	pop $b
	popax
	add $a,$b
	push $2
	call ancien,setframe
	end method
	method mactlot2
	localint $1
	pop $1
	localint $2
	call anlot,framenr
	pop $2
	push $1
	push $2
	call anlot,setframe
	push $1
	push 4
	pop $b
	popax
	add $a,$b
	push $2
	call ancien,setframe
	end method
	method miskey
	localstring $1
	pop $1
	push $1
	call keyboard,iskeydown
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1710
	push 0
	jmp l1711
l1710:
	push 1
l1711:
	popax
	cmp $a,0
	je l1712
	push $1
	call anlot,isplaying
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1714
	push 0
	jmp l1715
l1714:
	push 1
l1715:
	popax
	cmp $a,0
	je l1716
	push $1
	cthis mactlot
	jmp l1713
l1716:
l1713:
	push 1
	ret
	jmp l1709
l1712:
l1709:
	push 0
	ret
	end method
	method mlotframe
	push "up"
	cthis miskey
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1718
	push 0
	jmp l1719
l1718:
	push 1
l1719:
	popax
	cmp $a,0
	je l1720
	call anlot,getpy
	push 20
	pop $b
	popax
	cmp $a,$b
	ja l1722
	push 0
	jmp l1723
l1722:
	push 1
l1723:
	popax
	cmp $a,0
	je l1724
	push 0
	push istep
	popax
	sub 0,$a
	push istep
	pop $b
	popax
	sub $a,$b
	cthis mmovlot
	jmp l1721
l1724:
l1721:
	jmp l1717
l1720:
	push "down"
	cthis miskey
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1726
	push 0
	jmp l1727
l1726:
	push 1
l1727:
	popax
	cmp $a,0
	je l1728
	call anlot,getey
	push 580
	pop $b
	popax
	cmp $a,$b
	jl l1730
	push 0
	jmp l1731
l1730:
	push 1
l1731:
	popax
	cmp $a,0
	je l1732
	push 0
	push istep
	push istep
	pop $b
	popax
	add $a,$b
	cthis mmovlot
	jmp l1729
l1732:
l1729:
	jmp l1725
l1728:
l1725:
l1717:
	push "left"
	cthis miskey
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1734
	push 0
	jmp l1735
l1734:
	push 1
l1735:
	popax
	cmp $a,0
	je l1736
	call anlot,getpx
	push 20
	pop $b
	popax
	cmp $a,$b
	ja l1738
	push 0
	jmp l1739
l1738:
	push 1
l1739:
	popax
	cmp $a,0
	je l1740
	push istep
	popax
	sub 0,$a
	push istep
	pop $b
	popax
	sub $a,$b
	push 0
	cthis mmovlot
	jmp l1737
l1740:
l1737:
	jmp l1733
l1736:
	push "right"
	cthis miskey
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1742
	push 0
	jmp l1743
l1742:
	push 1
l1743:
	popax
	cmp $a,0
	je l1744
	call anlot,getex
	push 780
	pop $b
	popax
	cmp $a,$b
	jl l1746
	push 0
	jmp l1747
l1746:
	push 1
l1747:
	popax
	cmp $a,0
	je l1748
	push istep
	push istep
	pop $b
	popax
	add $a,$b
	push 0
	cthis mmovlot
	jmp l1745
l1748:
l1745:
	jmp l1741
l1744:
	push 0
	cthis mactlot2
l1741:
l1733:
	end method
	method mnewel
	localint $1
	localint $2
	localstring $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	localstring $5
	push $3
	popax
	spush $a
	spop $a
	call [$a],get
	pop $5
	push $5
	popax
	spush $a
	push $1
	push 100
	pop $b
	popax
	mul $a,$b
	push 20
	pop $b
	popax
	add $a,$b
	push 40
	call $1,rand
	pop $b
	popax
	sub $a,$b
	push 220
	call $1,rand
	popax
	sub 0,$a
	push $5
	popax
	spush $a
	spop $a
	call [$a],geth
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setpos
	push $5
	popax
	spush $a
	push $2
	spop $a
	call [$a],play
	push $5
	popax
	spush $a
	push $4
	spop $a
	call [$a],setz
	push $5
	call grall,add
	end method
	method mptakatak
	localint $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	localstring $4
	localint $5
	push 40
	call $1,rand
	push 130
	pop $b
	popax
	sub $a,$b
	pop $5
	localint $6
	localint $7
	push $3
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1750
	push 0
	jmp l1751
l1750:
	push 1
l1751:
	popax
	cmp $a,0
	je l1752
	push 750
	push $2
	pop $b
	popax
	div $a,$b
	psax
	pop $7
	push $7
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $6
	jmp l1749
l1752:
	push $3
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1754
	push 0
	jmp l1755
l1754:
	push 1
l1755:
	popax
	cmp $a,0
	je l1756
	push 400
	push $2
	pop $b
	popax
	div $a,$b
	psax
	pop $7
	push 200
	push $7
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	pop $6
	jmp l1753
l1756:
	push $3
	push 2
	pop $b
	popax
	cmp $a,$b
	je l1758
	push 0
	jmp l1759
l1758:
	push 1
l1759:
	popax
	cmp $a,0
	je l1760
	push 400
	push $2
	pop $b
	popax
	div $a,$b
	psax
	pop $7
	push $7
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $6
	jmp l1757
l1760:
	push $3
	push 3
	pop $b
	popax
	cmp $a,$b
	je l1762
	push 0
	jmp l1763
l1762:
	push 1
l1763:
	popax
	cmp $a,0
	je l1764
	push 400
	push $2
	pop $b
	popax
	div $a,$b
	psax
	pop $7
	push 400
	push $7
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	pop $6
	jmp l1761
l1764:
	push $3
	push 4
	pop $b
	popax
	cmp $a,$b
	je l1766
	push 0
	jmp l1767
l1766:
	push 1
l1767:
	popax
	cmp $a,0
	je l1768
	push 700
	push $2
	pop $b
	popax
	div $a,$b
	psax
	pop $7
	push $7
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $6
	localint $8
	push $2
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $8
	localint $9
	push 50
	pop $9
	localint $10
	push $9
	popax
	sub 0,$a
	push $8
	pop $b
	popax
	mul $a,$b
	pop $10
	jmp l1765
l1768:
l1765:
l1761:
l1757:
l1753:
l1749:
	localint $11
	push 0
	pop $11
l1769:
	push $11
	push $2
	pop $b
	popax
	cmp $a,$b
	jl l1770
	push 0
	jmp l1771
l1770:
	push 1
l1771:
	popax
	cmp $a,0
	je l1772
	jmp l1774
l1773:
	add $11,1
	pop $11
	jmp l1769
l1774:
	call cnpt,getf
	pop $4
	push $4
	push "null"
	pop $b
	popax
	cmp $a,$b
	je l1776
	push 0
	jmp l1777
l1776:
	push 1
l1777:
	popax
	cmp $a,0
	je l1778
	ret
	jmp l1775
l1778:
l1775:
	push $4
	popax
	spush $a
	push $6
	push $5
	spop $a
	call [$a],setpos
	push $4
	popax
	spush $a
	push $1
	spop $a
	call [$a],play
	push $7
	popax
	add $6,$a
	pop $6
	push $3
	push 4
	pop $b
	popax
	cmp $a,$b
	je l1780
	push 0
	jmp l1781
l1780:
	push 1
l1781:
	popax
	cmp $a,0
	je l1782
	push $4
	popax
	spush $a
	push 0
	push $10
	spop $a
	call [$a],move
	push $8
	push $11
	pop $b
	popax
	cmp $a,$b
	ja l1784
	push 0
	jmp l1785
l1784:
	push 1
l1785:
	popax
	cmp $a,0
	je l1786
	push $9
	popax
	add $10,$a
	pop $10
	jmp l1783
l1786:
	push $9
	popax
	sub $10,$a
	pop $10
l1783:
	jmp l1779
l1782:
l1779:
	jmp l1773
l1772:
	end method
	method mfintimnew
	push idbwsk
	call dbel,getrowsno
	pop $b
	popax
	cmp $a,$b
	jl l1788
	push 0
	jmp l1789
l1788:
	push 1
l1789:
	popax
	cmp $a,0
	je l1790
	localint $1
	push idbwsk
	call dbel,getcolsno
	pop $1
	localint $2
	push 0
	pop $2
	localint $3
	localint $4
	localint $5
l1791:
	push $2
	push $1
	pop $b
	popax
	cmp $a,$b
	jl l1792
	push 0
	jmp l1793
l1792:
	push 1
l1793:
	popax
	cmp $a,0
	je l1794
	push idbwsk
	push $2
	call dbel,get
	pop $3
	add $2,1
	pop $2
	push $3
	push 0
	pop $b
	popax
	cmp $a,$b
	ja l1796
	push 0
	jmp l1797
l1796:
	push 1
l1797:
	popax
	cmp $a,0
	je l1798
	push $3
	push 8
	pop $b
	popax
	cmp $a,$b
	jl l1800
	push 0
	jmp l1801
l1800:
	push 1
l1801:
	popax
	cmp $a,0
	je l1802
	push $2
	push $3
	push 1
	pop $b
	popax
	sub $a,$b
	push "cnel"
	push 20
	cthis mnewel
	jmp l1799
l1802:
	push $3
	push 10
	pop $b
	popax
	cmp $a,$b
	jle l1804
	push 0
	jmp l1805
l1804:
	push 1
l1805:
	popax
	cmp $a,0
	je l1806
	push $3
	push 8
	pop $b
	popax
	cmp $a,$b
	je l1808
	push 0
	jmp l1809
l1808:
	push 1
l1809:
	popax
	cmp $a,0
	je l1810
	push $2
	push 0
	push "cnkr"
	push 25
	cthis mnewel
	jmp l1807
l1810:
	push $3
	push 9
	pop $b
	popax
	cmp $a,$b
	je l1812
	push 0
	jmp l1813
l1812:
	push 1
l1813:
	popax
	cmp $a,0
	je l1814
	push $2
	push 2
	push "cnkr"
	push 25
	cthis mnewel
	jmp l1811
l1814:
	push $2
	push 0
	push "cnpr"
	push 25
	cthis mnewel
l1811:
l1807:
	jmp l1803
l1806:
	push $3
	push 12
	pop $b
	popax
	cmp $a,$b
	jle l1816
	push 0
	jmp l1817
l1816:
	push 1
l1817:
	popax
	cmp $a,0
	je l1818
	push idbwsk
	push $2
	call dbel,get
	pop $4
	add $2,1
	pop $2
	push idbwsk
	push $2
	call dbel,get
	pop $5
	add $2,1
	pop $2
	push $3
	push 11
	pop $b
	popax
	sub $a,$b
	push $4
	push $5
	cthis mptakatak
	jmp l1815
l1818:
l1815:
l1803:
l1799:
	jmp l1795
l1798:
l1795:
	jmp l1791
l1794:
	add idbwsk,1
	pop idbwsk
	cthis play
	jmp l1787
l1790:
	push 0
	pop igmstate
	push "gamelot1outro"
	call gameapi,play
l1787:
	end method
	method mfintimzamek
	call imgzamek,getpy
	push 600
	pop $b
	popax
	cmp $a,$b
	jl l1820
	push 0
	jmp l1821
l1820:
	push 1
l1821:
	popax
	cmp $a,0
	je l1822
	cthis play
	jmp l1819
l1822:
	push "imgzamek"
	call grall,remove
	call imgzamek,hide
l1819:
	end method
	method mfintimmv
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1824
	push 0
	jmp l1825
l1824:
	push 1
l1825:
	popax
	cmp $a,0
	je l1826
	push istep
	cthis mbgmov
	jmp l1823
l1826:
l1823:
	push 1
	popax
	sub 0,$a
	cthis play
	end method
	method mstart
	push 1
	pop igmstate
	call timnew,play
	push "sndpaf3"
	cthis cbplay
	end method
	method keydown
	localint $1
	push "space"
	call keyboard,iskey
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1828
	push 0
	jmp l1829
l1828:
	push 1
l1829:
	popax
	cmp $a,0
	je l1830
	call sfxfir1,play
	call anlot,getcx
	call anlot,getcy
	push 40
	pop $b
	popax
	sub $a,$b
	push 1
	push 3
	call $1,rand
	pop $b
	popax
	sub $a,$b
	push 22
	popax
	sub 0,$a
	push 0
	cthis mjapfire
	jmp l1827
l1830:
l1827:
	call clnextgm,checkkey
	end method
	method mouselclick
	push igmstate
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1832
	push 0
	jmp l1833
l1832:
	push 1
l1833:
	push igmstate
	push 5
	pop $b
	popax
	cmp $a,$b
	je l1834
	push 0
	jmp l1835
l1834:
	push 1
l1835:
	popax
	pop $b
	or $a,$b
	popax
	cmp $a,0
	je l1836
	push igmdebug
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1838
	push 0
	jmp l1839
l1838:
	push 1
l1839:
	popax
	cmp $a,0
	je l1840
	push 1
	cthis cactsndstop
	jmp l1837
l1840:
l1837:
	jmp l1831
l1836:
l1831:
	end method
	end game

	game gamelot1outro
	parent classadvpiast
	method init
	clparent classadvpiast,init
	push "scripts/lot1/outro/"
	cthis setgraphpath
	cthis cstdbkg
	push "anlot"
	push "samolot.pyz"
	push 10
	cthis newanima
	push 2
	call anlot,setdelay
	push "anlot"
	push "ansmig"
	cthis copyanima
	push 20
	call ansmig,setz
	push "anlot"
	cthis looponfinish
	push "ansmig"
	cthis looponfinish
	push "onendframe"
	push "mframe"
	call anlot,addmethod
	new int,icykle
	push 50
	pop icykle
	new int,istep
	push 20
	pop istep
	push 1
	pop igmstate
	new vector,vecbum
	push "begin"
	push 10
	popax
	sub 0,$a
	push 5
	popax
	sub 0,$a
	push 5
	push 10
	push 9
	popax
	sub 0,$a
	push 4
	popax
	sub 0,$a
	push 4
	push 9
	push 7
	popax
	sub 0,$a
	push 3
	popax
	sub 0,$a
	push 3
	push 7
	push 5
	popax
	sub 0,$a
	push 2
	popax
	sub 0,$a
	push 2
	push 5
	push 2
	popax
	sub 0,$a
	push 1
	popax
	sub 0,$a
	push 1
	push 2
	push 1
	popax
	sub 0,$a
	push 0
	push 0
	push 1
	push 0
	push 0
	push 0
	push 0
	push 0
	push 0
	push 0
	push 0
	push 0
	push 0
	push 0
	push 0
	push 0
	push 0
	push 0
	push 0
	push 0
	push 0
	push 0
	push 0
	push 0
	push 0
	call vecbum,beginadd
	push icykle
	push istep
	pop $b
	popax
	mul $a,$b
	push 0
	cthis mmov
	push "sndp"
	push 18
	push "lot1piast"
	push 18
	push 19
	cthis newsnds
	push 0
	call anlot,play
	push 1
	call ansmig,play
	push "dbwav"
	push "wavs.db"
	cthis cloadwavs
	push "onfinish"
	push "mfinito"
	call sndp19,addmethod
	end method
	method msetp
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call anlot,setpos
	push $1
	push $2
	call ansmig,setpos
	end method
	method mmov
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call anlot,move
	push $1
	push $2
	call ansmig,move
	end method
	method mframe
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1842
	push 0
	jmp l1843
l1842:
	push 1
l1843:
	popax
	cmp $a,0
	je l1844
	push istep
	popax
	sub 0,$a
	push 0
	cthis mmov
	sub icykle,1
	pop icykle
	push icykle
	push 20
	pop $b
	popax
	cmp $a,$b
	je l1846
	push 0
	jmp l1847
l1846:
	push 1
l1847:
	popax
	cmp $a,0
	je l1848
	push "sndp18"
	cthis cbplay
	jmp l1845
l1848:
l1845:
	push icykle
	push 0
	pop $b
	popax
	cmp $a,$b
	jle l1850
	push 0
	jmp l1851
l1850:
	push 1
l1851:
	popax
	cmp $a,0
	je l1852
	push 0
	pop icykle
	push 2
	pop igmstate
	call sfxbum,play
	jmp l1849
l1852:
l1849:
	jmp l1841
l1844:
	push igmstate
	push 2
	pop $b
	popax
	cmp $a,$b
	je l1854
	push 0
	jmp l1855
l1854:
	push 1
l1855:
	popax
	cmp $a,0
	je l1856
	push 2
	push icykle
	call vecbum,get
	pop $b
	popax
	mul $a,$b
	push 0
	cthis mmov
	add icykle,1
	pop icykle
	push icykle
	call vecbum,size
	pop $b
	popax
	cmp $a,$b
	jae l1858
	push 0
	jmp l1859
l1858:
	push 1
l1859:
	popax
	cmp $a,0
	je l1860
	push 3
	pop igmstate
	push 0
	pop icykle
	call sfxfiu,play
	jmp l1857
l1860:
l1857:
	jmp l1853
l1856:
	push igmstate
	push 3
	pop $b
	popax
	cmp $a,$b
	je l1862
	push 0
	jmp l1863
l1862:
	push 1
l1863:
	popax
	cmp $a,0
	je l1864
	push 0
	push 100
	cthis mmov
	cthis getpy
	push 600
	pop $b
	popax
	cmp $a,$b
	ja l1866
	push 0
	jmp l1867
l1866:
	push 1
l1867:
	popax
	cmp $a,0
	je l1868
	push 0
	cthis stop
	cthis hide
	push 0
	call sfxfiu,stop
	push "sfxout"
	cthis cbplay
	call clmusic,stopbgr
	jmp l1865
l1868:
l1865:
	jmp l1861
l1864:
l1861:
l1853:
l1841:
	end method
	method mfinito
	push "gameobozintro"
	call gameapi,play
	end method
	end game

	game gameobozintro
	parent classadvpiast
	method init
	clparent classadvpiast,init
	push "scripts/part3/oboz/intro/"
	cthis setgraphpath
	cthis cstdbkg
	push "elems.pyz"
	cthis cloadbgelem
	new string,sanstrzala
	push "strzala"
	cthis cgetelembyaction
	pop sanstrzala
	new string,sanarcher
	push "archer"
	cthis cgetelembyaction
	pop sanarcher
	push sanstrzala
	popax
	spush $a
	push sanarcher
	popax
	spush $a
	spop $a
	call [$a],getz
	push 1
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setz
	push sanstrzala
	popax
	spush $a
	push "onfinish"
	push "mstrzalafin"
	spop $a
	call [$a],addmethod
	localint $1
	push "anps"
	push "piast.pyz"
	push 600
	cthis loadanactions
	pop $1
	push 599
	call anps2,setz
	new int,icykl
	push 30
	pop icykl
	new int,ikrokx
	push 3
	pop ikrokx
	new int,ikroky
	push 5
	pop ikroky
	push 0
	pop igmstate
	push "onfinish"
	push "mpiastfin"
	call anps0,addmethod
	push ikrokx
	popax
	sub 0,$a
	push icykl
	pop $b
	popax
	mul $a,$b
	push ikroky
	push icykl
	pop $b
	popax
	mul $a,$b
	call anps0,move
	push ikrokx
	popax
	sub 0,$a
	push icykl
	pop $b
	popax
	mul $a,$b
	push ikroky
	push icykl
	pop $b
	popax
	mul $a,$b
	call anps1,move
	push "dbwavs"
	push "wavs.db"
	cthis cloadwavs
	push "sndnar1"
	cthis cbplay
	end method
	method mstartpiast
	push 1
	popax
	sub 0,$a
	call anps0,play
	end method
	method mpiastfin
	push igmstate
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1870
	push 0
	jmp l1871
l1870:
	push 1
l1871:
	popax
	cmp $a,0
	je l1872
	push ikrokx
	push ikroky
	popax
	sub 0,$a
	call anps0,move
	push ikrokx
	push ikroky
	popax
	sub 0,$a
	call anps1,move
	sub icykl,1
	pop icykl
	push icykl
	push 0
	pop $b
	popax
	cmp $a,$b
	jle l1874
	push 0
	jmp l1875
l1874:
	push 1
l1875:
	popax
	cmp $a,0
	je l1876
	push 1
	pop igmstate
	push 20
	pop icykl
	push 1
	pop ikrokx
	push 2
	pop ikroky
	jmp l1873
l1876:
l1873:
	push 1
	popax
	sub 0,$a
	cthis play
	jmp l1869
l1872:
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1878
	push 0
	jmp l1879
l1878:
	push 1
l1879:
	popax
	cmp $a,0
	je l1880
	push ikrokx
	push ikroky
	call anps1,move
	push ikrokx
	push ikroky
	call anps2,move
	sub icykl,1
	pop icykl
	push icykl
	push 0
	pop $b
	popax
	cmp $a,$b
	ja l1882
	push 0
	jmp l1883
l1882:
	push 1
l1883:
	popax
	cmp $a,0
	je l1884
	push 1
	popax
	sub 0,$a
	cthis play
	jmp l1881
l1884:
	call sndp1,play
l1881:
	jmp l1877
l1880:
l1877:
l1869:
	end method
	method mfinp1
	push "sndmysz1"
	cthis cbplay
	end method
	method mfinp2
	push "gamepart3oboz"
	call gameapi,play
	end method
	method mfinmysz2
	push sanarcher
	popax
	spush $a
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],play
	push sanstrzala
	popax
	spush $a
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],play
	call sfxluk1,play
	end method
	method mstrzalafin
	push 40
	push 1
	popax
	sub 0,$a
	cthis move
	cthis getpx
	push 800
	pop $b
	popax
	cmp $a,$b
	ja l1886
	push 0
	jmp l1887
l1886:
	push 1
l1887:
	popax
	cmp $a,0
	je l1888
	cthis hide
	push "sndmysz3"
	cthis cbplay
	call sfxluk2,play
	jmp l1885
l1888:
	push 1
	popax
	sub 0,$a
	cthis play
l1885:
	end method
	end game

	game gamepart3oboz
	parent classadvpiast
	method init
	clparent classadvpiast,init
	cthis cloadpiast
	push "scripts/part3/oboz/"
	push "bkg.png"
	push "elems.pyz"
	cthis cloadterrain
	push "maska.png"
	cthis cloadpathf
	push "onendframe"
	push "mpiastendframe"
	call anpiast,addmethod
	push "anpiast"
	cthis looponfinish
	push "anwino"
	push "specjalne.pyz"
	cthis cnewanimagr
	localint $1
	push "drzewo"
	cthis cgetelembyaction
	popax
	spush $a
	spop $a
	call [$a],getz
	push 1
	pop $b
	popax
	add $a,$b
	pop $1
	push "anwino"
	push "anmiod"
	push "miod"
	push $1
	cthis copyanimaactz
	call anwino,hide
	push "anwino"
	push "anrog"
	push "rog"
	cthis copyanimaactgr
	push "anwino"
	push "anchlop"
	push "chlop"
	cthis copyanimaactgr
	push "anwino"
	push "anklucz"
	push "klucz"
	cthis copyanimaactgr
	new classmask,clm
	push "anmiod"
	push "miod"
	push "imglobcurs"
	push "mclickmask"
	call clm,addadvmask
	push "slup"
	push "lup"
	push "lup"
	cthis mbuildmask
	push "sbeczka"
	push "beczka"
	push "beczka"
	cthis mbuildmask
	push "srog"
	push "rog"
	push "rog"
	cthis mbuildmask
	push srog
	popax
	spush $a
	push $1
	push 1
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setz
	push "sspioch"
	push "spiochPL"
	push "spioch"
	cthis mbuildmask
	push sspioch
	popax
	spush $a
	push $1
	spop $a
	call [$a],setz
	push "schlop"
	push "chlopPL"
	push "chlop"
	cthis mbuildmask
	push "seryk"
	push "eryk"
	push "eryk"
	cthis mbuildmask
	push "solaf"
	push "olafPL"
	push "olaf"
	cthis mbuildmask
	push "skufer"
	push "kufer"
	push "kufer"
	cthis mbuildmask
	push skufer
	popax
	spush $a
	push "onfinish"
	push "mfinkufer"
	spop $a
	call [$a],addmethod
	push "dbwavs"
	push "wavs.db"
	cthis cloadwavs
	push "anpiast"
	push 750
	push 470
	cthis cputgr2
	push 50
	popax
	sub 0,$a
	push 50
	popax
	sub 0,$a
	call ptpiast,gotorel
	new classquest,clq
	new string,smowido
	end method
	method mfinp1
	push smowido
	push "olaf"
	pop $b
	popax
	cmp $a,$b
	je l1890
	push 0
	jmp l1891
l1890:
	push 1
l1891:
	popax
	cmp $a,0
	je l1892
	push "sndolaf1"
	cthis mherosay
	jmp l1889
l1892:
	push "snderyk1"
	cthis mherosay
l1889:
	end method
	method mfinp2
	cthis mnorma
	end method
	method mfinp3
	cthis mcheckobaj
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1894
	push 0
	jmp l1895
l1894:
	push 1
l1895:
	popax
	cmp $a,0
	je l1896
	cthis mnorma
	jmp l1893
l1896:
l1893:
	end method
	method mfinp4
	cthis mnorma
	end method
	method mfinp5
	push "sndolaf2"
	cthis mherosay
	end method
	method mfinp6
	push "sndolaf3"
	cthis mherosay
	end method
	method mfinp7
	cthis mnorma
	end method
	method mfinp8
	push "snderyk2"
	cthis mherosay
	end method
	method mfinp9
	cthis mcheckall
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1898
	push 0
	jmp l1899
l1898:
	push 1
l1899:
	popax
	cmp $a,0
	je l1900
	cthis mnorma
	jmp l1897
l1900:
l1897:
	end method
	method mfinp10
	end method
	method mfinp11
	cthis mnorma
	end method
	method mfinp12
	push "sndchlop3"
	cthis mherosay
	end method
	method mfinp13
	cthis mnorma
	end method
	method mfinp14
	push "uwolnil"
	call clq,done
	cthis mcheckall
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1902
	push 0
	jmp l1903
l1902:
	push 1
l1903:
	popax
	cmp $a,0
	je l1904
	cthis mnorma
	jmp l1901
l1904:
l1901:
	end method
	method mfinp15
	push "sndalarm"
	cthis mherosay
	end method
	method mfinp16
	cthis mnorma
	end method
	method mfinp17
	cthis mnorma
	end method
	method mfinp18
	push "anwino"
	push "mwinofin"
	cthis canplayfin
	push 600
	call anwino,setz
	call anrog,show
	call sfxwino,play
	end method
	method mwinofin
	cthis hide
	call anrog,hide
	cthis mnorma
	push 0
	call sfxwino,stop
	end method
	method mfineryk1
	cthis mfinsnderyk1
	end method
	method mfineryk2
	push "dalwino"
	call clq,isdone
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1906
	push 0
	jmp l1907
l1906:
	push 1
l1907:
	popax
	cmp $a,0
	je l1908
	push "dalwino"
	call clq,done
	push "sndp9"
	cthis mpiastsay
	push "talkdd"
	call anpiast,play
	jmp l1905
l1908:
	cthis mnorma
l1905:
	end method
	method mfinolaf1
	cthis mfinsndolaf1
	end method
	method mfinolaf2
	push "dalwino"
	call clq,isdone
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1910
	push 0
	jmp l1911
l1910:
	push 1
l1911:
	popax
	cmp $a,0
	je l1912
	push "sndp6"
	cthis mpiastsay
	jmp l1909
l1912:
	cthis mcheckall
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1914
	push 0
	jmp l1915
l1914:
	push 1
l1915:
	popax
	cmp $a,0
	je l1916
	cthis mnorma
	jmp l1913
l1916:
l1913:
l1909:
	end method
	method mfinolaf3
	push "sndp7"
	cthis mpiastsay
	end method
	method mfinchlop1
	push "maklucz"
	call clq,isdone
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1918
	push 0
	jmp l1919
l1918:
	push 1
l1919:
	popax
	cmp $a,0
	je l1920
	push "sndp11"
	cthis mpiastsay
	jmp l1917
l1920:
	call sfxklucz,play
	push "sndp12"
	cthis mherosay
l1917:
	end method
	method mfinchlop2
	cthis mnorma
	end method
	method mfinchlop3
	push schlop
	popax
	spush $a
	push 0
	spop $a
	call [$a],stop
	push "chlop"
	call clm,disable
	push "anchlop"
	push "mfinchlop"
	cthis cplayelemfin
	push "cienchlopa"
	cthis cgetelembyaction
	popax
	spush $a
	spop $a
	call [$a],hide
	call sfxzwiewa,play
	end method
	method mfinalarm
	push 3
	pop igmstate
	push 0
	push 0
	call ptpiast,goto
	end method
	method mfinsnderyk1
	push "gadaleryk"
	call clq,isdone
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1922
	push 0
	jmp l1923
l1922:
	push 1
l1923:
	popax
	cmp $a,0
	je l1924
	push "gadaleryk"
	call clq,done
	push "marog"
	call clq,isdone
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1926
	push 0
	jmp l1927
l1926:
	push 1
l1927:
	popax
	cmp $a,0
	je l1928
	push "sndp3"
	cthis mpiastsay
	push "talkdd"
	call anpiast,play
	jmp l1925
l1928:
	cthis mfinp3
l1925:
	jmp l1921
l1924:
	cthis mnorma
l1921:
	end method
	method mcheckall
	push "dalwino"
	call clq,isdone
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1930
	push 0
	jmp l1931
l1930:
	push 1
l1931:
	push "dalmiod"
	call clq,isdone
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1932
	push 0
	jmp l1933
l1932:
	push 1
l1933:
	popax
	pop $b
	and $a,$b
	push "uwolnil"
	call clq,isdone
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1934
	push 0
	jmp l1935
l1934:
	push 1
l1935:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l1936
	push "sndp15"
	cthis mpiastsay
	push "talkdd"
	call anpiast,play
	push 1
	ret
	jmp l1929
l1936:
	push 0
	ret
l1929:
	end method
	method mcheckobaj
	push "gadalolaf"
	call clq,isdone
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1938
	push 0
	jmp l1939
l1938:
	push 1
l1939:
	push "gadaleryk"
	call clq,isdone
	push 1
	pop $b
	popax
	cmp $a,$b
	je l1940
	push 0
	jmp l1941
l1940:
	push 1
l1941:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l1942
	push "sndp2"
	cthis mpiastsay
	push "talkdd"
	call anpiast,play
	push 1
	ret
	jmp l1937
l1942:
	push 0
	ret
l1937:
	end method
	method mfinsndolaf1
	push "gadalolaf"
	call clq,isdone
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1944
	push 0
	jmp l1945
l1944:
	push 1
l1945:
	popax
	cmp $a,0
	je l1946
	push "gadalolaf"
	call clq,done
	cthis mcheckobaj
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1948
	push 0
	jmp l1949
l1948:
	push 1
l1949:
	popax
	cmp $a,0
	je l1950
	cthis mnorma
	jmp l1947
l1950:
l1947:
	jmp l1943
l1946:
	cthis mnorma
l1943:
	end method
	method mnorma
	push 1
	pop igmstate
	call ptpiast,anstand
	end method
	method mfinitogame
	push "gamegoldenaxe"
	call gameapi,play
	end method
	method mfinchlop
	cthis hide
	push "sndp14"
	cthis mpiastsay
	end method
	method mfinkufer
	push "anklucz"
	push "mfinklucz"
	cthis cplayelemfin
	end method
	method mfinklucz
	push "anklucz"
	push "klucz"
	push "imglobcurs"
	push "mclickmask"
	call clm,addadvmask
	push skufer
	cthis cputgr
	end method
	method mherosay
	localstring $1
	pop $1
	push 5
	pop igmstate
	call ptpiast,anstand
	push $1
	cthis cbplay
	end method
	method mpiastsay
	localstring $1
	pop $1
	push 5
	pop igmstate
	push $1
	cthis cbplay
	call ptpiast,ansay
	end method
	method mpiastendframe
	cthis getey
	cthis setz
	push igmstate
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1952
	push 0
	jmp l1953
l1952:
	push 1
l1953:
	popax
	cmp $a,0
	je l1954
	cthis mstartgame
	jmp l1951
l1954:
l1951:
	end method
	method mstartgame
	push 1
	pop igmstate
	call ptpiast,anstand
	end method
	method mfinptpiast
	call ptpiast,stand
	push igmstate
	push 3
	pop $b
	popax
	cmp $a,$b
	je l1956
	push 0
	jmp l1957
l1956:
	push 1
l1957:
	popax
	cmp $a,0
	je l1958
	cthis mfinitogame
	jmp l1955
l1958:
l1955:
	end method
	method mptreach
	localstring $1
	pop $1
	call ptpiast,stand
	push $1
	push "lup"
	pop $b
	popax
	cmp $a,$b
	je l1960
	push 0
	jmp l1961
l1960:
	push 1
l1961:
	popax
	cmp $a,0
	je l1962
	push "sndgadka"
	cthis crbgplay
	jmp l1959
l1962:
	push $1
	push "beczka"
	pop $b
	popax
	cmp $a,$b
	je l1964
	push 0
	jmp l1965
l1964:
	push 1
l1965:
	popax
	cmp $a,0
	je l1966
	push "marog"
	call clq,isdone
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1968
	push 0
	jmp l1969
l1968:
	push 1
l1969:
	popax
	cmp $a,0
	je l1970
	push "sndp17"
	cthis mpiastsay
	jmp l1967
l1970:
	push "mawino"
	call clq,isdone
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1972
	push 0
	jmp l1973
l1972:
	push 1
l1973:
	popax
	cmp $a,0
	je l1974
	push "sndp18"
	cthis mpiastsay
	push "mawino"
	call clq,done
	jmp l1971
l1974:
	push "sndp17"
	cthis mpiastsay
l1971:
l1967:
	jmp l1963
l1966:
	push $1
	push "rog"
	pop $b
	popax
	cmp $a,$b
	je l1976
	push 0
	jmp l1977
l1976:
	push 1
l1977:
	popax
	cmp $a,0
	je l1978
	push "marog"
	call clq,isdone
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1980
	push 0
	jmp l1981
l1980:
	push 1
l1981:
	popax
	cmp $a,0
	je l1982
	push srog
	popax
	spush $a
	spop $a
	call [$a],hide
	push "marog"
	call clq,done
	push "rog"
	call clm,disable
	call sfxrog,play
	push "sndp16"
	cthis mpiastsay
	jmp l1979
l1982:
l1979:
	jmp l1975
l1978:
	push $1
	push "spioch"
	pop $b
	popax
	cmp $a,$b
	je l1984
	push 0
	jmp l1985
l1984:
	push 1
l1985:
	popax
	cmp $a,0
	je l1986
	push "sndspioch"
	cthis crbgplay
	jmp l1983
l1986:
	push $1
	push "eryk"
	pop $b
	popax
	cmp $a,$b
	je l1988
	push 0
	jmp l1989
l1988:
	push 1
l1989:
	popax
	cmp $a,0
	je l1990
	push "gadaleryk"
	call clq,isdone
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1992
	push 0
	jmp l1993
l1992:
	push 1
l1993:
	popax
	cmp $a,0
	je l1994
	push "sndp1"
	cthis mpiastsay
	push "eryk"
	pop smowido
	jmp l1991
l1994:
	push "mawino"
	call clq,isdone
	push 0
	pop $b
	popax
	cmp $a,$b
	je l1996
	push 0
	jmp l1997
l1996:
	push 1
l1997:
	popax
	cmp $a,0
	je l1998
	push "snderyk1"
	cthis mherosay
	jmp l1995
l1998:
	push "dalwino"
	call clq,isdone
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2000
	push 0
	jmp l2001
l2000:
	push 1
l2001:
	popax
	cmp $a,0
	je l2002
	push "sndp8"
	cthis mherosay
	jmp l1999
l2002:
	push "snderyk2"
	cthis mherosay
l1999:
l1995:
l1991:
	jmp l1987
l1990:
	push $1
	push "olaf"
	pop $b
	popax
	cmp $a,$b
	je l2004
	push 0
	jmp l2005
l2004:
	push 1
l2005:
	popax
	cmp $a,0
	je l2006
	push "gadalolaf"
	call clq,isdone
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2008
	push 0
	jmp l2009
l2008:
	push 1
l2009:
	popax
	cmp $a,0
	je l2010
	push "sndp1"
	cthis mpiastsay
	push "olaf"
	pop smowido
	jmp l2007
l2010:
	push "mamiod"
	call clq,isdone
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2012
	push 0
	jmp l2013
l2012:
	push 1
l2013:
	popax
	cmp $a,0
	je l2014
	push "sndolaf1"
	cthis mherosay
	jmp l2011
l2014:
	push "dalmiod"
	call clq,isdone
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2016
	push 0
	jmp l2017
l2016:
	push 1
l2017:
	popax
	cmp $a,0
	je l2018
	push "dalmiod"
	call clq,done
	push "sndp5"
	cthis mpiastsay
	jmp l2015
l2018:
	push "sndolaf3"
	cthis mherosay
l2015:
l2011:
l2007:
	jmp l2003
l2006:
	push $1
	push "chlop"
	pop $b
	popax
	cmp $a,$b
	je l2020
	push 0
	jmp l2021
l2020:
	push 1
l2021:
	popax
	cmp $a,0
	je l2022
	push "gadalchlop"
	call clq,isdone
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2024
	push 0
	jmp l2025
l2024:
	push 1
l2025:
	popax
	cmp $a,0
	je l2026
	push "gadalchlop"
	call clq,done
	push "sndchlop1"
	cthis mherosay
	jmp l2023
l2026:
	push "maklucz"
	call clq,isdone
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2028
	push 0
	jmp l2029
l2028:
	push 1
l2029:
	popax
	cmp $a,0
	je l2030
	push "sndchlop2"
	cthis mherosay
	jmp l2027
l2030:
	call sfxklucz,play
	push "sndp12"
	cthis mherosay
l2027:
l2023:
	jmp l2019
l2022:
	push $1
	push "kufer"
	pop $b
	popax
	cmp $a,$b
	je l2032
	push 0
	jmp l2033
l2032:
	push 1
l2033:
	popax
	cmp $a,0
	je l2034
	push "otworzylkufer"
	call clq,isdone
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2036
	push 0
	jmp l2037
l2036:
	push 1
l2037:
	popax
	cmp $a,0
	je l2038
	push "otworzylkufer"
	call clq,done
	push skufer
	popax
	spush $a
	push 10
	spop $a
	call [$a],setz
	push skufer
	popax
	spush $a
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],play
	call sfxkufer,play
	jmp l2035
l2038:
l2035:
	jmp l2031
l2034:
	push $1
	push "klucz"
	pop $b
	popax
	cmp $a,$b
	je l2040
	push 0
	jmp l2041
l2040:
	push 1
l2041:
	popax
	cmp $a,0
	je l2042
	push "klucz"
	call clm,disable
	push "maklucz"
	call clq,done
	push "sndp13"
	cthis mpiastsay
	call sfxgetitem,play
	jmp l2039
l2042:
	push $1
	push "miod"
	pop $b
	popax
	cmp $a,$b
	je l2044
	push 0
	jmp l2045
l2044:
	push 1
l2045:
	popax
	cmp $a,0
	je l2046
	push "sndp4"
	cthis mpiastsay
	push "miod"
	call clm,disable
	push "mamiod"
	call clq,done
	call sfxgetitem,play
	jmp l2043
l2046:
l2043:
l2039:
l2031:
l2019:
l2003:
l1987:
l1983:
l1975:
l1963:
l1959:
	end method
	method mclickmask
	localstring $1
	pop $1
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	jne l2048
	push 0
	jmp l2049
l2048:
	push 1
l2049:
	popax
	cmp $a,0
	je l2050
	ret
	jmp l2047
l2050:
l2047:
	push $1
	push "lup"
	pop $b
	popax
	cmp $a,$b
	je l2052
	push 0
	jmp l2053
l2052:
	push 1
l2053:
	popax
	cmp $a,0
	je l2054
	push "ptpiast"
	push slup
	push $1
	push 0
	push 0
	cthis cwalkto2
	jmp l2051
l2054:
	push $1
	push "beczka"
	pop $b
	popax
	cmp $a,$b
	je l2056
	push 0
	jmp l2057
l2056:
	push 1
l2057:
	popax
	cmp $a,0
	je l2058
	push "ptpiast"
	push sbeczka
	push $1
	push 60
	push 30
	cthis cwalkto2
	jmp l2055
l2058:
	push $1
	push "rog"
	pop $b
	popax
	cmp $a,$b
	je l2060
	push 0
	jmp l2061
l2060:
	push 1
l2061:
	popax
	cmp $a,0
	je l2062
	push "ptpiast"
	push srog
	push $1
	push 0
	push 50
	cthis cwalkto2
	jmp l2059
l2062:
	push $1
	push "spioch"
	pop $b
	popax
	cmp $a,$b
	je l2064
	push 0
	jmp l2065
l2064:
	push 1
l2065:
	popax
	cmp $a,0
	je l2066
	push "ptpiast"
	push sspioch
	push $1
	push 0
	push 50
	cthis cwalkto2
	jmp l2063
l2066:
	push $1
	push "eryk"
	pop $b
	popax
	cmp $a,$b
	je l2068
	push 0
	jmp l2069
l2068:
	push 1
l2069:
	popax
	cmp $a,0
	je l2070
	push "ptpiast"
	push seryk
	push $1
	push 0
	push 50
	cthis cwalkto2
	jmp l2067
l2070:
	push $1
	push "olaf"
	pop $b
	popax
	cmp $a,$b
	je l2072
	push 0
	jmp l2073
l2072:
	push 1
l2073:
	popax
	cmp $a,0
	je l2074
	push "ptpiast"
	push solaf
	push $1
	push 0
	push 50
	cthis cwalkto2
	jmp l2071
l2074:
	push $1
	push "chlop"
	pop $b
	popax
	cmp $a,$b
	je l2076
	push 0
	jmp l2077
l2076:
	push 1
l2077:
	popax
	cmp $a,0
	je l2078
	push "ptpiast"
	push schlop
	push $1
	push 40
	popax
	sub 0,$a
	push 40
	cthis cwalkto2
	jmp l2075
l2078:
	push $1
	push "kufer"
	pop $b
	popax
	cmp $a,$b
	je l2080
	push 0
	jmp l2081
l2080:
	push 1
l2081:
	popax
	cmp $a,0
	je l2082
	push "ptpiast"
	push skufer
	push $1
	push 20
	push 50
	cthis cwalkto2
	jmp l2079
l2082:
	push $1
	push "klucz"
	pop $b
	popax
	cmp $a,$b
	je l2084
	push 0
	jmp l2085
l2084:
	push 1
l2085:
	popax
	cmp $a,0
	je l2086
	push "ptpiast"
	push "anklucz"
	push $1
	push 0
	push 0
	cthis cwalkto2
	jmp l2083
l2086:
	push $1
	push "miod"
	pop $b
	popax
	cmp $a,$b
	je l2088
	push 0
	jmp l2089
l2088:
	push 1
l2089:
	popax
	cmp $a,0
	je l2090
	push "ptpiast"
	push "anmiod"
	push $1
	push 0
	push 90
	cthis cwalkto2
	jmp l2087
l2090:
l2087:
l2083:
l2079:
l2075:
l2071:
l2067:
l2063:
l2059:
l2055:
l2051:
	end method
	method mouselclick
	cthis advclick
	end method
	end game

	game gamegoldenaxe
	parent classadvpiast
	method init
	clparent classadvpiast,init
	push "scripts/part3/goldenaxe/"
	cthis setgraphpath
	cthis cstdbkg
	push "elems.pyz"
	cthis cloadbgelem
	push 1
	pop igmstate
	new int,ipiasx
	push 10
	pop ipiasx
	new int,ipiasy
	push 8
	pop ipiasy
	new int,ibylkey
	push 0
	pop ibylkey
	new int,iuderza
	push 0
	pop iuderza
	new int,iscx1
	push 10
	pop iscx1
	new int,iscx2
	push 790
	pop iscx2
	new int,iscy1
	push 470
	pop iscy1
	new int,iscy2
	push 590
	pop iscy2
	new int,ipolscy
	push iscy1
	push iscy2
	pop $b
	popax
	add $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop ipolscy
	new int,iiloscwojow
	new classwalker,cltr
	new classlives,clliv
	push 40
	push 5
	push 20
	push 20
	push 7
	push 245
	push 43
	push 45
	push 255
	push 245
	push 212
	push 45
	push 255
	push 2
	push "left"
	call clliv,set
	push "anpiast"
	push "piast.pyz"
	push 0
	cthis newanima
	push "onendframe"
	push "mpiastframe"
	call anpiast,addmethod
	push "onfinish"
	push "mpiastfin"
	call anpiast,addmethod
	new int,ibumpy
	push "anpiast"
	push 0
	push "buml"
	push 5
	cthis cfinddyactf
	pop ibumpy
	push 300
	push 400
	call anpiast,setpos
	push "standp"
	call anpiast,play
	new vector,vmgla
	new int,imgla
	push 0
	pop imgla
	push "begin"
	push 1
	push 0
	push 0
	push 0
	push 1
	popax
	sub 0,$a
	push 1
	popax
	sub 0,$a
	push 1
	popax
	sub 0,$a
	push 1
	popax
	sub 0,$a
	push 0
	push 0
	push 0
	push 0
	push 0
	push 0
	push 0
	push 0
	push 1
	push 1
	push 1
	call vmgla,beginadd
	push "anmgla"
	push "mgla.pyz"
	push 1
	cthis newstdanima
	push 15
	call anmgla,setdelay
	push "onendframe"
	push "mmgla"
	call anmgla,addmethod
	new gmobjvec,grall
	push "imgbkg"
	call grall,add
	push "anmgla"
	call grall,add
	localint $1
	call anbg0,nofactions
	pop $1
	localint $2
	push 0
	pop $2
l2091:
	push $2
	push $1
	pop $b
	popax
	cmp $a,$b
	jl l2092
	push 0
	jmp l2093
l2092:
	push 1
l2093:
	popax
	cmp $a,0
	je l2094
	jmp l2096
l2095:
	add $2,1
	pop $2
	jmp l2091
l2096:
	push "anbg"
	push $2
	pop $b
	popax
	add $a,$b
	call grall,add
	jmp l2095
l2094:
	push igmeasy
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2098
	push 0
	jmp l2099
l2098:
	push 1
l2099:
	popax
	cmp $a,0
	je l2100
	push "dbl"
	push "easygold.db"
	cthis newdb
	jmp l2097
l2100:
	push "dbl"
	push "gold.db"
	cthis newdb
l2097:
	new int,idbl
	push 0
	pop idbl
	push "dbwoj"
	push "woje.db"
	cthis newdb
	new int,ilebgsteps
	push 15
	pop $1
	push "cnbum"
	push "anbum"
	push "bumy.pyz"
	push 800
	push $1
	cthis newancounterh
	push 0
	pop $2
l2101:
	push $2
	push $1
	pop $b
	popax
	cmp $a,$b
	jl l2102
	push 0
	jmp l2103
l2102:
	push 1
l2103:
	popax
	cmp $a,0
	je l2104
	jmp l2106
l2105:
	add $2,1
	pop $2
	jmp l2101
l2106:
	push "anbum"
	push $2
	pop $b
	popax
	add $a,$b
	cthis hideonfinish
	jmp l2105
l2104:
	push "cnap"
	push "anap"
	push "apteczka.pyz"
	push 20
	push 30
	cthis newancounterh
	localstring $3
	localint $4
	push 10
	pop $4
	new vector,vecy
	push 0
	call vecy,add
	localint $5
	push 1
	pop $5
l2107:
	push $5
	push 7
	pop $b
	popax
	cmp $a,$b
	jle l2108
	push 0
	jmp l2109
l2108:
	push 1
l2109:
	popax
	cmp $a,0
	je l2110
	jmp l2112
l2111:
	add $5,1
	pop $5
	jmp l2107
l2112:
	push "cnw"
	push $5
	pop $b
	popax
	add $a,$b
	push "anwo"
	push $5
	pop $b
	popax
	add $a,$b
	push "ludek"
	push $5
	pop $b
	popax
	add $a,$b
	push ".pyz"
	pop $b
	popax
	add $a,$b
	push 20
	push $4
	cthis newancounter
	push 0
	pop $2
l2113:
	push $2
	push $4
	pop $b
	popax
	cmp $a,$b
	jl l2114
	push 0
	jmp l2115
l2114:
	push 1
l2115:
	popax
	cmp $a,0
	je l2116
	jmp l2118
l2117:
	add $2,1
	pop $2
	jmp l2113
l2118:
	push "anwo"
	push $5
	pop $b
	popax
	add $a,$b
	push $2
	pop $b
	popax
	add $a,$b
	pop $3
	push $3
	popax
	spush $a
	spop $a
	call [$a],hide
	push $3
	popax
	spush $a
	push "onfinish"
	push "mwojfin"
	spop $a
	call [$a],addmethod
	push $3
	popax
	spush $a
	push "onendframe"
	push "mwojframe"
	spop $a
	call [$a],addmethod
	push $3
	popax
	spush $a
	push 2
	spop $a
	call [$a],setdelay
	push $3
	popax
	spush $a
	push $5
	spop $a
	call [$a],mbuildwoj
	push $3
	call grall,add
	jmp l2117
l2116:
	push $3
	push 0
	push "buml"
	push $3
	push "buml"
	push "pac"
	cthis cfindframe
	cthis cfinddyactf
	call vecy,add
	jmp l2111
l2110:
	push "dbwav"
	push "snds.db"
	cthis cloadwavs
	push 0
	pop igmstate
	call sndstart,play
	end method
	method mpsetf
	cthis actionname
	push " "
	pop $b
	popax
	add $a,$b
	cthis framenr
	pop $b
	popax
	add $a,$b
	call engine,print
	end method
	method mgoldstart
	push 1
	pop igmstate
	cthis mloadscript
	end method
	method mnar1
	push "gamerzeka"
	call gameapi,play
	end method
	method mnar2
	cthis crestart
	end method
	method mcheckend
	sub iiloscwojow,1
	pop iiloscwojow
	push iiloscwojow
	push 0
	pop $b
	popax
	cmp $a,$b
	jle l2120
	push 0
	jmp l2121
l2120:
	push 1
l2121:
	popax
	cmp $a,0
	je l2122
	cthis mloadscript
	jmp l2119
l2122:
l2119:
	end method
	method mloadscript
	localint $1
	localint $2
	localint $3
	localstring $4
	localstring $5
	localstring $6
	localstring $7
	push 0
	pop $2
	push idbl
	push $2
	call dbl,get
	pop $4
	add $2,1
	pop $2
	push 0
	pop iiloscwojow
	push $4
	push "mov"
	pop $b
	popax
	cmp $a,$b
	je l2124
	push 0
	jmp l2125
l2124:
	push 1
l2125:
	popax
	cmp $a,0
	je l2126
	push 20
	pop ilebgsteps
	push 2
	pop igmstate
	push "gop"
	call anpiast,play
	jmp l2123
l2126:
	push $4
	push "atk"
	pop $b
	popax
	cmp $a,$b
	je l2128
	push 0
	jmp l2129
l2128:
	push 1
l2129:
	popax
	cmp $a,0
	je l2130
	push idbl
	call dbl,getcolsno
	pop $1
l2131:
	push $2
	push $1
	pop $b
	popax
	cmp $a,$b
	jl l2132
	push 0
	jmp l2133
l2132:
	push 1
l2133:
	popax
	cmp $a,0
	je l2134
	push idbl
	push $2
	call dbl,get
	pop $5
	add $2,1
	pop $2
	push 1
	push 1
	call $5,getb
	pop $6
	push 0
	push 1
	call $5,getb
	pop $5
	push "cnw"
	push $5
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	spop $a
	call [$a],getf
	pop $7
	push 120
	call $3,rand
	push iscy1
	pop $b
	popax
	add $a,$b
	push $7
	popax
	spush $a
	spop $a
	call [$a],geth
	pop $b
	popax
	sub $a,$b
	pop $3
	push $6
	push "l"
	pop $b
	popax
	cmp $a,$b
	je l2136
	push 0
	jmp l2137
l2136:
	push 1
l2137:
	popax
	cmp $a,0
	je l2138
	push $7
	popax
	spush $a
	push "standp"
	spop $a
	call [$a],play
	push $7
	popax
	spush $a
	push $7
	popax
	spush $a
	spop $a
	call [$a],getw
	popax
	sub 0,$a
	push $3
	spop $a
	call [$a],setpos
	push $7
	popax
	spush $a
	spop $a
	call [$a],mwait
	jmp l2135
l2138:
	push $7
	popax
	spush $a
	push 800
	push $3
	spop $a
	call [$a],setpos
	push $7
	popax
	spush $a
	push "standl"
	spop $a
	call [$a],play
	push $7
	popax
	spush $a
	spop $a
	call [$a],mwait
l2135:
	add iiloscwojow,1
	pop iiloscwojow
	jmp l2131
l2134:
	jmp l2127
l2130:
	push $4
	push "finish"
	pop $b
	popax
	cmp $a,$b
	je l2140
	push 0
	jmp l2141
l2140:
	push 1
l2141:
	popax
	cmp $a,0
	je l2142
	cthis mfinish
	jmp l2139
l2142:
l2139:
l2127:
l2123:
	add idbl,1
	pop idbl
	end method
	method mfinish
	push "sndnar1"
	cthis cbplay
	end method
	method mrplay
	localstring $1
	pop $1
	push $1
	cthis isplaying
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2144
	push 0
	jmp l2145
l2144:
	push 1
l2145:
	popax
	cmp $a,0
	je l2146
	push $1
	cthis play
	jmp l2143
l2146:
l2143:
	end method
	method msetf
	localstring $1
	pop $1
	push $1
	cthis framenr
	cthis setframe
	end method
	method mmovyp
	localint $1
	pop $1
	localint $2
	cthis getey
	push $1
	pop $b
	popax
	add $a,$b
	pop $2
	push $1
	push 0
	pop $b
	popax
	cmp $a,$b
	jl l2148
	push 0
	jmp l2149
l2148:
	push 1
l2149:
	push $2
	push iscy1
	pop $b
	popax
	cmp $a,$b
	jae l2150
	push 0
	jmp l2151
l2150:
	push 1
l2151:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l2152
	push 0
	push $1
	cthis move
	jmp l2147
l2152:
	push $1
	push 0
	pop $b
	popax
	cmp $a,$b
	ja l2154
	push 0
	jmp l2155
l2154:
	push 1
l2155:
	push $2
	push iscy2
	pop $b
	popax
	cmp $a,$b
	jle l2156
	push 0
	jmp l2157
l2156:
	push 1
l2157:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l2158
	push 0
	push $1
	cthis move
	jmp l2153
l2158:
l2153:
l2147:
	end method
	method mmovxp
	localint $1
	pop $1
	push $1
	push 0
	pop $b
	popax
	cmp $a,$b
	jl l2160
	push 0
	jmp l2161
l2160:
	push 1
l2161:
	cthis getpx
	push $1
	pop $b
	popax
	add $a,$b
	push iscx1
	pop $b
	popax
	cmp $a,$b
	jae l2162
	push 0
	jmp l2163
l2162:
	push 1
l2163:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l2164
	push $1
	push 0
	cthis move
	jmp l2159
l2164:
	push $1
	push 0
	pop $b
	popax
	cmp $a,$b
	ja l2166
	push 0
	jmp l2167
l2166:
	push 1
l2167:
	cthis getex
	push $1
	pop $b
	popax
	add $a,$b
	push iscx2
	pop $b
	popax
	cmp $a,$b
	jle l2168
	push 0
	jmp l2169
l2168:
	push 1
l2169:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l2170
	push $1
	push 0
	cthis move
	jmp l2165
l2170:
l2165:
l2159:
	end method
	method mcheckbum
	push "rctrl"
	call keyboard,iskeydown
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2172
	push 0
	jmp l2173
l2172:
	push 1
l2173:
	popax
	cmp $a,0
	je l2174
	push "bum"
	cthis mgetdir
	pop $b
	popax
	add $a,$b
	cthis mrplay
	push 1
	pop ibylkey
	push 1
	pop iuderza
	cthis getey
	cthis setz
	push 1
	ret
	jmp l2171
l2174:
l2171:
	push 0
	ret
	end method
	method moutwoj
	localstring $1
	pop $1
	push $1
	popax
	spush $a
	spop $a
	call [$a],mbumwoj
	end method
	method mpiastframe
	localstring $1
	cthis getcx
	cthis getey
	push 1
	push 1
	push 450
	push 600
	call engine,getimg
	pop $1
	push 2
	push 2
	call $1,getb
	push "ap"
	pop $b
	popax
	cmp $a,$b
	je l2176
	push 0
	jmp l2177
l2176:
	push 1
l2177:
	popax
	cmp $a,0
	je l2178
	push 1
	call clliv,heal
	push $1
	popax
	spush $a
	spop $a
	call [$a],hide
	push $1
	call grall,remove
	call sfxprzelyk,playif
	jmp l2175
l2178:
l2175:
	push igmstate
	push 2
	pop $b
	popax
	cmp $a,$b
	je l2180
	push 0
	jmp l2181
l2180:
	push 1
l2181:
	popax
	cmp $a,0
	je l2182
	cthis mprzesun
	ret
	jmp l2179
l2182:
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	jne l2184
	push 0
	jmp l2185
l2184:
	push 1
l2185:
	popax
	cmp $a,0
	je l2186
	ret
	jmp l2183
l2186:
l2183:
l2179:
	cthis actionname
	pop $1
	push 0
	push 2
	call $1,getb
	push "jm"
	pop $b
	popax
	cmp $a,$b
	je l2188
	push 0
	jmp l2189
l2188:
	push 1
l2189:
	popax
	cmp $a,0
	je l2190
	push "right"
	call keyboard,iskeydown
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2192
	push 0
	jmp l2193
l2192:
	push 1
l2193:
	popax
	cmp $a,0
	je l2194
	push "jmpp"
	cthis msetf
	push ipiasx
	cthis mmovxp
	jmp l2191
l2194:
	push "left"
	call keyboard,iskeydown
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2196
	push 0
	jmp l2197
l2196:
	push 1
l2197:
	popax
	cmp $a,0
	je l2198
	push "jmpl"
	cthis msetf
	push ipiasx
	popax
	sub 0,$a
	cthis mmovxp
	jmp l2195
l2198:
l2195:
l2191:
	jmp l2187
l2190:
	push iuderza
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2200
	push 0
	jmp l2201
l2200:
	push 1
l2201:
	popax
	cmp $a,0
	je l2202
	cthis framename
	push "pac"
	pop $b
	popax
	cmp $a,$b
	je l2204
	push 0
	jmp l2205
l2204:
	push 1
l2205:
	popax
	cmp $a,0
	je l2206
	localint $2
	localint $3
	cthis mgetdir
	push "p"
	pop $b
	popax
	cmp $a,$b
	je l2208
	push 0
	jmp l2209
l2208:
	push 1
l2209:
	popax
	cmp $a,0
	je l2210
	cthis getex
	push 1
	pop $b
	popax
	add $a,$b
	pop $2
	cthis getpy
	push ibumpy
	pop $b
	popax
	add $a,$b
	pop $3
	jmp l2207
l2210:
	cthis getpx
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
	cthis getpy
	push ibumpy
	pop $b
	popax
	add $a,$b
	pop $3
l2207:
	push $2
	push $3
	push 1
	push 1
	push 400
	push 600
	call engine,getimg
	pop $1
	push 2
	push 2
	call $1,getb
	push "wo"
	pop $b
	popax
	cmp $a,$b
	je l2212
	push 0
	jmp l2213
l2212:
	push 1
l2213:
	popax
	cmp $a,0
	je l2214
	call cnbum,get
	popax
	spush $a
	push $2
	push $3
	push 5
	call $2,rand
	spop $a
	call [$a],anplaypos3
	push $1
	cthis moutwoj
	jmp l2211
l2214:
l2211:
	jmp l2203
l2206:
l2203:
	ret
	jmp l2199
l2202:
	cthis mcheckbum
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2216
	push 0
	jmp l2217
l2216:
	push 1
l2217:
	popax
	cmp $a,0
	je l2218
	ret
	jmp l2215
l2218:
l2215:
l2199:
	push "right"
	call keyboard,iskeydown
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2220
	push 0
	jmp l2221
l2220:
	push 1
l2221:
	popax
	cmp $a,0
	je l2222
	push "gop"
	cthis mrplay
	push ipiasx
	cthis mmovxp
	push 1
	pop ibylkey
	jmp l2219
l2222:
	push "left"
	call keyboard,iskeydown
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2224
	push 0
	jmp l2225
l2224:
	push 1
l2225:
	popax
	cmp $a,0
	je l2226
	push "gol"
	cthis mrplay
	push ipiasx
	popax
	sub 0,$a
	cthis mmovxp
	push 1
	pop ibylkey
	jmp l2223
l2226:
l2223:
l2219:
	push "up"
	call keyboard,iskeydown
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2228
	push 0
	jmp l2229
l2228:
	push 1
l2229:
	popax
	cmp $a,0
	je l2230
	push "go"
	cthis mgetdir
	pop $b
	popax
	add $a,$b
	cthis mrplay
	push ipiasy
	popax
	sub 0,$a
	cthis mmovyp
	push 1
	pop ibylkey
	jmp l2227
l2230:
	push "down"
	call keyboard,iskeydown
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2232
	push 0
	jmp l2233
l2232:
	push 1
l2233:
	popax
	cmp $a,0
	je l2234
	push "go"
	cthis mgetdir
	pop $b
	popax
	add $a,$b
	cthis mrplay
	push ipiasy
	cthis mmovyp
	push 1
	pop ibylkey
	jmp l2231
l2234:
l2231:
l2227:
	push "rshift"
	call keyboard,iskeydown
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2236
	push 0
	jmp l2237
l2236:
	push 1
l2237:
	popax
	cmp $a,0
	je l2238
	push 0
	pop ibylkey
	push "jmp"
	cthis mgetdir
	pop $b
	popax
	add $a,$b
	cthis play
	jmp l2235
l2238:
	push ibylkey
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2240
	push 0
	jmp l2241
l2240:
	push 1
l2241:
	push iuderza
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2242
	push 0
	jmp l2243
l2242:
	push 1
l2243:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l2244
	push "stand"
	cthis mgetdir
	pop $b
	popax
	add $a,$b
	cthis mrplay
	jmp l2239
l2244:
	push 0
	pop ibylkey
l2239:
l2235:
	cthis getey
	cthis setz
l2187:
	end method
	method mpiastfin
	push igmstate
	push 4
	pop $b
	popax
	cmp $a,$b
	je l2246
	push 0
	jmp l2247
l2246:
	push 1
l2247:
	popax
	cmp $a,0
	je l2248
	push 1
	pop igmstate
	jmp l2245
l2248:
l2245:
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2250
	push 0
	jmp l2251
l2250:
	push 1
l2251:
	popax
	cmp $a,0
	je l2252
	push ibylkey
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2254
	push 0
	jmp l2255
l2254:
	push 1
l2255:
	push iuderza
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2256
	push 0
	jmp l2257
l2256:
	push 1
l2257:
	popax
	pop $b
	or $a,$b
	popax
	cmp $a,0
	je l2258
	cthis mcheckbum
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2260
	push 0
	jmp l2261
l2260:
	push 1
l2261:
	popax
	cmp $a,0
	je l2262
	push "stand"
	cthis mgetdir
	pop $b
	popax
	add $a,$b
	cthis play
	push 0
	pop iuderza
	jmp l2259
l2262:
l2259:
	jmp l2253
l2258:
	push 0
	pop ibylkey
	push 1
	popax
	sub 0,$a
	cthis play
l2253:
	jmp l2249
l2252:
	push 1
	popax
	sub 0,$a
	cthis play
l2249:
	end method
	method mbuildwoj
	localint $1
	pop $1
	new int,_id
	push $1
	pop _id
	new string,_st
	push "miq"
	push $1
	push 5
	call dbwoj,get
	pop $b
	popax
	add $a,$b
	pop _st
	new int,_is
	push $1
	push 0
	call dbwoj,get
	pop _is
	new int,_im
	push 1
	pop _im
	new int,_idx
	new int,_idy
	new real,_rstep
	push $1
	push 6
	call dbwoj,get
	pop _rstep
	end method
	method mwalkto
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	push _rstep
	call cltr,countsteps
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2264
	push 0
	jmp l2265
l2264:
	push 1
l2265:
	popax
	cmp $a,0
	je l2266
	push 0
	pop _idx
	push 0
	pop _idy
	cthis mwait
	jmp l2263
l2266:
	call cltr,getdx
	pop _idx
	call cltr,getdy
	pop _idy
	push _idx
	push 0
	pop $b
	popax
	cmp $a,$b
	jl l2268
	push 0
	jmp l2269
l2268:
	push 1
l2269:
	popax
	cmp $a,0
	je l2270
	push "gol"
	cthis play
	jmp l2267
l2270:
	push "gop"
	cthis play
l2267:
l2263:
	end method
	method mspacer
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push 50
	push 700
	call $1,rand
	pop $b
	popax
	add $a,$b
	push iscy1
	push 120
	call $2,rand
	pop $b
	popax
	add $a,$b
	cthis mwalkto
	end method
	method muciekaj
	localint $1
	localint $2
	pop $2
	pop $1
	localint $3
	localint $4
	call anpiast,getcx
	push 400
	pop $b
	popax
	cmp $a,$b
	jae l2272
	push 0
	jmp l2273
l2272:
	push 1
l2273:
	popax
	cmp $a,0
	je l2274
	push iscx1
	push 70
	call $3,rand
	pop $b
	popax
	add $a,$b
	pop $3
	jmp l2271
l2274:
	push iscx2
	push 70
	call $3,rand
	pop $b
	popax
	sub $a,$b
	pop $3
l2271:
	call anpiast,getcy
	push ipolscy
	pop $b
	popax
	cmp $a,$b
	jae l2276
	push 0
	jmp l2277
l2276:
	push 1
l2277:
	popax
	cmp $a,0
	je l2278
	push iscy1
	push 70
	call $4,rand
	pop $b
	popax
	add $a,$b
	pop $4
	jmp l2275
l2278:
	push iscy2
	push 70
	call $4,rand
	pop $b
	popax
	sub $a,$b
	pop $4
l2275:
	push $1
	push $2
	push $3
	push $4
	cthis mwalkto
	end method
	method mpodejdz
	localint $1
	localint $2
	pop $2
	pop $1
	localint $3
	localstring $4
	call anpiast,actionname
	pop $4
	push 0
	push 2
	call $4,getb
	push "jm"
	pop $b
	popax
	cmp $a,$b
	je l2280
	push 0
	jmp l2281
l2280:
	push 1
l2281:
	popax
	cmp $a,0
	je l2282
	cthis getpy
	pop $3
	jmp l2279
l2282:
	call anpiast,getcy
	pop $3
l2279:
	push $1
	push $2
	call anpiast,getcx
	push $3
	cthis mwalkto
	end method
	method mwait
	push 1
	pop _im
	push 0
	pop _idx
	push 0
	pop _idy
	push "stand"
	cthis mgetdir
	pop $b
	popax
	add $a,$b
	cthis play
	end method
	method miqs
	localint $1
	cthis getcx
	pop $1
	localint $2
	cthis getcy
	pop $2
	localint $3
	push 6
	call $1,rand
	pop $3
	push $3
	push 3
	pop $b
	popax
	cmp $a,$b
	jl l2284
	push 0
	jmp l2285
l2284:
	push 1
l2285:
	popax
	cmp $a,0
	je l2286
	cthis mwait
	jmp l2283
l2286:
	push $3
	push 3
	pop $b
	popax
	cmp $a,$b
	je l2288
	push 0
	jmp l2289
l2288:
	push 1
l2289:
	popax
	cmp $a,0
	je l2290
	push $1
	push $2
	cthis mpodejdz
	jmp l2287
l2290:
	push $1
	push $2
	cthis mspacer
l2287:
l2283:
	end method
	method miqa
	localint $1
	cthis getcx
	pop $1
	localint $2
	cthis getcy
	pop $2
	localint $3
	push 3
	call $1,rand
	pop $3
	push $3
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2292
	push 0
	jmp l2293
l2292:
	push 1
l2293:
	popax
	cmp $a,0
	je l2294
	cthis mwait
	jmp l2291
l2294:
	push $3
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2296
	push 0
	jmp l2297
l2296:
	push 1
l2297:
	popax
	cmp $a,0
	je l2298
	push $1
	push $2
	cthis mpodejdz
	jmp l2295
l2298:
	push $1
	push $2
	cthis mspacer
l2295:
l2291:
	end method
	method miqc
	localint $1
	cthis getcx
	pop $1
	localint $2
	cthis getcy
	pop $2
	localint $3
	push 5
	call $1,rand
	pop $3
	push $3
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2300
	push 0
	jmp l2301
l2300:
	push 1
l2301:
	popax
	cmp $a,0
	je l2302
	cthis mwait
	jmp l2299
l2302:
	push $3
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2304
	push 0
	jmp l2305
l2304:
	push 1
l2305:
	popax
	cmp $a,0
	je l2306
	push $1
	push $2
	cthis mspacer
	jmp l2303
l2306:
	cthis mgetdir
	call anpiast,mgetdir
	pop $b
	popax
	cmp $a,$b
	jne l2308
	push 0
	jmp l2309
l2308:
	push 1
l2309:
	cthis getname
	push "anpiast"
	call cllen,ilen3
	push 150
	pop $b
	popax
	cmp $a,$b
	jle l2310
	push 0
	jmp l2311
l2310:
	push 1
l2311:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l2312
	push $1
	push $2
	cthis muciekaj
	jmp l2307
l2312:
	push $1
	push $2
	cthis mpodejdz
l2307:
l2303:
l2299:
	end method
	method mgetdir
	localstring $1
	cthis actionname
	pop $1
	push 0
	push 1
	call $1,gete
	ret
	end method
	method miqr
	localint $1
	push 10
	call $1,rand
	pop $1
	push $1
	push 4
	pop $b
	popax
	cmp $a,$b
	jle l2314
	push 0
	jmp l2315
l2314:
	push 1
l2315:
	popax
	cmp $a,0
	je l2316
	cthis miqc
	jmp l2313
l2316:
	push $1
	push 8
	pop $b
	popax
	cmp $a,$b
	jle l2318
	push 0
	jmp l2319
l2318:
	push 1
l2319:
	popax
	cmp $a,0
	je l2320
	cthis miqa
	jmp l2317
l2320:
	cthis miqs
l2317:
l2313:
	end method
	method mdotarl
	localint $1
	push 6
	call $1,rand
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2322
	push 0
	jmp l2323
l2322:
	push 1
l2323:
	popax
	cmp $a,0
	je l2324
	push 1
	ret
	jmp l2321
l2324:
l2321:
	cthis getcx
	cthis getcy
	call cltr,reached
	ret
	end method
	method mwojsay
	localint $1
	pop $1
	localstring $2
	push "snden"
	push 1
	push _id
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	add $a,$b
	pop $2
	push $1
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2326
	push 0
	jmp l2327
l2326:
	push 1
l2327:
	popax
	cmp $a,0
	je l2328
	push $2
	cthis crbgplay
	jmp l2325
l2328:
	push $2
	popax
	spush $a
	push 0
	spop $a
	call [$a],stop
	push "snden"
	push $1
	push _id
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	spop $a
	call [$a],play
l2325:
	end method
	method mwojfin
	push _im
	push 2
	pop $b
	popax
	cmp $a,$b
	jne l2330
	push 0
	jmp l2331
l2330:
	push 1
l2331:
	popax
	cmp $a,0
	je l2332
	cthis mdotarl
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2334
	push 0
	jmp l2335
l2334:
	push 1
l2335:
	popax
	cmp $a,0
	je l2336
	push _st
	popax
	spush $a
	spop $d
	cthis [$d]
	push 15
	call _im,rand
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2338
	push 0
	jmp l2339
l2338:
	push 1
l2339:
	popax
	cmp $a,0
	je l2340
	push 1
	cthis mwojsay
	jmp l2337
l2340:
l2337:
	jmp l2333
l2336:
	push 1
	popax
	sub 0,$a
	cthis play
l2333:
	jmp l2329
l2332:
	push _im
	push 2
	pop $b
	popax
	cmp $a,$b
	je l2342
	push 0
	jmp l2343
l2342:
	push 1
l2343:
	popax
	cmp $a,0
	je l2344
	push 1
	popax
	sub 0,$a
	cthis play
	jmp l2341
l2344:
l2341:
l2329:
	end method
	method mbumwoj
	localstring $1
	push 2
	call _im,rand
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2346
	push 0
	jmp l2347
l2346:
	push 1
l2347:
	popax
	cmp $a,0
	je l2348
	call cnap,get
	pop $1
	push $1
	popax
	spush $a
	cthis getcx
	cthis getey
	spop $a
	call [$a],setpos
	push $1
	popax
	spush $a
	spop $a
	call [$a],anputgr
	push $1
	popax
	spush $a
	spop $a
	call [$a],show
	push $1
	call grall,addonce
	jmp l2345
l2348:
l2345:
	push 2
	pop _im
	call anpiast,mgetdir
	pop $1
	push $1
	push "l"
	pop $b
	popax
	cmp $a,$b
	je l2350
	push 0
	jmp l2351
l2350:
	push 1
l2351:
	popax
	cmp $a,0
	je l2352
	push 2
	push _id
	push 1
	call dbwoj,get
	pop $b
	popax
	mul $a,$b
	pop _idx
	push 2
	push _id
	push 2
	call dbwoj,get
	pop $b
	popax
	mul $a,$b
	pop _idy
	jmp l2349
l2352:
	push 2
	push _id
	push 3
	call dbwoj,get
	pop $b
	popax
	mul $a,$b
	pop _idx
	push 2
	push _id
	push 4
	call dbwoj,get
	pop $b
	popax
	mul $a,$b
	pop _idy
l2349:
	push "au"
	push $1
	pop $b
	popax
	add $a,$b
	cthis play
	push 8
	cthis mwojsay
	push "cpok"
	push 2
	push "r"
	cthis crandplay
	call cfbum,bgplay
	end method
	method mbumwpiast
	localint $1
	localint $2
	localstring $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 1
	cthis isin
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2354
	push 0
	jmp l2355
l2354:
	push 1
l2355:
	popax
	cmp $a,0
	je l2356
	call cnbum,get
	popax
	spush $a
	push $1
	push $2
	push 5
	call $1,rand
	spop $a
	call [$a],anplaypos3
	push 4
	pop igmstate
	push "au"
	push $3
	pop $b
	popax
	add $a,$b
	cthis mrplay
	push $4
	call clliv,damage
	push "cpau"
	cthis cbplay
	call cfmb,bgplay
	call clliv,destroyed
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2358
	push 0
	jmp l2359
l2358:
	push 1
l2359:
	popax
	cmp $a,0
	je l2360
	push "imgbkg"
	call grall,remove
	push 0
	call grall,stop
	push 6
	pop igmstate
	push "sndnar2"
	cthis cbplay
	jmp l2357
l2360:
l2357:
	jmp l2353
l2356:
l2353:
	end method
	method mwojframe
	push _im
	push 2
	pop $b
	popax
	cmp $a,$b
	je l2362
	push 0
	jmp l2363
l2362:
	push 1
l2363:
	popax
	cmp $a,0
	je l2364
	push _idx
	push _idy
	cthis move
	localint $1
	cthis getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $1
	localint $2
	cthis geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $2
	cthis getcx
	cthis getcy
	push $1
	popax
	sub 0,$a
	push $2
	popax
	sub 0,$a
	push 800
	push $1
	pop $b
	popax
	add $a,$b
	push 600
	push $2
	pop $b
	popax
	add $a,$b
	call clsurf,isin
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2366
	push 0
	jmp l2367
l2366:
	push 1
l2367:
	popax
	cmp $a,0
	je l2368
	push 0
	cthis stop
	cthis hide
	push "cnw"
	push _id
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	cthis getname
	spop $a
	call [$a],retf
	push "sfxout"
	push 4
	call $1,rand
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	spop $a
	call [$a],playif
	cthis mcheckend
	jmp l2365
l2368:
l2365:
	jmp l2361
l2364:
	cthis getey
	cthis setz
	localstring $3
	cthis actionname
	pop $3
	push 0
	push 2
	call $3,getb
	push "bu"
	pop $b
	popax
	cmp $a,$b
	jne l2370
	push 0
	jmp l2371
l2370:
	push 1
l2371:
	popax
	cmp $a,0
	je l2372
	push _idx
	cthis mmovxp
	push _idy
	cthis mmovyp
	push 0
	push 1
	call $3,gete
	pop $3
	call anpiast,getcy
	cthis getcy
	call cllen,ilen4
	push 20
	pop $b
	popax
	cmp $a,$b
	jle l2374
	push 0
	jmp l2375
l2374:
	push 1
l2375:
	push 4
	call _idx,rand
	push 0
	pop $b
	popax
	cmp $a,$b
	ja l2376
	push 0
	jmp l2377
l2376:
	push 1
l2377:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l2378
	localint $4
	call anpiast,getcx
	cthis getcx
	pop $b
	popax
	sub $a,$b
	pop $4
	push $4
	push 0
	pop $b
	popax
	cmp $a,$b
	jl l2380
	push 0
	jmp l2381
l2380:
	push 1
l2381:
	push $4
	cthis getw
	popax
	sub 0,$a
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push 2
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	cmp $a,$b
	ja l2382
	push 0
	jmp l2383
l2382:
	push 1
l2383:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l2384
	push "buml"
	cthis play
	call cfmach,bgplay
	jmp l2379
l2384:
	push $4
	push 0
	pop $b
	popax
	cmp $a,$b
	jae l2386
	push 0
	jmp l2387
l2386:
	push 1
l2387:
	push $4
	cthis getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push 2
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	cmp $a,$b
	jl l2388
	push 0
	jmp l2389
l2388:
	push 1
l2389:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l2390
	push "bump"
	cthis play
	call cfmach,bgplay
	jmp l2385
l2390:
l2385:
l2379:
	jmp l2373
l2378:
l2373:
	jmp l2369
l2372:
	cthis framename
	push "pac"
	pop $b
	popax
	cmp $a,$b
	je l2392
	push 0
	jmp l2393
l2392:
	push 1
l2393:
	popax
	cmp $a,0
	je l2394
	localint $5
	cthis getpy
	push _id
	call vecy,get
	pop $b
	popax
	add $a,$b
	pop $5
	push 0
	push 1
	call $3,gete
	push "p"
	pop $b
	popax
	cmp $a,$b
	je l2396
	push 0
	jmp l2397
l2396:
	push 1
l2397:
	popax
	cmp $a,0
	je l2398
	cthis getex
	push 1
	pop $b
	popax
	add $a,$b
	push $5
	push "l"
	push _is
	call anpiast,mbumwpiast
	jmp l2395
l2398:
	cthis getpx
	push 1
	pop $b
	popax
	sub $a,$b
	push $5
	push "p"
	push _is
	call anpiast,mbumwpiast
l2395:
	jmp l2391
l2394:
l2391:
l2369:
l2361:
	end method
	method mmgla
	push 0
	push imgla
	call vmgla,get
	call anmgla,move
	push imgla
	push 1
	pop $b
	popax
	add $a,$b
	call vmgla,size
	pop $b
	popax
	div $a,$b
	push $d
	pop imgla
	end method
	method mprzesun
	push 20
	push 0
	push 10
	push ipiasx
	push "grall"
	cthis cmovxbkg
	sub ilebgsteps,1
	pop ilebgsteps
	push ilebgsteps
	push 0
	pop $b
	popax
	cmp $a,$b
	jle l2400
	push 0
	jmp l2401
l2400:
	push 1
l2401:
	popax
	cmp $a,0
	je l2402
	push 1
	pop igmstate
	cthis mloadscript
	jmp l2399
l2402:
l2399:
	end method
	end game

	game gamerzeka
	parent classadvpiast
	method init
	clparent classadvpiast,init
	push "scripts/part3/rzeka/"
	cthis setgraphpath
	push "celownik.png"
	cthis cloadcursor
	localint $1
	push "anbg"
	push "bkg.pyz"
	push 1
	cthis loadanactions
	pop $1
	push 0
	call keyboard,autorepeat
	new vector,vtor
	new classtriangle,cltr
	localstring $2
	localstring $3
	push igmeasy
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2404
	push 0
	jmp l2405
l2404:
	push 1
l2405:
	popax
	cmp $a,0
	je l2406
	new int,iilosccykli
	push 300
	pop iilosccykli
	jmp l2403
l2406:
	new int,iilosccykli
	push 180
	pop iilosccykli
l2403:
	push "timbg"
	push 1
	push iilosccykli
	push 30
	pop $b
	popax
	mul $a,$b
	push "mfintimbg"
	cthis cnewtimercyclefin
	push "ontick"
	push "mtimbgtick"
	call timbg,addmethod
	localint $4
	push 0
	pop $4
l2407:
	push $4
	push $1
	pop $b
	popax
	cmp $a,$b
	jl l2408
	push 0
	jmp l2409
l2408:
	push 1
l2409:
	popax
	cmp $a,0
	je l2410
	jmp l2412
l2411:
	add $4,1
	pop $4
	jmp l2407
l2412:
	push "anbg"
	push $4
	pop $b
	popax
	add $a,$b
	pop $2
	push $2
	popax
	spush $a
	push $4
	push 1
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setz
	push "clm"
	push $4
	pop $b
	popax
	add $a,$b
	pop $3
	push $3
	popax
	spush $a
	spop $e
	new classbgmover,[$e]
	push $3
	popax
	spush $a
	push $2
	spop $a
	call [$a],setan
	push $3
	popax
	spush $a
	push "left"
	spop $a
	call [$a],setdir
	push $2
	popax
	spush $a
	spop $a
	call [$a],hide
	jmp l2411
l2410:
	push "anpiast"
	push "statki.pyz"
	push 50
	push "mpiastfin"
	cthis cnewanimafin
	push "anpiast"
	push "anwiks"
	push "mwiksfin"
	cthis ccopyanimafin
	push 0
	call anpiast,anplaygr
	push 1
	call anwiks,anplaygr
	new int,JAPZ
	push 1100
	pop JAPZ
	new int,BUTZ
	push 1000
	pop BUTZ
	localint $5
	push 20
	pop $5
	push "cnbut"
	push "anbut"
	push "buty.pyz"
	push BUTZ
	push $5
	cthis newancounterh
	push "cnjap"
	push "anjap"
	push "japco.pyz"
	push JAPZ
	push $5
	cthis newancounterh
	push "cnpl"
	push "anplum"
	push "plum.pyz"
	push 0
	push $5
	cthis newancounterh
	push "cnpien"
	push "anpien"
	push "skaly.pyz"
	push 0
	push $5
	cthis newancounterh
	new gmobjvec,grpl
	push 0
	pop $4
l2413:
	push $4
	push $5
	pop $b
	popax
	cmp $a,$b
	jl l2414
	push 0
	jmp l2415
l2414:
	push 1
l2415:
	popax
	cmp $a,0
	je l2416
	jmp l2418
l2417:
	add $4,1
	pop $4
	jmp l2413
l2418:
	push "anbut"
	push $4
	pop $b
	popax
	add $a,$b
	pop $2
	push $2
	popax
	spush $a
	spop $a
	call [$a],mbuildvars
	push $2
	popax
	spush $a
	push "onendframe"
	push "mbutframe"
	spop $a
	call [$a],addmethod
	push $2
	cthis looponfinish
	push "anjap"
	push $4
	pop $b
	popax
	add $a,$b
	pop $2
	push $2
	popax
	spush $a
	spop $a
	call [$a],mbuildvars
	push $2
	popax
	spush $a
	push "onendframe"
	push "mjapframe"
	spop $a
	call [$a],addmethod
	push $2
	cthis looponfinish
	push "anplum"
	push $4
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	push "onfinish"
	push "mplumfin"
	spop $a
	call [$a],addmethod
	push "anpien"
	push $4
	pop $b
	popax
	add $a,$b
	pop $2
	push $2
	cthis looponfinish
	push $2
	popax
	spush $a
	push "onendframe"
	push "mskalframe"
	spop $a
	call [$a],addmethod
	push $2
	popax
	spush $a
	spop $a
	call [$a],mbuildpien
	jmp l2417
l2416:
	push "dbwav"
	push "wavs.db"
	cthis cloadwavs
	new int,iwiksgo
	push 0
	pop iwiksgo
	new int,ipiasttor
	push 1
	pop ipiasttor
	new int,benablefire
	push 1
	pop benablefire
	localint $6
	call anpiast,getey
	push 10
	pop $b
	popax
	sub $a,$b
	pop $6
	push "begin"
	push $6
	push 50
	pop $b
	popax
	sub $a,$b
	push $6
	push $6
	push 50
	pop $b
	popax
	add $a,$b
	call vtor,beginadd
	new vector,vrand
	push "begin"
	push 0
	push 1
	push 2
	call vrand,beginadd
	push "timfire"
	push 1000
	push 1
	push "mfintimfire"
	cthis cnewtimerfin
	push "timbg1"
	push 1
	push 1
	push "mfintimbg1"
	cthis cnewtimercyclefin
	call timbg1,play
	push "sndnar1"
	cthis cbplay
	end method
	method mfintimfire
	push 1
	pop benablefire
	end method
	method mbuildpien
	new int,itor
	end method
	method mskalframe
	push itor
	push ipiasttor
	pop $b
	popax
	cmp $a,$b
	je l2420
	push 0
	jmp l2421
l2420:
	push 1
l2421:
	popax
	cmp $a,0
	je l2422
	cthis getpx
	push 2
	pop $b
	popax
	add $a,$b
	cthis getpy
	push 5
	pop $b
	popax
	add $a,$b
	push 1
	push 1
	call anpiast,isin
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2424
	push 0
	jmp l2425
l2424:
	push 1
l2425:
	popax
	cmp $a,0
	je l2426
	push 1
	popax
	sub 0,$a
	push 0
	call anpiast,move
	call sfxpach,playif
	jmp l2423
l2426:
l2423:
	jmp l2419
l2422:
l2419:
	cthis getex
	push 0
	pop $b
	popax
	cmp $a,$b
	jl l2428
	push 0
	jmp l2429
l2428:
	push 1
l2429:
	popax
	cmp $a,0
	je l2430
	cthis anhide
	cthis getname
	call grpl,remove
	jmp l2427
l2430:
l2427:
	end method
	method mplumfin
	cthis getname
	call grpl,remove
	cthis hide
	end method
	method mjapframe
	push ist
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2432
	push 0
	jmp l2433
l2432:
	push 1
l2433:
	popax
	cmp $a,0
	je l2434
	localint $1
	cthis getcx
	pop $1
	localint $2
	cthis getcy
	pop $2
	localstring $3
	push $1
	push $2
	push 1
	push 1
	push BUTZ
	push BUTZ
	call engine,getimg
	pop $3
	push $3
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l2436
	push 0
	jmp l2437
l2436:
	push 1
l2437:
	popax
	cmp $a,0
	je l2438
	push $3
	popax
	spush $a
	push 2
	call ikr,rand
	popax
	sub 0,$a
	push 20
	spop $a
	call [$a],mtrafion
	push 2
	call ikr,rand
	push 20
	cthis mtrafion
	push 5
	push 0
	call anpiast,move
	call cpnon,play
	call sfxpac,play
	jmp l2435
l2438:
	cthis anonscreen
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2440
	push 0
	jmp l2441
l2440:
	push 1
l2441:
	popax
	cmp $a,0
	je l2442
	push $1
	push $2
	push 1
	push 1
	call anwiks,isin
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2444
	push 0
	jmp l2445
l2444:
	push 1
l2445:
	popax
	cmp $a,0
	je l2446
	cthis anhide
	push 2
	call $1,rand
	popax
	sub 0,$a
	push 0
	call anwiks,move
	call sfxbum,play
	jmp l2443
l2446:
	cthis mwypad
l2443:
	jmp l2439
l2442:
l2439:
l2435:
	jmp l2431
l2434:
	cthis mwypad
l2431:
	end method
	method mtrafion
	localint $1
	localint $2
	pop $2
	pop $1
	cthis getname
	call grpl,add
	cthis getz
	push 1
	pop $b
	popax
	sub $a,$b
	cthis setz
	push 10
	pop ikr
	push 1
	pop ist
	push $1
	pop idx
	push $2
	pop idy
	end method
	method mwyrzut
	localint $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	cthis anplayzpos
	push 0
	pop ist
	push $3
	push $4
	push $5
	push $6
	push 20
	call cltr,talesxy
	pop $3
	push $3
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2448
	push 0
	jmp l2449
l2448:
	push 1
l2449:
	popax
	cmp $a,0
	je l2450
	push 17
	pop idx
	push 17
	pop idy
	jmp l2447
l2450:
	call cltr,getdx
	pop idx
	call cltr,getdy
	pop idy
l2447:
	push 0
	pop ibyl
	end method
	method mwypad
	push ist
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2452
	push 0
	jmp l2453
l2452:
	push 1
l2453:
	popax
	cmp $a,0
	je l2454
	cthis anonscreen
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2456
	push 0
	jmp l2457
l2456:
	push 1
l2457:
	popax
	cmp $a,0
	je l2458
	push idx
	push idy
	cthis move
	jmp l2455
l2458:
	cthis anhide
l2455:
	jmp l2451
l2454:
	cthis getcy
	push 440
	pop $b
	popax
	cmp $a,$b
	ja l2460
	push 0
	jmp l2461
l2460:
	push 1
l2461:
	popax
	cmp $a,0
	je l2462
	cthis anhide
	cthis getname
	call grpl,remove
	localstring $1
	call cnpl,get
	pop $1
	push $1
	call grpl,add
	push $1
	popax
	spush $a
	cthis getcx
	cthis getcy
	spop $a
	call [$a],anplayposgr
	call sfxwoda,play
	jmp l2459
l2462:
	push idx
	push idy
	cthis move
	cthis anputgr
l2459:
l2451:
	end method
	method mbutframe
	localint $1
	cthis getcx
	pop $1
	localint $2
	cthis getcy
	pop $2
	push $1
	push $2
	push 1
	push 1
	call anpiast,isin
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2464
	push 0
	jmp l2465
l2464:
	push 1
l2465:
	popax
	cmp $a,0
	je l2466
	cthis anhide
	push 1
	popax
	sub 0,$a
	push 0
	call anpiast,move
	call cpok,play
	push 1
	popax
	sub 0,$a
	cthis actionnr
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2468
	push 0
	jmp l2469
l2468:
	push 1
l2469:
	popax
	cmp $a,0
	je l2470
	call sfxmetal,play
	jmp l2467
l2470:
	call sfxbum,play
l2467:
	jmp l2463
l2466:
	cthis mwypad
	call anpiast,getcy
	cthis getcy
	pop $b
	popax
	sub $a,$b
	push 300
	pop $b
	popax
	cmp $a,$b
	ja l2472
	push 0
	jmp l2473
l2472:
	push 1
l2473:
	push ibyl
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2474
	push 0
	jmp l2475
l2474:
	push 1
l2475:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l2476
	push 1
	pop ibyl
	push 1
	popax
	sub 0,$a
	push BUTZ
	push $1
	push $2
	call anpiast,getcx
	push 10
	pop $b
	popax
	add $a,$b
	push 20
	call $1,rand
	pop $b
	popax
	sub $a,$b
	call anpiast,getcy
	cthis mwyrzut
	jmp l2471
l2476:
l2471:
l2463:
	end method
	method mbuildvars
	new int,idx
	new int,idy
	new int,ist
	new int,ikr
	new int,ibyl
	end method
	method mwiksfin
	push 1
	popax
	sub 0,$a
	cthis play
	push iwiksgo
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2478
	push 0
	jmp l2479
l2478:
	push 1
l2479:
	popax
	cmp $a,0
	je l2480
	push 0
	pop iwiksgo
	push 1
	push 0
	cthis move
	jmp l2477
l2480:
l2477:
	cthis getex
	call anpiast,getex
	pop $b
	popax
	cmp $a,$b
	ja l2482
	push 0
	jmp l2483
l2482:
	push 1
l2483:
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2484
	push 0
	jmp l2485
l2484:
	push 1
l2485:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l2486
	push 3
	pop igmstate
	call sndnar2,play
	jmp l2481
l2486:
l2481:
	end method
	method mpiastfin
	push 1
	popax
	sub 0,$a
	cthis play
	end method
	method mstart
	push 1
	pop igmstate
	end method
	method mwyliz
	localint $1
	localint $2
	pop $2
	pop $1
	push $2
	pop itor
	push $1
	cthis play
	push 800
	push $2
	call vtor,get
	cthis setpos
	cthis getey
	push 10
	pop $b
	popax
	add $a,$b
	cthis setz
	cthis getname
	call grpl,add
	end method
	method mtimbgtick
	localint $1
	cthis gettick
	pop $1
	localint $2
	push $1
	push 30
	pop $b
	popax
	div $a,$b
	push $d
	pop $2
	push $2
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2488
	push 0
	jmp l2489
l2488:
	push 1
l2489:
	popax
	cmp $a,0
	je l2490
	push 30
	popax
	div $1,$a
	mov $1,$a
	push $1
	push 3
	pop $b
	popax
	div $a,$b
	push $d
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2492
	push 0
	jmp l2493
l2492:
	push 1
l2493:
	popax
	cmp $a,0
	je l2494
	push 1
	pop iwiksgo
	jmp l2491
l2494:
l2491:
	call vrand,hash
	call cnpien,get
	popax
	spush $a
	push 3
	call $1,rand
	push 0
	call vrand,get
	spop $a
	call [$a],mwyliz
	push $1
	push iilosccykli
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	cmp $a,$b
	ja l2496
	push 0
	jmp l2497
l2496:
	push 1
l2497:
	popax
	cmp $a,0
	je l2498
	call cnpien,get
	popax
	spush $a
	push 3
	call $1,rand
	push 1
	call vrand,get
	spop $a
	call [$a],mwyliz
	jmp l2495
l2498:
l2495:
	push $1
	push 5
	pop $b
	popax
	div $a,$b
	push $d
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2500
	push 0
	jmp l2501
l2500:
	push 1
l2501:
	popax
	cmp $a,0
	je l2502
	call cprzut,play
	jmp l2499
l2502:
l2499:
	push $1
	push 23
	pop $b
	popax
	div $a,$b
	push $d
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2504
	push 0
	jmp l2505
l2504:
	push 1
l2505:
	popax
	cmp $a,0
	je l2506
	call cpkrzyk,play
	jmp l2503
l2506:
l2503:
	jmp l2487
l2490:
l2487:
	cthis mprzes
	end method
	method mbutfire
	localint $1
	call cnbut,get
	popax
	spush $a
	push 2
	call $1,rand
	push BUTZ
	call anwiks,getpx
	push 10
	pop $b
	popax
	add $a,$b
	call anwiks,getcy
	call anpiast,getcx
	push 10
	pop $b
	popax
	add $a,$b
	push 20
	call $1,rand
	pop $b
	popax
	sub $a,$b
	call anpiast,getcy
	push 350
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],mwyrzut
	call sfxrzut,play
	end method
	method mprzes
	push 1
	popax
	sub 0,$a
	call clm0,movleft
	push 3
	popax
	sub 0,$a
	call clm1,movleft
	push 7
	popax
	sub 0,$a
	call clm2,movleft
	push 1
	popax
	sub 0,$a
	call clm3,movleft
	push 7
	popax
	sub 0,$a
	push 0
	call grpl,move
	end method
	method mfintimbg1
	cthis mprzes
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2508
	push 0
	jmp l2509
l2508:
	push 1
l2509:
	popax
	cmp $a,0
	je l2510
	call timbg,play
	jmp l2507
l2510:
	cthis play
	push igmstate
	push 2
	pop $b
	popax
	cmp $a,$b
	je l2512
	push 0
	jmp l2513
l2512:
	push 1
l2513:
	popax
	cmp $a,0
	je l2514
	push 2
	popax
	sub 0,$a
	push 0
	call anwiks,move
	jmp l2511
l2514:
l2511:
l2507:
	end method
	method mfintimbg
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2516
	push 0
	jmp l2517
l2516:
	push 1
l2517:
	popax
	cmp $a,0
	je l2518
	call sndnar3,play
	jmp l2515
l2518:
l2515:
	push 2
	pop igmstate
	call timbg1,play
	end method
	method mfinito
	push "gamemacki1"
	call gameapi,play
	end method
	method keydown
	push "up"
	call keyboard,iskey
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2520
	push 0
	jmp l2521
l2520:
	push 1
l2521:
	popax
	cmp $a,0
	je l2522
	push ipiasttor
	push 0
	pop $b
	popax
	cmp $a,$b
	ja l2524
	push 0
	jmp l2525
l2524:
	push 1
l2525:
	popax
	cmp $a,0
	je l2526
	sub ipiasttor,1
	pop ipiasttor
	push 0
	push 50
	popax
	sub 0,$a
	call anpiast,move
	call anpiast,anputgr
	jmp l2523
l2526:
l2523:
	jmp l2519
l2522:
	push "down"
	call keyboard,iskey
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2528
	push 0
	jmp l2529
l2528:
	push 1
l2529:
	popax
	cmp $a,0
	je l2530
	push ipiasttor
	push 2
	pop $b
	popax
	cmp $a,$b
	jl l2532
	push 0
	jmp l2533
l2532:
	push 1
l2533:
	popax
	cmp $a,0
	je l2534
	add ipiasttor,1
	pop ipiasttor
	push 0
	push 50
	call anpiast,move
	call anpiast,anputgr
	jmp l2531
l2534:
l2531:
	jmp l2527
l2530:
	call clnextgm,checkkey
l2527:
l2519:
	end method
	method mouselclick
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2536
	push 0
	jmp l2537
l2536:
	push 1
l2537:
	push benablefire
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2538
	push 0
	jmp l2539
l2538:
	push 1
l2539:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l2540
	call cnjap,get
	popax
	spush $a
	push 0
	push JAPZ
	call anpiast,getcx
	push 55
	pop $b
	popax
	sub $a,$b
	call anpiast,getcy
	call mouse,getcx
	push 5
	pop $b
	popax
	sub $a,$b
	call mouse,getcy
	push 5
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],mwyrzut
	call sfxrzut,play
	push 0
	pop benablefire
	call timfire,play
	jmp l2535
l2540:
l2535:
	end method
	end game

	game gamemacki
	parent classadvpiast
	method init
	clparent classadvpiast,init
	localstring $1
	call gameapi,getgamename
	pop $1
	push "scripts/part4/macki/"
	push "bkg.png"
	push $1
	push ".pyz"
	pop $b
	popax
	add $a,$b
	cthis cloadterrain
	new classquest,clq
	end method
	method mloadpiast
	cthis cloadpiast
	push "onendframe"
	push "mpiastendframe"
	call anpiast,addmethod
	push "anpiast"
	cthis looponfinish
	push "maska.png"
	cthis cloadpathf
	end method
	method mnorma
	push 1
	pop igmstate
	call ptpiast,anstand
	end method
	method mherosay
	localstring $1
	pop $1
	push 5
	pop igmstate
	call ptpiast,anstand
	push $1
	cthis cbplay
	end method
	method mpiastsay
	localstring $1
	pop $1
	push 5
	pop igmstate
	push $1
	cthis cbplay
	call ptpiast,ansay
	end method
	method mpiastendframe
	cthis getey
	cthis setz
	end method
	method mfinptpiast
	call ptpiast,stand
	push igmstate
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2542
	push 0
	jmp l2543
l2542:
	push 1
l2543:
	popax
	cmp $a,0
	je l2544
	cthis mstartgame
	jmp l2541
l2544:
l2541:
	end method
	end game

	game gamemacki1
	parent gamemacki
	method init
	clparent gamemacki,init
	cthis mloadpiast
	push "dbwavs"
	push "gamemacki1wavs.db"
	cthis cloadwavs
	push "clm"
	push "maska.pyz"
	push "imglobcurs"
	push "mclickmask"
	cthis newclmaskfunc
	push "dom"
	call clm,disable
	new string,sanlas
	push "las"
	call clm,getimg
	pop sanlas
	push "smichal"
	push "michalPL"
	push "michal"
	cthis mbuildmask
	push "smaciej"
	push "maciejPL"
	push "maciej"
	cthis mbuildmask
	push "skosz"
	push "kosz"
	push "kosz"
	cthis mbuildmask
	push skosz
	popax
	spush $a
	push skosz
	popax
	spush $a
	spop $a
	call [$a],getz
	push 20
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setz
	push "anpiast"
	push 220
	push 470
	cthis cputgr2
	push 40
	push 50
	popax
	sub 0,$a
	call ptpiast,gotorel
	new int,bdolas
	new string,sdokogo
	push "timkom"
	push 9000
	push 1
	push "mfintimkom"
	cthis cnewtimerfin
	call timkom,play
	call sfxbrzdek,objplayloop
	end method
	method mstartgame
	push "sndp1"
	cthis mpiastsay
	end method
	method mfintimkom
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2546
	push 0
	jmp l2547
l2546:
	push 1
l2547:
	cthis cisplaying
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2548
	push 0
	jmp l2549
l2548:
	push 1
l2549:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l2550
	push "sndmich4"
	cthis mherosay
	jmp l2545
l2550:
	cthis play
l2545:
	end method
	method mtimreset
	call timkom,isplaying
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2552
	push 0
	jmp l2553
l2552:
	push 1
l2553:
	popax
	cmp $a,0
	je l2554
	push 0
	call timkom,stop
	call timkom,play
	jmp l2551
l2554:
l2551:
	end method
	method mfinp1
	push 1
	pop igmstate
	call ptpiast,anstand
	end method
	method mfinp2
	push sdokogo
	push "michal"
	pop $b
	popax
	cmp $a,$b
	je l2556
	push 0
	jmp l2557
l2556:
	push 1
l2557:
	popax
	cmp $a,0
	je l2558
	push "sndmich1"
	cthis mherosay
	jmp l2555
l2558:
	push sdokogo
	push "maciej"
	pop $b
	popax
	cmp $a,$b
	je l2560
	push 0
	jmp l2561
l2560:
	push 1
l2561:
	popax
	cmp $a,0
	je l2562
	push "sndmac1"
	cthis mherosay
	jmp l2559
l2562:
l2559:
l2555:
	end method
	method mfinp3
	push "sndmich2"
	cthis mherosay
	end method
	method mfinp4
	push bdolas
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2564
	push 0
	jmp l2565
l2564:
	push 1
l2565:
	popax
	cmp $a,0
	je l2566
	cthis mfinito
	jmp l2563
l2566:
	cthis mnorma
l2563:
	end method
	method mfinp5
	cthis mnorma
	end method
	method mfinmich1
	push "sndp3"
	cthis mpiastsay
	end method
	method mfinmich2
	cthis mnorma
	end method
	method mfinmich3
	cthis mnorma
	call sfxhela,play
	end method
	method mfinmich4
	push "sndmac4"
	cthis mherosay
	end method
	method mfinmac1
	cthis mnorma
	end method
	method mfinmac2
	cthis mnorma
	end method
	method mfinmac3
	cthis mnorma
	end method
	method mfinmac4
	cthis mnorma
	end method
	method mfinito
	push "gamepart4grzybki"
	call gameapi,play
	end method
	method mptreach
	localstring $1
	pop $1
	call ptpiast,stand
	push $1
	push "maciej"
	pop $b
	popax
	cmp $a,$b
	je l2568
	push 0
	jmp l2569
l2568:
	push 1
l2569:
	popax
	cmp $a,0
	je l2570
	push "gadalmac"
	call clq,isdone
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2572
	push 0
	jmp l2573
l2572:
	push 1
l2573:
	popax
	cmp $a,0
	je l2574
	push $1
	pop sdokogo
	push "sndp2"
	cthis mpiastsay
	push "gadalmac"
	call clq,done
	jmp l2571
l2574:
	push "sndmac3"
	cthis mherosay
l2571:
	jmp l2567
l2570:
	push $1
	push "michal"
	pop $b
	popax
	cmp $a,$b
	je l2576
	push 0
	jmp l2577
l2576:
	push 1
l2577:
	popax
	cmp $a,0
	je l2578
	push "gadalmich"
	call clq,isdone
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2580
	push 0
	jmp l2581
l2580:
	push 1
l2581:
	popax
	cmp $a,0
	je l2582
	push $1
	pop sdokogo
	push "sndp2"
	cthis mpiastsay
	push "gadalmich"
	call clq,done
	jmp l2579
l2582:
	push "sndmich3"
	cthis mherosay
l2579:
	jmp l2575
l2578:
	push $1
	push "las"
	pop $b
	popax
	cmp $a,$b
	je l2584
	push 0
	jmp l2585
l2584:
	push 1
l2585:
	popax
	cmp $a,0
	je l2586
	push "gadalmac"
	call clq,isdone
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2588
	push 0
	jmp l2589
l2588:
	push 1
l2589:
	popax
	cmp $a,0
	je l2590
	push "makosz"
	call clq,isdone
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2592
	push 0
	jmp l2593
l2592:
	push 1
l2593:
	popax
	cmp $a,0
	je l2594
	push "sndmac2"
	cthis mherosay
	jmp l2591
l2594:
	push "mowildolas"
	call clq,isdone
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2596
	push 0
	jmp l2597
l2596:
	push 1
l2597:
	popax
	cmp $a,0
	je l2598
	cthis mfinito
	jmp l2595
l2598:
	push "sndp4"
	cthis mpiastsay
	push 1
	pop bdolas
l2595:
l2591:
	jmp l2587
l2590:
	push "sndp4"
	cthis mpiastsay
	push "mowildolas"
	call clq,done
	push 0
	pop bdolas
l2587:
	jmp l2583
l2586:
	push $1
	push "kosz"
	pop $b
	popax
	cmp $a,$b
	je l2600
	push 0
	jmp l2601
l2600:
	push 1
l2601:
	popax
	cmp $a,0
	je l2602
	push "makosz"
	call clq,done
	push "kosz"
	call clm,disable
	push "sndp5"
	cthis mpiastsay
	call sfxgetitem,play
	jmp l2599
l2602:
l2599:
l2583:
l2575:
l2567:
	end method
	method mclickmask
	localstring $1
	pop $1
	cthis mtimreset
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	jne l2604
	push 0
	jmp l2605
l2604:
	push 1
l2605:
	popax
	cmp $a,0
	je l2606
	ret
	jmp l2603
l2606:
l2603:
	push $1
	push "maciej"
	pop $b
	popax
	cmp $a,$b
	je l2608
	push 0
	jmp l2609
l2608:
	push 1
l2609:
	popax
	cmp $a,0
	je l2610
	push "ptpiast"
	push smaciej
	push $1
	push 60
	popax
	sub 0,$a
	push 50
	cthis cwalkto2
	jmp l2607
l2610:
	push $1
	push "michal"
	pop $b
	popax
	cmp $a,$b
	je l2612
	push 0
	jmp l2613
l2612:
	push 1
l2613:
	popax
	cmp $a,0
	je l2614
	push "ptpiast"
	push smichal
	push $1
	push 60
	popax
	sub 0,$a
	push 50
	cthis cwalkto2
	jmp l2611
l2614:
	push $1
	push "las"
	pop $b
	popax
	cmp $a,$b
	je l2616
	push 0
	jmp l2617
l2616:
	push 1
l2617:
	popax
	cmp $a,0
	je l2618
	push "ptpiast"
	push sanlas
	push $1
	push 0
	push 0
	cthis cwalkto2
	jmp l2615
l2618:
	push $1
	push "kosz"
	pop $b
	popax
	cmp $a,$b
	je l2620
	push 0
	jmp l2621
l2620:
	push 1
l2621:
	popax
	cmp $a,0
	je l2622
	push "ptpiast"
	push skosz
	push $1
	push 0
	push 40
	cthis cwalkto2
	jmp l2619
l2622:
l2619:
l2615:
l2611:
l2607:
	end method
	method mouselclick
	cthis advclick
	cthis mtimreset
	end method
	end game

	game gamemacki2
	parent gamemacki
	method init
	clparent gamemacki,init
	cthis mloadpiast
	push "dbwavs"
	push "gamemacki2wavs.db"
	cthis cloadwavs
	push "clm"
	push "maska.pyz"
	push "imglobcurs"
	push "mclickmask"
	cthis newclmaskfunc
	push "las"
	call clm,disable
	new string,sandom
	push "dom"
	call clm,getimg
	pop sandom
	push "smaciej"
	push "maciej"
	push "maciej"
	cthis mbuildmask
	push "anpiast"
	push 300
	push 135
	cthis cputgr2
	push 60
	push 40
	call ptpiast,gotorel
	end method
	method mstartgame
	push 1
	pop igmstate
	end method
	method mfinp1
	push "sndobaj"
	cthis mherosay
	end method
	method mfinm1
	push "mgadal"
	call clq,isdone
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2624
	push 0
	jmp l2625
l2624:
	push 1
l2625:
	popax
	cmp $a,0
	je l2626
	cthis mnorma
	jmp l2623
l2626:
	push "mgadal"
	call clq,done
	push "sndp1"
	cthis mpiastsay
l2623:
	end method
	method mfinobaj
	cthis mnorma
	end method
	method mfinito
	push "gamepart4gotuj"
	call gameapi,play
	end method
	method mptreach
	localstring $1
	pop $1
	call ptpiast,stand
	push $1
	push "maciej"
	pop $b
	popax
	cmp $a,$b
	je l2628
	push 0
	jmp l2629
l2628:
	push 1
l2629:
	popax
	cmp $a,0
	je l2630
	push "sndm1"
	cthis mherosay
	jmp l2627
l2630:
	push $1
	push "dom"
	pop $b
	popax
	cmp $a,$b
	je l2632
	push 0
	jmp l2633
l2632:
	push 1
l2633:
	popax
	cmp $a,0
	je l2634
	push "mgadal"
	call clq,isdone
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2636
	push 0
	jmp l2637
l2636:
	push 1
l2637:
	popax
	cmp $a,0
	je l2638
	cthis mfinito
	jmp l2635
l2638:
	cthis mnorma
l2635:
	jmp l2631
l2634:
l2631:
l2627:
	end method
	method mclickmask
	localstring $1
	pop $1
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	jne l2640
	push 0
	jmp l2641
l2640:
	push 1
l2641:
	popax
	cmp $a,0
	je l2642
	ret
	jmp l2639
l2642:
l2639:
	push $1
	push "maciej"
	pop $b
	popax
	cmp $a,$b
	je l2644
	push 0
	jmp l2645
l2644:
	push 1
l2645:
	popax
	cmp $a,0
	je l2646
	push "ptpiast"
	push smaciej
	push $1
	push 0
	push 70
	cthis cwalkto2
	jmp l2643
l2646:
	push $1
	push "dom"
	pop $b
	popax
	cmp $a,$b
	je l2648
	push 0
	jmp l2649
l2648:
	push 1
l2649:
	popax
	cmp $a,0
	je l2650
	push "ptpiast"
	push sandom
	push $1
	push 0
	push 0
	cthis cwalkto2
	jmp l2647
l2650:
l2647:
l2643:
	end method
	method mouselclick
	cthis advclick
	end method
	end game

	game gamemacki3
	parent gamemacki
	method init
	clparent gamemacki,init
	push "dbwavs"
	push "gamemacki3wavs.db"
	cthis cloadwavs
	push "anlot"
	push "samolocik.pyz"
	push 1000
	cthis newstdanima
	push "anlot"
	push "ansmig"
	cthis copyanima
	push 1
	call ansmig,anloopplay
	push "anlot"
	push "antor"
	cthis copyanima
	push "antor"
	push 2
	push "mfintor"
	cthis cnplaywithfin
	push "onendframe"
	push "mframetor"
	call antor,addmethod
	call antor,hide
	push 100
	push 100
	call antor,setpos
	cthis mstartgame
	call antor,mframetor
	end method
	method mfinp1
	push 2
	pop igmstate
	end method
	method mfinmich1
	push "sndmac1"
	cthis cbplay
	end method
	method mfinmich2
	push "sndmac2"
	cthis cbplay
	end method
	method mfinmich3
	cthis mfinito
	end method
	method mfinmac1
	push "sndp1"
	cthis cbplay
	end method
	method mfinmac2
	push "sndmich3"
	cthis cbplay
	end method
	method mframetor
	push igmstate
	push 2
	pop $b
	popax
	cmp $a,$b
	jne l2652
	push 0
	jmp l2653
l2652:
	push 1
l2653:
	popax
	cmp $a,0
	je l2654
	localint $1
	cthis getpx
	pop $1
	localint $2
	cthis getpy
	pop $2
	push $1
	push $2
	call anlot,setpos
	push $1
	push $2
	call ansmig,setpos
	jmp l2651
l2654:
	push 20
	push 1
	call anlot,move
	push 20
	push 1
	call ansmig,move
	call ansmig,getpx
	push 800
	pop $b
	popax
	cmp $a,$b
	ja l2656
	push 0
	jmp l2657
l2656:
	push 1
l2657:
	popax
	cmp $a,0
	je l2658
	call ansmig,anhide
	call anlot,anhide
	cthis anhide
	push 1
	popax
	sub 0,$a
	call anbg0,play
	push 1
	popax
	sub 0,$a
	call anbg1,play
	push "sndmich2"
	cthis cbplay
	jmp l2655
l2658:
l2655:
l2651:
	end method
	method mfintor
	push 1
	popax
	sub 0,$a
	cthis play
	cthis hide
	end method
	method mstartgame
	push 1
	pop igmstate
	push "sndmich1"
	cthis cbplay
	end method
	method mfinito
	push "gamelot2"
	call gameapi,play
	end method
	end game

	game gamepart4grzybki
	parent classadvpiast
	method init
	clparent classadvpiast,init
	push "scripts/part4/grzybki/"
	push "bkg.png"
	push "elementy.pyz"
	cthis cloadterrain
	new int,GRZYBZ
	push 10
	pop GRZYBZ
	new int,ilegrzybow
	push "angrzyb"
	push "grzybki.pyz"
	push 0
	push GRZYBZ
	cthis loadanframes
	pop ilegrzybow
	new int,ilezostalo
	push ilegrzybow
	pop ilezostalo
	push "dbwav"
	push "wavs.db"
	cthis cloadwavs
	push "sndp1"
	push "mstart"
	cthis cbplaywithfin
	end method
	method mstart
	push 1
	pop igmstate
	end method
	method mfinito
	push "gamemacki2"
	call gameapi,play
	end method
	method mouselclick
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2660
	push 0
	jmp l2661
l2660:
	push 1
l2661:
	popax
	cmp $a,0
	je l2662
	localstring $1
	call mouse,getpx
	call mouse,getpy
	push 1
	push 1
	push GRZYBZ
	push GRZYBZ
	call engine,getimg
	pop $1
	push $1
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l2664
	push 0
	jmp l2665
l2664:
	push 1
l2665:
	push 2
	push 3
	call $1,getb
	push "grz"
	pop $b
	popax
	cmp $a,$b
	je l2666
	push 0
	jmp l2667
l2666:
	push 1
l2667:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l2668
	push $1
	popax
	spush $a
	spop $a
	call [$a],hide
	call sfxgetitem,play
	sub ilezostalo,1
	pop ilezostalo
	push ilezostalo
	push ilegrzybow
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	cmp $a,$b
	je l2670
	push 0
	jmp l2671
l2670:
	push 1
l2671:
	popax
	cmp $a,0
	je l2672
	push "sndp2"
	cthis crplay
	jmp l2669
l2672:
	push ilezostalo
	push 3
	pop $b
	popax
	cmp $a,$b
	je l2674
	push 0
	jmp l2675
l2674:
	push 1
l2675:
	popax
	cmp $a,0
	je l2676
	push "sndp3"
	cthis crplay
	jmp l2673
l2676:
	push ilezostalo
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2678
	push 0
	jmp l2679
l2678:
	push 1
l2679:
	popax
	cmp $a,0
	je l2680
	push "sndp4"
	cthis crplay
	jmp l2677
l2680:
	push ilezostalo
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2682
	push 0
	jmp l2683
l2682:
	push 1
l2683:
	popax
	cmp $a,0
	je l2684
	push 2
	pop igmstate
	push "sndp5"
	push "mfinito"
	cthis cbplaywithfin
	jmp l2681
l2684:
l2681:
l2677:
l2673:
l2669:
	jmp l2663
l2668:
l2663:
	jmp l2659
l2662:
l2659:
	end method
	end game

	game gamepart4gotuj
	parent classadvpiast
	method init
	clparent classadvpiast,init
	push "scripts/part4/gotuj/"
	push "bkg.png"
	push "elements.pyz"
	cthis cloadterrain
	new int,PRODZ
	push 100
	pop PRODZ
	localint $1
	push "angot"
	push "produkty.pyz"
	push PRODZ
	cthis loadanfrbyact
	pop $1
	new classmask,clm
	localint $2
	localint $3
	localstring $4
	localint $5
	push 0
	pop $5
l2685:
	push $5
	push $1
	pop $b
	popax
	cmp $a,$b
	jl l2686
	push 0
	jmp l2687
l2686:
	push 1
l2687:
	popax
	cmp $a,0
	je l2688
	jmp l2690
l2689:
	add $5,1
	pop $5
	jmp l2685
l2690:
	push $5
	call angot0_0,nofframes
	pop $2
	push 0
	pop $3
l2691:
	push $3
	push $2
	pop $b
	popax
	cmp $a,$b
	jl l2692
	push 0
	jmp l2693
l2692:
	push 1
l2693:
	popax
	cmp $a,0
	je l2694
	jmp l2696
l2695:
	add $3,1
	pop $3
	jmp l2691
l2696:
	push "angot"
	push $5
	pop $b
	popax
	add $a,$b
	push "_"
	pop $b
	popax
	add $a,$b
	push $3
	pop $b
	popax
	add $a,$b
	pop $4
	push $4
	call clanpack,resizemethods
	push $4
	push $4
	push "imglobcurs"
	push 0
	call clm,addmask
	jmp l2695
l2694:
	jmp l2689
l2688:
	push "mclickmask"
	call clm,clickfunc
	push "mmovmask"
	call clm,movonfunc
	new string,smoved
	new int,idialog
	push 0
	pop idialog
	new int,brestart
	push 0
	pop brestart
	new int,iilewrzucil
	new int,iilejest
	push "dbwav"
	push "wavs.db"
	cthis cloadwavs
	new vector,vpom
	push "string"
	call vpom,type
	push "dbdial"
	push "dialog.db"
	cthis newdb
	new int,ilastdial
	call dbdial,getrowsno
	push 1
	pop $b
	popax
	sub $a,$b
	pop ilastdial
	new vector,vgrzyb
	push "string"
	call vgrzyb,type
	push "begin"
	push "chuba"
	push "sndm17"
	push "muchomor"
	push "sndm18"
	push "borszatan"
	push "sndm19"
	call vgrzyb,beginadd
	push "sndm1"
	cthis cbplay
	end method
	method mreaddial
	push 2
	pop igmstate
	push idialog
	call dbdial,getrowsno
	pop $b
	popax
	cmp $a,$b
	jae l2698
	push 0
	jmp l2699
l2698:
	push 1
l2699:
	popax
	cmp $a,0
	je l2700
	push "sndm20"
	cthis cbplay
	jmp l2697
l2700:
	push "vpom"
	push idialog
	call dbdial,copyvec
	push 0
	pop iilewrzucil
	push 1
	call vpom,get
	pop iilejest
	push "snd"
	push 0
	call vpom,get
	pop $b
	popax
	add $a,$b
	cthis cbplay
l2697:
	end method
	method mquestfin
	push 1
	pop igmstate
	end method
	method mchecksklad
	localstring $1
	pop $1
	push 2
	pop igmstate
	push $1
	call clm,disable
	localstring $2
	push $1
	popax
	spush $a
	spop $a
	call [$a],actionname
	pop $2
	localint $3
	push $2
	call vpom,find
	pop $3
	push $3
	push 0
	pop $b
	popax
	cmp $a,$b
	jl l2702
	push 0
	jmp l2703
l2702:
	push 1
l2703:
	popax
	cmp $a,0
	je l2704
	localint $4
	push $2
	call vgrzyb,find
	pop $4
	push $4
	push 0
	pop $b
	popax
	cmp $a,$b
	jae l2706
	push 0
	jmp l2707
l2706:
	push 1
l2707:
	popax
	cmp $a,0
	je l2708
	push $4
	push 1
	pop $b
	popax
	add $a,$b
	call vgrzyb,get
	cthis cbplay
	jmp l2705
l2708:
	push "sndm16"
	cthis cbplay
l2705:
	jmp l2701
l2704:
	push $3
	push "null"
	call vpom,set
	add iilewrzucil,1
	pop iilewrzucil
	push iilewrzucil
	push iilejest
	pop $b
	popax
	cmp $a,$b
	je l2710
	push 0
	jmp l2711
l2710:
	push 1
l2711:
	call vpom,size
	push 2
	pop $b
	popax
	sub $a,$b
	call vpom,get
	push "last"
	pop $b
	popax
	cmp $a,$b
	je l2712
	push 0
	jmp l2713
l2712:
	push 1
l2713:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l2714
	push "snd"
	call vpom,size
	push 1
	pop $b
	popax
	sub $a,$b
	call vpom,get
	pop $b
	popax
	add $a,$b
	cthis cbplay
	jmp l2709
l2714:
	push "snd"
	push $3
	push 1
	pop $b
	popax
	add $a,$b
	call vpom,get
	pop $b
	popax
	add $a,$b
	cthis cbplay
l2709:
l2701:
	end method
	method mcheckdial
	push iilewrzucil
	push iilejest
	pop $b
	popax
	cmp $a,$b
	je l2716
	push 0
	jmp l2717
l2716:
	push 1
l2717:
	popax
	cmp $a,0
	je l2718
	add idialog,1
	pop idialog
	cthis mreaddial
	jmp l2715
l2718:
	push 1
	pop igmstate
l2715:
	end method
	method mfinp19
	push "gamemacki3"
	call gameapi,play
	end method
	method mfinm1
	cthis mreaddial
	end method
	method mfinm20
	push "sndp19"
	cthis cbplay
	end method
	method mplayrestart
	push brestart
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2720
	push 0
	jmp l2721
l2720:
	push 1
l2721:
	popax
	cmp $a,0
	je l2722
	push "sndp17"
	cthis cbplay
	push 1
	pop brestart
	jmp l2719
l2722:
	push "sndp18"
	cthis cbplay
l2719:
	end method
	method mrestart
	call clm,enableall
	push 0
	pop idialog
	push 0
	pop igmstate
	push "sndm1"
	cthis cbplay
	end method
	method mmovmask
	localstring $1
	pop $1
	push smoved
	push "null"
	pop $b
	popax
	cmp $a,$b
	je l2724
	push 0
	jmp l2725
l2724:
	push 1
l2725:
	popax
	cmp $a,0
	je l2726
	call sfxmv,playif
	jmp l2723
l2726:
l2723:
	end method
	method mclickmask
	localstring $1
	pop $1
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2728
	push 0
	jmp l2729
l2728:
	push 1
l2729:
	popax
	cmp $a,0
	je l2730
	push $1
	pop smoved
	push $1
	popax
	spush $a
	spop $a
	call [$a],mssaverelpos
	push $1
	popax
	spush $a
	push 1000
	spop $a
	call [$a],setz
	call sfxget,play
	jmp l2727
l2730:
l2727:
	end method
	method msay
	localstring $1
	pop $1
	push 2
	pop igmstate
	push $1
	cthis cbplay
	end method
	method mouselrel
	push smoved
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l2732
	push 0
	jmp l2733
l2732:
	push 1
l2733:
	popax
	cmp $a,0
	je l2734
	call mouse,getpx
	call mouse,getpy
	push 1
	push 1
	call anbg1,isin
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2736
	push 0
	jmp l2737
l2736:
	push 1
l2737:
	popax
	cmp $a,0
	je l2738
	push smoved
	cthis mchecksklad
	call sfxput,play
	jmp l2735
l2738:
	call sfxret,play
l2735:
	push smoved
	popax
	spush $a
	push 0
	push 0
	spop $a
	call [$a],setpos
	push smoved
	popax
	spush $a
	push PRODZ
	spop $a
	call [$a],setz
	push "null"
	pop smoved
	jmp l2731
l2734:
l2731:
	end method
	method mouselclick
	push igmdebug
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2740
	push 0
	jmp l2741
l2740:
	push 1
l2741:
	popax
	cmp $a,0
	je l2742
	push 1
	cthis cactsndstop
	jmp l2739
l2742:
l2739:
	end method
	method mousemove
	push smoved
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l2744
	push 0
	jmp l2745
l2744:
	push 1
l2745:
	popax
	cmp $a,0
	je l2746
	push smoved
	popax
	spush $a
	spop $a
	call [$a],mssetrelpos
	jmp l2743
l2746:
l2743:
	end method
	end game

	game gamelot2
	parent classadvpiast
	method init
	clparent classadvpiast,init
	push "scripts/lot2/"
	cthis setgraphpath
	cthis cstdbkg
	push "anlot"
	push "samolot.pyz"
	push 50
	cthis newanima
	push "anlot"
	push "ansmig"
	cthis copyanima
	localint $1
	call anlot,getz
	push 1
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	call ansmig,setz
	push "anlot"
	push "ankat"
	cthis copyanima
	push $1
	call ankat,setz
	push "onendframe"
	push "mkatframe"
	call ankat,addmethod
	push "onendframe"
	push "mlotframe"
	call anlot,addmethod
	new gmobjvec,grlot
	push "anlot"
	call grlot,add
	push "ankat"
	call grlot,add
	push "ansmig"
	call grlot,add
	push 0
	push "mlotfin"
	call anlot,anplayfin
	push 1
	call ansmig,anloopplay
	push 2
	push 0
	call ankat,setframe
	localint $2
	push 15
	pop $2
	localstring $3
	push "cnjp"
	push "anjap"
	push "jappocisk.pyz"
	push 49
	push $2
	push "mjapfin"
	cthis newancounterhf
	push 10
	pop $2
	push "cnsk"
	push "ansk"
	push "skaly.pyz"
	push 10
	push $2
	cthis newancounterh
	localint $4
	push 0
	pop $4
l2747:
	push $4
	push $2
	pop $b
	popax
	cmp $a,$b
	jl l2748
	push 0
	jmp l2749
l2748:
	push 1
l2749:
	popax
	cmp $a,0
	je l2750
	jmp l2752
l2751:
	add $4,1
	pop $4
	jmp l2747
l2752:
	push "ansk"
	push $4
	pop $b
	popax
	add $a,$b
	pop $3
	push $3
	push 3
	popax
	sub 0,$a
	push 0
	push 0
	cthis mstdsigs
	jmp l2751
l2750:
	push 60
	pop $2
	localint $5
	push "cnstw"
	push "anstw"
	push "stworki.pyz"
	push 20
	push $2
	cthis newancounterh
	push 0
	pop $4
l2753:
	push $4
	push $2
	pop $b
	popax
	cmp $a,$b
	jl l2754
	push 0
	jmp l2755
l2754:
	push 1
l2755:
	popax
	cmp $a,0
	je l2756
	jmp l2758
l2757:
	add $4,1
	pop $4
	jmp l2753
l2758:
	push "anstw"
	push $4
	pop $b
	popax
	add $a,$b
	pop $3
	push 4
	call $4,rand
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2760
	push 0
	jmp l2761
l2760:
	push 1
l2761:
	popax
	cmp $a,0
	je l2762
	push 15
	popax
	sub 0,$a
	push 3
	call $4,rand
	pop $b
	popax
	sub $a,$b
	pop $5
	jmp l2759
l2762:
	push 15
	push 4
	call $4,rand
	pop $b
	popax
	add $a,$b
	pop $5
l2759:
	push $3
	push 5
	popax
	sub 0,$a
	push 3
	call $4,rand
	pop $b
	popax
	sub $a,$b
	push $5
	push 10
	push 8
	call $4,rand
	pop $b
	popax
	add $a,$b
	cthis mstdsigs
	jmp l2757
l2756:
	push 35
	pop $2
	push "cnbab"
	push "anbab"
	push "babajaga.pyz"
	push 20
	push $2
	cthis newancounterh
	push "cnpoc"
	push "anpoc"
	push "pocisk.pyz"
	push 60
	push $2
	cthis newancounterh
	push 0
	pop $4
l2763:
	push $4
	push $2
	pop $b
	popax
	cmp $a,$b
	jl l2764
	push 0
	jmp l2765
l2764:
	push 1
l2765:
	popax
	cmp $a,0
	je l2766
	jmp l2768
l2767:
	add $4,1
	pop $4
	jmp l2763
l2768:
	push "anbab"
	push $4
	pop $b
	popax
	add $a,$b
	pop $3
	push 4
	call $4,rand
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2770
	push 0
	jmp l2771
l2770:
	push 1
l2771:
	popax
	cmp $a,0
	je l2772
	push 15
	popax
	sub 0,$a
	push 3
	call $4,rand
	pop $b
	popax
	sub $a,$b
	pop $5
	jmp l2769
l2772:
	push 15
	push 4
	call $4,rand
	pop $b
	popax
	add $a,$b
	pop $5
l2769:
	push $3
	popax
	spush $a
	push 3
	popax
	sub 0,$a
	push 3
	call $4,rand
	pop $b
	popax
	sub $a,$b
	push $5
	push 10
	push 8
	call $4,rand
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],mbuildv
	push $3
	popax
	spush $a
	push "onendframe"
	push "mobframe"
	spop $a
	call [$a],addmethod
	push $3
	popax
	spush $a
	push "onfinish"
	push "mbabfin"
	spop $a
	call [$a],addmethod
	push "anpoc"
	push $4
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	push "onfinish"
	push "mpociskfin"
	spop $a
	call [$a],addmethod
	jmp l2767
l2766:
	push 20
	pop $2
	push "cnchm"
	push "anchm"
	push "chmury.pyz"
	push 60
	push $2
	cthis newancounterh
	push "cnpr"
	push "anpr"
	push "peruny.pyz"
	push 59
	push $2
	cthis newancounterh
	push 0
	pop $4
l2773:
	push $4
	push $2
	pop $b
	popax
	cmp $a,$b
	jl l2774
	push 0
	jmp l2775
l2774:
	push 1
l2775:
	popax
	cmp $a,0
	je l2776
	jmp l2778
l2777:
	add $4,1
	pop $4
	jmp l2773
l2778:
	push 9
	popax
	sub 0,$a
	push 2
	call $4,rand
	pop $b
	popax
	sub $a,$b
	pop $5
	push "anchm"
	push $4
	pop $b
	popax
	add $a,$b
	push $5
	push 0
	push 0
	cthis mstdsigs
	push "anpr"
	push $4
	pop $b
	popax
	add $a,$b
	pop $3
	push $3
	cthis looponfinish
	push $3
	popax
	spush $a
	push $5
	push 0
	push 0
	spop $a
	call [$a],mbuildv
	push $3
	popax
	spush $a
	push "onendframe"
	push "mpiorunframe"
	spop $a
	call [$a],addmethod
	jmp l2777
l2776:
	push igmeasy
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2780
	push 0
	jmp l2781
l2780:
	push 1
l2781:
	popax
	cmp $a,0
	je l2782
	push "dbload"
	push "easydroga.db"
	cthis newdb
	jmp l2779
l2782:
	push "dbload"
	push "droga.db"
	cthis newdb
l2779:
	push "timload"
	push 1000
	push 1
	push "mtimloadfin"
	cthis cnewtimerfin
	new int,itiml
	push 0
	pop itiml
	new classlives,clliv
	push 100
	push 3
	push 20
	push 10
	push 9
	push 245
	push 43
	push 45
	push 255
	push 45
	push 12
	push 245
	push 255
	push 200
	push "left"
	call clliv,set
	new vector,vstw
	push "string"
	call vstw,type
	push "begin"
	push "sfxbat"
	push "sfxbat"
	push "sfxbat"
	push "sfxwron"
	push "sfxwau"
	push "sfxwau"
	push "sndbab13"
	push "sndbab11"
	push "sndbab12"
	call vstw,beginadd
	push 100
	push 150
	call grlot,setpos
	push "dbwav"
	push "wavs.db"
	cthis cloadwavs
	push 1
	pop igmstate
	push "sndp1"
	cthis cbplay
	end method
	method mfinp2
	end method
	method mfinp1
	cthis mstart
	end method
	method mfinp3
	push "gamelot2outro"
	call gameapi,play
	end method
	method mbabfin
	push 1
	popax
	sub 0,$a
	cthis actionnr
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2784
	push 0
	jmp l2785
l2784:
	push 1
l2785:
	popax
	cmp $a,0
	je l2786
	localint $1
	push 20
	call $1,rand
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2788
	push 0
	jmp l2789
l2788:
	push 1
l2789:
	popax
	cmp $a,0
	je l2790
	push "sndbab21"
	cthis crbgplay
	jmp l2787
l2790:
l2787:
	localstring $2
	call cnpoc,get
	pop $2
	push $2
	popax
	spush $a
	cthis getpx
	cthis getpy
	spop $a
	call [$a],setpos
	push $2
	popax
	spush $a
	push 0
	spop $a
	call [$a],play
	call sfxfir2,playif
	jmp l2783
l2786:
	push 0
	call sndbab21,stop
l2783:
	push 1
	popax
	sub 0,$a
	cthis play
	end method
	method mstdsigs
	localstring $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	cthis looponfinish
	push $1
	popax
	spush $a
	push $2
	push $3
	push $4
	spop $a
	call [$a],mbuildv
	push $1
	popax
	spush $a
	push "onendframe"
	push "mobframe"
	spop $a
	call [$a],addmethod
	end method
	method msetwavs
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	pop sbr
	push $2
	pop sbm
	push $3
	pop sa
	end method
	method msetdy
	localint $1
	pop $1
	push $1
	pop ivy
	end method
	method mbuildv
	localint $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	new int,ivy
	push $1
	pop ivy
	new int,idx
	push $2
	pop idx
	new int,idy
	push $3
	pop idy
	new int,idead
	push 0
	pop idead
	new string,sbr
	new string,sbm
	new string,sa
	new int,iranddie
	push 100
	pop iranddie
	end method
	method mdie
	localint $1
	pop $1
	push $1
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2792
	push 0
	jmp l2793
l2792:
	push 1
l2793:
	push idead
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2794
	push 0
	jmp l2795
l2794:
	push 1
l2795:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l2796
	ret
	jmp l2791
l2796:
l2791:
	push idx
	push 0
	pop $b
	popax
	cmp $a,$b
	jne l2798
	push 0
	jmp l2799
l2798:
	push 1
l2799:
	push idy
	push 0
	pop $b
	popax
	cmp $a,$b
	jne l2800
	push 0
	jmp l2801
l2800:
	push 1
l2801:
	popax
	pop $b
	or $a,$b
	popax
	cmp $a,0
	je l2802
	push $1
	pop idead
	push $1
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2804
	push 0
	jmp l2805
l2804:
	push 1
l2805:
	popax
	cmp $a,0
	je l2806
	push 1
	popax
	sub 0,$a
	cthis actionnr
	push 1
	pop $b
	popax
	add $a,$b
	cthis play
	call cfbum,bgplay
	push iranddie
	call $1,rand
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2808
	push 0
	jmp l2809
l2808:
	push 1
l2809:
	popax
	cmp $a,0
	je l2810
	push sa
	cthis crbgplay
	jmp l2807
l2810:
l2807:
	jmp l2803
l2806:
l2803:
	jmp l2797
l2802:
l2797:
	end method
	method mcheckpbum
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 1
	call anlot,isin
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2812
	push 0
	jmp l2813
l2812:
	push 1
l2813:
	popax
	cmp $a,0
	je l2814
	cthis mbumwlot
	push sbm
	cthis crbgplay
	jmp l2811
l2814:
l2811:
	end method
	method mpiorunframe
	push ivy
	push 0
	cthis move
	cthis getex
	push 0
	pop $b
	popax
	cmp $a,$b
	jle l2816
	push 0
	jmp l2817
l2816:
	push 1
l2817:
	popax
	cmp $a,0
	je l2818
	cthis anhide
	jmp l2815
l2818:
	push "au"
	call anlot,isplaying
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2820
	push 0
	jmp l2821
l2820:
	push 1
l2821:
	popax
	cmp $a,0
	je l2822
	localint $1
	push 1
	popax
	sub 0,$a
	cthis actionnr
	pop $1
	localint $2
	cthis getey
	pop $2
	push $1
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2824
	push 0
	jmp l2825
l2824:
	push 1
l2825:
	popax
	cmp $a,0
	je l2826
	cthis getex
	push $2
	cthis mcheckpbum
	jmp l2823
l2826:
	push $1
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2828
	push 0
	jmp l2829
l2828:
	push 1
l2829:
	popax
	cmp $a,0
	je l2830
	cthis getpx
	push $2
	cthis mcheckpbum
	jmp l2827
l2830:
	cthis getex
	push $2
	cthis mcheckpbum
	cthis getpx
	push $2
	cthis mcheckpbum
	cthis getcx
	push $2
	cthis mcheckpbum
l2827:
l2823:
	cthis getpx
	cthis getpy
	cthis mcheckpbum
	jmp l2819
l2822:
l2819:
l2815:
	end method
	method mobframe
	push idead
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2832
	push 0
	jmp l2833
l2832:
	push 1
l2833:
	popax
	cmp $a,0
	je l2834
	push ivy
	push 0
	cthis move
	cthis getex
	push 0
	pop $b
	popax
	cmp $a,$b
	jle l2836
	push 0
	jmp l2837
l2836:
	push 1
l2837:
	popax
	cmp $a,0
	je l2838
	cthis anhide
	jmp l2835
l2838:
l2835:
	jmp l2831
l2834:
	push idx
	push idy
	cthis move
	cthis anonscreen
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2840
	push 0
	jmp l2841
l2840:
	push 1
l2841:
	popax
	cmp $a,0
	je l2842
	cthis anhide
	jmp l2839
l2842:
l2839:
l2831:
	end method
	method mstart
	push 1
	pop igmstate
	call timload,play
	end method
	method msetrand
	localint $1
	pop $1
	push $1
	pop iranddie
	end method
	method mwystaw
	localstring $1
	localint $2
	localint $3
	localint $4
	localstring $5
	localstring $6
	localstring $7
	localint $8
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	popax
	spush $a
	push $2
	spop $a
	call [$a],play
	push $1
	popax
	spush $a
	push 800
	push 10
	call $2,rand
	pop $b
	popax
	add $a,$b
	push $3
	push $4
	call $4,rand
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	push $1
	popax
	spush $a
	push 0
	spop $a
	call [$a],mdie
	push $1
	popax
	spush $a
	push $5
	push $6
	push $7
	spop $a
	call [$a],msetwavs
	push $1
	popax
	spush $a
	push $8
	spop $a
	call [$a],msetrand
	push $8
	call $8,rand
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2844
	push 0
	jmp l2845
l2844:
	push 1
l2845:
	popax
	cmp $a,0
	je l2846
	push $5
	cthis crbgplay
	jmp l2843
l2846:
l2843:
	end method
	method mtimloadfin
	localint $1
	push itiml
	call dbload,getcolsno
	pop $1
	localstring $2
	localstring $3
	localint $4
	localint $5
	push 0
	pop $5
l2847:
	push $5
	push $1
	pop $b
	popax
	cmp $a,$b
	jl l2848
	push 0
	jmp l2849
l2848:
	push 1
l2849:
	popax
	cmp $a,0
	je l2850
	jmp l2852
l2851:
	add $5,1
	pop $5
	jmp l2847
l2852:
	push itiml
	push $5
	call dbload,get
	pop $4
	push $4
	push 100
	pop $b
	popax
	cmp $a,$b
	jae l2854
	push 0
	jmp l2855
l2854:
	push 1
l2855:
	popax
	cmp $a,0
	je l2856
	push 100
	popax
	sub $4,$a
	pop $4
	call cnchm,get
	pop $2
	push $2
	push $4
	push 10
	pop $b
	popax
	div $a,$b
	psax
	push 10
	popax
	sub 0,$a
	push 20
	push "null"
	push "null"
	push "null"
	push 1000
	cthis mwystaw
	call cnpr,get
	pop $3
	push $4
	push 10
	pop $b
	popax
	div $a,$b
	push $d
	push 1
	pop $b
	popax
	sub $a,$b
	pop $4
	push $4
	push 0
	pop $b
	popax
	cmp $a,$b
	jae l2858
	push 0
	jmp l2859
l2858:
	push 1
l2859:
	popax
	cmp $a,0
	je l2860
	push $3
	popax
	spush $a
	push $2
	popax
	spush $a
	spop $a
	call [$a],getcx
	push $2
	popax
	spush $a
	spop $a
	call [$a],getcy
	spop $a
	call [$a],setpos
	push $3
	popax
	spush $a
	push $4
	spop $a
	call [$a],play
	push $3
	popax
	spush $a
	push "null"
	push "null"
	push "null"
	spop $a
	call [$a],msetwavs
	call sfxperun,playif
	jmp l2857
l2860:
l2857:
	jmp l2853
l2856:
	push $4
	push 20
	pop $b
	popax
	cmp $a,$b
	jae l2862
	push 0
	jmp l2863
l2862:
	push 1
l2863:
	popax
	cmp $a,0
	je l2864
	push 20
	popax
	sub $4,$a
	pop $4
	push $4
	push 3
	pop $b
	popax
	cmp $a,$b
	jae l2866
	push 0
	jmp l2867
l2866:
	push 1
l2867:
	popax
	cmp $a,0
	je l2868
	call cnbab,get
	push 0
	push 0
	push 450
	push "sndbab23"
	push "sndbab22"
	push "null"
	push 20
	cthis mwystaw
	jmp l2865
l2868:
	localint $6
	push $4
	push 3
	pop $b
	popax
	mul $a,$b
	pop $6
	call cnstw,get
	pop $2
	push $4
	push 2
	pop $b
	popax
	cmp $a,$b
	je l2870
	push 0
	jmp l2871
l2870:
	push 1
l2871:
	popax
	cmp $a,0
	je l2872
	push $2
	push $4
	push 2
	pop $b
	popax
	mul $a,$b
	push 0
	push 450
	push $6
	call vstw,get
	push $6
	push 1
	pop $b
	popax
	add $a,$b
	call vstw,get
	push $6
	push 2
	pop $b
	popax
	add $a,$b
	call vstw,get
	push 10
	cthis mwystaw
	push $2
	popax
	spush $a
	push 3
	popax
	sub 0,$a
	push 2
	call $4,rand
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],msetdy
	jmp l2869
l2872:
	push $2
	push $4
	push 2
	pop $b
	popax
	mul $a,$b
	push 0
	push 450
	push $6
	call vstw,get
	push $6
	push 1
	pop $b
	popax
	add $a,$b
	call vstw,get
	push $6
	push 2
	pop $b
	popax
	add $a,$b
	call vstw,get
	push 2
	cthis mwystaw
	push $2
	popax
	spush $a
	push 5
	popax
	sub 0,$a
	push 3
	call $5,rand
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],msetdy
l2869:
l2865:
	jmp l2861
l2864:
	push $4
	push 0
	pop $b
	popax
	cmp $a,$b
	ja l2874
	push 0
	jmp l2875
l2874:
	push 1
l2875:
	popax
	cmp $a,0
	je l2876
	call cnsk,get
	pop $2
	push $2
	push $4
	push 1
	pop $b
	popax
	sub $a,$b
	push 0
	push 1
	push "null"
	push "null"
	push "null"
	push 1000
	cthis mwystaw
	push $2
	popax
	spush $a
	push 800
	push $2
	popax
	spush $a
	spop $a
	call [$a],lodx
	pop $b
	popax
	sub $a,$b
	push 600
	push $2
	popax
	spush $a
	spop $a
	call [$a],lody
	pop $b
	popax
	sub $a,$b
	push $2
	popax
	spush $a
	spop $a
	call [$a],geth
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setpos
	jmp l2873
l2876:
l2873:
l2861:
l2853:
	jmp l2851
l2850:
	add itiml,1
	pop itiml
	push itiml
	push 30
	pop $b
	popax
	cmp $a,$b
	je l2878
	push 0
	jmp l2879
l2878:
	push 1
l2879:
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2880
	push 0
	jmp l2881
l2880:
	push 1
l2881:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l2882
	push "sndp2"
	cthis cbplay
	jmp l2877
l2882:
l2877:
	push itiml
	call dbload,getrowsno
	pop $b
	popax
	cmp $a,$b
	jae l2884
	push 0
	jmp l2885
l2884:
	push 1
l2885:
	popax
	cmp $a,0
	je l2886
	push 2
	pop igmstate
	push "sndp3"
	cthis cbplay
	jmp l2883
l2886:
	cthis play
l2883:
	end method
	method mhit
	localint $1
	localint $2
	pop $2
	pop $1
	localstring $3
	push $1
	push $2
	push 1
	push 1
	push 10
	push 40
	call engine,getimg
	pop $3
	push $3
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l2888
	push 0
	jmp l2889
l2888:
	push 1
l2889:
	popax
	cmp $a,0
	je l2890
	push $3
	popax
	spush $a
	push 1
	spop $a
	call [$a],mdie
	push 1
	ret
	jmp l2887
l2890:
	push 0
	ret
l2887:
	end method
	method mbumwlot
	push 0
	call grlot,stop
	call grlot,hide
	push "au"
	call anlot,play
	push 1
	call clliv,damage
	push "cpau"
	cthis crplay
	call cfbum2,playif
	call clliv,destroyed
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2892
	push 0
	jmp l2893
l2892:
	push 1
l2893:
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2894
	push 0
	jmp l2895
l2894:
	push 1
l2895:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l2896
	push 4
	pop igmstate
	push "sndrestart"
	cthis cbplay
	call sfxout,play
	jmp l2891
l2896:
l2891:
	end method
	method mlotframe
	push igmstate
	push 4
	pop $b
	popax
	cmp $a,$b
	je l2898
	push 0
	jmp l2899
l2898:
	push 1
l2899:
	popax
	cmp $a,0
	je l2900
	push 10
	push 8
	call grlot,move
	jmp l2897
l2900:
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	jne l2902
	push 0
	jmp l2903
l2902:
	push 1
l2903:
	popax
	cmp $a,0
	je l2904
	ret
	jmp l2901
l2904:
l2901:
l2897:
	localint $1
	cthis getpx
	pop $1
	localint $2
	cthis getex
	pop $2
	localint $3
	cthis getpy
	pop $3
	localint $4
	cthis getey
	pop $4
	localint $5
	push 0
	pop $5
	localint $6
	push 0
	pop $6
	push "up"
	call keyboard,iskeydown
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2906
	push 0
	jmp l2907
l2906:
	push 1
l2907:
	popax
	cmp $a,0
	je l2908
	push 8
	popax
	sub 0,$a
	pop $6
	jmp l2905
l2908:
	push "down"
	call keyboard,iskeydown
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2910
	push 0
	jmp l2911
l2910:
	push 1
l2911:
	popax
	cmp $a,0
	je l2912
	push 8
	pop $6
	jmp l2909
l2912:
l2909:
l2905:
	push "right"
	call keyboard,iskeydown
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2914
	push 0
	jmp l2915
l2914:
	push 1
l2915:
	popax
	cmp $a,0
	je l2916
	push 10
	pop $5
	jmp l2913
l2916:
	push "left"
	call keyboard,iskeydown
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2918
	push 0
	jmp l2919
l2918:
	push 1
l2919:
	popax
	cmp $a,0
	je l2920
	push 10
	popax
	sub 0,$a
	pop $5
	jmp l2917
l2920:
l2917:
l2913:
	push $1
	push $5
	pop $b
	popax
	add $a,$b
	push $3
	push $6
	pop $b
	popax
	add $a,$b
	push 5
	push 5
	call clsurf,inscreen
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2922
	push 0
	jmp l2923
l2922:
	push 1
l2923:
	push $2
	push $5
	pop $b
	popax
	add $a,$b
	push $4
	push $6
	pop $b
	popax
	add $a,$b
	push 5
	push 5
	call clsurf,inscreen
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2924
	push 0
	jmp l2925
l2924:
	push 1
l2925:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l2926
	push $5
	push $6
	call grlot,move
	jmp l2921
l2926:
l2921:
	push 1
	popax
	sub 0,$a
	cthis actionnr
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2928
	push 0
	jmp l2929
l2928:
	push 1
l2929:
	popax
	cmp $a,0
	je l2930
	localint $7
	cthis getcx
	pop $7
	localint $8
	cthis getcy
	pop $8
	push $1
	push $8
	cthis mhit
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2932
	push 0
	jmp l2933
l2932:
	push 1
l2933:
	push $7
	push $8
	cthis mhit
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2934
	push 0
	jmp l2935
l2934:
	push 1
l2935:
	popax
	pop $b
	or $a,$b
	push $2
	push $8
	cthis mhit
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2936
	push 0
	jmp l2937
l2936:
	push 1
l2937:
	popax
	pop $b
	or $a,$b
	push $7
	push $3
	push 10
	pop $b
	popax
	add $a,$b
	cthis mhit
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2938
	push 0
	jmp l2939
l2938:
	push 1
l2939:
	popax
	pop $b
	or $a,$b
	push $2
	push 30
	pop $b
	popax
	sub $a,$b
	push $3
	push 5
	pop $b
	popax
	add $a,$b
	cthis mhit
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2940
	push 0
	jmp l2941
l2940:
	push 1
l2941:
	popax
	pop $b
	or $a,$b
	push $7
	push 10
	pop $b
	popax
	add $a,$b
	push $4
	cthis mhit
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2942
	push 0
	jmp l2943
l2942:
	push 1
l2943:
	popax
	pop $b
	or $a,$b
	popax
	cmp $a,0
	je l2944
	cthis mbumwlot
	jmp l2931
l2944:
	push "space"
	call keyboard,iskeydown
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2946
	push 0
	jmp l2947
l2946:
	push 1
l2947:
	popax
	cmp $a,0
	je l2948
	push 1
	popax
	sub 0,$a
	call ankat,isplaying
	push 0
	pop $b
	popax
	cmp $a,$b
	je l2950
	push 0
	jmp l2951
l2950:
	push 1
l2951:
	popax
	cmp $a,0
	je l2952
	push 1
	popax
	sub 0,$a
	call ankat,play
	jmp l2949
l2952:
l2949:
	jmp l2945
l2948:
l2945:
l2931:
	jmp l2927
l2930:
l2927:
	end method
	method mkatframe
	cthis framename
	push "bum"
	pop $b
	popax
	cmp $a,$b
	je l2954
	push 0
	jmp l2955
l2954:
	push 1
l2955:
	popax
	cmp $a,0
	je l2956
	localstring $1
	call cnjp,get
	pop $1
	push $1
	popax
	spush $a
	call ankat,getex
	call ankat,getpy
	spop $a
	call [$a],setpos
	push $1
	popax
	spush $a
	push 0
	spop $a
	call [$a],play
	call sfxfir1,play
	jmp l2953
l2956:
l2953:
	end method
	method mpociskfin
	push 25
	popax
	sub 0,$a
	push 0
	cthis move
	cthis getex
	push 0
	pop $b
	popax
	cmp $a,$b
	jle l2958
	push 0
	jmp l2959
l2958:
	push 1
l2959:
	popax
	cmp $a,0
	je l2960
	cthis hide
	jmp l2957
l2960:
	cthis getcx
	cthis getcy
	push 1
	push 1
	call anlot,isin
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2962
	push 0
	jmp l2963
l2962:
	push 1
l2963:
	popax
	cmp $a,0
	je l2964
	cthis hide
	cthis mbumwlot
	jmp l2961
l2964:
	push 1
	popax
	sub 0,$a
	cthis play
l2961:
l2957:
	end method
	method mjapfin
	push 20
	push 0
	cthis move
	cthis getpx
	push 800
	pop $b
	popax
	cmp $a,$b
	jae l2966
	push 0
	jmp l2967
l2966:
	push 1
l2967:
	popax
	cmp $a,0
	je l2968
	cthis hide
	jmp l2965
l2968:
	cthis getcx
	cthis getcy
	cthis mhit
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2970
	push 0
	jmp l2971
l2970:
	push 1
l2971:
	popax
	cmp $a,0
	je l2972
	cthis hide
	push "cpok"
	cthis crplay
	jmp l2969
l2972:
	push 1
	popax
	sub 0,$a
	cthis play
l2969:
l2965:
	end method
	method mlotfin
	cthis actionname
	push "au"
	pop $b
	popax
	cmp $a,$b
	je l2974
	push 0
	jmp l2975
l2974:
	push 1
l2975:
	popax
	cmp $a,0
	je l2976
	cthis mretlot
	jmp l2973
l2976:
	push 0
	cthis play
l2973:
	end method
	method mretlot
	push 0
	call anlot,play
	push 1
	popax
	sub 0,$a
	call ansmig,play
	call ankat,show
	end method
	method mouselclick
	push igmdebug
	push 1
	pop $b
	popax
	cmp $a,$b
	je l2978
	push 0
	jmp l2979
l2978:
	push 1
l2979:
	popax
	cmp $a,0
	je l2980
	push 1
	cthis cactsndstop
	jmp l2977
l2980:
l2977:
	end method
	end game

	game gamelot2outro
	parent classadvpiast
	method init
	clparent classadvpiast,init
	push "scripts/lot2/outro/"
	push "bkg.png"
	push "samolot.pyz"
	cthis cloadterrain
	new gmobjvec,grsam
	push "anbg0"
	call grsam,add
	push "anbg1"
	call grsam,add
	push "onendframe"
	push "mlotframe"
	call anbg0,addmethod
	call anbg0,getw
	popax
	sub 0,$a
	call anbg0,lodx
	pop $b
	popax
	sub $a,$b
	push 0
	call grsam,setpos
	push "lot2nar2.wav"
	cthis cplayintro
	push "timfin"
	push 3000
	push 1
	push "mfintimfin"
	cthis cnewtimerfin
	push "sfxkrowa"
	push "sfx/krowa.wav"
	cthis newsnd
	end method
	method mlotframe
	push 15
	push 3
	call igmstate,rand
	pop $b
	popax
	add $a,$b
	push 1
	push 2
	call igmstate,rand
	pop $b
	popax
	add $a,$b
	call grsam,move
	call anbg1,getpx
	push 800
	pop $b
	popax
	cmp $a,$b
	jae l2982
	push 0
	jmp l2983
l2982:
	push 1
l2983:
	popax
	cmp $a,0
	je l2984
	call timfin,play
	call anbg0,anhide
	call anbg1,anhide
	call sfxkrowa,play
	jmp l2981
l2984:
l2981:
	end method
	method mfintimfin
	push "gamensintro"
	call gameapi,play
	end method
	end game

	game gamensintro
	parent classadvpiast
	method init
	clparent classadvpiast,init
	push "scripts/part6/intro/"
	push "bkg.png"
	push "gada.pyz"
	cthis cloadterrain
	push "dbwav"
	push "wavs.db"
	cthis cloadwavs
	call sndnar,play
	end method
	method mfinnar
	push 0
	call anbg0,play
	call sndp,play
	end method
	method mfinp
	push 0
	call anbg0,stop
	push 0
	push 0
	call anbg0,setframe
	call sndtlum,play
	end method
	method mfintlum
	push "gamenorth"
	call gameapi,play
	end method
	end game

	class clnsunit
	method init
	new gmobjvec,gr
	new vector,vecen
	push "string"
	call vecen,type
	push "getcnx"
	push "getcnx"
	call gr,addmethod
	push "getcny"
	push "getcny"
	call gr,addmethod
	new int,icx
	new int,icy
	new string,sg
	call engine,actclassname
	pop sg
	new int,ilenen
	new string,scloser
	new classwalker,cltr
	new real,rstep
	push 4
	pop rstep
	new int,bidzie
	push 0
	pop bidzie
	new int,ilnx
	new string,sarmy
	new int,irightx
	push 560
	pop irightx
	end method
	method setside
	localstring $1
	pop $1
	push $1
	pop sarmy
	end method
	method alive
	call gr,size
	ret
	end method
	method addenemy
	localstring $1
	pop $1
	push $1
	call vecen,add
	end method
	method closeren
	push 1000
	pop ilenen
	localint $1
	localstring $2
	push "null"
	pop scloser
	localint $3
	localint $4
	push 0
	pop $4
l2985:
	push $4
	call vecen,size
	pop $b
	popax
	cmp $a,$b
	jl l2986
	push 0
	jmp l2987
l2986:
	push 1
l2987:
	popax
	cmp $a,0
	je l2988
	jmp l2990
l2989:
	add $4,1
	pop $4
	jmp l2985
l2990:
	push $4
	call vecen,get
	pop $2
	push $2
	popax
	spush $a
	spop $a
	call [$a],alive
	push 0
	pop $b
	popax
	cmp $a,$b
	jne l2992
	push 0
	jmp l2993
l2992:
	push 1
l2993:
	popax
	cmp $a,0
	je l2994
	push $2
	popax
	spush $a
	spop $a
	call [$a],getcx
	cthis getcx
	pop $b
	popax
	sub $a,$b
	pop $3
	push $3
	push $2
	popax
	spush $a
	spop $a
	call [$a],getcy
	cthis getcy
	pop $b
	popax
	sub $a,$b
	call $1,length
	pop $1
	push $1
	push ilenen
	pop $b
	popax
	cmp $a,$b
	jl l2996
	push 0
	jmp l2997
l2996:
	push 1
l2997:
	popax
	cmp $a,0
	je l2998
	push $2
	pop scloser
	push $1
	pop ilenen
	push $3
	pop ilnx
	jmp l2995
l2998:
l2995:
	jmp l2991
l2994:
l2991:
	jmp l2989
l2988:
	end method
	method icloseren
	push ilenen
	ret
	end method
	method scloseren
	push scloser
	ret
	end method
	method getcnx
	localint $1
	cthis size
	pop $1
	push $1
	push 0
	pop $b
	popax
	cmp $a,$b
	je l3000
	push 0
	jmp l3001
l3000:
	push 1
l3001:
	popax
	cmp $a,0
	je l3002
	push 0
	ret
	jmp l2999
l3002:
l2999:
	localint $2
	push 0
	pop $2
	localint $3
	push 0
	pop $3
l3003:
	push $3
	push $1
	pop $b
	popax
	cmp $a,$b
	jl l3004
	push 0
	jmp l3005
l3004:
	push 1
l3005:
	popax
	cmp $a,0
	je l3006
	jmp l3008
l3007:
	add $3,1
	pop $3
	jmp l3003
l3008:
	push $3
	call lsim,get
	popax
	spush $a
	spop $a
	call [$a],getcx
	popax
	add $2,$a
	pop $2
	jmp l3007
l3006:
	push $2
	push $1
	pop $b
	popax
	div $a,$b
	psax
	ret
	end method
	method getcny
	localint $1
	cthis size
	pop $1
	push $1
	push 0
	pop $b
	popax
	cmp $a,$b
	je l3010
	push 0
	jmp l3011
l3010:
	push 1
l3011:
	popax
	cmp $a,0
	je l3012
	push 0
	ret
	jmp l3009
l3012:
l3009:
	localint $2
	push 0
	pop $2
	localint $3
	push 0
	pop $3
l3013:
	push $3
	push $1
	pop $b
	popax
	cmp $a,$b
	jl l3014
	push 0
	jmp l3015
l3014:
	push 1
l3015:
	popax
	cmp $a,0
	je l3016
	jmp l3018
l3017:
	add $3,1
	pop $3
	jmp l3013
l3018:
	push $3
	call lsim,get
	popax
	spush $a
	spop $a
	call [$a],getcy
	popax
	add $2,$a
	pop $2
	jmp l3017
l3016:
	push $2
	push $1
	pop $b
	popax
	div $a,$b
	psax
	ret
	end method
	method mvsold
	localint $1
	localint $2
	pop $2
	pop $1
	localint $3
	cthis size
	pop $3
	localint $4
	push 0
	pop $4
l3019:
	push $4
	push $3
	pop $b
	popax
	cmp $a,$b
	jl l3020
	push 0
	jmp l3021
l3020:
	push 1
l3021:
	popax
	cmp $a,0
	je l3022
	jmp l3024
l3023:
	add $4,1
	pop $4
	jmp l3019
l3024:
	push $4
	call lsim,get
	popax
	spush $a
	push $1
	push $2
	spop $a
	call [$a],setwalk
	jmp l3023
l3022:
	end method
	method move
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call gr,move
	end method
	method eval
	localstring $1
	pop $1
	push $1
	call gr,eval
	end method
	method padl
	localstring $1
	pop $1
	push $1
	call gr,remove
	cthis alive
	push 0
	pop $b
	popax
	cmp $a,$b
	je l3026
	push 0
	jmp l3027
l3026:
	push 1
l3027:
	popax
	cmp $a,0
	je l3028
	push sarmy
	popax
	spush $a
	call engine,actclassname
	spop $a
	call [$a],remove
	push sarmy
	popax
	spush $a
	spop $a
	call [$a],size
	push 0
	pop $b
	popax
	cmp $a,$b
	je l3030
	push 0
	jmp l3031
l3030:
	push 1
l3031:
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	je l3032
	push 0
	jmp l3033
l3032:
	push 1
l3033:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l3034
	push sarmy
	cthis mlooser
	jmp l3029
l3034:
l3029:
	jmp l3025
l3028:
	push icx
	push icy
	call cltr,reached
	push 1
	pop $b
	popax
	cmp $a,$b
	je l3036
	push 0
	jmp l3037
l3036:
	push 1
l3037:
	popax
	cmp $a,0
	je l3038
	cthis resetgo
	jmp l3035
l3038:
l3035:
l3025:
	end method
	method add
	localstring $1
	pop $1
	push $1
	call gr,add
	push $1
	popax
	spush $a
	push "buildsold"
	push "buildsold"
	spop $a
	call [$a],addmethod
	push $1
	popax
	spush $a
	push sg
	spop $a
	call [$a],buildsold
	push $1
	popax
	spush $a
	push "getunit"
	push "getunit"
	spop $a
	call [$a],addmethod
	push $1
	popax
	spush $a
	push "padnij"
	push "padnij"
	spop $a
	call [$a],addmethod
	push $1
	popax
	spush $a
	push "setwalk"
	push "setwalk"
	spop $a
	call [$a],addmethod
	push $1
	popax
	spush $a
	push "fire"
	push "fire"
	spop $a
	call [$a],addmethod
	push $1
	popax
	spush $a
	push "wait"
	push "wait"
	spop $a
	call [$a],addmethod
	push $1
	popax
	spush $a
	push "getstate"
	push "getstate"
	spop $a
	call [$a],addmethod
	end method
	method buildsold
	localstring $1
	pop $1
	new string,_sg
	push $1
	pop _sg
	new int,imx
	new int,imy
	new int,ist
	push 0
	pop ist
	end method
	method setwalk
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	pop imx
	push $2
	pop imy
	push 1
	pop ist
	push 0
	cthis play
	end method
	method fire
	push 2
	pop ist
	push 1
	cthis play
	end method
	method wait
	push 0
	pop ist
	end method
	method getstate
	push ist
	ret
	end method
	method getunit
	push _sg
	ret
	end method
	method padnij
	push 3
	pop ist
	push _sg
	popax
	spush $a
	cthis getname
	spop $a
	call [$a],padl
	push "au"
	cthis play
	call cpau,bgplay
	call cfhit,bgplay
	end method
	method countcenter
	call gr,getcnx
	pop icx
	call gr,getcny
	pop icy
	end method
	method getcx
	push icx
	ret
	end method
	method getcy
	push icy
	ret
	end method
	method isplaying
	localint $1
	pop $1
	push 0
	call gr,get
	popax
	spush $a
	push $1
	spop $a
	call [$a],isplaying
	ret
	end method
	method ungo
	localint $1
	localint $2
	pop $2
	pop $1
	cthis alive
	push 0
	pop $b
	popax
	cmp $a,$b
	je l3040
	push 0
	jmp l3041
l3040:
	push 1
l3041:
	push 1
	cthis isplaying
	push 1
	pop $b
	popax
	cmp $a,$b
	je l3042
	push 0
	jmp l3043
l3042:
	push 1
l3043:
	popax
	pop $b
	or $a,$b
	popax
	cmp $a,0
	je l3044
	ret
	jmp l3039
l3044:
l3039:
	push icx
	push icy
	push $1
	push $2
	push rstep
	call cltr,countsteps
	push 0
	pop $b
	popax
	cmp $a,$b
	jne l3046
	push 0
	jmp l3047
l3046:
	push 1
l3047:
	push bidzie
	push 0
	pop $b
	popax
	cmp $a,$b
	je l3048
	push 0
	jmp l3049
l3048:
	push 1
l3049:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l3050
	push 1
	pop bidzie
	cthis unwalk
	jmp l3045
l3050:
	cthis unwait
l3045:
	end method
	method unwalk
	cthis alive
	push 0
	pop $b
	popax
	cmp $a,$b
	je l3052
	push 0
	jmp l3053
l3052:
	push 1
l3053:
	popax
	cmp $a,0
	je l3054
	ret
	jmp l3051
l3054:
l3051:
	push bidzie
	push 0
	pop $b
	popax
	cmp $a,$b
	je l3056
	push 0
	jmp l3057
l3056:
	push 1
l3057:
	popax
	cmp $a,0
	je l3058
	cthis resetgo
	ret
	jmp l3055
l3058:
l3055:
	localint $1
	call cltr,getdx
	pop $1
	localint $2
	call cltr,getdy
	pop $2
	push icx
	push icy
	call cltr,reached2
	push 1
	pop $b
	popax
	cmp $a,$b
	je l3060
	push 0
	jmp l3061
l3060:
	push 1
l3061:
	push icx
	push 30
	pop $b
	popax
	cmp $a,$b
	jle l3062
	push 0
	jmp l3063
l3062:
	push 1
l3063:
	push $1
	push 0
	pop $b
	popax
	cmp $a,$b
	jl l3064
	push 0
	jmp l3065
l3064:
	push 1
l3065:
	popax
	pop $b
	and $a,$b
	popax
	pop $b
	or $a,$b
	push icx
	push irightx
	pop $b
	popax
	cmp $a,$b
	jae l3066
	push 0
	jmp l3067
l3066:
	push 1
l3067:
	push $1
	push 0
	pop $b
	popax
	cmp $a,$b
	ja l3068
	push 0
	jmp l3069
l3068:
	push 1
l3069:
	popax
	pop $b
	and $a,$b
	popax
	pop $b
	or $a,$b
	push icy
	push 50
	pop $b
	popax
	cmp $a,$b
	jle l3070
	push 0
	jmp l3071
l3070:
	push 1
l3071:
	push $2
	push 0
	pop $b
	popax
	cmp $a,$b
	jl l3072
	push 0
	jmp l3073
l3072:
	push 1
l3073:
	popax
	pop $b
	and $a,$b
	popax
	pop $b
	or $a,$b
	push icy
	push 550
	pop $b
	popax
	cmp $a,$b
	jae l3074
	push 0
	jmp l3075
l3074:
	push 1
l3075:
	push $2
	push 0
	pop $b
	popax
	cmp $a,$b
	ja l3076
	push 0
	jmp l3077
l3076:
	push 1
l3077:
	popax
	pop $b
	and $a,$b
	popax
	pop $b
	or $a,$b
	popax
	cmp $a,0
	je l3078
	cthis unwait
	jmp l3059
l3078:
	push 0
	cthis isplaying
	push 0
	pop $b
	popax
	cmp $a,$b
	je l3080
	push 0
	jmp l3081
l3080:
	push 1
l3081:
	popax
	cmp $a,0
	je l3082
	push $1
	push $2
	call gr,mvsold
	jmp l3079
l3082:
l3079:
	cthis countcenter
l3059:
	end method
	method resetgo
	cthis countcenter
	push icx
	push icy
	call cltr,setdest
	push 0
	pop bidzie
	end method
	method unfire
	localint $1
	pop $1
	cthis alive
	push 0
	pop $b
	popax
	cmp $a,$b
	je l3084
	push 0
	jmp l3085
l3084:
	push 1
l3085:
	popax
	cmp $a,0
	je l3086
	ret
	jmp l3083
l3086:
l3083:
	push 1
	cthis isplaying
	push 0
	pop $b
	popax
	cmp $a,$b
	je l3088
	push 0
	jmp l3089
l3088:
	push 1
l3089:
	popax
	cmp $a,0
	je l3090
	cthis resetgo
	push "fire"
	call gr,eval
	push "sfxfire"
	push $1
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	spop $a
	call [$a],play
	jmp l3087
l3090:
l3087:
	end method
	method unwait
	cthis alive
	push 0
	pop $b
	popax
	cmp $a,$b
	je l3092
	push 0
	jmp l3093
l3092:
	push 1
l3093:
	popax
	cmp $a,0
	je l3094
	ret
	jmp l3091
l3094:
l3091:
	cthis resetgo
	push 1
	popax
	sub 0,$a
	cthis isplaying
	push 0
	pop $b
	popax
	cmp $a,$b
	je l3096
	push 0
	jmp l3097
l3096:
	push 1
l3097:
	popax
	cmp $a,0
	je l3098
	push "wait"
	call gr,eval
	jmp l3095
l3098:
l3095:
	end method
	method aicheckatk
	localint $1
	pop $1
	push ilenen
	push 200
	pop $b
	popax
	cmp $a,$b
	jle l3100
	push 0
	jmp l3101
l3100:
	push 1
l3101:
	push ilnx
	push 10
	pop $b
	popax
	cmp $a,$b
	jl l3102
	push 0
	jmp l3103
l3102:
	push 1
l3103:
	popax
	pop $b
	and $a,$b
	push ilnx
	push 120
	popax
	sub 0,$a
	pop $b
	popax
	cmp $a,$b
	ja l3104
	push 0
	jmp l3105
l3104:
	push 1
l3105:
	popax
	pop $b
	and $a,$b
	push $1
	call $1,rand
	push 0
	pop $b
	popax
	cmp $a,$b
	jne l3106
	push 0
	jmp l3107
l3106:
	push 1
l3107:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l3108
	push 2
	cthis unfire
	push 1
	ret
	jmp l3099
l3108:
l3099:
	push 0
	ret
	end method
	method unturn
	cthis closeren
	localint $1
	localstring $2
	cthis scloseren
	pop $2
	push $2
	push "null"
	pop $b
	popax
	cmp $a,$b
	je l3110
	push 0
	jmp l3111
l3110:
	push 1
l3111:
	popax
	cmp $a,0
	je l3112
	cthis unwait
	ret
	jmp l3109
l3112:
l3109:
	push bidzie
	push 0
	pop $b
	popax
	cmp $a,$b
	je l3114
	push 0
	jmp l3115
l3114:
	push 1
l3115:
	push 3
	call $1,rand
	push 0
	pop $b
	popax
	cmp $a,$b
	je l3116
	push 0
	jmp l3117
l3116:
	push 1
l3117:
	popax
	pop $b
	and $a,$b
	push bidzie
	push 1
	pop $b
	popax
	cmp $a,$b
	je l3118
	push 0
	jmp l3119
l3118:
	push 1
l3119:
	push 10
	call $1,rand
	push 0
	pop $b
	popax
	cmp $a,$b
	je l3120
	push 0
	jmp l3121
l3120:
	push 1
l3121:
	popax
	pop $b
	and $a,$b
	popax
	pop $b
	or $a,$b
	popax
	cmp $a,0
	je l3122
	cthis unwait
	jmp l3113
l3122:
	push bidzie
	push 1
	pop $b
	popax
	cmp $a,$b
	je l3124
	push 0
	jmp l3125
l3124:
	push 1
l3125:
	popax
	cmp $a,0
	je l3126
	push 10
	cthis aicheckatk
	push 0
	pop $b
	popax
	cmp $a,$b
	je l3128
	push 0
	jmp l3129
l3128:
	push 1
l3129:
	popax
	cmp $a,0
	je l3130
	jmp l3127
l3130:
l3127:
	jmp l3123
l3126:
	push 20
	cthis aicheckatk
	push 0
	pop $b
	popax
	cmp $a,$b
	je l3132
	push 0
	jmp l3133
l3132:
	push 1
l3133:
	popax
	cmp $a,0
	je l3134
	push $2
	popax
	spush $a
	spop $a
	call [$a],alive
	cthis alive
	pop $b
	popax
	cmp $a,$b
	jle l3136
	push 0
	jmp l3137
l3136:
	push 1
l3137:
	push 9
	call $1,rand
	push 0
	pop $b
	popax
	cmp $a,$b
	je l3138
	push 0
	jmp l3139
l3138:
	push 1
l3139:
	popax
	pop $b
	or $a,$b
	popax
	cmp $a,0
	je l3140
	push $2
	popax
	spush $a
	spop $a
	call [$a],getcx
	push 100
	pop $b
	popax
	add $a,$b
	push $2
	popax
	spush $a
	spop $a
	call [$a],getcy
	cthis ungo
	push 3
	call $1,rand
	push 0
	pop $b
	popax
	cmp $a,$b
	je l3142
	push 0
	jmp l3143
l3142:
	push 1
l3143:
	popax
	cmp $a,0
	je l3144
	call cpwh,rbgplay
	jmp l3141
l3144:
l3141:
	jmp l3135
l3140:
	cthis getcx
	push 10
	pop $b
	popax
	add $a,$b
	push irightx
	pop $b
	popax
	cmp $a,$b
	jae l3146
	push 0
	jmp l3147
l3146:
	push 1
l3147:
	popax
	cmp $a,0
	je l3148
	push 130
	push 400
	call $1,rand
	pop $b
	popax
	add $a,$b
	push 50
	push 400
	call $1,rand
	pop $b
	popax
	add $a,$b
	cthis ungo
	jmp l3145
l3148:
	push ilnx
	push 100
	popax
	sub 0,$a
	pop $b
	popax
	cmp $a,$b
	ja l3150
	push 0
	jmp l3151
l3150:
	push 1
l3151:
	popax
	cmp $a,0
	je l3152
	cthis getcx
	push 100
	pop $b
	popax
	add $a,$b
	push 50
	push 400
	call $1,rand
	pop $b
	popax
	add $a,$b
	cthis ungo
	jmp l3149
l3152:
	push 2
	call $1,rand
	push 0
	pop $b
	popax
	cmp $a,$b
	je l3154
	push 0
	jmp l3155
l3154:
	push 1
l3155:
	popax
	cmp $a,0
	je l3156
	cthis unwait
	jmp l3153
l3156:
	push 130
	push 400
	call $1,rand
	pop $b
	popax
	add $a,$b
	push 50
	push 400
	call $1,rand
	pop $b
	popax
	add $a,$b
	cthis ungo
l3153:
l3149:
l3145:
l3135:
	jmp l3131
l3134:
l3131:
l3123:
l3113:
	end method
	end class

	game gamenorth
	parent classadvpiast
	method init
	clparent classadvpiast,init
	push "scripts/part6/northsouth/"
	push "bkg.png"
	push "elems.pyz"
	cthis cloadterrain
	push "anbg"
	call anbg0,nofactions
	push 1
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	push 1
	spop $a
	call [$a],setz
	push "anroz"
	push "rozstawienie.pyz"
	push 1
	cthis newanima
	localint $1
	push 1
	pop $1
l3157:
	push $1
	push 3
	pop $b
	popax
	cmp $a,$b
	jle l3158
	push 0
	jmp l3159
l3158:
	push 1
l3159:
	popax
	cmp $a,0
	je l3160
	jmp l3162
l3161:
	add $1,1
	pop $1
	jmp l3157
l3162:
	push "anchlop"
	push $1
	pop $b
	popax
	add $a,$b
	push "chlop"
	push $1
	pop $b
	popax
	add $a,$b
	push ".pyz"
	pop $b
	popax
	add $a,$b
	push 1
	cthis newanima
	push "anwoj"
	push $1
	pop $b
	popax
	add $a,$b
	push "woj"
	push $1
	pop $b
	popax
	add $a,$b
	push ".pyz"
	pop $b
	popax
	add $a,$b
	push 1
	cthis newanima
	jmp l3161
l3160:
	push "anwoj4"
	push "woj4.pyz"
	push 1
	cthis newanima
	call anroz,hide
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	localstring $7
	localstring $8
	localstring $9
	localstring $10
	localint $11
	call anroz,nofactions
	pop $2
	new string,sfinsnd
	new int,ilechlop
	push 0
	pop ilechlop
	new int,ilewoj
	push 0
	pop ilewoj
	new int,ilec
	push 0
	pop ilec
	new int,ilew
	push 0
	pop ilew
	new string,sactc
	push "null"
	pop sactc
	new int,iactw
	push 1
	pop iactw
	new vector,vecuns
	new vector,vecens
	new vector,vecows
	push "string"
	call vecuns,type
	push "string"
	call vecens,type
	push "string"
	call vecows,type
	new gmobjvec,gvc
	new gmobjvec,gvw
	push 0
	pop $1
l3163:
	push $1
	push $2
	pop $b
	popax
	cmp $a,$b
	jl l3164
	push 0
	jmp l3165
l3164:
	push 1
l3165:
	popax
	cmp $a,0
	je l3166
	jmp l3168
l3167:
	add $1,1
	pop $1
	jmp l3163
l3168:
	push $1
	push 0
	call anroz,setframe
	call anroz,actionname
	pop $7
	push 0
	push 1
	call $7,getb
	push "c"
	pop $b
	popax
	cmp $a,$b
	je l3170
	push 0
	jmp l3171
l3170:
	push 1
l3171:
	popax
	cmp $a,0
	je l3172
	add ilechlop,1
	pop ilechlop
	push "grc"
	push ilechlop
	pop $b
	popax
	add $a,$b
	pop $8
	push "vecows"
	pop $9
	push "gvc"
	pop $10
	jmp l3169
l3172:
	add ilewoj,1
	pop ilewoj
	push "grw"
	push ilewoj
	pop $b
	popax
	add $a,$b
	pop $8
	push "vecens"
	pop $9
	push "gvw"
	pop $10
l3169:
	push $8
	popax
	spush $a
	spop $e
	new clnsunit,[$e]
	push $9
	popax
	spush $a
	push $8
	spop $a
	call [$a],add
	push $8
	popax
	spush $a
	push $9
	spop $a
	call [$a],setside
	push $8
	call vecuns,add
	push $1
	call anroz,nofframes
	pop $3
	push 0
	pop $11
l3173:
	push $11
	push $3
	pop $b
	popax
	cmp $a,$b
	jl l3174
	push 0
	jmp l3175
l3174:
	push 1
l3175:
	popax
	cmp $a,0
	je l3176
	jmp l3178
l3177:
	add $11,1
	pop $11
	jmp l3173
l3178:
	push $1
	push $11
	call anroz,setframe
	call anroz,framename
	pop $9
	push 0
	push 1
	call $9,getb
	push "c"
	pop $b
	popax
	cmp $a,$b
	je l3180
	push 0
	jmp l3181
l3180:
	push 1
l3181:
	popax
	cmp $a,0
	je l3182
	add ilec,1
	pop ilec
	push "anchlop"
	push 2
	push 1
	call $9,getb
	pop $b
	popax
	add $a,$b
	push "anc"
	push ilec
	pop $b
	popax
	add $a,$b
	push $8
	push "mwojfin"
	push $10
	cthis maddsold
	jmp l3179
l3182:
	add ilew,1
	pop ilew
	push "anwoj"
	push 1
	push 1
	call $9,getb
	pop $b
	popax
	add $a,$b
	push "anw"
	push ilew
	pop $b
	popax
	add $a,$b
	push $8
	push "mwojfin"
	push $10
	cthis maddsold
l3179:
	jmp l3177
l3176:
	jmp l3167
l3166:
	localint $12
	push 3
	push ilec
	pop $b
	popax
	mul $a,$b
	pop $12
	localint $13
	push 10
	pop $13
	push "cnpc"
	push "anpc"
	push "pocisk.pyz"
	push 700
	push $12
	push "mpocfin"
	cthis newancounterhf
	push 0
	pop $1
l3183:
	push $1
	push $12
	pop $b
	popax
	cmp $a,$b
	jl l3184
	push 0
	jmp l3185
l3184:
	push 1
l3185:
	popax
	cmp $a,0
	je l3186
	jmp l3188
l3187:
	add $1,1
	pop $1
	jmp l3183
l3188:
	push "anpc"
	push $1
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	push $13
	push "c"
	push "w"
	spop $a
	call [$a],mpocbuild
	jmp l3187
l3186:
	push 3
	push ilew
	pop $b
	popax
	mul $a,$b
	pop $12
	push "cnpw"
	push "anpw"
	push "pocisk.pyz"
	push 700
	push $12
	push "mpocfin"
	cthis newancounterhf
	push 0
	pop $1
l3189:
	push $1
	push $12
	pop $b
	popax
	cmp $a,$b
	jl l3190
	push 0
	jmp l3191
l3190:
	push 1
l3191:
	popax
	cmp $a,0
	je l3192
	jmp l3194
l3193:
	add $1,1
	pop $1
	jmp l3189
l3194:
	push "anpw"
	push $1
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	push $13
	popax
	sub 0,$a
	push "w"
	push "c"
	spop $a
	call [$a],mpocbuild
	jmp l3193
l3192:
	push 1
	pop $1
l3195:
	push $1
	push 3
	pop $b
	popax
	cmp $a,$b
	jle l3196
	push 0
	jmp l3197
l3196:
	push 1
l3197:
	popax
	cmp $a,0
	je l3198
	jmp l3200
l3199:
	add $1,1
	pop $1
	jmp l3195
l3200:
	push "anchlop"
	push $1
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	spop $a
	call [$a],hide
	push "anwoj"
	push $1
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	spop $a
	call [$a],hide
	jmp l3199
l3198:
	call anwoj4,hide
	push 1
	pop $1
l3201:
	push $1
	push ilechlop
	pop $b
	popax
	cmp $a,$b
	jle l3202
	push 0
	jmp l3203
l3202:
	push 1
l3203:
	popax
	cmp $a,0
	je l3204
	jmp l3206
l3205:
	add $1,1
	pop $1
	jmp l3201
l3206:
	push 1
	pop $11
l3207:
	push $11
	push ilewoj
	pop $b
	popax
	cmp $a,$b
	jle l3208
	push 0
	jmp l3209
l3208:
	push 1
l3209:
	popax
	cmp $a,0
	je l3210
	jmp l3212
l3211:
	add $11,1
	pop $11
	jmp l3207
l3212:
	push "grc"
	push $1
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	push "grw"
	push $11
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],addenemy
	push "grw"
	push $11
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	push "grc"
	push $1
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],addenemy
	jmp l3211
l3210:
	jmp l3205
l3204:
	cthis mmovgroups
	push "timtim"
	call anwoj1,getdelay
	push 1
	push "mfintimtim"
	cthis cnewtimercyclefin
	push "dbwav"
	push "wavs.db"
	cthis cloadwavs
	push "sndp2"
	cthis cbplay
	end method
	method mfinp2
	push "sndp3"
	cthis cbplay
	end method
	method mfinp3
	push "sndp4"
	cthis cbplay
	end method
	method mfinp4
	push "sndp5"
	cthis cbplay
	end method
	method mfinp5
	cthis mstart
	end method
	method mpocbuild
	localint $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	new int,ikrok
	new int,_dx
	push $1
	pop _dx
	new string,sswoj
	push $2
	pop sswoj
	new string,swrog
	push $3
	pop swrog
	end method
	method mpocstart
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	cthis setpos
	push 10
	push 3
	call $1,rand
	pop $b
	popax
	add $a,$b
	pop ikrok
	push 1
	popax
	sub 0,$a
	cthis play
	end method
	method mpocfin
	localint $1
	cthis getcx
	pop $1
	localstring $2
	push $1
	cthis getcy
	push 1
	push 1
	push 1
	push 600
	call engine,getimg
	pop $2
	localstring $3
	push 2
	push 1
	call $2,getb
	pop $3
	push $3
	push swrog
	pop $b
	popax
	cmp $a,$b
	je l3214
	push 0
	jmp l3215
l3214:
	push 1
l3215:
	popax
	cmp $a,0
	je l3216
	push $2
	popax
	spush $a
	spop $a
	call [$a],getstate
	push 3
	pop $b
	popax
	cmp $a,$b
	jne l3218
	push 0
	jmp l3219
l3218:
	push 1
l3219:
	popax
	cmp $a,0
	je l3220
	push $2
	popax
	spush $a
	spop $a
	call [$a],padnij
	cthis hide
	ret
	jmp l3217
l3220:
	push sswoj
	pop $3
l3217:
	jmp l3213
l3216:
l3213:
	push $2
	push "null"
	pop $b
	popax
	cmp $a,$b
	je l3222
	push 0
	jmp l3223
l3222:
	push 1
l3223:
	push $3
	push sswoj
	pop $b
	popax
	cmp $a,$b
	je l3224
	push 0
	jmp l3225
l3224:
	push 1
l3225:
	popax
	pop $b
	or $a,$b
	popax
	cmp $a,0
	je l3226
	sub ikrok,1
	pop ikrok
	push ikrok
	push 0
	pop $b
	popax
	cmp $a,$b
	ja l3228
	push 0
	jmp l3229
l3228:
	push 1
l3229:
	push $1
	push 600
	pop $b
	popax
	cmp $a,$b
	jl l3230
	push 0
	jmp l3231
l3230:
	push 1
l3231:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l3232
	push _dx
	push 2
	call $1,rand
	cthis move
	push 1
	popax
	sub 0,$a
	cthis play
	jmp l3227
l3232:
	cthis hide
l3227:
	jmp l3221
l3226:
	cthis hide
l3221:
	end method
	method meval
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l3233:
	push $2
	cthis size
	pop $b
	popax
	cmp $a,$b
	jl l3234
	push 0
	jmp l3235
l3234:
	push 1
l3235:
	popax
	cmp $a,0
	je l3236
	jmp l3238
l3237:
	add $2,1
	pop $2
	jmp l3233
l3238:
	push $2
	cthis get
	popax
	spush $a
	push $1
	popax
	spush $a
	spop $d
	spop $a
	call [$a],[$d]
	jmp l3237
l3236:
	end method
	method mcenter
	push "countcenter"
	cthis meval
	end method
	method mturn
	push "unturn"
	cthis meval
	end method
	method mwalk
	push "unwalk"
	cthis meval
	end method
	method mstart
	push 1
	pop igmstate
	call timtim,play
	end method
	method mfintimtim
	cthis play
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	jne l3240
	push 0
	jmp l3241
l3240:
	push 1
l3241:
	popax
	cmp $a,0
	je l3242
	ret
	jmp l3239
l3242:
l3239:
	call vecens,mturn
	call vecuns,mwalk
	end method
	method mmovgroups
	push "dbrz"
	push "rozstaw.db"
	cthis newdb
	localstring $1
	localint $2
	push 0
	pop $2
l3243:
	push $2
	call dbrz,getrowsno
	pop $b
	popax
	cmp $a,$b
	jl l3244
	push 0
	jmp l3245
l3244:
	push 1
l3245:
	popax
	cmp $a,0
	je l3246
	jmp l3248
l3247:
	add $2,1
	pop $2
	jmp l3243
l3248:
	push "gr"
	push $2
	push 0
	call dbrz,get
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	popax
	spush $a
	push $2
	push 1
	call dbrz,get
	push $2
	push 2
	call dbrz,get
	spop $a
	call [$a],move
	push $1
	popax
	spush $a
	push "anputgr"
	spop $a
	call [$a],eval
	push $1
	popax
	spush $a
	spop $a
	call [$a],countcenter
	push $1
	popax
	spush $a
	spop $a
	call [$a],unwait
	jmp l3247
l3246:
	end method
	method maddsold
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $4
	cthis ccopyanimafin
	push $5
	popax
	spush $a
	push $2
	spop $a
	call [$a],add
	push $2
	popax
	spush $a
	call anroz,getpx
	call anroz,getpy
	spop $a
	call [$a],setpos
	push $2
	popax
	spush $a
	spop $a
	call [$a],anputgr
	push $3
	popax
	spush $a
	push $2
	spop $a
	call [$a],add
	push $2
	popax
	spush $a
	push "onendframe"
	push "msoldframe"
	spop $a
	call [$a],addmethod
	push $2
	popax
	spush $a
	push 2
	push 1
	call $3,getb
	spop $a
	call [$a],msetsold
	end method
	method msetsold
	localstring $1
	pop $1
	push 1
	push 1
	cthis setframe
	push $1
	push "c"
	pop $b
	popax
	cmp $a,$b
	je l3250
	push 0
	jmp l3251
l3250:
	push 1
l3251:
	popax
	cmp $a,0
	je l3252
	new int,xwsp
	cthis getw
	pop xwsp
	jmp l3249
l3252:
	new int,xwsp
	push 0
	pop xwsp
l3249:
	new string,scn
	push "cnp"
	push $1
	pop $b
	popax
	add $a,$b
	pop scn
	push "go"
	push 0
	cthis setframe
	end method
	method msoldframe
	push ist
	push 1
	pop $b
	popax
	cmp $a,$b
	je l3254
	push 0
	jmp l3255
l3254:
	push 1
l3255:
	popax
	cmp $a,0
	je l3256
	cthis getey
	cthis setz
	push imx
	push imy
	cthis move
	jmp l3253
l3256:
l3253:
	end method
	method mw0
	push 0
	push 0
	cthis setframe
	end method
	method mw1
	localstring $1
	push scn
	popax
	spush $a
	spop $a
	call [$a],get
	pop $1
	push $1
	popax
	spush $a
	cthis getpx
	push xwsp
	pop $b
	popax
	add $a,$b
	cthis getpy
	push 5
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],mpocstart
	push 0
	push 0
	cthis setframe
	end method
	method mw2
	push 3
	pop ist
	end method
	method mw3
	push 1
	popax
	sub 0,$a
	cthis play
	end method
	method mwojfin
	push 0
	pop ist
	push "mw"
	push 1
	popax
	sub 0,$a
	cthis actionnr
	pop $b
	popax
	add $a,$b
	popax
	spush $a
	spop $d
	cthis [$d]
	end method
	method mlooser
	localstring $1
	pop $1
	push 4
	pop igmstate
	push $1
	push "vecens"
	pop $b
	popax
	cmp $a,$b
	je l3258
	push 0
	jmp l3259
l3258:
	push 1
l3259:
	popax
	cmp $a,0
	je l3260
	push "sndnar3"
	pop sfinsnd
	push "hura"
	call gvc,splay
	push "go"
	push 0
	call gvw,ssetframe
	push "sndzwyc"
	cthis cbplay
	jmp l3257
l3260:
	push $1
	push "vecows"
	pop $b
	popax
	cmp $a,$b
	je l3262
	push 0
	jmp l3263
l3262:
	push 1
l3263:
	popax
	cmp $a,0
	je l3264
	push "sndnar2"
	pop sfinsnd
	push "hura"
	call gvw,splay
	push "go"
	push 0
	call gvc,ssetframe
	push "sndzwyc"
	cthis cbplay
	jmp l3261
l3264:
l3261:
l3257:
	end method
	method mfinito
	push sfinsnd
	cthis cbplay
	end method
	method mfinnar2
	cthis crestart
	end method
	method mfinnar3
	push "gamensoutro"
	call gameapi,play
	end method
	method mmovgr
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l3266
	push 0
	jmp l3267
l3266:
	push 1
l3267:
	popax
	cmp $a,0
	je l3268
	push $1
	popax
	spush $a
	push $2
	push $3
	spop $a
	call [$a],ungo
	push 2
	call $2,rand
	push 0
	pop $b
	popax
	cmp $a,$b
	je l3270
	push 0
	jmp l3271
l3270:
	push 1
l3271:
	popax
	cmp $a,0
	je l3272
	call cpch,rbgplay
	jmp l3269
l3272:
l3269:
	jmp l3265
l3268:
l3265:
	end method
	method mouserclick
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	jne l3274
	push 0
	jmp l3275
l3274:
	push 1
l3275:
	popax
	cmp $a,0
	je l3276
	ret
	jmp l3273
l3276:
l3273:
	push sactc
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l3278
	push 0
	jmp l3279
l3278:
	push 1
l3279:
	popax
	cmp $a,0
	je l3280
	push sactc
	popax
	spush $a
	push 1
	spop $a
	call [$a],unfire
	jmp l3277
l3280:
l3277:
	end method
	method mouselclick
	push igmstate
	push 0
	pop $b
	popax
	cmp $a,$b
	je l3282
	push 0
	jmp l3283
l3282:
	push 1
l3283:
	popax
	cmp $a,0
	je l3284
	push 1
	cthis cactsndstop
	jmp l3281
l3284:
l3281:
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	jne l3286
	push 0
	jmp l3287
l3286:
	push 1
l3287:
	popax
	cmp $a,0
	je l3288
	ret
	jmp l3285
l3288:
l3285:
	localint $1
	call mouse,getpx
	pop $1
	localint $2
	call mouse,getpy
	pop $2
	localstring $3
	push $1
	push $2
	push 1
	push 0
	push 0
	push 600
	call engine,getimg
	pop $3
	push $3
	push "null"
	pop $b
	popax
	cmp $a,$b
	jne l3290
	push 0
	jmp l3291
l3290:
	push 1
l3291:
	push 0
	push 3
	call $3,getb
	push "anc"
	pop $b
	popax
	cmp $a,$b
	je l3292
	push 0
	jmp l3293
l3292:
	push 1
l3293:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l3294
	push $3
	popax
	spush $a
	spop $a
	call [$a],getstate
	push 3
	pop $b
	popax
	cmp $a,$b
	jne l3296
	push 0
	jmp l3297
l3296:
	push 1
l3297:
	popax
	cmp $a,0
	je l3298
	push $3
	popax
	spush $a
	spop $a
	call [$a],getunit
	pop sactc
	jmp l3295
l3298:
	push sactc
	push $1
	push $2
	cthis mmovgr
l3295:
	jmp l3289
l3294:
	push sactc
	push $1
	push $2
	cthis mmovgr
l3289:
	end method
	end game

	game gamensoutro
	parent classadvpiast
	method init
	clparent classadvpiast,init
	push "scripts/part6/outro/"
	cthis setgraphpath
	push "dbwav"
	push "wavs.db"
	cthis cloadwavs
	cthis cstdbkg
	new img,im1
	push "scripts/bajka/popiel17.png"
	call im1,load
	new int,posx
	push 150
	pop posx
	new int,posy
	push 50
	pop posy
	push posx
	push posy
	call im1,setpos
	push "sndnar4"
	cthis cbplay
	end method
	method mfinnar4
	push "scripts/bajka/popiel20.png"
	call im1,load
	push posx
	push posy
	call im1,setpos
	push "sndnar5"
	cthis cbplay
	end method
	method mfinnar5
	call im1,hide
	push "sndnar6"
	cthis cbplay
	end method
	method mfinnar6
	push "gamelastgame"
	call gameapi,play
	end method
	method mouselclick
	push igmdebug
	push 1
	pop $b
	popax
	cmp $a,$b
	je l3300
	push 0
	jmp l3301
l3300:
	push 1
l3301:
	popax
	cmp $a,0
	je l3302
	push 1
	cthis cactsndstop
	jmp l3299
l3302:
l3299:
	end method
	end game

	game gamelastgame
	parent classpiasthouse
	method init
	clparent classpiasthouse,init
	push "dbwav"
	push "wavslast.db"
	cthis cloadwavs
	push "ansiem"
	push "siemowit.pyz"
	push 10
	cthis newanima
	call ansiem,hide
	push "sndnar7"
	cthis cbplay
	end method
	method mfinnar7
	push "sndnar8"
	cthis cbplay
	push 1
	popax
	sub 0,$a
	call ansiem,play
	end method
	method mfinnar8
	push "sndnar9"
	cthis cbplay
	end method
	method mfinnar9
	push 7
	pop igmstate
	end method
	method mouselclick
	push igmdebug
	push 1
	pop $b
	popax
	cmp $a,$b
	je l3304
	push 0
	jmp l3305
l3304:
	push 1
l3305:
	popax
	cmp $a,0
	je l3306
	push 1
	cthis cactsndstop
	jmp l3303
l3306:
l3303:
	push igmstate
	push 7
	pop $b
	popax
	cmp $a,$b
	je l3308
	push 0
	jmp l3309
l3308:
	push 1
l3309:
	popax
	cmp $a,0
	je l3310
	push "gamemenu"
	call gameapi,play
	jmp l3307
l3310:
l3307:
	end method
	end game

	game gamebajka
	parent classadvpiast
	method init
	clparent classadvpiast,init
	push "scripts/bajka/"
	cthis setgraphpath
	cthis cstdbkg
	localint $1
	push "annakladka"
	push "nakladki.pyz"
	push 0
	push 20
	cthis loadanframes
	pop $1
	push "clb"
	push "butons.pyz"
	push 10
	push "imglobcurs"
	cthis newclbut
	push "mbutclick"
	call clb,clickfunc
	push "mbutmovon"
	call clb,movonfunc
	new string,simg1
	new string,simg2
	new int,iwidok
	push 1
	pop iwidok
	new int,bjeszczeraz
	push 1
	pop bjeszczeraz
	new int,ileft
	push 157
	pop ileft
	new int,iup
	push 9
	pop iup
	new string,sside
	new gmobjvec,grimgs
	new int,istep
	push 20
	pop istep
	new int,imovy
	push istep
	popax
	sub 0,$a
	pop imovy
	new int,iilescen
	push 20
	pop iilescen
	push "timrew"
	push 1
	push 25
	push "mfintimrew"
	cthis cnewtimercyclefin
	push "ontick"
	push "mrewtick"
	call timrew,addmethod
	push "onstart"
	push "mrewstart"
	call timrew,addmethod
	localint $2
	push ileft
	pop $2
	push "img1"
	pop simg1
	push simg1
	push "popiel"
	push iwidok
	pop $b
	popax
	add $a,$b
	push ".png"
	pop $b
	popax
	add $a,$b
	push 5
	cthis newimg
	push simg1
	call grimgs,add
	push ileft
	push 500
	pop $b
	popax
	add $a,$b
	push iup
	call img1,setpos
	push ileft
	push iup
	push ileft
	push 500
	pop $b
	popax
	add $a,$b
	push iup
	push 500
	pop $b
	popax
	add $a,$b
	call img1,clip
	push "img2"
	pop simg2
	new img,img2
	push 5
	call img2,setz
	push simg2
	call grimgs,add
	push ileft
	push iup
	push ileft
	push 500
	pop $b
	popax
	add $a,$b
	push iup
	push 500
	pop $b
	popax
	add $a,$b
	call img2,clip
	call img1,getex
	call img1,getpy
	call img2,setpos
	new snd,sndpop
	push "onfinish"
	push "mfinpop"
	call sndpop,addmethod
	cthis mloadsnd
	push "dbwav"
	push "wavs.db"
	cthis cloadwavs
	push "sndnar"
	cthis cbplay
	push "sndrew"
	push "sfx/przesun.wav"
	cthis newsndloop
	end method
	method mchecksnd
	localint $1
	pop $1
	push $1
	push 9
	pop $b
	popax
	cmp $a,$b
	je l3312
	push 0
	jmp l3313
l3312:
	push 1
l3313:
	popax
	cmp $a,0
	je l3314
	call sndwidz3,play
	jmp l3311
l3314:
	push $1
	push 16
	pop $b
	popax
	cmp $a,$b
	je l3316
	push 0
	jmp l3317
l3316:
	push 1
l3317:
	popax
	cmp $a,0
	je l3318
	call sndwidz4,play
	jmp l3315
l3318:
l3315:
l3311:
	end method
	method mfinpop
	push iwidok
	push iilescen
	pop $b
	popax
	cmp $a,$b
	jl l3320
	push 0
	jmp l3321
l3320:
	push 1
l3321:
	popax
	cmp $a,0
	je l3322
	push iwidok
	cthis mchecksnd
	push "next"
	cthis mnext
	jmp l3319
l3322:
	push bjeszczeraz
	push 1
	pop $b
	popax
	cmp $a,$b
	je l3324
	push 0
	jmp l3325
l3324:
	push 1
l3325:
	popax
	cmp $a,0
	je l3326
	push 0
	pop bjeszczeraz
	push "sndwidz2"
	cthis cbplay
	jmp l3323
l3326:
l3323:
l3319:
	end method
	method mloadsnd
	push "sounds/polanie/bajka"
	push iwidok
	pop $b
	popax
	add $a,$b
	push ".wav"
	pop $b
	popax
	add $a,$b
	call sndpop,load
	end method
	method mrewstart
	push 0
	pop igmstate
	call sndrew,play
	end method
	method mfinnar
	push "sndwidz1"
	cthis cbplay
	end method
	method mfinwidz1
	call timrew,play
	end method
	method mfinwidz2
	push 1
	pop igmstate
	end method
	method mfinwidz3
	end method
	method mfinwidz4
	end method
	method mrewtick
	push imovy
	push 0
	call grimgs,move
	end method
	method mfintimrew
	cthis mrewtick
	push 1
	pop igmstate
	push "sndpop"
	cthis cbplay
	push 0
	call sndrew,stop
	end method
	method msetscene
	localint $1
	localint $2
	pop $2
	pop $1
	push $2
	pop imovy
	push $1
	cthis mplayscene
	call timrew,play
	end method
	method mnext
	localstring $1
	pop $1
	push 0
	pop igmstate
	push $1
	pop sside
	push $1
	push "next"
	pop $b
	popax
	cmp $a,$b
	je l3328
	push 0
	jmp l3329
l3328:
	push 1
l3329:
	push iwidok
	push iilescen
	pop $b
	popax
	cmp $a,$b
	jl l3330
	push 0
	jmp l3331
l3330:
	push 1
l3331:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l3332
	push 1
	push istep
	popax
	sub 0,$a
	cthis msetscene
	jmp l3327
l3332:
	push $1
	push "prev"
	pop $b
	popax
	cmp $a,$b
	je l3334
	push 0
	jmp l3335
l3334:
	push 1
l3335:
	push iwidok
	push 1
	pop $b
	popax
	cmp $a,$b
	ja l3336
	push 0
	jmp l3337
l3336:
	push 1
l3337:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l3338
	push 1
	popax
	sub 0,$a
	push istep
	cthis msetscene
	jmp l3333
l3338:
l3333:
l3327:
	end method
	method mplayscene
	localint $1
	pop $1
	push $1
	popax
	add iwidok,$a
	pop iwidok
	push simg2
	popax
	spush $a
	cthis getgraphpath
	push "popiel"
	pop $b
	popax
	add $a,$b
	push iwidok
	pop $b
	popax
	add $a,$b
	push ".png"
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],load
	push simg2
	popax
	spush $a
	push ileft
	push iup
	push ileft
	push 500
	pop $b
	popax
	add $a,$b
	push iup
	push 500
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],clip
	push simg2
	popax
	spush $a
	push 5
	spop $a
	call [$a],setz
	push $1
	push 0
	pop $b
	popax
	cmp $a,$b
	jl l3340
	push 0
	jmp l3341
l3340:
	push 1
l3341:
	popax
	cmp $a,0
	je l3342
	push simg2
	popax
	spush $a
	push simg1
	popax
	spush $a
	spop $a
	call [$a],getpx
	push simg2
	popax
	spush $a
	spop $a
	call [$a],getw
	pop $b
	popax
	sub $a,$b
	push iup
	spop $a
	call [$a],setpos
	jmp l3339
l3342:
	push $1
	push 0
	pop $b
	popax
	cmp $a,$b
	ja l3344
	push 0
	jmp l3345
l3344:
	push 1
l3345:
	popax
	cmp $a,0
	je l3346
	push simg2
	popax
	spush $a
	push simg1
	popax
	spush $a
	spop $a
	call [$a],getex
	push iup
	spop $a
	call [$a],setpos
	jmp l3343
l3346:
l3343:
l3339:
	cthis mloadsnd
	localstring $2
	push simg1
	pop $2
	push simg2
	pop simg1
	push $2
	pop simg2
	end method
	method mbutmovon
	localstring $1
	pop $1
	call sndakskermovon,play
	end method
	method mbutclick
	localstring $1
	pop $1
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	jne l3348
	push 0
	jmp l3349
l3348:
	push 1
l3349:
	popax
	cmp $a,0
	je l3350
	ret
	jmp l3347
l3350:
l3347:
	push $1
	push "next"
	pop $b
	popax
	cmp $a,$b
	je l3352
	push 0
	jmp l3353
l3352:
	push 1
l3353:
	popax
	cmp $a,0
	je l3354
	push $1
	cthis mnext
	jmp l3351
l3354:
	push $1
	push "prev"
	pop $b
	popax
	cmp $a,$b
	je l3356
	push 0
	jmp l3357
l3356:
	push 1
l3357:
	popax
	cmp $a,0
	je l3358
	push $1
	cthis mnext
	jmp l3355
l3358:
	push $1
	push "play"
	pop $b
	popax
	cmp $a,$b
	je l3360
	push 0
	jmp l3361
l3360:
	push 1
l3361:
	popax
	cmp $a,0
	je l3362
	call clpause,pause
	jmp l3359
l3362:
l3359:
l3355:
l3351:
	end method
	method mouselclick
	push igmstate
	push 1
	pop $b
	popax
	cmp $a,$b
	je l3364
	push 0
	jmp l3365
l3364:
	push 1
l3365:
	push igmdebug
	push 1
	pop $b
	popax
	cmp $a,$b
	je l3366
	push 0
	jmp l3367
l3366:
	push 1
l3367:
	popax
	pop $b
	and $a,$b
	popax
	cmp $a,0
	je l3368
	push 1
	cthis cactsndstop
	jmp l3363
l3368:
l3363:
	end method
	end game

