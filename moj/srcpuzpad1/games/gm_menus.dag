
new int iMenuPuzid = 1;
new string sMenuMode = null;

new int iPuzRow;
new int iPuzCol;
new string sPuzzle;
new bool bPlayMusic = true;


game MenuPuzzle : StdGame	{
	init	{
		StdGame::init("menupuz");
		
		if( engine.fileexist( .getgraphpath + "puz.db") )	{
			.newdb("dbpuz", "puz.db");
			new int ilepuzid = dbpuz.getrowsno;
		} else {
			.newdb("dbilepuz", "ilepuz.db");
			new int iilepuzzli = dbilepuz.get(0,0);
			new int ilepuzid = iilepuzzli/2;
		}
		
		.imgs = (A, "bgmenu.jpg", "butprev.pyz 20", "butnext.pyz 20");
		
		if( igmmac || igmwindows )
			.cbutexit;
		
		anbutprev	{
			.Button_std;
			.addmethod("butclick", func {
				if( igmstate!=1 ) return;
				iMenuPuzid = (iMenuPuzid%ilepuzid)+1;
				<GAME>.mrestart;
				} );
			but1.add(this);
			
		};
		anbutnext	{
			.Button_std;
			.addmethod("butclick", func {
				if( igmstate!=1 ) return;
				iMenuPuzid = iMenuPuzid - 1;
				if( iMenuPuzid < 1 ) iMenuPuzid=ilepuzid;
				<GAME>.mrestart;
				} );
			but1.add(this);
			
		};
		
		if( igmiphone )	{
			@x = iResX/2 - (anbutprev.getpx + (anbutnext.getex - anbutprev.getpx)/2);
			anbutprev.move( x, 0 );
			anbutnext.move( x, 0 );
		}
		
		.cbutmusic;
		
		.mstart;
		
		new img imovon;
		imovon.create( anmenu1.getw, anmenu1.geth, 255,192,192, 64 );
		imovon.hide;
		
		but1.onmousemove;
		
		.cutscene;
		/*if( sMenuMode==null )	{
			.mgo;
		} else {
			ccs.enter( "mgo" );
		}*/
		ccs.enter( "mgo" );
		
		if( bPlayMusic )	{
			.play_music;
		}
	}
	mgo	{	igmstate=1; }
	play_music	{	mus.playstr(sgmversion+"_puzzle.ogg -v 50 -l");	}
	stop_music	{	mus.fadeout(1000);	}
	mrestart	{
		//gameapi.play("MenuPuzzle");
		.mdel;
		.mstart;
	}
	mdel	{
		for( int i=1; i<=4; i++)	{
			@s = "anmenu"+i;
			
			<"ft"+s>.unlink;
			delete <"ft"+s>;
			but1.removebut(s);
			delete <s>;
			delete <"im"+s>;
		}
	}
	mstart	{
		if( <GAME>.hasvar("dbpuz") )	{
			@id = iMenuPuzid-1;
			.mload( dbpuz.get(id, 0), dbpuz.get(id, 1), dbpuz.get(id, 2), dbpuz.get(id, 3) );
		} else {
			
			/*4 3 2 1
			6 5 4 3
			8 7 6 5
			2 1 8 7*/
			if( iilepuzzli<=4 )	{
				anbutnext.hide;
				anbutprev.hide;
				for( int i=1; i<=iilepuzzli; i++)
					.mloadb(i, "puz"+i);
			} else {
				@i3 = iMenuPuzid*2;
				@i4 = i3-1;
				@i2 = i3+1;
				@i1 = i3+2;
				if( i2>(ilepuzid*2) )	{
					i2 = 1;
					i1 = 2;
				}
				.mload( "puz"+i1, "puz"+i2, "puz"+i3, "puz"+i4 );
			}
		}
	}
	mload(string s1, string s2, string s3, string s4)	{
		if( .cwideversion )	{
			.mloadb(1, s1); .mloadb(2, s2);
			.mloadb(3, s3); .mloadb(4, s4);
		} else {
			.mloadb(1, s1); .mloadb(2, s2);
			.mloadb(3, s3); .mloadb(4, s4);
		}
	}
	mloadb(int id, string s)	{
		@san = "anmenu" + id;
		//.newanima(san, "m_"+s+".pyz", 10);
		new img <san>;
		<san>.load( "scripts/" + sgmversion + "/obrazki/p_" + s + ".jpg" );
		<san>.setz(10);
		@sft = "ft" + san;
		new filter <sft>;
		<sft>.link(san);
		<sft>.setsmooth(1);
		<sft>.setpivottype(1);
		
		if( igmiphone )	{
			<sft>.setzoom(0.5);
		} else {
			<sft>.setzoom(0.4);
		}
		
		@simg = "im" + san;
		new img <simg>;
		<simg>.create( <san>.getw, <san>.geth, .black, 128 );
		@ds = 3;
		<simg>.setz( <san>.getz - 1 );
		
		if( .cwideversion )	{
			real r1 = 1.2;
			real r2 = 1.2;
			int ipx1 = 100;
			int ipy1 = 100;
			if( sgmversion=="basniemac" )	{
				r1 = 1.2;
				ipx1 = 150;
				ipy1 = 120;
			} else if( sgmversion.in(A,"grecjamac") ) {
				r1 = 1.25;
				ipx1 = 150;
				ipy1 = 100;
			} else if (sgmversion.in(A,"pokazchest1","pokazchest2","pokazvehicles1", "pokazfarm") )	{
				r1 = 1.25;
				ipx1 = 150;
				ipy1 = 200;
			}
			int ipx2 = ipx1 + r1*<san>.getw;
			int ipy2 = ipy1 + r2*<san>.geth;
			match( id )	{
				1 => { <san>.setpos( ipx1, ipy1 );
					<simg>.setpos( ipx1+ds, ipy1+ds );
				}
				2 => {
					<san>.setpos( ipx2, ipy1 );
					<simg>.setpos( ipx2+ds, ipy1+ds );
				}
				3 => {
					<san>.setpos( ipx1, ipy2 );
					<simg>.setpos( ipx1+ds, ipy2+ds );
				}
				4 => {
					<san>.setpos( ipx2, ipy2 );
					<simg>.setpos( ipx2+ds, ipy2+ds );
				}
				? => ;
			}
		} else if ( igmiphone )	{
			int ipx1 = (iResX/2-<san>.getw)/2;
			int ipy1 = 140;
			int ipx2 = (3*iResX/2-<san>.getw)/2;
			int ipy2 = ipy1 + 1.3*<san>.geth;
			match( id )	{
				1 => {
					<san>.setpos( ipx1, ipy1 );
					<simg>.setpos( ipx1+ds, ipy1+ds );
				}
				3 => {
					<san>.setpos( ipx2, ipy1 );
					<simg>.setpos( ipx2+ds, ipy1+ds );
				}
				2 => {
					<san>.setpos( ipx1, ipy2 );
					<simg>.setpos( ipx1+ds, ipy2+ds );
				}
				4 => {
					<san>.setpos( ipx2, ipy2 );
					<simg>.setpos( ipx2+ds, ipy2+ds );
				}
				? => ;
			}
		} else {
			int ipx1 = (iResX/2-<san>.getw)/2;
			int ipy1 = 140;
			int ipx2 = (3*iResX/2-<san>.getw)/2;
			int ipy2 = ipy1 + 1.3*<san>.geth;
			match( id )	{
				1 => {
					<san>.setpos( ipx1, ipy1 );
					<simg>.setpos( ipx1+ds, ipy1+ds );
				}
				3 => {
					<san>.setpos( ipx2, ipy1 );
					<simg>.setpos( ipx2+ds, ipy1+ds );
				}
				2 => {
					<san>.setpos( ipx1, ipy2 );
					<simg>.setpos( ipx1+ds, ipy2+ds );
				}
				4 => {
					<san>.setpos( ipx2, ipy2 );
					<simg>.setpos( ipx2+ds, ipy2+ds );
				}
				? => ;
			}
		}
		
		<san> (s) { (string s)
			.var2("smenu", s);
			.Button_isin;
			//.Button_moveonms;
			.addmethod( "butmoveon", func {
				if( igmstate!=1 ) return;
				advmouse.setact;
				imovon.setpos( .getpx, .getpy );
				imovon.setz( .getz+1 );
				imovon.show;
				} );
			//.Button_moveoffms;
			.addmethod( "butmoveoff", func {
				if( igmstate!=1 ) return;
				advmouse.setstd;
				imovon.hide;
				} );
			.addmethod("butclick", func {
				if( igmstate!=1 ) return;
				sPuzzle = smenu;
				//gameapi.play("WyborPuz");
				igmstate=2;
				mus.fadeout(1000);
				ccs.close( func { gameapi.play("WyborPuz"); } );
				} );
			but1.add(this);
		};
	}
	anbutexit_lclick	{
		if( igmstate!=1 ) return;
		igmstate=2;
		ccs.close( func {
			if( sgmversion.in(A, "pokazfarm", "pokazchest1", "pokazchest2",
				"pokazvehicles1", "pokazvehicles2") )
				gameapi.play("OutroA");
			else gameapi.play("OutroPuz");
			} );
		//.askfor("OutroPuz");
	}
	mouse_lclick	{
	}
}

game WyborPuz : StdGame	{
	init	{
		StdGame::init("wyborpuz");
		.img = ("bgwybor.jpg");
		
		new Buttons cbut("buts.pyz");
		
		if( sgmversion=="d" )	{
			cbut {
				grbuts.eval( func {
					if( .actionname=="wytlok" &&
						!engine.fileexist("scripts/d/wytlok/"+sPuzzle.strsubbs("puz")+".pyz") )
						.hide;
					} );
			};
		}
		
		.cbutexit;
		.cutscene;
		.timer = ("timgo", 500, func {
				ccs.close( func {
					gameapi.play("PuzzleB");
				} );
			} );
		.timer = ("timgo2", 500, func {
				ccs.close( func {
					gameapi.play("Wytlok");
				} );
			} );
		ccs.enter( null );
	}
	cbut_lclick	{
		if( igmstate!=0 )
			return;
		match (sobject) 	{
			"music" => ;
			"12" => { iPuzRow = 3; iPuzCol = 4; .mplay;  }
			"20" => { iPuzRow = 4; iPuzCol = 5; .mplay; }
			"30" => { iPuzRow = 5; iPuzCol = 6; .mplay; }
			"48" => { iPuzRow = 6; iPuzCol = 8; .mplay; }
			"wytlok" => {
				igmstate=1;
				timgo2.play;
				}
			? => ;
		}
	}
	mplay	{
		igmstate = 1;
		timgo.play;
	}
	anbutexit_lclick	{
		sMenuMode=null;
		gameapi.play("MenuPuzzle");
	}
}

game IntroPuz : StdGame	{
	init	{
		StdGame::init("intropuz");
		.img = ("intro.jpg");
		.timer = ("timend", 3000, "mgo");
		timend.play;
		.cutscene;
		ccs.enter(null);
	}
	mgo	{
		if( igmstate==0 )	{
			igmstate=1;
			ccs.close( func { gameapi.play("MenuPuzzle"); } );
		}
	}
	mouse_lclick	{
		.mgo;
	}
}

game OutroPuz : StdGame	{
	init	{
		StdGame::init("outropuz");
		.path = ( sgmversion + "/intropuz");
		
		.img = ("outro.jpg");
		
		.timer = ("timend", 4000, "mgo");
		.cutscene;
		ccs.enter( func { timend.play; } );
		//timend.play;
	}
	mgo	{
		if( igmstate==0 )	{
			igmstate=1;
			ccs.close( func { gameapi.exit; } );
			//gameapi.exit;
		}
	}
	mouse_lclick	{
		.mgo;
	}
}

