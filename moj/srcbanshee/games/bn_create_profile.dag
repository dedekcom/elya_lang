game mgCreateProfile : StdGame	{
	init	{
		StdGame::init("mg_createprofile"); 
		.imgs = (A, "bkg.jpg 1", "popup_bkg.pyz 2","ok_button.pyz 3","cancel_button.pyz 3", "input.pyzH 2" ); 
		
		 .butpopexit;  
		new bool p_znak = true;	
		 
		new font fntprnom;
		fntprnom.load( dbconf.dbget("bookfont:"), 40);  
 
		clsmen.saveonset = (true);
		
		new int iProfilId = 1;  
		 
		new ConTextTyper input("fntprnom", 40, 255,255,255, "a0 ", 9);
		input.setpos( <"aninput">.getcx - <"aninput">.getw /2  , <"aninput">.getcy - <"aninput">.geth /2);
		input.setz(30);
		 
		 
		input.txtset(dbgame.dbget("newplayer"));
		input.show;
		input.enable;
		 
		anok_button {
			.addmethod("isbutin", func { (@x, @y)
				.isin(x,y,1,1);
			} );
			.addmethod("butmoveon", func {
				.setframe(-1,1); 
				advmouse.setstd;
				 
			} );
			.addmethod("butmoveoff", func {
				.setframe(-1,0); 
				advmouse.setstd; 
				} );
			.addmethod("butclick", func {
				if (!.isvisible)
					return;
				clsmen.set("currentprofile",iProfilId);
				clsmen.set("profilename_"+iProfilId, input.get());
				.setstdprofile; 
				.mend;	
				} );
			butgame.add(this);
		};
		
		ancancel_button {
			.addmethod("isbutin", func { (@x, @y)
				 
				.isin(x,y,1,1);
				 
				} );
			.addmethod("butmoveon", func {
				.setframe(-1,1);  
				advmouse.setstd;
				 
				} );
			.addmethod("butmoveoff", func {
				.setframe(-1,0);  
				advmouse.setstd;
				 
				} );
			.addmethod("butclick", func {
				//if (new_profil)
				{
					clsmen.set("currentprofile",iProfilId);
					clsmen.set("profilename_"+iProfilId, dbgame.dbget("newplayer"));
					.setstdprofile; 
				}
				
				.mend;	
				} );
			butgame.add(this);
			
		 
		};
		
		mus.smixer = ("engine");
		mus.playstr("intro.ogg -v 80 -l");
		
		ccs.buildblack;
		 
		ccs.enter( func {
			.advsetstdstate;
			keyboard.show(<"aninput">.getpx , <"aninput">.getpy,<"aninput">.getw,<"aninput">.geth);
		} );  
			 
		 
	}
	
 
	input_ontype	{ 
		if(p_znak)
		{
			@znakl = input.get(0);
			input.txtset("");
			//input.Sdir = ("center");
			p_znak =  false;
		}
	}
	
	input_ontyped	{	.mcheckname;	}
	input_onenter{
		this.enable();
		.mcheckname();
	}
	
	mcheckname	{
		@s = input.get;
		s.clear;
		s.length>0 ? anok_button.show : anok_button.hide;
	}
	 
	 
	
	setstdprofile	{
		clsmen.set("difficulty_"+iProfilId,1);
		clsmen.set("fullscreen",1);
	 	clsmen.set("sound_volume", 50);
		clsmen.set("voice_volume", 50);
		clsmen.set("music_volume", 50);
	//	clsmen.set("sfx_volume"+iProfilId, .stdsndvol);
		clsave.set("GAME_diflevel", 1);	
		 
		//	clsave.bset("GAME_survey_mode");	
 	}
	
	mend	{
		keyboard.hide;
		mus.fadeout(300);
		ccs.close( func { 
			gameapi.play("MainMenu"); 
		} );
		 
	}	
}
