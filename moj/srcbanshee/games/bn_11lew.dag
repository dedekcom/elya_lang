
game mg11_lew :Banshee {
	init{
    Banshee::init("mg11_lew");
    
    mus.playstr("crying_loop -v 70 -l");
    
    .imgs = (A,"bkg.jpg 1", "base.pyz 2", "4.pyz 3", "3.pyz 4", "2.pyz 5", "1.pyz 6", "mask.pyz 7", "ramka.pyz 8","win.pyzH 9", "popexit.pyz 10", "2_hint_mask.pyzH 11", "3_hint_mask.pyzH 12", "4_hint_mask.pyzH 13");
    
    .sfxs = (A, "ceglamove2 70", "ceglaput 90", "podswietl 70");
    
    .copyanima("an2", "an2copy"); an2copy.hide;
    .copyanima("an3", "an3copy"); an3copy.hide;
    .copyanima("an4", "an4copy"); an4copy.hide;
	.butpopexit;
	
	.askopis("mg11"); 
    
	anaskopis.ansetbpos( anpopexit.getcx + anaskopis.getw, anpopexit.getcy - anaskopis.geth/2);
    
	anbase {
  		.Button_isinalpha; 
      advmouse.set("normal");
      .addmethod("butmoveon", func {
			 
			if (!.all_inserted)
				advmouse.set("use");
			else
				advmouse.setstd;
				} );
			.addmethod("butmoveoff", func {
				 
				advmouse.setstd;
				} ); 
      
      .addmethod("butclick", func {
        .no_items_warning; 
      } );
  		butgame.add(this);
  	}; 
   imgbkg {
		.Button_isinalpha;
		.addmethod("butclick", func {
			if( !.advstdstate ) return;
			.mend;
			} );
  		butgame.add(this);
  	};       
    
     
  //  anwin.setdrawmode(1);
    
    //   .addtopck("kawalek_lwa2");
    //  .addtopck("kawalek_lwa3");
    //  .addtopck("kawalek_lwa4");
   
    new int center_x =  rgmscalex * 666;
    new int center_y =  rgmscaley * 374;
    
    new int rot1 = 0;
    new int rot2 = 0;
    new int rot3 = 0;
    new int rot4 = 0;
  
    new filter ftrot2;
    ftrot2.link("an2");
    ftrot2.setpivottype(0);
    
    new filter ftrot3;
    ftrot3.link("an3");
    ftrot3.setpivottype(0);
    
    new filter ftrot4;
    ftrot4.link("an4");
    ftrot4.setpivottype(0);  
   
    //obiekty dla hintów
    new filter frot2;
    frot2.link("an2_hint_mask");
    frot2.setpivottype(2);
    
    new filter frot3;
    frot3.link("an3_hint_mask");
    frot3.setpivottype(2);
    
    new filter frot4;
    frot4.link("an4_hint_mask");
    frot4.setpivottype(2);
    
    an2_hint_mask.move(center_x,center_y);
    an3_hint_mask.move(center_x,center_y);
    an4_hint_mask.move(center_x,center_y); 
  
    an2{
       .addmethod("isbutin", func { (@x, @y)
				  .isin(x,y,1,1);
				} ); 
  			.addmethod("butmoveon", func {
  			if (!clsave.bis("e1_kawalek_lwa2_inserted"))
				advmouse.set("normal");
            else
              if (.all_inserted && !.is_mg_finished)
                advmouse.set("take");
              else
                advmouse.set("normal");
  				} );
  			.addmethod("butmoveoff", func {
					advmouse.setstd;
  				} ); 
				.addmethod("butclick", func {
  				if( !.advstdstate || .is_mg_finished || !.all_inserted) 
          {
             .no_items_warning; 
             return;
          }
          fxceglamove2.play;
          .rotate2(30);
         
        } );
				butgame.add(this);
    };  
    
    an3{
       .addmethod("isbutin", func { (@x, @y)
				  .isin(x,y,1,1);
				} ); 
  			.addmethod("butmoveon", func {
  				 
  				if (!clsave.bis("e1_kawalek_lwa3_inserted"))
            advmouse.set("normal");
          else
              if (.all_inserted && !.is_mg_finished)
                advmouse.set("take");
              else
                advmouse.set("normal");
  				} );
  			.addmethod("butmoveoff", func {
  				 
  				  advmouse.setstd;
  				} ); 
				.addmethod("butclick", func {
					if( !.advstdstate || .is_mg_finished || !.all_inserted) 
          {
             .no_items_warning; 
              return;
          }
          fxceglamove2.play;
          .rotate3(30);
        } );
				butgame.add(this);
    };    
    
     an4{
        .addmethod("isbutin", func { (@x, @y)
				  .isin(x,y,1,1);
				} ); 
  			.addmethod("butmoveon", func {
  				 
  					if (!clsave.bis("e1_kawalek_lwa4_inserted"))
              advmouse.set("normal");
            else
              if (.all_inserted && !.is_mg_finished)
                advmouse.set("take");
              else
                advmouse.set("normal");
  				} );
  			.addmethod("butmoveoff", func {
  				 
  				  advmouse.setstd;
  				} ); 
				.addmethod("butclick", func {
					if( !.advstdstate || .is_mg_finished || !.all_inserted) 
          {
             .no_items_warning; 
            return;
          }
          fxceglamove2.play;
          .rotate4(30);
        } );
				butgame.add(this);
    };
    
    if (clsave.bis("e1_kawalek_lwa2_inserted"))
      an2.play("inserted"); 
    if (clsave.bis("e1_kawalek_lwa3_inserted"))
      an3.play("inserted"); 
    if (clsave.bis("e1_kawalek_lwa4_inserted"))
      an4.play("inserted"); 
     
    .timer = ("timsay", 1, func { if (!clsave.bis("e1_kawalek_lwa2_inserted") || !clsave.bis("e1_kawalek_lwa3_inserted") || !clsave.bis("e1_kawalek_lwa4_inserted"))
    { 
      .cbplay("snd_brak_kawalkow"); 
    }} ); 
     
    .random_rings(); 
 
    if (!clsave.bis("e1_kawalek_lwa2_inserted") || !clsave.bis("e1_kawalek_lwa3_inserted") || !clsave.bis("e1_kawalek_lwa4_inserted"))
    { 
      .newsndfree("snd_brak_kawalkow", "kinnat_c1d1_34");
      snd_brak_kawalkow.addmethod("onfinish", "advsetstdstate");
      .no_items_warning;  
      
    }
	else
	{
		guihint.switchtoskip;  
		 
		anaskopis.show; 
	}
    
    .stdstart;
  } // koniec init
  
  all_inserted{
    if (!clsave.bis("e1_kawalek_lwa2_inserted") || !clsave.bis("e1_kawalek_lwa3_inserted") || !clsave.bis("e1_kawalek_lwa4_inserted"))
      return false;
    else
      return true;
  }
  
 
   
  rotate2(int angle)
  {
    ftrot2.rotate(angle);
    rot2 += angle; 
    
    if (rot2.abs() == 360)
    {
      rot2 = 0;  
    }  
    frot2.rotate(angle);
    if (.check_won())
      .finish();
  }
  
  rotate3(int angle)
  {
    ftrot3.rotate(angle);
    rot3 += angle; 
    if (rot3.abs() == 360)
    {
      rot3 = 0;  
    }  
    frot3.rotate(angle);
    if (.check_won())
      .finish();
  }
  
  rotate4(int angle)
  {
    ftrot4.rotate(angle);
    rot4 += angle; 
    if (rot4.abs() == 360)
    {
      rot4 = 0; 
    }
    frot4.rotate(angle); 
    if (.check_won())
      .finish();
  }
  
  random_rings()
  {
      int rand4 = 8->rand()+2;
      .rotate4(rand4*30);
      
      int rand3 = 8->rand()+2;
      .rotate3(-rand3*30);
      
      int rand2 = 8->rand()+2;
      .rotate2(rand2*30);
  }
  
  check_won {
    /*if (!clsave.bis("e1_kawalek_lwa2_inserted"))
      return false;  
    if (!clsave.bis("e1_kawalek_lwa3_inserted"))
      return false;  
    if (!clsave.bis("e1_kawalek_lwa4_inserted"))
      return false; 
    if (rot2 != 0)
      return false; 
    if (rot3 != 0)
      return false; 
    if (rot4 != 0)
      return false; 
    return true;  */
    (clsave.bis("e1_kawalek_lwa2_inserted") && clsave.bis("e1_kawalek_lwa3_inserted") && clsave.bis("e1_kawalek_lwa4_inserted") &&
	rot2 == 0 && rot3 == 0 && rot4 == 0);
  } 
  
  finish()
  {
    advmouse.setstd;
    .set_mg_finished();
    fxpodswietl.play;
	anaskopis.anfadeout(500,null);
    anwin.anfadein(1200,func{.timfinito;}); 
  }
  
  mend	{ 
	mus.fadeout(1000);
    .stdexitdefadv("ad11_altana", "gamead11_altana0");
	}
  
  USE_kawalek_lwa2	{
    .advsetstdstate; 
    if(anbase.isin(mouse.getpos,1,1) ){
		.removefrompck("kawalek_lwa2");
		fxceglaput.play;
		clsave.bset("e1_kawalek_lwa2_inserted"); 
		an2.play("inserted");
		advmouse.setstd; 
		if (.all_inserted)
		{
			guihint.switchtoskip;
			anaskopis.show;
		}
		if (.check_won())
			.finish();
    } 
    else {
		  .item_gotopck;
		}
	}  
    
  USE_kawalek_lwa3	{
    .advsetstdstate;
    if(anbase.isin(mouse.getpos,1,1) )	{
		.removefrompck("kawalek_lwa3");
		fxceglaput.play;
		clsave.bset("e1_kawalek_lwa3_inserted"); 
		an3.play("inserted"); 
		advmouse.setstd; 
		if (.all_inserted)
		{
			guihint.switchtoskip;
			anaskopis.show;
		}
		if (.check_won())
			.finish();
		} 
    else {
		  .item_gotopck;
		} 
  }
  USE_kawalek_lwa4	{
    .advsetstdstate;
    if(anbase.isin(mouse.getpos,1,1) )	{
		.removefrompck("kawalek_lwa4");
		fxceglaput.play;
		clsave.bset("e1_kawalek_lwa4_inserted"); 
		an4.play("inserted");
		advmouse.setstd; 
		if (.all_inserted)
		{
			guihint.switchtoskip;
			anaskopis.show;
		}
		if (.check_won())
			.finish();
		} 
    else {
		  .item_gotopck;
		}
     
  }
  
	no_items_warning
	{
		if( !.advstdstate ) return;
		timsay.play;
	}
	
	SKIP_CLICK	{
		if( .advstdstate )	{
			guihint.switchtohint;
			.finish();
		}
	 }    
  
	HINT_CLICK {
		if( clsave.bis("ma_kawalek_lwa2") )	{
			.showhintitem("kawalek_lwa2");
			.showhint("an2_hint_mask");
		} else if( clsave.bis("ma_kawalek_lwa3") )	{
			.showhintitem("kawalek_lwa3");
			.showhint("an3_hint_mask");
		} else if( clsave.bis("ma_kawalek_lwa4") )	{
			.showhintitem("kawalek_lwa4");
			.showhint("an4_hint_mask");
		 
		} 
		else if(.all_inserted)
		{
			if (rot2 != 0)   
				.showhintxy( an2copy.getcx, an2copy.getpy + 20, 0 );
			else if (rot3 != 0)   
				.showhintxy( an3copy.getcx, an3copy.getpy + 20, 0 );
			else if (rot4 != 0)    
				.showhintxy( an4copy.getcx, an4copy.getpy + 20, 0 );
			 		
		} else
			.showhint("anpopexit");   
	}
}
 
