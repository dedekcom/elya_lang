
class StdGameSave : StdGame	{
	init(string s)	{
		StdGame::init(s);
	}
	save_game	{	BanGui::_save_game(.getsavename);	}
	load_game	{	BanGui::_load_game(.getsavename);	}
	can_save	{	BanGui::can_save;	}
}

class ButtonBanshee : Button {
	init {
		Button::init;
	}
	onmousemove	{
		if( .getlock ) return;
		if( sclicked!=null )	{
			if( <sclicked>.hasaddedmet("butmoving") )	<sclicked>.butmoving;
		}
		|int x, int y| = mouse.getpos;
		if(grbuts.isinfunc(x,y,"isbutin") )	{
			@s = grbuts.getsfound;
			if( s!=sobject && .gui_canclick2v(s) )	{
				.lastoff;
				 
				sobject = s;
				.<this + "_moveon">;
 				if( <s>.hasaddedmet("butmoveon") /*&& .gui_canclick2v(s)*/ )
					<s>.butmoveon;
			}
		}
		else {
			.lastoff;
		}
	}
	_butmouselclick	{
		.<this + "_lclick">;
		if( sobject!=null)	{
			sclicked = sobject;
			if (<sobject>.hasaddedmet("butclick") && .gui_canclick2v(sobject) )	{
				<sobject>.butclick;
			}
		}
	}
}

class BansheeStd : StdGame, BanGui	{
	init(string s)	{
		StdGame::init(s);
		if( PrzygodaMode )	{
			BanGui::init;
			.deletegmobj("butgame");
			new ButtonBanshee butgame;
			banguisrc.load;
			.initgui;
			if(!bHOInventory) .inventory_show;
			
			new string save_prefix = clsave.get("epizod")->getb(0,2) + "_" + GAME + "_";
		}
	}
	csubplay(string s)	{
		if( igmsubtitle )	{
			int ilektor = igmlektor;
			if( !<s>.loaded )	{
				igmlektor = 0;
			}
			@dt = subtitle.play(s);
			if( igmlektor || dt<=0 ) <s>.play;
			else {
				timlektor.setdelay( dt );
				timlektor.play;
				//sfxblink.play;
			}
			imgnextdialog.setpos( igmoffsetx, igmoffsety+subtitle.geth );
			if( dt > 0 && igmlektor )	{
				imgnextdialog.show;
			}
			igmlektor = ilektor;
		} else
			<s>.play;
	}
	//---------------- button exit popup
	butpopexit	{
		anpopexit {
			.Button_isinalpha;
			.vars2(A, "bholdon", false);
			.addmethod("butmoveon", func {
				//if( !.advstdstate ) return;
				if( .isin(mouse.getpos,1,1) )	{
					//advmouse.setbut;
					sfxbutmoveon2.play;
					.setframe(-1,1);
				}
				} );
			.addmethod("butmoveoff", func {
				//if( !.advstdstate ) return;
				advmouse.setstd;
				.setframe(-1,0);
				} );
			.addmethod("butclick", func {
				if( !.advstdstate || bholdon ) return;
				sfxbutclick2.play;
				.mend;
				} );
			butgame.add(this);
		};
	}
	butpopexitisinramka	{
		anpopexit.addmethod("isbutin", func { (int x, int y)
			.isin(x,y,1,1) || !anramka.isin(x,y,1,0);
			} );
	}
	loadimgexitbut	{
		imgbkg.Button_isin;
		imgbkg.addmethod("butclick", func {
			if( .advstdstate )
				.mend;
			} );
		butgame.add("imgbkg");
	}
	loadhoexit	{
		//.newanima("anhoexit", "$scripts/sys_gui/popexit.pyz", 1000);
		if( HiddenShape ) return;
		new ImgRect anhoexit;
		anhoexit.setrect( 0, guihoinventory.getpy - 4, igmappw, igmapph );
		anhoexit.setz( guihoinventory.getz - 1 );
		//anhoexit.ansetbpos( igmoffsetx + iResX - anhoexit.getw, igmoffsety );
		//anhoexit.Button_stdalpha;
		anhoexit.Button_isin;
		anhoexit.addmethod("butmoveon", func {
			if( .canexit )
				advmouse.set("godd");
			});
		anhoexit.Button_moveoffms;
		anhoexit.addmethod("butclick", func {
			if( .canexit )	{
				if( <GAME>.hasmet("mexit_hidden") ) .mexit_hidden;
				else {
					mus.fadeout(1000);
					@s = clsave.get("GAME_sgmlastscene");
					.stdexitdefadv(s->strsubbs("game")->strsubes("0"), s);
				}
			}
			} );
		butgame.add("anhoexit");
	}
	get_mg_save	{	save_prefix + "finished";	}
	set_mg_finished	{	clsave.bset( .get_mg_save );	}
	is_mg_finished	{	clsave.bis( .get_mg_save );	}
	returntomenu	{
		gameapi.play("MainMenu");
		ccs.buildfromscreen;
	}
	askopis(string s)	{
		.newanima("anaskopis", "$scripts/sys_gui/askopis.pyz", 1000);
		anaskopis.var2("sopis", s);
		anaskopis.ansetbpos( igmoffsetx + iResX - anaskopis.getw, igmoffsety ); 
		anaskopis.Button_stdalpha;
		anaskopis.Button_moveon_std;
		anaskopis.addmethod("butclick", func {
			if( .advstdstate )	{
				if( clsave.get("GAME_acttutorial") == "T7a" )
				{
					.hide_tutorial;
					 
				}
				.show_mghelp(sopis);
			}
			} );
		butgame.add("anaskopis");
	}
	mousemove	{
		.gmcontrol_mousemove;
		if( PrzygodaMode )	{
			.gui_mousemove;
		}
	}
	mouserclick	{
		.gmcontrol_mouserclick;
		if( PrzygodaMode && (.advstdstate || sgmstate=="state_newitem_shown" ) )	{
			_ = .gui_mouserclick;
		}
	}
	virtual can_skip_mg	{	false;	}
	virtual skip_mg		{	}
}

class Banshee : BansheeStd	{
	init(string s)	{
		bHOInventory = false;
		BansheeStd::init(s);
	}
}

class HOBanshee : Hidden, BansheeStd	{
	HOBanshee_init(string s, string su)	{
		bHOInventory = true;
		BansheeStd::init(s);
		.init_hidden(su);
		.loadhoexit;
	}
	
	stdhoenter	{
		ccs.enter( func {
			igmstate = 1;
			.advsetstdstate;
			} );
	}
	mtoloupe(string sname)	{
		string s;
		if( <GAME>.hasvar(sname) ) s = sname;
		else {
			if( .istakenhoitem(sname) ) return;
			s = .mgetel(sname);
		}
		.gui_toloupe(s);
		guiloupemask.setz( <grguiloupe.last>.getz );
		<s>.hide;
		<s>.var2("myz",<s>.getz);
		if( !bhoshape )
			< <s>.stxtview>.createtxt( .holoupecol );
		
		<s>.addmethod("isbutin", func { (@x, @y)
			if( .loupe_visible )	{
				.setframe(-1,0);
				.isin(x,y,0,1);
				.setframe(-1,1);
			} else 0;
			} );
		<s>.addmethod("butmoveon", func {
			//guiloupemask.setz(.getz);
			//.setz(guiloupemask.getz);
			;
			} );
		<s>.addmethod("butmoveoff", func {
			//guiloupemask.setz(guiloupe.getz-1);
			//.setz(myz);
			;
			} );
	}
	holoupecol	{	return 0,202,1;	}
	mhintonobj(string s)	{
		if( s==null ) return false;
		if( .gui_inloupe(s) )	{
			.showhint2v(s);
			.showhint2v("guiglass");
		} else {
			@actfr = <s>.framenr;
			<s>.setframe(-1,0);
			string s2 = .mgetfirsthint;
			<s2>.setpos( <s>.getcx, <s>.getcy );
			<s>.setframe(-1,actfr);
			<s2>.setz( 600 );
			<s2>.play(0);
		}
		true;
	}
  //----------------  double_screen
	finalpopexit	{
		igmstate = 8;
		sgmstate = "state_findbscreen";
		.copyanima("anpopexit", "anpopexitscr");
		anpopexitscr.setz( anpopexit.getz + 1 );
		anpopexitscr {
			.addmethod("isbutin", func { (int x, int y)
				if( .isin(x,y,1,0) )	{
					if( .framenr==0 )	{
						advmouse.setstd;
						.setframe(-1,1);
					}
					true;
				} else if( sgmstate=="state_newitem_shown" )	{
					if( .framenr==1 )	{
						advmouse.setstd;
						.setframe(-1,0);
					}
					true;
				} else false;
				} );
			.addmethod("butclick", func {
				if( sgmstate=="state_newitem_shown" )	{
					if( .framenr==1 )
						sfxbutclick2.play;
					<imdbls.sbkg>.hide;
					<imdbls.stxtnew>.hide;
					<imdbls.sitem1>.hide;
					<imdbls.sitem2>.hide;
					anpopexitscr.hide;
					.hide;
					sgmstate = "state_foutdbscreen";
					imdbls.show;
					imdbls.anzoomfadeinout(ishowpouptime,-1,-1, "mend" );
				}
				} );
			butgame.addbut(this);
		};
	}
  
  
  show_double_screen(string item1, string item2, string background)	{	<GAME> (item1,item2,background)	{
	(string item1, string item2, string background)
	
	 	.finalpopexit;
     
    if (item1 == "rune")
      .saveitemtostack("runa");
    else
      .saveitemtopck(item1);
    
    if (item2 == "rune")
       .saveitemtostack("runa");
    else
		  .saveitemtopck(item2);
            
		@dh = 0.12;
		@stxtnew = "found";
		@stxtitem_1 = "item1";
		@stxtitem_2 = "item2";
		.newtext(stxtnew, dbgame.dbget("found_new_items"),"fnthogui", .guifontcolor); 
		.newtext(stxtitem_1, dbitems.dbget(item1), "fnthogui", .guifontcolor); 
		.newtext(stxtitem_2, dbitems.dbget(item2), "fnthogui", .guifontcolor); 
		@centerx = igmappw/2 - <background>.getcx;
		@centery = igmapph/2 - <background>.getcy;
     
		<background>.setpos(centerx,centery); 
		<stxtnew>.setpos( <background>.getcx - <stxtnew>.getw/2, <background>.getpy + dh * <background>.geth );
		<stxtnew>.setz(330);
		anpopexitscr.setpos(<background>.getpx + <background>.getw - anpopexitscr.getw/2 -4,<background>.getpy +  anpopexitscr.geth/2 +5);
		@bottom =  <background>.getey - <stxtitem_1>.geth - <stxtitem_1>.geth;  
		<stxtitem_1>.setpos( <background>.getcx - <background>.getw/4 - <stxtitem_1>.getw/2, bottom);
		<stxtitem_1>.setz(330);
		<stxtitem_2>.setpos( <background>.getcx + <background>.getw/4 - <stxtitem_2>.getw/2, bottom);
		<stxtitem_2>.setz(330);
		.set_mg_finished(); 
		//.timfinito;
		new img imdbls;
		imdbls.vars2(A, "sbkg", background, "stxtnew", stxtnew, "sitem1", stxtitem_1, "sitem2", stxtitem_2, "bisitempopup", true);
		imdbls.imgbuildfromlist(A, background, stxtnew, stxtitem_1, stxtitem_2, "anpopexitscr");
		<background>.hide; <stxtnew>.hide; <stxtitem_1>.hide; <stxtitem_2>.hide;
		imdbls.setz( 350 );
		imdbls.hide;
		.timplay("timdbls", 500, func {
			sfxopenpopup.play;
			imdbls.anzoomfadeinout(ishowpouptime,1,1, func {
			.hide;
			<sbkg>.show; <stxtnew>.show; <sitem1>.show; <sitem2>.show;
			anpopexitscr.show;
			sgmstate = "state_newitem_shown";
			} );
			} );
	}; }
  show_single_screen(string item, string background)	{	<GAME> (item,background)	{
	(string item, string background)
    .finalpopexit;
     
    if (item == "rune")
      .saveitemtostack("runa");
    else
      .saveitemtopck(item);
		<background>.show;
		<background>.Button_isin;
		<background>.addmethod("butclick", func {
			if( .advstdstate )
				.mend;
			} );
		butgame.add(background);    
		@dh = 0.12;
		@stxtnew = "found";
		@stxtitem = "item";
	 
		.newtext(stxtnew, dbgame.dbget("found_new_item"),"fnthogui", .guifontcolor); 
		.newtext(stxtitem, dbitems.dbget(item), "fnthogui", .guifontcolor); 
	 
		@centerx = igmappw/2 - <background>.getcx;
		@centery = igmapph/2 - <background>.getcy;
     
		<background>.setpos(centerx,centery); 
		<stxtnew>.setpos( <background>.getcx - <stxtnew>.getw/2, <background>.getpy + dh * <background>.geth );
		<stxtnew>.setz(330);
		anpopexitscr.setpos(<background>.getpx + <background>.getw - anpopexitscr.getw/2 -15,<background>.getpy +  anpopexitscr.geth/2 +15);
		@bottom =  <background>.getey - <stxtitem>.geth - <stxtitem>.geth;  
		<stxtitem>.setpos( <background>.getcx  - <stxtitem>.getw/2, bottom);
		<stxtitem>.setz(330);
		.set_mg_finished(); 
		//.timfinito;
		new img imdbls;
		imdbls.vars2(A, "sbkg", background, "stxtnew", stxtnew, "sitem1", stxtitem, "sitem2", stxtitem, "bisitempopup", true);
		imdbls.imgbuildfromlist(A, background, stxtnew, stxtitem, "anpopexitscr");
		<background>.hide; <stxtnew>.hide; <stxtitem>.hide;
		imdbls.setz( 350 );
		sfxopenpopup.play;
		imdbls.anzoomfadeinout(ishowpouptime,1,1, func {
			.hide;
			<sbkg>.show; <stxtnew>.show; <sitem1>.show; <sitem2>.show;
			anpopexitscr.show;
			sgmstate = "state_newitem_shown";
			} );
  
  }; }
	HINT_CLICK	{	.ho_hint_click;	}
	
	get_difficulty()
	{
		 
		if( clsmen.has("currentprofile") )	 
		{
			int iProfilId = clsmen.get("currentprofile");
			return clsmen.get("difficulty_"+iProfilId);
		}
		return 1;
	}
	
}

game BanFilm : StdGameSave	{
	init	{
		StdGameSave::init("film");
		//advmouse.set("empty");
		if( PrzygodaMode )	{
			BanGui::save_pocket(.getsavename);
		}
		
		.img = ("skip.pyzH 100"); 
		 
		anskip.setpos(igmappw -  igmoffsetx -  anskip.getw , igmapph - anskip.geth );
		anskip.setz(iGuiBookZ + 6);
		.timplay("timbloker", 3000, func{anskip.anfadein(1000,null);  }); 
		timbloker.start();
		 
		new Film film1;
		film1.setz( iGuiBookZ + 5 );
		film1.bcenter = (true);
		film1.bborders = (true);
		film1.musicclass = ("mus");
		film1.addmethod("onfinish", func {
			//ccs.buildfromfile("scripts/" + clsave.get("filmpath") + "/" + slastframe);
			ccs.buildfromscreen;
			string s = gameapi.getgamename;
			match( clsave.get("nextgame_type") )	{
				"-def" => {
					//.gotoadv(clsave.get("nextgame_path"), clsave.get("nextgame"));
					.stdexitdefadv(clsave.get("nextgame_path"), clsave.get("nextgame"));
				}
				"-adv" => {
					//.gotoadv2(clsave.get("nextgame_path"), clsave.get("nextgame"));
					.stdexitadvadv(clsave.get("nextgame_path"), clsave.get("nextgame"));
				}
				//? => gameapi.play(clsave.get("nextgame"));
				? => .stdexit(clsave.get("nextgame"));
			}
			} );
		new string slastframe;
		film1 {
			.playfilm( "scripts/"+clsave.get("filmpath") + "/", clsave.get("filmdb") );
			slastframe = sprefilm + iendklatka + ".jpg";
		};
		
		anskip 
		{
			.Button_isin;
			.Button_moveon_std;
			.Button_moveoff;
			.addmethod("butclick", func {
				if( film1.isplaying && !timbloker.isplaying ) 
					film1.stop(true);
					});
			 butgame.add(this); 		
		
		};
		
		
	}
	mouse_lclick	{
		//if( film1.isplaying && !timbloker.isplaying ) film1.stop(true);
	}
	showfps	{
		if( !.hasvar("cfps") )	{
			new CalcFPS cfps;
			cfps.stdset(14, 10, 10);
		}
		cfps.play;
	}
}

game SplashScreen : StdGame	{
	 
	init	{
		new bool exit = false;
		StdGame::init("splash");
		.newimg("splash_bf", "splash_bf.jpg", 0); 
		.newimg("splash_pw", "splash_pw.jpg", 1); 
		splash_pw.hide;
		 
		bool fullscreen = clsmen.get("fullscreen");
		
		int time = 2000;
		
		if (fullscreen)
				time *= 2;
		
		.timer = ("tim1", time, func {
				ccs.playfin( func {  splash_pw.show;}, func { tim2.play; } );
		} );
	 
		.timer = ("tim2", time, func {
			ccs.playfin( func {
					.mend();
				} 
			
			 , null );
		 } ); 
		 
		//mus.smixer = ("engine");
		//mus.playstr("intro.ogg -v 80 -l");
		 
		ccs.enter( func {
			ccs.buildblack; 
			tim1.play;  
			.advsetstdstate;
		} );
		
		
	}
	
	mend{
		if( clsmen.has("currentprofile") )	
		{	
			gameapi.play( dbconf.dbget("startgame:") );
		}
		else
		{
			gameapi.play("mgCreateProfile");
		} 
	}
	
	mouse_lclick	{
		 
		if( exit)  
			return;
		if (tim1.isplaying)
		{
			exit =  true;
			tim1.stop(true);
			ccs.playfin( func {splash_pw.show; }, func { tim2.play; .advsetstdstate; exit =  false;} );
		}
		else
		{
			 exit =  true; 
			 ccs.playfin(func {.mend();  .advsetstdstate; },null);  
		}
		 
		 
	}
	
} 

game SlideshowSurvey : StdGame	{
	 
	init	{
		 
		 
		new bool exit = false;
		StdGame::init("slideshow_survey");
		.newimg("screen1", "screen1.jpg", 0); 
		.newimg("screen2", "screen2.jpg", 1); 
		.newimg("screen3", "screen3.jpg", 2); 
		.newimg("screen4", "screen4.jpg", 3);
		.newimg("screen5", "screen5.jpg", 4); 
		.newimg("screen6", "screen6.jpg", 5);
		.newimg("screen7", "screen7.jpg", 5);
		screen2.hide;	
		screen3.hide;
		screen4.hide;
		screen5.hide;
		screen6.hide;
		screen7.hide;
		.imgs = (A,"gfx1.pyzGH 50", "gfx2.pyzGH 50","gfx3.pyzGH 50","gfx4.pyzGH 50","gfx5.pyzGH 50","gfx6.pyzGH 50","gfx7.pyzGH 50");  

		grgfx1.hide; 
		grgfx2.hide; 
		grgfx3.hide; 
		grgfx4.hide; 
		grgfx5.hide; 
		grgfx6.hide; 
		grgfx7.hide;	
		 
		.timer = ("tim1", 5000, func {
				ccs.playfin( func { grgfx1.hide; screen2.show; grgfx2.nplay(-1);}, func { tim2.play; } );
		 } );
		 
		.timer = ("tim2", 5000, func {
				ccs.playfin( func { grgfx2.hide; screen3.show; grgfx3.nplay(-1);}, func { tim3.play; } );
		 } );

		.timer = ("tim3", 5000, func {
				ccs.playfin( func {grgfx3.hide; screen4.show; grgfx4.nplay(-1); <grgfx4.getsac("0")>.anfadein(500,null);}, func { tim4.play; } );
		 } ); 

		.timer = ("tim4", 5000, func {
				ccs.playfin( func {grgfx4.hide; screen5.show; grgfx5.nplay(-1);}, func { tim5.play; } );
		 } ); 
		 
		 .timer = ("tim5", 5000, func {
				ccs.playfin( func {grgfx5.hide; screen6.show; grgfx6.nplay(-1);}, func { tim6.play; } );
		 } ); 
		 
		 .timer = ("tim6", 5000, func {
				ccs.playfin( func {grgfx6.hide; screen7.show; grgfx7.show; grgfx7.nplay(-1); <grgfx7.getsac("survey")>.hide; <grgfx7.getsac("2")>.anfadein(1000,func{<grgfx7.getsac("survey")>.anfadein(1000,null);});}, null );
		 } ); 
 	
		
		
		<grgfx7.getsac("survey")>{
			.addmethod("isbutin", func { (@x, @y)
				 
				 .advstdstate && .isin(x,y,1,0);
				} );
			.Button_moveon_std;
			.Button_moveoff;
			.addmethod("butclick", func {
				if( .advstdstate )	{
					/*@command =  "start \"\" "+  dbsurvey.dbget("survey_link");  ; 
					engine.system(command);*/
					gameapi.exit; 
				}
				});
			butgame.add(this);
		}; 
		
		 
		ccs.enter( func {
			ccs.buildblack; 
			tim1.play;
			grgfx1.nplay(-1); 
			.advsetstdstate;
			mus.smixer = ("engine");
			mus.playstr("ck1_loop.ogg -v 40 -l");
		} );
		 
	}
	 
	mouse_lclick	{
		 
		if(exit)  
			return;
		if (tim1.isplaying)
		{
			exit =  true;
			tim1.stop(true);
			grgfx1.hide;
			ccs.playfin( func {screen2.show; grgfx2.nplay(-1); }, func { tim2.play; .advsetstdstate; exit =  false;} );
		}
		
		if (tim2.isplaying)
		{
			exit =  true;
			tim2.stop(true);
			grgfx2.hide;
			ccs.playfin( func {screen3.show; grgfx3.nplay(-1); }, func { tim3.play; .advsetstdstate; exit =  false;} );
		}
		
		if (tim3.isplaying)
		{
			exit =  true;
			tim3.stop(true);
			grgfx3.hide;
			ccs.playfin( func {screen4.show; grgfx4.nplay(-1); <grgfx4.getsac("0")>.anfadein(500,null);}, func { tim4.play; .advsetstdstate; exit =  false;} );
		}
		
		if (tim4.isplaying)
		{
			exit =  true;
			tim4.stop(true);
			grgfx4.hide;
			ccs.playfin( func {screen5.show; grgfx5.nplay(-1);}, func { tim5.play; .advsetstdstate; exit =  false;} );
		}
		
		 
		if (tim5.isplaying)
		{
			exit =  true;
			tim5.stop(true);
			grgfx5.hide;
			ccs.playfin( func {screen6.show; grgfx6.nplay(-1);}, func { tim6.play; .advsetstdstate; exit =  false;} );
		}
		
		if (tim6.isplaying)
		{
			exit =  true;
			tim6.stop(true);
			grgfx6.hide;
			ccs.playfin( func {screen7.show; grgfx7.show; grgfx7.nplay(-1); <grgfx7.getsac("survey")>.hide; <grgfx7.getsac("2")>.anfadein(1000, func{<grgfx7.getsac("survey")>.anfadein(1000,null);});}, func { .advsetstdstate; exit =  false;} );
		}
		 
		 
	}
	
} 

game CutsceneBiblioteka : StdGame	{
	init	{
		PrzygodaMode = 1;
		StdGame::init("film");
		 
		//.newsndfree("snd0", "emma_c0d0_2");
		.newsndfree("snd1", "emma_c0d0_2a");
		.newsndfree("snd2", "emma_c0d0_2b");
		 
		//sndintro1.addmethod("onfinish", "mend");
		
		.img = ("skip.pyzH 100"); 
	 
		anskip.setpos(igmappw -  igmoffsetx -  anskip.getw , igmapph - anskip.geth );
		.timplay("timbloker", 3000, func{anskip.anfadein(1000,null);}); 
		timbloker.start();
		
		new Film film1;
		film1.bcenter = (true);
		film1.bborders = (true);
		film1.musicclass = ("mus");
		film1.load("scripts/cs02_kinnatbook/", "film");
		film1.addmethod("onfinish", func {
			if( !.cisplaying ) .mend;
			} );
		film1.showfirstframe;
		film1.loadborders;
		
		.timplay("timstart", 1000, func {
			film1.play;
			} );
		//.cbplay("snd0");
		
		anskip 
		{
			.Button_isin;
			.Button_moveon_std;
			.Button_moveoff;
			.addmethod("butclick", func {
				if( .cisplaying ) .cactsndstop(true);
				else if(film1.isplaying && !timbloker.isplaying ) 
						film1.stop(true);
				});
			 butgame.add(this); 		
		
		};
		
	}
	film_onsetframe_80	{	.cbplay("snd1");	}
	film_onsetframe_220	{	.cbplay("snd2");	}
	 
	showfps	{
		if( !.hasvar("cfps") )	{
			new CalcFPS cfps;
			cfps.stdset(14, 10, 10);
		}
		cfps.play;
	}
	
	mend	{
		 .stdexitdefadv("ad00_endintro", "gamead00_endintro0");
		 
	}
}


game cs_outro3 : StdGame	{
	init	{
		PrzygodaMode = 1;
		StdGame::init("film");
		 
		.newsndfree("snd1", "outro_c2_d1");
		.newsndfree("snd2", "outro_c2_d2");
		.newsndfree("snd3", "outro_c2_d3");
		.newsndfree("snd4", "outro_c2_d4");
		 
		 
		.img = ("skip.pyzH 100"); 
	 
		anskip.setpos(igmappw -  igmoffsetx -  anskip.getw , igmapph - anskip.geth );
		.timplay("timbloker", 3000, func{anskip.anfadein(1000,null);}); 
		timbloker.start();
		
		new Film film1;
		film1.bcenter = (true);
		film1.bborders = (true);
		film1.musicclass = ("mus");
		film1.load("scripts/cs_outro3/", "film");
		film1.addmethod("onfinish", func {
			if( .cisplaying ) .cactsndstop(true);
			  .mend;
			} );
		film1.showfirstframe;
		film1.loadborders;
		film1.play;
		anskip 
		{
			.Button_isin;
			.Button_moveon_std;
			.Button_moveoff;
			.addmethod("butclick", func {
				if( .cisplaying ) .cactsndstop(true);
				if(film1.isplaying && !timbloker.isplaying ) 
						film1.stop(true);
				});
			 butgame.add(this); 		
		
		};
		
	}
	film_onsetframe_90	{	.cbplay("snd1");	}
	film_onsetframe_160	{	.cbplay("snd2");	}
	film_onsetframe_290	{	.cbplay("snd3");	}
	film_onsetframe_400	{	.cbplay("snd4");	}
	 
	mend	{
		 .stdexitdefadv("ad06_posagmamy_night", "gamead06_posagmamy_night0");
		 
	}
}

game cs_outro4 : StdGame	{
	init	{
		PrzygodaMode = 1;
		StdGame::init("film");
		 
		.newsndfree("snd1", "outro_c3_d1");
		.newsndfree("snd2", "outro_c3_d2");
		.newsndfree("snd3", "outro_c3_d3");
		.newsndfree("snd4", "outro_c3_d4");
		 
		 
		.img = ("skip.pyzH 100"); 
	 
		anskip.setpos(igmappw -  igmoffsetx -  anskip.getw , igmapph - anskip.geth );
		.timplay("timbloker", 3000, func{anskip.anfadein(1000,null);}); 
		timbloker.start();
		
		new Film film1;
		film1.bcenter = (true);
		film1.bborders = (true);
		film1.musicclass = ("mus");
		film1.load("scripts/cs_outro4/", "film");
		film1.addmethod("onfinish", func {
			if( .cisplaying ) .cactsndstop(true);
			  .mend;
			} );
		film1.showfirstframe;
		film1.loadborders;
		film1.play;
		anskip 
		{
			.Button_isin;
			.Button_moveon_std;
			.Button_moveoff;
			.addmethod("butclick", func {
				if( .cisplaying ) .cactsndstop(true);
				if(film1.isplaying && !timbloker.isplaying ) 
						film1.stop(true);
				});
			 butgame.add(this); 		
		
		};
		
	}
	film_onsetframe_50	{	.cbplay("snd1");	}
	film_onsetframe_100	{	.cbplay("snd2");	}
	film_onsetframe_205	{	.cbplay("snd3");	}
	film_onsetframe_240	{	.cbplay("snd4");	}
	 
	mend	{
		 .stdexitdefadv("ad06_posagmamy_night", "gamead06_posagmamy_night0");
		 
	}
}


game cs_outro6 : StdGame	{
	init	{
		PrzygodaMode = 1;
		StdGame::init("film");
		 
		.newsndfree("snd1", "przewodnik_c5_d1_1");
		.newsndfree("snd2", "przewodnik_c5_d1_2");
		.newsndfree("snd3", "przewodnik_c5_d1_3");
	 
		 
		 
		.img = ("skip.pyzH 100"); 
	 
		anskip.setpos(igmappw -  igmoffsetx -  anskip.getw , igmapph - anskip.geth );
		.timplay("timbloker", 3000, func{anskip.anfadein(1000,null);}); 
		timbloker.start();
		
		new Film film1;
		film1.bcenter = (true);
		film1.bborders = (true);
		film1.musicclass = ("mus");
		film1.load("scripts/cs_outro6/", "film");
		film1.addmethod("onfinish", func {
			if( .cisplaying ) .cactsndstop(true);
			  .mend;
			} );
		film1.showfirstframe;
		film1.loadborders;
		film1.play;
		anskip 
		{
			.Button_isin;
			.Button_moveon_std;
			.Button_moveoff;
			.addmethod("butclick", func {
				if( .cisplaying ) .cactsndstop(true);
				if(film1.isplaying && !timbloker.isplaying ) 
						film1.stop(true);
				});
			 butgame.add(this); 		
		
		};
		
	}
	film_onsetframe_4	{	.cbplay("snd1");	}
	film_onsetframe_90	{	.cbplay("snd2");	}
	film_onsetframe_185	{	.cbplay("snd3");	}
 
	 
	mend	{
		 .stdexitdefadv("ad06_posagmamy_night", "gamead06_posagmamy_night0");
		 
	}
}

game cs_outro7 : StdGame	{
	init	{
		PrzygodaMode = 1;
		StdGame::init("film");
		 
		.newsndfree("snd1", "outro_c6_d1");
		.newsndfree("snd2", "outro_c6_d2");
		.newsndfree("snd3", "outro_c6_d3");
	 
		 
		 
		.img = ("skip.pyzH 100"); 
	 
		anskip.setpos(igmappw -  igmoffsetx -  anskip.getw , igmapph - anskip.geth );
		.timplay("timbloker", 3000, func{anskip.anfadein(1000,null);}); 
		timbloker.start();
		
		new Film film1;
		film1.bcenter = (true);
		film1.bborders = (true);
		film1.musicclass = ("mus");
		film1.load("scripts/cs_outro7/", "film");
		film1.addmethod("onfinish", func {
			if( .cisplaying ) .cactsndstop(true);
			  .mend;
			} );
		film1.showfirstframe;
		film1.loadborders;
		film1.play;
		anskip 
		{
			.Button_isin;
			.Button_moveon_std;
			.Button_moveoff;
			.addmethod("butclick", func {
				if( .cisplaying ) .cactsndstop(true);
				if(film1.isplaying && !timbloker.isplaying ) 
						film1.stop(true);
				});
			 butgame.add(this); 		
		
		};
		
	}
	film_onsetframe_113	{	.cbplay("snd1");	}
	film_onsetframe_174	{	.cbplay("snd2");	}
	film_onsetframe_415	{	.cbplay("snd3");	}
 
	 
	mend	{
		// .stdexitdefadv("ad06_posagmamy_night", "gamead06_posagmamy_night0");
		ccs.buildfromscreen;
		gameapi.play("credits");   
	}
}


game credits : StdGame	{
	init	{
		PrzygodaMode = 1;
		StdGame::init("credits");
		mus.smixer = ("engine");
		mus.playstr("Angels_choirs.ogg -v 40 -l"); 
		.imgs = (A, "bkg.jpg 1","credits.pyzH 25", "okienko.pyzH 50", "skip.pyzH 100");  
		 
		anskip.setpos(igmappw -  igmoffsetx -  anskip.getw , igmapph - anskip.geth );
		.timplay("timbloker", 3000, func{anskip.anfadein(1000,null);}); 
		timbloker.start();
		
		new int icredx1 = igmappw/2;
		new int icredy1 = igmapph;
		new int offsetx = 0; 
		
		@isize = 32;
		.newfont("fntcred_italic", "configs/fonts/FreeSerifItalic.ttf", isize);
		.newfont("fntcred_bold_italic", "configs/fonts/FreeSerifBoldItalic.ttf", isize);
		 
		 
		 
		new TextDb tdcred("fntcred_italic$fntcred_bold_italic", isize, "$path:"+ LANGDIR +"credits.db", .white,
			icredx1, icredy1, 5,125, "center");
		
		offsetx =  tdcred.getw / 2;
		tdcred.move(-offsetx,0);
		.cycle = ("timcred", func {
			tdcred.move(0, -1);
			 if( tdcred.getey < 0)	.mcredgo;
			.play;
		} );
		timcred.play;
		anskip 
		{
			.Button_isin;
			.Button_moveon_std;
			.Button_moveoff;
			.addmethod("butclick", func {
				if( .cisplaying ) .cactsndstop(true);
				 if( !timbloker.isplaying ) 
					.mend;
				});
			 butgame.add(this); 		
		
		};
		
	}
	
	mcredgo	{	tdcred.setpos( igmappw/2 -offsetx, icredy1 ); tdcred.show;	}
	 
	mend	{
		 
		ccs.close( func { 
			ccs.buildfromscreen;
			gameapi.play("MainMenu"); 
		} );  
		  
	}
}
