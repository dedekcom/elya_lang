; Dominik Dagiel   ix 2005

	new db,dbconf
	push "configs/config.beh"
	call dbconf,loadscript
	push "enginedebug:"
	call dbconf,dbgetint
	call engine,setdebugstate
	new int,igmdebug
	push "igmdebug:"
	call dbconf,dbgetint
	pop igmdebug
	new int,igmpcdebug
	push "igmpcdebug:"
	call dbconf,dbgetint
	pop igmpcdebug
	new int,igmexportan
	push "igmexportan:"
	call dbconf,dbgetint
	pop igmexportan
	new int,igmimportan
	push "igmimportan:"
	call dbconf,dbgetint
	pop igmimportan
	new int,igmdelay
	call engine,getloopdelay
	pop igmdelay
	new int,demo
	push "igmdemo:"
	call dbconf,dbget
	pop demo
	new int,igmwinlocal
	push "igmwinlocal:"
	call dbconf,dbgetint
	pop igmwinlocal
	new int,igmmac
	push "igmmac:"
	call dbconf,dbgetint
	pop igmmac
	new int,igmipad
	push "igmipad:"
	call dbconf,dbgetint
	pop igmipad
	new int,igmiphone
	push "igmiphone:"
	call dbconf,dbgetint
	pop igmiphone
	new int,igmandroid
	push "igmandroid:"
	call dbconf,dbgetint
	pop igmandroid
	new string,sgmdeveloper
	push "sgmdeveloper:"
	call dbconf,dbget
	pop sgmdeveloper
	new string,sgmproject
	push "sgmproject:"
	call dbconf,dbget
	pop sgmproject
	new string,save_dir
	push "saves"
	pop save_dir
	push demo
	cmp0
	je l2
	push "saves_survey"
	pop save_dir
l2:
	push igmdebug
	cmp0
	je l4
	push igmipad
	cmp0
	jne l7
	push igmmac
	cmp0
	jne l7
	push igmiphone
	cmp0
	jne l7
	push igmandroid
	jmp l8
l6:
	push 0
	jmp l8
l7:
	push 1
l8:
	jmp l9
l4:
	push 0
	jmp l9
l5:
	push 1
l9:
	cmp0
	je l10
	push "getsavepath"
	push "global0"
	call engine,addmethod
l10:
	method global0
	push "saves/"
	end method
	method checktouchpad
	push igmipad
	cmp0
	jne l12
	push igmiphone
	cmp0
	jne l12
	push igmandroid
	jmp l13
l11:
	push 0
	jmp l13
l12:
	push 1
l13:
	end method
	cthis checktouchpad
	cmp0
	je l15
	push igmpcdebug
	jmp l17
l15:
	push 0
	jmp l17
l16:
	push 1
l17:
	cmp0
	je l18
	call mouse,showsys
l18:
	new int,igmappw
	new int,igmapph
	call engine,getappsize
	pop igmapph
	pop igmappw
	new int,igmoffsetx
	new int,igmoffsety
	call engine,getscreenoffset
	pop igmoffsety
	pop igmoffsetx
	new int,iResX
	new int,iResY
	call engine,getscreenres
	pop iResY
	pop iResX
	new real,rgmscalex
	new real,rgmscaley
	call engine,getscreenscale
	pop rgmscaley
	pop rgmscalex
	new int,iDesktopX
	new int,iDesktopY
	call engine,getdesktopres
	pop iDesktopY
	pop iDesktopX
	method canchangetowindow
	push iDesktopX
	push iResX
	cmpjae
	cmp0
	je l19
	push iDesktopY
	push iResY
	cmpjae
	jmp l21
l19:
	push 0
	jmp l21
l20:
	push 1
l21:
	end method
	method getappcenter
	push igmappw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push igmapph
	push 2
	pop $b
	popax
	div $a,$b
	psax
	ret
	end method
	method edgeex
	push iResX
	push igmoffsetx
	pop $b
	popax
	add $a,$b
	end method
	method edgeey
	push iResY
	push igmoffsety
	pop $b
	popax
	add $a,$b
	end method
	method getwinpath
	localstring $1
	pop $1
	localstring $2
	push "appdata"
	call engine,getspecialpath
	pop $2
	push $2
	push "null"
	cmpjne
	cmp0
	je l23
	push $2
	push "/"
	pop $b
	popax
	add $a,$b
	push sgmdeveloper
	pop $b
	popax
	add $a,$b
	push "/"
	pop $b
	popax
	add $a,$b
	push sgmproject
	pop $b
	popax
	add $a,$b
	push "/"
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	add $a,$b
	jmp l22
l23:
	push $1
l22:
	end method
	method getsavepath
	push igmipad
	cmp0
	jne l26
	push igmmac
	jmp l27
l25:
	push 0
	jmp l27
l26:
	push 1
l27:
	cmp0
	je l28
	call engine,getsavepath
	jmp l24
l28:
	push igmwinlocal
	cmp0
	je l30
	push save_dir
	push "/"
	pop $b
	popax
	add $a,$b
	cthis getwinpath
	jmp l29
l30:
	push save_dir
	push "/"
	pop $b
	popax
	add $a,$b
l29:
l24:
	end method
	method buildsavedir
	push igmwinlocal
	cmp0
	je l32
	push igmipad
	neg
	cmp0
	je l32
	push igmmac
	neg
	jmp l34
l32:
	push 0
	jmp l34
l33:
	push 1
l34:
	cmp0
	je l35
	localstring $1
	push "appdata"
	call engine,getspecialpath
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l37
	push "/"
	push sgmdeveloper
	pop $b
	popax
	add $a,$b
	popax
	add $1,$a
	pop $1
	localint $2
	push $1
	call engine,mkdir
	pop $2
	push 0
	pop $2
	push $2
	push 0
	cmpje
	cmp0
	jne l40
	push $2
	push 1
	cmpje
	jmp l41
l39:
	push 0
	jmp l41
l40:
	push 1
l41:
	cmp0
	je l42
	push "/"
	push sgmproject
	pop $b
	popax
	add $a,$b
	popax
	add $1,$a
	pop $1
	push $1
	call engine,mkdir
	pop $2
	push 0
	pop $2
	push $2
	push 0
	cmpje
	cmp0
	jne l45
	push $2
	push 1
	cmpje
	jmp l46
l44:
	push 0
	jmp l46
l45:
	push 1
l46:
	cmp0
	je l47
	push "/"
	push save_dir
	pop $b
	popax
	add $a,$b
	popax
	add $1,$a
	pop $1
	push $1
	call engine,mkdir
	popax
l47:
l42:
l37:
l35:
	end method
	cthis buildsavedir
	new string,A
	push "!!!"
	pop A
	new real,PI
	push 3.14159265358979323846
	pop PI
	new int,BYTE0
	push "0"
	spushs
	push 0
	spop $h
	call $h,getbyte
	pop BYTE0
	new int,BYTE9
	push "9"
	spushs
	push 0
	spop $h
	call $h,getbyte
	pop BYTE9
	new int,BYTEa
	push "a"
	spushs
	push 0
	spop $h
	call $h,getbyte
	pop BYTEa
	new int,BYTEz
	push "z"
	spushs
	push 0
	spop $h
	call $h,getbyte
	pop BYTEz
	new int,BYTEA
	push "A"
	spushs
	push 0
	spop $h
	call $h,getbyte
	pop BYTEA
	new int,BYTEZ
	push "Z"
	spushs
	push 0
	spop $h
	call $h,getbyte
	pop BYTEZ
	new int,BYTE_
	push "_"
	spushs
	push 0
	spop $h
	call $h,getbyte
	pop BYTE_
	new int,BYTESPACE
	push " "
	spushs
	push 0
	spop $h
	call $h,getbyte
	pop BYTESPACE
	method empty_func
	end method
	method varget
	localstring $1
	pop $1
	push $1
	popax
	mov $a,[$a]
	psax
	end method
	method varset
	localstring $1
	localdef $2
	pop $2
	pop $1
	push $1
	spushs
	push $2
	spop $b
	popax
	mov [$b],$a
	end method
	method varnew
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	push $2
	spushs
	spop $e
	spop $d
	new [$d],[$e]
	end method
	method varnewif
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $2
	cthis hasvar
	neg
	cmp0
	je l49
	push $1
	push $2
	cthis varnew
l49:
	end method
	method vardelif
	localstring $1
	pop $1
	push $1
	cthis hasvar
	cmp0
	je l51
	push $1
	cthis vardel
l51:
	end method
	method vardel
	localstring $1
	pop $1
	push $1
	spushs
	spop $d
	delete [$d]
	end method
	method reader
	localstring $1
	pop $1
	push "def"
	push $1
	cthis varnewif
	push $1
	push "global1"
	cthis addmethod
	end method
	method global1
	cthis methodname
	popax
	mov $a,[$a]
	psax
	end method
	method writer
	localstring $1
	pop $1
	push "def"
	push $1
	cthis varnewif
	push $1
	push "="
	pop $b
	popax
	add $a,$b
	push "global2"
	cthis addmethod
	end method
	method global2
	localdef $1
	pop $1
	cthis methodname
	spushs
	push 1
	spop $a
	call $a,strsube
	spushs
	push $1
	spop $b
	popax
	mov [$b],$a
	end method
	method var
	localstring $1
	pop $1
	push $1
	cthis reader
	push $1
	cthis writer
	end method
	method var2
	localstring $1
	localdef $2
	pop $2
	pop $1
	push $1
	cthis var
	push $1
	spushs
	push $2
	spop $b
	popax
	mov [$b],$a
	end method
	method withlist
	localstring $1
	pop $1
	localdef $2
	pop $2
l52:
	push A
	push $2
	cmpjne
	cmp0
	je l53
	push $1
	spushs
	push $2
	spop $d
	cthis [$d]
	localdef $2
	pop $2
	jmp l52
l53:
	end method
	method withlist2
	localstring $1
	pop $1
	localdef $2
	pop $2
l54:
	push A
	push $2
	cmpjne
	cmp0
	je l55
	localdef $3
	pop $3
	push $1
	spushs
	push $3
	push $2
	spop $d
	cthis [$d]
	localdef $2
	pop $2
	jmp l54
l55:
	end method
	method vars
	push "var"
	cthis withlist
	end method
	method vars2
	push "var2"
	cthis withlist2
	end method
	method builder_func
	localstring $1
	pop $1
	cthis getbuildername
	spushs
	cthis getbuildername
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	end method
	method callfun
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $2
	push "null"
	cmpjne
	cmp0
	je l57
	push $1
	push "null"
	cmpje
	cmp0
	je l59
	push $2
	spushs
	spop $d
	cthis [$d]
	jmp l58
l59:
	push $1
	spushs
	push $2
	spushs
	spop $d
	spop $a
	call [$a],[$d]
l58:
l57:
	end method
	method add_callfun
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	call gameapi,getgamename
	spushs
	push $1
	push $2
	push $3
	spop $a
	call [$a],global3
	end method
	method global3
	localdef $1
	localdef $2
	localdef $3
	pop $3
	pop $2
	pop $1
	localdef $4
	push $1
	push "_callfun_"
	pop $b
	popax
	add $a,$b
	pop $4
	push A
	push $4
	push "sob"
	pop $b
	popax
	add $a,$b
	push $2
	push $4
	push "sfun"
	pop $b
	popax
	add $a,$b
	push $3
	cthis vars2
	push $4
	push "global4"
	cthis addmethod
	push $4
	end method
	method global4
	localdef $1
	cthis methodname
	pop $1
	push $1
	push "sob"
	pop $b
	popax
	add $a,$b
	popax
	mov $a,[$a]
	psax
	push $1
	push "sfun"
	pop $b
	popax
	add $a,$b
	popax
	mov $a,[$a]
	psax
	cthis callfun
	end method
	method fullname_callfun
	localstring $1
	localstring $2
	pop $2
	pop $1
	cthis getfullname
	push $1
	push $2
	cthis add_callfun
	end method
	method dprint
	localstring $1
	pop $1
	localint $2
	call engine,getstack
	pop $2
	push "stack="
	push $2
	pop $b
	popax
	add $a,$b
	push " : "
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $h
	call $h,print
	end method
	method printargs
	localint $1
	pop $1
	localstring $2
	push ""
	pop $2
l60:
	push $1
	push 0
	cmpja
	cmp0
	je l61
	localdef $3
	pop $3
	push "("
	call $3,gettype
	pop $b
	popax
	add $a,$b
	push ") "
	pop $b
	popax
	add $a,$b
	push $3
	pop $b
	popax
	add $a,$b
	push "  "
	pop $b
	popax
	add $a,$b
	push $2
	pop $b
	popax
	add $a,$b
	pop $2
	sub $1,1
	pop $1
	jmp l60
l61:
	push "args: "
	push $2
	pop $b
	popax
	add $a,$b
	call engine,print
	end method
	method in
	localint $1
	push 0
	pop $1
	localdef $2
	cthis get
	pop $2
	localdef $3
	pop $3
l62:
	push A
	push $3
	cmpjne
	cmp0
	je l63
	push $1
	neg
	cmp0
	je l65
	push $2
	push $3
	cmpje
	pop $1
l65:
	localdef $3
	pop $3
	jmp l62
l63:
	push $1
	end method
	method with
	localstring $1
	pop $1
	localstring $2
	pop $2
l66:
	push $2
	push A
	cmpjne
	cmp0
	je l67
	push $2
	spushs
	push $1
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	pop $2
	jmp l66
l67:
	end method
	method copycall
	localstring $1
	localstring $2
	pop $2
	pop $1
	localstring $3
	push "__call"
	push $1
	pop $b
	popax
	add $a,$b
	pop $3
	push $3
	spushs
	spop $e
	new string,[$e]
	push $3
	spushs
	push $2
	spop $b
	popax
	mov [$b],$a
	push $1
	push "global5"
	cthis addmethod
	end method
	method global5
	localstring $1
	cthis methodname
	pop $1
	push "__call"
	push $1
	pop $b
	popax
	add $a,$b
	popax
	mov $a,[$a]
	psax
	spushs
	push $1
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	end method
	method copycalls
	localstring $1
	pop $1
	localstring $2
	pop $2
l68:
	push $2
	push A
	cmpjne
	cmp0
	je l69
	push $2
	push $1
	cthis copycall
	pop $2
	jmp l68
l69:
	end method
	method mresize
	cthis gettype
	push "_pack"
	pop $b
	popax
	add $a,$b
	spushs
	cthis getname
	spop $a
	 clparent [$a],resizemethods
	end method
	method times
	localstring $1
	pop $1
	push 0
	cthis get
	push 1
	pop $b
	popax
	sub $a,$b
	push $1
	cthis for_plus
	end method
	method upto
	localint $1
	localstring $2
	pop $2
	pop $1
	cthis get
	push $1
	push $2
	cthis for_plus
	end method
	method downto
	localint $1
	localstring $2
	pop $2
	pop $1
	cthis get
	push $1
	push $2
	cthis for_minus
	end method
	method for_plus
	localint $1
	localint $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $2
	push $1
	pop $b
	popax
	sub $a,$b
	push 0
	cmpjle
	cmp0
	je l71
	ret
l71:
l72:
	push $1
	push $2
	cmpjle
	cmp0
	je l73
	jmp l75
l74:
	add $1,1
	pop $1
	jmp l72
l75:
	push $3
	spushs
	push $1
	spop $d
	cthis [$d]
	jmp l74
l73:
	end method
	method for_minus
	localint $1
	localint $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	pop $b
	popax
	sub $a,$b
	push 0
	cmpjle
	cmp0
	je l77
	ret
l77:
l78:
	push $1
	push $2
	cmpjae
	cmp0
	je l79
	jmp l81
l80:
	sub $1,1
	pop $1
	jmp l78
l81:
	push $3
	spushs
	push $1
	spop $d
	cthis [$d]
	jmp l80
l79:
	end method
	method double_for
	localint $1
	localint $2
	localstring $3
	pop $3
	pop $2
	pop $1
	localint $4
	localint $5
	push 0
	pop $5
l82:
	push $5
	push $1
	cmpjl
	cmp0
	je l83
	jmp l85
l84:
	add $5,1
	pop $5
	jmp l82
l85:
	push 0
	pop $4
l86:
	push $4
	push $2
	cmpjl
	cmp0
	je l87
	jmp l89
l88:
	add $4,1
	pop $4
	jmp l86
l89:
	push $3
	spushs
	push $5
	push $4
	spop $d
	cthis [$d]
	jmp l88
l87:
	jmp l84
l83:
	end method
	class classobjcounter
	method init
	localstring $1
	pop $1
	new string,_sprefix
	push $1
	pop _sprefix
	new int,_iile
	push 0
	pop _iile
	push "limit"
	push 0
	cthis var2
	end method
	method get
	push limit
	push 0
	cmpja
	cmp0
	je l91
	push _iile
	push limit
	pop $b
	popax
	div $a,$b
	push $d
	push 1
	pop $b
	popax
	add $a,$b
	pop _iile
	jmp l90
l91:
	add _iile,1
	pop _iile
l90:
	push _sprefix
	push _iile
	push 1
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	add $a,$b
	ret
	end method
	method size
	push _iile
	end method
	method getid
	localint $1
	pop $1
	push _sprefix
	push _iile
	push 1
	pop $b
	popax
	sub $a,$b
	push $1
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	add $a,$b
	end method
	end class

	class classsignals
	method init
	end method
	method stdfinish
	localstring $1
	pop $1
	push $1
	spushs
	push "onfinish"
	push "classsignals0"
	spop $a
	call [$a],addmethod
	end method
	method classsignals0
	cthis getname
	push "_FINISH"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method stdstart
	localstring $1
	pop $1
	push $1
	spushs
	push "onstart"
	push "classsignals1"
	spop $a
	call [$a],addmethod
	end method
	method classsignals1
	cthis getname
	push "_START"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method stdsigs
	localstring $1
	pop $1
	push $1
	cthis stdstart
	push $1
	cthis stdfinish
	end method
	method buildanima
	localstring $1
	pop $1
	push $1
	cthis stdsigs
	push $1
	spushs
	push "onendframe"
	push "classsignals2"
	spop $a
	call [$a],addmethod
	end method
	method classsignals2
	cthis getname
	push "_ENDFRAME"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method buildsnd
	localstring $1
	pop $1
	push $1
	cthis stdsigs
	end method
	method buildtimer
	localstring $1
	pop $1
	push $1
	cthis stdsigs
	push $1
	spushs
	push "ontick"
	push "classsignals3"
	spop $a
	call [$a],addmethod
	end method
	method classsignals3
	cthis getname
	push "_TICK"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method buildbut
	localstring $1
	pop $1
	push $1
	spushs
	push "onclick"
	push "classsignals4"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "onrel"
	push "classsignals5"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "onmoveon"
	push "classsignals6"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "onmoveoff"
	push "classsignals7"
	spop $a
	call [$a],addmethod
	end method
	method classsignals4
	cthis getname
	push "_CLICK"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method classsignals5
	cthis getname
	push "_REL"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method classsignals6
	cthis getname
	push "_MOVEON"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method classsignals7
	cthis getname
	push "_MOVEOFF"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	end class

	class classlocker
	method init
	new int,_block
	push 1
	pop _block
	end method
	method lock
	push 1
	pop _block
	end method
	method unlock
	push 0
	pop _block
	end method
	method setlock
	localint $1
	pop $1
	push $1
	pop _block
	end method
	method getlock
	push _block
	ret
	end method
	method unlocked
	push _block
	push 0
	cmpje
	end method
	method setaslocker
	localstring $1
	pop $1
	push $1
	spushs
	push "buildlocker"
	push "classlocker0"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	spop $a
	call [$a],buildlocker
	push $1
	spushs
	push "lock"
	push "lock"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "unlock"
	push "unlock"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setlock"
	push "setlock"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "getlock"
	push "getlock"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "unlocked"
	push "unlocked"
	spop $a
	call [$a],addmethod
	end method
	method classlocker0
	new int,_block
	push 1
	pop _block
	end method
	end class

	module classdbreader
	method init
	new db,dbl
	end method
	method readdb
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
	localint $3
	call dbl,getrowsno
	pop $3
l92:
	push $2
	push $3
	cmpjl
	cmp0
	je l93
	push $1
	spushs
	push $2
	spop $d
	cthis [$d]
	add $2,1
	pop $2
	jmp l92
l93:
	end method
	method readrow
	localstring $1
	localstring $2
	pop $2
	pop $1
	localint $3
	push $1
	call dbl,findbyrow
	pop $3
	push $3
	push 0
	cmpjae
	cmp0
	je l95
	push $2
	spushs
	push $3
	spop $d
	cthis [$d]
l95:
	end method
	end module

	class collection
	method init
	localstring $1
	pop $1
	new string,stype
	push $1
	pop stype
	end method
	method type
	push stype
	ret
	end method
	end class

	class array
	parent collection
	method init
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	clparent collection,init
	new int,idim
	push $2
	pop idim
	new int,isize
	push $3
	pop isize
	new vector,vec
	push $1
	call vec,type
	push $2
	push 0
	cmpjle
	cmp0
	jne l98
	push $3
	push 0
	cmpjle
	jmp l99
l97:
	push 0
	jmp l99
l98:
	push 1
l99:
	cmp0
	je l100
	ret
l100:
	push $2
	call $3,pow
	push 0
	call vec,resize
	end method
	method getid
	localint $1
	push 0
	pop $1
	localint $2
	push idim
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
l101:
	push $2
	push 0
	cmpja
	cmp0
	je l102
	popax
	add $1,$a
	pop $1
	push isize
	popax
	mul $1,$a
	pop $1
	sub $2,1
	pop $2
	jmp l101
l102:
	push $1
	pop $b
	popax
	add $a,$b
	ret
	end method
	method get
	cthis getid
	call vec,get
	ret
	end method
	method set
	localdef $1
	pop $1
	cthis getid
	push $1
	call vec,set
	end method
	method getsize
	push isize
	ret
	end method
	method getdim
	push idim
	ret
	end method
	end class

	class stack
	parent collection
	method init
	localstring $1
	pop $1
	push $1
	clparent collection,init
	new vector,vec
	push $1
	call vec,type
	push $1
	spushs
	spop $d
	new [$d],var
	end method
	method push
	localstring $1
	pop $1
	push $1
	call vec,add
	end method
	method top
	call vec,last
	ret
	end method
	method pop
	cthis top
	pop var
	call vec,size
	push 1
	pop $b
	popax
	sub $a,$b
	call vec,removeat
	push var
	ret
	end method
	method free
	call vec,free
	end method
	end class

	class map
	parent collection
	method init
	localstring $1
	pop $1
	push $1
	clparent collection,init
	new int,isize
	push 0
	pop isize
	end method
	method set
	localstring $1
	localdef $2
	pop $2
	pop $1
	push "v"
	push $1
	pop $b
	popax
	add $a,$b
	cthis hasvar
	neg
	cmp0
	je l104
	push $1
	cthis add
l104:
	push "v"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push $2
	spop $a
	call [$a],set
	end method
	method add
	localstring $1
	pop $1
	push stype
	spushs
	push "v"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $e
	spop $d
	new [$d],[$e]
	end method
	method get
	localstring $1
	pop $1
	push "v"
	push $1
	pop $b
	popax
	add $a,$b
	popax
	mov $a,[$a]
	psax
	ret
	end method
	method remove
	localstring $1
	pop $1
	push "v"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	delete [$d]
	end method
	method contains
	localstring $1
	pop $1
	push "v"
	push $1
	pop $b
	popax
	add $a,$b
	cthis hasvar
	ret
	end method
	end class

	class map2
	parent collection
	method init
	localstring $1
	pop $1
	push $1
	clparent collection,init
	new vector,vn
	push "string"
	call vn,type
	new vector,vec
	push $1
	call vec,type
	end method
	method add
	localstring $1
	localdef $2
	pop $2
	pop $1
	push $1
	call vn,add
	push $2
	call vec,add
	end method
	method set
	localstring $1
	localdef $2
	pop $2
	pop $1
	push $1
	call vn,find
	push $2
	call vec,set
	end method
	method contains
	localstring $1
	pop $1
	push $1
	call vn,contains
	ret
	end method
	method get
	localstring $1
	pop $1
	push $1
	call vn,find
	call vec,get
	ret
	end method
	method remove
	localstring $1
	pop $1
	localint $2
	push $1
	call vn,find
	pop $2
	push $2
	push 0
	cmpjae
	cmp0
	je l106
	push $2
	call vec,removeat
	push $2
	call vn,removeat
l106:
	end method
	method free
	call vn,free
	call vec,free
	end method
	method print
	call vec,print
	call vn,print
	end method
	end class

	class classgamemusic
	parent classdbreader
	method init
	clparent classdbreader,init
	new string,smuspath
	push ""
	pop smuspath
	new string,sbgrpath
	push ""
	pop sbgrpath
	new snd,_sndbgr
	push "onfinish"
	push "_stdsndloop"
	call _sndbgr,addmethod
	end method
	method reset
	call engine,islocalmusic
	cmp0
	je l108
	call gameapi,stopmusic
l108:
	cthis stopbgr
	end method
	method _stdsndloop
	cthis play
	end method
	method load
	localstring $1
	pop $1
	push $1
	call dbl,loadscript
	end method
	method musicpath
	localstring $1
	pop $1
	push $1
	pop smuspath
	end method
	method sndbgrpath
	localstring $1
	pop $1
	push $1
	pop sbgrpath
	end method
	method _play
	localint $1
	pop $1
	localint $2
	localint $3
	localint $4
	localstring $5
	localstring $6
	push 1
	pop $2
	push $1
	call dbl,getcolsno
	pop $3
l109:
	push $2
	push $3
	cmpjl
	cmp0
	je l110
	push $1
	push $2
	call dbl,get
	pop $5
	add $2,1
	pop $2
	push $5
	push "music"
	cmpje
	cmp0
	je l112
	push smuspath
	push $1
	push $2
	call dbl,get
	pop $b
	popax
	add $a,$b
	pop $6
	push $6
	call engine,fileexist
	neg
	cmp0
	je l114
	push sbgrpath
	push $1
	push $2
	call dbl,get
	pop $b
	popax
	add $a,$b
	pop $6
l114:
	add $2,1
	pop $2
	push $2
	push $3
	cmpjl
	cmp0
	je l116
	push $1
	push $2
	call dbl,get
	push "vol"
	cmpje
	cmp0
	je l118
	add $2,1
	pop $2
	push $1
	push $2
	call dbl,get
	call gameapi,setmusicvol
	add $2,1
	pop $2
l118:
	jmp l115
l116:
	push 100
	call gameapi,setmusicvol
l115:
	push $6
	call gameapi,playmusic
	jmp l111
l112:
	push $5
	push "bgr"
	cmpje
	cmp0
	je l120
	push sbgrpath
	push $1
	push $2
	call dbl,get
	pop $b
	popax
	add $a,$b
	call _sndbgr,load
	add $2,1
	pop $2
	push $2
	push $3
	cmpjl
	cmp0
	je l122
	push $1
	push $2
	call dbl,get
	push "vol"
	cmpje
	cmp0
	je l124
	add $2,1
	pop $2
	push $1
	push $2
	call dbl,get
	call _sndbgr,setvol
	add $2,1
	pop $2
l124:
	jmp l121
l122:
	push 100
	call _sndbgr,setvol
l121:
	cthis playbgr
	jmp l119
l120:
	add $2,1
	pop $2
l119:
l111:
	jmp l109
l110:
	end method
	method play
	cthis reset
	call gameapi,getgamename
	push "_play"
	cthis readrow
	end method
	method playbgr
	call _sndbgr,play
	end method
	method stopbgr
	push 0
	call _sndbgr,stop
	end method
	end class

	class Music
	method init
	new vector,vmus
	push "string"
	call vmus,type
	new int,ilastid
	push A
	push "musicvolume"
	push 100
	push "globalvolume"
	push 100
	cthis vars2
	new string,smixer
	push "gameapi"
	pop smixer
	end method
	method smixer
	push smixer
	end method
	method smixer=
	localstring $1
	pop $1
	push $1
	pop smixer
	cthis updatevolume
	end method
	method playdb
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	call vmus,free
l125:
	push $3
	push $1
	spushs
	push $2
	spop $a
	call [$a],getcolsno
	cmpjl
	cmp0
	je l126
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	call vmus,add
	add $3,1
	pop $3
	jmp l125
l126:
	push 0
	pop ilastid
	cthis play
	end method
	method playvec
	localstring $1
	localint $2
	pop $2
	pop $1
	call vmus,free
l127:
	push $2
	push $1
	spushs
	spop $a
	call [$a],size
	cmpjl
	cmp0
	je l128
	push $1
	spushs
	push $2
	spop $a
	call [$a],get
	call vmus,add
	add $2,1
	pop $2
	jmp l127
l128:
	push 0
	pop ilastid
	cthis play
	end method
	method playstr
	localstring $1
	pop $1
	push $1
	push " "
	call vmus,vecbuildfromstring
	push 0
	pop ilastid
	cthis play
	end method
	method play
	push ilastid
	call vmus,size
	cmpjae
	cmp0
	je l130
	ret
l130:
	localstring $1
	push MUSICPATH
	push ilastid
	call vmus,get
	pop $b
	popax
	add $a,$b
	pop $1
	push 0
	push 3
	call $1,gete
	push "ogg"
	cmpjne
	cmp0
	je l132
	push 0
	push 3
	call $1,gete
	push "wav"
	cmpjne
	jmp l134
l132:
	push 0
	jmp l134
l133:
	push 1
l134:
	cmp0
	je l135
	push ".ogg"
	popax
	add $1,$a
	pop $1
l135:
	push $1
	call engine,fileexist
	neg
	cmp0
	je l137
	push SFXPATH
	push ilastid
	call vmus,get
	pop $b
	popax
	add $a,$b
	pop $1
l137:
	add ilastid,1
	pop ilastid
	localint $2
	push 0
	pop $2
	localint $3
	push 0
	pop $3
	localint $4
	push 0
	pop $4
	push globalvolume
	pop musicvolume
	localint $5
	push ilastid
	pop $5
l138:
	push $5
	call vmus,size
	cmpjl
	cmp0
	je l139
	jmp l141
l140:
	add $5,1
	pop $5
	jmp l138
l141:
	localdef $6
	push $5
	call vmus,get
	pop $6
	push $6
	spushs
	push "-l"
	cmpst
	jne l143
	spop $a
	push 1
	pop $2
	jmp l142
l143:
	push "-v"
	cmpst
	je l145
	push "-vol"
	cmpst
	je l145
	jmp l144
l145:
	spop $a
	add $5,1
	pop $5
	push $5
	call vmus,get
	pop musicvolume
	jmp l142
l144:
	push "-fin"
	cmpst
	jne l146
	spop $a
	add $5,1
	pop $5
	push $5
	call vmus,get
	pop $3
	jmp l142
l146:
	push "-fout"
	cmpst
	jne l147
	spop $a
	add $5,1
	pop $5
	push $5
	call vmus,get
	pop $4
	jmp l142
l147:
	push "-p"
	cmpst
	jne l148
	spop $a
	jmp l142
l148:
	spop $a
	push $5
	pop ilastid
	call vmus,size
	pop $5
l142:
	jmp l140
l139:
	cthis updatevolume
	push $2
	cmp0
	je l150
	call vmus,size
	pop ilastid
	push smixer
	push "engine"
	cmpje
	cmp0
	je l152
	call engine,ismusicplaying
	cmp0
	je l152
	call engine,getactmusic
	push $1
	cmpje
	jmp l154
l152:
	push 0
	jmp l154
l153:
	push 1
l154:
	cmp0
	je l155
	jmp l151
l155:
	push smixer
	spushs
	push $1
	spop $a
	call [$a],playmusic
l151:
	jmp l149
l150:
	push smixer
	spushs
	push $1
	spop $a
	call [$a],loadmusic
	push $3
	cmp0
	je l157
	push smixer
	spushs
	push $3
	spop $a
	call [$a],fadeinmusic
	jmp l156
l157:
	push smixer
	spushs
	spop $a
	call [$a],startmusic
l156:
	push $4
	cmp0
	je l159
	push smixer
	spushs
	push $4
	spop $a
	call [$a],fadeoutmusic
l159:
l149:
	end method
	method getvol
	push globalvolume
	push musicvolume
	pop $b
	popax
	mul $a,$b
	push 100
	pop $b
	popax
	div $a,$b
	psax
	end method
	method fadeout
	localint $1
	pop $1
	push smixer
	spushs
	spop $a
	call [$a],ismusicplaying
	cmp0
	je l161
	push smixer
	spushs
	push $1
	spop $a
	call [$a],fadeoutmusic
	call vmus,size
	pop ilastid
l161:
	end method
	method updatevolume
	push smixer
	spushs
	cthis getvol
	spop $a
	call [$a],setmusicvol
	end method
	method isplaying
	push smixer
	spushs
	spop $a
	call [$a],ismusicplaying
	end method
	method getactmusic
	call engine,getactmusic
	end method
	method stop
	push smixer
	spushs
	push 0
	spop $a
	call [$a],endmusic
	end method
	end class

	new int,igmstate
	new string,sgmstate
	method printstate
	push "sgmstate = "
	push sgmstate
	pop $b
	popax
	add $a,$b
	push " ,  igmstate = "
	pop $b
	popax
	add $a,$b
	push igmstate
	pop $b
	popax
	add $a,$b
	spushs
	spop $h
	call $h,print
	end method
	new int,igmdemo
	push "igmdemo:"
	call dbconf,dbgetint
	pop igmdemo
	new int,igmvideorecord
	push "igmvideorecord:"
	call dbconf,dbgetint
	pop igmvideorecord
	new int,igmbegin
	push 1
	pop igmbegin
	new int,igmsoundson
	push "igmsoundson:"
	call dbconf,dbgetint
	pop igmsoundson
	new string,sgmfontfile
	push "sgmfontfile:"
	call dbconf,dbget
	pop sgmfontfile
	new string,sgmfontmono
	push "sgmfontmono:"
	call dbconf,dbget
	pop sgmfontmono
	new string,sgmfontmonobold
	push "sgmfontmonobold:"
	call dbconf,dbget
	pop sgmfontmonobold
	new string,sgmfontbold
	push "sgmfontbold:"
	call dbconf,dbget
	pop sgmfontbold
	new string,sgmfontitalic
	push "sgmfontitalic:"
	call dbconf,dbget
	pop sgmfontitalic
	new string,SFXPATH
	push "sfxpath:"
	call dbconf,dbget
	pop SFXPATH
	new string,BGRPATH
	push "sndbgrpath:"
	call dbconf,dbget
	pop BGRPATH
	new string,MUSICPATH
	push "musicpath:"
	call dbconf,dbget
	pop MUSICPATH
	new string,LANG
	push "lang:"
	call dbconf,dbget
	pop LANG
	new string,LANGDIR
	push "lang/"
	push LANG
	pop $b
	popax
	add $a,$b
	push "/"
	pop $b
	popax
	add $a,$b
	pop LANGDIR
	new string,SNDPATH
	push "sounds/"
	pop SNDPATH
	push LANG
	push "pl"
	cmpje
	cmp0
	je l163
	push ""
	pop LANG
l163:
	call LANG,length
	push 0
	cmpja
	cmp0
	je l165
	push LANG
	push "/"
	pop $b
	popax
	add $a,$b
	popax
	add SNDPATH,$a
	pop SNDPATH
l165:
	class newvars
	method init
	new string,_sclpath
	push ""
	pop _sclpath
	new string,_sclwavpath
	push ""
	pop _sclwavpath
	end method
	method _checkfont
	localstring $1
	localint $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push "null"
	cmpje
	cmp0
	je l167
	push sgmfontfile
	pop $1
l167:
	push ".ttf"
	call $1,contains
	cmp0
	je l169
	push $3
	spushs
	spop $e
	new font,[$e]
	push $3
	spushs
	push $1
	push $2
	spop $a
	call [$a],load
	push $3
	pop $1
l169:
	push $1
	end method
	method checkfont
	localstring $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push "_fnt"
	cthis _checkfont
	end method
	method begingame
	push igmbegin
	neg
	pop igmbegin
	push igmbegin
	neg
	end method
	method newarray
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $3
	push 0
	cmpjle
	cmp0
	je l171
	ret
l171:
	sub $3,1
	pop $3
l172:
	push $3
	push 0
	cmpjae
	cmp0
	je l173
	push $1
	spushs
	push $2
	push $3
	pop $b
	popax
	add $a,$b
	spushs
	spop $e
	spop $d
	new [$d],[$e]
	sub $3,1
	pop $3
	jmp l172
l173:
	end method
	method setgraphpath
	localstring $1
	pop $1
	push $1
	pop _sclpath
	push $1
	call engine,setpath
	end method
	method setwavpath
	localstring $1
	pop $1
	push $1
	pop _sclwavpath
	end method
	method getgraphpath
	push _sclpath
	end method
	method getsndpath
	push _sclwavpath
	end method
	method getpath
	localstring $1
	pop $1
	push 0
	push 1
	call $1,getb
	push "$"
	cmpje
	cmp0
	je l175
	push 1
	call $1,strsubb
	jmp l174
l175:
	cthis getgraphpath
	push $1
	pop $b
	popax
	add $a,$b
l174:
	end method
	method pathload
	localstring $1
	pop $1
	cthis getgraphpath
	push $1
	pop $b
	popax
	add $a,$b
	cthis load
	end method
	method newanima
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new anima,[$e]
	localdef $4
	push $2
	cthis getpath
	pop $4
	push $1
	spushs
	push $4
	spop $a
	call [$a],load
	push igmdebug
	cmp0
	je l177
	push igmexportan
	cmp0
	je l179
	push $1
	spushs
	push "debug/"
	push 0
	call $4,length
	push "/"
	call $4,strgeteto
	spushs
	spop $h
	call $h,length
	pop $b
	popax
	sub $a,$b
	call $4,getb
	pop $b
	popax
	add $a,$b
	push "/"
	call $4,strgeteto
	spushs
	push ".pyz"
	spop $h
	call $h,strsubes
	pop $b
	popax
	add $a,$b
	push "/"
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],saveimages
	jmp l178
l179:
	push igmimportan
	cmp0
	je l181
	push "debug/"
	push ".pyz"
	call $4,strsubes
	pop $b
	popax
	add $a,$b
	push "/"
	pop $b
	popax
	add $a,$b
	pop $4
	push $4
	push "0.png"
	pop $b
	popax
	add $a,$b
	call engine,fileexist
	cmp0
	je l183
	push $1
	spushs
	push $4
	spop $a
	call [$a],loadimages
l183:
l181:
l178:
l177:
	push $1
	spushs
	push $3
	spop $a
	call [$a],setz
	end method
	method newstdanima
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	cthis newanima
	push $1
	cthis stdanaction
	end method
	method copyanimaactz
	localstring $1
	localstring $2
	localstring $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	cthis copyanimaact
	push $2
	spushs
	push $4
	spop $a
	call [$a],setz
	end method
	method copyanimaact
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	cthis copyanima
	push $2
	spushs
	push $3
	push 0
	spop $a
	call [$a],setframe
	end method
	method copyanima
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $2
	spushs
	spop $e
	new anima,[$e]
	push $2
	spushs
	push $1
	spop $a
	call [$a],copy
	end method
	method copyanimas
	localstring $1
	localstring $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $4
	push 0
	cmpjl
	cmp0
	je l185
	ret
l185:
	localint $5
	push 0
	pop $5
l186:
	push $5
	push $4
	cmpjl
	cmp0
	je l187
	jmp l189
l188:
	add $5,1
	pop $5
	jmp l186
l189:
	push $1
	push $2
	push $3
	push $5
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	add $a,$b
	cthis copyanima
	jmp l188
l187:
	end method
	method newanimas
	localstring $1
	localstring $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $4
	push 0
	cmpjl
	cmp0
	je l191
	ret
l191:
	push $1
	push "0"
	pop $b
	popax
	add $a,$b
	push $2
	push $3
	cthis newanima
	push $1
	push "0"
	pop $b
	popax
	add $a,$b
	push $1
	push 1
	push $4
	push 1
	pop $b
	popax
	sub $a,$b
	cthis copyanimas
	end method
	method newanframesgr
	localstring $1
	localstring $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	localint $5
	push $1
	spushs
	push $3
	spop $a
	call [$a],nofframes
	pop $5
	push $1
	push $2
	push 0
	push $5
	cthis copyanimas
	localint $6
	push 0
	pop $6
l192:
	push $6
	push $5
	cmpjl
	cmp0
	je l193
	jmp l195
l194:
	add $6,1
	pop $6
	jmp l192
l195:
	push $2
	push $6
	pop $b
	popax
	add $a,$b
	spushs
	push $3
	push $6
	spop $a
	call [$a],setframe
	push $4
	push "null"
	cmpjne
	cmp0
	je l197
	push $4
	spushs
	push $2
	push $6
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],add
l197:
	jmp l194
l193:
	push $5
	ret
	end method
	method newanframes
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push "null"
	cthis newanframesgr
	ret
	end method
	method newcanvas
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	localint $7
	localint $8
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new img,[$e]
	push $1
	spushs
	push $2
	push $3
	push $4
	push $5
	push $6
	push $7
	spop $a
	call [$a],create
	push $1
	spushs
	push $8
	spop $a
	call [$a],setz
	end method
	method newimg
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new img,[$e]
	push $1
	spushs
	push $2
	cthis getpath
	spop $a
	call [$a],load
	push $1
	spushs
	push $3
	spop $a
	call [$a],setz
	end method
	method copyimg
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $2
	spushs
	spop $e
	new img,[$e]
	push $2
	spushs
	push $1
	spop $a
	call [$a],copy
	end method
	method playmusic
	localstring $1
	pop $1
	push MUSICPATH
	push $1
	pop $b
	popax
	add $a,$b
	call gameapi,playmusic
	end method
	method snewsnd
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	cthis newsnd
	push $1
	spushs
	push "onfinish"
	push "__std_finish"
	spop $a
	call [$a],addmethod
	end method
	method _newsnd
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new snd,[$e]
	push "."
	call $2,contains
	neg
	cmp0
	je l199
	push ".wav"
	popax
	add $2,$a
	pop $2
l199:
	push $2
	call engine,fileexist
	neg
	cmp0
	je l201
	push "wav"
	call $2,strsubes
	push "ogg"
	pop $b
	popax
	add $a,$b
	pop $2
l201:
	push $3
	cmp0
	je l203
	push $1
	spushs
	push 0
	push 1
	spop $a
	call [$a],setstartstopflag
l203:
	push $1
	spushs
	push $2
	spop $a
	call [$a],load
	push igmsubtitle
	cmp0
	je l205
	push $1
	push $2
	call subtitle,register
l205:
	end method
	method newsfx
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push SFXPATH
	push $2
	pop $b
	popax
	add $a,$b
	push 0
	cthis _newsnd
	end method
	method newbgr
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push BGRPATH
	push $2
	pop $b
	popax
	add $a,$b
	push 0
	cthis _newsnd
	end method
	method newbgrloop
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	cthis newbgr
	push $1
	cthis sndplayloop
	end method
	method newsnd
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	cthis getsndpath
	push $2
	pop $b
	popax
	add $a,$b
	push 0
	cthis _newsnd
	end method
	method newsndfree
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	cthis getsndpath
	push $2
	pop $b
	popax
	add $a,$b
	push 1
	cthis _newsnd
	end method
	method newsndloop
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	cthis newsnd
	push $1
	cthis looponfinish1
	end method
	method looponfinish1
	localstring $1
	pop $1
	push $1
	spushs
	push "onfinish"
	push "_stdsndloop"
	spop $a
	call [$a],addmethod
	end method
	method sndplayloop
	localstring $1
	pop $1
	push $1
	cthis looponfinish1
	push $1
	spushs
	spop $a
	call [$a],play
	end method
	method newsnds
	localstring $1
	localint $2
	localstring $3
	localint $4
	localint $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	localstring $6
	localint $7
	push $5
	push $4
	pop $b
	popax
	sub $a,$b
	push 1
	pop $b
	popax
	add $a,$b
	pop $7
	localint $8
	push 0
	pop $8
l206:
	push $8
	push $7
	cmpjl
	cmp0
	je l207
	jmp l209
l208:
	add $8,1
	pop $8
	jmp l206
l209:
	push $1
	push $2
	push $8
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	add $a,$b
	pop $6
	push $6
	spushs
	spop $e
	new snd,[$e]
	push $6
	spushs
	cthis getsndpath
	push $3
	pop $b
	popax
	add $a,$b
	push $4
	push $8
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	add $a,$b
	push ".wav"
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],load
	jmp l208
l207:
	end method
	method newtimer
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new timer,[$e]
	push $1
	spushs
	push $3
	spop $a
	call [$a],settick
	push $1
	spushs
	push $2
	spop $a
	call [$a],delay
	end method
	method newtimercycle
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new timer,[$e]
	push $1
	spushs
	push $3
	spop $a
	call [$a],settick
	push $1
	spushs
	push $2
	spop $a
	call [$a],setcycle
	end method
	method stdanaction
	localstring $1
	pop $1
	localstring $2
	push $1
	spushs
	spop $a
	call [$a],actionname
	pop $2
	push "L"
	call $2,contains
	cmp0
	je l211
	push $1
	cthis looponfinish
	jmp l210
l211:
	push "H"
	call $2,contains
	cmp0
	je l213
	push $1
	cthis hideonfinish
l213:
l210:
	push "P"
	call $2,contains
	cmp0
	je l215
	push $1
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],play
l215:
	end method
	method newanactionsgr
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	localint $4
	push $1
	spushs
	spop $a
	call [$a],nofactions
	pop $4
	push $1
	push $2
	push 0
	push $4
	cthis copyanimas
	localstring $5
	localint $6
	push 0
	pop $6
l216:
	push $6
	push $4
	cmpjl
	cmp0
	je l217
	jmp l219
l218:
	add $6,1
	pop $6
	jmp l216
l219:
	push $2
	push $6
	pop $b
	popax
	add $a,$b
	pop $5
	push $5
	spushs
	push $6
	push 0
	spop $a
	call [$a],setframe
	push $5
	cthis stdanaction
	push $3
	push "null"
	cmpjne
	cmp0
	je l221
	push $3
	spushs
	push $5
	spop $a
	call [$a],add
l221:
	jmp l218
l217:
	push $4
	end method
	method newanactions
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push "null"
	cthis newanactionsgr
	end method
	method newanfrbyactgr
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	localint $4
	push $1
	spushs
	spop $a
	call [$a],nofactions
	pop $4
	localint $5
	push 0
	pop $5
l222:
	push $5
	push $4
	cmpjl
	cmp0
	je l223
	jmp l225
l224:
	add $5,1
	pop $5
	jmp l222
l225:
	push $1
	push $2
	push $5
	pop $b
	popax
	add $a,$b
	push "_"
	pop $b
	popax
	add $a,$b
	push $5
	push $3
	cthis newanframesgr
	popax
	jmp l224
l223:
	push $4
	end method
	method newanfrbyact
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push "null"
	cthis newanfrbyactgr
	end method
	method loadanfrbyact
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	localstring $4
	push "_"
	push $1
	pop $b
	popax
	add $a,$b
	pop $4
	push $4
	push $2
	push $3
	cthis newanima
	localint $5
	push $4
	push $1
	cthis newanfrbyact
	pop $5
	push $4
	spushs
	spop $a
	call [$a],hide
	push $5
	ret
	end method
	method loadanactions
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	localstring $4
	push "_"
	push $1
	pop $b
	popax
	add $a,$b
	pop $4
	push $4
	push $2
	push $3
	cthis newanima
	localint $5
	push $4
	push $1
	cthis newanactions
	pop $5
	push $4
	spushs
	spop $a
	call [$a],hide
	push $5
	ret
	end method
	method loadanframes
	localstring $1
	localstring $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	localstring $5
	push "_"
	push $1
	pop $b
	popax
	add $a,$b
	pop $5
	push $5
	push $2
	push $4
	cthis newanima
	localint $6
	push $5
	push $1
	push $3
	cthis newanframes
	pop $6
	push $5
	spushs
	spop $a
	call [$a],hide
	push $6
	ret
	end method
	method newbutimg
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new button,[$e]
	push $1
	spushs
	push $2
	push $3
	push $4
	spop $a
	call [$a],set
	push $1
	spushs
	push $5
	spop $a
	call [$a],setmouse
	end method
	method newbutan
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new button,[$e]
	push $1
	spushs
	push $2
	push $3
	push $4
	spop $a
	call [$a],setan
	push $1
	spushs
	push $5
	spop $a
	call [$a],setmouse
	end method
	method newdb
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new db,[$e]
	push $1
	spushs
	push $2
	cthis getpath
	spop $a
	call [$a],load
	end method
	method newdbscript
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new db,[$e]
	push $1
	spushs
	push $2
	cthis getpath
	spop $a
	call [$a],loadscritp
	end method
	method vargmset
	localstring $1
	localdef $2
	pop $2
	pop $1
	localstring $3
	call gameapi,getgamename
	pop $3
	push $3
	spushs
	push $1
	spop $a
	call [$a],hasvar
	neg
	cmp0
	je l227
	push $3
	spushs
	call $2,gettype
	push $1
	spop $a
	call [$a],varnew
l227:
	push $1
	spushs
	push $2
	spop $b
	popax
	mov [$b],$a
	end method
	end class

	new int,bsystem_cursor
	push 0
	pop bsystem_cursor
	class classadvmouse
	method init
	new anima,anmsc
	new anima,ansysms
	new string,sactac
	end method
	method load
	localstring $1
	pop $1
	push $1
	call anmsc,load
	push "onendframe"
	push "setnextframe"
	call anmsc,addmethod
	push "onsetframe"
	push "classadvmouse0"
	call anmsc,addmethod
	call anmsc,hide
	end method
	method classadvmouse0
	cthis hide
	end method
	method stdload
	push igmdebug
	neg
	cmp0
	je l229
	cthis checktouchpad
	jmp l231
l229:
	push 0
	jmp l231
l230:
	push 1
l231:
	cmp0
	je l232
	push "scripts/common/kursorypad.pyz"
	cthis load
	jmp l228
l232:
	push "scripts/common/cursors.pyz"
	cthis load
	push "scripts/common/syscursors.pyz"
	call ansysms,load
	call ansysms,hide
l228:
	end method
	method setnextframe
	call anmsc,ansetnextfr
	push bsystem_cursor
	neg
	cmp0
	je l234
	push "anmsc"
	call mouse,setcursor
l234:
	end method
	method setif
	localstring $1
	pop $1
	cthis get
	push $1
	cmpjne
	cmp0
	je l236
	push $1
	cthis set
l236:
	end method
	method set
	localstring $1
	pop $1
	push bsystem_cursor
	cmp0
	je l238
	cthis get
	push $1
	cmpjne
	cmp0
	je l240
	push $1
	push 0
	call ansysms,setframe
	push "ansysms"
	call mouse,setsyscursor
l240:
	jmp l237
l238:
	push $1
	pop sactac
	push $1
	call anmsc,isplaying
	neg
	cmp0
	je l242
	push $1
	call anmsc,play
l242:
	push "anmsc"
	call mouse,setcursor
l237:
	end method
	method setstd
	push "normal"
	cthis set
	end method
	method setactive
	push "active"
	cthis set
	end method
	method setact
	push "active"
	cthis set
	end method
	method setbut
	push "active"
	cthis set
	end method
	method setexit
	push "exit"
	cthis set
	end method
	method setwait
	push "wait"
	cthis set
	end method
	method get
	push bsystem_cursor
	cmp0
	je l244
	call ansysms,actionname
	jmp l243
l244:
	call anmsc,actionname
l243:
	end method
	method lodx
	call anmsc,lodx
	end method
	method lody
	call anmsc,lody
	end method
	method refresh
	push sactac
	push "null"
	cmpjne
	cmp0
	je l246
	push sactac
	cthis set
l246:
	end method
	end class

	new classadvmouse,advmouse
	call advmouse,stdload
	module clsurf
	method init
	end method
	method isin
	localint $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $3
	cmpjae
	cmp0
	je l247
	push $1
	push $5
	cmpjle
	cmp0
	je l247
	push $2
	push $4
	cmpjae
	cmp0
	je l247
	push $2
	push $6
	cmpjle
	jmp l249
l247:
	push 0
	jmp l249
l248:
	push 1
l249:
	end method
	method isin2
	localint $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $3
	cmpjae
	cmp0
	je l250
	push $1
	push $3
	push $5
	pop $b
	popax
	add $a,$b
	cmpjl
	cmp0
	je l250
	push $2
	push $4
	cmpjae
	cmp0
	je l250
	push $2
	push $4
	push $6
	pop $b
	popax
	add $a,$b
	cmpjl
	jmp l252
l250:
	push 0
	jmp l252
l251:
	push 1
l252:
	end method
	method inscreen
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push $3
	pop $b
	popax
	sub $a,$b
	push 0
	push $4
	pop $b
	popax
	sub $a,$b
	push 800
	push $3
	pop $b
	popax
	add $a,$b
	push 600
	push $4
	pop $b
	popax
	add $a,$b
	cthis isin
	end method
	method insurf
	localint $1
	localint $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	spushs
	spop $a
	call [$a],getpx
	push $3
	spushs
	spop $a
	call [$a],getpy
	push $3
	spushs
	spop $a
	call [$a],getex
	push 1
	pop $b
	popax
	sub $a,$b
	push $3
	spushs
	spop $a
	call [$a],getey
	push 1
	pop $b
	popax
	sub $a,$b
	cthis isin
	end method
	method issurfin
	localint $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	localint $7
	localint $8
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $5
	push $6
	push $7
	push $8
	cthis isin
	cmp0
	jne l254
	push $3
	push $2
	push $5
	push $6
	push $7
	push $8
	cthis isin
	cmp0
	jne l254
	push $1
	push $4
	push $5
	push $6
	push $7
	push $8
	cthis isin
	cmp0
	jne l254
	push $3
	push $4
	push $5
	push $6
	push $7
	push $8
	cthis isin
	cmp0
	jne l254
	push $1
	push $5
	cmpjl
	cmp0
	je l255
	push $3
	push $7
	cmpja
	cmp0
	je l255
	push $2
	push $6
	cmpjl
	cmp0
	je l255
	push $4
	push $8
	cmpja
	jmp l257
l255:
	push 0
	jmp l257
l256:
	push 1
l257:
	jmp l258
l253:
	push 0
	jmp l258
l254:
	push 1
l258:
	end method
	method commonsurface
	localint $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	localint $7
	localint $8
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	push $5
	push $6
	push $7
	push $8
	cthis issurfin
	cmp0
	jne l260
	push $5
	push $6
	push $7
	push $8
	push $1
	push $2
	push $3
	push $4
	cthis issurfin
	jmp l261
l259:
	push 0
	jmp l261
l260:
	push 1
l261:
	end method
	method commonimgs
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getpx
	push $1
	spushs
	spop $a
	call [$a],getpy
	push $1
	spushs
	spop $a
	call [$a],getex
	push 1
	pop $b
	popax
	sub $a,$b
	push $1
	spushs
	spop $a
	call [$a],getey
	push 1
	pop $b
	popax
	sub $a,$b
	push $2
	spushs
	spop $a
	call [$a],getpx
	push $2
	spushs
	spop $a
	call [$a],getpy
	push $2
	spushs
	spop $a
	call [$a],getex
	push 1
	pop $b
	popax
	sub $a,$b
	push $2
	spushs
	spop $a
	call [$a],getey
	push 1
	pop $b
	popax
	sub $a,$b
	cthis commonsurface
	end method
	method surfwithinsurf
	localint $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	localint $7
	localint $8
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $5
	push $6
	push $7
	push $8
	cthis isin
	cmp0
	je l262
	push $3
	push $2
	push $5
	push $6
	push $7
	push $8
	cthis isin
	cmp0
	je l262
	push $1
	push $4
	push $5
	push $6
	push $7
	push $8
	cthis isin
	cmp0
	je l262
	push $3
	push $4
	push $5
	push $6
	push $7
	push $8
	cthis isin
	jmp l264
l262:
	push 0
	jmp l264
l263:
	push 1
l264:
	end method
	method imgwithinimg
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getpx
	push $1
	spushs
	spop $a
	call [$a],getpy
	push $1
	spushs
	spop $a
	call [$a],getex
	push 1
	pop $b
	popax
	sub $a,$b
	push $1
	spushs
	spop $a
	call [$a],getey
	push 1
	pop $b
	popax
	sub $a,$b
	push $2
	spushs
	spop $a
	call [$a],getpx
	push $2
	spushs
	spop $a
	call [$a],getpy
	push $2
	spushs
	spop $a
	call [$a],getex
	push 1
	pop $b
	popax
	sub $a,$b
	push $2
	spushs
	spop $a
	call [$a],getey
	push 1
	pop $b
	popax
	sub $a,$b
	cthis surfwithinsurf
	end method
	end module

	module cllen
	method init
	new int,il1
	new int,ilx
	new int,ily
	end method
	method ilenx
	push ilx
	ret
	end method
	method ileny
	push ily
	ret
	end method
	method ilen4
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	pop $b
	popax
	sub $a,$b
	spushs
	spop $h
	call $h,abs
	ret
	end method
	method ilen3
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getcx
	push $1
	spushs
	spop $a
	call [$a],getcy
	push $2
	spushs
	spop $a
	call [$a],getcx
	push $2
	spushs
	spop $a
	call [$a],getcy
	cthis ilen
	ret
	end method
	method ilen5
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getpx
	push $1
	spushs
	spop $a
	call [$a],getpy
	push $2
	spushs
	spop $a
	call [$a],getpx
	push $2
	spushs
	spop $a
	call [$a],getpy
	cthis ilen
	ret
	end method
	method ilen2
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getcx
	push $1
	spushs
	spop $a
	call [$a],getcy
	push $2
	push $3
	cthis ilen
	ret
	end method
	method ilen
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $3
	pop $b
	popax
	sub $a,$b
	pop ilx
	push $2
	push $4
	pop $b
	popax
	sub $a,$b
	pop ily
	push ilx
	push ily
	call il1,length
	ret
	end method
	method iclenx
	localstring $1
	localint $2
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getcx
	push $2
	pop $b
	popax
	sub $a,$b
	ret
	end method
	method iclenx2
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getcx
	push $2
	spushs
	spop $a
	call [$a],getcx
	pop $b
	popax
	sub $a,$b
	ret
	end method
	method icleny
	localstring $1
	localint $2
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getcy
	push $2
	pop $b
	popax
	sub $a,$b
	ret
	end method
	method icleny2
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getcy
	push $2
	spushs
	spop $a
	call [$a],getcy
	pop $b
	popax
	sub $a,$b
	ret
	end method
	method isbetween2
	localstring $1
	localstring $2
	localint $3
	localint $4
	localint $5
	localint $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	spushs
	spop $a
	call [$a],getcx
	push $2
	spushs
	spop $a
	call [$a],getcy
	push $3
	push $4
	push $5
	push $6
	cthis isbetween
	ret
	end method
	method isbetween
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	localint $7
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	cthis ilen
	pop il1
	push ilx
	push $4
	cmpjae
	cmp0
	je l265
	push ilx
	push $6
	cmpjle
	cmp0
	je l265
	push ily
	push $5
	cmpjae
	cmp0
	je l265
	push ily
	push $7
	cmpjle
	jmp l267
l265:
	push 0
	jmp l267
l266:
	push 1
l267:
	ret
	end method
	method ilodlen
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],lodx
	push $1
	spushs
	spop $a
	call [$a],lody
	push $2
	spushs
	spop $a
	call [$a],lodx
	push $2
	spushs
	spop $a
	call [$a],lody
	cthis ilen
	end method
	method iposlen
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getpos
	push $2
	spushs
	spop $a
	call [$a],getpos
	cthis ilen
	end method
	end module

	class classansearcher
	method init
	end method
	method _findnotr
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	localint $6
	push $1
	spushs
	spop $a
	call [$a],getex
	pop $6
	localint $7
	push $1
	spushs
	spop $a
	call [$a],getey
	pop $7
l268:
	push $2
	push $6
	cmpjne
	cmp0
	je l269
	push $3
	push $7
	cmpjne
	jmp l271
l269:
	push 0
	jmp l271
l270:
	push 1
l271:
	cmp0
	je l272
	push $1
	spushs
	push $2
	push $3
	push 0
	push 1
	spop $a
	call [$a],isin
	cmp0
	je l274
	push $2
	push $3
	ret
l274:
	push $4
	popax
	add $2,$a
	pop $2
	push $5
	popax
	add $3,$a
	pop $3
	jmp l268
l272:
	push 1
	popax
	sub 0,$a
	push 1
	popax
	sub 0,$a
	ret
	end method
	method firstnotrx1y
	localstring $1
	pop $1
	push $1
	push $1
	spushs
	spop $a
	call [$a],getpx
	push $1
	spushs
	spop $a
	call [$a],getpy
	push 1
	push 0
	cthis _findnotr
	ret
	end method
	method firstnotrexy1
	localstring $1
	pop $1
	push $1
	push $1
	spushs
	spop $a
	call [$a],getex
	push 1
	pop $b
	popax
	sub $a,$b
	push $1
	spushs
	spop $a
	call [$a],getpy
	push 0
	push 1
	cthis _findnotr
	ret
	end method
	method firstnotrxy1
	localstring $1
	pop $1
	push $1
	push $1
	spushs
	spop $a
	call [$a],getpx
	push $1
	spushs
	spop $a
	call [$a],getpy
	push 0
	push 1
	cthis _findnotr
	ret
	end method
	method firstnotrx1ey
	localstring $1
	pop $1
	push $1
	push $1
	spushs
	spop $a
	call [$a],getpx
	push $1
	spushs
	spop $a
	call [$a],getey
	push 1
	pop $b
	popax
	sub $a,$b
	push 1
	push 0
	cthis _findnotr
	ret
	end method
	end class

	class signal_pack
	method init
	end method
	method addsignals
	localstring $1
	pop $1
	push $1
	spushs
	push "operator<"
	push "signal_pack0"
	spop $a
	call [$a],addmethod
	end method
	method signal_pack0
	localstring $1
	pop $1
	push "onfinish"
	push $1
	cthis addmethod
	end method
	end class

	class ImagePos
	method init
	end method
	method getex
	cthis getpx
	cthis getw
	pop $b
	popax
	add $a,$b
	end method
	method getey
	cthis getpy
	cthis geth
	pop $b
	popax
	add $a,$b
	end method
	method getcx
	cthis getpx
	cthis getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	end method
	method getcy
	cthis getpy
	cthis geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	end method
	method setpos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	cthis getpx
	pop $b
	popax
	sub $a,$b
	push $2
	cthis getpy
	pop $b
	popax
	sub $a,$b
	cthis move
	end method
	end class

	class ImageVisible
	method init
	new int,_isvisible
	push 1
	pop _isvisible
	end method
	method isvisible
	push _isvisible
	end method
	method show
	push 1
	pop _isvisible
	end method
	method hide
	push 0
	pop _isvisible
	end method
	end class

	class Image
	method init
	end method
	method resizemethods
	localstring $1
	pop $1
	push $1
	spushs
	push A
	push "getz"
	push 0
	push "getpx"
	push 0
	push "getpy"
	push 0
	push "getw"
	push 0
	push "geth"
	push 0
	push "isvisible"
	push 0
	spop $a
	call [$a],vars2
	push $1
	spushs
	push "show"
	push "Image0"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "hide"
	push "Image1"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setz"
	push "Image2"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setpos"
	push "Image3"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "move"
	push "Image4"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "getex"
	push "Image5"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "getey"
	push "Image6"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "getcx"
	push "Image7"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "getcy"
	push "Image8"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "isin"
	push "Image9"
	spop $a
	call [$a],addmethod
	end method
	method Image0
	push 1
	pop isvisible
	end method
	method Image1
	push 0
	pop isvisible
	end method
	method Image2
	localint $1
	pop $1
	push $1
	pop getz
	end method
	method Image3
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	pop getpx
	push $2
	pop getpy
	end method
	method Image4
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	popax
	add getpx,$a
	pop getpx
	push $2
	popax
	add getpy,$a
	pop getpy
	end method
	method Image5
	push getpx
	push getw
	pop $b
	popax
	add $a,$b
	end method
	method Image6
	push getpy
	push geth
	pop $b
	popax
	add $a,$b
	end method
	method Image7
	push getpx
	push getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	end method
	method Image8
	push getpy
	push geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	end method
	method Image9
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $4
	neg
	cmp0
	je l276
	push $3
	neg
	cmp0
	jne l279
	push $3
	cmp0
	je l280
	push isvisible
	jmp l282
l280:
	push 0
	jmp l282
l281:
	push 1
l282:
	jmp l283
l278:
	push 0
	jmp l283
l279:
	push 1
l283:
	cmp0
	je l284
	push $1
	push getpx
	cmpjae
	cmp0
	je l285
	push $1
	cthis getex
	cmpjl
	cmp0
	je l285
	push $2
	push getpy
	cmpjae
	cmp0
	je l285
	push $2
	cthis getey
	cmpjl
	jmp l287
l285:
	push 0
	jmp l287
l286:
	push 1
l287:
	jmp l277
l284:
	push 0
l277:
	jmp l275
l276:
	push 0
l275:
	end method
	end class

	class anima_pack
	parent signal_pack
	method init
	end method
	method resizemethods
	localstring $1
	pop $1
	push $1
	spushs
	push "_clanbuildpomvars"
	push "anima_pack0"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	spop $a
	call [$a],_clanbuildpomvars
	push $1
	spushs
	push "setbpos"
	push "anima_pack1"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "saverelpos"
	push "anima_pack2"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setrelpos"
	push "anima_pack3"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "mssaverelpos"
	push "anima_pack4"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "mssetrelpos"
	push "anima_pack5"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "rplay"
	push "anima_pack6"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setcpos"
	push "anima_pack7"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "operator="
	push "anima_pack8"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "operator=="
	push "anima_pack9"
	spop $a
	call [$a],addmethod
	push $1
	cthis addsignals
	end method
	method anima_pack0
	new int,_ixp
	new int,_iyp
	end method
	method anima_pack1
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	cthis lodx
	pop $b
	popax
	sub $a,$b
	push $2
	cthis lody
	pop $b
	popax
	sub $a,$b
	cthis setpos
	end method
	method anima_pack2
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	cthis getpx
	pop $b
	popax
	sub $a,$b
	pop _ixp
	push $2
	cthis getpy
	pop $b
	popax
	sub $a,$b
	pop _iyp
	end method
	method anima_pack3
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push _ixp
	pop $b
	popax
	sub $a,$b
	push $2
	push _iyp
	pop $b
	popax
	sub $a,$b
	cthis setbpos
	end method
	method anima_pack4
	call mouse,getpos
	cthis saverelpos
	end method
	method anima_pack5
	call mouse,getpos
	cthis setrelpos
	end method
	method anima_pack6
	localstring $1
	pop $1
	push $1
	cthis isplaying
	neg
	cmp0
	je l289
	push $1
	cthis play
l289:
	end method
	method anima_pack7
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	cthis getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push $2
	cthis geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	cthis setbpos
	end method
	method anima_pack8
	localstring $1
	pop $1
	push $1
	cthis copy
	end method
	method anima_pack9
	localstring $1
	pop $1
	cthis actionnr
	push $1
	spushs
	spop $a
	call [$a],actionnr
	cmpje
	cmp0
	je l290
	cthis framenr
	push $1
	spushs
	spop $a
	call [$a],framenr
	cmpje
	jmp l292
l290:
	push 0
	jmp l292
l291:
	push 1
l292:
	end method
	end class

	class timer_pack
	parent signal_pack
	method init
	end method
	method resizemethods
	localstring $1
	pop $1
	push $1
	cthis addsignals
	end method
	end class

	class vector_pack
	method init
	end method
	method each
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l293:
	push $2
	cthis size
	cmpjl
	cmp0
	je l294
	jmp l296
l295:
	add $2,1
	pop $2
	jmp l293
l296:
	push $1
	spushs
	push $2
	cthis get
	spop $d
	cthis [$d]
	jmp l295
l294:
	end method
	method resizemethods
	localstring $1
	pop $1
	push $1
	spushs
	push "each"
	push "each"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "operator-"
	push "vector_pack0"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "operator+"
	push "vector_pack1"
	spop $a
	call [$a],addmethod
	end method
	method vector_pack0
	localdef $1
	pop $1
	push $1
	cthis remove
	cthis getname
	end method
	method vector_pack1
	localdef $1
	pop $1
	push $1
	cthis add
	cthis getname
	end method
	end class

	method new_object
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	push $2
	spushs
	spop $e
	spop $d
	new [$d],[$e]
	push $1
	push "_pack"
	pop $b
	popax
	add $a,$b
	spushs
	push $2
	spop $a
	 clparent [$a],resizemethods
	end method
	method new_anima
	localstring $1
	pop $1
	push "anima"
	push $1
	cthis new_object
	end method
	method new_vector
	localstring $1
	pop $1
	push "vector"
	push $1
	cthis new_object
	end method
	class classanfilter
	method init
	end method
	method buildanfilter
	new filter,ft
	cthis getname
	call ft,link
	push 1
	call ft,setpivottype
	end method
	method build
	localstring $1
	pop $1
	push $1
	spushs
	push "buildanfilter"
	push "buildanfilter"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	spop $a
	call [$a],buildanfilter
	push $1
	spushs
	push "setopacity"
	push "classanfilter0"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setzoom"
	push "classanfilter1"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setangle"
	push "classanfilter2"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "getangle"
	push "classanfilter3"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "rotate"
	push "classanfilter4"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setpivottype"
	push "classanfilter5"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "unlink"
	push "classanfilter6"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "link"
	push "classanfilter7"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "blend"
	push "classanfilter8"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "mask"
	push "classanfilter9"
	spop $a
	call [$a],addmethod
	end method
	method classanfilter0
	localint $1
	pop $1
	push $1
	call ft,setopacity
	end method
	method classanfilter1
	localreal $1
	pop $1
	push $1
	call ft,setzoom
	end method
	method classanfilter2
	localreal $1
	pop $1
	push $1
	call ft,setangle
	end method
	method classanfilter3
	call ft,getangle
	ret
	end method
	method classanfilter4
	localreal $1
	pop $1
	push $1
	call ft,rotate
	end method
	method classanfilter5
	localint $1
	pop $1
	push $1
	call ft,setpivottype
	end method
	method classanfilter6
	call ft,unlink
	end method
	method classanfilter7
	cthis getname
	call ft,link
	end method
	method classanfilter8
	localstring $1
	pop $1
	push $1
	call ft,blend
	end method
	method classanfilter9
	localstring $1
	pop $1
	push $1
	call ft,mask
	end method
	end class

	class classancounter
	method init
	new int,iile
	new int,id
	new string,_san
	new vector,_vs
	new int,_pos
	end method
	method set
	localstring $1
	localint $2
	pop $2
	pop $1
	push $1
	pop _san
	push $2
	pop iile
	push 0
	pop id
	call $1,length
	pop _pos
	push $2
	push 0
	call _vs,resize
	end method
	method get
	localstring $1
	push _san
	push id
	pop $b
	popax
	add $a,$b
	pop $1
	push id
	push 1
	pop $b
	popax
	add $a,$b
	push iile
	pop $b
	popax
	div $a,$b
	push $d
	pop id
	push $1
	ret
	end method
	method getf
	localint $1
	push 0
	pop $1
l297:
	push $1
	push iile
	cmpjl
	cmp0
	je l298
	jmp l300
l299:
	add $1,1
	pop $1
	jmp l297
l300:
	push $1
	call _vs,get
	neg
	cmp0
	je l302
	push $1
	push 1
	call _vs,set
	push _san
	push $1
	pop $b
	popax
	add $a,$b
	ret
l302:
	jmp l299
l298:
	push "null"
	ret
	end method
	method retf
	localstring $1
	pop $1
	push _san
	call $1,strsubbs
	push 0
	call _vs,set
	end method
	method isfree
	localint $1
	pop $1
	push $1
	call _vs,get
	ret
	end method
	method getile
	push iile
	ret
	end method
	method allfree
	call _vs,vecsum
	push 0
	cmpje
	end method
	end class

	class gmobjvec
	method init
	new vector,lsim
	push "string"
	call lsim,type
	end method
	method operator=
	localstring $1
	pop $1
	push $1
	call engine,varexist
	cmp0
	je l304
	push $1
	spushs
	spop $a
	call [$a],gettype
	spushs
	push "vector"
	cmpst
	jne l306
	spop $a
	push $1
	cthis copy
	jmp l305
l306:
	push "gmobjvec"
	cmpst
	jne l307
	spop $a
	push $1
	cthis copy
	jmp l305
l307:
	push "gmimgvec"
	cmpst
	jne l308
	spop $a
	push $1
	cthis copy
	jmp l305
l308:
	spop $a
	cthis free
	push $1
	cthis add
l305:
	jmp l303
l304:
	cthis free
	push $1
	cthis add
l303:
	end method
	method save
	localstring $1
	pop $1
	push $1
	call lsim,save
	end method
	method load
	localstring $1
	pop $1
	push $1
	call lsim,load
	end method
	method operator+
	localstring $1
	pop $1
	push $1
	cthis add
	cthis getname
	end method
	method operator-
	localstring $1
	pop $1
	push $1
	cthis remove
	cthis getname
	end method
	method removegr
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l309:
	push $2
	push $1
	spushs
	spop $a
	call [$a],size
	cmpjl
	cmp0
	je l310
	jmp l312
l311:
	add $2,1
	pop $2
	jmp l309
l312:
	push $1
	spushs
	push $2
	spop $a
	call [$a],get
	cthis remove
	jmp l311
l310:
	end method
	method addtogr
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l313:
	push $2
	cthis size
	cmpjl
	cmp0
	je l314
	jmp l316
l315:
	add $2,1
	pop $2
	jmp l313
l316:
	push $1
	spushs
	push $2
	cthis get
	spop $a
	call [$a],add
	jmp l315
l314:
	end method
	method addgr
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l317:
	push $2
	push $1
	spushs
	spop $a
	call [$a],size
	cmpjl
	cmp0
	je l318
	jmp l320
l319:
	add $2,1
	pop $2
	jmp l317
l320:
	push $1
	spushs
	push $2
	spop $a
	call [$a],get
	cthis add
	jmp l319
l318:
	end method
	method addgroups
	push "addgr"
	cthis withlist
	end method
	method copy
	localstring $1
	pop $1
	cthis free
	push $1
	cthis addgr
	end method
	method free
	call lsim,free
	end method
	method size
	call lsim,size
	end method
	method empty
	cthis size
	push 0
	cmpje
	end method
	method hash
	call lsim,hash
	end method
	method first
	push 0
	call lsim,get
	end method
	method last
	call lsim,size
	push 1
	pop $b
	popax
	sub $a,$b
	call lsim,get
	end method
	method print
	push ""
	call engine,print
	push "------ type("
	cthis gettype
	pop $b
	popax
	add $a,$b
	push ") "
	pop $b
	popax
	add $a,$b
	cthis getname
	pop $b
	popax
	add $a,$b
	push " ------"
	pop $b
	popax
	add $a,$b
	call engine,print
	call lsim,print
	push "------ end ------"
	call engine,print
	push ""
	call engine,print
	end method
	method get
	localint $1
	pop $1
	push $1
	call lsim,get
	end method
	method set
	localint $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	call lsim,set
	end method
	method add
	localstring $1
	pop $1
	push $1
	call lsim,add
	end method
	method additer
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
l321:
	push $3
	push 0
	cmpja
	cmp0
	je l322
	push $1
	push $2
	pop $b
	popax
	add $a,$b
	cthis add
	add $2,1
	pop $2
	sub $3,1
	pop $3
	jmp l321
l322:
	end method
	method buildarray
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	call gameapi,getgamename
	spushs
	push $1
	push $2
	push $3
	spop $a
	call [$a],newarray
	push $2
	push 0
	push $3
	cthis additer
	end method
	method deleteall
	localint $1
	push 0
	pop $1
l323:
	push $1
	cthis size
	cmpjl
	cmp0
	je l324
	jmp l326
l325:
	add $1,1
	pop $1
	jmp l323
l326:
	push $1
	cthis get
	spushs
	spop $d
	delete [$d]
	jmp l325
l324:
	end method
	method deleteallgm
	localdef $1
	call gameapi,getgamename
	pop $1
	localint $2
	push 0
	pop $2
l327:
	push $2
	cthis size
	cmpjl
	cmp0
	je l328
	jmp l330
l329:
	add $2,1
	pop $2
	jmp l327
l330:
	push $1
	spushs
	push $2
	cthis get
	spop $a
	call [$a],vardel
	jmp l329
l328:
	end method
	method deleteallgmobj
	localdef $1
	call gameapi,getgamename
	pop $1
	localint $2
	push 0
	pop $2
l331:
	push $2
	cthis size
	cmpjl
	cmp0
	je l332
	jmp l334
l333:
	add $2,1
	pop $2
	jmp l331
l334:
	push $1
	spushs
	push $2
	cthis get
	spop $a
	call [$a],deletegmobj
	jmp l333
l332:
	end method
	method lockall
	push "lock"
	cthis eval
	end method
	method unlockall
	push "unlock"
	cthis eval
	end method
	method addbegin
	localstring $1
	pop $1
	push $1
	call lsim,addbegin
	end method
	method swap
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call lsim,swap
	end method
	method addonce
	localstring $1
	pop $1
	push $1
	call lsim,contains
	neg
	cmp0
	je l336
	push $1
	call lsim,add
l336:
	end method
	method sepadd
	localstring $1
	pop $1
	localstring $2
	pop $2
l337:
	push $2
	push $1
	cmpjne
	cmp0
	je l338
	push $2
	cthis addbegin
	pop $2
	jmp l337
l338:
	end method
	method addlist
	push A
	cthis sepadd
	end method
	method removelist
	push "remove"
	cthis withlist
	end method
	method insertat
	localstring $1
	localint $2
	pop $2
	pop $1
	localdef $3
	cthis size
	pop $3
	push $2
	push 0
	cmpjle
	cmp0
	je l340
	push $1
	cthis addbegin
	jmp l339
l340:
	push $2
	push $3
	cmpjae
	cmp0
	je l342
	push $1
	cthis add
	jmp l341
l342:
	push "null"
	cthis add
	localdef $4
	push $3
	pop $4
l343:
	push $4
	push $2
	cmpja
	cmp0
	je l344
	jmp l346
l345:
	sub $4,1
	pop $4
	jmp l343
l346:
	push $4
	push $4
	push 1
	pop $b
	popax
	sub $a,$b
	cthis get
	cthis set
	jmp l345
l344:
	push $2
	push $1
	cthis set
l341:
l339:
	end method
	method remove
	localstring $1
	pop $1
	push $1
	call lsim,remove
	end method
	method removeat
	localint $1
	pop $1
	push $1
	call lsim,removeat
	end method
	method removefirst
	push 0
	call lsim,removeat
	end method
	method removelast
	cthis size
	push 1
	pop $b
	popax
	sub $a,$b
	call lsim,removeat
	end method
	method removealloccurs
	localstring $1
	pop $1
l347:
	push $1
	cthis contains
	cmp0
	je l348
	push $1
	cthis remove
	jmp l347
l348:
	end method
	method removeif
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l349:
	push $2
	cthis size
	cmpjl
	cmp0
	je l350
	jmp l352
l351:
	add $2,1
	pop $2
	jmp l349
l352:
	push $2
	cthis get
	spushs
	push $1
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	cmp0
	je l354
	push $2
	cthis removeat
l354:
	jmp l351
l350:
	end method
	method find
	localstring $1
	pop $1
	push $1
	call lsim,find
	end method
	method contains
	localstring $1
	pop $1
	push $1
	call lsim,contains
	end method
	method addgroup
	localstring $1
	localint $2
	pop $2
	pop $1
	push $1
	push 0
	push $2
	push 1
	pop $b
	popax
	sub $a,$b
	cthis addgroup2
	end method
	method addgroup2
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
l355:
	push $2
	push $3
	cmpjle
	cmp0
	je l356
	push $1
	push $2
	pop $b
	popax
	add $a,$b
	cthis add
	add $2,1
	pop $2
	jmp l355
l356:
	end method
	method rand
	localint $1
	cthis size
	pop $1
	push $1
	push 0
	cmpja
	cmp0
	je l358
	call $1,rand
	cthis get
	jmp l357
l358:
	push "null"
l357:
	end method
	method randdiff
	localstring $1
	pop $1
	localint $2
	cthis size
	pop $2
	push $2
	push 0
	cmpja
	cmp0
	je l360
	localint $3
	call $2,rand
	pop $3
	localint $4
	push $3
	pop $4
l361:
	push $3
	cthis get
	push $1
	cmpje
	cmp0
	je l362
	push $3
	push 1
	pop $b
	popax
	add $a,$b
	push $2
	pop $b
	popax
	div $a,$b
	push $d
	pop $3
	push $3
	push $4
	cmpje
	cmp0
	je l364
	push "null"
	ret
l364:
	jmp l361
l362:
	push $3
	cthis get
	ret
l360:
	push "null"
	end method
	method buildfullvars
	push "gmobjvec0"
	cthis each
	end method
	method gmobjvec0
	localdef $1
	pop $1
	cthis buildfullname
	end method
	method buildvars
	push "gmobjvec1"
	cthis each
	end method
	method gmobjvec1
	localdef $1
	pop $1
	cthis getname
	cthis addtogamevars
	end method
	method movefrom
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	localint $4
	push $1
	cthis find
	pop $4
	push $4
	push 0
	cmpjae
	cmp0
	je l366
l367:
	push $4
	call lsim,size
	cmpjl
	cmp0
	je l368
	push $4
	call lsim,get
	spushs
	push $2
	push $3
	spop $a
	call [$a],move
	add $4,1
	pop $4
	jmp l367
l368:
l366:
	end method
	method move
	localint $1
	localint $2
	pop $2
	pop $1
	push "move"
	push $1
	push $2
	cthis eval2
	end method
	method setpos
	localint $1
	localint $2
	pop $2
	pop $1
	push "setpos"
	push $1
	push $2
	cthis eval2
	end method
	method show
	push "show"
	cthis eval
	end method
	method hide
	push "hide"
	cthis eval
	end method
	method stop
	localint $1
	pop $1
	push "stop"
	push $1
	cthis eval1
	end method
	method play
	push "play"
	cthis eval
	end method
	method setdelay
	localint $1
	pop $1
	push "setdelay"
	push $1
	cthis eval1
	end method
	method isplaying
	localint $1
	push 0
	pop $1
l369:
	push $1
	cthis size
	cmpjl
	cmp0
	je l370
	jmp l372
l371:
	add $1,1
	pop $1
	jmp l369
l372:
	push $1
	cthis get
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],isplaying
	cmp0
	je l374
	push 1
	ret
l374:
	jmp l371
l370:
	push 0
	end method
	method graddmethod
	localstring $1
	localstring $2
	pop $2
	pop $1
	push "addmethod"
	push $1
	push $2
	cthis eval2
	end method
	method getimg
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	localint $5
	call lsim,size
	push 1
	pop $b
	popax
	sub $a,$b
	pop $5
l375:
	push $5
	push 0
	cmpjae
	cmp0
	je l376
	jmp l378
l377:
	sub $5,1
	pop $5
	jmp l375
l378:
	push $5
	call lsim,get
	spushs
	push $1
	push $2
	push $3
	push $4
	spop $a
	call [$a],isin
	cmp0
	je l380
	push $5
	call lsim,get
	ret
l380:
	jmp l377
l376:
	push "null"
	ret
	end method
	method isin
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	localint $5
	call lsim,size
	push 1
	pop $b
	popax
	sub $a,$b
	pop $5
l381:
	push $5
	push 0
	cmpjae
	cmp0
	je l382
	jmp l384
l383:
	sub $5,1
	pop $5
	jmp l381
l384:
	push $5
	call lsim,get
	spushs
	push $1
	push $2
	push $3
	push $4
	spop $a
	call [$a],isin
	cmp0
	je l386
	push $5
	push 1
	pop $b
	popax
	add $a,$b
	ret
l386:
	jmp l383
l382:
	push 0
	ret
	end method
	method setframe
	localdef $1
	localint $2
	pop $2
	pop $1
	push "setframe"
	push $1
	push $2
	cthis eval2
	end method
	method setz
	localint $1
	pop $1
	push "setz"
	push $1
	cthis eval1
	end method
	method eval
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l387:
	push $2
	call lsim,size
	cmpjl
	cmp0
	je l388
	jmp l390
l389:
	add $2,1
	pop $2
	jmp l387
l390:
	push $2
	call lsim,get
	spushs
	push $1
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	jmp l389
l388:
	end method
	method eval1
	localstring $1
	localdef $2
	pop $2
	pop $1
	localint $3
	push 0
	pop $3
l391:
	push $3
	call lsim,size
	cmpjl
	cmp0
	je l392
	jmp l394
l393:
	add $3,1
	pop $3
	jmp l391
l394:
	push $3
	call lsim,get
	spushs
	push $1
	spushs
	push $2
	spop $d
	spop $a
	call [$a],[$d]
	jmp l393
l392:
	end method
	method eval2
	localstring $1
	localdef $2
	localdef $3
	pop $3
	pop $2
	pop $1
	localint $4
	push 0
	pop $4
l395:
	push $4
	call lsim,size
	cmpjl
	cmp0
	je l396
	jmp l398
l397:
	add $4,1
	pop $4
	jmp l395
l398:
	push $4
	call lsim,get
	spushs
	push $1
	spushs
	push $2
	push $3
	spop $d
	spop $a
	call [$a],[$d]
	jmp l397
l396:
	end method
	method eval3
	localstring $1
	localdef $2
	localdef $3
	localdef $4
	pop $4
	pop $3
	pop $2
	pop $1
	localint $5
	push 0
	pop $5
l399:
	push $5
	call lsim,size
	cmpjl
	cmp0
	je l400
	jmp l402
l401:
	add $5,1
	pop $5
	jmp l399
l402:
	push $5
	call lsim,get
	spushs
	push $1
	spushs
	push $2
	push $3
	push $4
	spop $d
	spop $a
	call [$a],[$d]
	jmp l401
l400:
	end method
	method _find
	localstring $1
	localdef $2
	pop $2
	pop $1
	localint $3
	push 0
	pop $3
l403:
	push $3
	cthis size
	cmpjl
	cmp0
	je l404
	jmp l406
l405:
	add $3,1
	pop $3
	jmp l403
l406:
	push $3
	cthis get
	spushs
	push $1
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	push $2
	cmpje
	cmp0
	je l408
	push $3
	ret
l408:
	jmp l405
l404:
	push 1
	popax
	sub 0,$a
	end method
	method _find1
	localstring $1
	localdef $2
	pop $2
	pop $1
	localint $3
	push 0
	pop $3
l409:
	push $3
	cthis size
	cmpjl
	cmp0
	je l410
	jmp l412
l411:
	add $3,1
	pop $3
	jmp l409
l412:
	push $3
	cthis get
	spushs
	push $1
	spushs
	push $2
	spop $d
	spop $a
	call [$a],[$d]
	cmp0
	je l414
	push $3
	ret
l414:
	jmp l411
l410:
	push 1
	popax
	sub 0,$a
	end method
	method each
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l415:
	push $2
	cthis size
	cmpjl
	cmp0
	je l416
	jmp l418
l417:
	add $2,1
	pop $2
	jmp l415
l418:
	push $2
	cthis get
	spushs
	push $1
	spushs
	push $2
	spop $d
	spop $a
	call [$a],[$d]
	jmp l417
l416:
	end method
	method each1
	localstring $1
	localdef $2
	pop $2
	pop $1
	localint $3
	push 0
	pop $3
l419:
	push $3
	cthis size
	cmpjl
	cmp0
	je l420
	jmp l422
l421:
	add $3,1
	pop $3
	jmp l419
l422:
	push $3
	cthis get
	spushs
	push $1
	spushs
	push $3
	push $2
	spop $d
	spop $a
	call [$a],[$d]
	jmp l421
l420:
	end method
	method each2
	localstring $1
	localdef $2
	localdef $3
	pop $3
	pop $2
	pop $1
	localint $4
	push 0
	pop $4
l423:
	push $4
	cthis size
	cmpjl
	cmp0
	je l424
	jmp l426
l425:
	add $4,1
	pop $4
	jmp l423
l426:
	push $4
	cthis get
	spushs
	push $1
	spushs
	push $4
	push $2
	push $3
	spop $d
	spop $a
	call [$a],[$d]
	jmp l425
l424:
	end method
	method ineach
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l427:
	push $2
	cthis size
	cmpjl
	cmp0
	je l428
	jmp l430
l429:
	add $2,1
	pop $2
	jmp l427
l430:
	push $2
	cthis get
	spushs
	push $1
	spushs
	push $2
	spop $d
	spop $a
	call [$a],[$d]
	neg
	cmp0
	je l432
	push 0
	ret
l432:
	jmp l429
l428:
	push 1
	end method
	method find_closest
	localstring $1
	localstring $2
	pop $2
	pop $1
	cthis empty
	cmp0
	je l434
	ret
l434:
	localint $3
	push 0
	pop $3
	localreal $4
	localreal $5
	push 0
	cthis get
	spushs
	push $2
	spushs
	push $1
	spop $d
	spop $a
	call [$a],[$d]
	pop $5
	localint $6
	push 1
	pop $6
l435:
	push $6
	cthis size
	cmpjl
	cmp0
	je l436
	jmp l438
l437:
	add $6,1
	pop $6
	jmp l435
l438:
	push $6
	cthis get
	spushs
	push $2
	spushs
	push $1
	spop $d
	spop $a
	call [$a],[$d]
	pop $4
	push $4
	push $5
	cmpjl
	cmp0
	je l440
	push $6
	pop $3
	push $5
	pop $4
l440:
	jmp l437
l436:
	push $3
	end method
	method sortimgsfun
	localstring $1
	pop $1
	push $1
	call lsim,vecsort
	end method
	method sortimgs
	push "_scmpimg1"
	call lsim,vecsort
	end method
	method _scmpimg1
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getz
	push $2
	spushs
	spop $a
	call [$a],getz
	cmpjl
	cmp0
	jne l442
	push $1
	spushs
	spop $a
	call [$a],getz
	push $2
	spushs
	spop $a
	call [$a],getz
	cmpje
	cmp0
	je l443
	push $1
	spushs
	spop $a
	call [$a],getidobj
	push $2
	spushs
	spop $a
	call [$a],getidobj
	cmpjl
	jmp l445
l443:
	push 0
	jmp l445
l444:
	push 1
l445:
	jmp l446
l441:
	push 0
	jmp l446
l442:
	push 1
l446:
	end method
	end class

	class gmimgvec
	parent gmobjvec
	method init
	clparent gmobjvec,init
	new int,_ix
	push 0
	pop _ix
	new int,_iy
	push 0
	pop _iy
	new int,_iz
	push 0
	pop _iz
	new int,_ifound
	push 1
	popax
	sub 0,$a
	pop _ifound
	new string,sanload
	push "null"
	pop sanload
	end method
	method _setpos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	pop _iy
	pop _ix
	end method
	method lodx
	push 0
	end method
	method lody
	push 0
	end method
	method getposx
	push _ix
	end method
	method getposy
	push _iy
	end method
	method getpos
	push _ix
	push _iy
	ret
	end method
	method getpx
	push _ix
	end method
	method getpy
	push _iy
	end method
	method getw
	cthis getex
	cthis getpx
	pop $b
	popax
	sub $a,$b
	end method
	method geth
	cthis getey
	cthis getpy
	pop $b
	popax
	sub $a,$b
	end method
	method getcx
	cthis getpx
	cthis getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	end method
	method getcy
	cthis getpy
	cthis geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	end method
	method getz
	push _iz
	end method
	method getex
	localint $1
	cthis size
	pop $1
	push $1
	push 0
	cmpjle
	cmp0
	je l448
	push _ix
	ret
l448:
	localint $2
	push 0
	cthis get
	spushs
	spop $a
	call [$a],getex
	pop $2
	localint $3
	localint $4
	push 1
	pop $4
l449:
	push $4
	push $1
	cmpjl
	cmp0
	je l450
	jmp l452
l451:
	add $4,1
	pop $4
	jmp l449
l452:
	push $4
	cthis get
	spushs
	spop $a
	call [$a],getex
	pop $3
	push $3
	push $2
	cmpja
	cmp0
	je l454
	push $3
	pop $2
l454:
	jmp l451
l450:
	push $2
	end method
	method getey
	localint $1
	cthis size
	pop $1
	push $1
	push 0
	cmpjle
	cmp0
	je l456
	push _iy
	ret
l456:
	localint $2
	push 0
	cthis get
	spushs
	spop $a
	call [$a],getey
	pop $2
	localint $3
	localint $4
	push 1
	pop $4
l457:
	push $4
	push $1
	cmpjl
	cmp0
	je l458
	jmp l460
l459:
	add $4,1
	pop $4
	jmp l457
l460:
	push $4
	cthis get
	spushs
	spop $a
	call [$a],getey
	pop $3
	push $3
	push $2
	cmpja
	cmp0
	je l462
	push $3
	pop $2
l462:
	jmp l459
l458:
	push $2
	end method
	method _getpx
	localint $1
	cthis size
	pop $1
	push $1
	push 0
	cmpjle
	cmp0
	je l464
	push _ix
	ret
l464:
	localint $2
	push 0
	cthis get
	spushs
	spop $a
	call [$a],getpx
	pop $2
	localint $3
	localint $4
	push 1
	pop $4
l465:
	push $4
	push $1
	cmpjl
	cmp0
	je l466
	jmp l468
l467:
	add $4,1
	pop $4
	jmp l465
l468:
	push $4
	cthis get
	spushs
	spop $a
	call [$a],getpx
	pop $3
	push $3
	push $2
	cmpjl
	cmp0
	je l470
	push $3
	pop $2
l470:
	jmp l467
l466:
	push $2
	end method
	method _getpy
	localint $1
	cthis size
	pop $1
	push $1
	push 0
	cmpjle
	cmp0
	je l472
	push _iy
	ret
l472:
	localint $2
	push 0
	cthis get
	spushs
	spop $a
	call [$a],getpy
	pop $2
	localint $3
	localint $4
	push 1
	pop $4
l473:
	push $4
	push $1
	cmpjl
	cmp0
	je l474
	jmp l476
l475:
	add $4,1
	pop $4
	jmp l473
l476:
	push $4
	cthis get
	spushs
	spop $a
	call [$a],getpy
	pop $3
	push $3
	push $2
	cmpjl
	cmp0
	je l478
	push $3
	pop $2
l478:
	jmp l475
l474:
	push $2
	end method
	method _getw
	cthis getex
	cthis _getpx
	pop $b
	popax
	sub $a,$b
	end method
	method _geth
	cthis getey
	cthis _getpy
	pop $b
	popax
	sub $a,$b
	end method
	method setz
	localint $1
	pop $1
	push $1
	pop _iz
	push "setz"
	push $1
	cthis eval1
	end method
	method move
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	popax
	add _ix,$a
	pop _ix
	push $2
	popax
	add _iy,$a
	pop _iy
	push "move"
	push $1
	push $2
	cthis eval2
	end method
	method setpos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	pop _ix
	push $2
	pop _iy
	push "setpos"
	push $1
	push $2
	cthis eval2
	end method
	method setpos2
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	pop _ix
	push $2
	pop _iy
	cthis empty
	neg
	cmp0
	je l480
	push 0
	cthis get
	spushs
	spop $a
	call [$a],getpx
	popax
	sub $1,$a
	pop $1
	push 0
	cthis get
	spushs
	spop $a
	call [$a],getpy
	popax
	sub $2,$a
	pop $2
	push $1
	popax
	sub 0,$a
	push $2
	popax
	sub 0,$a
	cthis move
l480:
	end method
	method changeframe
	localint $1
	pop $1
	localstring $2
	localint $3
	push 0
	pop $3
l481:
	push $3
	cthis size
	cmpjl
	cmp0
	je l482
	jmp l484
l483:
	add $3,1
	pop $3
	jmp l481
l484:
	push $3
	cthis get
	pop $2
	push $2
	spushs
	push $2
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	push $1
	spop $a
	call [$a],setframe
	jmp l483
l482:
	end method
	method nplay
	localint $1
	pop $1
	push "play"
	push $1
	cthis eval1
	end method
	method txtreset
	localint $1
	push 0
	pop $1
l485:
	push $1
	cthis size
	cmpjl
	cmp0
	je l486
	jmp l488
l487:
	add $1,1
	pop $1
	jmp l485
l488:
	push $1
	cthis get
	spushs
	push ""
	spop $a
	call [$a],txtset
	jmp l487
l486:
	end method
	method anputgr
	push "anputgr"
	cthis eval
	end method
	method anputy
	localint $1
	pop $1
	push "anputy"
	push ipos
	cthis eval1
	end method
	method isin
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	localint $5
	call lsim,size
	push 1
	pop $b
	popax
	sub $a,$b
	pop $5
l489:
	push $5
	push 0
	cmpjae
	cmp0
	je l490
	jmp l492
l491:
	sub $5,1
	pop $5
	jmp l489
l492:
	push $5
	call lsim,get
	spushs
	push $1
	push $2
	push $3
	push $4
	spop $a
	call [$a],isin
	cmp0
	je l494
	push $5
	pop _ifound
	push $5
	push 1
	pop $b
	popax
	add $a,$b
	ret
l494:
	jmp l491
l490:
	push 1
	popax
	sub 0,$a
	pop _ifound
	push 0
	end method
	method isinfunc
	localint $1
	localint $2
	localstring $3
	pop $3
	pop $2
	pop $1
	localint $4
	call lsim,size
	push 1
	pop $b
	popax
	sub $a,$b
	pop $4
l495:
	push $4
	push 0
	cmpjae
	cmp0
	je l496
	jmp l498
l497:
	sub $4,1
	pop $4
	jmp l495
l498:
	push $4
	call lsim,get
	spushs
	push $3
	spushs
	push $1
	push $2
	spop $d
	spop $a
	call [$a],[$d]
	cmp0
	je l500
	push $4
	pop _ifound
	push $4
	push 1
	pop $b
	popax
	add $a,$b
	ret
l500:
	jmp l497
l496:
	push 1
	popax
	sub 0,$a
	pop _ifound
	push 0
	end method
	method isincut
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	localint $5
	call lsim,size
	push 1
	pop $b
	popax
	sub $a,$b
	pop $5
l501:
	push $5
	push 0
	cmpjae
	cmp0
	je l502
	jmp l504
l503:
	sub $5,1
	pop $5
	jmp l501
l504:
	push $5
	call lsim,get
	spushs
	push $1
	push $2
	spop $a
	call [$a],withincut
	cmp0
	je l506
	push $5
	call lsim,get
	spushs
	push $1
	push $2
	push $3
	push $4
	spop $a
	call [$a],isin
	jmp l508
l506:
	push 0
	jmp l508
l507:
	push 1
l508:
	cmp0
	je l509
	push $5
	pop _ifound
	push $5
	push 1
	pop $b
	popax
	add $a,$b
	ret
l509:
	jmp l503
l502:
	push 1
	popax
	sub 0,$a
	pop _ifound
	push 0
	end method
	method withincut
	localint $1
	localint $2
	pop $2
	pop $1
	push $2
	push $1
	push "gmimgvec0"
	cthis ineach
	pop $1
	pop $2
	end method
	method gmimgvec0
	localdef $1
	pop $1
	localint $2
	pop $2
	localint $3
	pop $3
	push $2
	push $3
	cthis withincut
	push $3
	push $2
	end method
	method findif
	localstring $1
	pop $1
	push $1
	push 1
	cthis _find
	end method
	method getfound
	push _ifound
	end method
	method getsfound
	push _ifound
	cthis get
	end method
	method findfr
	localint $1
	pop $1
	push "framenr"
	push $1
	cthis _find
	end method
	method findsfr
	localstring $1
	pop $1
	push "framename"
	push $1
	cthis _find
	end method
	method findac
	localint $1
	pop $1
	push "anactnr"
	push $1
	cthis _find
	end method
	method findsac
	localstring $1
	pop $1
	push "actionname"
	push $1
	cthis _find
	end method
	method nearest_to
	localstring $1
	pop $1
	push $1
	push "gmimgvec1"
	cthis find_closest
	end method
	method gmimgvec1
	localstring $1
	pop $1
	cthis getname
	push $1
	call cllen,ilen5
	end method
	method getsac
	localstring $1
	pop $1
	push $1
	cthis findsac
	cthis get
	end method
	method getsacfr
	localstring $1
	localint $2
	pop $2
	pop $1
	localint $3
	push 0
	pop $3
l510:
	push $3
	cthis size
	cmpjl
	cmp0
	je l511
	jmp l513
l512:
	add $3,1
	pop $3
	jmp l510
l513:
	push $3
	cthis get
	spushs
	spop $a
	call [$a],actionname
	push $1
	cmpje
	cmp0
	je l515
	push $3
	cthis get
	spushs
	spop $a
	call [$a],framenr
	push $2
	cmpje
	jmp l517
l515:
	push 0
	jmp l517
l516:
	push 1
l517:
	cmp0
	je l518
	push $3
	cthis get
	ret
l518:
	jmp l512
l511:
	push "null"
	end method
	method blitto
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l519:
	push $2
	cthis size
	cmpjl
	cmp0
	je l520
	jmp l522
l521:
	add $2,1
	pop $2
	jmp l519
l522:
	push $1
	spushs
	push $2
	cthis get
	spop $a
	call [$a],blit
	jmp l521
l520:
	end method
	method sortz
	localint $1
	pop $1
	localint $2
	push 0
	pop $2
l523:
	push $2
	cthis size
	cmpjl
	cmp0
	je l524
	jmp l526
l525:
	add $2,1
	pop $2
	jmp l523
l526:
	push $2
	cthis get
	spushs
	push $1
	push $2
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setz
	jmp l525
l524:
	end method
	method ancopies
	localstring $1
	localint $2
	pop $2
	pop $1
	localint $3
	push 0
	pop $3
l527:
	push $3
	push $2
	cmpjl
	cmp0
	je l528
	jmp l530
l529:
	add $3,1
	pop $3
	jmp l527
l530:
	push GAME
	spushs
	push $1
	push $1
	push "_"
	pop $b
	popax
	add $a,$b
	push $3
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],copyanima
	push $1
	push "_"
	pop $b
	popax
	add $a,$b
	push $3
	pop $b
	popax
	add $a,$b
	cthis add
	jmp l529
l528:
	end method
	method loadallan
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	localstring $4
	call gameapi,getgamename
	pop $4
	push $4
	spushs
	push $1
	push $2
	push $3
	spop $a
	call [$a],newanima
	push $4
	spushs
	push $1
	push $1
	cthis getname
	spop $a
	call [$a],newanfrbyactgr
	popax
	push $1
	spushs
	spop $a
	call [$a],hide
	end method
	method addsrcanima
	localstring $1
	pop $1
	push "srcanima"
	push $1
	cthis var2
	end method
	method operator*
	localstring $1
	pop $1
	localstring $2
	call gameapi,getgamename
	pop $2
	localstring $3
	push ".pyz"
	call $1,contains
	cmp0
	je l532
	push 0
	push 1
	call $1,getb
	push "$"
	cmpje
	cmp0
	je l534
	new vector,_vtmp
	push "string"
	call _vtmp,type
	push $1
	push "/"
	call _vtmp,vecbuildfromstring
	push "an"
	call _vtmp,last
	spushs
	push ".pyz"
	spop $h
	call $h,strsubes
	pop $b
	popax
	add $a,$b
	pop $3
	delete _vtmp
	jmp l533
l534:
	push "an"
	push ".pyz"
	call $1,strsubes
	pop $b
	popax
	add $a,$b
	pop $3
l533:
	push $2
	spushs
	push $3
	push $1
	push 0
	spop $a
	call [$a],newanima
	jmp l531
l532:
	push $1
	pop $3
l531:
	push $3
	pop sanload
	push $2
	spushs
	push $3
	push $3
	cthis getname
	spop $a
	call [$a],newanactionsgr
	popax
	push $3
	spushs
	spop $a
	call [$a],hide
	push $3
	cthis addsrcanima
	end method
	method operator<
	localstring $1
	pop $1
	localstring $2
	call gameapi,getgamename
	pop $2
	localstring $3
	push ".pyz"
	call $1,contains
	cmp0
	je l536
	push "an"
	push ".pyz"
	call $1,strsubes
	pop $b
	popax
	add $a,$b
	pop $3
	push $2
	spushs
	push $3
	push $1
	push 0
	spop $a
	call [$a],newanima
	jmp l535
l536:
	push $1
	pop $3
l535:
	push $3
	pop sanload
	push $2
	spushs
	push $3
	push $3
	cthis getname
	spop $a
	call [$a],newanfrbyactgr
	popax
	push $3
	spushs
	spop $a
	call [$a],hide
	push $3
	cthis addsrcanima
	end method
	method deleteloaded
	cthis deleteallgm
	push sanload
	push "null"
	cmpjne
	cmp0
	je l538
	call gameapi,getgamename
	spushs
	push sanload
	spop $a
	call [$a],vardel
l538:
	end method
	method deleteinit
	localdef $1
	call gameapi,getgamename
	pop $1
	localint $2
	push 0
	pop $2
l539:
	push $2
	cthis size
	cmpjl
	cmp0
	je l540
	jmp l542
l541:
	add $2,1
	pop $2
	jmp l539
l542:
	localdef $3
	push $2
	cthis get
	pop $3
	push $3
	spushs
	spop $a
	call [$a],gettype
	push "gmimgvec"
	cmpje
	cmp0
	je l544
	push $3
	spushs
	spop $a
	call [$a],deleteinit
l544:
	push $1
	spushs
	push $3
	spop $a
	call [$a],vardel
	jmp l541
l540:
	push sanload
	push "null"
	cmpjne
	cmp0
	je l546
	call gameapi,getgamename
	spushs
	push sanload
	spop $a
	call [$a],vardel
l546:
	end method
	end class

	class gmadvvec
	parent gmimgvec
	method init
	clparent gmimgvec,init
	end method
	method butisin
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	localint $5
	call lsim,size
	push 1
	pop $b
	popax
	sub $a,$b
	pop $5
l547:
	push $5
	push 0
	cmpjae
	cmp0
	je l548
	jmp l550
l549:
	sub $5,1
	pop $5
	jmp l547
l550:
	push $5
	call lsim,get
	spushs
	push $1
	push $2
	push $3
	push $4
	spop $a
	call [$a],butisin
	cmp0
	je l552
	push $5
	pop _ifound
	push $5
	push 1
	pop $b
	popax
	add $a,$b
	ret
l552:
	jmp l549
l548:
	push 1
	popax
	sub 0,$a
	pop _ifound
	push 0
	end method
	end class

	class gmmaskvec
	parent gmadvvec
	method init
	clparent gmadvvec,init
	end method
	method butisin
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push $4
	clparent gmimgvec,butisin
	end method
	end class

	new int,igmsubtitle
	push "igmsubtitle:"
	call dbconf,dbgetint
	pop igmsubtitle
	new int,igmlektor
	push "igmlektor:"
	call dbconf,dbgetint
	pop igmlektor
	new int,igmchardelay
	push "igmchardelay:"
	call dbconf,dbgetint
	pop igmchardelay
	new int,igmsubmindelay
	push 2000
	push "igmsubmindelay:"
	call dbconf,dbgetint
	push 200000
	cthis between
	pop igmsubmindelay
	class Subtitle
	method init
	localstring $1
	localint $2
	pop $2
	pop $1
	localreal $3
	push 0.5
	pop $3
	new int,col0
	new int,col1
	new int,col2
	cthis restorecolor
	localstring $4
	push SNDPATH
	pop $4
	new string,ssubpos
	push "sgmsubtitlespos:"
	call dbconf,dbget
	pop ssubpos
	push ssubpos
	push "null"
	cmpje
	cmp0
	je l554
	push "down"
	pop ssubpos
l554:
	localdef $5
	push "sgmsubtitlespos:"
	push 2
	call dbconf,dbgets
	pop $5
	new int,isubpos
	push $5
	push "null"
	cmpjne
	cmp0
	je l556
	push $5
	jmp l555
l556:
	push 15
l555:
	pop isubpos
	new int,bshadow
	push "igmsubshadow:"
	call dbconf,dbgetint
	pop bshadow
	new int,bblackbg
	push "igmsubblackbg:"
	call dbconf,dbgetint
	pop bblackbg
	new int,iborx
	push $2
	pop iborx
	new int,ifontsize
	call fntsubtitle,getsize
	pop ifontsize
	new db,dbl
	push LANGDIR
	push $1
	pop $b
	popax
	add $a,$b
	call dbl,load
	localint $6
	push 0
	pop $6
	localstring $5
l557:
	push $6
	call dbl,getrowsno
	cmpjl
	cmp0
	je l558
	push $6
	call dbl,getcolsno
	push 2
	cmpjl
	cmp0
	jne l561
	push $6
	push 0
	call dbl,get
	spushs
	push 0
	push 1
	spop $h
	call $h,getb
	push "#"
	cmpje
	jmp l562
l560:
	push 0
	jmp l562
l561:
	push 1
l562:
	cmp0
	je l563
	push $6
	call dbl,removerow
	jmp l559
l563:
	add $6,1
	pop $6
l559:
	jmp l557
l558:
	localstring $7
	new vector,v1
	push "string"
	call v1,type
	localint $8
	push iResX
	push 2
	push $2
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	sub $a,$b
	push $3
	push ifontsize
	pop $b
	popax
	mul $a,$b
	push 1
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	div $a,$b
	psax
	pop $8
	localint $9
	localint $10
	localint $11
	push 0
	pop $11
	localint $6
	push 0
	pop $6
l564:
	push $6
	call dbl,getrowsno
	cmpjl
	cmp0
	je l565
	jmp l567
l566:
	add $6,1
	pop $6
	jmp l564
l567:
	push $4
	push $6
	push 0
	call dbl,get
	pop $b
	popax
	add $a,$b
	push ".wav"
	pop $b
	popax
	add $a,$b
	pop $5
	push $5
	call engine,fileexist
	neg
	cmp0
	je l569
	push $4
	push $6
	push 0
	call dbl,get
	pop $b
	popax
	add $a,$b
	push ".ogg"
	pop $b
	popax
	add $a,$b
	pop $5
l569:
	push $6
	push 0
	push $5
	call dbl,set
	push $6
	push 1
	call dbl,get
	pop $5
	push $5
	push " "
	call v1,vecbuildfromstring
	push ""
	pop $7
	push 1
	pop $9
	push 0
	pop $10
l570:
	push $10
	call v1,size
	cmpjl
	cmp0
	je l571
	jmp l573
l572:
	add $10,1
	pop $10
	jmp l570
l573:
	call $7,length
	push $10
	call v1,get
	spushs
	spop $h
	call $h,length
	pop $b
	popax
	add $a,$b
	push 1
	pop $b
	popax
	add $a,$b
	push $8
	cmpjle
	cmp0
	je l575
	push " "
	push $10
	call v1,get
	pop $b
	popax
	add $a,$b
	popax
	add $7,$a
	pop $7
	jmp l574
l575:
	push $9
	push 1
	cmpje
	cmp0
	je l577
	push $6
	push $9
	push $7
	call dbl,set
	jmp l576
l577:
	push $6
	push $7
	call dbl,add
l576:
	push $10
	call v1,get
	pop $7
	add $9,1
	pop $9
l574:
	jmp l572
l571:
	push $9
	push 1
	cmpje
	cmp0
	je l579
	push $6
	push $9
	push $7
	call dbl,set
	jmp l578
l579:
	push $6
	push $7
	call dbl,add
l578:
	push $9
	push $11
	cmpja
	cmp0
	je l581
	push $9
	pop $11
l581:
	jmp l566
l565:
	new gmimgvec,grtxt
	new gmimgvec,grtxts
	localint $6
	push 0
	pop $6
l582:
	push $6
	push $11
	cmpjl
	cmp0
	je l583
	jmp l585
l584:
	add $6,1
	pop $6
	jmp l582
l585:
	push "txt"
	push $6
	pop $b
	popax
	add $a,$b
	pop $5
	push bshadow
	cmp0
	je l587
	push "txts"
	push $6
	pop $b
	popax
	add $a,$b
	pop $7
	push $7
	push ""
	push "fntsubtitle"
	cthis black
	clparent classgame,newtext
	push $7
	call grtxts,add
	jmp l586
l587:
	push bblackbg
	cmp0
	je l589
	push "imgs"
	push $6
	pop $b
	popax
	add $a,$b
	pop $7
	push $7
	spushs
	spop $e
	new img,[$e]
	push $7
	call grtxts,add
l589:
l586:
	push $5
	push ""
	push "fntsubtitle"
	cthis getcolor
	clparent classgame,newtext
	push $5
	call grtxt,add
	jmp l584
l583:
	new db,dbsnd
	new timer,timtxt
	push 1
	call timtxt,settick
	push 1
	call timtxt,setcycle
	push "onfinish"
	push "Subtitle0"
	call timtxt,addmethod
	push 1900
	cthis setz
	end method
	method Subtitle0
	cthis cisplaying
	neg
	cmp0
	je l591
	cthis hidesubs
	jmp l590
l591:
	cthis play
l590:
	end method
	method geth
	call grtxts,size
	cmp0
	je l593
	call grtxts,first
	spushs
	spop $a
	call [$a],geth
	jmp l592
l593:
	call grtxt,size
	cmp0
	je l595
	call grtxt,last
	spushs
	spop $a
	call [$a],geth
	jmp l594
l595:
	push 0
l594:
l592:
	end method
	method reset
	cthis stop
	call dbsnd,free
	end method
	method hidesubs
	call grtxt,hide
	call grtxts,hide
	end method
	method setz
	localint $1
	pop $1
	push $1
	call grtxt,setz
	push $1
	push 1
	pop $b
	popax
	sub $a,$b
	call grtxts,setz
	end method
	method stop
	cthis hidesubs
	push 0
	call timtxt,stop
	end method
	method register
	localstring $1
	localstring $2
	pop $2
	pop $1
	localdef $3
	push $2
	call dbl,findbyrow
	pop $3
	push $3
	push 0
	cmpjae
	cmp0
	je l597
	localdef $4
	push $1
	call dbsnd,findbyrow
	pop $4
	push $4
	push 0
	cmpjae
	cmp0
	je l599
	push $4
	push 1
	push $3
	call dbsnd,set
	jmp l598
l599:
	localdef $4
	call dbsnd,addrow
	push 1
	pop $b
	popax
	sub $a,$b
	pop $4
	push $4
	push $1
	call dbsnd,add
	push $4
	push $3
	call dbsnd,add
l598:
l597:
	end method
	method getiddialog
	localstring $1
	pop $1
	push $1
	call dbsnd,findbyrow
	end method
	method hasdialog
	localstring $1
	pop $1
	push $1
	cthis getiddialog
	push 0
	cmpjae
	end method
	method play
	localstring $1
	pop $1
	cthis stop
	localdef $2
	push $1
	call dbsnd,findbyrow
	pop $2
	push $2
	push 0
	cmpjae
	cmp0
	je l601
	localint $3
	push 0
	pop $3
	push $2
	push 1
	call dbsnd,get
	pop $2
	localdef $4
	push $2
	call dbl,getcolsno
	push 1
	pop $b
	popax
	sub $a,$b
	pop $4
	localstring $5
	localstring $6
	localint $7
	localint $8
	push 0
	push 0
	call grtxt,setpos
	localint $8
	push 2
	pop $8
	localint $9
	push 0
	pop $9
l602:
	push $9
	push $4
	cmpjl
	cmp0
	je l603
	jmp l605
l604:
	add $9,1
	pop $9
	jmp l602
l605:
	push $9
	call grtxt,get
	pop $5
	push $5
	spushs
	push $2
	push $9
	push 1
	pop $b
	popax
	add $a,$b
	call dbl,get
	push col0
	push col1
	push col2
	spop $a
	call [$a],txtsetcol
	push $5
	spushs
	spop $a
	call [$a],get
	spushs
	spop $h
	call $h,length
	popax
	add $3,$a
	pop $3
	push $5
	spushs
	push iResX
	push $5
	spushs
	spop $a
	call [$a],getw
	pop $b
	popax
	sub $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push igmoffsetx
	pop $b
	popax
	add $a,$b
	push $9
	push ifontsize
	pop $b
	popax
	mul $a,$b
	push $8
	pop $b
	popax
	add $a,$b
	push igmoffsety
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	push $5
	spushs
	spop $a
	call [$a],show
	push bshadow
	cmp0
	je l607
	push $9
	call grtxt,get
	pop $6
	push $6
	spushs
	push $5
	spushs
	spop $a
	call [$a],get
	push col0
	push col1
	push col2
	spop $a
	call [$a],txtsetcol
	push $6
	spushs
	push $5
	spushs
	spop $a
	call [$a],getpx
	push 1
	pop $b
	popax
	add $a,$b
	push $5
	spushs
	spop $a
	call [$a],getpy
	push 1
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	push $6
	spushs
	spop $a
	call [$a],show
l607:
	jmp l604
l603:
	push bblackbg
	cmp0
	je l609
	call grtxt,first
	pop $5
	call grtxts,first
	pop $6
	push ssubpos
	push "up"
	cmpje
	cmp0
	je l611
	push $6
	spushs
	push iResX
	push $4
	push 1
	pop $b
	popax
	sub $a,$b
	call grtxt,get
	spushs
	spop $a
	call [$a],getey
	cthis black
	push bblackbg
	spop $a
	call [$a],create
	push $6
	spushs
	push igmoffsetx
	push igmoffsety
	spop $a
	call [$a],setpos
	jmp l610
l611:
	push $6
	spushs
	push iResX
	push $4
	push 1
	pop $b
	popax
	sub $a,$b
	call grtxt,get
	spushs
	spop $a
	call [$a],getey
	push $5
	spushs
	spop $a
	call [$a],getpy
	pop $b
	popax
	sub $a,$b
	cthis black
	push bblackbg
	spop $a
	call [$a],create
	push $6
	spushs
	push igmoffsetx
	push $5
	spushs
	spop $a
	call [$a],getpy
	push igmoffsety
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
l610:
	push $6
	spushs
	push $5
	spushs
	spop $a
	call [$a],getz
	push 1
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setz
	push $6
	spushs
	spop $a
	call [$a],show
l609:
	push ssubpos
	push "up"
	cmpje
	cmp0
	je l613
	push 0
	pop $8
	jmp l612
l613:
	push iResY
	push $4
	push ifontsize
	push $8
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	sub $a,$b
	push isubpos
	pop $b
	popax
	sub $a,$b
	pop $8
	push 0
	push $8
	call grtxt,move
	push bshadow
	cmp0
	jne l616
	push bblackbg
	jmp l617
l615:
	push 0
	jmp l617
l616:
	push 1
l617:
	cmp0
	je l618
	push 0
	push $8
	call grtxts,move
l618:
l612:
	call timtxt,play
	push igmchardelay
	popax
	mul $3,$a
	pop $3
	push $3
	push igmsubmindelay
	cmpjl
	cmp0
	je l620
	push igmsubmindelay
	jmp l619
l620:
	push $3
l619:
	jmp l600
l601:
	push 0
l600:
	end method
	method setcolor
	localint $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	pop col0
	push $2
	pop col1
	push $3
	pop col2
	end method
	method getcolor
	push col0
	push col1
	push col2
	ret
	end method
	method restorecolor
	cthis white
	cthis setcolor
	end method
	end class

	push igmsubtitle
	cmp0
	je l622
	localstring $1
	push "subtitles_font:"
	call dbconf,dbget
	pop $1
	push $1
	push "null"
	cmpje
	cmp0
	je l624
	push sgmfontbold
	pop $1
l624:
	localint $2
	push "subtitles_fontsize:"
	call dbconf,dbgetint
	pop $2
	push $2
	push 0
	cmpjle
	cmp0
	je l626
	push 20
	pop $2
l626:
	new font,fntsubtitle
	push $1
	call $2,igetsc
	call fntsubtitle,load
	push "subtitles_src:"
	call dbconf,dbget
	push 50
	new Subtitle,subtitle
l622:
	class classsound
	method init
	new string,_csplay
	push "null"
	pop _csplay
	new timer,timlektor
	call timlektor,classsound0
	push "setsndfin"
	push "classsound1"
	call timlektor,addmethod
	push "onfinish"
	push "classsound2"
	call timlektor,addmethod
	push igmsubtitle
	cmp0
	je l632
	call subtitle,reset
l632:
	end method
	method classsound0
	new int,bsndfin
	push 1
	pop bsndfin
	end method
	method classsound1
	localint $1
	pop $1
	push $1
	pop bsndfin
	end method
	method classsound2
	push bsndfin
	cmp0
	je l628
	push _csplay
	push "null"
	cmpjne
	cmp0
	je l630
	push _csplay
	spushs
	spop $a
	call [$a],onfinish
l630:
	jmp l627
l628:
	push 1
	pop bsndfin
l627:
	end method
	method creset
	push "null"
	pop _csplay
	end method
	method cgetactsnd
	push _csplay
	end method
	method cisactsnd
	localstring $1
	pop $1
	push $1
	push _csplay
	cmpje
	end method
	method crselfplay
	localstring $1
	pop $1
	cthis cisplaying
	neg
	cmp0
	je l634
	push $1
	cthis cbplay
	jmp l633
l634:
	cthis cgetactsnd
	push $1
	cmpjne
	cmp0
	je l636
	push $1
	cthis cbplay
l636:
l633:
	end method
	method cbselfplay
	localstring $1
	pop $1
	cthis cisplaying
	neg
	cmp0
	jne l639
	cthis cgetactsnd
	push $1
	cmpjne
	jmp l640
l638:
	push 0
	jmp l640
l639:
	push 1
l640:
	cmp0
	je l641
	push $1
	cthis cbplay
l641:
	end method
	method cbplay
	localstring $1
	pop $1
	cthis cisplaying
	cmp0
	je l643
	push 1
	cthis csplaystop
l643:
	push $1
	cthis cbsplay
	end method
	method cbsplay
	localstring $1
	pop $1
	push $1
	pop _csplay
	push $1
	push "null"
	cmpjne
	cmp0
	je l645
	push $1
	cthis csubplay
l645:
	end method
	method cbplayfin
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	push "onfinish"
	push $2
	spop $a
	call [$a],addmethod
	push $1
	cthis cbplay
	end method
	method cbplay2
	localstring $1
	pop $1
	cthis cisplaying
	cmp0
	je l647
	push 0
	cthis csplaystop
l647:
	push $1
	cthis cbsplay
	end method
	method crplay
	localstring $1
	pop $1
	cthis cisplaying
	neg
	cmp0
	je l649
	push $1
	cthis cbsplay
l649:
	end method
	method cbplayif
	localstring $1
	pop $1
	cthis cisplaying
	cmp0
	je l651
	push $1
	cthis cbplay
l651:
	end method
	method crbgplay
	localstring $1
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l653
	push $1
	spushs
	spop $a
	call [$a],isplaying
	neg
	jmp l655
l653:
	push 0
	jmp l655
l654:
	push 1
l655:
	cmp0
	je l656
	push $1
	cthis csubplay
l656:
	end method
	method crandplay
	localstring $1
	localint $2
	localstring $3
	pop $3
	pop $2
	pop $1
	call $2,rand
	push 0
	cmpje
	cmp0
	je l658
	push "c"
	push $3
	pop $b
	popax
	add $a,$b
	push "play"
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	spop $d
	cthis [$d]
l658:
	end method
	method cplayf
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push "c"
	push $1
	pop $b
	popax
	add $a,$b
	push "play"
	pop $b
	popax
	add $a,$b
	spushs
	push $2
	spop $d
	cthis [$d]
	push $2
	spushs
	spop $a
	call [$a],isplaying
	cmp0
	je l660
	push $3
	push "null"
	cmpjne
	jmp l662
l660:
	push 0
	jmp l662
l661:
	push 1
l662:
	cmp0
	je l663
	push $2
	spushs
	push "onfinish"
	push $3
	spop $a
	call [$a],addmethod
l663:
	end method
	method cactsndstop
	localint $1
	pop $1
	cthis cisplaying
	cmp0
	je l665
	push $1
	cthis csplaystop
l665:
	end method
	method csplaystop
	localint $1
	pop $1
	call timlektor,isplaying
	cmp0
	je l667
	push $1
	call timlektor,setsndfin
	push 1
	call timlektor,stop
	jmp l666
l667:
	push _csplay
	spushs
	push $1
	spop $a
	call [$a],stop
l666:
	end method
	method cstopsnds
	localint $1
	pop $1
	call _csplay,in
	cmp0
	je l669
	cthis cisplaying
	jmp l671
l669:
	push 0
	jmp l671
l670:
	push 1
l671:
	cmp0
	je l672
	push $1
	cthis cactsndstop
l672:
	end method
	method cisplaying
	push _csplay
	push "null"
	cmpjne
	cmp0
	je l674
	call timlektor,isplaying
	cmp0
	jne l676
	push _csplay
	spushs
	spop $a
	call [$a],isplaying
	jmp l677
l675:
	push 0
	jmp l677
l676:
	push 1
l677:
	jmp l673
l674:
	push 0
l673:
	end method
	method cisplayingsnd
	push _csplay
	push "null"
	cmpjne
	cmp0
	je l679
	push _csplay
	spushs
	spop $a
	call [$a],isplaying
	jmp l678
l679:
	push 0
l678:
	end method
	method csubplay
	localstring $1
	pop $1
	push igmsubtitle
	cmp0
	je l681
	localint $2
	push igmlektor
	pop $2
	push $1
	spushs
	spop $a
	call [$a],loaded
	neg
	cmp0
	je l683
	push 0
	pop igmlektor
l683:
	localdef $3
	push $1
	call subtitle,play
	pop $3
	push igmlektor
	cmp0
	jne l686
	push $3
	push 0
	cmpjle
	jmp l687
l685:
	push 0
	jmp l687
l686:
	push 1
l687:
	cmp0
	je l688
	push $1
	spushs
	spop $a
	call [$a],play
	jmp l684
l688:
	push $3
	call timlektor,setdelay
	call timlektor,play
l684:
	push $2
	pop igmlektor
	jmp l680
l681:
	push $1
	spushs
	spop $a
	call [$a],play
l680:
	end method
	method cisdialogplaying
	cthis cisplaying
	cmp0
	je l689
	cthis cgetactsnd
	call subtitle,hasdialog
	jmp l691
l689:
	push 0
	jmp l691
l690:
	push 1
l691:
	end method
	end class

	class classsndbank
	method init
	new int,itype
	new int,ilicz
	push 0
	pop ilicz
	new int,iile
	new string,splay
	push "null"
	pop splay
	new string,ssnd
	push "snd"
	pop ssnd
	end method
	method loadsingle
	localstring $1
	localint $2
	pop $2
	pop $1
	push $2
	push 0
	cmpjle
	cmp0
	je l693
	push 0
	pop iile
	ret
l693:
	push $2
	pop iile
	push 0
	pop itype
	localint $3
	push 0
	pop $3
l694:
	push $3
	push $2
	cmpjl
	cmp0
	je l695
	jmp l697
l696:
	add $3,1
	pop $3
	jmp l694
l697:
	push ssnd
	push $3
	pop $b
	popax
	add $a,$b
	push $1
	clparent newvars,newsnd
	jmp l696
l695:
	end method
	method load
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $3
	push $2
	pop $b
	popax
	sub $a,$b
	push 1
	pop $b
	popax
	add $a,$b
	pop iile
	push iile
	push 0
	cmpjle
	cmp0
	je l699
	push 0
	pop iile
	ret
l699:
	push ssnd
	push 0
	push $1
	push $2
	push $3
	clparent newvars,newsnds
	push $4
	pop itype
	push $5
	push 1
	cmpje
	cmp0
	je l701
	call iile,rand
	pop ilicz
l701:
	end method
	method addmethod
	localstring $1
	localstring $2
	pop $2
	pop $1
	localint $3
	push 0
	pop $3
l702:
	push $3
	push iile
	cmpjl
	cmp0
	je l703
	jmp l705
l704:
	add $3,1
	pop $3
	jmp l702
l705:
	push ssnd
	push $3
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	push $2
	spop $a
	call [$a],addmethod
	jmp l704
l703:
	end method
	method stop
	localint $1
	pop $1
	push splay
	push "null"
	cmpjne
	cmp0
	je l707
	push splay
	spushs
	push $1
	spop $a
	call [$a],stop
l707:
	end method
	method isplaying
	push splay
	push "null"
	cmpjne
	cmp0
	je l709
	push splay
	spushs
	spop $a
	call [$a],isplaying
	jmp l708
l709:
	push 0
l708:
	end method
	method randplay
	localint $1
	pop $1
	call $1,rand
	push 0
	cmpje
	cmp0
	je l711
	cthis play
l711:
	end method
	method playid
	localint $1
	pop $1
	push $1
	push iile
	pop $b
	popax
	div $a,$b
	push $d
	pop ilicz
	cthis play
	end method
	method play
	push 0
	cthis stop
	cthis bgplay
	end method
	method reset
	push 0
	pop ilicz
	end method
	method rbgplay
	cthis isplaying
	neg
	cmp0
	je l713
	cthis bgplay
l713:
	end method
	method rplay
	cthis isplaying
	neg
	cmp0
	je l715
	cthis play
l715:
	end method
	method bgplay
	push ssnd
	push ilicz
	pop $b
	popax
	add $a,$b
	pop splay
	push splay
	spushs
	spop $a
	call [$a],play
	push itype
	push 0
	cmpje
	cmp0
	je l717
	push ilicz
	push 1
	pop $b
	popax
	add $a,$b
	push iile
	pop $b
	popax
	div $a,$b
	push $d
	pop ilicz
	jmp l716
l717:
	push itype
	push 1
	cmpje
	cmp0
	je l719
	call iile,rand
	pop ilicz
l719:
l716:
	end method
	method setvol
	localint $1
	pop $1
	localint $2
	push 0
	pop $2
l720:
	push $2
	push iile
	cmpjl
	cmp0
	je l721
	jmp l723
l722:
	add $2,1
	pop $2
	jmp l720
l723:
	push ssnd
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	spop $a
	call [$a],setvol
	jmp l722
l721:
	end method
	end class

	class SoundSource
	method init
	end method
	method setvol
	localstring $1
	localint $2
	localint $3
	localreal $4
	localreal $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	call $5,abs
	push $4
	cmpjae
	cmp0
	je l725
	push $1
	spushs
	push $3
	spop $a
	call [$a],setvol
	jmp l724
l725:
	push 1.0
	call $5,abs
	push $4
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push $2
	pop $b
	popax
	mul $a,$b
	push $3
	pop $b
	popax
	add $a,$b
	pop $2
	push $2
	push 100
	cmpja
	cmp0
	je l727
	push 100
	pop $2
l727:
	push $1
	spushs
	push $2
	spop $a
	call [$a],setvol
l724:
	end method
	end class

	class classgame
	parent newvars
	parent classsound
	method init
	clparent newvars,init
	clparent classsound,init
	new int,_iconstid
	new gmobjvec,_grsfxs
	end method
	method bkg=
	localdef $1
	pop $1
	push ".pyz"
	call $1,contains
	cmp0
	je l729
	push "anbkg"
	push $1
	push 0
	cthis newanima
	jmp l728
l729:
	push "imgbkg"
	push $1
	push 0
	cthis newimg
l728:
	end method
	method bgr=
	localdef $1
	pop $1
	push $1
	cthis csndbgr
	end method
	method path=
	localdef $1
	pop $1
	push "scripts/"
	push $1
	pop $b
	popax
	add $a,$b
	push "/"
	pop $b
	popax
	add $a,$b
	cthis setgraphpath
	end method
	method cycle=
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push 1
	push 1
	push $2
	cthis cnewtimercyclefin
	end method
	method timer=
	localdef $1
	localdef $2
	localdef $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push $3
	cthis cnewtimerfin
	end method
	method timplay
	localdef $1
	localdef $2
	localdef $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push $3
	cthis cnewtimerfin
	push $1
	spushs
	spop $a
	call [$a],play
	end method
	method _getflags
	localstring $1
	pop $1
	localdef $2
	push 0
	pop $2
	push "L"
	call $1,contains
	cmp0
	je l731
	push "L"
	call $1,strremove
	push 1
	pop $2
l731:
	localdef $3
	push 0
	pop $3
	push "P"
	call $1,contains
	cmp0
	je l733
	push "P"
	call $1,strremove
	push 1
	pop $3
l733:
	localdef $4
	push 0
	pop $4
	push "H"
	call $1,contains
	cmp0
	je l735
	push "H"
	call $1,strremove
	push 1
	pop $4
l735:
	push $1
	push $2
	push $3
	push $4
	ret
	end method
	method img=
	localdef $1
	pop $1
	push $1
	cthis _build_img
	popax
	end method
	method getlangfile
	localstring $1
	pop $1
	localdef $2
	push 4
	call $1,strsube
	push "_"
	pop $b
	popax
	add $a,$b
	push LANG
	pop $b
	popax
	add $a,$b
	push 0
	push 4
	call $1,gete
	pop $b
	popax
	add $a,$b
	pop $2
	push $2
	cthis getpath
	call engine,fileexist
	cmp0
	je l737
	push $2
	jmp l736
l737:
	push $1
l736:
	end method
	method _build_img
	localdef $1
	pop $1
	localdef $2
	localdef $3
	localdef $4
	push $1
	cthis _getflags
	pop $4
	pop $3
	pop $2
	pop $1
	localint $5
	push 0
	pop $5
	push "G"
	call $1,contains
	cmp0
	je l739
	push "G"
	call $1,strremove
	push 1
	pop $5
l739:
	localdef $6
	push 0
	pop $6
	push " "
	call $1,contains
	cmp0
	je l741
	push " "
	call $1,strgetfrom
	pop $6
	push " "
	call $1,strgetto
	pop $1
l741:
	localstring $7
	push "/"
	call $1,contains
	cmp0
	je l743
	new vector,_v_sfile
	push "string"
	call _v_sfile,type
	push $1
	push "/"
	call _v_sfile,vecbuildfromstring
	call _v_sfile,last
	spushs
	push 4
	spop $h
	call $h,strsube
	pop $7
	delete _v_sfile
	jmp l742
l743:
	push 4
	call $1,strsube
	pop $7
l742:
	localstring $8
	push ".pyz"
	call $1,contains
	cmp0
	je l745
	push $5
	cmp0
	je l747
	push "gr"
	push $7
	pop $b
	popax
	add $a,$b
	pop $8
	push $8
	push $1
	cthis getlangfile
	spushs
	push ".pyz"
	spop $h
	call $h,strsubes
	push $6
	cthis newgrimg
	jmp l746
l747:
	push "an"
	push $7
	pop $b
	popax
	add $a,$b
	pop $8
	push $8
	push $1
	cthis getlangfile
	push $6
	cthis newanima
l746:
	jmp l744
l745:
	push "img"
	push $7
	pop $b
	popax
	add $a,$b
	pop $8
	push $8
	push $1
	cthis getlangfile
	push $6
	cthis newimg
l744:
	push $2
	cmp0
	je l749
	push $8
	spushs
	spop $a
	call [$a],anloopfin
l749:
	push $3
	cmp0
	je l751
	push $8
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],play
l751:
	push $4
	cmp0
	je l753
	push $8
	spushs
	spop $a
	call [$a],hide
l753:
	push $8
	end method
	method imgsgr=
	localstring $1
	pop $1
	localstring $2
	push $1
	spushs
	spop $e
	new gmimgvec,[$e]
	localdef $3
	pop $3
l754:
	push A
	push $3
	cmpjne
	cmp0
	je l755
	push $1
	spushs
	push $3
	cthis _build_img
	spop $a
	call [$a],add
	localdef $3
	pop $3
	jmp l754
l755:
	end method
	method imgs=
	push "img="
	cthis withlist
	end method
	method clone
	localstring $1
	pop $1
	call gameapi,getgamename
	spushs
	cthis getname
	cthis gettype
	push $1
	spop $a
	call [$a],classgame0
	end method
	method classgame0
	localdef $1
	localdef $2
	localdef $3
	pop $3
	pop $2
	pop $1
	push $2
	spushs
	push $3
	spushs
	spop $e
	spop $d
	new [$d],[$e]
	push $3
	spushs
	push $1
	spop $a
	call [$a],copy
	end method
	method clones=
	push "clone"
	cthis withlist
	end method
	method list=
	localdef $1
	pop $1
	localdef $2
	pop $2
	push $1
	spushs
	spop $e
	new gmobjvec,[$e]
l756:
	push A
	push $2
	cmpjne
	cmp0
	je l757
	push $1
	spushs
	push $2
	spop $a
	call [$a],addbegin
	pop $2
	jmp l756
l757:
	end method
	method list2=
	localdef $1
	push "gmobjvec"
	cthis newconst
	pop $1
	push $1
	cthis list=
	push $1
	end method
	method debug=
	localdef $1
	pop $1
	push $1
	call engine,setdebugstate
	end method
	method sfx=
	localstring $1
	pop $1
	localint $2
	push "N"
	call $1,contains
	pop $2
	push $2
	cmp0
	je l759
	push "N"
	call $1,strremove
l759:
	localdef $3
	localdef $4
	push $1
	cthis _getflags
	popax
	pop $4
	pop $3
	pop $1
	localdef $5
	push 100
	pop $5
	push " "
	call $1,contains
	cmp0
	je l761
	push " "
	call $1,strgetfrom
	pop $5
	push " "
	call $1,strgetto
	pop $1
l761:
	localstring $6
	push "fx"
	push $1
	pop $b
	popax
	add $a,$b
	pop $6
	push $6
	push $1
	push ".wav"
	pop $b
	popax
	add $a,$b
	cthis newsfx
	push $6
	spushs
	push $5
	spop $a
	call [$a],setvol
	push $3
	cmp0
	je l763
	push $6
	spushs
	push "onfinish"
	push "_stdsndloop"
	spop $a
	call [$a],addmethod
l763:
	push $4
	cmp0
	je l765
	push $6
	spushs
	spop $a
	call [$a],play
	jmp l764
l765:
	push $2
	cmp0
	je l767
	push $6
	spushs
	spop $a
	call [$a],playloop
l767:
l764:
	push $6
	call _grsfxs,add
	end method
	method sfxs=
	push "sfx="
	cthis withlist
	end method
	method snd=
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push ".wav"
	pop $b
	popax
	add $a,$b
	cthis newsndfree
	push $1
	spushs
	push "onfinish"
	push $3
	spop $a
	call [$a],addmethod
	end method
	method tickstart
	push "__timspeed"
	cthis hasvar
	neg
	cmp0
	je l769
	new TicksCounter,__timspeed
l769:
	call __timspeed,start
	end method
	method tickstop
	push "ticker: "
	call __timspeed,print
	end method
	method csndplayloop
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	cthis newsndloop
	push $1
	spushs
	spop $a
	call [$a],play
	end method
	method csndbgr
	localstring $1
	pop $1
	push "sndbgr"
	push $1
	cthis newbgr
	push "sndbgr"
	cthis sndplayloop
	end method
	method cloadcursor
	localstring $1
	pop $1
	push "."
	call $1,contains
	cmp0
	je l771
	push "imgkursor"
	push $1
	push 0
	cthis newimg
	push "imgkursor"
	pop $1
l771:
	push $1
	spushs
	spop $a
	call [$a],hide
	push $1
	call mouse,setcursor
	push $1
	call engine,stdbutcursor
	end method
	method newimgarray
	localstring $1
	localstring $2
	localstring $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new gmimgvec,[$e]
	push $1
	spushs
	push $2
	push $3
	push $4
	spop $a
	call [$a],buildarray
	end method
	method newfont
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new font,[$e]
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],load
	end method
	method monofont
	localstring $1
	localint $2
	pop $2
	pop $1
	push $1
	push sgmfontmono
	push $2
	cthis newfont
	end method
	method newfontbold
	localstring $1
	localint $2
	pop $2
	pop $1
	push $1
	push sgmfontbold
	push $2
	cthis newfont
	end method
	method snewfont
	localstring $1
	localint $2
	pop $2
	pop $1
	localstring $3
	push "font"
	cthis newconst
	pop $3
	push $3
	spushs
	push $1
	push $2
	spop $a
	call [$a],load
	push $3
	ret
	end method
	method stdfont
	localint $1
	pop $1
	push sgmfontfile
	push $1
	cthis snewfont
	end method
	method stdmono
	localint $1
	pop $1
	push sgmfontmono
	push $1
	cthis snewfont
	end method
	method stdbold
	localint $1
	pop $1
	push sgmfontbold
	push $1
	cthis snewfont
	end method
	method getconstid
	add _iconstid,1
	pop _iconstid
	push _iconstid
	push 1
	pop $b
	popax
	sub $a,$b
	end method
	method newconst
	localstring $1
	pop $1
	localstring $2
	push "const"
	push $1
	pop $b
	popax
	add $a,$b
	cthis getconstid
	pop $b
	popax
	add $a,$b
	pop $2
	push $1
	spushs
	push $2
	spushs
	spop $e
	spop $d
	new [$d],[$e]
	push $2
	ret
	end method
	method consttext
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	localint $7
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	localstring $8
	push "text"
	cthis newconst
	pop $8
	localstring $9
	push $4
	cthis stdfont
	pop $9
	push $8
	spushs
	push $9
	spop $a
	call [$a],setfont
	push $8
	spushs
	push $1
	spop $a
	call [$a],set
	push $8
	spushs
	push $5
	push $6
	push $7
	spop $a
	call [$a],createtxt
	push $8
	spushs
	push $2
	push $3
	spop $a
	call [$a],setpos
	push $8
	ret
	end method
	method newtext
	localstring $1
	localstring $2
	localstring $3
	localint $4
	localint $5
	localint $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new text,[$e]
	push $1
	spushs
	push $2
	spop $a
	call [$a],set
	push $1
	spushs
	push $3
	spop $a
	call [$a],setfont
	push $1
	spushs
	push $4
	push $5
	push $6
	spop $a
	call [$a],createtxt
	end method
	method newtextposz
	localstring $1
	localstring $2
	localstring $3
	localint $4
	localint $5
	localint $6
	localint $7
	localint $8
	localint $9
	pop $9
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	push $5
	push $6
	cthis newtext
	push $1
	spushs
	push $7
	push $8
	push $9
	spop $a
	call [$a],anposz
	end method
	method newgrimg
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new gmimgvec,[$e]
	push $1
	push $2
	push ".pyz"
	pop $b
	popax
	add $a,$b
	popax
	pop $b
	psax
	call [$b],operator*
	push $1
	spushs
	push $3
	spop $a
	call [$a],setz
	end method
	method cfinmethod
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	push "onfinish"
	push $2
	spop $a
	call [$a],addmethod
	end method
	method cnewsndfin
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	cthis newsnd
	push $1
	push $3
	cthis cfinmethod
	end method
	method cnewsndsfin
	localstring $1
	localint $2
	localstring $3
	localint $4
	localint $5
	localstring $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	push $5
	cthis newsnds
	push $1
	push $2
	push $2
	push $5
	push $4
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	add $a,$b
	push $6
	cthis caddobjsfunfin
	end method
	method cnewsndfinbplay
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	cthis cnewsndfin
	push $1
	cthis cbplay
	end method
	method cnewtimerfin
	localstring $1
	localint $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	cthis newtimer
	push $1
	push $4
	cthis cfinmethod
	end method
	method cnewtimercyclefin
	localstring $1
	localint $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	cthis newtimercycle
	push $1
	push $4
	cthis cfinmethod
	end method
	method caddobjsfun
	localstring $1
	localint $2
	localint $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
l772:
	push $2
	push $3
	cmpjle
	cmp0
	je l773
	push $1
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push $4
	push $5
	push $2
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],addmethod
	add $2,1
	pop $2
	jmp l772
l773:
	end method
	method caddobjsfunfin
	localstring $1
	localint $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push "onfinish"
	push $4
	cthis caddobjsfun
	end method
	method newancounter
	localstring $1
	localstring $2
	localstring $3
	localint $4
	localint $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $2
	push $3
	push $4
	push $5
	cthis newanimas
	push $1
	spushs
	spop $e
	new classancounter,[$e]
	push $1
	spushs
	push $2
	push $5
	spop $a
	call [$a],set
	end method
	method newancounterh
	localstring $1
	localstring $2
	localstring $3
	localint $4
	localint $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	push $5
	cthis newancounter
	localint $6
	push 0
	pop $6
l774:
	push $6
	push $5
	cmpjl
	cmp0
	je l775
	jmp l777
l776:
	add $6,1
	pop $6
	jmp l774
l777:
	push $2
	push $6
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],hide
	jmp l776
l775:
	end method
	method newancounterf
	localstring $1
	localstring $2
	localstring $3
	localint $4
	localint $5
	localstring $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	push $5
	cthis newancounter
	localint $7
	push 0
	pop $7
l778:
	push $7
	push $5
	cmpjl
	cmp0
	je l779
	jmp l781
l780:
	add $7,1
	pop $7
	jmp l778
l781:
	push $2
	push $7
	pop $b
	popax
	add $a,$b
	spushs
	push "onfinish"
	push $6
	spop $a
	call [$a],addmethod
	jmp l780
l779:
	end method
	method newancounterhf
	localstring $1
	localstring $2
	localstring $3
	localint $4
	localint $5
	localstring $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	push $5
	cthis newancounter
	localint $7
	push 0
	pop $7
l782:
	push $7
	push $5
	cmpjl
	cmp0
	je l783
	jmp l785
l784:
	add $7,1
	pop $7
	jmp l782
l785:
	push $2
	push $7
	pop $b
	popax
	add $a,$b
	spushs
	push "onfinish"
	push $6
	spop $a
	call [$a],addmethod
	push $2
	push $7
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],hide
	jmp l784
l783:
	end method
	method cnewanimafin
	localstring $1
	localstring $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	cthis newanima
	push $1
	spushs
	push "onfinish"
	push $4
	spop $a
	call [$a],addmethod
	end method
	method ccopyanimafin
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	cthis copyanima
	push $2
	spushs
	push "onfinish"
	push $3
	spop $a
	call [$a],addmethod
	end method
	method cloadwavs
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	cthis newdb
	localint $3
	push 0
	pop $3
	localint $4
	push $1
	spushs
	spop $a
	call [$a],getrowsno
	pop $4
	localint $5
	localint $6
	localint $7
	localint $8
	localint $9
	localint $10
	localstring $11
	localstring $12
	localstring $13
	localstring $14
	localstring $15
l786:
	push $3
	push $4
	cmpjl
	cmp0
	je l787
	push $1
	spushs
	push $3
	spop $a
	call [$a],getcolsno
	pop $6
	push 0
	pop $7
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $12
	add $7,1
	pop $7
	push 0
	push 1
	call $12,getb
	push "#"
	cmpjne
	cmp0
	je l789
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $14
	add $7,1
	pop $7
	push $12
	push "wav"
	cmpje
	cmp0
	jne l792
	push $12
	push "sfx"
	cmpje
	jmp l793
l791:
	push 0
	jmp l793
l792:
	push 1
l793:
	cmp0
	je l794
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $13
	add $7,1
	pop $7
	push $12
	push "sfx"
	cmpje
	cmp0
	je l796
	push $14
	push $13
	cthis newsfx
	jmp l795
l796:
	push $14
	push $13
	cthis newsnd
l795:
	push $7
	push $6
	cmpjl
	cmp0
	je l798
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $12
	add $7,1
	pop $7
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $13
	add $7,1
	pop $7
	push $12
	push "method"
	cmpje
	cmp0
	je l800
	push $14
	spushs
	push "onfinish"
	push $13
	spop $a
	call [$a],addmethod
	jmp l799
l800:
	push 0
	push 4
	call $12,gete
	push "play"
	cmpje
	cmp0
	je l802
	push "c"
	push 4
	push 10
	call $12,gete
	pop $b
	popax
	add $a,$b
	push "playonfin"
	pop $b
	popax
	add $a,$b
	spushs
	push $14
	push $13
	spop $d
	cthis [$d]
	jmp l801
l802:
	push $12
	push "vol"
	cmpje
	cmp0
	je l804
	push $14
	spushs
	push $13
	spop $a
	call [$a],setvol
l804:
l801:
l799:
l798:
	jmp l790
l794:
	push $12
	push "group"
	cmpje
	cmp0
	je l806
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $13
	add $7,1
	pop $7
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $8
	add $7,1
	pop $7
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $9
	add $7,1
	pop $7
	push $7
	push $6
	cmpjl
	cmp0
	je l808
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $12
	add $7,1
	pop $7
	push $12
	push "method"
	cmpje
	cmp0
	je l810
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $15
	add $7,1
	pop $7
	push $14
	push $8
	push $13
	push $8
	push $9
	push $15
	cthis cnewsndsfin
l810:
	jmp l807
l808:
	push $14
	push $8
	push $13
	push $8
	push $9
	cthis newsnds
l807:
	jmp l805
l806:
	push $12
	push "bank"
	cmpje
	cmp0
	je l812
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $13
	add $7,1
	pop $7
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $5
	add $7,1
	pop $7
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $8
	add $7,1
	pop $7
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $9
	add $7,1
	pop $7
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $10
	add $7,1
	pop $7
	push $14
	spushs
	spop $e
	new classsndbank,[$e]
	push $14
	spushs
	push $13
	push $5
	push $8
	push $9
	push $10
	spop $a
	call [$a],load
	push $7
	push $6
	cmpjl
	cmp0
	je l814
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $12
	add $7,1
	pop $7
	push $12
	push "method"
	cmpje
	cmp0
	je l816
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $15
	add $7,1
	pop $7
	push $14
	spushs
	push "onfinish"
	push $15
	spop $a
	call [$a],addmethod
	jmp l815
l816:
	push $12
	push "vol"
	cmpje
	cmp0
	je l818
	push $14
	spushs
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	spop $a
	call [$a],setvol
l818:
l815:
l814:
	jmp l811
l812:
	push $12
	push "method"
	cmpje
	cmp0
	je l820
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $13
	add $7,1
	pop $7
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $8
	add $7,1
	pop $7
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $9
	add $7,1
	pop $7
l821:
	push $8
	push $9
	cmpjle
	cmp0
	je l822
	push $13
	push $8
	pop $b
	popax
	add $a,$b
	spushs
	push "onfinish"
	push $14
	spop $a
	call [$a],addmethod
	add $8,1
	pop $8
	jmp l821
l822:
	jmp l819
l820:
	push $12
	push "singlebank"
	cmpje
	cmp0
	je l824
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $13
	add $7,1
	pop $7
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $8
	add $7,1
	pop $7
	push $14
	spushs
	spop $e
	new classsndbank,[$e]
	push $14
	spushs
	push $13
	push $8
	spop $a
	call [$a],loadsingle
	jmp l823
l824:
	push $12
	push "bgr"
	cmpje
	cmp0
	je l826
	push $14
	cthis csndbgr
	push $7
	push $6
	cmpjl
	cmp0
	je l828
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	push "vol"
	cmpje
	cmp0
	je l830
	add $7,1
	pop $7
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	call sndbgr,setvol
	add $7,1
	pop $7
l830:
l828:
	jmp l825
l826:
	push $12
	push "music"
	cmpje
	cmp0
	je l832
	push $14
	cthis playmusic
	push $7
	push $6
	cmpjl
	cmp0
	je l834
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	push "vol"
	cmpje
	cmp0
	je l836
	add $7,1
	pop $7
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	call sndbgr,setvol
	add $7,1
	pop $7
l836:
l834:
l832:
l825:
l823:
l819:
l811:
l805:
l790:
l789:
	add $3,1
	pop $3
	jmp l786
l787:
	end method
	method crestart
	call gameapi,getgamename
	call gameapi,play
	end method
	method cgetscreenshoot
	localstring $1
	localreal $2
	pop $2
	pop $1
	new img,_imgsavebkg
	push iResX
	push iResY
	cthis white
	push 255
	call _imgsavebkg,create
	push 2000
	call _imgsavebkg,setz
	call _imgsavebkg,blitscreen
	push $2
	push 1.0
	cmpjne
	cmp0
	je l838
	new filter,_ftbg
	push "_imgsavebkg"
	call _ftbg,link
	push 1
	call _ftbg,setsmooth
	push $2
	call _ftbg,setzoom
l838:
	push 0
	push 0
	call _imgsavebkg,setpos
	new img,_im_1
	push $2
	push iResX
	pop $b
	popax
	mul $a,$b
	push $2
	push iResY
	pop $b
	popax
	mul $a,$b
	cthis white
	push 255
	call _im_1,create
	call _imgsavebkg,getpx
	call _imgsavebkg,getpy
	call _im_1,setpos
	push "_imgsavebkg"
	call _im_1,blit
	push $1
	call _im_1,save
	delete _im_1
	push $2
	push 1.0
	cmpjne
	cmp0
	je l840
	call _ftbg,unlink
	delete _ftbg
l840:
	delete _imgsavebkg
	end method
	end class

	class clfindfunc
	method init
	end method
	method _stdfindfunc
	localstring $1
	localint $2
	localint $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
l841:
	push $2
	push $3
	cmpjle
	cmp0
	je l842
	push $1
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push $5
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	push $4
	cmpje
	cmp0
	je l844
	push $2
	ret
l844:
	add $2,1
	pop $2
	jmp l841
l842:
	push 1
	popax
	sub 0,$a
	end method
	method _stdfindfunc2
	localstring $1
	localint $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push 0
	push $2
	push 1
	pop $b
	popax
	sub $a,$b
	push $3
	push $4
	cthis _stdfindfunc
	end method
	method cfindandeval2
	localstring $1
	localint $2
	localstring $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push 0
	push $2
	push 1
	pop $b
	popax
	sub $a,$b
	push $3
	push $4
	push $5
	cthis cfindandeval
	end method
	method cfindandeval
	localstring $1
	localint $2
	localint $3
	localstring $4
	localstring $5
	localstring $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	localint $7
	push $1
	push $2
	push $3
	push $4
	push $5
	cthis _stdfindfunc
	pop $7
	push $7
	push 0
	cmpjae
	cmp0
	je l846
	push $1
	push $7
	pop $b
	popax
	add $a,$b
	spushs
	push $6
	spushs
	spop $d
	spop $a
	call [$a],[$d]
l846:
	end method
	end class

	class classbutton
	method init
	new string,san
	push "anbut"
	pop san
	new string,sbut
	push "but"
	pop sbut
	new int,iilebut
	push 0
	pop iilebut
	new string,sfxmon
	push "null"
	pop sfxmon
	end method
	method _cbuildbutname
	localstring $1
	pop $1
	new string,_sbutname
	push $1
	pop _sbutname
	end method
	method cgetbutname
	push _sbutname
	ret
	end method
	method build
	localstring $1
	localint $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push "null"
	cthis build2
	end method
	method build2
	localstring $1
	localint $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	localstring $5
	push "_"
	push san
	pop $b
	popax
	add $a,$b
	pop $5
	push $5
	spushs
	spop $e
	new anima,[$e]
	push $5
	spushs
	push $1
	spop $a
	call [$a],load
	push $5
	spushs
	push $2
	spop $a
	call [$a],setz
	localint $6
	push $5
	spushs
	spop $a
	call [$a],nofactions
	pop $6
	localint $7
	localint $8
	localint $9
	push 0
	pop $9
	localstring $10
	localstring $11
	localstring $12
	localstring $13
	localint $14
	push 0
	pop $14
l847:
	push $14
	push $6
	cmpjl
	cmp0
	je l848
	jmp l850
l849:
	add $14,1
	pop $14
	jmp l847
l850:
	push "null"
	pop $10
	push "null"
	pop $11
	push "null"
	pop $12
	push $5
	spushs
	push $14
	spop $a
	call [$a],nofframes
	pop $7
	push 1
	pop $8
l851:
	push $8
	push $7
	cmpjle
	cmp0
	je l852
	jmp l854
l853:
	add $8,1
	pop $8
	jmp l851
l854:
	push san
	push $9
	pop $b
	popax
	add $a,$b
	pop $13
	push $8
	push 1
	cmpje
	cmp0
	je l856
	push $13
	pop $10
	jmp l855
l856:
	push $8
	push 2
	cmpje
	cmp0
	je l858
	push $13
	pop $11
	jmp l857
l858:
	push $8
	push 3
	cmpje
	cmp0
	je l860
	push $13
	pop $12
l860:
l857:
l855:
	push $5
	push $13
	clparent newvars,copyanima
	push $13
	spushs
	push $14
	push $8
	push 1
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setframe
	add $9,1
	pop $9
	jmp l853
l852:
	push $4
	push "null"
	cmpjne
	cmp0
	je l862
	push $4
	spushs
	push $5
	spushs
	push $14
	spop $a
	call [$a],nameofaction
	spop $a
	call [$a],contains
	jmp l864
l862:
	push 0
	jmp l864
l863:
	push 1
l864:
	cmp0
	je l865
	push $10
	spushs
	push $2
	push 1
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setz
	jmp l861
l865:
	push $10
	push $11
	push $12
	push $3
	cthis addbut
l861:
	jmp l849
l848:
	push $5
	spushs
	spop $a
	call [$a],hide
	end method
	method _buildfuncclick
	localstring $1
	pop $1
	new string,_sfunclick
	push $1
	pop _sfunclick
	end method
	method _stdbutclick
	push _sfunclick
	spushs
	cthis getbutname
	spop $d
	cthis [$d]
	end method
	method _buildfuncrel
	localstring $1
	pop $1
	new string,_sfuncrel
	push $1
	pop _sfuncrel
	end method
	method _stdbutrel
	push _sfuncrel
	spushs
	cthis getbutname
	spop $d
	cthis [$d]
	end method
	method _buildfuncmovon
	localstring $1
	pop $1
	new string,_sfunmovon
	push $1
	pop _sfunmovon
	end method
	method _stdbutmovon
	push sfxmon
	push "null"
	cmpjne
	cmp0
	je l867
	push sfxmon
	spushs
	spop $a
	call [$a],play
l867:
	push _sfunmovon
	spushs
	cthis getbutname
	spop $d
	cthis [$d]
	end method
	method _buildfuncmovoff
	localstring $1
	pop $1
	new string,_sfunmovoff
	push $1
	pop _sfunmovoff
	end method
	method _stdbutmovoff
	push _sfunmovoff
	spushs
	cthis getbutname
	spop $d
	cthis [$d]
	end method
	method butsigfun
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $2
	push "null"
	cmpje
	cmp0
	je l869
	ret
l869:
	push $1
	spushs
	push $4
	push $4
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push $4
	spushs
	push $2
	spop $d
	spop $a
	call [$a],[$d]
	push $1
	spushs
	push $3
	push $5
	spop $a
	call [$a],addmethod
	end method
	method sigfunc
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	localint $5
	push 0
	pop $5
l870:
	push $5
	push iilebut
	cmpjl
	cmp0
	je l871
	jmp l873
l872:
	add $5,1
	pop $5
	jmp l870
l873:
	push sbut
	push $5
	pop $b
	popax
	add $a,$b
	push $1
	push $2
	push $3
	push $4
	cthis butsigfun
	jmp l872
l871:
	end method
	method print
	localint $1
	push 0
	pop $1
l874:
	push $1
	push iilebut
	cmpjl
	cmp0
	je l875
	jmp l877
l876:
	add $1,1
	pop $1
	jmp l874
l877:
	push sbut
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getbutname
	call engine,print
	jmp l876
l875:
	end method
	method setrect
	localstring $1
	localint $2
	push 0
	pop $2
l878:
	push $2
	push iilebut
	cmpjl
	cmp0
	je l879
	jmp l881
l880:
	add $2,1
	pop $2
	jmp l878
l881:
	push sbut
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getimg
	pop $1
	push sbut
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	spushs
	spop $a
	call [$a],getpx
	push $1
	spushs
	spop $a
	call [$a],getpy
	push $1
	spushs
	spop $a
	call [$a],getex
	push $1
	spushs
	spop $a
	call [$a],getey
	spop $a
	call [$a],setrect
	jmp l880
l879:
	end method
	method setflags
	localint $1
	localint $2
	pop $2
	pop $1
	localint $3
	push 0
	pop $3
l882:
	push $3
	push iilebut
	cmpjl
	cmp0
	je l883
	jmp l885
l884:
	add $3,1
	pop $3
	jmp l882
l885:
	push sbut
	push $3
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	push $2
	spop $a
	call [$a],setflags
	jmp l884
l883:
	end method
	method sfxonmovon
	localstring $1
	pop $1
	push $1
	pop sfxmon
	end method
	method clickfunc
	localstring $1
	pop $1
	push $1
	push "onclick"
	push "_buildfuncclick"
	push "_stdbutclick"
	cthis sigfunc
	end method
	method relfunc
	localstring $1
	pop $1
	push $1
	push "onrel"
	push "_buildfuncrel"
	push "_stdbutrel"
	cthis sigfunc
	end method
	method movonfunc
	localstring $1
	pop $1
	push $1
	push "onmoveon"
	push "_buildfuncmovon"
	push "_stdbutmovon"
	cthis sigfunc
	end method
	method movofffunc
	localstring $1
	pop $1
	push $1
	push "onmoveoff"
	push "_buildfuncmovoff"
	push "_stdbutmovoff"
	cthis sigfunc
	end method
	method ilebuts
	push iilebut
	ret
	end method
	method ifind
	localstring $1
	pop $1
	push sbut
	push iilebut
	push $1
	push "getbutname"
	clparent clfindfunc,_stdfindfunc2
	ret
	end method
	method sfind
	localstring $1
	pop $1
	localint $2
	push sbut
	push iilebut
	push $1
	push "getbutname"
	clparent clfindfunc,_stdfindfunc2
	pop $2
	push $2
	push 0
	cmpjae
	cmp0
	je l887
	push sbut
	push $2
	pop $b
	popax
	add $a,$b
	jmp l886
l887:
	push "null"
l886:
	ret
	end method
	method _cbutfun
	localstring $1
	localstring $2
	pop $2
	pop $1
	push sbut
	cthis ilebuts
	push $1
	push "getbutname"
	push $2
	clparent clfindfunc,cfindandeval2
	end method
	method _callbutfunc
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l888:
	push $2
	push iilebut
	cmpjl
	cmp0
	je l889
	jmp l891
l890:
	add $2,1
	pop $2
	jmp l888
l891:
	push sbut
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	jmp l890
l889:
	end method
	method _cibutfunc
	localstring $1
	localint $2
	pop $2
	pop $1
	push $2
	push iilebut
	cmpja
	cmp0
	je l893
	push iilebut
	pop $2
l893:
	localint $3
	push 0
	pop $3
l894:
	push $3
	push $2
	cmpjl
	cmp0
	je l895
	jmp l897
l896:
	add $3,1
	pop $3
	jmp l894
l897:
	push sbut
	push $3
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	jmp l896
l895:
	end method
	method ienable
	localint $1
	pop $1
	push "enable"
	push $1
	cthis _cibutfunc
	end method
	method benableall
	cthis resumeall
	cthis enableall
	end method
	method pauseall
	push "pause"
	cthis _callbutfunc
	end method
	method resumeall
	push "resume"
	cthis _callbutfunc
	end method
	method enableall
	push "enable"
	cthis _callbutfunc
	end method
	method disableall
	push "disable"
	cthis _callbutfunc
	end method
	method disabled
	push sbut
	push 0
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],disabled
	end method
	method benable
	localstring $1
	pop $1
	push $1
	cthis resume
	push $1
	cthis enable
	end method
	method disable
	localstring $1
	pop $1
	push $1
	push "disable"
	cthis _cbutfun
	end method
	method enable
	localstring $1
	pop $1
	push $1
	push "enable"
	cthis _cbutfun
	end method
	method pause
	localstring $1
	pop $1
	push $1
	push "pause"
	cthis _cbutfun
	end method
	method resume
	localstring $1
	pop $1
	push $1
	push "resume"
	cthis _cbutfun
	end method
	method resetall
	localint $1
	push 0
	pop $1
l898:
	push $1
	push iilebut
	cmpjl
	cmp0
	je l899
	jmp l901
l900:
	add $1,1
	pop $1
	jmp l898
l901:
	push sbut
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 0
	push 0
	spop $a
	call [$a],setcursorpos
	jmp l900
l899:
	end method
	method setcursorpos
	localint $1
	localint $2
	pop $2
	pop $1
	localint $3
	push 0
	pop $3
l902:
	push $3
	push iilebut
	cmpjl
	cmp0
	je l903
	jmp l905
l904:
	add $3,1
	pop $3
	jmp l902
l905:
	push sbut
	push $3
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	push $2
	spop $a
	call [$a],setcursorpos
	jmp l904
l903:
	end method
	method getimg
	localstring $1
	pop $1
	localstring $2
	push $1
	cthis sfind
	pop $2
	push $2
	push "null"
	cmpjne
	cmp0
	je l907
	push $2
	spushs
	spop $a
	call [$a],getimg
	jmp l906
l907:
	push "null"
l906:
	ret
	end method
	method callimgfun
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	cthis getimg
	spushs
	push $2
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	end method
	method newmouse
	localstring $1
	localstring $2
	pop $2
	pop $1
	localstring $3
	push $1
	cthis sfind
	pop $3
	push $3
	push "null"
	cmpjne
	cmp0
	je l909
	push $3
	spushs
	push $2
	spop $a
	call [$a],setmouse
l909:
	end method
	method addbut
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	localstring $5
	push sbut
	push iilebut
	pop $b
	popax
	add $a,$b
	pop $5
	push $5
	push $1
	push $2
	push $3
	push $4
	clparent newvars,newbutan
	push $5
	spushs
	push "getbutname"
	push "cgetbutname"
	spop $a
	call [$a],addmethod
	push $5
	spushs
	push $1
	spushs
	spop $a
	call [$a],actionname
	spop $a
	call [$a],_cbuildbutname
	add iilebut,1
	pop iilebut
	end method
	method _addfunc
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push "null"
	cmpje
	cmp0
	je l911
	ret
l911:
	push $1
	push $2
	push "onclick"
	push "_buildfuncclick"
	push "_stdbutclick"
	cthis butsigfun
	push $1
	push $3
	push "onrel"
	push "_buildfuncrel"
	push "_stdbutrel"
	cthis butsigfun
	push $1
	push $4
	push "onmoveon"
	push "_buildfuncmovon"
	push "_stdbutmovon"
	cthis butsigfun
	push $1
	push $5
	push "onmoveoff"
	push "_buildfuncmovoff"
	push "_stdbutmovoff"
	cthis butsigfun
	end method
	method addfuncto
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	cthis sfind
	push $2
	push $3
	push $4
	push $5
	cthis _addfunc
	end method
	method addfunctolast
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push sbut
	push iilebut
	push 1
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	add $a,$b
	push $1
	push $2
	push $3
	push $4
	cthis _addfunc
	end method
	method _transmet
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push "_sob"
	push $4
	pop $b
	popax
	add $a,$b
	spushs
	spop $e
	new string,[$e]
	push $1
	pop [$e]
	push "_sf"
	push $4
	pop $b
	popax
	add $a,$b
	spushs
	spop $e
	new string,[$e]
	push $2
	pop [$e]
	push $3
	spushs
	push "_trf"
	push $4
	pop $b
	popax
	add $a,$b
	spop $d
	cthis [$d]
	end method
	method transclickfunc
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push "clickfunc"
	push "cl"
	cthis _transmet
	end method
	method transrelfunc
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push "relfunc"
	push "rl"
	cthis _transmet
	end method
	method transmovonfunc
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push "movonfunc"
	push "mn"
	cthis _transmet
	end method
	method transmovofffunc
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push "movofffunc"
	push "mf"
	cthis _transmet
	end method
	method _trfcl
	localstring $1
	pop $1
	push _sobcl
	spushs
	push _sfcl
	spushs
	push $1
	spop $d
	spop $a
	call [$a],[$d]
	end method
	method _trfrl
	localstring $1
	pop $1
	push _sobrl
	spushs
	push _sfrl
	spushs
	push $1
	spop $d
	spop $a
	call [$a],[$d]
	end method
	method _trfmn
	localstring $1
	pop $1
	push sfxmon
	push "null"
	cmpjne
	cmp0
	je l913
	push sfxmon
	spushs
	spop $a
	call [$a],play
l913:
	push _sobmn
	spushs
	push _sfmn
	spushs
	push $1
	spop $d
	spop $a
	call [$a],[$d]
	end method
	method _trfmf
	localstring $1
	pop $1
	push _sobmf
	spushs
	push _sfmf
	spushs
	push $1
	spop $d
	spop $a
	call [$a],[$d]
	end method
	end class

	class classsimplebutton
	method init
	new string,simgob
	push "null"
	pop simgob
	new gmimgvec,grbut
	end method
	method stdbuild
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	cthis getgraphpath
	push $1
	pop $b
	popax
	add $a,$b
	push $2
	push 0
	push 0
	push $3
	push 0
	cthis build
	end method
	method getimgfunc
	localstring $1
	pop $1
	push simgob
	push "null"
	cmpje
	cmp0
	je l915
	push 0
	jmp l914
l915:
	push simgob
	spushs
	push $1
	spushs
	spop $d
	spop $a
	call [$a],[$d]
l914:
	end method
	method setbutpos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call grbut,setpos
	end method
	method build
	localstring $1
	localstring $2
	localint $3
	localint $4
	localint $5
	localint $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	new button,but1
	cthis getname
	call but1,classsimplebutton0
	push "onclick"
	push "classsimplebutton1"
	call but1,addmethod
	push "onrel"
	push "classsimplebutton2"
	call but1,addmethod
	push "onmoveon"
	push "classsimplebutton3"
	call but1,addmethod
	push "onmoveoff"
	push "classsimplebutton4"
	call but1,addmethod
	push ".pyz"
	call $1,contains
	cmp0
	je l917
	new anima,anbut0
	push $1
	call anbut0,load
	push $3
	push $4
	call anbut0,setpos
	push $5
	call anbut0,setz
	push $6
	push 0
	call anbut0,setframe
	push "anbut0"
	pop simgob
	push simgob
	call grbut,add
	localstring $7
	push "anbut0"
	pop $7
	localstring $8
	push "null"
	pop $8
	localstring $9
	push "null"
	pop $9
	localint $10
	push $6
	call anbut0,nofframes
	pop $10
	push $10
	push 1
	cmpja
	cmp0
	je l919
	new anima,anbut1
	push "anbut0"
	call anbut1,copy
	push $6
	push 1
	call anbut1,setframe
	push "anbut1"
	pop $8
	push $8
	call grbut,add
l919:
	push $10
	push 2
	cmpja
	cmp0
	je l921
	new anima,anbut2
	push "anbut0"
	call anbut2,copy
	push $6
	push 2
	call anbut2,setframe
	push "anbut2"
	pop $8
	push $8
	call grbut,add
l921:
	push $7
	push $8
	push $9
	call but1,setan
	jmp l916
l917:
	new img,imgbut
	push "imgbut"
	pop simgob
	push simgob
	call grbut,add
	push $1
	call imgbut,load
	push $3
	push $4
	call imgbut,setpos
	push $5
	call imgbut,setz
	push "imgbut"
	push "null"
	push "null"
	call but1,set
l916:
	push $2
	call but1,setmouse
	end method
	method classsimplebutton0
	localstring $1
	pop $1
	new string,sbut
	push $1
	pop sbut
	end method
	method classsimplebutton1
	push sbut
	push "_CLICK"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method classsimplebutton2
	push sbut
	push "_REL"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method classsimplebutton3
	push sbut
	push "_MOVEON"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method classsimplebutton4
	push sbut
	push "_MOVEOFF"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	end class

	class classmask
	parent classbutton
	method init
	clparent classbutton,init
	end method
	method buildmask
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push 0
	push $2
	cthis build
	localint $3
	cthis ilebuts
	pop $3
	localint $4
	push 0
	pop $4
l922:
	push $4
	push $3
	cmpjl
	cmp0
	je l923
	jmp l925
l924:
	add $4,1
	pop $4
	jmp l922
l925:
	push sbut
	push $4
	pop $b
	popax
	add $a,$b
	spushs
	push 0
	push 0
	spop $a
	call [$a],setflags
	push sbut
	push $4
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],hide
	jmp l924
l923:
	end method
	method buildmaskfunc
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	cthis buildmask
	push $3
	cthis clickfunc
	end method
	method addmask
	localstring $1
	localstring $2
	localstring $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	localstring $5
	push sbut
	push iilebut
	pop $b
	popax
	add $a,$b
	pop $5
	push $5
	push $1
	push "null"
	push "null"
	push $3
	clparent newvars,newbutan
	push $5
	spushs
	push "getbutname"
	push "cgetbutname"
	spop $a
	call [$a],addmethod
	push $2
	push "null"
	cmpje
	cmp0
	je l927
	push $5
	spushs
	push $1
	spushs
	spop $a
	call [$a],actionname
	spop $a
	call [$a],_cbuildbutname
	jmp l926
l927:
	push $5
	spushs
	push $2
	spop $a
	call [$a],_cbuildbutname
l926:
	push $4
	cmp0
	je l929
	push $5
	spushs
	push 0
	push 0
	spop $a
	call [$a],setflags
	push $5
	spushs
	spop $a
	call [$a],hide
l929:
	add iilebut,1
	pop iilebut
	end method
	method addadvmask
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push 0
	cthis addmask
	push $4
	push "null"
	push "null"
	push "null"
	cthis addfunctolast
	end method
	end class

	method _stdanloop
	push 1
	popax
	sub 0,$a
	cthis play
	end method
	method _stdanhide
	cthis hide
	end method
	method _stdsndloop
	cthis play
	end method
	method __std_finish
	cthis getname
	push "_FINISH"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method looponfinish
	localstring $1
	pop $1
	push $1
	spushs
	push "onfinish"
	push "_stdanloop"
	spop $a
	call [$a],addmethod
	end method
	method hideonfinish
	localstring $1
	pop $1
	push $1
	spushs
	push "onfinish"
	push "_stdanhide"
	spop $a
	call [$a],addmethod
	end method
	method strsube
	localint $1
	pop $1
	push 0
	cthis length
	push $1
	pop $b
	popax
	sub $a,$b
	cthis getb
	end method
	method strsubb
	localint $1
	pop $1
	push $1
	cthis length
	push $1
	pop $b
	popax
	sub $a,$b
	cthis getb
	end method
	method strsubbs
	localstring $1
	pop $1
	call $1,length
	cthis strsubb
	end method
	method strsubes
	localstring $1
	pop $1
	call $1,length
	cthis strsube
	end method
	method strgetto
	localstring $1
	pop $1
	localdef $2
	push $1
	cthis find
	pop $2
	push $2
	push 0
	cmpjl
	cmp0
	je l931
	cthis get
	jmp l930
l931:
	push 0
	push $2
	cthis getb
l930:
	end method
	method strgeteto
	localstring $1
	pop $1
	localdef $2
	push $1
	cthis rfind
	pop $2
	push $2
	push 0
	cmpjl
	cmp0
	je l933
	cthis get
	jmp l932
l933:
	push $2
	push 1
	pop $b
	popax
	add $a,$b
	cthis length
	cthis getb
l932:
	end method
	method streq
	localstring $1
	pop $1
	cthis get
	push 0
	cthis length
	call $1,getb
	cmpje
	end method
	method strgetfromto
	localint $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	cthis find
	cthis getb
	end method
	method strgetfrom
	localstring $1
	pop $1
	push $1
	cthis find
	call $1,length
	pop $b
	popax
	add $a,$b
	cthis length
	cthis getb
	end method
	method strremove
	localstring $1
	pop $1
	push $1
	cthis strgetto
	push $1
	cthis strgetfrom
	pop $b
	popax
	add $a,$b
	cthis set
	end method
	method strisbetween
	localint $1
	localint $2
	pop $2
	pop $1
	localint $3
	localint $4
	push 0
	pop $4
l934:
	push $4
	cthis length
	cmpjl
	cmp0
	je l935
	jmp l937
l936:
	add $4,1
	pop $4
	jmp l934
l937:
	push $4
	cthis getbyte
	pop $3
	push $3
	push $1
	cmpjl
	cmp0
	jne l940
	push $3
	push $2
	cmpja
	jmp l941
l939:
	push 0
	jmp l941
l940:
	push 1
l941:
	cmp0
	je l942
	push 0
	ret
l942:
	jmp l936
l935:
	push 1
	end method
	method strisint
	push BYTE0
	push BYTE9
	cthis strisbetween
	end method
	method strisbin
	push BYTE0
	push BYTE0
	push 1
	pop $b
	popax
	add $a,$b
	cthis strisbetween
	end method
	method strisalpha
	push BYTEa
	push BYTEz
	cthis strisbetween
	end method
	method streach
	localstring $1
	pop $1
	localstring $2
	localint $3
	push 0
	pop $3
l943:
	push $3
	cthis length
	cmpjl
	cmp0
	je l944
	jmp l946
l945:
	add $3,1
	pop $3
	jmp l943
l946:
	push $3
	push 1
	cthis getb
	pop $2
	push $2
	spushs
	push $1
	spushs
	push $3
	spop $d
	spop $a
	call [$a],[$d]
	jmp l945
l944:
	end method
	method strdotpos
	localint $1
	pop $1
	push "."
	cthis strgetto
	push "."
	pop $b
	popax
	add $a,$b
	push "."
	cthis strgetfrom
	spushs
	push 0
	push $1
	spop $h
	call $h,getb
	pop $b
	popax
	add $a,$b
	end method
	method swap
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	popax
	mov $a,[$a]
	psax
	push $1
	spushs
	push $2
	popax
	mov $a,[$a]
	psax
	spop $b
	popax
	mov [$b],$a
	push $2
	spushs
	spop $b
	popax
	mov [$b],$a
	end method
	method stats
	localint $1
	pop $1
	push $1
	push 0
	cmpjle
	cmp0
	je l948
	push 0
	jmp l947
l948:
	push 100
	spushs
	spop $h
	call $h,rand
	push $1
	cmpjle
l947:
	end method
	method between
	localdef $1
	localdef $2
	localdef $3
	pop $3
	pop $2
	pop $1
	push $2
	push $1
	cmpjl
	cmp0
	je l950
	push $1
	jmp l949
l950:
	push $2
	push $3
	cmpja
	cmp0
	je l952
	push $3
	jmp l951
l952:
	push $2
l951:
l949:
	end method
	method max
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	cmpja
	cmp0
	je l954
	push $1
	jmp l953
l954:
	push $2
l953:
	end method
	method min
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	cmpjl
	cmp0
	je l956
	push $1
	jmp l955
l956:
	push $2
l955:
	end method
	method movoffsetr
	push igmoffsetx
	push 0
	cthis move
	end method
	method movoffsetl
	push igmoffsetx
	popax
	sub 0,$a
	push 0
	cthis move
	end method
	method imgprint
	cthis getname
	push ": x="
	pop $b
	popax
	add $a,$b
	cthis getpx
	pop $b
	popax
	add $a,$b
	push ", y="
	pop $b
	popax
	add $a,$b
	cthis getpy
	pop $b
	popax
	add $a,$b
	push ", w="
	pop $b
	popax
	add $a,$b
	cthis getw
	pop $b
	popax
	add $a,$b
	push ",h="
	pop $b
	popax
	add $a,$b
	cthis geth
	pop $b
	popax
	add $a,$b
	push ",ex="
	pop $b
	popax
	add $a,$b
	cthis getex
	pop $b
	popax
	add $a,$b
	push ",ey="
	pop $b
	popax
	add $a,$b
	cthis getey
	pop $b
	popax
	add $a,$b
	push ", z="
	pop $b
	popax
	add $a,$b
	cthis getz
	pop $b
	popax
	add $a,$b
	spushs
	spop $h
	call $h,print
	end method
	method imgborders
	localint $1
	localint $2
	localint $3
	localint $4
	localint $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	push $5
	push "1111"
	cthis imgborderss
	end method
	method imgborderss
	localint $1
	localint $2
	localint $3
	localint $4
	localint $5
	localstring $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	new img,_img_bor
	cthis getw
	push $1
	push $2
	push $3
	push $4
	push $5
	call _img_bor,create
	cthis getpx
	cthis getpy
	call _img_bor,setpos
	push 3
	push 1
	call $6,getb
	push "1"
	cmpje
	cmp0
	je l958
	push "_img_bor"
	cthis blit
l958:
	push 0
	cthis geth
	push $1
	pop $b
	popax
	sub $a,$b
	call _img_bor,move
	push 1
	push 1
	call $6,getb
	push "1"
	cmpje
	cmp0
	je l960
	push "_img_bor"
	cthis blit
l960:
	push $1
	cthis geth
	push $2
	push $3
	push $4
	push $5
	call _img_bor,create
	cthis getpx
	cthis getpy
	call _img_bor,setpos
	push 0
	push 1
	call $6,getb
	push "1"
	cmpje
	cmp0
	je l962
	push "_img_bor"
	cthis blit
l962:
	cthis getw
	push $1
	pop $b
	popax
	sub $a,$b
	push 0
	call _img_bor,move
	push 2
	push 1
	call $6,getb
	push "1"
	cmpje
	cmp0
	je l964
	push "_img_bor"
	cthis blit
l964:
	delete _img_bor
	end method
	method imgroundborder
	localint $1
	localint $2
	localint $3
	localint $4
	localint $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	push $5
	cthis imgborders
	cthis imgerasecorners
	end method
	method imgerasecorners
	localdef $1
	cthis getpx
	pop $1
	localdef $2
	cthis getpy
	pop $2
	push $1
	push $2
	cthis transparent
	cthis putrgba
	cthis getex
	push 1
	pop $b
	popax
	sub $a,$b
	push $2
	cthis transparent
	cthis putrgba
	cthis getex
	push 1
	pop $b
	popax
	sub $a,$b
	cthis getey
	push 1
	pop $b
	popax
	sub $a,$b
	cthis transparent
	cthis putrgba
	push $1
	cthis getey
	push 1
	pop $b
	popax
	sub $a,$b
	cthis transparent
	cthis putrgba
	end method
	method imgdrawline
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	localreal $6
	localreal $7
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push "blit"
	push $1
	push $2
	push $3
	push $4
	push $5
	push $6
	push $7
	cthis imgfuncline
	end method
	method imgeraseline
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	localreal $6
	localreal $7
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push "erase"
	push $1
	push $2
	push $3
	push $4
	push $5
	push $6
	push $7
	cthis imgfuncline
	end method
	method imgputoncenter
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getcx
	cthis getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push $1
	spushs
	spop $a
	call [$a],getcy
	cthis geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	cthis setpos
	end method
	method imgfuncline
	localstring $1
	localstring $2
	localint $3
	localint $4
	localint $5
	localint $6
	localreal $7
	localreal $8
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	localdef $9
	push $5
	push $3
	pop $b
	popax
	sub $a,$b
	pop $9
	localdef $10
	push $6
	push $4
	pop $b
	popax
	sub $a,$b
	pop $10
	localreal $11
	push $9
	push 0
	cmpje
	cmp0
	je l966
	push $10
	push 0
	cmpjl
	cmp0
	je l968
	push $8
	push $4
	pop $b
	popax
	add $a,$b
	pop $11
l969:
	push $11
	push $6
	cmpjae
	cmp0
	je l970
	push $2
	spushs
	push $3
	push $11
	spop $a
	call [$a],setpos
	push $1
	spushs
	push $2
	spop $d
	cthis [$d]
	push $7
	popax
	sub $11,$a
	pop $11
	jmp l969
l970:
	push $6
	push $11
	pop $b
	popax
	sub $a,$b
	jmp l967
l968:
	push $10
	push 0
	cmpja
	cmp0
	je l972
	push $8
	push $4
	pop $b
	popax
	add $a,$b
	pop $11
l973:
	push $11
	push $6
	cmpjle
	cmp0
	je l974
	push $2
	spushs
	push $3
	push $11
	spop $a
	call [$a],setpos
	push $1
	spushs
	push $2
	spop $d
	cthis [$d]
	push $7
	popax
	add $11,$a
	pop $11
	jmp l973
l974:
	push $11
	push $6
	pop $b
	popax
	sub $a,$b
	jmp l971
l972:
	push $8
l971:
l967:
	jmp l965
l966:
	push $9
	push $10
	call $8,length
	pop $11
	localreal $12
l975:
	push $8
	push $11
	cmpjle
	cmp0
	je l976
	push 1.0
	push $11
	push $8
	pop $b
	popax
	sub $a,$b
	push $11
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	pop $12
	push $2
	spushs
	push $12
	push $9
	pop $b
	popax
	mul $a,$b
	push $3
	pop $b
	popax
	add $a,$b
	push $12
	push $10
	pop $b
	popax
	mul $a,$b
	push $4
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	push $1
	spushs
	push $2
	spop $d
	cthis [$d]
	push $7
	popax
	add $8,$a
	pop $8
	jmp l975
l976:
	push $8
	push $11
	pop $b
	popax
	sub $a,$b
l965:
	end method
	method anresizemets
	cthis getname
	clparent anima_pack,resizemethods
	end method
	method anfirstnontr
	cthis getname
	cthis getpx
	cthis getpy
	push 1
	push 0
	clparent classansearcher,_findnotr
	end method
	method anloopfin
	push "onfinish"
	push "_stdanloop"
	cthis addmethod
	end method
	method anloopplay
	localint $1
	pop $1
	cthis anloopfin
	push $1
	cthis play
	end method
	method anloopsplay
	localstring $1
	pop $1
	cthis anloopfin
	push $1
	cthis play
	end method
	method anhidefin
	push "onfinish"
	push "_stdanhide"
	cthis addmethod
	end method
	method anputgr
	cthis getey
	cthis setz
	end method
	method anputy
	localint $1
	pop $1
	push 0
	push $1
	cthis geth
	pop $b
	popax
	sub $a,$b
	cthis getpy
	pop $b
	popax
	sub $a,$b
	cthis move
	end method
	method anputx
	localint $1
	pop $1
	push 0
	push $1
	cthis geth
	pop $b
	popax
	sub $a,$b
	cthis getpy
	pop $b
	popax
	sub $a,$b
	cthis move
	end method
	method ansetposgr
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	cthis setpos
	cthis anputgr
	end method
	method anplayz
	localint $1
	localint $2
	pop $2
	pop $1
	push $2
	cthis setz
	push $1
	cthis play
	end method
	method anplaygr
	localint $1
	pop $1
	push $1
	cthis play
	cthis anputgr
	end method
	method anplayzpos
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $3
	push $4
	cthis setpos
	push $1
	push $2
	cthis anplayz
	end method
	method anplaypos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	cthis setpos
	push 1
	popax
	sub 0,$a
	cthis play
	end method
	method anplayposgr
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	cthis ansetposgr
	push 1
	popax
	sub 0,$a
	cthis play
	end method
	method anplaypos2
	localint $1
	localint $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	cthis setpos
	push $3
	cthis play
	end method
	method anplaypos3
	localint $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	cthis setpos
	push $3
	cthis play
	end method
	method anhide
	push 0
	cthis stop
	cthis hide
	end method
	method andownpos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	cthis geth
	pop $b
	popax
	sub $a,$b
	cthis setpos
	end method
	method ansetbpos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	cthis lodx
	pop $b
	popax
	sub $a,$b
	push $2
	cthis lody
	pop $b
	popax
	sub $a,$b
	cthis setpos
	end method
	method ansetcpos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	cthis getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push $2
	cthis geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	cthis ansetbpos
	end method
	method ancenterscreen
	push igmappw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push igmapph
	push 2
	pop $b
	popax
	div $a,$b
	psax
	cthis ansetcpos
	end method
	method imgfit
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	cthis getpx
	push $1
	cmpjl
	cmp0
	je l978
	push $1
	cthis getpx
	pop $b
	popax
	sub $a,$b
	push 0
	cthis move
l978:
	cthis getpy
	push $2
	cmpjl
	cmp0
	je l980
	push 0
	push $2
	cthis getpy
	pop $b
	popax
	sub $a,$b
	cthis move
l980:
	cthis getex
	push $3
	cmpja
	cmp0
	je l982
	push $3
	cthis getex
	pop $b
	popax
	sub $a,$b
	push 0
	cthis move
l982:
	cthis getey
	push $4
	cmpja
	cmp0
	je l984
	push 0
	push $4
	cthis getey
	pop $b
	popax
	sub $a,$b
	cthis move
l984:
	end method
	method imgfitscreen
	push igmoffsetx
	push igmoffsety
	push iResX
	push igmoffsetx
	pop $b
	popax
	add $a,$b
	push iResY
	push igmoffsety
	pop $b
	popax
	add $a,$b
	cthis imgfit
	end method
	method ansetframe
	localint $1
	pop $1
	push 1
	popax
	sub 0,$a
	cthis actionnr
	push $1
	cthis setframe
	end method
	method ansetsframe
	localdef $1
	localstring $2
	pop $2
	pop $1
	push $1
	push 0
	cthis setframe
	localint $3
	push 0
	pop $3
l985:
	push $3
	push 1
	popax
	sub 0,$a
	cthis nofframes
	cmpjl
	cmp0
	je l986
	cthis framename
	push $2
	cmpjne
	jmp l988
l986:
	push 0
	jmp l988
l987:
	push 1
l988:
	cmp0
	je l989
	add $3,1
	pop $3
	push 1
	popax
	sub 0,$a
	push $3
	cthis setframe
	jmp l985
l989:
	end method
	method ansetlastframe
	localdef $1
	pop $1
	push $1
	push $1
	cthis nofframes
	push 1
	pop $b
	popax
	sub $a,$b
	cthis setframe
	end method
	method anonscreen
	cthis getcx
	cthis getcy
	cthis getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	cthis geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	call clsurf,inscreen
	end method
	method objplayfin
	localstring $1
	pop $1
	push "onfinish"
	push $1
	cthis addmethod
	cthis play
	end method
	method objloop
	push "onfinish"
	push "_stdsndloop"
	cthis addmethod
	end method
	method objplayloop
	cthis objloop
	cthis play
	end method
	method anplayfin
	localdef $1
	localstring $2
	pop $2
	pop $1
	push "onfinish"
	push $2
	cthis addmethod
	push $1
	cthis play
	end method
	method anplaysmoothfin
	localdef $1
	localstring $2
	pop $2
	pop $1
	push "onfinish"
	push $2
	cthis addmethod
	push $1
	cthis playsmooth
	end method
	method anplayif
	localdef $1
	pop $1
	push $1
	cthis isplaying
	push 0
	cmpje
	cmp0
	je l991
	push $1
	cthis play
l991:
	end method
	method anytoz
	cthis getposy
	cthis setz
	end method
	method anposz
	localint $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	cthis setpos
	push $3
	cthis setz
	end method
	method annextaction
	localstring $1
	pop $1
	push $1
	cthis actionnr
	push 1
	pop $b
	popax
	add $a,$b
	cthis nofactions
	pop $b
	popax
	div $a,$b
	push $d
	cthis nameofaction
	end method
	method annextact
	push 1
	popax
	sub 0,$a
	cthis actionnr
	push 1
	pop $b
	popax
	add $a,$b
	cthis nofactions
	pop $b
	popax
	div $a,$b
	push $d
	end method
	method ansetnextact
	push 1
	popax
	sub 0,$a
	cthis actionnr
	push 1
	pop $b
	popax
	add $a,$b
	cthis nofactions
	pop $b
	popax
	div $a,$b
	push $d
	push 0
	cthis setframe
	end method
	method ansetnextfr
	push 1
	popax
	sub 0,$a
	cthis framenr
	push 1
	pop $b
	popax
	add $a,$b
	push 1
	popax
	sub 0,$a
	cthis nofframes
	pop $b
	popax
	div $a,$b
	push $d
	cthis setframe
	end method
	method ansetrandfr
	push 1
	popax
	sub 0,$a
	push 1
	popax
	sub 0,$a
	cthis nofframes
	spushs
	spop $h
	call $h,rand
	cthis setframe
	end method
	method anhasaction
	localstring $1
	pop $1
	push $1
	cthis actionnr
	cthis nofactions
	cmpjne
	end method
	method anaddfilter
	cthis getname
	clparent classanfilter,build
	end method
	method anaddfx
	cthis getname
	clparent AnimaFx,build
	end method
	method anputc
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	cthis ansetbpos
	push $3
	push $1
	pop $b
	popax
	sub $a,$b
	cthis getw
	pop $b
	popax
	sub $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push $4
	push $2
	pop $b
	popax
	sub $a,$b
	cthis geth
	pop $b
	popax
	sub $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	cthis move
	end method
	method aninlod
	localint $1
	pop $1
	cthis getpx
	cthis lodx
	pop $b
	popax
	sub $a,$b
	cthis getpy
	cthis lody
	pop $b
	popax
	sub $a,$b
	call $1,length
	push $1
	cmpjle
	end method
	method angetcpos
	cthis getcx
	cthis getcy
	ret
	end method
	method anactnr
	push 1
	popax
	sub 0,$a
	cthis actionnr
	end method
	method angetcrgba
	cthis getcx
	cthis getcy
	cthis getrgba
	end method
	method anisin
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	localint $5
	push 0
	pop $5
l992:
	push $5
	cthis nofactions
	cmpjl
	cmp0
	je l993
	jmp l995
l994:
	add $5,1
	pop $5
	jmp l992
l995:
	push $5
	push 0
	cthis setframe
	push $1
	push $2
	push $3
	push $4
	cthis isin
	cmp0
	je l997
	push $5
	ret
l997:
	jmp l994
l993:
	push 1
	popax
	sub 0,$a
	end method
	method anreload
	localstring $1
	pop $1
	localint $2
	push 1
	popax
	sub 0,$a
	cthis actionnr
	pop $2
	localint $3
	cthis framenr
	pop $3
	localint $4
	push 1
	popax
	sub 0,$a
	cthis isplaying
	push 0
	cmpjne
	pop $4
	localint $5
	localint $6
	cthis getpos
	pop $6
	pop $5
	localint $7
	cthis getz
	pop $7
	push $1
	cthis getpath
	cthis load
	push $5
	push $6
	cthis setpos
	push $7
	cthis setz
	push $2
	cthis nofactions
	cmpjl
	cmp0
	je l999
	push $4
	cmp0
	je l1001
	push $2
	cthis play
l1001:
	push $2
	push $3
	cthis setframe
	jmp l998
l999:
	push 0
	push 0
	cthis setframe
l998:
	end method
	method anclipob
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getpx
	push $1
	spushs
	spop $a
	call [$a],getpy
	push $1
	spushs
	spop $a
	call [$a],getex
	push $1
	spushs
	spop $a
	call [$a],getey
	cthis clip
	end method
	method anclipscreen
	push 0
	push 0
	push igmappw
	push igmapph
	cthis clip
	end method
	method ancopyan
	localstring $1
	pop $1
	push $1
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	push $1
	spushs
	spop $a
	call [$a],framenr
	cthis setframe
	push $1
	spushs
	spop $a
	call [$a],isvisible
	cmp0
	je l1003
	cthis show
	jmp l1002
l1003:
	cthis hide
l1002:
	push $1
	spushs
	spop $a
	call [$a],getpos
	cthis setpos
	end method
	method anconstmove
	localint $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push A
	push "mvx"
	push $2
	push "mvy"
	push $3
	cthis vars2
	push $1
	cthis setdelay
	push 1
	popax
	sub 0,$a
	push "global6"
	cthis anplayfin
	end method
	method global6
	push 1
	popax
	sub 0,$a
	cthis play
	push mvx
	push mvy
	cthis move
	end method
	method fxplayifgr
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
l1004:
	push $1
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],isplaying
	cmp0
	je l1005
	push $2
	push $3
	cmpjl
	jmp l1007
l1005:
	push 0
	jmp l1007
l1006:
	push 1
l1007:
	cmp0
	je l1008
	add $2,1
	pop $2
	jmp l1004
l1008:
	push $1
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],playif
	end method
	method scmove
	localint $1
	localint $2
	pop $2
	pop $1
	push rgmscalex
	push $1
	pop $b
	popax
	mul $a,$b
	push rgmscaley
	push $2
	pop $b
	popax
	mul $a,$b
	cthis move
	end method
	method scpos
	localint $1
	localint $2
	pop $2
	pop $1
	push rgmscalex
	push $1
	pop $b
	popax
	mul $a,$b
	push rgmscaley
	push $2
	pop $b
	popax
	mul $a,$b
	cthis setpos
	end method
	method igetsc
	push rgmscalex
	cthis get
	pop $b
	popax
	mul $a,$b
	push 0.5
	pop $b
	popax
	add $a,$b
	spushs
	spop $h
	call $h,to_i
	end method
	method txtset
	localstring $1
	pop $1
	push $1
	cthis set
	cthis create
	end method
	method txtsetcol
	localstring $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	cthis set
	push $2
	push $3
	push $4
	cthis createtxt
	end method
	method txtshadow
	localint $1
	localstring $2
	pop $2
	pop $1
	push "txts"
	cthis hasvar
	neg
	cmp0
	je l1010
	new text,txts
	push $2
	call txts,setfont
l1010:
	cthis get
	call txts,set
	cthis getpx
	push $1
	pop $b
	popax
	add $a,$b
	cthis getpy
	push $1
	pop $b
	popax
	add $a,$b
	call txts,setpos
	cthis getz
	push 1
	pop $b
	popax
	sub $a,$b
	call txts,setz
	call txts,show
	push 0
	push 0
	push 0
	call txts,createtxt
	end method
	method txthides
	cthis hide
	push "txts"
	cthis hasvar
	cmp0
	je l1012
	call txts,hide
l1012:
	end method
	method txtisin
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	cthis getpx
	cmpjae
	cmp0
	je l1013
	push $1
	cthis getpx
	cthis getw
	pop $b
	popax
	add $a,$b
	cmpjl
	cmp0
	je l1013
	push $2
	cthis getpy
	cmpjae
	cmp0
	je l1013
	push $2
	cthis getpy
	cthis geth
	pop $b
	popax
	add $a,$b
	cmpjle
	jmp l1015
l1013:
	push 0
	jmp l1015
l1014:
	push 1
l1015:
	end method
	method txtcenter
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getcx
	cthis getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push $1
	spushs
	spop $a
	call [$a],getcy
	cthis geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	cthis setpos
	end method
	method txtright
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getex
	cthis getw
	pop $b
	popax
	sub $a,$b
	push $1
	spushs
	spop $a
	call [$a],getcy
	cthis geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	cthis setpos
	end method
	method txtcenterscreen
	push igmappw
	cthis getw
	pop $b
	popax
	sub $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push igmapph
	cthis geth
	pop $b
	popax
	sub $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	cthis setpos
	end method
	method imgfittxt
	localstring $1
	localstring $2
	localstring $3
	localint $4
	localint $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $5
	cmp0
	je l1017
	push $2
	spushs
	spop $a
	call [$a],getw
	push $2
	spushs
	spop $a
	call [$a],geth
	push 2
	push $4
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	cthis transparent
	cthis create
	push $2
	spushs
	spop $a
	call [$a],getpx
	push $2
	spushs
	spop $a
	call [$a],getpy
	cthis setpos
l1017:
	new vector,_vtmplin
	push "string"
	call _vtmplin,type
	push $1
	push " "
	call _vtmplin,vecbuildfromstring
	localstring $6
	push ""
	pop $6
	localstring $7
	localint $8
	localint $9
	localint $10
	localint $11
	localint $12
	push $2
	spushs
	spop $a
	call [$a],getpy
	pop $12
	push $2
	push $2
	spushs
	spop $a
	call [$a],getpx
	push $12
	push 1
	push 0
	clparent classansearcher,_findnotr
	pop $9
	pop $8
	push $2
	push $2
	spushs
	spop $a
	call [$a],getex
	push 1
	pop $b
	popax
	sub $a,$b
	push $12
	push 1
	popax
	sub 0,$a
	push 0
	clparent classansearcher,_findnotr
	pop $11
	pop $10
	localint $13
	push 0
	pop $13
l1018:
	push $13
	call _vtmplin,size
	cmpjl
	cmp0
	je l1019
	jmp l1021
l1020:
	add $13,1
	pop $13
	jmp l1018
l1021:
	push $6
	pop $7
	push $13
	call _vtmplin,get
	push " "
	pop $b
	popax
	add $a,$b
	popax
	add $6,$a
	pop $6
	push $3
	spushs
	push $6
	spop $a
	call [$a],txtset
	push $3
	spushs
	push $8
	push $12
	spop $a
	call [$a],setpos
	push $3
	spushs
	spop $a
	call [$a],getpx
	push $3
	spushs
	spop $a
	call [$a],getw
	pop $b
	popax
	add $a,$b
	push $10
	cmpja
	cmp0
	je l1023
	push $7
	push ""
	cmpjne
	cmp0
	je l1025
	push $3
	spushs
	push $7
	spop $a
	call [$a],txtset
	push $13
	call _vtmplin,get
	push " "
	pop $b
	popax
	add $a,$b
	pop $6
	push $6
	pop $7
	jmp l1024
l1025:
	push ""
	pop $6
	push ""
	pop $7
l1024:
	push $3
	cthis blit
	push $4
	popax
	add $12,$a
	pop $12
	push $12
	push $2
	spushs
	spop $a
	call [$a],getey
	cmpjl
	cmp0
	je l1027
	push $2
	push $2
	spushs
	spop $a
	call [$a],getpx
	push $12
	push 1
	push 0
	clparent classansearcher,_findnotr
	pop $9
	pop $8
	push $2
	push $2
	spushs
	spop $a
	call [$a],getex
	push 1
	pop $b
	popax
	sub $a,$b
	push $12
	push 1
	popax
	sub 0,$a
	push 0
	clparent classansearcher,_findnotr
	pop $11
	pop $10
l1027:
l1023:
	jmp l1020
l1019:
	push $6
	push ""
	cmpjne
	cmp0
	je l1029
	push $3
	spushs
	push $6
	spop $a
	call [$a],txtset
	push $3
	spushs
	push $8
	push $12
	spop $a
	call [$a],setpos
	push $3
	cthis blit
l1029:
	delete _vtmplin
	end method
	method vecinc
	localint $1
	pop $1
	push $1
	push $1
	cthis get
	push 1
	pop $b
	popax
	add $a,$b
	cthis set
	end method
	method vecdec
	localint $1
	pop $1
	push $1
	push $1
	cthis get
	push 1
	pop $b
	popax
	sub $a,$b
	cthis set
	end method
	method vecnewint
	localint $1
	pop $1
	cthis free
	push $1
	push 0
	cmpja
	cmp0
	je l1031
	localint $2
	push 0
	pop $2
l1032:
	push $2
	push $1
	cmpjl
	cmp0
	je l1033
	jmp l1035
l1034:
	add $2,1
	pop $2
	jmp l1032
l1035:
	push $2
	cthis add
	jmp l1034
l1033:
l1031:
	end method
	method veccopy
	localstring $1
	pop $1
	cthis free
	localint $2
	push 0
	pop $2
l1036:
	push $2
	push $1
	spushs
	spop $a
	call [$a],size
	cmpjl
	cmp0
	je l1037
	jmp l1039
l1038:
	add $2,1
	pop $2
	jmp l1036
l1039:
	push $1
	spushs
	push $2
	spop $a
	call [$a],get
	cthis add
	jmp l1038
l1037:
	end method
	method vecnextid
	localdef $1
	pop $1
	localint $2
	push $1
	cthis find
	pop $2
	push $2
	push 0
	cmpjae
	cmp0
	je l1041
	push $2
	push 1
	pop $b
	popax
	add $a,$b
	cthis size
	pop $b
	popax
	div $a,$b
	push $d
	pop $2
l1041:
	push $2
	end method
	method vecprevid
	localdef $1
	pop $1
	localint $2
	push $1
	cthis find
	pop $2
	push $2
	push 0
	cmpja
	cmp0
	je l1043
	sub $2,1
	pop $2
	jmp l1042
l1043:
	push $2
	push 0
	cmpje
	cmp0
	je l1045
	cthis size
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
l1045:
l1042:
	push $2
	end method
	method vecget
	localint $1
	pop $1
	push $1
	push 0
	cmpjae
	cmp0
	je l1046
	push $1
	cthis size
	cmpjl
	jmp l1048
l1046:
	push 0
	jmp l1048
l1047:
	push 1
l1048:
	cmp0
	je l1050
	push $1
	cthis get
	jmp l1049
l1050:
	push "null"
l1049:
	end method
	method vecnext
	localdef $1
	pop $1
	push $1
	cthis vecnextid
	cthis vecget
	end method
	method vecprev
	localdef $1
	pop $1
	push $1
	cthis vecprevid
	cthis vecget
	end method
	method veclast
	localint $1
	cthis size
	pop $1
	push $1
	push 0
	cmpja
	cmp0
	je l1052
	push $1
	push 1
	pop $b
	popax
	sub $a,$b
	cthis get
	jmp l1051
l1052:
	push "null"
l1051:
	end method
	method vecpop
	localdef $1
	cthis last
	pop $1
	cthis size
	push 1
	pop $b
	popax
	sub $a,$b
	cthis removeat
	push $1
	end method
	method veclimes
	localint $1
	pop $1
l1053:
	cthis size
	push $1
	cmpja
	cmp0
	je l1054
	cthis vecpop
	popax
	jmp l1053
l1054:
	end method
	method vecpopfront
	localdef $1
	push 0
	cthis get
	pop $1
	push 0
	cthis removeat
	push $1
	end method
	method vecreplace
	localdef $1
	localdef $2
	pop $2
	pop $1
	localdef $3
	push $1
	cthis find
	pop $3
	push $3
	push 0
	cmpjae
	cmp0
	je l1056
	push $3
	push $2
	cthis set
l1056:
	end method
	method insertsort
	localint $1
	localstring $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push 1
	cmpjle
	cmp0
	je l1058
	ret
l1058:
	localdef $5
	localdef $6
	localint $7
	localint $8
	localint $9
	push 0
	pop $8
l1059:
	push $8
	push $1
	cmpjl
	cmp0
	je l1060
	jmp l1062
l1061:
	add $8,1
	pop $8
	jmp l1059
l1062:
	push $2
	spushs
	push $8
	spop $d
	cthis [$d]
	pop $5
	push $8
	pop $7
	push $8
	push 1
	pop $b
	popax
	add $a,$b
	pop $9
l1063:
	push $9
	push $1
	cmpjl
	cmp0
	je l1064
	jmp l1066
l1065:
	add $9,1
	pop $9
	jmp l1063
l1066:
	push $2
	spushs
	push $9
	spop $d
	cthis [$d]
	pop $6
	push $3
	spushs
	push $6
	push $5
	spop $d
	cthis [$d]
	cmp0
	je l1068
	push $6
	pop $5
	push $9
	pop $7
l1068:
	jmp l1065
l1064:
	push $4
	spushs
	push $8
	push $7
	spop $d
	cthis [$d]
	jmp l1061
l1060:
	end method
	method obbuildfromstring
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	localint $4
	push $2
	call $1,find
	pop $4
l1069:
	push $4
	push 1
	popax
	sub 0,$a
	cmpja
	cmp0
	je l1070
	push $3
	spushs
	push 0
	push $4
	call $1,getb
	spop $d
	cthis [$d]
	push $4
	push 1
	pop $b
	popax
	add $a,$b
	call $1,strsubb
	pop $1
	push $2
	call $1,find
	pop $4
	jmp l1069
l1070:
	call $1,length
	push 0
	cmpja
	cmp0
	je l1072
	push $3
	spushs
	push $1
	spop $d
	cthis [$d]
l1072:
	end method
	method obbuildfromstring2
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	localint $4
	push $2
	call $1,find
	pop $4
l1073:
	push $4
	push 1
	popax
	sub 0,$a
	cmpja
	cmp0
	je l1074
	push $4
	push 0
	cmpja
	cmp0
	je l1076
	push $3
	spushs
	push 0
	push $4
	call $1,getb
	spop $d
	cthis [$d]
l1076:
	push $4
	push 1
	pop $b
	popax
	add $a,$b
	call $1,strsubb
	pop $1
	push $2
	call $1,find
	pop $4
	jmp l1073
l1074:
	call $1,length
	push 0
	cmpja
	cmp0
	je l1078
	push $3
	spushs
	push $1
	spop $d
	cthis [$d]
l1078:
	end method
	method vecsort
	localstring $1
	pop $1
	cthis size
	push "get"
	push $1
	push "swap"
	cthis insertsort
	end method
	method vecbuildfromstring
	localstring $1
	localstring $2
	pop $2
	pop $1
	cthis free
	push $1
	push $2
	push "add"
	cthis obbuildfromstring
	end method
	method vecbuildfromstring2
	localstring $1
	localstring $2
	pop $2
	pop $1
	cthis free
	push $1
	push $2
	push "add"
	cthis obbuildfromstring2
	end method
	method vecremoveto
	localint $1
	pop $1
	localint $2
	push 0
	pop $2
l1079:
	push $2
	push $1
	cmpjl
	cmp0
	je l1080
	jmp l1082
l1081:
	add $2,1
	pop $2
	jmp l1079
l1082:
	push 0
	cthis removeat
	jmp l1081
l1080:
	end method
	method vecremovefrom
	localint $1
	pop $1
l1083:
	push $1
	cthis size
	cmpjl
	cmp0
	je l1084
	push $1
	cthis removeat
	jmp l1083
l1084:
	end method
	method vecfindfrom
	localint $1
	localdef $2
	pop $2
	pop $1
l1085:
	push $1
	cthis size
	cmpjl
	cmp0
	je l1086
	push $1
	cthis get
	push $2
	cmpje
	cmp0
	je l1088
	push $1
	ret
	jmp l1087
l1088:
	add $1,1
	pop $1
l1087:
	jmp l1085
l1086:
	push 1
	popax
	sub 0,$a
	end method
	method vecposfromto
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	cmpje
	cmp0
	jne l1091
	cthis size
	push 0
	cmpje
	jmp l1092
l1090:
	push 0
	jmp l1092
l1091:
	push 1
l1092:
	cmp0
	je l1093
	ret
l1093:
	localdef $3
	push $1
	cthis get
	pop $3
	push $1
	push $2
	cmpja
	cmp0
	je l1095
	localint $4
	push $1
	pop $4
l1096:
	push $4
	push $2
	cmpja
	cmp0
	je l1097
	jmp l1099
l1098:
	sub $4,1
	pop $4
	jmp l1096
l1099:
	push $4
	push $4
	push 1
	pop $b
	popax
	sub $a,$b
	cthis get
	cthis set
	jmp l1098
l1097:
	jmp l1094
l1095:
	push $1
	push $2
	cmpjl
	cmp0
	je l1101
	localint $4
	push $1
	pop $4
l1102:
	push $4
	push $2
	cmpjl
	cmp0
	je l1103
	jmp l1105
l1104:
	add $4,1
	pop $4
	jmp l1102
l1105:
	push $4
	push $4
	push 1
	pop $b
	popax
	add $a,$b
	cthis get
	cthis set
	jmp l1104
l1103:
l1101:
l1094:
	push $2
	push $3
	cthis set
	end method
	method vecposfirst
	localdef $1
	pop $1
	localint $2
	push $1
	cthis find
	pop $2
	push $2
	push 0
	cmpjae
	cmp0
	je l1107
	push $2
	push 0
	cthis vecposfromto
	jmp l1106
l1107:
	push $1
	cthis addbegin
l1106:
	end method
	method vecposlast
	localdef $1
	pop $1
	localint $2
	push $1
	cthis find
	pop $2
	push $2
	push 0
	cmpjae
	cmp0
	je l1109
	push $2
	cthis size
	push 1
	pop $b
	popax
	sub $a,$b
	cthis vecposfromto
	jmp l1108
l1109:
	push $1
	cthis addbegin
l1108:
	end method
	method vecset
	localdef $1
	localdef $2
	pop $2
	pop $1
	localint $3
	push $1
	cthis find
	pop $3
	push $3
	push 0
	cmpjae
	cmp0
	je l1111
	push $3
	push $2
	cthis set
l1111:
	end method
	method veceq
	localstring $1
	pop $1
	localint $2
	cthis size
	pop $2
	push $2
	push $1
	spushs
	spop $a
	call [$a],size
	cmpjne
	cmp0
	je l1113
	push 0
	ret
l1113:
	localint $3
	push 0
	pop $3
l1114:
	push $3
	push $2
	cmpjl
	cmp0
	je l1115
	jmp l1117
l1116:
	add $3,1
	pop $3
	jmp l1114
l1117:
	push $3
	cthis get
	push $1
	spushs
	push $3
	spop $a
	call [$a],get
	cmpjne
	cmp0
	je l1119
	push 0
	ret
l1119:
	jmp l1116
l1115:
	push 1
	end method
	method vecbuild
	push "addbegin"
	cthis withlist
	end method
	method veceq2
	new vector,___v
	cthis getvectype
	call ___v,type
	call ___v,vecbuild
	localint $1
	push "___v"
	cthis veceq
	pop $1
	delete ___v
	push $1
	end method
	method veccopydbrow
	localstring $1
	localint $2
	pop $2
	pop $1
	cthis free
	push $1
	push $2
	cthis vecadddbrow
	end method
	method vecadddbrow
	localstring $1
	localint $2
	pop $2
	pop $1
	localint $3
	push 0
	pop $3
l1120:
	push $3
	push $1
	spushs
	push $2
	spop $a
	call [$a],getcolsno
	cmpjl
	cmp0
	je l1121
	jmp l1123
l1122:
	add $3,1
	pop $3
	jmp l1120
l1123:
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	cthis add
	jmp l1122
l1121:
	end method
	method vecchecknext
	localint $1
	pop $1
	add $1,1
	pop $1
	push $1
	cthis size
	cmpjl
	cmp0
	je l1125
	push $1
	cthis get
	jmp l1124
l1125:
	push "null"
l1124:
	end method
	method vecsum
	cthis size
	cmp0
	je l1127
	localdef $1
	push 0
	cthis get
	pop $1
	localint $2
	push 1
	pop $2
l1128:
	push $2
	cthis size
	cmpjl
	cmp0
	je l1129
	jmp l1131
l1130:
	add $2,1
	pop $2
	jmp l1128
l1131:
	push $2
	cthis get
	popax
	add $1,$a
	pop $1
	jmp l1130
l1129:
	push $1
	jmp l1126
l1127:
	push 0
l1126:
	end method
	method vecclosest
	localdef $1
	pop $1
	localint $2
	cthis size
	pop $2
	push $2
	push 0
	cmpjle
	cmp0
	je l1133
	push 1
	popax
	sub 0,$a
	ret
l1133:
	localint $3
	push 0
	pop $3
	localdef $4
	push $1
	push 0
	cthis get
	pop $b
	popax
	sub $a,$b
	spushs
	spop $h
	call $h,abs
	pop $4
	localint $5
	push 1
	pop $5
l1134:
	push $5
	push $2
	cmpjl
	cmp0
	je l1135
	jmp l1137
l1136:
	add $5,1
	pop $5
	jmp l1134
l1137:
	localdef $6
	push $1
	push $5
	cthis get
	pop $b
	popax
	sub $a,$b
	spushs
	spop $h
	call $h,abs
	pop $6
	push $6
	push $4
	cmpjl
	cmp0
	je l1139
	push $5
	pop $3
	push $6
	pop $4
l1139:
	jmp l1136
l1135:
	push $3
	end method
	method vecloadargs
	localdef $1
	pop $1
l1140:
	push $1
	push A
	cmpjne
	cmp0
	je l1141
	push $1
	cthis addbegin
	localdef $1
	pop $1
	jmp l1140
l1141:
	end method
	method vecbuildlines
	localstring $1
	localint $2
	pop $2
	pop $1
	cthis free
	push "string"
	cthis type
	push $2
	push 0
	cmpjle
	cmp0
	je l1143
	ret
l1143:
	new vector,_vtmplin
	push "string"
	call _vtmplin,type
	push $1
	push " "
	call _vtmplin,vecbuildfromstring
	localstring $3
	push ""
	pop $3
	localint $4
	push 0
	pop $4
l1144:
	push $4
	call _vtmplin,size
	cmpjl
	cmp0
	je l1145
	jmp l1147
l1146:
	add $4,1
	pop $4
	jmp l1144
l1147:
	push $4
	call _vtmplin,get
	push " "
	pop $b
	popax
	add $a,$b
	popax
	add $3,$a
	pop $3
	call $3,length
	push $2
	cmpjae
	cmp0
	je l1149
	push $3
	cthis add
	push ""
	pop $3
l1149:
	jmp l1146
l1145:
	push $3
	push ""
	cmpjne
	cmp0
	je l1151
	push $3
	cthis add
l1151:
	delete _vtmplin
	end method
	method dbbuild
	localint $1
	pop $1
	push $1
	push 0
	cmpjle
	cmp0
	je l1153
	ret
l1153:
	sub $1,1
	pop $1
	cthis free
	localstring $2
	pop $2
	localint $3
	localint $4
	push 0
	pop $4
l1154:
	push $2
	push A
	cmpjne
	cmp0
	je l1155
	jmp l1157
l1156:
	jmp l1154
l1157:
	push $4
	push 0
	cmpje
	cmp0
	je l1159
	cthis addbeginrow
	push 1
	pop $b
	popax
	sub $a,$b
	pop $3
l1159:
	push 0
	push $2
	cthis addbegin
	pop $2
	push $4
	push $1
	cmpjl
	cmp0
	je l1161
	push $4
	push 1
	pop $b
	popax
	add $a,$b
	jmp l1160
l1161:
	push 0
l1160:
	pop $4
	jmp l1156
l1155:
	end method
	method dbbuild2
	cthis free
	localstring $1
	pop $1
l1162:
	push $1
	push A
	cmpjne
	cmp0
	je l1163
	push $1
	push "null"
	cmpje
	cmp0
	je l1165
	cthis addbeginrow
	popax
	jmp l1164
l1165:
	push 0
	push $1
	cthis addbegin
l1164:
	pop $1
	jmp l1162
l1163:
	end method
	method dbaddvec
	localstring $1
	pop $1
	localdef $2
	cthis addrow
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
	localint $3
	push 0
	pop $3
l1166:
	push $3
	push $1
	spushs
	spop $a
	call [$a],size
	cmpjl
	cmp0
	je l1167
	jmp l1169
l1168:
	add $3,1
	pop $3
	jmp l1166
l1169:
	push $2
	push $1
	spushs
	push $3
	spop $a
	call [$a],get
	cthis add
	jmp l1168
l1167:
	end method
	method dbcopy
	localstring $1
	pop $1
	push $1
	push 0
	push $1
	spushs
	spop $a
	call [$a],getrowsno
	cthis dbcopyfromto
	end method
	method dbcopyrow
	localstring $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push $2
	push 1
	pop $b
	popax
	add $a,$b
	cthis dbcopyfromto
	end method
	method dbcopyfromto
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	cthis free
	push $1
	push $2
	push $3
	cthis dbaddrowfromto
	end method
	method dbaddrowfromto
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	localint $4
	localint $5
	localint $6
	push $2
	pop $4
l1170:
	push $4
	push $3
	cmpjl
	cmp0
	je l1171
	jmp l1173
l1172:
	add $4,1
	pop $4
	jmp l1170
l1173:
	cthis addrow
	push 1
	pop $b
	popax
	sub $a,$b
	pop $6
	push 0
	pop $5
l1174:
	push $5
	push $1
	spushs
	push $4
	spop $a
	call [$a],getcolsno
	cmpjl
	cmp0
	je l1175
	jmp l1177
l1176:
	add $5,1
	pop $5
	jmp l1174
l1177:
	push $6
	push $1
	spushs
	push $4
	push $5
	spop $a
	call [$a],get
	cthis add
	jmp l1176
l1175:
	jmp l1172
l1171:
	end method
	method dbadddbrowtorow
	localint $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	localint $4
	push 0
	pop $4
l1178:
	push $4
	push $2
	spushs
	push $3
	spop $a
	call [$a],getcolsno
	cmpjl
	cmp0
	je l1179
	jmp l1181
l1180:
	add $4,1
	pop $4
	jmp l1178
l1181:
	push $1
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	cthis add
	jmp l1180
l1179:
	end method
	method dbremovecol
	localint $1
	pop $1
	localint $2
	push 0
	pop $2
l1182:
	push $2
	cthis getrowsno
	cmpjl
	cmp0
	je l1183
	jmp l1185
l1184:
	add $2,1
	pop $2
	jmp l1182
l1185:
	push $2
	cthis getcolsno
	push $1
	cmpja
	cmp0
	je l1187
	push $2
	push $1
	cthis removeat
l1187:
	jmp l1184
l1183:
	end method
	method dbcopyfromtos
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $1
	spushs
	push $2
	spop $a
	call [$a],findbyrow
	push 1
	pop $b
	popax
	add $a,$b
	push $1
	spushs
	push $3
	spop $a
	call [$a],findbyrow
	cthis dbcopyfromto
	end method
	method dbremovelast
	cthis getrowsno
	push 1
	pop $b
	popax
	sub $a,$b
	cthis removerow
	end method
	method dbcuttosize
	localint $1
	pop $1
	push $1
	push 0
	cmpja
	cmp0
	je l1189
l1190:
	cthis getrowsno
	push $1
	cmpja
	cmp0
	je l1191
	cthis dbremovelast
	jmp l1190
l1191:
	jmp l1188
l1189:
	cthis free
l1188:
	end method
	method dbaddlast
	localstring $1
	pop $1
	cthis getrowsno
	push 1
	pop $b
	popax
	sub $a,$b
	push $1
	cthis add
	end method
	method dbaddstringrow
	localstring $1
	localstring $2
	pop $2
	pop $1
	cthis addrow
	popax
	push $1
	push $2
	push "dbaddlast"
	cthis obbuildfromstring
	end method
	method dbrowtostring
	localint $1
	localint $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	localstring $5
	push ""
	pop $5
	localint $6
	push $1
	cthis getcolsno
	push 1
	pop $b
	popax
	sub $a,$b
	pop $6
	push $3
	push 0
	cmpjl
	cmp0
	jne l1194
	push $3
	push $6
	cmpja
	jmp l1195
l1193:
	push 0
	jmp l1195
l1194:
	push 1
l1195:
	cmp0
	je l1196
	push $6
	pop $3
l1196:
l1197:
	push $2
	push $3
	cmpjle
	cmp0
	je l1198
	jmp l1200
l1199:
	add $2,1
	pop $2
	jmp l1197
l1200:
	push $1
	push $2
	cthis get
	push $4
	pop $b
	popax
	add $a,$b
	popax
	add $5,$a
	pop $5
	jmp l1199
l1198:
	push $5
	end method
	method dbgetstringrow
	localint $1
	pop $1
	push $1
	push 0
	push 1
	popax
	sub 0,$a
	push ""
	cthis dbrowtostring
	end method
	method dbaddrow
	localdef $1
	cthis addrow
	push 1
	pop $b
	popax
	sub $a,$b
	pop $1
	localdef $2
	pop $2
l1201:
	push A
	push $2
	cmpjne
	cmp0
	je l1202
	push $1
	push $2
	cthis addbegin
	localdef $2
	pop $2
	jmp l1201
l1202:
	end method
	method dbaddrowfrom
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	push $2
	spop $a
	call [$a],rowinrange
	cmp0
	je l1204
	push $3
	push 0
	cmpjae
	jmp l1206
l1204:
	push 0
	jmp l1206
l1205:
	push 1
l1206:
	cmp0
	je l1207
	localint $4
	cthis addrow
	push 1
	pop $b
	popax
	sub $a,$b
	pop $4
	localint $5
	push $1
	spushs
	push $2
	spop $a
	call [$a],getcolsno
	pop $5
l1208:
	push $3
	push $5
	cmpjl
	cmp0
	je l1209
	push $4
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	cthis add
	add $3,1
	pop $3
	jmp l1208
l1209:
l1207:
	end method
	method dbchecknext
	localint $1
	localint $2
	pop $2
	pop $1
	add $2,1
	pop $2
	push $2
	push $1
	cthis getcolsno
	cmpjl
	cmp0
	je l1211
	push $1
	push $2
	cthis get
	jmp l1210
l1211:
	push "null"
l1210:
	end method
	method dbgets
	localstring $1
	localint $2
	pop $2
	pop $1
	localdef $3
	push $1
	cthis findbyrow
	pop $3
	push $3
	push 0
	cmpjae
	cmp0
	je l1213
	push $3
	cthis getcolsno
	push $2
	cmpja
	jmp l1215
l1213:
	push 0
	jmp l1215
l1214:
	push 1
l1215:
	cmp0
	je l1216
	push $3
	push $2
	cthis get
	jmp l1212
l1216:
	push "null"
l1212:
	end method
	method dbget
	localstring $1
	pop $1
	localdef $2
	push $1
	cthis findbyrow
	pop $2
	push $2
	push 0
	cmpjae
	cmp0
	je l1218
	push $2
	push 1
	cthis get
	jmp l1217
l1218:
	push "null"
l1217:
	end method
	method dbgetint
	localstring $1
	pop $1
	localdef $2
	push $1
	cthis findbyrow
	pop $2
	push $2
	push 0
	cmpjae
	cmp0
	je l1220
	push $2
	push 1
	cthis get
	spushs
	spop $h
	call $h,to_i
	jmp l1219
l1220:
	push 0
l1219:
	end method
	method dbgetscr
	localstring $1
	pop $1
	localdef $2
	push $1
	cthis findbyrow
	pop $2
	push $2
	push 0
	cmpjae
	cmp0
	je l1222
	push $2
	push 1
	cthis get
	spushs
	spop $h
	call $h,to_r
	push rgmscalex
	pop $b
	popax
	mul $a,$b
	jmp l1221
l1222:
	push 0.0
l1221:
	end method
	method dbinsertless
	localint $1
	pop $1
	localint $2
	cthis addrow
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
	push $2
	push $1
	cthis add
	push "cmpless"
	cthis dbsort
l1223:
	push $2
	push 0
	cmpjae
	cmp0
	je l1224
	push $1
	push $2
	push 0
	cthis get
	cmpje
	cmp0
	je l1226
	push $2
	ret
l1226:
	sub $2,1
	pop $2
	jmp l1223
l1224:
	push 1
	popax
	sub 0,$a
	end method
	method dbdelvar
	localint $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	cthis dbdelvarn
	end method
	method dbdelvarn
	localint $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	localint $4
	push $1
	push $2
	cthis dbfindinrow
	pop $4
	push $4
	push 0
	cmpjae
	cmp0
	je l1228
	push $1
	push $4
	push $3
	cthis removen
	push 1
	ret
l1228:
	push 0
	end method
	method dbfindinrow
	localint $1
	localstring $2
	pop $2
	pop $1
	push $1
	cthis rowinrange
	cmp0
	je l1230
	localint $3
	push 0
	pop $3
l1231:
	push $3
	push $1
	cthis getcolsno
	cmpjl
	cmp0
	je l1232
	jmp l1234
l1233:
	add $3,1
	pop $3
	jmp l1231
l1234:
	push $1
	push $3
	cthis get
	push $2
	cmpje
	cmp0
	je l1236
	push $3
	ret
l1236:
	jmp l1233
l1232:
l1230:
	push 1
	popax
	sub 0,$a
	end method
	method dbfindbycol
	localint $1
	localstring $2
	pop $2
	pop $1
	localint $3
	push 0
	pop $3
l1237:
	push $3
	cthis getrowsno
	cmpjl
	cmp0
	je l1238
	jmp l1240
l1239:
	add $3,1
	pop $3
	jmp l1237
l1240:
	push $3
	push $1
	cthis get
	push $2
	cmpje
	cmp0
	je l1242
	push $3
	ret
l1242:
	jmp l1239
l1238:
	push 1
	popax
	sub 0,$a
	end method
	method dbrowcontains
	localint $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	cthis dbfindinrow
	push 1
	popax
	sub 0,$a
	cmpjne
	end method
	method dbfirst
	localint $1
	pop $1
	push $1
	push 0
	cthis get
	end method
	method cmpless
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	cmpjl
	end method
	method cmpabove
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	cmpja
	end method
	method dbfirstless
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push 0
	cthis get
	push $2
	push 0
	cthis get
	cmpjl
	end method
	method dbsort
	localstring $1
	pop $1
	cthis getrowsno
	push "dbfirst"
	push $1
	push "swap"
	cthis insertsort
	end method
	method dbsetall
	localstring $1
	pop $1
	localdef $2
	push 0
	pop $2
l1243:
	push $2
	cthis getrowsno
	cmpjl
	cmp0
	je l1244
	jmp l1246
l1245:
	add $2,1
	pop $2
	jmp l1243
l1246:
	localdef $3
	push 0
	pop $3
l1247:
	push $3
	push $2
	cthis getcolsno
	cmpjl
	cmp0
	je l1248
	jmp l1250
l1249:
	add $3,1
	pop $3
	jmp l1247
l1250:
	push $2
	push $3
	push $1
	cthis set
	jmp l1249
l1248:
	jmp l1245
l1244:
	end method
	method dbeach_row
	localstring $1
	pop $1
	localdef $2
	push 0
	pop $2
l1251:
	push $2
	cthis getrowsno
	cmpjl
	cmp0
	je l1252
	jmp l1254
l1253:
	add $2,1
	pop $2
	jmp l1251
l1254:
	push $1
	spushs
	push $2
	spop $d
	cthis [$d]
	jmp l1253
l1252:
	end method
	method dbeq
	localstring $1
	pop $1
	cthis getrowsno
	push $1
	spushs
	spop $a
	call [$a],getrowsno
	cmpjne
	cmp0
	je l1256
	push 0
	ret
l1256:
	localint $2
	localint $3
	localint $4
	push 0
	pop $4
l1257:
	push $4
	cthis getrowsno
	cmpjl
	cmp0
	je l1258
	jmp l1260
l1259:
	add $4,1
	pop $4
	jmp l1257
l1260:
	push $4
	cthis getcolsno
	pop $2
	push $2
	push $1
	spushs
	push $4
	spop $a
	call [$a],getcolsno
	cmpjne
	cmp0
	je l1262
	push 0
	ret
l1262:
	push 0
	pop $3
l1263:
	push $3
	push $2
	cmpjl
	cmp0
	je l1264
	jmp l1266
l1265:
	add $3,1
	pop $3
	jmp l1263
l1266:
	push $4
	push $3
	cthis get
	push $1
	spushs
	push $4
	push $3
	spop $a
	call [$a],get
	cmpjne
	cmp0
	je l1268
	push 0
	ret
l1268:
	jmp l1265
l1264:
	jmp l1259
l1258:
	push 1
	end method
	method randdiff
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push 1
	cmpjle
	cmp0
	je l1270
	push 1
	popax
	sub 0,$a
	ret
l1270:
	localint $3
	call $1,rand
	pop $3
l1271:
	push $3
	push $2
	cmpje
	cmp0
	je l1272
	jmp l1274
l1273:
	call $1,rand
	pop $3
	jmp l1271
l1274:
	jmp l1273
l1272:
	push $3
	end method
	method bin_to_i
	localstring $1
	cthis get
	pop $1
	localint $2
	push 1
	pop $2
	localint $3
	push 0
	pop $3
	localint $4
	call $1,length
	push 1
	pop $b
	popax
	sub $a,$b
	pop $4
l1275:
	push $4
	push 0
	cmpjae
	cmp0
	je l1276
	jmp l1278
l1277:
	sub $4,1
	pop $4
	jmp l1275
l1278:
	push $4
	push 1
	call $1,getb
	push "1"
	cmpje
	cmp0
	je l1280
	push $2
	popax
	add $3,$a
	pop $3
l1280:
	push 2
	popax
	mul $2,$a
	pop $2
	jmp l1277
l1276:
	push $3
	end method
	method std_anfadeout_finish
	cthis unlink_internal_filter
	cthis hide
	end method
	method internal_filter
	localdef $1
	push "__ft"
	cthis getname
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	cthis hasvar
	neg
	cmp0
	je l1282
	push $1
	spushs
	spop $e
	new filter,[$e]
	push $1
	spushs
	spop $a
	call [$a],buildfullname
l1282:
	push $1
	spushs
	cthis getname
	spop $a
	call [$a],link
	push $1
	spushs
	spop $a
	call [$a],getfullname
	end method
	method internal_timer
	localdef $1
	push "__tim"
	cthis getname
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	cthis hasvar
	neg
	cmp0
	je l1284
	push $1
	spushs
	spop $e
	new timer,[$e]
	push $1
	spushs
	push 1
	spop $a
	call [$a],setcycle
	push $1
	spushs
	push A
	push "sfunc"
	push "null"
	push "sfilter"
	push "null"
	push "rstep"
	push 0.0
	push "ropacity"
	push 0.0
	push "rstepzoom"
	push 0.0
	push "rzoom"
	push 0.0
	push "rzoomsmall"
	push 0.0
	push "rzoombig"
	push 1.0
	spop $a
	call [$a],vars2
l1284:
	push $1
	end method
	method unlink_internal_filter
	localdef $1
	cthis internal_timer
	pop $1
	push $1
	cthis hasvar
	cmp0
	je l1286
	push $1
	spushs
	push 0
	spop $a
	call [$a],stop
l1286:
	cthis internal_filter
	spushs
	spop $a
	call [$a],unlink
	end method
	method anhideonsetframe
	push "bhideonsf"
	cthis var
	push "bopacityfr"
	cthis hasvar
	neg
	cmp0
	je l1288
	push "onsetframe"
	push "_stdanhide"
	cthis addmethod
l1288:
	end method
	method anopacityframe
	push "bopacityfr"
	cthis var
	push "onsetframe"
	push "global7"
	cthis addmethod
	end method
	method global7
	localdef $1
	cthis framename
	pop $1
	push 0
	push 2
	call $1,getb
	push "op"
	cmpje
	cmp0
	je l1290
	cthis internal_filter
	spushs
	push 2
	call $1,strsubb
	spushs
	spop $h
	call $h,to_r
	push 100.0
	pop $b
	popax
	div $a,$b
	psax
	push 255
	pop $b
	popax
	mul $a,$b
	spop $a
	call [$a],setopacity
	jmp l1289
l1290:
	cthis internal_filter
	spushs
	push 255
	spop $a
	call [$a],setopacity
l1289:
	push "bhideonsf"
	cthis hasvar
	cmp0
	je l1292
	cthis hide
l1292:
	end method
	method anrandfrplay
	push "brandfrplay"
	cthis var
	push "onendframe"
	push "ansetrandfr"
	cthis addmethod
	end method
	method ansetopacity
	localint $1
	pop $1
	cthis internal_filter
	spushs
	push $1
	spop $a
	call [$a],setopacity
	end method
	method anzoomin
	localint $1
	localstring $2
	pop $2
	pop $1
	push 255
	cthis ansetopacity
	push $1
	push 1
	push 0
	push $2
	cthis anzoomfadeinout
	end method
	method anzoomout
	localint $1
	localstring $2
	pop $2
	pop $1
	push 255
	cthis ansetopacity
	push $1
	push 1
	popax
	sub 0,$a
	push 0
	push $2
	cthis anzoomfadeinout
	end method
	method anfadein
	localint $1
	localstring $2
	pop $2
	pop $1
	push $1
	push 0
	push 1
	push $2
	cthis anzoomfadeinout
	end method
	method anzoomfadein
	localint $1
	localstring $2
	pop $2
	pop $1
	push $1
	push 1
	push 1
	push $2
	cthis anzoomfadeinout
	end method
	method anzoomfadeout
	localint $1
	localstring $2
	pop $2
	pop $1
	push $1
	push 1
	popax
	sub 0,$a
	push 1
	popax
	sub 0,$a
	push $2
	cthis anzoomfadeinout
	end method
	method anfadeout
	localint $1
	localstring $2
	pop $2
	pop $1
	push $1
	push 0
	push 1
	popax
	sub 0,$a
	push $2
	cthis anzoomfadeinout
	end method
	method anzoomfadeinout
	localint $1
	localint $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	push 0.0
	push 1.0
	cthis _anzoomfadeinout
	end method
	method _anzoomfadeinout
	localint $1
	localint $2
	localint $3
	localstring $4
	localreal $5
	localreal $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $3
	push 0
	cmpja
	cmp0
	je l1294
	push 1
	pop $3
	jmp l1293
l1294:
	push $3
	push 0
	cmpjl
	cmp0
	je l1296
	push 1
	popax
	sub 0,$a
	pop $3
l1296:
l1293:
	push $2
	push 0
	cmpja
	cmp0
	je l1298
	push 1
	pop $2
	jmp l1297
l1298:
	push $2
	push 0
	cmpjl
	cmp0
	je l1300
	push 1
	popax
	sub 0,$a
	pop $2
l1300:
l1297:
	cthis show
	localdef $7
	cthis internal_filter
	pop $7
	localdef $8
	cthis internal_timer
	pop $8
	push $7
	spushs
	cthis getname
	spop $a
	call [$a],link
	push $8
	spushs
	push $4
	spop $a
	call [$a],sfunc=
	push $1
	call engine,getloopdelay
	pop $b
	popax
	div $a,$b
	psax
	pop $1
	push $1
	push 0
	cmpjle
	cmp0
	je l1302
	push $3
	push 0
	cmpja
	cmp0
	je l1304
	push 255
	cthis ansetopacity
	jmp l1303
l1304:
	push 0
	cthis ansetopacity
l1303:
	push $4
	push "null"
	cmpjne
	cmp0
	je l1306
	push $4
	spushs
	spop $d
	cthis [$d]
l1306:
	ret
l1302:
	localreal $9
	push 255.0
	push $1
	pop $b
	popax
	div $a,$b
	psax
	pop $9
	push $9
	push 1.0
	cmpjl
	cmp0
	je l1308
	push 1.0
	pop $9
l1308:
	localreal $10
	push $6
	push $5
	pop $b
	popax
	sub $a,$b
	push $1
	pop $b
	popax
	div $a,$b
	psax
	pop $10
	push $8
	spushs
	push $7
	spop $a
	call [$a],sfilter=
	push $8
	spushs
	push $9
	push $3
	pop $b
	popax
	mul $a,$b
	spop $a
	call [$a],rstep=
	push $8
	spushs
	push 0.0
	spop $a
	call [$a],ropacity=
	push $8
	spushs
	push $10
	push $2
	pop $b
	popax
	mul $a,$b
	spop $a
	call [$a],rstepzoom=
	push $8
	spushs
	push 0.0
	spop $a
	call [$a],rzoom=
	push $8
	spushs
	push $5
	spop $a
	call [$a],rzoomsmall=
	push $8
	spushs
	push $6
	spop $a
	call [$a],rzoombig=
	push $3
	cmp0
	je l1310
	push $7
	spushs
	push $3
	push 1
	cmpje
	cmp0
	je l1312
	push 0
	jmp l1311
l1312:
	push 255
l1311:
	spop $a
	call [$a],setopacity
	push $8
	spushs
	push $7
	spushs
	spop $a
	call [$a],getopacity
	spop $a
	call [$a],ropacity=
l1310:
	push $2
	cmp0
	je l1314
	push $7
	spushs
	push $2
	push 1
	cmpje
	cmp0
	je l1316
	push $5
	push $10
	pop $b
	popax
	add $a,$b
	jmp l1315
l1316:
	push $6
l1315:
	spop $a
	call [$a],setzoom
	push $8
	spushs
	push $7
	spushs
	spop $a
	call [$a],getzoomx
	spop $a
	call [$a],rzoom=
l1314:
	push $8
	spushs
	push "onfinish"
	push "global8"
	spop $a
	call [$a],addmethod
	push $8
	spushs
	spop $a
	call [$a],play
	end method
	method global8
	push rstep
	popax
	add ropacity,$a
	pop ropacity
	push rstepzoom
	popax
	add rzoom,$a
	pop rzoom
	push ropacity
	push 255.0
	cmpjae
	cmp0
	je l1318
	push rstep
	push 0.0
	cmpja
	jmp l1320
l1318:
	push 0
	jmp l1320
l1319:
	push 1
l1320:
	cmp0
	jne l1322
	push rzoom
	push rzoombig
	cmpjae
	cmp0
	je l1323
	push rstepzoom
	push 0.0
	cmpja
	jmp l1325
l1323:
	push 0
	jmp l1325
l1324:
	push 1
l1325:
	jmp l1326
l1321:
	push 0
	jmp l1326
l1322:
	push 1
l1326:
	cmp0
	je l1327
	push rstepzoom
	push 0.0
	cmpja
	cmp0
	je l1329
	push sfilter
	spushs
	push rzoombig
	spop $a
	call [$a],setzoom
l1329:
	push rstep
	push 0.0
	cmpja
	cmp0
	je l1331
	push sfilter
	spushs
	push 255
	spop $a
	call [$a],setopacity
l1331:
	push sfunc
	push "null"
	cmpjne
	cmp0
	je l1333
	cthis getbuildername
	spushs
	push sfunc
	spushs
	spop $d
	spop $a
	call [$a],[$d]
l1333:
	jmp l1317
l1327:
	push ropacity
	push 0.0
	cmpjle
	cmp0
	je l1335
	push rstep
	push 0.0
	cmpjl
	jmp l1337
l1335:
	push 0
	jmp l1337
l1336:
	push 1
l1337:
	cmp0
	jne l1339
	push rstepzoom
	push 0.0
	cmpjl
	cmp0
	je l1340
	push rzoom
	push rzoomsmall
	push rstepzoom
	pop $b
	popax
	sub $a,$b
	cmpjl
	jmp l1342
l1340:
	push 0
	jmp l1342
l1341:
	push 1
l1342:
	jmp l1343
l1338:
	push 0
	jmp l1343
l1339:
	push 1
l1343:
	cmp0
	je l1344
	push rstepzoom
	push 0.0
	cmpjl
	cmp0
	je l1346
	push rzoomsmall
	push 0.0
	cmpje
	jmp l1348
l1346:
	push 0
	jmp l1348
l1347:
	push 1
l1348:
	cmp0
	jne l1350
	push rstep
	push 0.0
	cmpjl
	cmp0
	je l1351
	push ropacity
	push 0.0
	cmpjle
	jmp l1353
l1351:
	push 0
	jmp l1353
l1352:
	push 1
l1353:
	jmp l1354
l1349:
	push 0
	jmp l1354
l1350:
	push 1
l1354:
	cmp0
	je l1355
	push sfilter
	spushs
	spop $a
	call [$a],unlink
	cthis getbuildername
	spushs
	spop $a
	call [$a],hide
l1355:
	push sfunc
	push "null"
	cmpjne
	cmp0
	je l1357
	cthis getbuildername
	spushs
	push sfunc
	spushs
	spop $d
	spop $a
	call [$a],[$d]
l1357:
	jmp l1334
l1344:
	push rstep
	push 0.0
	cmpjne
	cmp0
	je l1359
	push sfilter
	spushs
	push ropacity
	spop $a
	call [$a],setopacity
l1359:
	push rstepzoom
	push 0.0
	cmpjne
	cmp0
	je l1361
	push sfilter
	spushs
	push rzoom
	spop $a
	call [$a],setzoom
l1361:
	cthis play
l1334:
l1317:
	end method
	method imgbuildfromlist
	new vector,__vtmp
	push "string"
	call __vtmp,type
	call __vtmp,vecloadargs
	push "__vtmp"
	cthis imgbuildfromvec
	delete __vtmp
	end method
	method imgbuildfromvec
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],empty
	cmp0
	je l1363
	ret
l1363:
	localstring $2
	push $1
	spushs
	spop $a
	call [$a],first
	pop $2
	localint $3
	push $2
	spushs
	spop $a
	call [$a],getpx
	pop $3
	localint $4
	push $2
	spushs
	spop $a
	call [$a],getpy
	pop $4
	localint $5
	push $2
	spushs
	spop $a
	call [$a],getex
	pop $5
	localint $6
	push $2
	spushs
	spop $a
	call [$a],getey
	pop $6
	localint $7
	push 1
	pop $7
l1364:
	push $7
	push $1
	spushs
	spop $a
	call [$a],size
	cmpjl
	cmp0
	je l1365
	jmp l1367
l1366:
	add $7,1
	pop $7
	jmp l1364
l1367:
	push $1
	spushs
	push $7
	spop $a
	call [$a],get
	pop $2
	push $3
	push $2
	spushs
	spop $a
	call [$a],getpx
	cmpja
	cmp0
	je l1369
	push $2
	spushs
	spop $a
	call [$a],getpx
	pop $3
l1369:
	push $4
	push $2
	spushs
	spop $a
	call [$a],getpy
	cmpja
	cmp0
	je l1371
	push $2
	spushs
	spop $a
	call [$a],getpy
	pop $4
l1371:
	push $5
	push $2
	spushs
	spop $a
	call [$a],getex
	cmpjl
	cmp0
	je l1373
	push $2
	spushs
	spop $a
	call [$a],getex
	pop $5
l1373:
	push $6
	push $2
	spushs
	spop $a
	call [$a],getey
	cmpjl
	cmp0
	je l1375
	push $2
	spushs
	spop $a
	call [$a],getey
	pop $6
l1375:
	jmp l1366
l1365:
	push $5
	push $3
	pop $b
	popax
	sub $a,$b
	push $6
	push $4
	pop $b
	popax
	sub $a,$b
	cthis transparent
	cthis create
	push $3
	push $4
	cthis setpos
	push 0
	pop $7
l1376:
	push $7
	push $1
	spushs
	spop $a
	call [$a],size
	cmpjl
	cmp0
	je l1377
	jmp l1379
l1378:
	add $7,1
	pop $7
	jmp l1376
l1379:
	push $1
	spushs
	push $7
	spop $a
	call [$a],get
	cthis blit
	jmp l1378
l1377:
	end method
	method imgclonesize
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getw
	push $1
	spushs
	spop $a
	call [$a],geth
	cthis transparent
	cthis create
	push $1
	spushs
	spop $a
	call [$a],getpx
	push $1
	spushs
	spop $a
	call [$a],getpy
	cthis setpos
	end method
	method imgclone
	localstring $1
	pop $1
	push $1
	cthis imgclonesize
	push $1
	cthis blit
	push $1
	spushs
	spop $a
	call [$a],getz
	cthis setz
	push $1
	spushs
	spop $a
	call [$a],isvisible
	cmp0
	je l1381
	cthis show
	jmp l1380
l1381:
	cthis hide
l1380:
	end method
	class classgamepause
	method init
	new button,butpause
	push 0
	push 0
	push igmappw
	push igmapph
	call butpause,setrect
	push "onclick"
	push "resume"
	call butpause,addmethod
	call butpause,disable
	end method
	method resume
	call butpause,disable
	call gameapi,resume
	cthis getbuildername
	push "_resume"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method pause
	call gameapi,pause
	call butpause,enable
	call butpause,resume
	end method
	end class

	class TicksCounter
	method init
	new int,istart
	end method
	method start
	call engine,getticks
	pop istart
	end method
	method stop
	call engine,getticks
	push istart
	pop $b
	popax
	sub $a,$b
	pop istart
	end method
	method get
	push istart
	ret
	end method
	method stopget
	cthis stop
	cthis get
	ret
	end method
	method print
	localstring $1
	pop $1
	push $1
	push " delay: "
	pop $b
	popax
	add $a,$b
	cthis stopget
	pop $b
	popax
	add $a,$b
	push " ms"
	pop $b
	popax
	add $a,$b
	call engine,print
	end method
	method put
	push ""
	cthis print
	end method
	end class

	class ObjController
	method init
	push GAME
	spushs
	cthis getname
	spop $a
	call [$a],addgmobj
	end method
	method removefromgame
	push GAME
	spushs
	cthis getname
	spop $a
	call [$a],removegmobj
	end method
	end class

	class LObjController
	parent ObjController
	parent classlocker
	method init
	clparent ObjController,init
	clparent classlocker,init
	end method
	end class

	class gmbankvec
	parent gmobjvec
	method init
	clparent gmobjvec,init
	push "iid"
	push 1
	popax
	sub 0,$a
	cthis var2
	end method
	method startrand
	cthis size
	push 0
	cmpja
	cmp0
	je l1383
	cthis size
	spushs
	spop $h
	call $h,rand
	pop iid
l1383:
	end method
	method play
	push 0
	cthis stop
	localint $1
	cthis size
	pop $1
	push $1
	push 0
	cmpje
	cmp0
	je l1385
	ret
l1385:
	push iid
	push 1
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	div $a,$b
	push $d
	pop iid
	push iid
	cthis get
	spushs
	spop $a
	call [$a],play
	end method
	method onfinish
	end method
	method stop
	localint $1
	pop $1
	cthis isplaying
	cmp0
	je l1387
	cthis getplay
	spushs
	push $1
	spop $a
	call [$a],stop
	push $1
	cmp0
	je l1389
	cthis onfinish
l1389:
l1387:
	end method
	method isplaying
	push iid
	push 0
	cmpjae
	cmp0
	je l1391
	cthis getplay
	spushs
	spop $a
	call [$a],isplaying
	jmp l1390
l1391:
	push 0
l1390:
	end method
	method getplay
	push iid
	cthis get
	ret
	end method
	end class

	class ClassGameController
	method init
	new gmobjvec,__grobj
	new string,GAME
	cthis getname
	pop GAME
	end method
	method addgmobj
	localstring $1
	pop $1
	push $1
	call __grobj,add
	end method
	method removegmobj
	localstring $1
	pop $1
	push $1
	call __grobj,remove
	end method
	method isgmobj
	localstring $1
	pop $1
	push $1
	call __grobj,contains
	end method
	method deletegmobj
	localstring $1
	pop $1
	push $1
	cthis hasvar
	cmp0
	je l1393
	push $1
	cthis removegmobj
	push $1
	spushs
	spop $d
	delete [$d]
l1393:
	end method
	method mousemove
	push "onmousemove"
	call __grobj,eval
	cthis mouse_move
	end method
	method mouselclick
	push "onmouselclick"
	call __grobj,eval
	cthis mouse_lclick
	end method
	method mouserclick
	push "onmouserclick"
	call __grobj,eval
	cthis mouse_rclick
	end method
	method mouselrel
	push "onmouselrel"
	call __grobj,eval
	cthis mouse_lrel
	end method
	end class

	class GameController
	parent ClassGameController
	parent classlocker
	method init
	localstring $1
	pop $1
	clparent ClassGameController,init
	clparent classlocker,init
	new db,_dbsnd
	push "|"
	call _dbsnd,setseparator
	new string,_sndbase
	push $1
	pop _sndbase
	new timer,__dblclick
	push 250
	call __dblclick,delay
	push 1
	call __dblclick,settick
	new int,_itimersnddelay
	push 10000
	pop _itimersnddelay
	end method
	method game_exit
	end method
	method setsndbase
	localstring $1
	pop $1
	push $1
	pop _sndbase
	end method
	method say
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push "null"
	cthis sayf
	end method
	method sayf
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	localstring $4
	push $2
	cthis getsndtxt
	pop $4
	push $4
	spushs
	push 0
	push 1
	spop $a
	call [$a],setstartstopflag
	push $1
	push $4
	push $3
	cthis cplayf
	end method
	method getsndtxt
	localstring $1
	pop $1
	localstring $2
	push "snd"
	push _sndbase
	pop $b
	popax
	add $a,$b
	call _dbsnd,getrowsno
	pop $b
	popax
	add $a,$b
	pop $2
	push $2
	push $1
	cthis addsnd
	push $2
	end method
	method _sndtimerstart
	ret
	localint $1
	push 1
	cthis getname
	call _dbsnd,dbfindbycol
	pop $1
	push $1
	push 0
	cmpjae
	cmp0
	je l1395
	push $1
	push 2
	call _dbsnd,get
	call engine,print
	jmp l1394
l1395:
	cthis getname
	push " not in _dbsnd"
	pop $b
	popax
	add $a,$b
	call engine,print
l1394:
	push ""
	call engine,print
	end method
	method addsndf
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	cthis addsnd
	push $3
	push "null"
	cmpjne
	cmp0
	je l1397
	push 0
	push 1
	call $1,getb
	push ":"
	cmpje
	cmp0
	je l1399
	push 1
	call $1,strsubb
	pop $1
l1399:
	push $1
	spushs
	push "onfinish"
	push $3
	spop $a
	call [$a],addmethod
l1397:
	end method
	method asf
	localstring $1
	localstring $2
	pop $2
	pop $1
	push "snd"
	push $1
	pop $b
	popax
	add $a,$b
	push $2
	push "end"
	push $1
	pop $b
	popax
	add $a,$b
	cthis addsndff
	end method
	method addsndff
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	cthis addsndf
	end method
	method gmconsnd
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new snd,[$e]
	push $1
	spushs
	push 0
	push 1
	spop $a
	call [$a],setstartstopflag
	push $1
	spushs
	cthis getsndpath
	push $2
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],load
	push igmsubtitle
	cmp0
	je l1401
	push $1
	cthis getsndpath
	push $2
	pop $b
	popax
	add $a,$b
	call subtitle,register
l1401:
	end method
	method addsnd
	localstring $1
	localstring $2
	pop $2
	pop $1
	localint $3
	call _dbsnd,addrow
	push 1
	pop $b
	popax
	sub $a,$b
	pop $3
	localstring $4
	push 0
	push 1
	call $1,getb
	push ":"
	cmpje
	cmp0
	je l1403
	push 1
	call $1,strsubb
	pop $1
	push _sndbase
	push "_"
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	add $a,$b
	push $3
	pop $b
	popax
	add $a,$b
	push ".wav"
	pop $b
	popax
	add $a,$b
	pop $4
	jmp l1402
l1403:
	push _sndbase
	push $3
	pop $b
	popax
	add $a,$b
	push ".wav"
	pop $b
	popax
	add $a,$b
	pop $4
l1402:
	localstring $5
	call gameapi,getgamename
	pop $5
	push igmsoundson
	cmp0
	je l1405
	cthis getsndpath
	push $4
	pop $b
	popax
	add $a,$b
	call engine,fileexist
	jmp l1407
l1405:
	push 0
	jmp l1407
l1406:
	push 1
l1407:
	cmp0
	je l1408
	push $5
	spushs
	push $1
	push $4
	spop $a
	call [$a],gmconsnd
	jmp l1404
l1408:
	push $5
	spushs
	push $1
	call $2,length
	push _itimersnddelay
	pop $b
	popax
	mul $a,$b
	push 1
	spop $a
	call [$a],newtimer
	push $1
	spushs
	push "onstart"
	push "_sndtimerstart"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setstartstopflag"
	push "GameController0"
	spop $a
	call [$a],addmethod
l1404:
	push $3
	push $4
	call _dbsnd,add
	push $3
	push $1
	call _dbsnd,add
	push $3
	push $2
	call _dbsnd,add
	end method
	method GameController0
	localint $1
	localint $2
	pop $2
	pop $1
	end method
	method addbank
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new gmbankvec,[$e]
	localstring $3
	pop $3
	localstring $4
l1409:
	push $3
	push A
	cmpjne
	cmp0
	je l1410
	push $3
	cthis getsndtxt
	pop $4
	push $1
	spushs
	push $4
	spop $a
	call [$a],addbegin
	push $2
	push "null"
	cmpjne
	cmp0
	je l1412
	push $4
	spushs
	push "onfinish"
	push $2
	spop $a
	call [$a],addmethod
l1412:
	pop $3
	jmp l1409
l1410:
	end method
	method exportbank
	localstring $1
	pop $1
	push "__db"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	spop $e
	new db,[$e]
	call [$e],GameController1
	push "__db"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	delete [$d]
	end method
	method GameController1
	localdef $1
	pop $1
	push 1
	cthis dbbuild
	push "|"
	cthis setseparator
	push "GameController2"
	cthis dbeach_row
	push igmdebug
	cmp0
	je l1414
	push "exports/"
	push $1
	pop $b
	popax
	add $a,$b
	push ".dlg"
	pop $b
	popax
	add $a,$b
	cthis save
l1414:
	end method
	method GameController2
	localdef $1
	pop $1
	localdef $2
	cthis getname
	spushs
	push "__db"
	spop $h
	call $h,strsubbs
	pop $2
	push $1
	push "snd"
	push $2
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	add $a,$b
	cthis addbegin
	push $1
	push $2
	push $1
	pop $b
	popax
	add $a,$b
	push ".wav"
	pop $b
	popax
	add $a,$b
	cthis addbegin
	end method
	method importbank
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new gmbankvec,[$e]
	push $2
	push $3
	push "null"
	push $1
	cthis importgroupto
	end method
	method exportsnd
	localstring $1
	pop $1
	push igmdebug
	cmp0
	je l1416
	push $1
	call _dbsnd,save
l1416:
	end method
	method stdexportsnd
	push "exports/"
	push _sndbase
	pop $b
	popax
	add $a,$b
	push ".dlg"
	pop $b
	popax
	add $a,$b
	cthis exportsnd
	end method
	method sounds=
	cthis buildsnds
	end method
	method sounds_from
	localstring $1
	pop $1
	new db,__tmpdb
	localdef $2
	push _sndbase
	pop $2
	push $1
	cthis setsndbase
	push "exports/"
	push $1
	pop $b
	popax
	add $a,$b
	push ".dlg"
	pop $b
	popax
	add $a,$b
	call __tmpdb,load
	call _dbsnd,free
	localdef $3
	pop $3
	localint $4
	localstring $5
l1417:
	push A
	push $3
	cmpjne
	cmp0
	je l1418
	localdef $6
	pop $6
	push 1
	push $6
	call __tmpdb,dbfindbycol
	pop $4
	push $4
	push 0
	cmpjae
	cmp0
	je l1420
	cthis getsndpath
	push $4
	push 0
	call __tmpdb,get
	pop $b
	popax
	add $a,$b
	pop $5
	push $5
	call engine,fileexist
	cmp0
	je l1422
	push GAME
	spushs
	push $6
	push $4
	push 0
	call __tmpdb,get
	spop $a
	call [$a],gmconsnd
	push $6
	spushs
	push "onfinish"
	push $3
	spop $a
	call [$a],addmethod
	jmp l1421
l1422:
	push $6
	push $4
	push 1
	call __tmpdb,get
	push $3
	cthis addsndf
l1421:
l1420:
	localdef $3
	pop $3
	jmp l1417
l1418:
	call _dbsnd,free
	delete __tmpdb
	push $2
	cthis setsndbase
	end method
	method buildsnds
	call _dbsnd,free
	new db,__dbsnd
	push 3
	call __dbsnd,dbbuild
	push "__dbsnd"
	cthis buildfromdb
	delete __dbsnd
	end method
	method buildfromdb
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l1423:
	push $2
	push $1
	spushs
	spop $a
	call [$a],getrowsno
	cmpjl
	cmp0
	je l1424
	jmp l1426
l1425:
	add $2,1
	pop $2
	jmp l1423
l1426:
	push $1
	spushs
	push $2
	push 0
	spop $a
	call [$a],get
	push $1
	spushs
	push $2
	push 1
	spop $a
	call [$a],get
	push $1
	spushs
	push $2
	push 2
	spop $a
	call [$a],get
	cthis addsndf
	jmp l1425
l1424:
	cthis stdexportsnd
	end method
	method importsnd
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push "null"
	cthis importgroup
	end method
	method importgroup
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push "null"
	cthis importgroupto
	end method
	method importgroupto
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	new db,__tmpdb
	localdef $5
	push _sndbase
	pop $5
	push $1
	cthis setsndbase
	push "exports/"
	push $1
	pop $b
	popax
	add $a,$b
	push ".dlg"
	pop $b
	popax
	add $a,$b
	call __tmpdb,load
	call _dbsnd,free
	localstring $6
	localint $7
	push 0
	pop $7
l1427:
	push $7
	call __tmpdb,getrowsno
	cmpjl
	cmp0
	je l1428
	jmp l1430
l1429:
	add $7,1
	pop $7
	jmp l1427
l1430:
	push $7
	push 1
	call __tmpdb,get
	pop $6
	push $3
	push "null"
	cmpje
	cmp0
	jne l1433
	push $3
	spushs
	push $6
	spop $a
	call [$a],contains
	jmp l1434
l1432:
	push 0
	jmp l1434
l1433:
	push 1
l1434:
	cmp0
	je l1435
	push $6
	push $7
	push 2
	call __tmpdb,get
	push $2
	cthis addsndf
	push $4
	push "null"
	cmpjne
	cmp0
	je l1437
	push $4
	spushs
	push $6
	spop $a
	call [$a],add
l1437:
l1435:
	jmp l1429
l1428:
	call _dbsnd,free
	call __tmpdb,free
	delete __tmpdb
	push $5
	cthis setsndbase
	end method
	method freesnd
	call _dbsnd,free
	end method
	method lockall
	push "lock"
	call __grobj,eval
	cthis lock
	end method
	method unlockall
	push "unlock"
	call __grobj,eval
	cthis unlock
	end method
	method gmunlockall
	push GAME
	spushs
	spop $a
	call [$a],unlockall
	end method
	method gmlockall
	push GAME
	spushs
	spop $a
	call [$a],lockall
	end method
	method lock=
	localint $1
	pop $1
	push $1
	cmp0
	je l1439
	cthis gmlockall
	jmp l1438
l1439:
	cthis gmunlockall
l1438:
	end method
	method gmcontrol_mousemove
	push "onmousemove"
	call __grobj,eval
	cthis mouse_move
	call moddbg,msmove
	end method
	method gmcontrol_mouselclick
	push "onmouselclick"
	call __grobj,eval
	cthis mouse_lclick
	call __dblclick,isplaying
	cmp0
	je l1441
	cthis mouse_dblclick
	jmp l1440
l1441:
	call __dblclick,play
l1440:
	call moddbg,mslclick
	end method
	method is_dblclick
	call __dblclick,isplaying
	end method
	method reset_dblclick
	call __dblclick,play
	end method
	method gmcontrol_mouserclick
	push "onmouserclick"
	call __grobj,eval
	cthis mouse_rclick
	end method
	method gmcontrol_mouselrel
	push "onmouselrel"
	call __grobj,eval
	cthis mouse_lrel
	call moddbg,mslrel
	end method
	method gmcontrol_mouserrel
	push "onmouserrel"
	call __grobj,eval
	cthis mouse_rrel
	end method
	method gmcontrol_keydown
	push "onkeydown"
	call __grobj,eval
	cthis key_down
	call moddbg,dbkeydown
	end method
	method mousemove
	cthis gmcontrol_mousemove
	end method
	method mouselclick
	cthis gmcontrol_mouselclick
	end method
	method mouselrel
	cthis gmcontrol_mouselrel
	end method
	method mouserclick
	cthis gmcontrol_mouserclick
	end method
	method mouserrel
	cthis gmcontrol_mouserrel
	end method
	method keydown
	cthis gmcontrol_keydown
	end method
	end class

	new int,PrzygodaNumer
	push 0
	pop PrzygodaNumer
	new int,PrzygodaMode
	push "PrzygodaMode:"
	call dbconf,dbgetint
	pop PrzygodaMode
	push "save.txt"
	new classfullsave,clsave
	new string,sgmlastscene
	push "null"
	pop sgmlastscene
	new string,sgmglobpath
	push "null"
	pop sgmglobpath
	new string,sgmgame
	push "null"
	pop sgmgame
	push 0
	push 0
	push igmappw
	push igmapph
	new CutScene,ccs
	push 2000
	call ccs,setz
	new int,igmvoicevolume
	push 100
	pop igmvoicevolume
	new img,imgpause
	push igmappw
	push igmapph
	cthis black
	push 200
	call imgpause,create
	push 6000
	call imgpause,setz
	call imgpause,rle
	call imgpause,hide
	new timer,timwindowmode
	push 2000
	call timwindowmode,setdelay
	push "onfinish"
	push "global9"
	call timwindowmode,addmethod
	method global9
	call imgpause,hide
	call gtxtpause,hide
	end method
	class classadv
	parent classgame
	parent GameController
	method init
	localstring $1
	pop $1
	push igmdelay
	call engine,setloopdelay
	clparent classgame,init
	push SNDPATH
	cthis setwavpath
	push $1
	clparent GameController,init
	new string,_s_game_path
	new int,bmslock
	push 0
	pop bmslock
	new Music,mus
	new Button,butgame
	push 0
	pop igmstate
	push "init"
	pop sgmstate
	cthis wczytajglosnosc
	end method
	method wczytajglosnosc
	push "sound_volume"
	call clsmen,get
	call engine,setsndvol
	push "music_volume"
	call clsmen,get
	call mus,globalvolume=
	push "voice_volume"
	call clsmen,get
	pop igmvoicevolume
	end method
	method butenable
	cthis getname
	call butgame,addbut
	end method
	method butdisable
	cthis getname
	call butgame,removebut
	end method
	method butrefresh
	call butgame,onmousemove
	end method
	method advmslock
	push 1
	pop bmslock
	end method
	method advmsunlock
	push 0
	pop bmslock
	end method
	method advgetlock
	push bmslock
	end method
	method advmssetlock
	localint $1
	pop $1
	push $1
	cmp0
	je l1443
	cthis advmslock
	jmp l1442
l1443:
	cthis advmsunlock
l1442:
	end method
	method switch_path
	localstring $1
	pop $1
	call gameapi,getgamename
	spushs
	spop $a
	call [$a],getgraphpath
	pop _s_game_path
	call gameapi,getgamename
	spushs
	push $1
	spop $a
	call [$a],setgraphpath
	end method
	method restore_path
	call gameapi,getgamename
	spushs
	push _s_game_path
	spop $a
	call [$a],setgraphpath
	end method
	method newclpathf
	localstring $1
	localstring $2
	localstring $3
	localint $4
	localint $5
	localreal $6
	localint $7
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new classpathf,[$e]
	push $1
	spushs
	push $2
	cthis getgraphpath
	push $3
	pop $b
	popax
	add $a,$b
	push $4
	push $5
	push $6
	push $7
	spop $a
	call [$a],build
	end method
	method newclpathfcopy
	localstring $1
	localstring $2
	localstring $3
	localreal $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new classpathf,[$e]
	push $1
	spushs
	push $2
	push $3
	push $4
	spop $a
	call [$a],buildfrom
	end method
	method newpathf
	localstring $1
	localstring $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new path,[$e]
	push $1
	spushs
	cthis getgraphpath
	push $2
	pop $b
	popax
	add $a,$b
	push $3
	push $4
	push 2.0
	push 1
	spop $a
	call [$a],build
	end method
	method newclbut
	localstring $1
	localstring $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new classbutton,[$e]
	push $1
	spushs
	cthis getgraphpath
	push $2
	pop $b
	popax
	add $a,$b
	push $3
	push $4
	spop $a
	call [$a],build
	end method
	method newclmask
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new classmask,[$e]
	push $1
	spushs
	cthis getgraphpath
	push $2
	pop $b
	popax
	add $a,$b
	push $3
	spop $a
	call [$a],buildmask
	end method
	method newclmaskfunc
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new classmask,[$e]
	push $1
	spushs
	cthis getgraphpath
	push $2
	pop $b
	popax
	add $a,$b
	push $3
	push $4
	spop $a
	call [$a],buildmaskfunc
	end method
	method advsaveonstart
	push "GAME_game"
	call gameapi,getgamename
	call clsave,set
	push "GAME_sgmgame"
	push sgmgame
	call clsave,set
	push "GAME_sgmglobpath"
	push sgmglobpath
	call clsave,set
	push "GAME_sgmlastscene"
	push sgmlastscene
	call clsave,set
	push "GAME_ccs"
	call ccs,isvisible
	call clsave,set
	cthis advautosave
	end method
	method advautosave
	push "autosave.txt"
	call clsave,save
	push "autosave"
	call modadvglob,savepck
	end method
	method advautoload
	push "autosave"
	cthis _advload
	end method
	method advcacheload
	push "cache"
	cthis _advload
	end method
	method advcachesave
	push "cache"
	cthis _advsave
	end method
	method _advload
	localstring $1
	pop $1
	call modadvglob,delheros
	push $1
	call modadvglob,loadpck
	push $1
	push ".txt"
	pop $b
	popax
	add $a,$b
	call clsave,load
	push "GAME_sgmgame"
	call clsave,get
	pop sgmgame
	push "GAME_sgmglobpath"
	call clsave,get
	pop sgmglobpath
	push "GAME_sgmlastscene"
	call clsave,get
	pop sgmlastscene
	push "GAME_ccs"
	call clsave,bis
	cmp0
	je l1445
	call ccs,show
	jmp l1444
l1445:
	call ccs,hide
l1444:
	push "GAME_game"
	call clsave,get
	call gameapi,play
	end method
	method _advsave
	localstring $1
	pop $1
	push $1
	push ".txt"
	pop $b
	popax
	add $a,$b
	new classfullsave,_saver
	push "autosave.txt"
	call _saver,load
	call _saver,stdsave
	delete _saver
	new vector,_vcsave
	push "string"
	call _vcsave,type
	new vector,_vcsv2
	push "string"
	call _vcsv2,type
	push "grpck_autosave.txt"
	call _vcsave,vecload
	push "grpck_"
	push $1
	pop $b
	popax
	add $a,$b
	push ".txt"
	pop $b
	popax
	add $a,$b
	call _vcsave,vecsave
	localdef $2
	localint $3
	push 0
	pop $3
l1446:
	push $3
	call _vcsave,size
	cmpjl
	cmp0
	je l1447
	jmp l1449
l1448:
	add $3,1
	pop $3
	jmp l1446
l1449:
	push $3
	call _vcsave,get
	pop $2
	push $2
	push "autosave_name.txt"
	pop $b
	popax
	add $a,$b
	call _vcsv2,vecload
	push $2
	push $1
	pop $b
	popax
	add $a,$b
	push "_name.txt"
	pop $b
	popax
	add $a,$b
	call _vcsv2,vecsave
	push $2
	push "autosave_file.txt"
	pop $b
	popax
	add $a,$b
	call _vcsv2,vecload
	push $2
	push $1
	pop $b
	popax
	add $a,$b
	push "_file.txt"
	pop $b
	popax
	add $a,$b
	call _vcsv2,vecsave
	jmp l1448
l1447:
	delete _vcsave
	delete _vcsv2
	end method
	method getsavename
	push "save"
	push PrzygodaNumer
	pop $b
	popax
	add $a,$b
	end method
	method advload_game
	cthis getsavename
	cthis _advload
	end method
	method advsave_game
	cthis getsavename
	cthis _advsave
	end method
	method advstdstate
	push sgmstate
	push "stdadv"
	cmpje
	end method
	method advsetstdstate
	push "stdadv"
	cthis advsetstate
	end method
	method advsetstate
	localstring $1
	pop $1
	push $1
	pop sgmstate
	end method
	method setstdstate
	cthis advsetstdstate
	call butgame,refresh
	end method
	method stdexitdefadv
	localstring $1
	localstring $2
	pop $2
	pop $1
	push "GAME_snextgame"
	push $2
	call clsave,set
	push "GAME_snextgamepath"
	push $1
	call clsave,set
	push "GAME_snextgametype"
	push "-def"
	call clsave,set
	cthis stdexitgame
	end method
	method stdexitadvadv
	localstring $1
	localstring $2
	pop $2
	pop $1
	push "GAME_snextgame"
	push $2
	call clsave,set
	push "GAME_snextgamepath"
	push $1
	call clsave,set
	push "GAME_snextgametype"
	push "-adv"
	call clsave,set
	cthis stdexitgame
	end method
	method stdexit
	localstring $1
	pop $1
	push "GAME_snextgame"
	push $1
	call clsave,set
	push "GAME_snextgamepath"
	push "null"
	call clsave,set
	push "GAME_snextgametype"
	push "-mg"
	call clsave,set
	cthis stdexitgame
	end method
	method stdexitgame
	push "GAME_fadeout_music"
	call clsave,bis
	cmp0
	je l1451
	push "GAME_fadeout_music"
	push 0
	call clsave,set
	push 1000
	call mus,fadeout
l1451:
	call ccs,buildfromscreen
	push "end"
	pop sgmstate
	localstring $1
	push "GAME_snextgame"
	call clsave,get
	pop $1
	push "GAME_snextgametype"
	call clsave,get
	spushs
	push "-def"
	cmpst
	jne l1453
	spop $a
	push "GAME_snextgamepath"
	call clsave,get
	push $1
	cthis gotoadv
	jmp l1452
l1453:
	push "-adv"
	cmpst
	jne l1454
	spop $a
	push "GAME_snextgamepath"
	call clsave,get
	push $1
	cthis gotoadv2
	jmp l1452
l1454:
	spop $a
	push $1
	call gameapi,play
l1452:
	end method
	method gotoadv
	localstring $1
	localstring $2
	pop $2
	pop $1
	call gameapi,getgamename
	pop sgmlastscene
	push $1
	pop sgmglobpath
	push $2
	pop sgmgame
	push "gameadvdef"
	call gameapi,play
	end method
	method gotoadv2
	localstring $1
	localstring $2
	pop $2
	pop $1
	call gameapi,getgamename
	pop sgmlastscene
	push $1
	pop sgmglobpath
	push "null"
	pop sgmgame
	push $2
	call gameapi,play
	end method
	method onmusicfin
	call mus,play
	end method
	method game_exit
	end method
	method exit
	cthis game_exit
	push igmsubtitle
	cmp0
	je l1456
	call subtitle,reset
l1456:
	call modadvglob,onexit
	call gameapi,getnextgame
	push "exit"
	cmpje
	cmp0
	je l1458
	push "GAME_survey_mode"
	call clsave,bis
	cmp0
	jne l1461
	push igmdemo
	jmp l1462
l1460:
	push 0
	jmp l1462
l1461:
	push 1
l1462:
	jmp l1463
l1458:
	push 0
	jmp l1463
l1459:
	push 1
l1463:
	cmp0
	je l1464
	localdef $1
	push "start \"\" "
	push "survey_link"
	call dbsurvey,dbget
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	call engine,system
l1464:
	end method
	method appdeactivate
	call gameapi,pause
	push "pause"
	cthis cputtxtpause
	push 0
	call timwindowmode,stop
	end method
	method appactivate
	call gameapi,resume
	call imgpause,hide
	call gtxtpause,hide
	end method
	method cputtxtpause
	localstring $1
	pop $1
	push $1
	call dbgame,dbget
	cthis guifontcolor
	call gtxtpause,txtsetcol
	call gtxtpause,txtcenterscreen
	call imgpause,show
	call gtxtpause,show
	end method
	method changefullscreen
	localint $1
	push "fullscreen"
	call clsmen,get
	pop $1
	push $1
	neg
	cmp0
	jne l1467
	cthis canchangetowindow
	jmp l1468
l1466:
	push 0
	jmp l1468
l1467:
	push 1
l1468:
	cmp0
	je l1469
	push $1
	neg
	pop $1
	push "fullscreen"
	push $1
	call clsmen,set
	push $1
	call engine,setfullscreen
	jmp l1465
l1469:
	push "noresolution"
	cthis cputtxtpause
	call timwindowmode,play
l1465:
	end method
	method clpause_resume
	call imgpause,hide
	call gtxtpause,hide
	call advmouse,refresh
	end method
	method keydown
	call imgpause,isvisible
	cmp0
	je l1471
	ret
l1471:
	push "lalt"
	call keyboard,iskeydown
	cmp0
	jne l1474
	push "ralt"
	call keyboard,iskeydown
	jmp l1475
l1473:
	push 0
	jmp l1475
l1474:
	push 1
l1475:
	cmp0
	je l1476
	push "enter"
	call keyboard,iskeydown
	jmp l1478
l1476:
	push 0
	jmp l1478
l1477:
	push 1
l1478:
	cmp0
	je l1479
	cthis changefullscreen
	jmp l1472
l1479:
	cthis gmcontrol_keydown
l1472:
	end method
	method mousemove
	call imgpause,isvisible
	cmp0
	je l1481
	ret
l1481:
	cthis gmcontrol_mousemove
	end method
	method mouselclick
	call imgpause,isvisible
	cmp0
	je l1483
	ret
l1483:
	cthis gmcontrol_mouselclick
	end method
	method mouselrel
	call imgpause,isvisible
	cmp0
	je l1485
	ret
l1485:
	cthis gmcontrol_mouselrel
	end method
	method mouserclick
	call imgpause,isvisible
	cmp0
	je l1487
	ret
l1487:
	cthis gmcontrol_mouserclick
	end method
	method mouserrel
	call imgpause,isvisible
	cmp0
	je l1489
	ret
l1489:
	cthis gmcontrol_mouserrel
	end method
	end class

	class classquest
	method init
	new vector,vqst
	push "string"
	call vqst,type
	end method
	method isdone
	localstring $1
	pop $1
	push $1
	call vqst,contains
	ret
	end method
	method notdone
	localstring $1
	pop $1
	push $1
	call vqst,contains
	neg
	ret
	end method
	method done
	localstring $1
	pop $1
	push $1
	call vqst,contains
	neg
	cmp0
	je l1491
	push $1
	call vqst,add
l1491:
	end method
	method reset
	call vqst,free
	end method
	method save
	localstring $1
	pop $1
	push $1
	call vqst,save
	end method
	method load
	localstring $1
	pop $1
	push $1
	call vqst,load
	end method
	end class

	new classquest,clqs
	method winsave
	localstring $1
	pop $1
	new db,_db_win
	push "output.db"
	call _db_win,load
	localdef $2
	call _db_win,addrow
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
	push $2
	push $1
	call _db_win,add
	push "output.db"
	call _db_win,save
	delete _db_win
	end method
	method saveexist
	localstring $1
	pop $1
	cthis getsavepath
	push $1
	pop $b
	popax
	add $a,$b
	call engine,fileexist
	end method
	method vecsave
	localstring $1
	pop $1
	cthis getsavepath
	push $1
	pop $b
	popax
	add $a,$b
	cthis save
	end method
	method vecload
	localstring $1
	pop $1
	cthis getsavepath
	push $1
	pop $b
	popax
	add $a,$b
	cthis load
	end method
	class classfullsave
	method init
	localstring $1
	pop $1
	new db,dbsav
	push "|"
	call dbsav,setseparator
	new string,sstdfile
	push $1
	cthis setfile
	new int,saveonset
	push 0
	pop saveonset
	end method
	method save
	localstring $1
	pop $1
	cthis getsavepath
	push $1
	pop $b
	popax
	add $a,$b
	call dbsav,save
	end method
	method _load
	localstring $1
	pop $1
	push $1
	call engine,fileexist
	cmp0
	je l1493
	call dbsav,free
	push $1
	call dbsav,load
l1493:
	end method
	method load
	localstring $1
	pop $1
	cthis getsavepath
	push $1
	pop $b
	popax
	add $a,$b
	cthis _load
	end method
	method print
	call dbsav,print
	end method
	method printvar
	localstring $1
	pop $1
	cthis getname
	push ".var: "
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	add $a,$b
	push " = "
	pop $b
	popax
	add $a,$b
	push $1
	cthis get
	pop $b
	popax
	add $a,$b
	call engine,print
	end method
	method setfile
	localstring $1
	pop $1
	push $1
	pop sstdfile
	end method
	method stdload
	push sstdfile
	cthis load
	end method
	method stdsave
	push sstdfile
	cthis save
	end method
	method free
	call dbsav,free
	end method
	method set
	localstring $1
	localstring $2
	pop $2
	pop $1
	localint $3
	push $1
	call dbsav,findbyrow
	pop $3
	push $3
	push 0
	cmpjae
	cmp0
	je l1495
	push $3
	push 1
	push $2
	call dbsav,set
	jmp l1494
l1495:
	call dbsav,addrow
	push 1
	pop $b
	popax
	sub $a,$b
	pop $3
	push $3
	push $1
	call dbsav,add
	push $3
	push $2
	call dbsav,add
l1494:
	push saveonset
	cmp0
	je l1497
	cthis stdsave
l1497:
	end method
	method bset
	localstring $1
	pop $1
	push $1
	push 1
	cthis set
	end method
	method get
	localstring $1
	pop $1
	localint $2
	push $1
	call dbsav,findbyrow
	pop $2
	push $2
	push 0
	cmpjae
	cmp0
	je l1499
	push $2
	push 1
	call dbsav,get
	jmp l1498
l1499:
	push "null"
l1498:
	end method
	method is
	localstring $1
	localstring $2
	pop $2
	pop $1
	localint $3
	push $1
	call dbsav,findbyrow
	pop $3
	push $3
	push 0
	cmpjae
	cmp0
	je l1501
	push $3
	push 1
	call dbsav,get
	push $2
	cmpje
	jmp l1500
l1501:
	push 0
l1500:
	end method
	method bis
	localstring $1
	pop $1
	localint $2
	push $1
	call dbsav,findbyrow
	pop $2
	push $2
	push 0
	cmpjae
	cmp0
	je l1503
	push $2
	push 1
	call dbsav,get
	push 0
	cmpjne
	jmp l1502
l1503:
	push 0
l1502:
	end method
	method sbis
	localstring $1
	pop $1
	push 0
	push 1
	call $1,getb
	push "!"
	cmpje
	cmp0
	je l1505
	push 1
	call $1,strsubb
	cthis bis
	neg
	jmp l1504
l1505:
	push $1
	cthis bis
l1504:
	end method
	method bislist
	localstring $1
	pop $1
	new vector,vtmp
	push "string"
	call vtmp,type
	push $1
	push " "
	call vtmp,vecbuildfromstring
	localint $2
	push 0
	pop $2
	call vtmp,size
	cmp0
	je l1507
	call vtmp,first
	call clsave,sbis
	pop $2
	localint $3
	push 1
	pop $3
l1508:
	push $3
	call vtmp,size
	cmpjl
	cmp0
	je l1509
	push $3
	call vtmp,get
	spushs
	push "&"
	cmpst
	jne l1511
	spop $a
	push $2
	cmp0
	je l1512
	push $3
	push 1
	pop $b
	popax
	add $a,$b
	call vtmp,get
	call clsave,sbis
	jmp l1514
l1512:
	push 0
	jmp l1514
l1513:
	push 1
l1514:
	pop $2
	push 2
	popax
	add $3,$a
	pop $3
	jmp l1510
l1511:
	push "|"
	cmpst
	jne l1515
	spop $a
	push $2
	cmp0
	jne l1517
	push $3
	push 1
	pop $b
	popax
	add $a,$b
	call vtmp,get
	call clsave,sbis
	jmp l1518
l1516:
	push 0
	jmp l1518
l1517:
	push 1
l1518:
	pop $2
	push 2
	popax
	add $3,$a
	pop $3
	jmp l1510
l1515:
	spop $a
	add $3,1
	pop $3
l1510:
	jmp l1508
l1509:
l1507:
	delete vtmp
	push $2
	end method
	method bisand2
	localstring $1
	localint $2
	pop $2
	pop $1
	push $1
	push 1
	push $2
	push ""
	cthis bisand
	end method
	method bisand
	localstring $1
	localint $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	localint $5
	push 1
	pop $5
l1519:
	push $2
	push $3
	cmpjle
	cmp0
	je l1520
	push $5
	cmp0
	je l1521
	push $1
	push $2
	pop $b
	popax
	add $a,$b
	push $4
	pop $b
	popax
	add $a,$b
	call clsave,bis
	jmp l1523
l1521:
	push 0
	jmp l1523
l1522:
	push 1
l1523:
	pop $5
	add $2,1
	pop $2
	jmp l1519
l1520:
	push $5
	end method
	method has
	localstring $1
	pop $1
	push $1
	call dbsav,findbyrow
	push 0
	cmpjae
	end method
	method bgo
	localstring $1
	pop $1
	push $1
	cthis bis
	neg
	cmp0
	je l1525
	push $1
	cthis bset
	push 1
	jmp l1524
l1525:
	push 0
l1524:
	end method
	method saveonset=
	localint $1
	pop $1
	push $1
	pop saveonset
	end method
	method remove
	localstring $1
	pop $1
	localint $2
	push $1
	call dbsav,findbyrow
	pop $2
	push $2
	push 0
	cmpjae
	cmp0
	je l1527
	push $2
	call dbsav,removerow
	push saveonset
	cmp0
	je l1529
	cthis stdsave
l1529:
l1527:
	end method
	end class

	class StringChecker
	method init
	end method
	method isdigit
	localstring $1
	pop $1
	call $1,to_i
	push 0
	cmpjne
	cmp0
	jne l1531
	push 0
	push 1
	call $1,getb
	push "0"
	cmpje
	jmp l1532
l1530:
	push 0
	jmp l1532
l1531:
	push 1
l1532:
	end method
	method getint
	localstring $1
	pop $1
	call $1,to_i
	end method
	method getreal
	localstring $1
	pop $1
	call $1,to_r
	end method
	method isreal
	localstring $1
	pop $1
	push $1
	cthis isdigit
	cmp0
	je l1533
	push "."
	call $1,contains
	jmp l1535
l1533:
	push 0
	jmp l1535
l1534:
	push 1
l1535:
	end method
	method isstring
	localstring $1
	pop $1
	push 0
	push 1
	call $1,getb
	push "\""
	cmpje
	end method
	method getstring
	localstring $1
	pop $1
	push 1
	call $1,strsubb
	end method
	end class

	class Script
	method init
	localstring $1
	pop $1
	new db,__dbcode
	new string,__sdb
	new int,__irow
	new int,__icol
	new string,__sreads
	new vector,__vec
	push "string"
	call __vec,type
	new string,__sarg
	new int,__iarg
	new real,__rarg
	new StringChecker,__csc
	push "int"
	new map2,__mp
	localint $2
	push 0
	pop $2
l1536:
	push $2
	push 10
	cmpjl
	cmp0
	je l1537
	jmp l1539
l1538:
	add $2,1
	pop $2
	jmp l1536
l1539:
	push "ARG"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	spop $e
	new string,[$e]
	jmp l1538
l1537:
	push $1
	cthis load
	end method
	method ARG=
	localint $1
	localstring $2
	pop $2
	pop $1
	push "ARG"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push $2
	spop $b
	popax
	mov [$b],$a
	end method
	method ARG
	localint $1
	pop $1
	push "ARG"
	push $1
	pop $b
	popax
	add $a,$b
	popax
	mov $a,[$a]
	psax
	end method
	method load
	localstring $1
	pop $1
	push $1
	push "null"
	cmpje
	cmp0
	je l1541
	ret
l1541:
	push "."
	call $1,contains
	cmp0
	je l1543
	push "__dbcode"
	pop __sdb
	push $1
	call __dbcode,loadbeh
	jmp l1542
l1543:
	push $1
	pop __sdb
l1542:
	call __mp,free
	localint $2
	push 0
	pop $2
l1544:
	push $2
	push __sdb
	spushs
	spop $a
	call [$a],getrowsno
	cmpjl
	cmp0
	je l1545
	jmp l1547
l1546:
	add $2,1
	pop $2
	jmp l1544
l1547:
	push __sdb
	spushs
	push $2
	push 0
	spop $a
	call [$a],get
	push "func"
	cmpje
	cmp0
	je l1549
	push __sdb
	spushs
	push $2
	push 1
	spop $a
	call [$a],get
	push $2
	call __mp,add
l1549:
	jmp l1546
l1545:
	push "init"
	cthis call
	end method
	method get
	localstring $1
	pop $1
	push $1
	popax
	mov $a,[$a]
	psax
	end method
	method isvar
	localstring $1
	pop $1
	push 0
	push 1
	call $1,getb
	push "$"
	cmpje
	end method
	method getvar
	localstring $1
	pop $1
	push 1
	call $1,strsubb
	pop $1
	push $1
	call engine,varexist
	neg
	cmp0
	je l1551
	push $1
	spushs
	spop $e
	new def,[$e]
l1551:
	push $1
	end method
	method isfunc
	localstring $1
	pop $1
	push "."
	call $1,contains
	cmp0
	je l1552
	push $1
	call __csc,isreal
	neg
	jmp l1554
l1552:
	push 0
	jmp l1554
l1553:
	push 1
l1554:
	cmp0
	jne l1556
	push "::"
	call $1,contains
	jmp l1557
l1555:
	push 0
	jmp l1557
l1556:
	push 1
l1557:
	end method
	method getfunc
	localstring $1
	pop $1
	call __vec,free
	push "."
	call $1,contains
	cmp0
	je l1559
	push "."
	call $1,strgetto
	call __vec,add
	push "."
	call $1,strgetfrom
	call __vec,add
	jmp l1558
l1559:
	push "::"
	call $1,strgetto
	call __vec,add
	push "::"
	call $1,strgetfrom
	call __vec,add
l1558:
	end method
	method _get
	add __icol,1
	pop __icol
	push __sdb
	spushs
	push __irow
	push __icol
	push 1
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],get
	end method
	method isnext
	push __icol
	push __sdb
	spushs
	push __irow
	spop $a
	call [$a],getcolsno
	cmpjl
	cmp0
	je l1561
	push __sdb
	spushs
	push __irow
	push __icol
	spop $a
	call [$a],get
	pop __sreads
	push 1
	jmp l1560
l1561:
	push 0
l1560:
	end method
	method perror
	localint $1
	localstring $2
	pop $2
	pop $1
	push $1
	cmp0
	je l1563
	push "error: "
	push $2
	pop $b
	popax
	add $a,$b
	call engine,print
l1563:
	end method
	method interpcall
	localstring $1
	pop $1
	push $1
	cthis getfunc
	localstring $2
	push 0
	call __vec,get
	pop $2
	push 0
	push 1
	call $2,getb
	push "*"
	cmpje
	cmp0
	je l1565
	push 1
	call $2,strsubb
	popax
	mov $a,[$a]
	psax
	pop $2
l1565:
	localstring $3
	push 1
	call __vec,get
	pop $3
	push 0
	push 1
	call $3,getb
	push "*"
	cmpje
	cmp0
	je l1567
	push 1
	call $3,strsubb
	popax
	mov $a,[$a]
	psax
	pop $2
l1567:
	call __vec,free
	add __icol,1
	pop __icol
	localstring $4
	cthis _get
	pop $4
l1568:
	push $4
	push ")"
	cmpjne
	cmp0
	je l1569
	push $4
	cthis getexpr
	cthis _get
	pop $4
	jmp l1568
l1569:
	push "::"
	call $1,contains
	cmp0
	je l1571
	push $2
	spushs
	push $3
	spushs
	spop $d
	spop $a
	 clparent [$a],[$d]
	jmp l1570
l1571:
	push $2
	push "this"
	cmpje
	cmp0
	je l1573
	push "null"
	pop $2
l1573:
	push $2
	push $3
	cthis callfun
l1570:
	end method
	method getvname
	localstring $1
	pop $1
	push $1
	cthis isvar
	cmp0
	je l1575
	push $1
	cthis getvar
	pop $1
	jmp l1574
l1575:
	push $1
	call __csc,isreal
	cmp0
	je l1577
	call $1,to_r
	pop __rarg
	push "__rarg"
	pop $1
	jmp l1576
l1577:
	push $1
	call __csc,isdigit
	cmp0
	je l1579
	push $1
	pop __iarg
	push "__iarg"
	pop $1
	jmp l1578
l1579:
	push $1
	call __csc,isstring
	cmp0
	je l1581
	push $1
	call __csc,getstring
	pop __sarg
	push "__sarg"
	pop $1
l1581:
l1578:
l1576:
l1574:
	push $1
	end method
	method isscriptfun
	localstring $1
	pop $1
	push "->"
	call $1,contains
	end method
	method getscriptfun
	localstring $1
	pop $1
	push 2
	call $1,strsubb
	end method
	method getexpr
	localstring $1
	pop $1
	push $1
	call __csc,isstring
	cmp0
	je l1583
	push $1
	cthis getvname
	spushs
	spop $a
	call [$a],get
	jmp l1582
l1583:
	push $1
	cthis isfunc
	cmp0
	je l1585
	push $1
	cthis interpcall
	jmp l1584
l1585:
	push $1
	cthis isscriptfun
	cmp0
	je l1587
	localint $2
	push __irow
	pop $2
	localint $3
	push __icol
	pop $3
	push $1
	cthis getscriptfun
	cthis call
	push $2
	pop __irow
	push $3
	pop __icol
	jmp l1586
l1587:
	push $1
	cthis getvname
	spushs
	spop $a
	call [$a],get
l1586:
l1584:
l1582:
	end method
	method cmp
	localint $1
	push 0
	pop $1
	localdef $2
	cthis _get
	cthis getexpr
	pop $2
	localstring $3
	cthis _get
	pop $3
	localdef $4
	cthis _get
	cthis getexpr
	pop $4
	push $3
	spushs
	push "=="
	cmpst
	jne l1589
	spop $a
	push $2
	push $4
	cmpje
	pop $1
	jmp l1588
l1589:
	push "!="
	cmpst
	jne l1590
	spop $a
	push $2
	push $4
	cmpjne
	pop $1
	jmp l1588
l1590:
	push "<"
	cmpst
	jne l1591
	spop $a
	push $2
	push $4
	cmpjl
	pop $1
	jmp l1588
l1591:
	push ">"
	cmpst
	jne l1592
	spop $a
	push $2
	push $4
	cmpja
	pop $1
	jmp l1588
l1592:
	push "<="
	cmpst
	jne l1593
	spop $a
	push $2
	push $4
	cmpjle
	pop $1
	jmp l1588
l1593:
	push ">="
	cmpst
	jne l1594
	spop $a
	push $2
	push $4
	cmpjae
	pop $1
	jmp l1588
l1594:
	spop $a
l1588:
	cthis _get
	pop $3
	push $3
	push "||"
	cmpje
	cmp0
	je l1596
	push $1
	cmp0
	jne l1598
	cthis cmp
	jmp l1599
l1597:
	push 0
	jmp l1599
l1598:
	push 1
l1599:
	jmp l1595
l1596:
	push $3
	push "&&"
	cmpje
	cmp0
	je l1601
	push $1
	cmp0
	je l1602
	cthis cmp
	jmp l1604
l1602:
	push 0
	jmp l1604
l1603:
	push 1
l1604:
	jmp l1600
l1601:
	push $1
l1600:
l1595:
	end method
	method containsfun
	localstring $1
	pop $1
	push $1
	call __mp,contains
	end method
	method addscript
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	push A
	push "_script_eval"
	cthis getname
	push "_smetscript_"
	push $2
	pop $b
	popax
	add $a,$b
	push $3
	spop $a
	call [$a],vars2
	push $1
	spushs
	push $2
	push "Script0"
	spop $a
	call [$a],addmethod
	end method
	method Script0
	push _script_eval
	spushs
	push "_smetscript_"
	cthis methodname
	pop $b
	popax
	add $a,$b
	popax
	mov $a,[$a]
	psax
	spop $a
	call [$a],call
	end method
	method call
	localstring $1
	pop $1
	push $1
	call __mp,contains
	neg
	cmp0
	je l1606
	ret
l1606:
	push $1
	call __mp,get
	pop __irow
	add __irow,1
	pop __irow
	push 0
	pop __icol
	localint $2
	push 1
	pop $2
	localint $3
	push 0
	pop $3
	localint $4
	localint $5
	push 0
	pop $5
	localint $6
	push 0
	pop $6
	localint $7
	localstring $8
	localstring $9
	localstring $10
	localint $11
	localint $12
	localint $13
l1607:
	push $2
	cmp0
	je l1608
	push 0
	pop __icol
	cthis _get
	pop $8
	push $8
	spushs
	push "new"
	cmpst
	jne l1610
	spop $a
	cthis _get
	pop $8
	cthis _get
	pop $9
	push 1
	call $9,strsubb
	pop $9
	cthis isnext
	cmp0
	je l1612
	push __sreads
	push "["
	cmpje
	cmp0
	je l1614
	add __icol,1
	pop __icol
	cthis _get
	pop $11
	push 0
	pop $12
l1615:
	push $12
	push $11
	cmpjl
	cmp0
	je l1616
	jmp l1618
l1617:
	add $12,1
	pop $12
	jmp l1615
l1618:
	push $8
	spushs
	push $9
	push $12
	pop $b
	popax
	add $a,$b
	spushs
	spop $e
	spop $d
	new [$d],[$e]
	jmp l1617
l1616:
	jmp l1613
l1614:
	add __icol,1
	pop __icol
l1619:
	cthis isnext
	cmp0
	je l1620
	push __sreads
	push ")"
	cmpjne
	jmp l1622
l1620:
	push 0
	jmp l1622
l1621:
	push 1
l1622:
	cmp0
	je l1623
	cthis _get
	cthis getexpr
	jmp l1619
l1623:
	push $8
	spushs
	push $9
	spushs
	spop $e
	spop $d
	new [$d],[$e]
l1613:
	jmp l1611
l1612:
	push $8
	spushs
	push $9
	spushs
	spop $e
	spop $d
	new [$d],[$e]
l1611:
	add __irow,1
	pop __irow
	jmp l1609
l1610:
	push "delete"
	cmpst
	jne l1624
	spop $a
	cthis _get
	cthis getvar
	spushs
	spop $d
	delete [$d]
	add __irow,1
	pop __irow
	jmp l1609
l1624:
	push $8
	push "if"
	cmpje
	cmp0
	jne l1626
	push $6
	cmp0
	jne l1626
	push $5
	jmp l1627
l1625:
	push 0
	jmp l1627
l1626:
	push 1
l1627:
	cmp0
	je l1629
	push $8
	jmp l1628
l1629:
	push ""
l1628:
	cmpst
	jne l1630
	spop $a
	add __icol,1
	pop __icol
	cthis cmp
	pop $4
	push $8
	push "if"
	cmpje
	cmp0
	je l1632
	push 1
	pop $3
l1632:
	push 0
	pop $6
	push 0
	pop $5
	add __irow,1
	pop __irow
	push $4
	neg
	cmp0
	je l1634
	push 1
	pop $12
l1635:
	push $12
	cmp0
	je l1636
	push __sdb
	spushs
	push __irow
	push 0
	spop $a
	call [$a],get
	pop $8
	push $8
	push "else"
	cmpje
	cmp0
	jne l1639
	push $8
	push "elif"
	cmpje
	cmp0
	jne l1639
	push $8
	push "fi"
	cmpje
	cmp0
	jne l1639
	push $8
	push "done"
	cmpje
	jmp l1640
l1638:
	push 0
	jmp l1640
l1639:
	push 1
l1640:
	cmp0
	je l1641
	push 0
	pop $12
	jmp l1637
l1641:
	add __irow,1
	pop __irow
l1637:
	jmp l1635
l1636:
l1634:
	jmp l1609
l1630:
	push "else"
	cmpst
	jne l1642
	spop $a
	push $3
	neg
	push "else without if"
	cthis perror
	add __irow,1
	pop __irow
	push $4
	cmp0
	je l1644
l1645:
	push __sdb
	spushs
	push __irow
	push 0
	spop $a
	call [$a],get
	push "fi"
	cmpjne
	cmp0
	je l1646
	add __irow,1
	pop __irow
	jmp l1645
l1646:
l1644:
	jmp l1609
l1642:
	push "fi"
	cmpst
	jne l1647
	spop $a
	push $3
	neg
	push "fi without if"
	cthis perror
	push 0
	pop $3
	push 0
	pop $4
	push 0
	pop $6
	add __irow,1
	pop __irow
	jmp l1609
l1647:
	push "elif"
	cmpst
	jne l1648
	spop $a
	push $4
	cmp0
	je l1650
	add __irow,1
	pop __irow
l1651:
	push __sdb
	spushs
	push __irow
	push 0
	spop $a
	call [$a],get
	push "fi"
	cmpjne
	cmp0
	je l1652
	add __irow,1
	pop __irow
	jmp l1651
l1652:
	jmp l1649
l1650:
	push 1
	pop $6
l1649:
	jmp l1609
l1648:
	push "end"
	cmpst
	jne l1653
	spop $a
	push 0
	pop $2
	jmp l1609
l1653:
	push "while"
	cmpst
	jne l1654
	spop $a
	push __irow
	pop $7
	push 1
	pop $5
	jmp l1609
l1654:
	push "done"
	cmpst
	jne l1655
	spop $a
	push $4
	cmp0
	je l1657
	push $7
	pop __irow
	jmp l1656
l1657:
	add __irow,1
	pop __irow
l1656:
	jmp l1609
l1655:
	push "print"
	cmpst
	jne l1658
	spop $a
	push ""
	pop $8
l1659:
	cthis isnext
	cmp0
	je l1660
	cthis _get
	cthis getexpr
	popax
	add $8,$a
	pop $8
	jmp l1659
l1660:
	push $8
	call engine,print
	add __irow,1
	pop __irow
	jmp l1609
l1658:
	push "return"
	cmpst
	jne l1661
	spop $a
	cthis isnext
	cmp0
	je l1663
	push __sreads
	cthis getexpr
l1663:
	ret
	jmp l1609
l1661:
	spop $a
	push 0
	push 1
	call $8,getb
	push "$"
	cmpje
	cmp0
	je l1665
	push $8
	cthis getvar
	pop $8
	add __icol,1
	pop __icol
	push $8
	spushs
	cthis _get
	cthis getexpr
	spop $b
	popax
	mov [$b],$a
l1666:
	cthis isnext
	cmp0
	je l1667
	add __icol,1
	pop __icol
	localdef $14
	cthis _get
	cthis getexpr
	pop $14
	push __sreads
	spushs
	push "+"
	cmpst
	jne l1669
	spop $a
	push $8
	spushs
	push $14
	popax
	spop $b
	add [$b],$a
	pop [$b]
	jmp l1668
l1669:
	push "-"
	cmpst
	jne l1670
	spop $a
	push $8
	spushs
	push $14
	popax
	spop $b
	sub [$b],$a
	pop [$b]
	jmp l1668
l1670:
	push "*"
	cmpst
	jne l1671
	spop $a
	push $8
	spushs
	push $14
	popax
	spop $b
	mul [$b],$a
	pop [$b]
	jmp l1668
l1671:
	push "/"
	cmpst
	jne l1672
	spop $a
	push $8
	spushs
	push $14
	popax
	spop $b
	div [$b],$a
	mov [$b],$a
	jmp l1668
l1672:
	push "%"
	cmpst
	jne l1673
	spop $a
	push $8
	spushs
	push $14
	popax
	spop $b
	div [$b],$a
	mov [$b],$d
	jmp l1668
l1673:
	spop $a
l1668:
	jmp l1666
l1667:
	jmp l1664
l1665:
	push $8
	cthis getexpr
l1664:
	add __irow,1
	pop __irow
l1609:
	push __irow
	push __sdb
	spushs
	spop $a
	call [$a],getrowsno
	cmpjae
	cmp0
	je l1675
	push 1
	push "function "
	push $1
	pop $b
	popax
	add $a,$b
	push " not finished!"
	pop $b
	popax
	add $a,$b
	cthis perror
	push 0
	pop $2
l1675:
	jmp l1607
l1608:
	end method
	end class

	method animaloader_load
	localstring $1
	pop $1
	new db,_dbanl
	push $1
	cthis getpath
	call _dbanl,loadbeh
	localstring $2
	localstring $3
	localstring $4
	localint $5
	localint $6
	push 0
	pop $6
l1676:
	push $6
	call _dbanl,getrowsno
	cmpjl
	cmp0
	je l1677
	jmp l1679
l1678:
	add $6,1
	pop $6
	jmp l1676
l1679:
	push $6
	call _dbanl,getcolsno
	push 0
	cmpja
	cmp0
	je l1681
	push 0
	pop $5
	push $6
	push $5
	call _dbanl,get
	spushs
	push "an:"
	cmpst
	jne l1683
	spop $a
	add $5,1
	pop $5
	push $6
	push $5
	call _dbanl,get
	pop $2
	add $5,1
	pop $5
	push ".pyz"
	call $2,contains
	cmp0
	je l1685
	push "an"
	push ".pyz"
	call $2,strsubes
	pop $b
	popax
	add $a,$b
	pop $3
	push $3
	push $2
	push 0
	cthis newanima
	jmp l1684
l1685:
	push $6
	push $5
	call _dbanl,get
	push $2
	cthis copyanima
	add $5,1
	pop $5
l1684:
	localint $7
	push $5
	pop $7
l1686:
	push $7
	push $6
	call _dbanl,getcolsno
	cmpjl
	cmp0
	je l1687
	jmp l1689
l1688:
	add $7,1
	pop $7
	jmp l1686
l1689:
	push $6
	push $7
	call _dbanl,get
	spushs
	push "-z"
	cmpst
	jne l1691
	spop $a
	add $7,1
	pop $7
	push $3
	spushs
	push $6
	push $7
	call _dbanl,get
	spop $a
	call [$a],setz
	jmp l1690
l1691:
	push "-hide"
	cmpst
	jne l1692
	spop $a
	push $3
	spushs
	spop $a
	call [$a],hide
	jmp l1690
l1692:
	push "-opacityframe"
	cmpst
	jne l1693
	spop $a
	push $3
	spushs
	spop $a
	call [$a],anopacityframe
	jmp l1690
l1693:
	push "-nplay"
	cmpst
	jne l1694
	spop $a
	add $7,1
	pop $7
	push $3
	spushs
	push $6
	push $7
	call _dbanl,get
	spushs
	spop $h
	call $h,to_i
	spop $a
	call [$a],play
	jmp l1690
l1694:
	push "-play"
	cmpst
	jne l1695
	spop $a
	add $7,1
	pop $7
	push $3
	spushs
	push $6
	push $7
	call _dbanl,get
	spop $a
	call [$a],play
	jmp l1690
l1695:
	push "-delay"
	cmpst
	jne l1696
	spop $a
	add $7,1
	pop $7
	push $3
	spushs
	push $6
	push $7
	call _dbanl,get
	spop $a
	call [$a],setdelay
	jmp l1690
l1696:
	push "-drawmode"
	cmpst
	jne l1697
	spop $a
	push $6
	push $7
	call _dbanl,get
	pop $2
	add $7,1
	pop $7
	push $2
	push "lineardodge"
	cmpje
	cmp0
	je l1699
	push $3
	spushs
	push 1
	spop $a
	call [$a],setdrawmode
l1699:
	jmp l1690
l1697:
	push "-hideonstart"
	cmpst
	jne l1700
	spop $a
	push $3
	spushs
	spop $a
	call [$a],anhideonsetframe
	jmp l1690
l1700:
	spop $a
	push $3
	push "_dbanl"
	push $6
	push $7
	cthis animaloader_an
	pop $7
l1690:
	jmp l1688
l1687:
	jmp l1682
l1683:
	spop $a
l1682:
l1681:
	jmp l1678
l1677:
	end method
	method animaloader_an
	localstring $1
	localstring $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $4
	end method
	method gmbuildroto
	localstring $1
	localreal $2
	localreal $3
	localreal $4
	localint $5
	localint $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	localint $7
	push $1
	spushs
	spop $a
	call [$a],getpx
	pop $7
	localint $8
	push $1
	spushs
	spop $a
	call [$a],getpy
	pop $8
	push $1
	spushs
	push 1
	push 0
	spop $a
	call [$a],setframe
	push $1
	spushs
	push $7
	push $8
	spop $a
	call [$a],ansetbpos
	localstring $9
	localstring $10
	localreal $11
	push 0.0
	pop $11
	call $4,abs
	pop $4
	push 0
	pop $7
	localstring $12
	push "null"
	pop $12
	localreal $13
	push $3
	pop $13
l1701:
	push $13
	push $2
	cmpjle
	cmp0
	je l1702
	jmp l1704
l1703:
	push $11
	popax
	add $13,$a
	pop $13
	jmp l1701
l1704:
	localreal $14
	push $13
	push $3
	pop $b
	popax
	sub $a,$b
	push $2
	push $3
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	div $a,$b
	psax
	spushs
	spop $h
	call $h,abs
	pop $14
	push 0.1
	call $14,_rin1
	cmp0
	je l1706
	push 0.4
	push $4
	pop $b
	popax
	mul $a,$b
	pop $11
	jmp l1705
l1706:
	push 0.2
	call $14,_rin1
	cmp0
	je l1708
	push 0.8
	push $4
	pop $b
	popax
	mul $a,$b
	pop $11
	jmp l1707
l1708:
	push $4
	pop $11
l1707:
l1705:
	push "_imgroto"
	push $7
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	add $a,$b
	pop $10
	push $10
	spushs
	spop $e
	new img,[$e]
	push $10
	spushs
	push $1
	push $13
	push 1.0
	push 1.0
	spop $a
	call [$a],buildrotozoom
l1709:
	push $12
	push "null"
	cmpjne
	cmp0
	je l1710
	push $10
	spushs
	spop $a
	call [$a],getw
	push $12
	spushs
	spop $a
	call [$a],getw
	cmpje
	cmp0
	je l1710
	push $10
	spushs
	spop $a
	call [$a],geth
	push $12
	spushs
	spop $a
	call [$a],geth
	cmpje
	cmp0
	je l1710
	push $10
	spushs
	spop $a
	call [$a],getpx
	push $12
	spushs
	spop $a
	call [$a],getpx
	cmpje
	cmp0
	je l1710
	push $10
	spushs
	spop $a
	call [$a],getpy
	push $12
	spushs
	spop $a
	call [$a],getpy
	cmpje
	jmp l1712
l1710:
	push 0
	jmp l1712
l1711:
	push 1
l1712:
	cmp0
	je l1713
	push 0.2
	pop $14
	push $14
	push $11
	pop $b
	popax
	mul $a,$b
	popax
	add $13,$a
	pop $13
	push $14
	push 1.0
	pop $b
	popax
	add $a,$b
	popax
	mul $11,$a
	pop $11
	push $10
	spushs
	push $1
	push $13
	push 1.0
	push 1.0
	spop $a
	call [$a],buildrotozoom
	jmp l1709
l1713:
	push $10
	spushs
	push $1
	spushs
	spop $a
	call [$a],getz
	spop $a
	call [$a],setz
	push $10
	spushs
	spop $a
	call [$a],hide
	push $6
	cmp0
	je l1715
	push $10
	spushs
	spop $a
	call [$a],rle
l1715:
	push $10
	pop $12
	add $7,1
	pop $7
	jmp l1703
l1702:
	push "_timroto"
	push $1
	pop $b
	popax
	add $a,$b
	pop $9
	push $9
	push "global10"
	cthis cycle=
	push $9
	spushs
	push $5
	spop $a
	call [$a],setcycle
	push $9
	spushs
	push A
	push "san"
	push $1
	push "ileimgs"
	push $7
	push "slastimg"
	push $10
	push "idimg"
	push 0
	push "dir"
	push 1
	spop $a
	call [$a],vars2
	push $1
	spushs
	spop $a
	call [$a],hide
	push "_imgroto0"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],show
	push $9
	spushs
	spop $a
	call [$a],play
	end method
	method global10
	push slastimg
	spushs
	spop $a
	call [$a],hide
	push "_imgroto"
	push idimg
	pop $b
	popax
	add $a,$b
	push san
	pop $b
	popax
	add $a,$b
	pop slastimg
	push slastimg
	spushs
	spop $a
	call [$a],show
	push idimg
	push dir
	pop $b
	popax
	add $a,$b
	pop idimg
	push idimg
	push 0
	cmpjl
	cmp0
	je l1717
	push 0
	pop idimg
	push 1
	pop dir
	jmp l1716
l1717:
	push idimg
	push ileimgs
	cmpjae
	cmp0
	je l1719
	push ileimgs
	push 1
	pop $b
	popax
	sub $a,$b
	pop idimg
	push 1
	popax
	sub 0,$a
	pop dir
l1719:
l1716:
	cthis play
	end method
	method transparent
	push 0
	push 0
	push 0
	push 0
	ret
	end method
	method red
	push 255
	push 0
	push 0
	ret
	end method
	method green
	push 0
	push 255
	push 0
	ret
	end method
	method blue
	push 0
	push 0
	push 255
	ret
	end method
	method white
	push 255
	push 255
	push 255
	ret
	end method
	method black
	push 0
	push 0
	push 0
	ret
	end method
	method grey
	localint $1
	pop $1
	push $1
	push $1
	push $1
	ret
	end method
	method yellow
	push 255
	push 255
	push 0
	ret
	end method
	class Color
	method init
	push A
	push "r"
	push "g"
	push "b"
	push "a"
	cthis vars
	end method
	method operator=
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],get
	cthis set
	end method
	method img=
	localdef $1
	pop $1
	push $1
	spushs
	push $1
	clparent classansearcher,firstnotrx1y
	spop $a
	call [$a],getrgba
	pop a
	pop b
	pop g
	pop r
	end method
	method get
	push r
	push g
	push b
	push a
	ret
	end method
	method set
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	pop a
	pop b
	pop g
	pop r
	end method
	method rgb=
	localint $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	pop b
	pop g
	pop r
	end method
	method rgb
	push r
	push g
	push b
	ret
	end method
	method print
	push "Color::"
	cthis getname
	pop $b
	popax
	add $a,$b
	push " (r,g,b,a) = ("
	pop $b
	popax
	add $a,$b
	push r
	pop $b
	popax
	add $a,$b
	push ","
	pop $b
	popax
	add $a,$b
	push g
	pop $b
	popax
	add $a,$b
	push ","
	pop $b
	popax
	add $a,$b
	push b
	pop $b
	popax
	add $a,$b
	push ","
	pop $b
	popax
	add $a,$b
	push a
	pop $b
	popax
	add $a,$b
	push ")"
	pop $b
	popax
	add $a,$b
	call engine,print
	end method
	end class

	class classasker
	parent newvars
	method init
	clparent newvars,init
	new string,sfuncyes
	push "null"
	pop sfuncyes
	new string,sfuncno
	push "null"
	pop sfuncno
	new string,ssndask
	new string,ssndyes
	new string,ssndno
	new classsound,clsnd
	end method
	method reset
	push "null"
	pop sfuncyes
	push "null"
	pop sfuncno
	call buts,resetall
	end method
	method setfuncs
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	pop sfuncyes
	push $2
	pop sfuncno
	end method
	method fxonmovon
	localstring $1
	pop $1
	push $1
	call buts,sfxonmovon
	end method
	method setmouse
	localstring $1
	pop $1
	push "yes"
	push $1
	call buts,newmouse
	push "no"
	push $1
	call buts,newmouse
	end method
	method load
	localstring $1
	localint $2
	pop $2
	pop $1
	new classbutton,buts
	push $1
	push $2
	push "null"
	call buts,build
	call engine,actclassname
	push "butclick"
	call buts,transclickfunc
	call engine,actclassname
	push "butmovon"
	call buts,transmovonfunc
	call buts,disableall
	end method
	method ask
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $4
	push $5
	cthis setfuncs
	push $1
	push $2
	push $3
	cthis ask2
	end method
	method ask2
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	pop ssndask
	push $2
	pop ssndyes
	push $3
	pop ssndno
	call gameapi,pause
	call buts,benableall
	push "bkg"
	call buts,pause
	call clsnd,creset
	push $1
	call clsnd,cbplay
	cthis getname
	push "_ask"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method butmovon
	localstring $1
	pop $1
	push $1
	push "yes"
	cmpje
	cmp0
	je l1721
	push ssndask
	spushs
	push 0
	spop $a
	call [$a],stop
	push ssndyes
	call clsnd,cbplay
	jmp l1720
l1721:
	push $1
	push "no"
	cmpje
	cmp0
	je l1723
	push ssndask
	spushs
	push 0
	spop $a
	call [$a],stop
	push ssndno
	call clsnd,cbplay
l1723:
l1720:
	end method
	method butclick
	localstring $1
	pop $1
	push $1
	push "bkg"
	cmpje
	cmp0
	je l1725
	ret
l1725:
	call gameapi,resume
	call buts,disableall
	push 0
	call clsnd,cactsndstop
	push $1
	push "yes"
	cmpje
	cmp0
	je l1727
	push sfuncyes
	push "null"
	cmpjne
	jmp l1729
l1727:
	push 0
	jmp l1729
l1728:
	push 1
l1729:
	cmp0
	je l1730
	push sfuncyes
	spushs
	spop $d
	cthis [$d]
	cthis getname
	push "_yes"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	jmp l1726
l1730:
	push $1
	push "no"
	cmpje
	cmp0
	je l1732
	push sfuncno
	push "null"
	cmpjne
	jmp l1734
l1732:
	push 0
	jmp l1734
l1733:
	push 1
l1734:
	cmp0
	je l1735
	push sfuncno
	spushs
	spop $d
	cthis [$d]
	cthis getname
	push "_no"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
l1735:
l1726:
	end method
	method disabled
	call buts,disabled
	end method
	method setcursorpos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call buts,setcursorpos
	end method
	end class

	class classplacepointer
	method init
	new anima,anpointer
	push "onfinish"
	push "classplacepointer0"
	call anpointer,addmethod
	new int,_iz
	push 1000
	pop _iz
	end method
	method classplacepointer0
	push 1
	popax
	sub 0,$a
	cthis play
	end method
	method load
	localstring $1
	pop $1
	push $1
	call anpointer,load
	push _iz
	cthis setz
	call anpointer,hide
	end method
	method setz
	localint $1
	pop $1
	push $1
	pop _iz
	push $1
	call anpointer,setz
	end method
	method stop
	push 0
	call anpointer,stop
	end method
	method stoph
	push 0
	call anpointer,stop
	call anpointer,hide
	end method
	method show
	localint $1
	localint $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	call anpointer,setpos
	push $3
	call anpointer,play
	end method
	method move
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	call anpointer,move
	end method
	method showob
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getcx
	push $1
	spushs
	spop $a
	call [$a],getcy
	push $2
	cthis show
	end method
	method showpob
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getpx
	push $1
	spushs
	spop $a
	call [$a],getpy
	push $2
	cthis show
	end method
	end class

	class SimpleCounter
	method init
	localint $1
	pop $1
	push "length"
	push $1
	cthis var2
	new int,iid
	push 0
	pop iid
	end method
	method next
	push iid
	push 1
	pop $b
	popax
	add $a,$b
	push length
	pop $b
	popax
	div $a,$b
	push $d
	pop iid
	push iid
	end method
	method set
	localint $1
	pop $1
	push $1
	pop iid
	end method
	method reset
	push 0
	pop iid
	end method
	method get
	push iid
	end method
	end class

	module clstrdigit
	method init
	end method
	method getdigit
	localint $1
	localint $2
	pop $2
	pop $1
	localstring $3
	push $1
	pop $3
l1736:
	call $3,length
	push $2
	cmpjl
	cmp0
	je l1737
	push "0"
	push $3
	pop $b
	popax
	add $a,$b
	pop $3
	jmp l1736
l1737:
	push $3
	ret
	end method
	method gettime
	localint $1
	localstring $2
	pop $2
	pop $1
	push $1
	cthis geth
	push $1
	cthis getm
	push $1
	cthis gets
	push "h"
	call $2,contains
	push "m"
	call $2,contains
	push "s"
	call $2,contains
	cthis getstime
	ret
	end method
	method getstime
	localint $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	localstring $7
	push ""
	pop $7
	push $4
	cmp0
	je l1739
	push $1
	popax
	add $7,$a
	pop $7
l1739:
	push $5
	cmp0
	je l1741
	push $4
	cmp0
	je l1743
	push ":"
	jmp l1742
l1743:
	push ""
l1742:
	push $2
	push 2
	cthis getdigit
	pop $b
	popax
	add $a,$b
	popax
	add $7,$a
	pop $7
l1741:
	push $6
	cmp0
	je l1745
	push $4
	cmp0
	jne l1747
	push $5
	jmp l1748
l1746:
	push 0
	jmp l1748
l1747:
	push 1
l1748:
	cmp0
	je l1750
	push ":"
	jmp l1749
l1750:
	push ""
l1749:
	push $3
	push 2
	cthis getdigit
	pop $b
	popax
	add $a,$b
	popax
	add $7,$a
	pop $7
l1745:
	push $7
	ret
	end method
	method geth
	localint $1
	pop $1
	push $1
	push 3600
	pop $b
	popax
	div $a,$b
	psax
	ret
	end method
	method getm
	localint $1
	pop $1
	push $1
	push 60
	pop $b
	popax
	div $a,$b
	psax
	push 60
	pop $b
	popax
	div $a,$b
	push $d
	ret
	end method
	method gets
	localint $1
	pop $1
	push $1
	push 60
	pop $b
	popax
	div $a,$b
	push $d
	ret
	end method
	method getns
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	cthis gets
	push $2
	cthis getdigit
	ret
	end method
	method getnm
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	cthis getm
	push $2
	cthis getdigit
	ret
	end method
	method getbinary
	localint $1
	pop $1
	localstring $2
	push ""
	pop $2
l1751:
	push $1
	push 0
	cmpja
	cmp0
	je l1752
	push ""
	push $1
	push 2
	pop $b
	popax
	div $a,$b
	push $d
	pop $b
	popax
	add $a,$b
	push $2
	pop $b
	popax
	add $a,$b
	pop $2
	push 2
	popax
	div $1,$a
	mov $1,$a
	jmp l1751
l1752:
	push $2
	ret
	end method
	method bintohex
	localstring $1
	pop $1
	localstring $2
	call $1,length
	push 4
	pop $b
	popax
	div $a,$b
	push $d
	spushs
	push 3
	cmpst
	jne l1754
	spop $a
	push "0"
	jmp l1753
l1754:
	push 2
	cmpst
	jne l1755
	spop $a
	push "00"
	jmp l1753
l1755:
	push 1
	cmpst
	jne l1756
	spop $a
	push "000"
	jmp l1753
l1756:
	spop $a
	push ""
l1753:
	pop $2
	push $2
	push $1
	pop $b
	popax
	add $a,$b
	pop $1
	push ""
	pop $2
	localint $3
	push 0
	pop $3
l1757:
	push $3
	call $1,length
	cmpjl
	cmp0
	je l1758
	jmp l1760
l1759:
	push 4
	popax
	add $3,$a
	pop $3
	jmp l1757
l1760:
	push $3
	push 4
	call $1,getb
	spushs
	push "0000"
	cmpst
	jne l1762
	spop $a
	push "0"
	jmp l1761
l1762:
	push "0001"
	cmpst
	jne l1763
	spop $a
	push "1"
	jmp l1761
l1763:
	push "0010"
	cmpst
	jne l1764
	spop $a
	push "2"
	jmp l1761
l1764:
	push "0011"
	cmpst
	jne l1765
	spop $a
	push "3"
	jmp l1761
l1765:
	push "0100"
	cmpst
	jne l1766
	spop $a
	push "4"
	jmp l1761
l1766:
	push "0101"
	cmpst
	jne l1767
	spop $a
	push "5"
	jmp l1761
l1767:
	push "0110"
	cmpst
	jne l1768
	spop $a
	push "6"
	jmp l1761
l1768:
	push "0111"
	cmpst
	jne l1769
	spop $a
	push "7"
	jmp l1761
l1769:
	push "1000"
	cmpst
	jne l1770
	spop $a
	push "8"
	jmp l1761
l1770:
	push "1001"
	cmpst
	jne l1771
	spop $a
	push "9"
	jmp l1761
l1771:
	push "1010"
	cmpst
	jne l1772
	spop $a
	push "A"
	jmp l1761
l1772:
	push "1011"
	cmpst
	jne l1773
	spop $a
	push "B"
	jmp l1761
l1773:
	push "1100"
	cmpst
	jne l1774
	spop $a
	push "C"
	jmp l1761
l1774:
	push "1101"
	cmpst
	jne l1775
	spop $a
	push "D"
	jmp l1761
l1775:
	push "1110"
	cmpst
	jne l1776
	spop $a
	push "E"
	jmp l1761
l1776:
	push "1111"
	cmpst
	jne l1777
	spop $a
	push "F"
	jmp l1761
l1777:
	spop $a
l1761:
	popax
	add $2,$a
	pop $2
	jmp l1759
l1758:
	push $2
	end method
	end module

	method getbinary
	cthis get
	clparent clstrdigit,getbinary
	end method
	method getdigit
	localint $1
	pop $1
	cthis get
	push $1
	clparent clstrdigit,getdigit
	end method
	method getbindigit
	localint $1
	pop $1
	cthis getbinary
	push $1
	clparent clstrdigit,getdigit
	end method
	class Text
	method init
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	localint $7
	localint $8
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push "null"
	cmpje
	cmp0
	je l1779
	push sgmfontfile
	pop $1
l1779:
	push ".ttf"
	call $1,contains
	cmp0
	je l1781
	new font,_fnt
	push $1
	push $2
	call _fnt,load
	push "_fnt"
	pop $1
l1781:
	new int,iR
	push $3
	pop iR
	new int,iG
	push $4
	pop iG
	new int,iB
	push $5
	pop iB
	new int,iFontSize
	push $2
	pop iFontSize
	new text,txt
	push $1
	call txt,setfont
	push $8
	call txt,setz
	push $6
	push $7
	call txt,setpos
	call txt,show
	new text,txtbg
	call txtbg,hide
	end method
	method hide
	call txt,hide
	end method
	method show
	call txt,show
	end method
	method setpos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call txt,setpos
	end method
	method set
	localstring $1
	pop $1
	push $1
	call txt,set
	push iR
	push iG
	push iB
	call txt,createtxt
	end method
	method get
	call txt,get
	ret
	end method
	method setbg
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	call txt,getpx
	push iFontSize
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call txt,getpy
	push iFontSize
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call txt,getw
	push iFontSize
	pop $b
	popax
	add $a,$b
	push iFontSize
	push 2
	pop $b
	popax
	mul $a,$b
	push $1
	push $2
	push $3
	push $4
	call txtbg,setbkg
	push 1
	push 255
	push 255
	push 255
	push 128
	call txtbg,setborders
	call txtbg,show
	end method
	method operator=
	localstring $1
	pop $1
	push $1
	cthis set
	end method
	method move
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call txt,move
	end method
	end class

	class Cypher
	parent Text
	method init
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	localint $7
	localint $8
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	push $5
	push $6
	push $7
	push $8
	clparent Text,init
	push 0
	cthis set
	end method
	method add
	localint $1
	pop $1
	push $1
	cthis get
	pop $b
	popax
	add $a,$b
	cthis set
	end method
	method iget
	cthis get
	spushs
	spop $h
	call $h,to_i
	end method
	method operator+
	localint $1
	pop $1
	push $1
	cthis add
	end method
	method operator++
	push 1
	cthis add
	end method
	method operator--
	push 1
	popax
	sub 0,$a
	cthis add
	end method
	method operator-
	localint $1
	pop $1
	push $1
	popax
	sub 0,$a
	cthis add
	end method
	method operator=
	localint $1
	pop $1
	push $1
	cthis set
	end method
	method operator==
	localint $1
	pop $1
	cthis get
	push $1
	cmpje
	end method
	method operator!=
	localint $1
	pop $1
	cthis get
	push $1
	cmpjne
	end method
	method operator>
	localint $1
	pop $1
	cthis get
	push $1
	cmpja
	end method
	method operator<
	localint $1
	pop $1
	cthis get
	push $1
	cmpjl
	end method
	end class

	class SecCounter
	method init
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	new string,sdigit
	push $1
	pop sdigit
	push A
	push "istarttime"
	push $2
	push "idtime"
	push $3
	push "itime"
	push 0
	cthis vars2
	cthis reset
	push "timcyk"
	push 1000
	push 1
	push "SecCounter0"
	cthis cnewtimerfin
	end method
	method SecCounter0
	cthis play
	cthis getbuildername
	spushs
	spop $a
	call [$a],tick
	end method
	method play
	call timcyk,play
	end method
	method stop
	push 0
	call timcyk,stop
	end method
	method sgettime
	push itime
	push sdigit
	call clstrdigit,gettime
	ret
	end method
	method gettime
	push itime
	ret
	end method
	method tick
	push idtime
	cthis update
	end method
	method reset
	push istarttime
	pop itime
	end method
	method update
	localint $1
	pop $1
	push $1
	popax
	add itime,$a
	pop itime
	end method
	end class

	class TextTimeCounter
	parent Text
	parent SecCounter
	method init
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	localint $7
	localint $8
	localstring $9
	localint $10
	localint $11
	pop $11
	pop $10
	pop $9
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	push $5
	push $6
	push $7
	push $8
	clparent Text,init
	push $9
	push $10
	push $11
	clparent SecCounter,init
	cthis reset
	push 0
	cthis update
	end method
	method update
	localint $1
	pop $1
	push $1
	clparent SecCounter,update
	cthis sgettime
	cthis set
	push itime
	push 0
	cmpjle
	cmp0
	je l1783
	push idtime
	push 0
	cmpjl
	jmp l1785
l1783:
	push 0
	jmp l1785
l1784:
	push 1
l1785:
	cmp0
	je l1786
	cthis getname
	push "_finish"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
l1786:
	end method
	end class

	class gfxObject
	method init
	localstring $1
	pop $1
	new string,sgfxobj
	push $1
	pop sgfxobj
	end method
	method setpos
	push sgfxobj
	spushs
	spop $a
	call [$a],setpos
	end method
	method move
	push sgfxobj
	spushs
	spop $a
	call [$a],move
	end method
	method getpos
	push sgfxobj
	spushs
	spop $a
	call [$a],getpos
	end method
	method getposx
	push sgfxobj
	spushs
	spop $a
	call [$a],getposx
	end method
	method getposy
	push sgfxobj
	spushs
	spop $a
	call [$a],getposy
	end method
	method getpx
	push sgfxobj
	spushs
	spop $a
	call [$a],getpx
	end method
	method getpy
	push sgfxobj
	spushs
	spop $a
	call [$a],getpy
	end method
	method getw
	push sgfxobj
	spushs
	spop $a
	call [$a],getw
	end method
	method geth
	push sgfxobj
	spushs
	spop $a
	call [$a],geth
	end method
	method getcx
	push sgfxobj
	spushs
	spop $a
	call [$a],getcx
	end method
	method getcy
	push sgfxobj
	spushs
	spop $a
	call [$a],getcy
	end method
	method getex
	push sgfxobj
	spushs
	spop $a
	call [$a],getex
	end method
	method getey
	push sgfxobj
	spushs
	spop $a
	call [$a],getey
	end method
	method lodx
	push sgfxobj
	spushs
	spop $a
	call [$a],lodx
	end method
	method lody
	push sgfxobj
	spushs
	spop $a
	call [$a],lody
	end method
	method setz
	push sgfxobj
	spushs
	spop $a
	call [$a],setz
	end method
	method getz
	push sgfxobj
	spushs
	spop $a
	call [$a],getz
	end method
	method show
	push sgfxobj
	spushs
	spop $a
	call [$a],show
	end method
	method hide
	push sgfxobj
	spushs
	spop $a
	call [$a],hide
	end method
	method isvisible
	push sgfxobj
	spushs
	spop $a
	call [$a],isvisible
	end method
	method isin
	push sgfxobj
	spushs
	spop $a
	call [$a],isin
	end method
	end class

	class gfxSquare
	parent Color
	parent gfxObject
	method init
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	clparent Color,init
	push A
	push "w"
	push "h"
	cthis vars
	push $3
	pop w
	push $4
	pop h
	new img,imggfx
	push $1
	push $2
	call imggfx,setpos
	push "imggfx"
	clparent gfxObject,init
	end method
	method build
	push w
	push h
	push r
	push g
	push b
	push a
	call imggfx,create
	end method
	method shadow
	localint $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	localdef $4
	localdef $5
	call imggfx,getpos
	pop $5
	pop $4
	push 0
	push 0
	call imggfx,setpos
	new img,_img1
	new img,_img2
	call imggfx,getw
	push 0
	cmpja
	cmp0
	je l1788
	push w
	push h
	cthis transparent
	call _img1,create
	push "imggfx"
	call _img1,blit
	jmp l1787
l1788:
	push w
	push h
	cthis get
	call _img1,create
l1787:
	push w
	push h
	cthis black
	push $3
	call _img2,create
	push $1
	push 0
	cmpjl
	cmp0
	je l1790
	push $1
	popax
	sub 0,$a
	push 0
	call _img1,move
	push $1
	popax
	add $4,$a
	pop $4
	jmp l1789
l1790:
	push $1
	push 0
	call _img2,move
l1789:
	push $2
	push 0
	cmpjl
	cmp0
	je l1792
	push 0
	push $2
	popax
	sub 0,$a
	call _img1,move
	push $2
	popax
	add $5,$a
	pop $5
	jmp l1791
l1792:
	push 0
	push $2
	call _img2,move
l1791:
	call $1,abs
	popax
	add w,$a
	pop w
	call $2,abs
	popax
	add h,$a
	pop h
	push w
	push h
	cthis transparent
	call imggfx,create
	push "_img2"
	call imggfx,blit
	push "_img1"
	call imggfx,blit
	delete _img1
	delete _img2
	push $4
	push $5
	call imggfx,move
	end method
	method blackborder
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $1
	cthis black
	push $2
	cthis border
	end method
	method border
	localint $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	localdef $7
	localdef $8
	call imggfx,getpos
	pop $8
	pop $7
	push 0
	push 0
	call imggfx,setpos
	new img,_img
	call imggfx,getw
	push 0
	cmpja
	cmp0
	je l1794
	push w
	push h
	cthis transparent
	call _img,create
	push "imggfx"
	call _img,blit
	jmp l1793
l1794:
	push w
	push h
	cthis get
	call _img,create
l1793:
	push $1
	push $2
	call _img,move
	push 2
	push $1
	pop $b
	popax
	mul $a,$b
	popax
	add w,$a
	pop w
	push 2
	push $1
	pop $b
	popax
	mul $a,$b
	popax
	add h,$a
	pop h
	push w
	push h
	push $3
	push $4
	push $5
	push $6
	call imggfx,create
	push "_img"
	call imggfx,blit
	delete _img
	push $7
	push $8
	call imggfx,move
	end method
	end class

	class Rect
	method init
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push A
	push "x"
	push "y"
	push "w"
	push "h"
	cthis vars
	push $1
	push $2
	push $3
	push $4
	cthis set
	new vector,vecgr
	push "string"
	call vecgr,type
	push "gmimgvec"
	call vecgr,add
	end method
	method x2
	push x
	push w
	pop $b
	popax
	add $a,$b
	end method
	method y2
	push y
	push h
	pop $b
	popax
	add $a,$b
	end method
	method set
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	pop x
	push $2
	pop y
	push $3
	pop w
	push $4
	pop h
	end method
	method setborders
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	pop x
	push $2
	pop y
	push $3
	push $1
	pop $b
	popax
	sub $a,$b
	pop w
	push $4
	push y
	pop $b
	popax
	sub $a,$b
	pop h
	end method
	method fit
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],gettype
	call vecgr,contains
	cmp0
	je l1796
	localdef $2
	push x
	push $1
	spushs
	spop $a
	call [$a],_getpx
	pop $b
	popax
	sub $a,$b
	pop $2
	push $2
	push 0
	cmpja
	cmp0
	je l1798
	push $1
	spushs
	push $2
	push 0
	spop $a
	call [$a],move
l1798:
	localdef $3
	push y
	push $1
	spushs
	spop $a
	call [$a],_getpy
	pop $b
	popax
	sub $a,$b
	pop $3
	push $3
	push 0
	cmpja
	cmp0
	je l1800
	push $1
	spushs
	push 0
	push $3
	spop $a
	call [$a],move
l1800:
	jmp l1795
l1796:
	localdef $2
	push x
	push $1
	spushs
	spop $a
	call [$a],getpx
	pop $b
	popax
	sub $a,$b
	pop $2
	push $2
	push 0
	cmpja
	cmp0
	je l1802
	push $1
	spushs
	push $2
	push 0
	spop $a
	call [$a],move
l1802:
	localdef $3
	push y
	push $1
	spushs
	spop $a
	call [$a],getpy
	pop $b
	popax
	sub $a,$b
	pop $3
	push $3
	push 0
	cmpja
	cmp0
	je l1804
	push $1
	spushs
	push 0
	push $3
	spop $a
	call [$a],move
l1804:
l1795:
	cthis x2
	push $1
	spushs
	spop $a
	call [$a],getex
	pop $b
	popax
	sub $a,$b
	pop $2
	push $2
	push 0
	cmpjl
	cmp0
	je l1806
	push $1
	spushs
	push $2
	push 0
	spop $a
	call [$a],move
l1806:
	cthis y2
	push $1
	spushs
	spop $a
	call [$a],getey
	pop $b
	popax
	sub $a,$b
	pop $3
	push $3
	push 0
	cmpjl
	cmp0
	je l1808
	push $1
	spushs
	push 0
	push $3
	spop $a
	call [$a],move
l1808:
	end method
	method fitrand
	localstring $1
	pop $1
	push $1
	spushs
	push x
	push w
	push $1
	spushs
	spop $a
	call [$a],getw
	pop $b
	popax
	sub $a,$b
	spushs
	spop $h
	call $h,rand
	pop $b
	popax
	add $a,$b
	push y
	push h
	push $1
	spushs
	spop $a
	call [$a],geth
	pop $b
	popax
	sub $a,$b
	spushs
	spop $h
	call $h,rand
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],ansetbpos
	end method
	method fitgrouprand
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l1809:
	push $2
	push $1
	spushs
	spop $a
	call [$a],size
	cmpjl
	cmp0
	je l1810
	jmp l1812
l1811:
	add $2,1
	pop $2
	jmp l1809
l1812:
	push $1
	spushs
	push $2
	spop $a
	call [$a],get
	cthis fitrand
	jmp l1811
l1810:
	end method
	method fitgroup
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l1813:
	push $2
	push $1
	spushs
	spop $a
	call [$a],size
	cmpjl
	cmp0
	je l1814
	jmp l1816
l1815:
	add $2,1
	pop $2
	jmp l1813
l1816:
	push $1
	spushs
	push $2
	spop $a
	call [$a],get
	cthis fit
	jmp l1815
l1814:
	end method
	method isin
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push x
	cmpjae
	cmp0
	je l1817
	push $1
	push x
	push w
	pop $b
	popax
	add $a,$b
	cmpjl
	cmp0
	je l1817
	push $2
	push y
	cmpjae
	cmp0
	je l1817
	push $2
	push y
	push h
	pop $b
	popax
	add $a,$b
	cmpjl
	jmp l1819
l1817:
	push 0
	jmp l1819
l1818:
	push 1
l1819:
	end method
	end class

	class ImgRect
	method init
	push A
	push "ix"
	push 0
	push "iy"
	push 0
	push "iw"
	push 0
	push "ih"
	push 0
	push "bvis"
	push 1
	push "iz"
	push 0
	cthis vars2
	end method
	method setpos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	pop ix
	push $2
	pop iy
	end method
	method move
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	popax
	add ix,$a
	pop ix
	push $2
	popax
	add iy,$a
	pop iy
	end method
	method getpos
	push ix
	push iy
	ret
	end method
	method getposx
	push ix
	end method
	method getposy
	push iy
	end method
	method getpx
	push ix
	end method
	method getpy
	push iy
	end method
	method getw
	push iw
	end method
	method geth
	push ih
	end method
	method getcx
	push ix
	push iw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	end method
	method getcy
	push iy
	push ih
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	end method
	method getex
	push ix
	push iw
	pop $b
	popax
	add $a,$b
	end method
	method getey
	push iy
	push ih
	pop $b
	popax
	add $a,$b
	end method
	method lodx
	push 0
	end method
	method lody
	push 0
	end method
	method setz
	localint $1
	pop $1
	push $1
	pop iz
	end method
	method getz
	push iz
	end method
	method show
	push 1
	pop bvis
	end method
	method hide
	push 0
	pop bvis
	end method
	method isvisible
	push bvis
	end method
	method isin
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $3
	push 0
	cmpje
	cmp0
	jne l1822
	cthis isvisible
	jmp l1823
l1821:
	push 0
	jmp l1823
l1822:
	push 1
l1823:
	cmp0
	je l1824
	push $1
	push ix
	cmpjae
	cmp0
	je l1825
	push $1
	push ix
	push iw
	pop $b
	popax
	add $a,$b
	cmpjl
	cmp0
	je l1825
	push $2
	push iy
	cmpjae
	cmp0
	je l1825
	push $2
	push iy
	push ih
	pop $b
	popax
	add $a,$b
	cmpjl
	jmp l1827
l1825:
	push 0
	jmp l1827
l1826:
	push 1
l1827:
	jmp l1820
l1824:
	push 0
l1820:
	end method
	method setrect
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	pop ix
	push $2
	pop iy
	push $3
	push $1
	pop $b
	popax
	sub $a,$b
	pop iw
	push $4
	push $2
	pop $b
	popax
	sub $a,$b
	pop ih
	end method
	method print
	push "x: "
	push ix
	pop $b
	popax
	add $a,$b
	push ", y: "
	pop $b
	popax
	add $a,$b
	push iy
	pop $b
	popax
	add $a,$b
	push ", w: "
	pop $b
	popax
	add $a,$b
	push iw
	pop $b
	popax
	add $a,$b
	push ", h: "
	pop $b
	popax
	add $a,$b
	push ih
	pop $b
	popax
	add $a,$b
	spushs
	spop $h
	call $h,print
	end method
	method operator=
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getpx
	push $1
	spushs
	spop $a
	call [$a],getpy
	push $1
	spushs
	spop $a
	call [$a],getw
	push $1
	spushs
	spop $a
	call [$a],geth
	push $1
	spushs
	spop $a
	call [$a],getz
	push $1
	spushs
	spop $a
	call [$a],isvisible
	pop bvis
	pop iz
	pop ih
	pop iw
	pop iy
	pop ix
	end method
	end class

	class classfadeinout
	method init
	new timer,timf
	new string,_sob
	new int,_istep
	new int,_ival
	new int,_ib1
	new int,_ib2
	new string,_sfun
	new string,_sfunfin
	new string,_sobfin
	push "onfinish"
	push "_ctimffin"
	call timf,addmethod
	end method
	method _cfinito
	localint $1
	pop $1
	push _sob
	spushs
	push _sfun
	spushs
	push $1
	spop $d
	spop $a
	call [$a],[$d]
	push _sfunfin
	push "null"
	cmpjne
	cmp0
	je l1829
	push _sobfin
	push "null"
	cmpje
	cmp0
	je l1831
	push _sfunfin
	spushs
	spop $d
	cthis [$d]
	jmp l1830
l1831:
	push _sobfin
	spushs
	push _sfunfin
	spushs
	spop $d
	spop $a
	call [$a],[$d]
l1830:
l1829:
	end method
	method _ctimffin
	push _istep
	popax
	add _ival,$a
	pop _ival
	push _ival
	push _ib2
	cmpja
	cmp0
	je l1833
	push _ib2
	cthis _cfinito
	jmp l1832
l1833:
	push _ival
	push _ib1
	cmpjl
	cmp0
	je l1835
	push _ib1
	cthis _cfinito
	jmp l1834
l1835:
	push _sob
	spushs
	push _sfun
	spushs
	push _ival
	spop $d
	spop $a
	call [$a],[$d]
	cthis play
l1834:
l1832:
	end method
	method _play
	localint $1
	localint $2
	localstring $3
	localstring $4
	localint $5
	localint $6
	localstring $7
	localstring $8
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $7
	pop _sobfin
	push $8
	pop _sfunfin
	push $5
	pop _ib1
	push $6
	pop _ib2
	localint $9
	call $2,abs
	pop $9
	push $1
	push 0
	cmpjle
	cmp0
	jne l1838
	push $9
	push $5
	cmpje
	cmp0
	jne l1838
	push $9
	push $6
	cmpja
	jmp l1839
l1837:
	push 0
	jmp l1839
l1838:
	push 1
l1839:
	cmp0
	je l1840
	ret
l1840:
	push $4
	pop _sfun
	push $1
	call timf,setcycle
	push $3
	pop _sob
	push $2
	push 0
	cmpja
	cmp0
	je l1842
	push _ib1
	pop _ival
	jmp l1841
l1842:
	push $2
	push 0
	cmpjl
	cmp0
	je l1844
	push _ib2
	pop _ival
	jmp l1843
l1844:
	ret
l1843:
l1841:
	push $3
	spushs
	push $4
	spushs
	push _ival
	spop $d
	spop $a
	call [$a],[$d]
	push $2
	pop _istep
	call timf,play
	end method
	method imgtransparency
	localint $1
	localint $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push "transparency"
	push 0
	push 255
	push "null"
	push $4
	cthis _play
	end method
	method setopacity
	localint $1
	localint $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push "setopacity"
	push 0
	push 255
	push "null"
	push $4
	cthis _play
	end method
	method sndvolume
	localint $1
	localint $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push "setvol"
	push 0
	push 100
	push "null"
	push $4
	cthis _play
	end method
	method isplaying
	call timf,isplaying
	end method
	end class

	class CutScene
	parent gfxObject
	method init
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	new int,X1
	new int,Y1
	new int,X2
	new int,Y2
	new img,_gsq
	push $1
	push $2
	push $3
	push $4
	cthis build
	push "_gsq"
	clparent gfxObject,init
	new string,_sfunc1
	new string,_sob1
	new string,_sfunc2
	new string,_sob2
	new int,_idelay
	push 10
	pop _idelay
	new classfadeinout,_clfio
	end method
	method build
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	pop Y2
	pop X2
	pop Y1
	pop X1
	push X2
	push X1
	pop $b
	popax
	sub $a,$b
	push Y2
	push Y1
	pop $b
	popax
	sub $a,$b
	cthis black
	push 255
	call _gsq,create
	push X1
	push Y1
	call _gsq,setpos
	call _gsq,hide
	push 0
	call _gsq,transparency
	end method
	method buildblack
	push X1
	push Y1
	push X2
	push Y2
	cthis build
	end method
	method buildfromfile
	localstring $1
	pop $1
	localdef $2
	cthis getz
	pop $2
	new img,_imtmp
	push $1
	call _imtmp,load
	push 255
	call _gsq,transparency
	push "_imtmp"
	call _gsq,blit
	delete _imtmp
	call _gsq,hide
	push 0
	call _gsq,transparency
	end method
	method buildfromscreen
	push 255
	call _gsq,transparency
	call _gsq,blitscreen
	call _gsq,hide
	push 0
	call _gsq,transparency
	end method
	method cloneto
	localstring $1
	pop $1
	push $1
	spushs
	push "_gsq"
	spop $a
	call [$a],clone
	end method
	method delay
	localint $1
	pop $1
	push $1
	pop _idelay
	end method
	method transparency
	localint $1
	pop $1
	push $1
	call _gsq,transparency
	end method
	method playfin
	localstring $1
	localstring $2
	pop $2
	pop $1
	push "null"
	push $1
	push "null"
	push $2
	cthis playobfin
	end method
	method playobfin
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push "null"
	cmpje
	cmp0
	je l1846
	call gameapi,getgamename
	jmp l1845
l1846:
	push $1
l1845:
	pop _sob1
	push $2
	pop _sfunc1
	push $3
	push "null"
	cmpje
	cmp0
	je l1848
	call gameapi,getgamename
	jmp l1847
l1848:
	push $3
l1847:
	pop _sob2
	push $4
	pop _sfunc2
	call _gsq,show
	push 0
	call _gsq,transparency
	push 1
	push _idelay
	cthis getname
	push "transparency"
	push 0
	push 255
	cthis getname
	push "CutScene0"
	call _clfio,_play
	end method
	method CutScene0
	push _sob1
	push _sfunc1
	cthis callfun
	call _gsq,show
	push 1
	push _idelay
	popax
	sub 0,$a
	cthis getname
	push "transparency"
	push 0
	push 255
	cthis getname
	push "_callfun2"
	call _clfio,_play
	end method
	method close
	localstring $1
	pop $1
	call gameapi,getgamename
	push $1
	cthis obclose
	end method
	method obclose
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	pop _sob1
	push $2
	pop _sfunc1
	push 0
	call _gsq,transparency
	call _gsq,show
	push 1
	push _idelay
	cthis getname
	push "transparency"
	push 0
	push 255
	cthis getname
	push "CutScene1"
	call _clfio,_play
	end method
	method CutScene1
	call _gsq,hide
	push _sob1
	push _sfunc1
	cthis callfun
	end method
	method enter
	localstring $1
	pop $1
	call gameapi,getgamename
	push $1
	cthis obenter
	end method
	method obenter
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	pop _sob2
	push $2
	pop _sfunc2
	push 255
	call _gsq,transparency
	call _gsq,show
	push 1
	push _idelay
	popax
	sub 0,$a
	cthis getname
	push "transparency"
	push 0
	push 255
	cthis getname
	push "_callfun2"
	call _clfio,_play
	end method
	method _callfun2
	call _gsq,hide
	push _sob2
	push _sfunc2
	cthis callfun
	end method
	method isplaying
	call _clfio,isplaying
	end method
	method show
	push 255
	call _gsq,transparency
	call _gsq,show
	end method
	end class

	method allchars
	push "a0 t_!@#$%^&*()_+-=[]\\|}{;':\",./<>?`~"
	end method
	class TextTyper
	parent classlocker
	parent gfxObject
	method init
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	localstring $6
	localint $7
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	clparent classlocker,init
	push $1
	push $2
	cthis checkfont
	pop $1
	new int,iR
	push $3
	pop iR
	new int,iG
	push $4
	pop iG
	new int,iB
	push $5
	pop iB
	new string,sChars
	push $6
	pop sChars
	new int,iLimit
	push $7
	pop iLimit
	push A
	push "Sdir"
	push "left"
	push "W"
	push 0
	push "iFontSize"
	push $2
	push "X"
	push 0
	push "Y"
	push 0
	cthis vars2
	new text,txt1
	push $1
	call txt1,setfont
	push ""
	call txt1,set
	new text,txt2
	push $1
	call txt2,setfont
	push "_"
	call txt2,set
	push iR
	push iG
	push iB
	call txt2,createtxt
	call txt2,hide
	new text,txtpass
	push $1
	call txtpass,setfont
	call txtpass,hide
	new int,bpass
	push 0
	pop bpass
	new string,_sob
	push "null"
	pop _sob
	new string,_sfun
	push "null"
	pop _sfun
	push "timcyk"
	push 300
	push 1
	push "fintimcyk"
	cthis cnewtimerfin
	push "txt1"
	clparent gfxObject,init
	end method
	method setaspasswd
	push 1
	pop bpass
	call txt1,hide
	call txt1,getz
	call txtpass,setz
	call txtpass,show
	cthis copytopass
	end method
	method copytopass
	localdef $1
	call txt1,get
	spushs
	spop $h
	call $h,length
	pop $1
	localstring $2
	push ""
	pop $2
	localint $3
	push 0
	pop $3
l1849:
	push $3
	push $1
	cmpjl
	cmp0
	je l1850
	jmp l1852
l1851:
	add $3,1
	pop $3
	jmp l1849
l1852:
	push "*"
	popax
	add $2,$a
	pop $2
	jmp l1851
l1850:
	push $2
	call txtpass,txtset
	call txt1,getpx
	call txt1,getpy
	call txtpass,setpos
	end method
	method setastext
	push 0
	pop bpass
	call txt1,show
	call txtpass,hide
	end method
	method isin
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	call txt1,isin
	end method
	method getcol
	push iR
	push iG
	push iB
	ret
	end method
	method fintimcyk
	cthis getlock
	cmp0
	je l1854
	ret
l1854:
	cthis updatecyk
	cthis play
	end method
	method updatecyk
	call txt2,isvisible
	cmp0
	je l1856
	call txt2,hide
	jmp l1855
l1856:
	call txt1,getex
	call txt1,getpy
	call txt2,setpos
	call txt2,show
l1855:
	end method
	method enable
	cthis unlock
	cthis updatecyk
	call timcyk,play
	end method
	method disable
	call txt2,hide
	push 0
	call timcyk,stop
	cthis lock
	end method
	method onenter
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	pop _sob
	push $2
	pop _sfun
	end method
	method setpos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	pop X
	push $2
	pop Y
	cthis get
	cthis updatetxt
	end method
	method move
	localint $1
	localint $2
	pop $2
	pop $1
	push X
	push $1
	pop $b
	popax
	add $a,$b
	push Y
	push $2
	pop $b
	popax
	add $a,$b
	cthis setpos
	end method
	method setz
	localint $1
	pop $1
	push $1
	call txt1,setz
	push $1
	call txt2,setz
	end method
	method get
	localstring $1
	call txt1,get
	pop $1
	call $1,length
	push 0
	cmpja
	cmp0
	je l1858
	push $1
	jmp l1857
l1858:
	push ""
l1857:
	end method
	method getpx
	call txt1,getpx
	end method
	method getpy
	call txt1,getpy
	end method
	method getcx
	call txt1,getcx
	end method
	method getcy
	call txt1,getcy
	end method
	method geth
	call txt1,geth
	end method
	method getey
	call txt1,getpy
	push iFontSize
	pop $b
	popax
	add $a,$b
	end method
	method clip
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	call txt1,clip
	push $1
	push $2
	push $3
	push $4
	call txt2,clip
	end method
	method length
	call txt1,get
	spushs
	spop $h
	call $h,length
	end method
	method set
	localstring $1
	pop $1
	push $1
	call txt1,set
	end method
	method txtset
	localstring $1
	pop $1
	push $1
	cthis getcol
	call txt1,txtsetcol
	end method
	method limit=
	localint $1
	pop $1
	push $1
	pop iLimit
	end method
	method onkeydown
	cthis getlock
	cmp0
	je l1860
	ret
l1860:
	cthis getname
	push "_ontype"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	push "enter"
	call keyboard,iskeydown
	cmp0
	je l1862
	cthis disable
	push _sob
	push _sfun
	cthis callfun
	cthis getname
	push "_onenter"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	ret
l1862:
	localstring $1
	push "t"
	call sChars,contains
	cmp0
	je l1864
	push "tab"
	call keyboard,iskey
	jmp l1866
l1864:
	push 0
	jmp l1866
l1865:
	push 1
l1866:
	cmp0
	je l1867
	push " "
	pop $1
	jmp l1863
l1867:
	call keyboard,getkey
	pop $1
l1863:
	localstring $2
	call txt1,get
	pop $2
	call keyboard,isalpha
	cmp0
	je l1869
	push "a"
	call sChars,contains
	jmp l1871
l1869:
	push 0
	jmp l1871
l1870:
	push 1
l1871:
	cmp0
	jne l1873
	call keyboard,isdigit
	cmp0
	je l1874
	push "0"
	call sChars,contains
	jmp l1876
l1874:
	push 0
	jmp l1876
l1875:
	push 1
l1876:
	cmp0
	jne l1873
	push $1
	call sChars,contains
	jmp l1877
l1872:
	push 0
	jmp l1877
l1873:
	push 1
l1877:
	cmp0
	je l1878
	push iLimit
	push 0
	cmpjle
	cmp0
	jne l1881
	push iLimit
	call $2,length
	cmpja
	jmp l1882
l1880:
	push 0
	jmp l1882
l1881:
	push 1
l1882:
	jmp l1883
l1878:
	push 0
	jmp l1883
l1879:
	push 1
l1883:
	cmp0
	je l1884
	push $2
	push $1
	pop $b
	popax
	add $a,$b
	cthis updatetxt
	cthis updatecyk
	jmp l1868
l1884:
	push "backspace"
	call keyboard,iskey
	cmp0
	je l1886
	call $2,length
	push 0
	cmpja
	jmp l1888
l1886:
	push 0
	jmp l1888
l1887:
	push 1
l1888:
	cmp0
	je l1889
	push 1
	call $2,strsube
	cthis updatetxt
	cthis updatecyk
l1889:
l1868:
	cthis getname
	push "_ontyped"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method updatetxt
	localstring $1
	pop $1
	push $1
	call txt1,set
	push iR
	push iG
	push iB
	call txt1,createtxt
	push Sdir
	push "center"
	cmpje
	cmp0
	je l1891
	push X
	push W
	call txt1,getw
	pop $b
	popax
	sub $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	push Y
	call txt1,setpos
	jmp l1890
l1891:
	push Sdir
	push "right"
	cmpje
	cmp0
	je l1893
	push X
	push W
	pop $b
	popax
	add $a,$b
	call txt1,getw
	pop $b
	popax
	sub $a,$b
	push Y
	call txt1,setpos
	jmp l1892
l1893:
	push X
	push Y
	call txt1,setpos
l1892:
l1890:
	push bpass
	cmp0
	je l1895
	cthis copytopass
l1895:
	cthis getname
	push "_onwrite"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	end class

	class ConTextTyper
	parent TextTyper
	parent ObjController
	method init
	clparent TextTyper,init
	clparent ObjController,init
	end method
	end class

	new string,sTextBoxTyperSys
	push "null"
	pop sTextBoxTyperSys
	class TextBoxTyper
	parent LObjController
	parent ImagePos
	method init
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	localstring $7
	localint $8
	localint $9
	localint $10
	localint $11
	localint $12
	pop $12
	pop $11
	pop $10
	pop $9
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	clparent LObjController,init
	clparent ImagePos,init
	new def,Font
	push $1
	push $2
	cthis checkfont
	pop Font
	push A
	push "Cols"
	push $10
	push $3
	pop $b
	popax
	div $a,$b
	psax
	push "Rows"
	push $11
	push $2
	push $12
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	div $a,$b
	psax
	push "X"
	push $8
	push "Y"
	push $9
	push "Row"
	push 0
	push "enablemove"
	push 1
	push "W"
	push $10
	push "insystem"
	push 0
	push "H"
	push $11
	push "isvisible"
	push 1
	push "clipx1"
	push $8
	push "clipy1"
	push $9
	push "clipx2"
	push 0
	push "clipy2"
	push 0
	push "clipped"
	push 0
	cthis vars2
	new def,Size
	push $2
	pop Size
	new def,Dy
	push $12
	pop Dy
	new def,Z
	push 0
	pop Z
	localstring $13
	new gmimgvec,grtt
	new gmimgvec,gren
	localint $14
	push 0
	pop $14
l1896:
	push $14
	push Rows
	cmpjl
	cmp0
	je l1897
	jmp l1899
l1898:
	add $14,1
	pop $14
	jmp l1896
l1899:
	push "tt"
	push $14
	pop $b
	popax
	add $a,$b
	pop $13
	push $13
	spushs
	push Font
	push $2
	push $4
	push $5
	push $6
	push $7
	push Cols
	spop $e
	new TextTyper,[$e]
	push $13
	spushs
	push $10
	spop $a
	call [$a],W=
	push $13
	spushs
	push "left"
	spop $a
	call [$a],Sdir=
	push $13
	spushs
	push $8
	push $9
	push $14
	push $2
	push $12
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	push $13
	call grtt,add
	jmp l1898
l1897:
	end method
	method settyper
	localint $1
	localstring $2
	localint $3
	localint $4
	localint $5
	localint $6
	localint $7
	localstring $8
	localstring $9
	pop $9
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	localint $10
	localint $11
	localstring $12
	localstring $13
	push ""
	pop $13
	push $1
	push 0
	cmpjl
	cmp0
	je l1901
	call grtt,last
	spushs
	spop $a
	call [$a],X
	pop $10
	call grtt,last
	spushs
	spop $a
	call [$a],getey
	push Dy
	pop $b
	popax
	add $a,$b
	pop $11
	call grtt,size
	pop $1
	push "tt"
	push $1
	pop $b
	popax
	add $a,$b
	call grtt,add
	jmp l1900
l1901:
	push $1
	call grtt,get
	pop $12
	push $12
	spushs
	spop $a
	call [$a],X
	pop $10
	push $12
	spushs
	spop $a
	call [$a],getpy
	pop $11
	push $12
	spushs
	spop $a
	call [$a],get
	pop $13
	push $12
	push 0
	push $3
	push $12
	spushs
	spop $a
	call [$a],iFontSize
	pop $b
	popax
	sub $a,$b
	call grtt,movefrom
	push $12
	spushs
	spop $d
	delete [$d]
l1900:
	push "tt"
	push $1
	pop $b
	popax
	add $a,$b
	pop $12
	push $12
	spushs
	push $2
	push $3
	push $5
	push $6
	push $7
	push $8
	push W
	push $4
	pop $b
	popax
	div $a,$b
	psax
	spop $e
	new TextTyper,[$e]
	push $12
	spushs
	push W
	spop $a
	call [$a],W=
	push $12
	spushs
	push $9
	spop $a
	call [$a],Sdir=
	push $12
	spushs
	push $13
	spop $a
	call [$a],updatetxt
	push $12
	spushs
	push Z
	spop $a
	call [$a],setz
	push $12
	spushs
	push $10
	push $11
	spop $a
	call [$a],setpos
	end method
	method move
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call grtt,move
	push $1
	push $2
	call gren,move
	push $1
	popax
	add X,$a
	pop X
	push $2
	popax
	add Y,$a
	pop Y
	end method
	method size
	call grtt,size
	end method
	method setz
	localint $1
	pop $1
	push $1
	pop Z
	push $1
	call grtt,setz
	push $1
	call gren,setz
	end method
	method getz
	push Z
	end method
	method show
	push 1
	pop isvisible
	call grtt,show
	end method
	method hide
	push 0
	pop isvisible
	call grtt,hide
	end method
	method clip
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push 1
	pop clipped
	push $1
	pop clipx1
	push $2
	pop clipy1
	push $3
	pop clipx2
	push $4
	pop clipy2
	localint $5
	push 0
	pop $5
l1902:
	push $5
	call grtt,size
	cmpjl
	cmp0
	je l1903
	jmp l1905
l1904:
	add $5,1
	pop $5
	jmp l1902
l1905:
	push $5
	call grtt,get
	spushs
	push $1
	push $2
	push $3
	push $4
	spop $a
	call [$a],clip
	jmp l1904
l1903:
	end method
	method getw
	push W
	end method
	method geth
	push H
	end method
	method enumerate
	localint $1
	pop $1
	localstring $2
	localstring $3
	localint $4
	push 0
	pop $4
l1906:
	push $4
	call grtt,size
	cmpjl
	cmp0
	je l1907
	jmp l1909
l1908:
	add $4,1
	pop $4
	jmp l1906
l1909:
	push "txte"
	push $4
	pop $b
	popax
	add $a,$b
	pop $2
	push $2
	spushs
	spop $e
	new text,[$e]
	push $2
	call gren,add
	push $2
	spushs
	push Z
	spop $a
	call [$a],setz
	push $2
	spushs
	push Font
	spop $a
	call [$a],setfont
	push $2
	spushs
	push ""
	push $4
	push 1
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	add $a,$b
	push "."
	pop $b
	popax
	add $a,$b
	call tt0,getcol
	spop $a
	call [$a],txtsetcol
	push $2
	spushs
	push X
	push $2
	spushs
	spop $a
	call [$a],getw
	pop $b
	popax
	sub $a,$b
	push $1
	pop $b
	popax
	sub $a,$b
	push Y
	push $4
	push Size
	push Dy
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	jmp l1908
l1907:
	end method
	method cut
	localint $1
	pop $1
	push $1
	pop Rows
	end method
	method enable
	cthis unlock
	cthis activateact
	end method
	method disable
	cthis lock
	push "disable"
	call grtt,eval
	end method
	method actual
	push "tt"
	push Row
	pop $b
	popax
	add $a,$b
	end method
	method activate
	localint $1
	pop $1
	cthis unlock
	push $1
	push 0
	cmpjae
	cmp0
	je l1911
	push $1
	push Rows
	cmpjl
	jmp l1913
l1911:
	push 0
	jmp l1913
l1912:
	push 1
l1913:
	cmp0
	je l1914
	push insystem
	cmp0
	je l1916
	push GAME
	spushs
	push sTextBoxTyperSys
	spop $a
	call [$a],isgmobj
	cmp0
	je l1918
	push sTextBoxTyperSys
	cthis getname
	cmpjne
	jmp l1920
l1918:
	push 0
	jmp l1920
l1919:
	push 1
l1920:
	cmp0
	je l1921
	push sTextBoxTyperSys
	spushs
	spop $a
	call [$a],deactivate
l1921:
	cthis getname
	pop sTextBoxTyperSys
l1916:
	cthis deactivate
	push $1
	pop Row
	push "tt"
	push Row
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],enable
	cthis getname
	push "_activate"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
l1914:
	end method
	method activateact
	push Row
	cthis activate
	end method
	method deactivate
	push "tt"
	push Row
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],disable
	end method
	method onkeydown
	cthis getlock
	cmp0
	je l1923
	ret
l1923:
	cthis getname
	push "_boxontype"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	push "enter"
	call keyboard,iskeydown
	cmp0
	je l1925
	localdef $1
	push Rows
	push 1
	pop $b
	popax
	sub $a,$b
	cthis getid
	pop $1
	call $1,clear
	call $1,length
	push 0
	cmpje
	cmp0
	je l1927
	push enablemove
	jmp l1929
l1927:
	push 0
	jmp l1929
l1928:
	push 1
l1929:
	cmp0
	je l1930
	localdef $2
	push Rows
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
l1931:
	push $2
	push Row
	push 1
	pop $b
	popax
	add $a,$b
	cmpja
	cmp0
	je l1932
	jmp l1934
l1933:
	sub $2,1
	pop $2
	jmp l1931
l1934:
	push $2
	push 1
	pop $b
	popax
	sub $a,$b
	cthis getid
	push $2
	cthis setid
	jmp l1933
l1932:
	push Row
	push 1
	pop $b
	popax
	add $a,$b
	push Rows
	cmpjl
	cmp0
	je l1936
	push ""
	push Row
	push 1
	pop $b
	popax
	add $a,$b
	cthis setid
l1936:
l1930:
	push Row
	push 1
	pop $b
	popax
	add $a,$b
	cthis activate
	jmp l1924
l1925:
	push "up"
	call keyboard,iskey
	cmp0
	je l1938
	push Row
	push 0
	cmpja
	jmp l1940
l1938:
	push 0
	jmp l1940
l1939:
	push 1
l1940:
	cmp0
	je l1941
	push Row
	push 1
	pop $b
	popax
	sub $a,$b
	cthis activate
	jmp l1937
l1941:
	push "down"
	call keyboard,iskey
	cmp0
	je l1943
	push Row
	push Rows
	push 1
	pop $b
	popax
	sub $a,$b
	cmpjl
	jmp l1945
l1943:
	push 0
	jmp l1945
l1944:
	push 1
l1945:
	cmp0
	je l1946
	push Row
	push 1
	pop $b
	popax
	add $a,$b
	cthis activate
	jmp l1942
l1946:
	push "pgdown"
	call keyboard,iskey
	cmp0
	je l1948
	push Row
	push Rows
	push 10
	pop $b
	popax
	sub $a,$b
	cmpjl
	cmp0
	je l1950
	push Row
	push 10
	pop $b
	popax
	add $a,$b
	cthis activate
	jmp l1949
l1950:
	push Rows
	push 1
	pop $b
	popax
	sub $a,$b
	cthis activate
l1949:
	jmp l1947
l1948:
	push "pgup"
	call keyboard,iskey
	cmp0
	je l1952
	push Row
	push 9
	cmpja
	cmp0
	je l1954
	push Row
	push 10
	pop $b
	popax
	sub $a,$b
	cthis activate
	jmp l1953
l1954:
	push 0
	cthis activate
l1953:
	jmp l1951
l1952:
	push "backspace"
	call keyboard,iskey
	cmp0
	jne l1957
	push "delete"
	call keyboard,iskey
	jmp l1958
l1956:
	push 0
	jmp l1958
l1957:
	push 1
l1958:
	cmp0
	je l1959
	cthis actual
	spushs
	spop $a
	call [$a],length
	push 0
	cmpje
	jmp l1961
l1959:
	push 0
	jmp l1961
l1960:
	push 1
l1961:
	cmp0
	je l1962
	push enablemove
	cmp0
	je l1964
	localdef $2
	push Row
	pop $2
l1965:
	push $2
	push Rows
	push 1
	pop $b
	popax
	sub $a,$b
	cmpjl
	cmp0
	je l1966
	jmp l1968
l1967:
	add $2,1
	pop $2
	jmp l1965
l1968:
	push $2
	push 1
	pop $b
	popax
	add $a,$b
	cthis getid
	push $2
	cthis setid
	jmp l1967
l1966:
	push ""
	push Rows
	push 1
	pop $b
	popax
	sub $a,$b
	cthis setid
l1964:
	push "backspace"
	call keyboard,iskey
	cmp0
	je l1970
	push Row
	push 1
	pop $b
	popax
	sub $a,$b
	cthis activate
l1970:
	jmp l1955
l1962:
	push "onkeydown"
	call grtt,eval
l1955:
l1951:
l1947:
l1942:
l1937:
l1924:
	end method
	method onmouselclick
	cthis getlock
	cmp0
	je l1972
	ret
l1972:
	localint $1
	localint $2
	call mouse,getpos
	pop $2
	pop $1
	push clipped
	cmp0
	je l1974
	push $1
	push $2
	push clipx1
	push clipy1
	push clipx2
	push clipy2
	call clsurf,isin
	jmp l1976
l1974:
	push 0
	jmp l1976
l1975:
	push 1
l1976:
	cmp0
	jne l1978
	push clipped
	neg
	cmp0
	je l1979
	push $1
	push $2
	push X
	push Y
	push W
	push H
	call clsurf,isin2
	jmp l1981
l1979:
	push 0
	jmp l1981
l1980:
	push 1
l1981:
	jmp l1982
l1977:
	push 0
	jmp l1982
l1978:
	push 1
l1982:
	cmp0
	je l1983
	cthis deactivate
	localint $3
	push 0
	pop $3
l1984:
	push $3
	cthis size
	cmpjl
	cmp0
	je l1985
	jmp l1987
l1986:
	add $3,1
	pop $3
	jmp l1984
l1987:
	push "tt"
	push $3
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getey
	push $2
	cmpja
	cmp0
	je l1989
	push $3
	cthis activate
	ret
l1989:
	jmp l1986
l1985:
	jmp l1973
l1983:
	cthis getname
	push "_OUTSIDE"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
l1973:
	end method
	method isin
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $3
	cmp0
	je l1991
	push isvisible
	neg
	jmp l1993
l1991:
	push 0
	jmp l1993
l1992:
	push 1
l1993:
	cmp0
	je l1994
	push 0
	ret
l1994:
	push $1
	push $2
	push X
	push Y
	push W
	push H
	call clsurf,isin2
	end method
	method getid
	localint $1
	pop $1
	push "tt"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],get
	end method
	method getact
	push "tt"
	push Row
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],get
	end method
	method idpx
	localint $1
	pop $1
	push "tt"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getpx
	end method
	method idpy
	localint $1
	pop $1
	push "tt"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getpy
	end method
	method getpx
	push X
	end method
	method getpy
	push Y
	end method
	method get
	push 0
	cthis getfrom
	end method
	method getfrom
	localint $1
	pop $1
	push $1
	push ""
	cthis getlinesfrom
	end method
	method getlinesfrom
	localint $1
	localstring $2
	pop $2
	pop $1
	localstring $3
	push ""
	pop $3
	localint $4
	push $1
	pop $4
l1995:
	push $4
	call grtt,size
	cmpjl
	cmp0
	je l1996
	jmp l1998
l1997:
	add $4,1
	pop $4
	jmp l1995
l1998:
	push "tt"
	push $4
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],get
	push $2
	pop $b
	popax
	add $a,$b
	popax
	add $3,$a
	pop $3
	jmp l1997
l1996:
	push $3
	end method
	method getlines
	push 0
	push " "
	cthis getlinesfrom
	end method
	method nonempty
	localint $1
	pop $1
	localstring $2
l1999:
	push $1
	call grtt,size
	cmpjl
	cmp0
	je l2000
	jmp l2002
l2001:
	add $1,1
	pop $1
	jmp l1999
l2002:
	push "tt"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],get
	pop $2
	call $2,clear
	call $2,length
	push 0
	cmpja
	cmp0
	je l2004
	push $1
	ret
l2004:
	jmp l2001
l2000:
	push 1
	popax
	sub 0,$a
	end method
	method clear
	call grtt,txtreset
	end method
	method setid
	localstring $1
	localint $2
	pop $2
	pop $1
	call grtt,size
	push $2
	cmpjae
	cmp0
	je l2006
	push "tt"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	spop $a
	call [$a],txtset
l2006:
	end method
	method settext
	localint $1
	pop $1
l2007:
	push $1
	push 0
	cmpja
	cmp0
	je l2008
	sub $1,1
	pop $1
	push $1
	cthis setid
	jmp l2007
l2008:
	end method
	method copytodb
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],free
	localint $2
	push 0
	pop $2
l2009:
	push $2
	call grtt,size
	cmpjl
	cmp0
	je l2010
	jmp l2012
l2011:
	add $2,1
	pop $2
	jmp l2009
l2012:
	push $1
	spushs
	push $1
	spushs
	spop $a
	call [$a],addrow
	push 1
	pop $b
	popax
	sub $a,$b
	push $2
	call grtt,get
	spushs
	spop $a
	call [$a],get
	spop $a
	call [$a],add
	jmp l2011
l2010:
	end method
	method copyfromdb
	localstring $1
	pop $1
	push $1
	push 0
	push $1
	spushs
	spop $a
	call [$a],getrowsno
	cthis copyfromdbii
	end method
	method copyfromdbss
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $1
	spushs
	push $2
	spop $a
	call [$a],findbyrow
	push 1
	pop $b
	popax
	add $a,$b
	push $1
	spushs
	push $3
	spop $a
	call [$a],findbyrow
	cthis copyfromdbii
	end method
	method copyfromdbii
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $2
	push 1
	popax
	sub 0,$a
	cmpje
	cmp0
	jne l2015
	push $3
	push 1
	popax
	sub 0,$a
	cmpje
	jmp l2016
l2014:
	push 0
	jmp l2016
l2015:
	push 1
l2016:
	cmp0
	je l2017
	ret
l2017:
	cthis clear
	push $3
	push $2
	pop $b
	popax
	sub $a,$b
	cthis size
	cmpja
	cmp0
	je l2019
	push $2
	cthis size
	pop $b
	popax
	add $a,$b
	pop $3
l2019:
	localint $4
	push $2
	pop $4
l2020:
	push $4
	push $3
	cmpjl
	cmp0
	je l2021
	jmp l2023
l2022:
	add $4,1
	pop $4
	jmp l2020
l2023:
	push $1
	spushs
	push $4
	spop $a
	call [$a],getcolsno
	cmp0
	je l2025
	push $1
	spushs
	push $4
	push 0
	spop $a
	call [$a],get
	push $4
	push $2
	pop $b
	popax
	sub $a,$b
	cthis setid
l2025:
	jmp l2022
l2021:
	end method
	method copyfromdbrow
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	localint $4
	push $1
	spushs
	push $2
	spop $a
	call [$a],getcolsno
	pop $4
	push $4
	cthis size
	cmpja
	cmp0
	je l2027
	cthis size
	pop $4
l2027:
	localint $5
	push $3
	pop $5
l2028:
	push $5
	push $4
	cmpjl
	cmp0
	je l2029
	jmp l2031
l2030:
	add $5,1
	pop $5
	jmp l2028
l2031:
	push $1
	spushs
	push $2
	push $5
	spop $a
	call [$a],get
	push $5
	push $3
	pop $b
	popax
	sub $a,$b
	cthis setid
	jmp l2030
l2029:
	end method
	method save
	localstring $1
	pop $1
	new db,__tmpdb
	push "__tmpdb"
	cthis copytodb
	push "|"
	call __tmpdb,setseparator
	push $1
	call __tmpdb,save
	delete __tmpdb
	end method
	method load
	localstring $1
	pop $1
	new db,__tmpdb
	push $1
	call __tmpdb,load
	push "__tmpdb"
	cthis copyfromdb
	delete __tmpdb
	end method
	end class

	class GUITextBoxTyper
	parent TextBoxTyper
	method init
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	localstring $7
	localint $8
	localint $9
	localint $10
	localint $11
	localint $12
	pop $12
	pop $11
	pop $10
	pop $9
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	push $5
	push $6
	push $7
	push $8
	push $9
	push $10
	push $11
	push $12
	clparent TextBoxTyper,init
	push A
	push "rewinder"
	push "null"
	push "rewinderbg"
	push "null"
	cthis vars2
	end method
	method setrewinder
	localstring $1
	pop $1
	push $1
	pop rewinder
	push $1
	push "bg"
	pop $b
	popax
	add $a,$b
	pop rewinderbg
	end method
	method activate
	localint $1
	pop $1
	push $1
	clparent TextBoxTyper,activate
	cthis updaterewactual
	end method
	method updaterewactual
	push Row
	cthis updaterewpos
	end method
	method updaterewpos
	localint $1
	pop $1
	push rewinder
	push "null"
	cmpjne
	cmp0
	je l2033
	localdef $2
	push "tt"
	push $1
	pop $b
	popax
	add $a,$b
	pop $2
	push $2
	spushs
	spop $a
	call [$a],getpy
	push rewinderbg
	spushs
	spop $a
	call [$a],getpy
	cmpjl
	cmp0
	je l2035
	push rewinder
	spushs
	push 0
	push rewinderbg
	spushs
	spop $a
	call [$a],getpy
	push $2
	spushs
	spop $a
	call [$a],getpy
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],rewind
	jmp l2034
l2035:
	push $2
	spushs
	spop $a
	call [$a],getey
	push rewinderbg
	spushs
	spop $a
	call [$a],getey
	cmpja
	cmp0
	je l2037
	push rewinder
	spushs
	push 0
	push rewinderbg
	spushs
	spop $a
	call [$a],getey
	push $2
	spushs
	spop $a
	call [$a],getey
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],rewind
l2037:
l2034:
l2033:
	end method
	end class

	class DelayTaker
	method init
	new int,bonrel
	push 0
	pop bonrel
	new int,bstart
	push 0
	pop bstart
	new int,bclickrel
	push 1
	pop bclickrel
	push "timwez"
	push 300
	push 1
	push "DelayTaker0"
	cthis cnewtimerfin
	end method
	method DelayTaker0
	push 1
	pop bonrel
	end method
	method setclickrel
	localint $1
	pop $1
	push $1
	pop bclickrel
	end method
	method setdelay
	localint $1
	pop $1
	push $1
	call timwez,delay
	end method
	method take
	push bclickrel
	cmp0
	je l2039
	call timwez,play
	push 0
	pop bonrel
	jmp l2038
l2039:
	push 1
	pop bonrel
l2038:
	push 1
	pop bstart
	end method
	method ret
	push 0
	pop bonrel
	push 0
	pop bstart
	push 0
	call timwez,stop
	end method
	method isonclick
	cthis stoptimer
	push bstart
	cmp0
	je l2040
	push bonrel
	neg
	jmp l2042
l2040:
	push 0
	jmp l2042
l2041:
	push 1
l2042:
	end method
	method isonrel
	cthis stoptimer
	push bstart
	cmp0
	je l2043
	push bonrel
	jmp l2045
l2043:
	push 0
	jmp l2045
l2044:
	push 1
l2045:
	end method
	method istaken
	push bstart
	end method
	method stoptimer
	push 0
	call timwez,stop
	end method
	end class

	class ImgMover
	method init
	new string,smoved
	push "null"
	pop smoved
	new int,ilastx
	new int,ilasty
	new int,irelx
	new int,irely
	end method
	method mssetobj
	localstring $1
	pop $1
	push $1
	call mouse,getpos
	cthis setobj
	end method
	method setobj
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push 0
	push 0
	cthis set
	end method
	method setcobj
	localstring $1
	pop $1
	push $1
	push $1
	spushs
	spop $a
	call [$a],getcx
	push $1
	spushs
	spop $a
	call [$a],getcy
	cthis setobj
	end method
	method setpobj
	localstring $1
	pop $1
	push $1
	push $1
	spushs
	spop $a
	call [$a],getpx
	push $1
	spushs
	spop $a
	call [$a],getpy
	cthis setobj
	end method
	method set
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getposx
	push $4
	pop $b
	popax
	sub $a,$b
	pop ilastx
	push $1
	spushs
	spop $a
	call [$a],getposy
	push $5
	pop $b
	popax
	sub $a,$b
	pop ilasty
	push $2
	push $1
	spushs
	spop $a
	call [$a],getpx
	pop $b
	popax
	sub $a,$b
	pop irelx
	push $3
	push $1
	spushs
	spop $a
	call [$a],getpy
	pop $b
	popax
	sub $a,$b
	pop irely
	push $1
	pop smoved
	end method
	method msmove
	call mouse,getpos
	cthis move
	end method
	method msftmove
	call mouse,getpos
	cthis ftmove
	end method
	method move
	localint $1
	localint $2
	pop $2
	pop $1
	push smoved
	push "null"
	cmpjne
	cmp0
	je l2047
	push smoved
	spushs
	push $1
	push smoved
	spushs
	spop $a
	call [$a],lodx
	pop $b
	popax
	sub $a,$b
	push irelx
	pop $b
	popax
	sub $a,$b
	push $2
	push smoved
	spushs
	spop $a
	call [$a],lody
	pop $b
	popax
	sub $a,$b
	push irely
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setpos
l2047:
	end method
	method ftmove
	localint $1
	localint $2
	pop $2
	pop $1
	push smoved
	push "null"
	cmpjne
	cmp0
	je l2049
	push smoved
	spushs
	push $1
	push $2
	spop $a
	call [$a],setpos
l2049:
	end method
	method retobj
	push 0
	push 0
	cthis ret
	end method
	method ret
	localint $1
	localint $2
	pop $2
	pop $1
	push smoved
	spushs
	push ilastx
	push $1
	pop $b
	popax
	add $a,$b
	push ilasty
	push $2
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	cthis free
	end method
	method put
	localint $1
	localint $2
	pop $2
	pop $1
	push smoved
	spushs
	push $1
	push $2
	spop $a
	call [$a],setpos
	cthis free
	end method
	method free
	push "null"
	pop smoved
	end method
	method getmover
	push smoved
	end method
	method getfree
	localdef $1
	push smoved
	pop $1
	cthis free
	push $1
	end method
	method moving
	push smoved
	push "null"
	cmpjne
	end method
	method setmoved
	localstring $1
	pop $1
	push $1
	pop smoved
	end method
	end class

	class ConImgMover
	parent ImgMover
	parent ObjController
	method init
	clparent ImgMover,init
	clparent ObjController,init
	end method
	method onmousemove
	cthis msmove
	end method
	method onmouselclick
	cthis getname
	push "_GET"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method onmouselrel
	push smoved
	push "null"
	cmpjne
	cmp0
	je l2051
	cthis getname
	push "_PUT"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
l2051:
	end method
	end class

	class DelayImgMover
	parent classlocker
	parent ImgMover
	method init
	clparent classlocker,init
	clparent ImgMover,init
	new DelayTaker,cldt
	push "b2clicks"
	push 0
	cthis var2
	end method
	method setclickrel
	localint $1
	pop $1
	push $1
	call cldt,setclickrel
	end method
	method reset
	call cldt,ret
	end method
	method _put
	push b2clicks
	neg
	cmp0
	je l2053
	call cldt,ret
l2053:
	cthis getname
	push "_PUT"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method _get
	cthis getname
	push "_GET"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method set
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	push $5
	clparent ImgMover,set
	push b2clicks
	neg
	cmp0
	je l2055
	call cldt,take
l2055:
	end method
	method onmousemove
	cthis msmove
	end method
	method onmouselclick
	cthis getlock
	cmp0
	je l2057
	ret
l2057:
	push b2clicks
	cmp0
	je l2059
	cthis moving
	neg
	cmp0
	je l2061
	cthis _get
	jmp l2060
l2061:
	cthis _put
l2060:
	jmp l2058
l2059:
	call cldt,isonclick
	cmp0
	je l2063
	cthis _put
	jmp l2062
l2063:
	call cldt,istaken
	neg
	cmp0
	je l2065
	cthis _get
l2065:
l2062:
l2058:
	end method
	method onmouselrel
	cthis getlock
	cmp0
	je l2067
	ret
l2067:
	call cldt,isonrel
	cmp0
	je l2069
	push b2clicks
	neg
	jmp l2071
l2069:
	push 0
	jmp l2071
l2070:
	push 1
l2071:
	cmp0
	je l2072
	cthis _put
l2072:
	end method
	end class

	class DelayMover
	parent DelayImgMover
	parent ObjController
	method init
	clparent DelayImgMover,init
	clparent ObjController,init
	end method
	end class

	class Rewinder
	parent classlocker
	method init
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	clparent classlocker,init
	new string,sarrowdir
	new int,ilenx
	new int,ileny
	new string,sgr
	new string,sorientation
	new int,bvertical
	new int,bfilteritem
	push 0
	pop bfilteritem
	new int,ibx1
	push 0
	pop ibx1
	new int,ibx2
	push iResX
	pop ibx2
	new int,iby1
	push 0
	pop iby1
	new int,iby2
	push iResY
	pop iby2
	new int,iodleg
	push 2
	pop iodleg
	new ImgMover,clmv
	push "timtick"
	push 1
	push 1
	push "timfin"
	cthis cnewtimercyclefin
	push A
	push "borx1"
	push $1
	push "bory1"
	push $2
	push "borx2"
	push $3
	push "bory2"
	push $4
	cthis vars2
	new snd,fxrew
	end method
	method movefilter
	push 1
	pop bfilteritem
	end method
	method movenormal
	push 0
	pop bfilteritem
	end method
	method setfxrew
	localstring $1
	pop $1
	cthis getsndpath
	push $1
	pop $b
	popax
	add $a,$b
	call fxrew,load
	end method
	method getitem
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	push $1
	spushs
	spop $a
	call [$a],getz
	push 1
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setz
	push $1
	push $2
	push $3
	push sgr
	spushs
	spop $a
	call [$a],getpx
	push sgr
	spushs
	spop $a
	call [$a],getpy
	call clmv,set
	push $1
	spushs
	push 0
	push 0
	push iResX
	push iResY
	spop $a
	call [$a],clip
	push sorientation
	push "up"
	cmpje
	cmp0
	jne l2075
	push sorientation
	push "down"
	cmpje
	jmp l2076
l2074:
	push 0
	jmp l2076
l2075:
	push 1
l2076:
	cmp0
	je l2077
	push sgr
	spushs
	push $1
	push $1
	spushs
	spop $a
	call [$a],getw
	push iodleg
	pop $b
	popax
	add $a,$b
	popax
	sub 0,$a
	push 0
	spop $a
	call [$a],movefrom
	push $1
	spushs
	push $1
	spushs
	spop $a
	call [$a],getw
	push 0
	spop $a
	call [$a],move
	jmp l2073
l2077:
	push sgr
	spushs
	push $1
	push 0
	push $1
	spushs
	spop $a
	call [$a],geth
	push iodleg
	pop $b
	popax
	add $a,$b
	popax
	sub 0,$a
	spop $a
	call [$a],movefrom
	push $1
	spushs
	push 0
	push $1
	spushs
	spop $a
	call [$a],geth
	spop $a
	call [$a],move
l2073:
	push sgr
	spushs
	push $1
	spop $a
	call [$a],remove
	end method
	method pickup
	localint $1
	localint $2
	pop $2
	pop $1
	push sgr
	spushs
	push $1
	push $2
	push 1
	push 1
	spop $a
	call [$a],isin
	cmp0
	je l2079
	push sgr
	spushs
	spop $a
	call [$a],getsfound
	push $1
	push $2
	cthis getitem
	push 1
	ret
l2079:
	push 0
	ret
	end method
	method mspickup
	call mouse,getpos
	cthis pickup
	ret
	end method
	method freeitem
	call clmv,free
	end method
	method moveitem
	push bfilteritem
	cmp0
	je l2081
	call clmv,msftmove
	jmp l2080
l2081:
	call clmv,msmove
l2080:
	end method
	method retitem
	localstring $1
	call clmv,getmover
	pop $1
	push sgr
	spushs
	spop $a
	call [$a],getpx
	push sgr
	spushs
	spop $a
	call [$a],getpy
	call clmv,ret
	push $1
	cthis putitem
	end method
	method putitem
	localstring $1
	pop $1
	push sorientation
	push "up"
	cmpje
	cmp0
	jne l2084
	push sorientation
	push "down"
	cmpje
	jmp l2085
l2083:
	push 0
	jmp l2085
l2084:
	push 1
l2085:
	cmp0
	je l2086
	push $1
	spushs
	push sgr
	spushs
	spop $a
	call [$a],getex
	push $1
	spushs
	spop $a
	call [$a],getpx
	pop $b
	popax
	sub $a,$b
	push iodleg
	pop $b
	popax
	add $a,$b
	push 0
	spop $a
	call [$a],move
	jmp l2082
l2086:
	push $1
	spushs
	push 0
	push sgr
	spushs
	spop $a
	call [$a],getey
	push $1
	spushs
	spop $a
	call [$a],getpy
	pop $b
	popax
	sub $a,$b
	push iodleg
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],move
l2082:
	push sgr
	spushs
	push $1
	spop $a
	call [$a],add
	push $1
	spushs
	push $1
	spushs
	spop $a
	call [$a],getz
	push 1
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setz
	push $1
	spushs
	push ibx1
	push iby1
	push ibx2
	push iby2
	spop $a
	call [$a],clip
	end method
	method getmoved
	call clmv,getmover
	ret
	end method
	method getbutw
	call anupstd,getw
	ret
	end method
	method getbuth
	call anupstd,geth
	ret
	end method
	method movearrows
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call grarrows,move
	end method
	method build
	localstring $1
	localint $2
	localstring $3
	localstring $4
	localint $5
	localstring $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $6
	pop sgr
	new anima,anupstd
	push $1
	call anupstd,load
	push $2
	call anupstd,setz
	push "up"
	push 0
	call anupstd,setframe
	push "anupstd"
	push "anupact"
	cthis copyanima
	push "up"
	push 1
	call anupact,setframe
	push "anupstd"
	push "andownact"
	cthis copyanima
	push "down"
	push 1
	call andownact,setframe
	push "anupstd"
	push "andownstd"
	cthis copyanima
	push "down"
	push 0
	call andownstd,setframe
	push "butup"
	push "anupstd"
	push "anupact"
	push "null"
	push $3
	cthis newbutan
	push "butdown"
	push "andownstd"
	push "andownact"
	push "null"
	push $3
	cthis newbutan
	push "onmoveon"
	push "_rewbutmoveon"
	call butup,addmethod
	push "onmoveon"
	push "_rewbutmoveon"
	call butdown,addmethod
	push "onmoveoff"
	push "_rewstrzalkaoff"
	call butup,addmethod
	push "onmoveoff"
	push "_rewstrzalkaoff"
	call butdown,addmethod
	push "onclick"
	push "_rewbutclick"
	call butup,addmethod
	push "onclick"
	push "_rewbutclick"
	call butdown,addmethod
	push "onrel"
	push "_rewbutrel"
	call butup,addmethod
	push "onrel"
	push "_rewbutrel"
	call butdown,addmethod
	push $4
	pop sorientation
	new gmimgvec,grarrows
	push "grarrows"
	push "anupstd"
	popax
	pop $b
	psax
	call [$b],operator+
	push "anupact"
	popax
	pop $b
	psax
	call [$b],operator+
	push "andownact"
	popax
	pop $b
	psax
	call [$b],operator+
	push "andownstd"
	popax
	pop $b
	psax
	call [$b],operator+
	popax
	localint $7
	localint $8
	localint $9
	localint $10
	push sorientation
	push "up"
	cmpje
	cmp0
	jne l2089
	push sorientation
	push "down"
	cmpje
	jmp l2090
l2088:
	push 0
	jmp l2090
l2089:
	push 1
l2090:
	cmp0
	je l2091
	push 0
	pop bvertical
	push $5
	pop ilenx
	push sorientation
	push "down"
	cmpje
	cmp0
	je l2093
	push borx1
	push bory2
	call anupstd,geth
	pop $b
	popax
	sub $a,$b
	call anupstd,setpos
	push borx1
	push bory2
	call anupact,geth
	pop $b
	popax
	sub $a,$b
	call anupact,setpos
	push borx2
	call andownstd,getw
	pop $b
	popax
	sub $a,$b
	push bory2
	call andownstd,geth
	pop $b
	popax
	sub $a,$b
	call andownstd,setpos
	push borx2
	call andownact,getw
	pop $b
	popax
	sub $a,$b
	push bory2
	call andownact,geth
	pop $b
	popax
	sub $a,$b
	call andownact,setpos
	call andownstd,getey
	pop $7
	jmp l2092
l2093:
	push borx1
	push bory1
	call anupstd,setpos
	push borx1
	push bory1
	call anupact,setpos
	push borx2
	call andownstd,getw
	pop $b
	popax
	sub $a,$b
	push bory1
	call andownstd,setpos
	push borx2
	call andownact,getw
	pop $b
	popax
	sub $a,$b
	push bory1
	call andownact,setpos
	push bory1
	pop $7
l2092:
	call anupstd,getex
	push iodleg
	pop $b
	popax
	add $a,$b
	pop ibx1
	call andownstd,getpx
	push iodleg
	pop $b
	popax
	sub $a,$b
	pop ibx2
	push ibx1
	pop $8
	jmp l2087
l2091:
	push 1
	pop bvertical
	push $5
	pop ileny
	push sorientation
	push "right"
	cmpje
	cmp0
	je l2095
	push borx2
	call anupstd,getw
	pop $b
	popax
	sub $a,$b
	push bory1
	call anupstd,setpos
	push borx2
	call anupact,getw
	pop $b
	popax
	sub $a,$b
	push bory1
	call anupact,setpos
	push borx2
	call andownstd,getw
	pop $b
	popax
	sub $a,$b
	push bory2
	call andownstd,geth
	pop $b
	popax
	sub $a,$b
	call andownstd,setpos
	push borx2
	call andownact,getw
	pop $b
	popax
	sub $a,$b
	push bory2
	call andownact,geth
	pop $b
	popax
	sub $a,$b
	call andownact,setpos
	call anupstd,getex
	pop $8
	jmp l2094
l2095:
	push borx1
	push bory1
	call anupstd,setpos
	push borx1
	push bory1
	call anupact,setpos
	push borx1
	push bory2
	call andownstd,geth
	pop $b
	popax
	sub $a,$b
	call andownstd,setpos
	push borx1
	push bory2
	call andownact,geth
	pop $b
	popax
	sub $a,$b
	call andownact,setpos
	push borx1
	pop $8
l2094:
	call anupstd,getey
	push iodleg
	pop $b
	popax
	add $a,$b
	pop iby1
	call andownstd,getpy
	push iodleg
	pop $b
	popax
	sub $a,$b
	pop iby2
	push iby1
	pop $7
l2087:
	cthis getname
	push "up"
	call butup,_rewbuildbut
	cthis getname
	push "down"
	call butdown,_rewbuildbut
	localint $11
	push $6
	spushs
	spop $a
	call [$a],size
	pop $11
	push $6
	spushs
	push $8
	push $7
	spop $a
	call [$a],_setpos
	new int,ilimx
	push $8
	pop ilimx
	new int,ilimy
	push $7
	pop ilimy
	localstring $12
	localint $13
	push 0
	pop $13
l2096:
	push $13
	push $11
	cmpjl
	cmp0
	je l2097
	jmp l2099
l2098:
	add $13,1
	pop $13
	jmp l2096
l2099:
	push sgr
	spushs
	push $13
	spop $a
	call [$a],get
	pop $12
	push sorientation
	push "right"
	cmpje
	cmp0
	je l2101
	push $12
	spushs
	push $8
	push $12
	spushs
	spop $a
	call [$a],getw
	pop $b
	popax
	sub $a,$b
	push $12
	spushs
	spop $a
	call [$a],lodx
	pop $b
	popax
	sub $a,$b
	push $7
	push $12
	spushs
	spop $a
	call [$a],lody
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setpos
	push $12
	spushs
	spop $a
	call [$a],geth
	push iodleg
	pop $b
	popax
	add $a,$b
	popax
	add $7,$a
	pop $7
	jmp l2100
l2101:
	push sorientation
	push "left"
	cmpje
	cmp0
	je l2103
	push $12
	spushs
	push $8
	push $12
	spushs
	spop $a
	call [$a],lodx
	pop $b
	popax
	sub $a,$b
	push $7
	push $12
	spushs
	spop $a
	call [$a],lody
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setpos
	push $12
	spushs
	spop $a
	call [$a],geth
	push iodleg
	pop $b
	popax
	add $a,$b
	popax
	add $7,$a
	pop $7
	jmp l2102
l2103:
	push sorientation
	push "up"
	cmpje
	cmp0
	je l2105
	push $12
	spushs
	push $8
	push $12
	spushs
	spop $a
	call [$a],lodx
	pop $b
	popax
	sub $a,$b
	push $7
	push $12
	spushs
	spop $a
	call [$a],lody
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setpos
	push $12
	spushs
	spop $a
	call [$a],getw
	push iodleg
	pop $b
	popax
	add $a,$b
	popax
	add $8,$a
	pop $8
	jmp l2104
l2105:
	push sorientation
	push "down"
	cmpje
	cmp0
	je l2107
	push $12
	spushs
	push $8
	push $12
	spushs
	spop $a
	call [$a],lodx
	pop $b
	popax
	sub $a,$b
	push $7
	push $12
	spushs
	spop $a
	call [$a],geth
	pop $b
	popax
	sub $a,$b
	push $12
	spushs
	spop $a
	call [$a],lody
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setpos
	push $12
	spushs
	spop $a
	call [$a],getw
	push iodleg
	pop $b
	popax
	add $a,$b
	popax
	add $8,$a
	pop $8
l2107:
l2104:
l2102:
l2100:
	push $12
	spushs
	push ibx1
	push iby1
	push ibx2
	push iby2
	spop $a
	call [$a],clip
	jmp l2098
l2097:
	end method
	method _rewbuildbut
	localstring $1
	localstring $2
	pop $2
	pop $1
	new string,_sob
	push $1
	pop _sob
	new string,_sdir
	push $2
	push "up"
	cmpje
	cmp0
	je l2109
	push bvertical
	push 0
	cmpje
	cmp0
	je l2111
	push "left"
	pop _sdir
	jmp l2110
l2111:
	push "up"
	pop _sdir
l2110:
	jmp l2108
l2109:
	push $2
	push "down"
	cmpje
	cmp0
	je l2113
	push bvertical
	push 0
	cmpje
	cmp0
	je l2115
	push "right"
	pop _sdir
	jmp l2114
l2115:
	push "down"
	pop _sdir
l2114:
l2113:
l2108:
	end method
	method _rewbutmoveon
	push _sob
	push "_"
	pop $b
	popax
	add $a,$b
	push _sdir
	pop $b
	popax
	add $a,$b
	push "_MOVEON"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method _rewbutclick
	push _sdir
	cthis mstrzalkaon
	push _sob
	push "_"
	pop $b
	popax
	add $a,$b
	push _sdir
	pop $b
	popax
	add $a,$b
	push "_CLICK"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method mstrzalkaon
	localstring $1
	pop $1
	push $1
	pop sarrowdir
	call timtick,play
	end method
	method _rewbutrel
	push "null"
	pop sarrowdir
	push 0
	call timtick,stop
	push 0
	call fxrew,stop
	end method
	method _rewstrzalkaoff
	push "null"
	pop sarrowdir
	push 0
	call timtick,stop
	push 0
	call fxrew,stop
	push _sob
	push "_"
	pop $b
	popax
	add $a,$b
	push _sdir
	pop $b
	popax
	add $a,$b
	push "_MOVEOFF"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method timfin
	cthis getlock
	cmp0
	je l2117
	ret
l2117:
	localint $1
	push 0
	pop $1
	push sarrowdir
	push "null"
	cmpjne
	cmp0
	je l2119
	push sgr
	spushs
	spop $a
	call [$a],empty
	neg
	jmp l2121
l2119:
	push 0
	jmp l2121
l2120:
	push 1
l2121:
	cmp0
	je l2122
	push sarrowdir
	push "up"
	cmpje
	cmp0
	je l2124
	push sgr
	spushs
	spop $a
	call [$a],getey
	call andownstd,getpy
	push ileny
	pop $b
	popax
	sub $a,$b
	cmpja
	cmp0
	je l2126
	push sgr
	spushs
	push 0
	push ileny
	popax
	sub 0,$a
	spop $a
	call [$a],move
	push 1
	pop $1
l2126:
	jmp l2123
l2124:
	push sarrowdir
	push "down"
	cmpje
	cmp0
	je l2128
	push sgr
	spushs
	spop $a
	call [$a],getpy
	push ilimy
	cmpjl
	cmp0
	je l2130
	push sgr
	spushs
	push 0
	push ileny
	spop $a
	call [$a],move
	push 1
	pop $1
l2130:
	jmp l2127
l2128:
	push sarrowdir
	push "left"
	cmpje
	cmp0
	je l2132
	push sgr
	spushs
	spop $a
	call [$a],getex
	call andownstd,getpx
	push ilenx
	pop $b
	popax
	sub $a,$b
	cmpja
	cmp0
	je l2134
	push sgr
	spushs
	push ilenx
	popax
	sub 0,$a
	push 0
	spop $a
	call [$a],move
	push 1
	pop $1
l2134:
	jmp l2131
l2132:
	push sarrowdir
	push "right"
	cmpje
	cmp0
	je l2136
	push sgr
	spushs
	spop $a
	call [$a],getpx
	push ilimx
	cmpjl
	cmp0
	je l2138
	push sgr
	spushs
	push ilenx
	push 0
	spop $a
	call [$a],move
	push 1
	pop $1
l2138:
l2136:
l2131:
l2127:
l2123:
l2122:
	push $1
	cmp0
	je l2140
	call fxrew,isplaying
	neg
	cmp0
	je l2142
	call fxrew,play
l2142:
	jmp l2139
l2140:
	push 0
	call fxrew,stop
l2139:
	cthis play
	end method
	end class

	class ConRewinder
	parent Rewinder
	parent ObjController
	method init
	clparent Rewinder,init
	clparent ObjController,init
	new DelayTaker,cldt
	end method
	method getitem
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	clparent Rewinder,getitem
	call cldt,take
	end method
	method _put
	call cldt,ret
	cthis getname
	push "_PUT"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method onmousemove
	cthis moveitem
	end method
	method onmouselrel
	cthis getlock
	cmp0
	je l2144
	ret
l2144:
	call cldt,isonrel
	cmp0
	je l2146
	cthis _put
l2146:
	end method
	method onmouselclick
	cthis getlock
	cmp0
	je l2148
	ret
l2148:
	call cldt,isonclick
	cmp0
	je l2150
	cthis _put
	jmp l2149
l2150:
	call cldt,istaken
	neg
	cmp0
	je l2152
	cthis getname
	push "_GET"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
l2152:
l2149:
	end method
	end class

	class Button
	parent LObjController
	method init
	clparent LObjController,init
	cthis unlock
	new gmimgvec,grbuts
	push A
	push "sobject"
	push "null"
	push "sclicked"
	push "null"
	push "bcheck2klik"
	push 0
	cthis vars2
	new int,ipadclick
	push 0
	pop ipadclick
	end method
	method print
	call grbuts,print
	end method
	method sort
	call grbuts,sortimgs
	end method
	method addgroups
	call grbuts,addgroups
	call grbuts,sortimgs
	end method
	method addgroup
	localstring $1
	pop $1
	push $1
	call grbuts,addgr
	call grbuts,sortimgs
	end method
	method addlist
	call grbuts,addlist
	call grbuts,sortimgs
	end method
	method add
	localstring $1
	pop $1
	push $1
	call grbuts,add
	call grbuts,sortimgs
	end method
	method addonce
	localstring $1
	pop $1
	push $1
	call grbuts,addonce
	call grbuts,sortimgs
	end method
	method addbut
	localstring $1
	pop $1
	push $1
	call grbuts,addonce
	call grbuts,sortimgs
	end method
	method contains
	localstring $1
	pop $1
	push $1
	call grbuts,contains
	end method
	method addlocker
	localstring $1
	pop $1
	push $1
	cthis add
	push $1
	clparent classlocker,setaslocker
	end method
	method removebutlist
	push "removebut"
	cthis withlist
	end method
	method removebut
	localstring $1
	pop $1
	push $1
	call grbuts,remove
	localint $2
	push sobject
	push "null"
	cmpjne
	cmp0
	jne l2154
	push sclicked
	push "null"
	cmpjne
	jmp l2155
l2153:
	push 0
	jmp l2155
l2154:
	push 1
l2155:
	pop $2
	push $1
	push sobject
	cmpje
	cmp0
	je l2157
	push "null"
	pop sobject
l2157:
	push $1
	push sclicked
	cmpje
	cmp0
	je l2159
	push "null"
	pop sclicked
l2159:
	push $2
	cmp0
	je l2161
	cthis onmousemove
l2161:
	end method
	method removebutmoveoff
	localstring $1
	pop $1
	push $1
	call grbuts,remove
	push $1
	cthis checkmoveoff
	end method
	method checkmoveoff
	localstring $1
	pop $1
	push $1
	push sobject
	cmpje
	cmp0
	je l2163
	cthis lastoff
	cthis onmousemove
l2163:
	end method
	method load
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push GAME
	spushs
	push "gmimgvec"
	push $1
	spop $a
	call [$a],varnew
	push $1
	push $2
	popax
	pop $b
	psax
	call [$b],operator*
	push $1
	spushs
	push $3
	spop $a
	call [$a],each
	push $1
	cthis addgroup
	end method
	method remove
	localstring $1
	pop $1
	push GAME
	spushs
	push $1
	spop $a
	call [$a],hasvar
	cmp0
	je l2165
	push $1
	call grbuts,removegr
l2165:
	end method
	method loadfrom
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	localdef $5
	cthis getgraphpath
	pop $5
	push $2
	cthis setgraphpath
	push $1
	push $3
	push $4
	cthis load
	push $5
	cthis setgraphpath
	end method
	method onmouselclick
	cthis getlock
	cmp0
	je l2167
	ret
l2167:
	cthis checktouchpad
	cmp0
	je l2169
	push bcheck2klik
	jmp l2171
l2169:
	push 0
	jmp l2171
l2170:
	push 1
l2171:
	cmp0
	je l2172
	push ipadclick
	cmp0
	je l2174
	localdef $1
	push sobject
	pop $1
	push $1
	push sobject
	cmpje
	cmp0
	je l2176
	push 0
	pop ipadclick
	cthis _butmouselclick
	jmp l2175
l2176:
	push sobject
	push "null"
	cmpje
	cmp0
	je l2178
	push 0
	pop ipadclick
l2178:
l2175:
	jmp l2173
l2174:
	push 1
	pop ipadclick
l2173:
	jmp l2168
l2172:
	cthis _butmouselclick
l2168:
	end method
	method _butmouselclick
	cthis getname
	push "_lclick"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	push sobject
	push "null"
	cmpjne
	cmp0
	je l2180
	push sobject
	pop sclicked
	push sobject
	spushs
	push "butclick"
	spop $a
	call [$a],hasaddedmet
	cmp0
	je l2182
	push sobject
	spushs
	spop $a
	call [$a],butclick
l2182:
l2180:
	end method
	method onmouselrel
	cthis getlock
	cmp0
	je l2184
	ret
l2184:
	cthis checktouchpad
	cmp0
	je l2186
	push sobject
	push "null"
	cmpjne
	cmp0
	je l2188
	cthis checktouchpad
	cmp0
	je l2190
	push sobject
	spushs
	push "butrel"
	spop $a
	call [$a],hasaddedmet
	jmp l2192
l2190:
	push 0
	jmp l2192
l2191:
	push 1
l2192:
	cmp0
	je l2193
	push sobject
	spushs
	spop $a
	call [$a],butrel
	cthis getname
	push "_lrel"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
l2193:
	push "null"
	pop sobject
l2188:
l2186:
	cthis getname
	push "_lrel"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	push sclicked
	push "null"
	cmpjne
	cmp0
	je l2195
	push sclicked
	spushs
	push "butlrel"
	spop $a
	call [$a],hasaddedmet
	jmp l2197
l2195:
	push 0
	jmp l2197
l2196:
	push 1
l2197:
	cmp0
	je l2198
	push sclicked
	spushs
	spop $a
	call [$a],butlrel
	jmp l2194
l2198:
	push "null"
	pop sclicked
l2194:
	end method
	method onmousemove
	cthis getlock
	cmp0
	je l2200
	ret
l2200:
	push sclicked
	push "null"
	cmpjne
	cmp0
	je l2202
	push sclicked
	spushs
	push "butmoving"
	spop $a
	call [$a],hasaddedmet
	cmp0
	je l2204
	push sclicked
	spushs
	spop $a
	call [$a],butmoving
l2204:
l2202:
	localint $1
	localint $2
	call mouse,getpos
	pop $2
	pop $1
	push $1
	push $2
	push "isbutin"
	call grbuts,isinfunc
	cmp0
	je l2206
	localdef $3
	call grbuts,getsfound
	pop $3
	push $3
	push sobject
	cmpjne
	cmp0
	je l2208
	cthis lastoff
	push $3
	pop sobject
	cthis getname
	push "_moveon"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	push $3
	spushs
	push "butmoveon"
	spop $a
	call [$a],hasaddedmet
	cmp0
	je l2210
	push $3
	spushs
	spop $a
	call [$a],butmoveon
l2210:
l2208:
	jmp l2205
l2206:
	cthis lastoff
l2205:
	end method
	method lastoff
	push sobject
	push "null"
	cmpjne
	cmp0
	je l2212
	cthis getname
	push "_moveoff"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	push sobject
	spushs
	push "butmoveoff"
	spop $a
	call [$a],hasaddedmet
	cmp0
	je l2214
	push sobject
	spushs
	spop $a
	call [$a],butmoveoff
l2214:
	push "null"
	pop sobject
l2212:
	end method
	method refresh
	cthis lastoff
	cthis onmousemove
	end method
	end class

	new snd,sndfxmoveonms
	push "sounds/sfx/butmoveon2.ogg"
	call sndfxmoveonms,load
	push 50
	call sndfxmoveonms,setvol
	method Button_isin
	push "isbutin"
	push "global11"
	cthis addmethod
	end method
	method global11
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 0
	cthis isin
	end method
	method Button_isinvis
	push "isbutin"
	push "global12"
	cthis addmethod
	end method
	method global12
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	end method
	method Button_isinalpha
	push "isbutin"
	push "global13"
	cthis addmethod
	end method
	method global13
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 1
	cthis isin
	end method
	method Button_isinvisalpha
	push "isbutin"
	push "global14"
	cthis addmethod
	end method
	method global14
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 1
	cthis isin
	end method
	method Button_moveon
	push "butmoveon"
	push "global15"
	cthis addmethod
	end method
	method global15
	call sndakskermovon,playif
	call advmouse,setbut
	push 1
	popax
	sub 0,$a
	cthis nofframes
	push 1
	cmpja
	cmp0
	je l2216
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
l2216:
	end method
	method Button_moveon_std
	push "butmoveon"
	push "global16"
	cthis addmethod
	end method
	method global16
	call sndakskermovon,playif
	push 1
	popax
	sub 0,$a
	cthis nofframes
	push 1
	cmpja
	cmp0
	je l2218
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
l2218:
	end method
	method Button_moveonplay
	push "butmoveon"
	push "global17"
	cthis addmethod
	end method
	method global17
	call sndakskermovon,play
	call advmouse,setbut
	push 1
	popax
	sub 0,$a
	cthis isplaying
	push 0
	cmpje
	cmp0
	je l2220
	push 1
	popax
	sub 0,$a
	cthis play
l2220:
	end method
	method Button_moveoff
	push "butmoveoff"
	push "global18"
	cthis addmethod
	end method
	method global18
	call advmouse,setstd
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	end method
	method Button_moveonms
	push "butmoveon"
	push "global19"
	cthis addmethod
	end method
	method global19
	call advmouse,setbut
	end method
	method Button_moveonmstd
	push "butmoveon"
	push "global20"
	cthis addmethod
	end method
	method global20
	call advmouse,setstd
	end method
	method Button_moveonfxms
	push "butmoveon"
	push "global21"
	cthis addmethod
	end method
	method global21
	call advmouse,setbut
	call sndfxmoveonms,playif
	end method
	method Button_moveoffms
	push "butmoveoff"
	push "global22"
	cthis addmethod
	end method
	method global22
	call advmouse,setstd
	end method
	method Button_std
	cthis Button_isin
	cthis Button_moveon
	cthis Button_moveoff
	end method
	method Button_stdalpha
	cthis Button_isinalpha
	cthis Button_moveon
	cthis Button_moveoff
	end method
	method Button_stdms
	cthis Button_isinalpha
	cthis Button_moveonms
	cthis Button_moveoffms
	end method
	class Buttons
	parent LObjController
	method init
	localstring $1
	pop $1
	clparent LObjController,init
	cthis unlock
	new gmimgvec,grbuts
	new int,__id
	push 0
	pop __id
	new string,sanbut
	push "anbut"
	pop sanbut
	push sanbut
	push $1
	push 10
	cthis newanima
	push sanbut
	push sanbut
	push "grbuts"
	cthis newanactionsgr
	popax
	call anbut,hide
	push 10
	call grbuts,setz
	push "Buttons0"
	call grbuts,removeif
	new string,slastb
	push "null"
	pop slastb
	push A
	push "sobject"
	push "null"
	push "bvisible"
	push 1
	push "balpha"
	push 1
	cthis vars2
	new int,ipadclick
	push 0
	pop ipadclick
	push "bcheck2klik"
	push 0
	cthis var2
	end method
	method Buttons0
	cthis actionname
	push "bkg"
	cmpje
	cmp0
	je l2222
	cthis getz
	push 1
	pop $b
	popax
	sub $a,$b
	cthis setz
	push 1
	jmp l2221
l2222:
	push 0
l2221:
	end method
	method _release
	cthis checktouchpad
	cmp0
	je l2224
	push 0
	pop ipadclick
l2224:
	push slastb
	spushs
	push 1
	popax
	sub 0,$a
	push 0
	spop $a
	call [$a],setframe
	cthis copyobj
	cthis getname
	push "_moveoff"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	push "null"
	pop slastb
	call advmouse,setstd
	end method
	method getbut
	call grbuts,getsfound
	end method
	method onmousemove
	cthis getlock
	cmp0
	je l2226
	ret
l2226:
	push 1
	popax
	sub 0,$a
	push 0
	call grbuts,setframe
	localdef $1
	call mouse,getpos
	push bvisible
	push balpha
	call grbuts,isin
	pop $1
	push slastb
	push "null"
	cmpjne
	cmp0
	je l2228
	push slastb
	spushs
	push 1
	popax
	sub 0,$a
	push 1
	spop $a
	call [$a],setframe
l2228:
	push $1
	cmp0
	je l2230
	localstring $2
	call grbuts,getsfound
	pop $2
	push $2
	push slastb
	cmpjne
	cmp0
	je l2232
	push slastb
	push "null"
	cmpjne
	cmp0
	je l2234
	cthis _release
l2234:
	push $2
	pop slastb
	push $2
	spushs
	push 1
	popax
	sub 0,$a
	push 1
	spop $a
	call [$a],setframe
	cthis copyobj
	call advmouse,setact
	cthis getname
	push "_moveon"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
l2232:
	jmp l2229
l2230:
	push slastb
	push "null"
	cmpjne
	cmp0
	je l2236
	cthis _release
l2236:
l2229:
	end method
	method copyobj
	push slastb
	spushs
	spop $a
	call [$a],actionname
	pop sobject
	end method
	method onmouselclick
	cthis getlock
	cmp0
	je l2238
	ret
l2238:
	cthis checktouchpad
	cmp0
	je l2240
	push bcheck2klik
	jmp l2242
l2240:
	push 0
	jmp l2242
l2241:
	push 1
l2242:
	cmp0
	je l2243
	push ipadclick
	cmp0
	je l2245
	push 0
	pop ipadclick
	cthis _butmouselclick
	jmp l2244
l2245:
	push 1
	pop ipadclick
	cthis onmousemove
l2244:
	jmp l2239
l2243:
	cthis _butmouselclick
l2239:
	end method
	method _butmouselclick
	push slastb
	push "null"
	cmpjne
	cmp0
	je l2247
	cthis copyobj
	cthis getname
	push "_lclick"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
l2247:
	end method
	method onmouselrel
	cthis getlock
	cmp0
	je l2249
	ret
l2249:
	push slastb
	push "null"
	cmpjne
	cmp0
	je l2251
	cthis copyobj
	cthis getname
	push "_lrel"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
l2251:
	end method
	method disable
	cthis lock
	call grbuts,hide
	push slastb
	push "null"
	cmpjne
	cmp0
	je l2253
	call advmouse,setstd
	push "null"
	pop slastb
l2253:
	end method
	method enable
	cthis unlock
	call grbuts,show
	end method
	end class

	class TextDb
	parent classlocker
	parent ObjController
	parent gfxObject
	method init
	localstring $1
	localint $2
	localstring $3
	localint $4
	localint $5
	localint $6
	localint $7
	localint $8
	localint $9
	localint $10
	localstring $11
	pop $11
	pop $10
	pop $9
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	clparent classlocker,init
	clparent ObjController,init
	new string,sFont
	push $1
	pop sFont
	new string,sFontBold
	push "null"
	pop sFontBold
	new string,sFontItalic
	push "null"
	pop sFontItalic
	new string,sFontBoldItalic
	push "null"
	pop sFontBoldItalic
	new int,bhtml
	push 0
	pop bhtml
	localstring $12
	localint $13
	localint $14
	push "$"
	call $1,contains
	cmp0
	je l2255
	push 1
	pop bhtml
	new vector,vfont
	push "string"
	call vfont,type
	push $1
	push "$"
	call vfont,vecbuildfromstring
	push 0
	pop $14
l2256:
	push $14
	call vfont,size
	cmpjl
	cmp0
	je l2257
	jmp l2259
l2258:
	add $14,1
	pop $14
	jmp l2256
l2259:
	push $14
	call vfont,get
	pop $12
	push "_italic"
	call $12,contains
	cmp0
	je l2261
	push "_bold"
	call $12,contains
	jmp l2263
l2261:
	push 0
	jmp l2263
l2262:
	push 1
l2263:
	cmp0
	je l2264
	push $12
	pop sFontBoldItalic
	jmp l2260
l2264:
	push "_italic"
	call $12,contains
	cmp0
	je l2266
	push $12
	pop sFontItalic
	jmp l2265
l2266:
	push "_bold"
	call $12,contains
	cmp0
	je l2268
	push $12
	pop sFontBold
	jmp l2267
l2268:
	push $12
	pop sFont
l2267:
l2265:
l2260:
	jmp l2258
l2257:
	push "$"
	call sFont,contains
	cmp0
	je l2270
	push sFontItalic
	push "null"
	cmpjne
	cmp0
	je l2272
	push sFontItalic
	pop sFont
	jmp l2271
l2272:
	push sFontBold
	push "null"
	cmpjne
	cmp0
	je l2274
	push sFontBold
	pop sFont
	jmp l2273
l2274:
	push sFontBoldItalic
	pop sFont
l2273:
l2271:
l2270:
	push sFont
	pop $1
	jmp l2254
l2255:
	push $1
	push $2
	cthis checkfont
	pop $1
l2254:
	new int,iFontSize
	push $2
	pop iFontSize
	push "Z"
	push $10
	cthis var2
	localstring $15
	push "null"
	pop $15
	push ":"
	call $3,contains
	cmp0
	je l2276
	push ":"
	call $3,strgetto
	push ":"
	pop $b
	popax
	add $a,$b
	pop $15
l2276:
	push ".db"
	call $3,contains
	cmp0
	je l2278
	push $15
	push "$path:"
	cmpje
	cmp0
	je l2280
	new db,dbtxt
	push $15
	call $3,strsubbs
	call dbtxt,load
	jmp l2279
l2280:
	push "dbtxt"
	push $3
	cthis newdb
l2279:
	jmp l2277
l2278:
	push $15
	spushs
	push "$lang:"
	cmpst
	jne l2282
	spop $a
	push "dbtxt"
	push $15
	call $3,strsubbs
	cthis lang_db
	jmp l2281
l2282:
	push "$var:"
	cmpst
	jne l2283
	spop $a
	new db,dbtxt
	push $15
	call $3,strsubbs
	call dbtxt,dbcopy
	jmp l2281
l2283:
	push "$row:"
	cmpst
	jne l2284
	spop $a
	new db,dbtxt
	push $15
	call $3,strsubbs
	spushs
	push ","
	spop $h
	call $h,strgetto
	pop $12
	push ","
	call $3,strgetfrom
	pop $13
	push 0
	pop $14
l2285:
	push $14
	push $12
	spushs
	push $13
	spop $a
	call [$a],getcolsno
	cmpjl
	cmp0
	je l2286
	jmp l2288
l2287:
	add $14,1
	pop $14
	jmp l2285
l2288:
	call dbtxt,addrow
	popax
	push $14
	push $12
	spushs
	push $13
	push $14
	spop $a
	call [$a],get
	call dbtxt,add
	jmp l2287
l2286:
	jmp l2281
l2284:
	spop $a
	new db,dbtxt
	push $3
	call dbtxt,dbaddlast
l2281:
l2277:
	localint $16
	push 0
	pop $16
	localint $17
	call dbtxt,getrowsno
	pop $17
	push 0
	push 5
	call $11,getb
	push "limit"
	cmpje
	cmp0
	je l2290
	localint $18
	push "limit_"
	call $11,strsubbs
	pop $18
	new vector,vtmp
	push "string"
	call vtmp,type
	new vector,vtmp2
	push "string"
	call vtmp2,type
	localint $14
	push 0
	pop $14
l2291:
	push $14
	call dbtxt,getrowsno
	cmpjl
	cmp0
	je l2292
	jmp l2294
l2293:
	add $14,1
	pop $14
	jmp l2291
l2294:
	push $14
	push 0
	call dbtxt,get
	push " "
	call vtmp,vecbuildfromstring
	localint $19
	push 0
	pop $19
l2295:
	push $19
	call vtmp,size
	cmpjl
	cmp0
	je l2296
	jmp l2298
l2297:
	add $19,1
	pop $19
	jmp l2295
l2298:
	push $19
	call vtmp,get
	call vtmp2,add
	jmp l2297
l2296:
	jmp l2293
l2292:
	call dbtxt,free
	localstring $12
	push ""
	pop $12
	localstring $20
	push 0
	pop $14
l2299:
	push $14
	call vtmp2,size
	cmpjl
	cmp0
	je l2300
	jmp l2302
l2301:
	add $14,1
	pop $14
	jmp l2299
l2302:
	push $14
	call vtmp2,get
	pop $20
	push $12
	push $20
	pop $b
	popax
	add $a,$b
	spushs
	spop $h
	call $h,length
	push $18
	cmpjl
	cmp0
	je l2304
	push $20
	push " "
	pop $b
	popax
	add $a,$b
	popax
	add $12,$a
	pop $12
	jmp l2303
l2304:
	call dbtxt,addrow
	push 1
	pop $b
	popax
	sub $a,$b
	pop $19
	push $19
	push $12
	call dbtxt,add
	push $20
	push " "
	pop $b
	popax
	add $a,$b
	pop $12
l2303:
	jmp l2301
l2300:
	call dbtxt,addrow
	push 1
	pop $b
	popax
	sub $a,$b
	pop $19
	push $19
	push $12
	call dbtxt,add
	call dbtxt,getrowsno
	pop $17
l2290:
	new gmimgvec,grtxt
	push $7
	push $8
	call grtxt,_setpos
	push 0
	pop $14
l2305:
	push $14
	push $17
	cmpjl
	cmp0
	je l2306
	jmp l2308
l2307:
	add $14,1
	pop $14
	jmp l2305
l2308:
	push "txt"
	push $14
	pop $b
	popax
	add $a,$b
	pop $12
	push $12
	spushs
	spop $e
	new text,[$e]
	localdef $21
	push $14
	push 0
	call dbtxt,get
	pop $21
	push bhtml
	cmp0
	je l2310
	push "<b>"
	call $21,contains
	cmp0
	je l2312
	push sFontBold
	pop $1
	push "<b>"
	call $21,strremove
	jmp l2311
l2312:
	push "<bi>"
	call $21,contains
	cmp0
	je l2314
	push sFontBoldItalic
	pop $1
	push "<bi>"
	call $21,strremove
	jmp l2313
l2314:
	push "<i>"
	call $21,contains
	cmp0
	je l2316
	push sFontItalic
	pop $1
	push "<i>"
	call $21,strremove
	jmp l2315
l2316:
	push sFont
	pop $1
l2315:
l2313:
l2311:
l2310:
	push $12
	spushs
	push $1
	spop $a
	call [$a],setfont
	push $12
	spushs
	push $21
	spop $a
	call [$a],set
	push $12
	spushs
	push $7
	push $8
	spop $a
	call [$a],setpos
	push $2
	push $9
	pop $b
	popax
	add $a,$b
	popax
	add $8,$a
	pop $8
	push $12
	spushs
	push $10
	spop $a
	call [$a],setz
	push $12
	spushs
	push $4
	push $5
	push $6
	spop $a
	call [$a],createtxt
	push $12
	spushs
	spop $a
	call [$a],getw
	push $16
	cmpja
	cmp0
	je l2318
	push $12
	spushs
	spop $a
	call [$a],getw
	pop $16
l2318:
	push $12
	call grtxt,add
	jmp l2307
l2306:
	push "Rows"
	push $17
	cthis var2
	push $11
	push "right"
	cmpje
	cmp0
	jne l2321
	push $11
	push "center"
	cmpje
	jmp l2322
l2320:
	push 0
	jmp l2322
l2321:
	push 1
l2322:
	cmp0
	je l2323
	push 0
	pop $14
l2324:
	push $14
	push $17
	cmpjl
	cmp0
	je l2325
	jmp l2327
l2326:
	add $14,1
	pop $14
	jmp l2324
l2327:
	push "txt"
	push $14
	pop $b
	popax
	add $a,$b
	pop $12
	push $11
	push "center"
	cmpje
	cmp0
	je l2329
	push $12
	spushs
	push $16
	push $12
	spushs
	spop $a
	call [$a],getw
	pop $b
	popax
	sub $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push 0
	spop $a
	call [$a],move
	jmp l2328
l2329:
	push $12
	spushs
	push $16
	push $12
	spushs
	spop $a
	call [$a],getw
	pop $b
	popax
	sub $a,$b
	push 0
	spop $a
	call [$a],move
l2328:
	jmp l2326
l2325:
l2323:
	push "W"
	push $16
	cthis var2
	push "grtxt"
	clparent gfxObject,init
	end method
	method stdshadow
	localint $1
	pop $1
	push 0
	push 0
	push 0
	push $1
	cthis setshadow
	end method
	method setshadow
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	localstring $5
	localstring $6
	localstring $7
	push sFont
	push iFontSize
	push "_fntbrd"
	cthis _checkfont
	pop $7
	localint $8
	push 0
	pop $8
l2330:
	push $8
	call dbtxt,getrowsno
	cmpjl
	cmp0
	je l2331
	jmp l2333
l2332:
	add $8,1
	pop $8
	jmp l2330
l2333:
	push "txt"
	push $8
	pop $b
	popax
	add $a,$b
	pop $5
	push "txts"
	push $8
	pop $b
	popax
	add $a,$b
	pop $6
	push $6
	spushs
	spop $e
	new text,[$e]
	push $6
	spushs
	push $5
	spushs
	spop $a
	call [$a],get
	spop $a
	call [$a],set
	push $6
	spushs
	push $7
	spop $a
	call [$a],setfont
	push $6
	spushs
	push $5
	spushs
	spop $a
	call [$a],getz
	push 1
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setz
	push $6
	spushs
	push $5
	spushs
	spop $a
	call [$a],getpx
	push $4
	pop $b
	popax
	add $a,$b
	push $5
	spushs
	spop $a
	call [$a],getpy
	push $4
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	push $6
	spushs
	push $1
	push $2
	push $3
	spop $a
	call [$a],createtxt
	push $6
	call grtxt,add
	jmp l2332
l2331:
	end method
	method setz
	localint $1
	pop $1
	push $1
	pop Z
	push $1
	call grtxt,setz
	end method
	method getz
	push Z
	end method
	method isin
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	call grtxt,isin
	end method
	method view
	localdef $1
	pop $1
	localstring $2
l2334:
	push A
	push $1
	cmpjne
	cmp0
	je l2335
	push $1
	call grtxt,get
	pop $2
	push $2
	spushs
	spop $a
	call [$a],show
	push "txts"
	push "txt"
	call $2,strsubbs
	pop $b
	popax
	add $a,$b
	pop $2
	push $2
	call engine,varexist
	cmp0
	je l2337
	push $2
	spushs
	spop $a
	call [$a],show
l2337:
	localdef $1
	pop $1
	jmp l2334
l2335:
	end method
	method blitto
	localstring $1
	pop $1
	localstring $2
	localint $3
	push 0
	pop $3
l2338:
	push $3
	call grtxt,size
	cmpjl
	cmp0
	je l2339
	jmp l2341
l2340:
	add $3,1
	pop $3
	jmp l2338
l2341:
	push $3
	call grtxt,get
	pop $2
	push $2
	spushs
	spop $a
	call [$a],buildfullname
	push $1
	spushs
	push $2
	spushs
	spop $a
	call [$a],getfullname
	spop $a
	call [$a],blit
	push GAME
	spushs
	push $2
	spushs
	spop $a
	call [$a],getfullname
	spop $a
	call [$a],vardel
	jmp l2340
l2339:
	end method
	method setcol
	localint $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	localint $4
	push 0
	pop $4
l2342:
	push $4
	call grtxt,size
	cmpjl
	cmp0
	je l2343
	jmp l2345
l2344:
	add $4,1
	pop $4
	jmp l2342
l2345:
	push $4
	call grtxt,get
	spushs
	push $1
	push $2
	push $3
	spop $a
	call [$a],createtxt
	jmp l2344
l2343:
	end method
	method clip
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	localint $5
	push 0
	pop $5
l2346:
	push $5
	call grtxt,size
	cmpjl
	cmp0
	je l2347
	jmp l2349
l2348:
	add $5,1
	pop $5
	jmp l2346
l2349:
	push $5
	call grtxt,get
	spushs
	push $1
	push $2
	push $3
	push $4
	spop $a
	call [$a],clip
	jmp l2348
l2347:
	end method
	method setpos
	localint $1
	localint $2
	pop $2
	pop $1
	localdef $3
	push $1
	call grtxt,getposx
	pop $b
	popax
	sub $a,$b
	pop $3
	localdef $4
	push $2
	call grtxt,getposy
	pop $b
	popax
	sub $a,$b
	pop $4
	push $3
	push $4
	call grtxt,move
	end method
	end class

	class Lexer
	method init
	end method
	method buildlex
	push A
	push "id"
	push "found"
	cthis vars
	new vector,vconsts
	push "string"
	call vconsts,type
	new vector,vtmp1
	push "string"
	call vtmp1,type
	new vector,vtmp2
	push "string"
	call vtmp2,type
	new int,dot
	push "."
	spushs
	push 0
	spop $h
	call $h,getbyte
	pop dot
	new string,_literal_char
	push "\""
	pop _literal_char
	end method
	method setliteralchar
	localstring $1
	pop $1
	push $1
	pop _literal_char
	end method
	method getliteralchar
	push _literal_char
	end method
	method _isvar
	localint $1
	localint $2
	pop $2
	pop $1
	localint $3
	push id
	pop $3
	push ""
	pop found
	localint $4
l2350:
	push $3
	cthis length
	cmpjl
	cmp0
	je l2351
	push $3
	cthis getbyte
	pop $4
	push $4
	push $1
	cmpjae
	cmp0
	je l2353
	push $4
	push $2
	cmpjle
	jmp l2355
l2353:
	push 0
	jmp l2355
l2354:
	push 1
l2355:
	cmp0
	je l2356
	push $3
	push 1
	cthis getb
	popax
	add found,$a
	pop found
	add $3,1
	pop $3
	jmp l2352
l2356:
	push $4
	push BYTEa
	cmpjae
	cmp0
	je l2358
	push $4
	push BYTEz
	cmpjle
	jmp l2360
l2358:
	push 0
	jmp l2360
l2359:
	push 1
l2360:
	cmp0
	jne l2362
	push $4
	push BYTEA
	cmpjae
	cmp0
	je l2363
	push $4
	push BYTEZ
	cmpjle
	jmp l2365
l2363:
	push 0
	jmp l2365
l2364:
	push 1
l2365:
	cmp0
	jne l2362
	push $4
	push BYTE_
	cmpje
	jmp l2366
l2361:
	push 0
	jmp l2366
l2362:
	push 1
l2366:
	cmp0
	je l2367
	push ""
	pop found
l2367:
	cthis length
	pop $3
l2352:
	jmp l2350
l2351:
	call found,length
	end method
	method isreal
	localint $1
	push id
	pop $1
	push ""
	pop found
	localint $2
	localint $3
	push 1
	pop $3
l2368:
	push $1
	cthis length
	cmpjl
	cmp0
	je l2369
	push $1
	cthis getbyte
	pop $2
	push $2
	push BYTE0
	cmpjae
	cmp0
	je l2371
	push $2
	push BYTE9
	cmpjle
	jmp l2373
l2371:
	push 0
	jmp l2373
l2372:
	push 1
l2373:
	cmp0
	jne l2375
	push $2
	push dot
	cmpje
	cmp0
	je l2376
	push $3
	jmp l2378
l2376:
	push 0
	jmp l2378
l2377:
	push 1
l2378:
	jmp l2379
l2374:
	push 0
	jmp l2379
l2375:
	push 1
l2379:
	cmp0
	je l2380
	push $2
	push dot
	cmpje
	cmp0
	je l2382
	push 0
	pop $3
l2382:
	push $1
	push 1
	cthis getb
	popax
	add found,$a
	pop found
	add $1,1
	pop $1
	jmp l2370
l2380:
	cthis length
	pop $1
l2370:
	jmp l2368
l2369:
	push $3
	cmp0
	jne l2385
	push 0
	push 1
	call found,getb
	push "."
	cmpje
	cmp0
	jne l2385
	push 0
	push 1
	call found,gete
	push "."
	cmpje
	jmp l2386
l2384:
	push 0
	jmp l2386
l2385:
	push 1
l2386:
	cmp0
	je l2387
	push ""
	pop found
l2387:
	call found,length
	end method
	method isident
	localint $1
	push id
	pop $1
	push ""
	pop found
	localint $2
l2388:
	push $1
	cthis length
	cmpjl
	cmp0
	je l2389
	push $1
	cthis getbyte
	pop $2
	push $2
	push BYTEa
	cmpjae
	cmp0
	je l2391
	push $2
	push BYTEz
	cmpjle
	jmp l2393
l2391:
	push 0
	jmp l2393
l2392:
	push 1
l2393:
	cmp0
	jne l2395
	push $2
	push BYTEA
	cmpjae
	cmp0
	je l2396
	push $2
	push BYTEZ
	cmpjle
	jmp l2398
l2396:
	push 0
	jmp l2398
l2397:
	push 1
l2398:
	cmp0
	jne l2395
	push $2
	push BYTE_
	cmpje
	cmp0
	jne l2395
	push $1
	push id
	cmpja
	cmp0
	je l2399
	push $2
	push BYTE0
	cmpjae
	cmp0
	je l2399
	push $2
	push BYTE9
	cmpjle
	jmp l2401
l2399:
	push 0
	jmp l2401
l2400:
	push 1
l2401:
	jmp l2402
l2394:
	push 0
	jmp l2402
l2395:
	push 1
l2402:
	cmp0
	je l2403
	push $1
	push 1
	cthis getb
	popax
	add found,$a
	pop found
	add $1,1
	pop $1
	jmp l2390
l2403:
	cthis length
	pop $1
l2390:
	jmp l2388
l2389:
	call found,length
	end method
	method isliteral
	cthis check
	cthis getliteralchar
	cmpjne
	cmp0
	je l2405
	push 0
	ret
l2405:
	localint $1
	push id
	push 1
	pop $b
	popax
	add $a,$b
	pop $1
	push ""
	pop found
	localstring $2
l2406:
	push $1
	cthis length
	cmpjl
	cmp0
	je l2407
	push $1
	push 1
	cthis getb
	pop $2
	push $2
	cthis getliteralchar
	cmpje
	cmp0
	je l2409
	push 1
	ret
	jmp l2408
l2409:
	push $2
	popax
	add found,$a
	pop found
	add $1,1
	pop $1
l2408:
	jmp l2406
l2407:
	push 0
	end method
	method isconst
	localstring $1
	localint $2
	cthis isident
	pop $2
	localint $3
	push 0
	pop $3
l2410:
	push $3
	call vconsts,size
	cmpjl
	cmp0
	je l2411
	jmp l2413
l2412:
	add $3,1
	pop $3
	jmp l2410
l2413:
	push $3
	call vconsts,get
	pop $1
	push $2
	cmp0
	je l2415
	push $1
	push found
	cmpje
	cmp0
	je l2417
	push 1
	ret
l2417:
	jmp l2414
l2415:
	push id
	call $1,length
	cthis getb
	pop found
	push $1
	push found
	cmpje
	cmp0
	je l2419
	push 1
	ret
l2419:
l2414:
	jmp l2412
l2411:
	push 0
	end method
	method gettoken
	localstring $1
	localint $2
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],free
l2420:
	cthis notend
	cmp0
	je l2421
	cthis check
	push " "
	cmpje
	cmp0
	je l2423
	add id,1
	pop id
	jmp l2422
l2423:
	cthis isconst
	cmp0
	je l2425
	push $1
	spushs
	push "$const"
	spop $a
	call [$a],add
	push $1
	spushs
	cthis read
	spop $a
	call [$a],add
	jmp l2424
l2425:
	cthis isreal
	cmp0
	je l2427
	push $1
	spushs
	push "$real"
	spop $a
	call [$a],add
	cthis next
	push $2
	cmp0
	je l2429
	push $1
	spushs
	push found
	spop $a
	call [$a],add
l2429:
	jmp l2426
l2427:
	cthis isint
	cmp0
	je l2431
	push $1
	spushs
	push "$int"
	spop $a
	call [$a],add
	cthis next
	push $2
	cmp0
	je l2433
	push $1
	spushs
	push found
	spop $a
	call [$a],add
l2433:
	jmp l2430
l2431:
	cthis isident
	cmp0
	je l2435
	push $1
	spushs
	push "$alpha"
	spop $a
	call [$a],add
	cthis next
	push $2
	cmp0
	je l2437
	push $1
	spushs
	push found
	spop $a
	call [$a],add
l2437:
	jmp l2434
l2435:
	cthis isliteral
	cmp0
	je l2439
	push $1
	spushs
	push "$literal"
	spop $a
	call [$a],add
	cthis next
	push 2
	popax
	add id,$a
	pop id
	push $2
	cmp0
	je l2441
	push $1
	spushs
	push found
	spop $a
	call [$a],add
l2441:
	jmp l2438
l2439:
	push $1
	spushs
	push "$error"
	spop $a
	call [$a],add
	add id,1
	pop id
l2438:
l2434:
l2430:
l2426:
l2424:
l2422:
	jmp l2420
l2421:
	end method
	method expectdb
	localstring $1
	localint $2
	pop $2
	pop $1
	localint $3
	localstring $4
	localint $5
	push 0
	pop $5
l2442:
	push $5
	push $1
	spushs
	spop $a
	call [$a],getrowsno
	cmpjl
	cmp0
	je l2443
	jmp l2445
l2444:
	add $5,1
	pop $5
	jmp l2442
l2445:
	call vtmp2,free
	push 0
	pop $3
l2446:
	push $3
	push $1
	spushs
	push $5
	spop $a
	call [$a],getcolsno
	cmpjl
	cmp0
	je l2447
	jmp l2449
l2448:
	add $3,1
	pop $3
	jmp l2446
l2449:
	push $1
	spushs
	push $5
	push $3
	spop $a
	call [$a],get
	pop $4
	call $4,clear
	push $4
	push ""
	cmpjne
	cmp0
	je l2451
	push $4
	call vtmp2,add
l2451:
	jmp l2448
l2447:
	push "vtmp2"
	push $2
	cthis expectvec
	cmp0
	je l2453
	push $5
	ret
l2453:
	jmp l2444
l2443:
	push 1
	popax
	sub 0,$a
	end method
	method expectvec
	localstring $1
	localint $2
	pop $2
	pop $1
	push 0
	pop id
	push "vtmp1"
	push $2
	cthis gettoken
	push $1
	call vtmp1,veceq
	end method
	method expects
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	call vtmp2,vecbuildfromstring
	push "vtmp2"
	push $3
	cthis expectvec
	end method
	method consts=
	push "addbegin"
	call vconsts,withlist
	end method
	method setas
	localstring $1
	pop $1
	push $1
	spushs
	push "buildlex"
	push "buildlex"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	spop $a
	call [$a],buildlex
	push $1
	spushs
	push "start"
	push "Lexer0"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "notend"
	push "Lexer1"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "getnext"
	push "Lexer2"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "next"
	push "Lexer3"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "check"
	push "Lexer4"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "ischar"
	push "Lexer5"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "isint"
	push "Lexer6"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "isreal"
	push "isreal"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "isbinary"
	push "Lexer7"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "isident"
	push "isident"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "isconst"
	push "isconst"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "_isvar"
	push "_isvar"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "read"
	push "Lexer8"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "isliteral"
	push "isliteral"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "gettoken"
	push "gettoken"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "expects"
	push "expects"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "expectvec"
	push "expectvec"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "expectdb"
	push "expectdb"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "consts="
	push "consts="
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setliteralchar"
	push "setliteralchar"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "getliteralchar"
	push "getliteralchar"
	spop $a
	call [$a],addmethod
	end method
	method Lexer0
	localstring $1
	pop $1
	push $1
	cthis set
	push 0
	pop id
	end method
	method Lexer1
	push id
	cthis length
	cmpjl
	end method
	method Lexer2
	push id
	cthis length
	cmpje
	cmp0
	je l2455
	push "null"
	ret
l2455:
	add id,1
	pop id
	push id
	push 1
	pop $b
	popax
	sub $a,$b
	push 1
	cthis getb
	end method
	method Lexer3
	call found,length
	popax
	add id,$a
	pop id
	end method
	method Lexer4
	push id
	cthis length
	cmpje
	cmp0
	je l2457
	push "null"
	ret
l2457:
	push id
	push 1
	cthis getb
	pop found
	push found
	end method
	method Lexer5
	localstring $1
	pop $1
	push id
	push 1
	cthis getb
	call $1,contains
	end method
	method Lexer6
	push BYTE0
	push BYTE9
	cthis _isvar
	end method
	method Lexer7
	push BYTE0
	push BYTE0
	push 1
	pop $b
	popax
	add $a,$b
	cthis _isvar
	end method
	method Lexer8
	cthis next
	push found
	end method
	end class

	class AnimaFx
	method init
	end method
	method build
	localstring $1
	pop $1
	push $1
	spushs
	push "_buildanfx"
	push "AnimaFx0"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	spop $a
	call [$a],_buildanfx
	push $1
	spushs
	push "onsetframe"
	push "AnimaFx1"
	spop $a
	call [$a],addmethod
	end method
	method AnimaFx0
	new db,dbsnd
	push 3
	call dbsnd,dbbuild
	localint $1
	push 0
	pop $1
l2458:
	push $1
	call dbsnd,getrowsno
	cmpjl
	cmp0
	je l2459
	jmp l2461
l2460:
	add $1,1
	pop $1
	jmp l2458
l2461:
	push $1
	push 0
	push $1
	push 0
	call dbsnd,get
	push "_"
	pop $b
	popax
	add $a,$b
	push $1
	push 1
	call dbsnd,get
	pop $b
	popax
	add $a,$b
	call dbsnd,set
	jmp l2460
l2459:
	end method
	method AnimaFx1
	localdef $1
	cthis actionname
	push "_"
	pop $b
	popax
	add $a,$b
	cthis framenr
	pop $b
	popax
	add $a,$b
	call dbsnd,findbyrow
	pop $1
	push $1
	push 0
	cmpjae
	cmp0
	je l2463
	push "fx"
	push $1
	push 2
	call dbsnd,get
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],play
l2463:
	end method
	end class

	class Localize
	method init
	end method
	method _lang_db
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new db,[$e]
	push $1
	spushs
	push "load"
	push $3
	pop $b
	popax
	add $a,$b
	spushs
	push $2
	cthis lang_path
	push ".db"
	pop $b
	popax
	add $a,$b
	spop $d
	spop $a
	call [$a],[$d]
	end method
	method lang_db
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push ""
	cthis _lang_db
	end method
	method lang_dbscript
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push "script"
	cthis _lang_db
	end method
	method lang_dbbeh
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push "beh"
	cthis _lang_db
	end method
	method lang_path
	localstring $1
	pop $1
	push LANGDIR
	call gameapi,getgamename
	pop $b
	popax
	add $a,$b
	push "_"
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	add $a,$b
	push LANG
	pop $b
	popax
	add $a,$b
	end method
	end class

	class PyzCounter
	method init
	localstring $1
	localint $2
	pop $2
	pop $1
	new int,istart
	new int,istop
	new int,istep
	new int,idigits
	push 50
	pop idigits
	new int,iactual
	new string,_sanima
	push $1
	pop _sanima
	push A
	push "idx"
	push 2
	push "itimestep"
	push $2
	cthis vars2
	new gmimgvec,grcnt
	localint $3
	push 0
	pop $3
l2464:
	push $3
	push idigits
	cmpjl
	cmp0
	je l2465
	jmp l2467
l2466:
	add $3,1
	pop $3
	jmp l2464
l2467:
	localstring $4
	push "pcc"
	push $1
	pop $b
	popax
	add $a,$b
	push $3
	pop $b
	popax
	add $a,$b
	pop $4
	push $1
	push $4
	cthis copyanima
	push $4
	spushs
	spop $a
	call [$a],hide
	push $4
	call grcnt,add
	jmp l2466
l2465:
	push "timcnt"
	push $2
	push "PyzCounter0"
	cthis timer=
	end method
	method PyzCounter0
	push istep
	popax
	add iactual,$a
	pop iactual
	push iactual
	cthis view
	push iactual
	push istop
	cmpje
	cmp0
	je l2469
	cthis getbuildername
	spushs
	cthis getbuildername
	push "_finish"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	jmp l2468
l2469:
	cthis play
l2468:
	end method
	method getcypher
	localint $1
	pop $1
	push "pcc"
	push _sanima
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	add $a,$b
	end method
	method start
	localint $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	pop istart
	push $2
	pop istop
	push $3
	pop istep
	push istart
	pop iactual
	push istart
	cthis view
	call timcnt,play
	end method
	method showcypher
	localint $1
	localint $2
	pop $2
	pop $1
	localstring $3
	push $1
	cthis getcypher
	pop $3
	push $3
	spushs
	push 0
	push $2
	spop $a
	call [$a],setframe
	push $3
	spushs
	spop $a
	call [$a],show
	end method
	method stop
	push 0
	call timcnt,stop
	end method
	method view
	localint $1
	pop $1
	call grcnt,hide
	push 0
	push 0
	call grcnt,setpos
	push $1
	push 0
	cmpje
	cmp0
	je l2471
	push 0
	push 0
	cthis showcypher
	jmp l2470
l2471:
	localint $2
	push 0
	pop $2
l2472:
	push $1
	push 0
	cmpja
	cmp0
	je l2473
	jmp l2475
l2474:
	add $2,1
	pop $2
	jmp l2472
l2475:
	push $2
	push $1
	push 10
	pop $b
	popax
	div $a,$b
	push $d
	cthis showcypher
	push $1
	push 10
	pop $b
	popax
	div $a,$b
	psax
	pop $1
	jmp l2474
l2473:
	localint $3
	push 0
	pop $3
	localint $4
	push $2
	push 1
	pop $b
	popax
	sub $a,$b
	pop $4
l2476:
	push $4
	push 0
	cmpjae
	cmp0
	je l2477
	jmp l2479
l2478:
	sub $4,1
	pop $4
	jmp l2476
l2479:
	push $4
	cthis getcypher
	spushs
	push $3
	push 0
	spop $a
	call [$a],move
	push $3
	push $4
	push 1
	pop $b
	popax
	add $a,$b
	cthis getcypher
	spushs
	spop $a
	call [$a],getw
	pop $b
	popax
	add $a,$b
	pop $3
	jmp l2478
l2477:
l2470:
	end method
	end class

	class AnMover
	method init
	localstring $1
	localreal $2
	localreal $3
	pop $3
	pop $2
	pop $1
	new timer,tmov
	push 1
	call tmov,settick
	push 1
	call tmov,setcycle
	push A
	push "rdx"
	push $2
	push "rdy"
	push $3
	cthis vars2
	new real,rsx
	push 0
	pop rsx
	new real,rsy
	push 0
	pop rsy
	new string,sanima
	push $1
	pop sanima
	push "onfinish"
	push "AnMover0"
	call tmov,addmethod
	end method
	method AnMover0
	cthis move
	push "_finish"
	cthis builder_func
	cthis play
	end method
	method move
	push rdx
	popax
	add rsx,$a
	pop rsx
	push rdy
	popax
	add rsy,$a
	pop rsy
	localint $1
	push rsx
	pop $1
	localint $2
	push rsy
	pop $2
	push $1
	cmp0
	jne l2482
	push $2
	jmp l2483
l2481:
	push 0
	jmp l2483
l2482:
	push 1
l2483:
	cmp0
	je l2484
	push sanima
	spushs
	push $1
	push $2
	spop $a
	call [$a],move
	push $1
	popax
	sub rsx,$a
	pop rsx
	push $2
	popax
	sub rsy,$a
	pop rsy
l2484:
	end method
	method reset
	push 0
	pop rsx
	push 0
	pop rsy
	end method
	method play
	cthis reset
	call tmov,play
	end method
	method stop
	push 0
	call tmov,stop
	end method
	end class

	method SetAnMover_tmov_onfinish
	cthis getbuildername
	spushs
	spop $a
	call [$a],sam_move
	cthis play
	end method
	class SetAnMover
	method init
	end method
	method setas
	localstring $1
	localreal $2
	localreal $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	push "setanmover"
	push "setanmover"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],setanmover
	push $1
	spushs
	push "sam_move"
	push "sam_move"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "sam_copy"
	push "sam_copy"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "sam_addtimer"
	push "SetAnMover0"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "sam_playtimer"
	push "SetAnMover1"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "sam_stoptimer"
	push "SetAnMover2"
	spop $a
	call [$a],addmethod
	end method
	method SetAnMover0
	new timer,tmov
	push 1
	call tmov,settick
	push 1
	call tmov,setcycle
	push "onfinish"
	push "SetAnMover_tmov_onfinish"
	call tmov,addmethod
	end method
	method SetAnMover1
	call tmov,play
	end method
	method SetAnMover2
	push 0
	call tmov,stop
	end method
	method setanmover
	localreal $1
	localreal $2
	pop $2
	pop $1
	new real,rdx
	push $1
	pop rdx
	new real,rdy
	push $2
	pop rdy
	new real,rsx
	push 0
	pop rsx
	new real,rsy
	push 0
	pop rsy
	push "sam_speed"
	push 1.0
	cthis var2
	end method
	method sam_move
	push rdx
	push sam_speed
	pop $b
	popax
	mul $a,$b
	popax
	add rsx,$a
	pop rsx
	push rdy
	push sam_speed
	pop $b
	popax
	mul $a,$b
	popax
	add rsy,$a
	pop rsy
	localint $1
	push rsx
	pop $1
	localint $2
	push rsy
	pop $2
	push $1
	cmp0
	jne l2487
	push $2
	jmp l2488
l2486:
	push 0
	jmp l2488
l2487:
	push 1
l2488:
	cmp0
	je l2489
	push $1
	push $2
	cthis move
	push $1
	popax
	sub rsx,$a
	pop rsx
	push $2
	popax
	sub rsy,$a
	pop rsy
	push "ansamcopy"
	cthis hasvar
	cmp0
	je l2491
	push $1
	push $2
	call ansamcopy,move
	push rdx
	push 0
	cmpja
	cmp0
	je l2493
	call ansamcopy,getpx
	push rollerx
	cmpja
	cmp0
	je l2495
	localdef $3
	call ansamcopy,getpx
	cthis getw
	pop $b
	popax
	sub $a,$b
	pop $3
	push $3
	push 0
	call ansamcopy,move
	push $3
	push 0
	cthis move
l2495:
l2493:
l2491:
l2489:
	end method
	method sam_copy
	push A
	push "rollerx"
	push 0
	push "rollerex"
	push iResX
	cthis vars2
	cthis getname
	push "ansamcopy"
	cthis copyanima
	call ansamcopy,show
	push rdx
	push 0
	cmpja
	cmp0
	je l2497
	cthis getpx
	cthis getw
	pop $b
	popax
	sub $a,$b
	cthis getpy
	call ansamcopy,ansetbpos
l2497:
	end method
	end class

	class classlives
	method init
	end method
	method set
	localint $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	localint $7
	localint $8
	localint $9
	localint $10
	localint $11
	localint $12
	localint $13
	localint $14
	localstring $15
	pop $15
	pop $14
	pop $13
	pop $12
	pop $11
	pop $10
	pop $9
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	new int,iside
	push $15
	push "left"
	cmpje
	cmp0
	je l2499
	push 1
	popax
	sub 0,$a
	pop iside
	jmp l2498
l2499:
	push 1
	pop iside
l2498:
	new int,iilezyc
	push $1
	pop iilezyc
	new int,ibum
	push $2
	pop ibum
	localint $16
	push iilezyc
	push ibum
	pop $b
	popax
	mul $a,$b
	pop $16
	new int,iposxsila
	push $3
	pop iposxsila
	new int,iendxsila
	push $3
	push $16
	pop $b
	popax
	add $a,$b
	pop iendxsila
	new int,iposysila
	push $4
	pop iposysila
	push "imgsilapodkladka"
	push $16
	push $5
	push $6
	push $7
	push $8
	push $9
	push $14
	push 1
	pop $b
	popax
	sub $a,$b
	clparent newvars,newcanvas
	push "imgsila"
	push $16
	push $5
	push $10
	push $11
	push $12
	push $13
	push $14
	clparent newvars,newcanvas
	push iposxsila
	push iposysila
	call imgsila,setpos
	push iposxsila
	push 0
	call imgsila,getex
	push 600
	call imgsila,clip
	push iposxsila
	push iposysila
	call imgsilapodkladka,setpos
	end method
	method reset
	push iposxsila
	push iposysila
	call imgsila,setpos
	end method
	method damage
	localint $1
	pop $1
	push iside
	push $1
	pop $b
	popax
	mul $a,$b
	push ibum
	pop $b
	popax
	mul $a,$b
	push 0
	call imgsila,move
	end method
	method destroyed
	push iside
	push 0
	cmpjl
	cmp0
	je l2501
	call imgsila,getex
	push iposxsila
	cmpjl
	ret
l2501:
	call imgsila,getpx
	push iendxsila
	cmpja
	ret
	end method
	method heal
	localint $1
	pop $1
	push iside
	popax
	sub 0,$a
	push $1
	pop $b
	popax
	mul $a,$b
	push ibum
	pop $b
	popax
	mul $a,$b
	push 0
	call imgsila,move
	push iside
	push 0
	cmpja
	cmp0
	je l2503
	call imgsila,getpx
	push iposxsila
	cmpjl
	cmp0
	je l2505
	push iposxsila
	push iposysila
	call imgsila,setpos
l2505:
	jmp l2502
l2503:
	call imgsila,getpx
	push iposxsila
	cmpja
	cmp0
	je l2507
	push iposxsila
	push iposysila
	call imgsila,setpos
l2507:
l2502:
	end method
	end class

	class imganima
	parent gmimgvec
	method init
	clparent gmimgvec,init
	new int,idgran
	push 0
	pop idgran
	new timer,timan
	push 1
	call timan,settick
	push "onfinish"
	push "imganima0"
	call timan,addmethod
	end method
	method imganima0
	add idgran,1
	pop idgran
	localdef $1
	cthis getbuildername
	pop $1
	push idgran
	push $1
	spushs
	spop $a
	call [$a],size
	cmpje
	cmp0
	je l2509
	push $1
	spushs
	push $1
	push "_finish"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	jmp l2508
l2509:
	push idgran
	cthis setframe
	push $1
	spushs
	push $1
	push "_endframe"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	cthis play
l2508:
	end method
	method load
	localstring $1
	localstring $2
	localint $3
	localint $4
	localint $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $5
	call timan,setcycle
	localint $6
	push $3
	pop $6
l2510:
	push $6
	push $4
	cmpjl
	cmp0
	je l2511
	jmp l2513
l2512:
	add $6,1
	pop $6
	jmp l2510
l2513:
	localdef $7
	push $1
	push $6
	pop $b
	popax
	add $a,$b
	pop $7
	push "an"
	push $7
	pop $b
	popax
	add $a,$b
	push $7
	push "."
	pop $b
	popax
	add $a,$b
	push $2
	pop $b
	popax
	add $a,$b
	push 0
	cthis newimg
	push "an"
	push $7
	pop $b
	popax
	add $a,$b
	cthis add
	jmp l2512
l2511:
	push 0
	cthis setframe
	end method
	method play
	push 0
	cthis setframe
	call timan,play
	end method
	method setframe
	localint $1
	pop $1
	cthis hide
	push $1
	pop idgran
	push $1
	cthis get
	spushs
	spop $a
	call [$a],show
	end method
	end class

	class GuiItem
	method init
	end method
	method setasrototaker
	localstring $1
	localreal $2
	localreal $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	push "_setasrototaker"
	push "GuiItem0"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],_setasrototaker
	push $1
	spushs
	push "rototaker_start"
	push "rototaker_start"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "rototaker_startwh"
	push "rototaker_startwh"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "rototaker_startact"
	push "rototaker_startact"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "rototaker_setroto"
	push "rototaker_setroto"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "rototaker_endroto"
	push "GuiItem2"
	spop $a
	call [$a],addmethod
	end method
	method GuiItem0
	localdef $1
	localdef $2
	pop $2
	pop $1
	push A
	push "ilerotos"
	push $1
	push "idrotos"
	push 0.0
	push "ikatos"
	push $2
	push 360.0
	pop $b
	popax
	mul $a,$b
	push $1
	pop $b
	popax
	div $a,$b
	psax
	push "rzoomx"
	push 0.0
	push "rzoomy"
	push 0.0
	push "rzoomstepx"
	push 0.0
	push "rzoomstepy"
	push 0.0
	push "rmovx"
	push 0.0
	push "rmovy"
	push 0.0
	push "istartalfa"
	push 128
	push "iendx"
	push 0.0
	push "iendy"
	push 0.0
	push "irotodir"
	push 1
	push "izoomdir"
	push 0
	cthis vars2
	new filter,ftroto
	push 2
	call ftroto,setpivottype
	new timer,timrotocenter
	push 1
	call timrotocenter,setcycle
	push "onfinish"
	push "GuiItem1"
	call timrotocenter,addmethod
	end method
	method GuiItem1
	cthis getbuildername
	spushs
	spop $a
	call [$a],rototaker_setroto
	cmp0
	je l2515
	cthis play
l2515:
	end method
	method GuiItem2
	push "rototaker_"
	cthis getname
	pop $b
	popax
	add $a,$b
	push "_endroto"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method rototaker_setroto
	push izoomdir
	cmp0
	je l2517
	localdef $1
	push idrotos
	push ilerotos
	pop $b
	popax
	div $a,$b
	psax
	pop $1
	localdef $2
	push rzoomx
	push rzoomstepx
	push $1
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	pop $2
	localdef $3
	push rzoomy
	push rzoomstepy
	push $1
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	pop $3
	push irotodir
	push ikatos
	pop $b
	popax
	mul $a,$b
	push $2
	push $3
	call ftroto,rotatezoomxy
	jmp l2516
l2517:
	localdef $1
	push ilerotos
	push idrotos
	pop $b
	popax
	sub $a,$b
	pop $1
	localdef $2
	push rzoomx
	push rzoomstepx
	push $1
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	pop $2
	localdef $3
	push rzoomy
	push rzoomstepy
	push $1
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	pop $3
	push irotodir
	push ikatos
	pop $b
	popax
	mul $a,$b
	push $2
	push $3
	call ftroto,rotatezoomxy
	push idrotos
	push ilerotos
	pop $b
	popax
	div $a,$b
	psax
	pop $1
l2516:
	push istartalfa
	push 255
	cmpjl
	cmp0
	je l2519
	localreal $4
	push istartalfa
	pop $4
	push $4
	push 255.0
	push $4
	pop $b
	popax
	sub $a,$b
	push $1
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	call ftroto,setopacity
l2519:
	localreal $5
	push iendx
	cthis getposx
	pop $b
	popax
	sub $a,$b
	push $1
	pop $b
	popax
	mul $a,$b
	push $2
	pop $b
	popax
	mul $a,$b
	pop $5
	localreal $6
	push iendy
	cthis getposy
	pop $b
	popax
	sub $a,$b
	push $1
	pop $b
	popax
	mul $a,$b
	push $3
	pop $b
	popax
	mul $a,$b
	pop $6
	push $5
	push $6
	cthis move
	add idrotos,1
	pop idrotos
	push idrotos
	push ilerotos
	cmpjl
	cmp0
	je l2521
	push 1
	jmp l2520
l2521:
	call ftroto,unlink
	cthis rototaker_endroto
	push 0
l2520:
	end method
	method rototaker_startact
	localint $1
	localint $2
	localdef $3
	pop $3
	pop $2
	pop $1
	localstring $4
	call $3,gettype
	push "string"
	cmpjne
	cmp0
	je l2523
	push $3
	cthis nameofaction
	pop $4
	jmp l2522
l2523:
	push $3
	pop $4
l2522:
	cthis getpx
	cthis getpy
	push $1
	push $2
	cthis getw
	cthis geth
	push $4
	cthis rototaker_start
	end method
	method rototaker_start
	localint $1
	localint $2
	localint $3
	localint $4
	localreal $5
	localreal $6
	localstring $7
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $7
	push 0
	cthis setframe
	push $1
	push $2
	cthis setpos
	push $3
	push $4
	push $5
	push $6
	cthis getw
	cthis geth
	cthis rototaker_startwh
	end method
	method rototaker_startwh
	localint $1
	localint $2
	localreal $3
	localreal $4
	localreal $5
	localreal $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	pop iendx
	push $2
	pop iendy
	push $1
	cthis getcx
	pop $b
	popax
	sub $a,$b
	spushs
	spop $h
	call $h,to_r
	push ilerotos
	pop $b
	popax
	div $a,$b
	psax
	pop rmovx
	push $2
	cthis getcy
	pop $b
	popax
	sub $a,$b
	spushs
	spop $h
	call $h,to_r
	push ilerotos
	pop $b
	popax
	div $a,$b
	psax
	pop rmovy
	push $5
	push $3
	cmpja
	cmp0
	je l2525
	push $3
	push $5
	pop $b
	popax
	div $a,$b
	psax
	pop rzoomx
	push $5
	push $3
	pop $b
	popax
	sub $a,$b
	push $5
	pop $b
	popax
	div $a,$b
	psax
	pop rzoomstepx
	push 1
	pop izoomdir
	jmp l2524
l2525:
	push 0
	pop izoomdir
	push $5
	push $3
	pop $b
	popax
	div $a,$b
	psax
	pop rzoomx
	push 1.0
	push rzoomx
	pop $b
	popax
	sub $a,$b
	push ilerotos
	pop $b
	popax
	div $a,$b
	psax
	pop rzoomstepx
l2524:
	push $6
	push $4
	cmpja
	cmp0
	je l2527
	push $4
	push $6
	pop $b
	popax
	div $a,$b
	psax
	pop rzoomy
	push $6
	push $4
	pop $b
	popax
	sub $a,$b
	push $6
	pop $b
	popax
	div $a,$b
	psax
	pop rzoomstepy
	jmp l2526
l2527:
	push $6
	push $4
	pop $b
	popax
	div $a,$b
	psax
	pop rzoomy
	push 1.0
	push rzoomy
	pop $b
	popax
	sub $a,$b
	push ilerotos
	pop $b
	popax
	div $a,$b
	psax
	pop rzoomstepy
l2526:
	cthis getname
	call ftroto,link
	push 0
	pop idrotos
	cthis rototaker_setroto
	cmp0
	je l2529
	call timrotocenter,play
l2529:
	end method
	end class

	class CalcFPS
	method init
	new real,rfps1
	new real,rfps2
	new real,rfps3
	new real,rsec
	push 1000.0
	pop rsec
	new real,rstart
	push 1.0
	pop rstart
	push "tickfps"
	push "CalcFPS0"
	cthis cycle=
	end method
	method CalcFPS0
	cthis getbuildername
	spushs
	spop $a
	call [$a],tick
	cthis play
	end method
	method stdset
	localint $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	cthis stdfont
	cthis white
	push $2
	push $3
	push 1000
	cthis set
	end method
	method set
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	localint $7
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push "txtfps"
	push 0
	push $1
	push $2
	push $3
	push $4
	cthis newtext
	push $7
	call txtfps,setz
	push $5
	push $6
	cthis setpos
	end method
	method setpos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call txtfps,setpos
	end method
	method tick
	localreal $1
	call engine,getticks
	pop $1
	push $1
	push rstart
	cmpja
	cmp0
	je l2531
	push rfps2
	pop rfps1
	push rfps3
	pop rfps2
	push rsec
	push $1
	push rstart
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	div $a,$b
	psax
	pop rfps3
	push "delay: "
	push $1
	push rstart
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	add $a,$b
	push " fps: "
	pop $b
	popax
	add $a,$b
	push rfps1
	push rfps2
	pop $b
	popax
	add $a,$b
	push rfps3
	pop $b
	popax
	add $a,$b
	push 3
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	call txtfps,txtset
	jmp l2530
l2531:
	push "inf"
	call txtfps,txtset
l2530:
	push $1
	pop rstart
	end method
	method play
	call tickfps,play
	end method
	method stop
	push 0
	call tickfps,stop
	end method
	end class

	class Film
	parent gfxObject
	method init
	new img,imfilm
	call imfilm,buildfullname
	push "imfilm"
	clparent gfxObject,init
	new string,sfilmpath
	new db,dbfilm
	new db,dbfilm2
	new int,istartklatka
	new int,iklatka
	new int,iendklatka
	new string,sprefilm
	new int,ifilmcycle
	new string,smusic
	new int,igameloopdelay
	push igmdelay
	pop igameloopdelay
	new gmobjvec,grsfx
	new gmimgvec,grbuf
	push A
	push "bcenter"
	push 0
	push "bborders"
	push 0
	push "musicclass"
	push "null"
	push "bbuffer"
	push 0
	push "sfileformat"
	push "jpg"
	cthis vars2
	push "timfilm"
	push "Film0"
	cthis cycle=
	end method
	method Film0
	cthis nextframe
	push iklatka
	push iendklatka
	cmpjle
	cmp0
	je l2533
	call timfilm,play
	jmp l2532
l2533:
	cthis retfps
	localdef $1
	cthis getbuildername
	pop $1
	push $1
	spushs
	push "onfinish"
	spop $a
	call [$a],hasaddedmet
	cmp0
	je l2535
	push $1
	spushs
	spop $a
	call [$a],onfinish
l2535:
l2532:
	end method
	method bufferfilm
	end method
	method retfps
	push igameloopdelay
	call engine,setloopdelay
	end method
	method setfilmfps
	call engine,getloopdelay
	pop igameloopdelay
	localint $1
	push "fps:"
	call dbfilm,dbgetint
	pop $1
	push $1
	push 0
	cmpja
	cmp0
	je l2537
	push $1
	call engine,setfps
l2537:
	end method
	method setcycle
	localint $1
	pop $1
	push $1
	call timfilm,setcycle
	push $1
	pop ifilmcycle
	end method
	method nextframe
	push "film_onsetframe_"
	push iklatka
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	cthis loadframe
	add iklatka,1
	pop iklatka
	end method
	method loadframe
	localdef $1
	push iklatka
	call dbfilm,findbyrow
	pop $1
	push $1
	push 0
	cmpjae
	cmp0
	je l2539
	localint $2
	push 1
	pop $2
l2540:
	push $2
	push $1
	call dbfilm,getcolsno
	cmpjl
	cmp0
	je l2541
	jmp l2543
l2542:
	add $2,1
	pop $2
	jmp l2540
l2543:
	push $1
	push $2
	call dbfilm,get
	spushs
	push "fadeout:"
	cmpst
	jne l2545
	spop $a
	add $2,1
	pop $2
	push musicclass
	push "null"
	cmpjne
	cmp0
	je l2547
	push musicclass
	spushs
	push $1
	push $2
	call dbfilm,get
	spop $a
	call [$a],fadeout
l2547:
	jmp l2544
l2545:
	spop $a
	localdef $3
	push $1
	push $2
	call dbfilm,get
	pop $3
	push $3
	spushs
	push "volume_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_"
	pop $b
	popax
	add $a,$b
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	call dbfilm,[$d]
	spop $a
	call [$a],setvol
	push $3
	spushs
	spop $a
	call [$a],play
l2544:
	jmp l2542
l2541:
l2539:
	localdef $4
	call imfilm,getz
	pop $4
	localdef $5
	call imfilm,getpx
	pop $5
	localdef $6
	call imfilm,getpy
	pop $6
	push bbuffer
	cmp0
	je l2549
	localdef $3
	push iklatka
	push istartklatka
	pop $b
	popax
	sub $a,$b
	call grbuf,get
	pop $3
	push $3
	spushs
	spop $a
	call [$a],createfrombuffer
	push $3
	call imfilm,copy
	push $3
	spushs
	spop $a
	call [$a],hide
	call imfilm,show
	push iklatka
	push istartklatka
	cmpja
	cmp0
	je l2551
	push iklatka
	push istartklatka
	pop $b
	popax
	sub $a,$b
	push 1
	pop $b
	popax
	sub $a,$b
	call grbuf,get
	spushs
	spop $a
	call [$a],free
l2551:
	jmp l2548
l2549:
	push sfilmpath
	push sprefilm
	pop $b
	popax
	add $a,$b
	push iklatka
	pop $b
	popax
	add $a,$b
	push "."
	pop $b
	popax
	add $a,$b
	push sfileformat
	pop $b
	popax
	add $a,$b
	call imfilm,load
	call imfilm,show
l2548:
	push $4
	call imfilm,setz
	push bcenter
	cmp0
	je l2553
	push igmappw
	call imfilm,getw
	pop $b
	popax
	sub $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push igmapph
	call imfilm,geth
	pop $b
	popax
	sub $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	call imfilm,setpos
	jmp l2552
l2553:
	push $5
	push $6
	call imfilm,setpos
l2552:
	end method
	method playfilm
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	cthis load
	cthis play
	end method
	method load
	localstring $1
	localstring $2
	pop $2
	pop $1
	cthis isplaying
	cmp0
	je l2555
	cthis free
l2555:
	push $1
	pop sfilmpath
	push $1
	push $2
	pop $b
	popax
	add $a,$b
	push ".db"
	pop $b
	popax
	add $a,$b
	call dbfilm,load
	push "start:"
	call dbfilm,dbgetint
	pop istartklatka
	push istartklatka
	pop iklatka
	push "end:"
	call dbfilm,dbgetint
	pop iendklatka
	push "prefix:"
	call dbfilm,dbget
	pop sprefilm
	push "music:"
	call dbfilm,dbget
	pop smusic
	localdef $3
	push "format:"
	call dbfilm,findbyrow
	pop $3
	push $3
	push 0
	cmpjae
	cmp0
	je l2557
	push $3
	push 1
	call dbfilm,get
	pop sfileformat
l2557:
	push "buffer:"
	call dbfilm,dbgetint
	pop bbuffer
	push bbuffer
	cmp0
	je l2559
	localint $4
	push istartklatka
	pop $4
l2560:
	push $4
	push iendklatka
	cmpjle
	cmp0
	je l2561
	jmp l2563
l2562:
	add $4,1
	pop $4
	jmp l2560
l2563:
	localdef $5
	push "imbuf"
	push $4
	pop $b
	popax
	add $a,$b
	pop $5
	push $5
	spushs
	spop $e
	new img,[$e]
	push $5
	spushs
	push sfilmpath
	push sprefilm
	pop $b
	popax
	add $a,$b
	push $4
	pop $b
	popax
	add $a,$b
	push "."
	pop $b
	popax
	add $a,$b
	push sfileformat
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],loadbuffer
	push $5
	call grbuf,add
	jmp l2562
l2561:
l2559:
	localint $4
	push 0
	pop $4
l2564:
	push $4
	call dbfilm,getrowsno
	cmpjl
	cmp0
	je l2565
	jmp l2567
l2566:
	add $4,1
	pop $4
	jmp l2564
l2567:
	localdef $5
	push $4
	push 0
	call dbfilm,get
	pop $5
	push $5
	clparent StringChecker,isdigit
	cmp0
	je l2569
	localint $6
	push 1
	pop $6
l2570:
	push $6
	push $4
	call dbfilm,getcolsno
	cmpjl
	cmp0
	je l2571
	jmp l2573
l2572:
	add $6,1
	pop $6
	jmp l2570
l2573:
	localdef $7
	push $4
	push $6
	call dbfilm,get
	pop $7
	push $7
	spushs
	push "fadeout:"
	cmpst
	jne l2575
	spop $a
	add $6,1
	pop $6
	jmp l2574
l2575:
	spop $a
	push "fx"
	push " "
	call $7,strgetto
	pop $b
	popax
	add $a,$b
	pop $5
	localint $8
	push 100
	pop $8
	push $5
	cthis hasvar
	neg
	cmp0
	je l2577
	push $7
	cthis sfx=
	push $5
	spushs
	spop $a
	call [$a],getvol
	pop $8
	jmp l2576
l2577:
	push " "
	call $7,contains
	cmp0
	je l2579
	push " "
	call $7,strgetfrom
	pop $8
l2579:
l2576:
	push "volume_"
	push $4
	pop $b
	popax
	add $a,$b
	push "_"
	pop $b
	popax
	add $a,$b
	push $6
	pop $b
	popax
	add $a,$b
	push $8
	call dbfilm,var2
	push $4
	push $6
	push $5
	call dbfilm,set
	push $5
	call grsfx,addonce
l2574:
	jmp l2572
l2571:
l2569:
	jmp l2566
l2565:
	end method
	method loadborders
	push bborders
	cmp0
	je l2581
	push "imramkaup"
	cthis hasvar
	neg
	jmp l2583
l2581:
	push 0
	jmp l2583
l2582:
	push 1
l2583:
	cmp0
	je l2584
	new img,imramkaup
	new img,imramkadown
	new img,imramkaleft
	new img,imramkaright
	localint $1
	push 0.5
	push igmapph
	call imfilm,geth
	pop $b
	popax
	sub $a,$b
	spushs
	spop $h
	call $h,to_r
	push 2.0
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	pop $1
	localdef $2
	cthis getz
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
	push $1
	push 0
	cmpja
	cmp0
	je l2586
	push igmappw
	push $1
	cthis black
	push 255
	call imramkaup,create
	push $2
	call imramkaup,setz
	push "imramkaup"
	call imramkadown,copy
	push 0
	push igmapph
	push $1
	pop $b
	popax
	sub $a,$b
	call imramkadown,setpos
l2586:
	localint $3
	push 0.5
	push igmappw
	call imfilm,getw
	pop $b
	popax
	sub $a,$b
	spushs
	spop $h
	call $h,to_r
	push 2.0
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	pop $3
	push $3
	push 0
	cmpja
	cmp0
	je l2588
	push $3
	push igmapph
	cthis black
	push 255
	call imramkaleft,create
	push $2
	call imramkaleft,setz
	push "imramkaleft"
	call imramkaright,copy
	push igmappw
	push $3
	pop $b
	popax
	sub $a,$b
	push 0
	call imramkaright,setpos
l2588:
l2584:
	end method
	method play
	push istartklatka
	pop iklatka
	cthis nextframe
	cthis loadborders
	push smusic
	push "null"
	cmpjne
	cmp0
	je l2590
	push musicclass
	push "null"
	cmpjne
	jmp l2592
l2590:
	push 0
	jmp l2592
l2591:
	push 1
l2592:
	cmp0
	je l2593
	push musicclass
	spushs
	push smusic
	spop $a
	call [$a],playstr
l2593:
	cthis setfilmfps
	call timfilm,play
	end method
	method free
	call imfilm,free
	localint $1
	push 0
	pop $1
l2594:
	push $1
	call grsfx,size
	cmpjl
	cmp0
	je l2595
	jmp l2597
l2596:
	add $1,1
	pop $1
	jmp l2594
l2597:
	push $1
	call grsfx,get
	spushs
	spop $d
	delete [$d]
	jmp l2596
l2595:
	push 0
	pop $1
l2598:
	push $1
	call grbuf,size
	cmpjl
	cmp0
	je l2599
	jmp l2601
l2600:
	add $1,1
	pop $1
	jmp l2598
l2601:
	push $1
	call grbuf,get
	spushs
	spop $d
	delete [$d]
	jmp l2600
l2599:
	call grbuf,free
	call grsfx,free
	cthis retfps
	end method
	method showframe
	localint $1
	pop $1
	push $1
	push istartklatka
	cmpjl
	cmp0
	je l2603
	push istartklatka
	pop $1
	jmp l2602
l2603:
	push $1
	push iendklatka
	cmpja
	cmp0
	je l2605
	push iendklatka
	pop $1
l2605:
l2602:
	push $1
	pop iklatka
	cthis loadframe
	end method
	method showfirstframe
	push istartklatka
	cthis showframe
	end method
	method showlastframe
	push iendklatka
	cthis showframe
	end method
	method isplaying
	call timfilm,isplaying
	end method
	method stop
	localint $1
	pop $1
	cthis retfps
	push $1
	cmp0
	je l2607
	push iendklatka
	pop iklatka
l2607:
	push $1
	call timfilm,stop
	end method
	method getimg
	call imfilm,getfullname
	end method
	end class

	class classadvobject
	method init
	cthis addasadvobject
	end method
	method addasadvobject
	push AdventureGame
	neg
	cmp0
	je l2609
	ret
l2609:
	localstring $1
	cthis getname
	pop $1
	push $1
	call grmsmove,addonce
	push $1
	call grmslrel,addonce
	push $1
	call grmslclick,addonce
	push $1
	call grmsrclick,addonce
	end method
	method removefromadvobjs
	push AdventureGame
	neg
	cmp0
	je l2611
	ret
l2611:
	localstring $1
	cthis getname
	pop $1
	push $1
	call grmsmove,remove
	push $1
	call grmslrel,remove
	push $1
	call grmslclick,remove
	push $1
	call grmsrclick,remove
	end method
	method onmousemove
	localint $1
	localint $2
	pop $2
	pop $1
	end method
	method onmouselclick
	localint $1
	localint $2
	pop $2
	pop $1
	end method
	method onmouselrel
	localint $1
	localint $2
	pop $2
	pop $1
	end method
	method onmouserclick
	localint $1
	localint $2
	pop $2
	pop $1
	end method
	end class

	class advDelayMover
	parent DelayImgMover
	parent classadvobject
	method init
	clparent classadvobject,init
	clparent DelayImgMover,init
	push 1
	pop b2clicks
	end method
	method onmousemove
	localint $1
	localint $2
	pop $2
	pop $1
	clparent DelayImgMover,onmousemove
	end method
	method onmouselclick
	localint $1
	localint $2
	pop $2
	pop $1
	clparent DelayImgMover,onmouselclick
	end method
	method onmouselrel
	localint $1
	localint $2
	pop $2
	pop $1
	clparent DelayImgMover,onmouselrel
	end method
	end class

	class classadvanhero
	method init
	end method
	method setashero
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	push "buildhero"
	push "buildhero"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "onendframe"
	push "heroendframe1"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	spop $a
	call [$a],buildhero
	push $1
	spushs
	push "buildheroframe"
	push "buildheroframe"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "onfinish"
	push "herofinish"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "getdir"
	push "getdir"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setdir"
	push "setdir"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "thisfinish"
	push "thisfinish"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "playspec"
	push "playspec"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "playspec2"
	push "playspec2"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "herostop"
	push "herostop"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "herostart"
	push "herostart"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "herostand"
	push "herostand"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setstdfin"
	push "setstdfin"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "getpocket"
	push "getpocket"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "haspocket"
	push "haspocket"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setstandbase"
	push "setstandbase"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push $2
	spop $a
	call [$a],setstdfin
	end method
	method buildheroframe
	localstring $1
	pop $1
	push $1
	spushs
	push "onendframe"
	push "heroendframe"
	spop $a
	call [$a],addmethod
	end method
	method setstdfin
	localstring $1
	pop $1
	push "onstdfinish"
	push $1
	cthis addmethod
	end method
	method setstandbase
	localstring $1
	pop $1
	push $1
	pop _sstandbase
	end method
	method buildhero
	new string,_sbase
	new int,_istate
	push 0
	pop _istate
	push A
	push "_sobfin"
	push "null"
	push "_sfinfun"
	push "null"
	cthis vars2
	new int,_bplaystop
	new int,_iiloscsek
	new int,_itypsort
	new int,idsort
	new string,_sobstart
	new string,_sfunfinstart
	new int,bthisfin
	push 0
	pop bthisfin
	new string,_sstandbase
	push "stand"
	pop _sstandbase
	end method
	method getpocket
	push _spocketpref
	cthis getname
	pop $b
	popax
	add $a,$b
	end method
	method haspocket
	push _spocketpref
	cthis getname
	pop $b
	popax
	add $a,$b
	call engine,varexist
	end method
	method thisfinish
	localint $1
	pop $1
	push $1
	pop bthisfin
	end method
	method getdir
	cthis actionname
	spushs
	push 0
	push 2
	spop $h
	call $h,gete
	end method
	method setdir
	localstring $1
	pop $1
	cthis actionname
	spushs
	push 2
	spop $h
	call $h,strsube
	push $1
	pop $b
	popax
	add $a,$b
	cthis framenr
	cthis setframe
	end method
	method playspec
	localstring $1
	localint $2
	localint $3
	localint $4
	localstring $5
	localstring $6
	localint $7
	localstring $8
	localstring $9
	localstring $10
	pop $10
	pop $9
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	pop _sbase
	push $2
	pop _iiloscsek
	push $3
	pop _itypsort
	push $7
	pop _bplaystop
	push $8
	pop _sobfin
	push $9
	pop _sfinfun
	push $5
	pop _sobstart
	push $6
	pop _sfunfinstart
	push $2
	push 0
	cmpja
	cmp0
	je l2613
	push $3
	push 0
	cmpje
	cmp0
	je l2615
	push 1
	pop idsort
	jmp l2614
l2615:
	push $3
	push 1
	cmpje
	cmp0
	je l2617
	call $2,rand
	push 1
	pop $b
	popax
	add $a,$b
	pop idsort
l2617:
l2614:
l2613:
	push $4
	cmp0
	je l2619
	push 1
	pop _istate
	push $1
	push "start"
	pop $b
	popax
	add $a,$b
	push $10
	pop $b
	popax
	add $a,$b
	cthis play
	jmp l2618
l2619:
	push $1
	push $2
	push 0
	cmpja
	cmp0
	je l2621
	push "1"
	push $10
	pop $b
	popax
	add $a,$b
	jmp l2620
l2621:
	push $10
l2620:
	pop $b
	popax
	add $a,$b
	push 0
	cthis setframe
	cthis herostart
l2618:
	end method
	method playspec2
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	localstring $4
	call $1,length
	push 2
	cmpjl
	cmp0
	je l2623
	push ""
	jmp l2622
l2623:
	push 2
	call $1,strsube
l2622:
	pop $4
	push $4
	push 0
	push 0
	push 0
	push "null"
	push "null"
	push 0
	push $2
	push $3
	push 0
	push 2
	call $1,gete
	cthis playspec
	end method
	method herostop
	push 3
	pop _istate
	push _bplaystop
	cmp0
	je l2625
	push 0
	pop _bplaystop
	push 1
	cthis thisfinish
	push _sbase
	push "stop"
	pop $b
	popax
	add $a,$b
	cthis getdir
	pop $b
	popax
	add $a,$b
	cthis play
	jmp l2624
l2625:
	push 1
	cthis stop
l2624:
	end method
	method herostart
	push 2
	pop _istate
	push _sbase
	push _iiloscsek
	push 0
	cmpja
	cmp0
	je l2627
	push idsort
	jmp l2626
l2627:
	push ""
l2626:
	pop $b
	popax
	add $a,$b
	cthis getdir
	pop $b
	popax
	add $a,$b
	cthis play
	end method
	method herofinish
	push _istate
	push 2
	cmpje
	cmp0
	je l2629
	push bthisfin
	jmp l2631
l2629:
	push 0
	jmp l2631
l2630:
	push 1
l2631:
	cmp0
	je l2632
	push 3
	pop _istate
l2632:
	push _istate
	push 0
	cmpje
	cmp0
	je l2634
	cthis herostand
	cthis onstdfinish
	localstring $1
	cthis getname
	pop $1
	localstring $2
	push $1
	spushs
	spop $a
	call [$a],actionname
	pop $2
	push $1
	push "_FINISH"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	push $1
	push "_ACTION_"
	pop $b
	popax
	add $a,$b
	push $2
	pop $b
	popax
	add $a,$b
	push "_FINISH"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	jmp l2633
l2634:
	push _istate
	push 1
	cmpje
	cmp0
	je l2636
	cthis herostart
	push _sobstart
	push _sfunfinstart
	cthis callfun
	jmp l2635
l2636:
	push _istate
	push 2
	cmpje
	cmp0
	je l2638
	localstring $3
	push _iiloscsek
	push 0
	cmpja
	cmp0
	je l2640
	push _itypsort
	push 0
	cmpje
	cmp0
	je l2642
	push idsort
	push _iiloscsek
	pop $b
	popax
	div $a,$b
	push $d
	push 1
	pop $b
	popax
	add $a,$b
	pop idsort
	jmp l2641
l2642:
	push _itypsort
	push 1
	cmpje
	cmp0
	je l2644
	call _iiloscsek,rand
	push 1
	pop $b
	popax
	add $a,$b
	pop idsort
l2644:
l2641:
	push _sbase
	push idsort
	pop $b
	popax
	add $a,$b
	cthis getdir
	pop $b
	popax
	add $a,$b
	pop $3
	jmp l2639
l2640:
	cthis actionname
	pop $3
l2639:
	push $3
	cthis play
	jmp l2637
l2638:
	push _istate
	push 3
	cmpje
	cmp0
	je l2646
	push 0
	pop _istate
	cthis herostand
	push 1
	cthis thisfinish
	push _sobfin
	push _sfinfun
	cthis callfun
l2646:
l2637:
l2635:
l2633:
	end method
	method herostand
	localstring $1
	push _sstndpref
	cthis getname
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	call engine,varexist
	cmp0
	je l2648
	push _sstandbase
	cthis actionname
	spushs
	push 0
	push 2
	spop $h
	call $h,gete
	pop $b
	popax
	add $a,$b
	cthis play
	push $1
	spushs
	spop $a
	call [$a],play
l2648:
	end method
	method heroendframe1
	cthis getname
	push "_ENDFRAME"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method heroendframe
	cthis getposy
	call clcamera,getposy
	pop $b
	popax
	sub $a,$b
	cthis setz
	cthis haspocket
	cmp0
	je l2650
	cthis getpocket
	spushs
	cthis getposx
	cthis getposy
	cthis geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],pocketpos
l2650:
	cthis getname
	push "_ENDFRAME"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	end class

	class classadvhero
	method init
	new string,_sanim
	new int,_bisvecile
	push 0
	pop _bisvecile
	new string,_sbase
	push "null"
	pop _sbase
	new string,_sbase2
	push "null"
	pop _sbase2
	new int,izakres
	push 0
	pop izakres
	new string,_sbs2
	new string,_sbutoper
	new string,_smetpart
	new string,_simgbut
	new string,_sptfname
	cthis getname
	pop _sptfname
	end method
	method getptfname
	push _sptfname
	end method
	method link
	localstring $1
	pop $1
	push $1
	pop _sanim
	end method
	method link2
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	cthis link
	push $2
	cthis checkamounts
	end method
	method anstand
	push _sanim
	spushs
	push "stand"
	cthis getdir
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],play
	end method
	method ansay
	push _sanim
	spushs
	push "talk"
	cthis getdir
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],play
	end method
	method getdir
	push _sanim
	spushs
	spop $a
	call [$a],actionname
	spushs
	push 0
	push 2
	spop $h
	call $h,gete
	end method
	method nofpieces
	cthis getdir
	cthis nofpiecesdir
	end method
	method nofpiecesdir
	localstring $1
	pop $1
	push _bisvecile
	cmp0
	je l2652
	push $1
	call vecdirs,find
	call vecile,get
	jmp l2651
l2652:
	push 0
l2651:
	end method
	method setbase2
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	cthis setbase
	push $2
	pop _sbase2
	end method
	method setbase
	localstring $1
	pop $1
	push $1
	pop _sbase
	call $1,length
	pop izakres
	end method
	method getpropdir
	localstring $1
	pop $1
	push $1
	push "auto"
	cmpje
	cmp0
	je l2654
	cthis getdir
	jmp l2653
l2654:
	push $1
l2653:
	end method
	method _buildamounts
	push _bisvecile
	neg
	cmp0
	je l2656
	push 1
	pop _bisvecile
	new vector,vecdirs
	push "string"
	call vecdirs,type
	push "begin"
	push "uu"
	push "ru"
	push "rr"
	push "rd"
	push "dd"
	push "ld"
	push "ll"
	push "lu"
	call vecdirs,beginadd
	new vector,vecile
l2656:
	end method
	method _clearvecile
	call vecile,free
	push 8
	push 0
	call vecile,resize
	end method
	method checkamounts
	localstring $1
	pop $1
	push $1
	cthis setbase
	cthis _buildamounts
	cthis _clearvecile
	push _sanim
	push "null"
	cmpje
	cmp0
	je l2658
	ret
l2658:
	localint $2
	push _sanim
	spushs
	spop $a
	call [$a],nofactions
	pop $2
	localstring $3
	localint $4
	localint $5
	push 0
	pop $5
l2659:
	push $5
	push $2
	cmpjl
	cmp0
	je l2660
	jmp l2662
l2661:
	add $5,1
	pop $5
	jmp l2659
l2662:
	push _sanim
	spushs
	push $5
	spop $a
	call [$a],nameofaction
	pop $3
	push 0
	push izakres
	call $3,getb
	push $1
	cmpje
	cmp0
	je l2664
	push izakres
	push 10
	call $3,getb
	pop $4
	push $4
	push 0
	cmpja
	cmp0
	je l2666
	push 0
	push 2
	call $3,gete
	call vecdirs,find
	call vecile,vecinc
l2666:
l2664:
	jmp l2661
l2660:
	end method
	method getanim
	push _sanim
	end method
	method calllastfun
	cthis getcallfin
	spushs
	spop $d
	cthis [$d]
	push _simgbut
	spushs
	spop $a
	call [$a],checkonce
	end method
	method _calllastfunfin
	cthis calllastfunfin
	cthis advmsunlock
	end method
	method calllastfunfin
	cthis getcallfin
	push "_FINISH"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method getcallfin
	push _sanim
	push _smetpart
	pop $b
	popax
	add $a,$b
	push _sbutoper
	pop $b
	popax
	add $a,$b
	end method
	method _cplay
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	cthis advmslock
	push _sanim
	spushs
	push 1
	spop $a
	call [$a],thisfinish
	push $1
	push "null"
	cmpje
	cmp0
	je l2668
	push _sanim
	spushs
	push $3
	cthis getpropdir
	spop $a
	call [$a],setdir
	push $2
	push "null"
	cmpjne
	cmp0
	je l2670
	push $2
	spushs
	spop $d
	cthis [$d]
l2670:
	jmp l2667
l2668:
	push _sanim
	spushs
	push $1
	push 0
	push 0
	push 0
	push "null"
	push "null"
	push 0
	cthis getname
	push $2
	push $3
	cthis getpropdir
	spop $a
	call [$a],playspec
l2667:
	end method
	method _cplay1
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push "_cplay1_2"
	push $2
	cthis _cplay
	end method
	method _cplay1_2
	cthis calllastfun
	cthis _callbehs
	end method
	method _callbehs
	cthis advmsunlock
	cthis callbehs
	end method
	method callbehs
	localstring $1
	cthis getcallfin
	pop $1
	push "beh_"
	push $1
	pop $b
	popax
	add $a,$b
	cthis behexist
	cmp0
	je l2672
	push "beh_"
	push $1
	pop $b
	popax
	add $a,$b
	cthis getname
	push "_calllastfunfin"
	cthis playbehobfin
	jmp l2671
l2672:
	cthis _calllastfunfin
l2671:
	end method
	method _cplay2_2
	cthis calllastfun
	push _sbs2
	push "_callbehs"
	cthis getdir
	cthis _cplay
	end method
	method _cplay2
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $2
	pop _sbs2
	push $1
	push "_cplay2_2"
	push $3
	cthis _cplay
	end method
	method no_turn
	localstring $1
	pop $1
	localstring $2
	push _spathpref
	push _sanim
	pop $b
	popax
	add $a,$b
	pop $2
	localstring $3
	push _simgbut
	spushs
	spop $a
	call [$a],getbutdir
	cthis getpropdir
	pop $3
	push $2
	call engine,varexist
	cmp0
	je l2674
	cthis getdir
	push $3
	cmpjne
	jmp l2676
l2674:
	push 0
	jmp l2676
l2675:
	push 1
l2676:
	cmp0
	je l2677
	push $2
	spushs
	push $3
	cthis getname
	push $1
	spop $a
	call [$a],heroturn
	push 0
	jmp l2673
l2677:
	push 1
l2673:
	end method
	method _heroplay1
	push _simgbut
	cthis heroplay1
	end method
	method _heroplay2
	push _simgbut
	cthis heroplay2
	end method
	method heroplay1
	localstring $1
	pop $1
	push $1
	pop _simgbut
	push "_heroplay1"
	cthis no_turn
	cmp0
	je l2679
	push $1
	spushs
	spop $a
	call [$a],getbutname
	pop _sbutoper
	push $1
	spushs
	spop $a
	call [$a],getbase1
	push $1
	spushs
	spop $a
	call [$a],getbutdir
	cthis getpropdir
	cthis _cplay1
l2679:
	end method
	method heroplay2
	localstring $1
	pop $1
	push $1
	pop _simgbut
	push "_heroplay2"
	cthis no_turn
	cmp0
	je l2681
	push $1
	spushs
	spop $a
	call [$a],getbutname
	pop _sbutoper
	push $1
	spushs
	spop $a
	call [$a],getbase1
	push $1
	spushs
	spop $a
	call [$a],getbase2
	push $1
	spushs
	spop $a
	call [$a],getbutdir
	cthis getpropdir
	cthis _cplay2
l2681:
	end method
	method _setbase2
	localstring $1
	pop $1
	push $1
	push 1
	call modadv,get
	push $1
	push 2
	call modadv,get
	cthis setbase2
	end method
	method _setbase
	localstring $1
	pop $1
	push $1
	push 1
	call modadv,get
	cthis setbase
	end method
	method heroplay3
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	push $2
	push 1
	call modadv,get
	spop $a
	call [$a],setbutbase1
	push $1
	spushs
	push $2
	push 2
	call modadv,get
	spop $a
	call [$a],setbutbase2
	push $1
	cthis heroplay2
	end method
	end class

	new snd,_fxtakeitem
	class classherotaker
	parent classadvhero
	method init
	clparent classadvhero,init
	push "_PICKUP_"
	pop _smetpart
	end method
	method herotake
	localstring $1
	pop $1
	push $1
	cthis heroplay2
	end method
	method calllastfun
	push _sanim
	spushs
	spop $a
	call [$a],haspocket
	cmp0
	je l2683
	call _fxtakeitem,play
	push _simgbut
	spushs
	spop $a
	call [$a],hideontake
	cmp0
	je l2685
	push _simgbut
	spushs
	spop $a
	call [$a],hide
	jmp l2684
l2685:
	push _simgbut
	spushs
	push "but"
	spop $a
	call [$a],setbuttyp
l2684:
	push _sanim
	spushs
	spop $a
	call [$a],getpocket
	spushs
	push _sbutoper
	push _simgbut
	spushs
	spop $a
	call [$a],getpocket
	spop $a
	call [$a],additem
l2683:
	clparent classadvhero,calllastfun
	end method
	end class

	class classherolooker
	parent classadvhero
	method init
	clparent classadvhero,init
	push "_OPERATE_"
	pop _smetpart
	end method
	method herolook
	localstring $1
	pop $1
	push $1
	cthis heroplay2
	end method
	method herooperate
	localstring $1
	pop $1
	push $1
	cthis heroplay2
	end method
	method heroopendoor
	localstring $1
	pop $1
	push $1
	push "open:"
	cthis heroplay3
	end method
	method heroclosedoor
	localstring $1
	pop $1
	push $1
	push "close:"
	cthis heroplay3
	end method
	end class

	class classherouser
	parent classadvhero
	method init
	clparent classadvhero,init
	new string,_stool
	end method
	method herouse
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	pop _stool
	push "_USE_"
	push _stool
	pop $b
	popax
	add $a,$b
	push "_ON_"
	pop $b
	popax
	add $a,$b
	pop _smetpart
	push _sanim
	spushs
	spop $a
	call [$a],getpocket
	spushs
	spop $a
	call [$a],itemhide
	push $2
	pop _simgbut
	push $2
	spushs
	spop $a
	call [$a],getbutname
	pop _sbutoper
	push $2
	spushs
	spop $a
	call [$a],baseuse1
	push $2
	spushs
	spop $a
	call [$a],baseuse2
	push $2
	spushs
	spop $a
	call [$a],getbutdir
	cthis getpropdir
	cthis _cplay2
	end method
	method calllastfun
	push _sanim
	push "_USE_"
	pop $b
	popax
	add $a,$b
	push _stool
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	push _sanim
	push "_USE_ON_"
	pop $b
	popax
	add $a,$b
	push _sbutoper
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	cthis getcallfin
	spushs
	spop $d
	cthis [$d]
	end method
	method calllastfunfin
	push _sanim
	push "_USE_"
	pop $b
	popax
	add $a,$b
	push _stool
	pop $b
	popax
	add $a,$b
	push "_FINISH"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	push _sanim
	push "_USE_ON_"
	pop $b
	popax
	add $a,$b
	push _sbutoper
	pop $b
	popax
	add $a,$b
	push "_FINISH"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	cthis getcallfin
	push "_FINISH"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method callbehs
	localstring $1
	cthis getname
	pop $1
	push "beh_"
	cthis getcallfin
	pop $b
	popax
	add $a,$b
	cthis behexist
	cmp0
	je l2687
	push "beh_"
	cthis getcallfin
	pop $b
	popax
	add $a,$b
	push $1
	push "_calllastfunfin"
	cthis playbehobfin
	jmp l2686
l2687:
	push "beh_"
	push _sanim
	pop $b
	popax
	add $a,$b
	push "_USE_ON_"
	pop $b
	popax
	add $a,$b
	push _sbutoper
	pop $b
	popax
	add $a,$b
	cthis behexist
	cmp0
	je l2689
	push "beh_"
	push _sanim
	pop $b
	popax
	add $a,$b
	push "_USE_ON_"
	pop $b
	popax
	add $a,$b
	push _sbutoper
	pop $b
	popax
	add $a,$b
	push $1
	push "_calllastfunfin"
	cthis playbehobfin
	jmp l2688
l2689:
	push "beh_"
	push _sanim
	pop $b
	popax
	add $a,$b
	push "_USE_"
	pop $b
	popax
	add $a,$b
	push _stool
	pop $b
	popax
	add $a,$b
	cthis behexist
	cmp0
	je l2691
	push "beh_"
	push _sanim
	pop $b
	popax
	add $a,$b
	push "_USE_"
	pop $b
	popax
	add $a,$b
	push _stool
	pop $b
	popax
	add $a,$b
	push $1
	push "_calllastfunfin"
	cthis playbehobfin
	jmp l2690
l2691:
	push "beh_"
	push _sanim
	pop $b
	popax
	add $a,$b
	push "_USE"
	pop $b
	popax
	add $a,$b
	cthis behexist
	cmp0
	je l2693
	push "beh_"
	push _sanim
	pop $b
	popax
	add $a,$b
	push "_USE"
	pop $b
	popax
	add $a,$b
	push $1
	push "_calllastfunfin"
	cthis playbehobfin
	jmp l2692
l2693:
	cthis _calllastfunfin
l2692:
l2690:
l2688:
l2686:
	end method
	end class

	class classpathf
	parent classadvhero
	method init
	clparent classadvhero,init
	new path,ptf
	new string,swalkto
	push "null"
	pop swalkto
	new string,_sfunnopath
	push "null"
	pop _sfunnopath
	new string,_sfunvisit
	push "null"
	pop _sfunvisit
	new int,destx
	new int,desty
	new int,bzmien
	push 0
	pop bzmien
	new int,bzatrzym
	push 0
	pop bzatrzym
	new string,_sitem
	push "null"
	pop _sitem
	new string,_sobzmien
	push "null"
	pop _sobzmien
	new string,_sfunzmien
	push "null"
	pop _sfunzmien
	new int,_istep
	new int,_itmpspeed
	push A
	push "ispathto"
	push 1
	cthis vars2
	push "onfinish"
	push "_cptffin"
	call ptf,addmethod
	push "onvisit"
	push "_cptvisit"
	call ptf,addmethod
	push "_cptfstdreach"
	push "_cptfstdarrive"
	cthis addsigs
	push "go:"
	cthis _setbase
	end method
	method _buildan
	localstring $1
	pop $1
	push $1
	call ptf,linkanima
	push $1
	cthis link
	end method
	method build
	localstring $1
	localstring $2
	localint $3
	localint $4
	localint $5
	localint $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $5
	pop _istep
	push $2
	push $3
	push $4
	push $5
	push $6
	call ptf,build
	push $1
	cthis _buildan
	end method
	method buildfrom
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $3
	pop _istep
	push $2
	push $3
	call ptf,copy
	push $1
	cthis _buildan
	end method
	method addsigs
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l2695
	push "onreach"
	push $1
	call ptf,addmethod
l2695:
	push $2
	push "null"
	cmpjne
	cmp0
	je l2697
	push "onarrive"
	push $2
	call ptf,addmethod
l2697:
	end method
	method sigonnopath
	localstring $1
	pop $1
	push $1
	pop _sfunnopath
	end method
	method sigonvisit
	localstring $1
	pop $1
	push $1
	pop _sfunvisit
	end method
	method _cptfstdreach
	localstring $1
	pop $1
	end method
	method _cptfstdarrive
	end method
	method move
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call ptf,move
	end method
	method setpos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call ptf,setpos
	end method
	method show
	call ptf,show
	end method
	method hide
	call ptf,hide
	end method
	method enable
	localint $1
	pop $1
	push $1
	call ptf,enable
	end method
	method disable
	localint $1
	pop $1
	push $1
	call ptf,disable
	end method
	method setanstep
	localint $1
	pop $1
	push $1
	pop _istep
	push $1
	call ptf,setanstep
	end method
	method mulspeed
	localint $1
	pop $1
	push $1
	push _istep
	pop $b
	popax
	mul $a,$b
	pop _itmpspeed
	push _itmpspeed
	call ptf,setanstep
	end method
	method retstep
	push _istep
	cthis setanstep
	end method
	method getanstep
	push _istep
	ret
	end method
	method getposx
	call ptf,getposx
	ret
	end method
	method getposy
	call ptf,getposy
	ret
	end method
	method getpx
	call ptf,getpx
	ret
	end method
	method getpy
	call ptf,getpy
	ret
	end method
	method getidan
	call ptf,getidan
	ret
	end method
	method getidan2
	call ptf,getidan2
	ret
	end method
	method getidgo
	call ptf,getidgo
	ret
	end method
	method getidanpath
	call ptf,getidanpath
	ret
	end method
	method getidan2path
	call ptf,getidan2path
	ret
	end method
	method getidgopath
	call ptf,getidgopath
	ret
	end method
	method excludev
	localint $1
	pop $1
	push $1
	call ptf,excludev
	end method
	method linkfilter
	call ptf,linkfilter
	end method
	method unlinkfilter
	call ptf,unlinkfilter
	end method
	method unlinkanima
	call ptf,unlinkanima
	end method
	method linkanima
	localstring $1
	pop $1
	push $1
	call ptf,linkanima
	end method
	method setscalepower
	localreal $1
	pop $1
	push $1
	call ptf,setscalepower
	end method
	method setzsize
	localreal $1
	pop $1
	push $1
	call ptf,setzsize
	end method
	method iswayto
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call ptf,iswayto
	ret
	end method
	method scalean
	call ptf,scalean
	end method
	method getfromver
	localint $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	call ptf,getfromver
	ret
	end method
	method getgover
	localint $1
	pop $1
	push $1
	call ptf,getgover
	ret
	end method
	method getanver
	localint $1
	pop $1
	push $1
	call ptf,getanver
	ret
	end method
	method getxver
	localint $1
	pop $1
	push $1
	call ptf,getxver
	ret
	end method
	method getyver
	localint $1
	pop $1
	push $1
	call ptf,getyver
	ret
	end method
	method getbyname
	localint $1
	pop $1
	push $1
	call ptf,getbyname
	ret
	end method
	method walkbase
	localstring $1
	pop $1
	push $1
	call ptf,setbase
	end method
	method letturn
	localint $1
	pop $1
	push $1
	call ptf,letturn
	end method
	method canturn
	call ptf,canturn
	end method
	method vecdir
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call ptf,vecdir
	end method
	method ptfgoto
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call ptf,goto
	end method
	method setmovetype
	localint $1
	pop $1
	push $1
	call ptf,setmovetype
	end method
	method walkto2
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	pop swalkto
	push $2
	push $3
	cthis cangoto
	cmp0
	je l2699
	push $2
	push $3
	call ptf,goto
	pop $2
	jmp l2698
l2699:
	push _sfunnopath
	push "null"
	cmpjne
	cmp0
	je l2701
	push _sfunnopath
	spushs
	spop $d
	cthis [$d]
l2701:
l2698:
	end method
	method walkto
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	pop swalkto
	push $1
	push "null"
	cmpje
	cthis letturn
	cthis iswalking
	cmp0
	je l2703
	push $2
	push $3
	call ptf,iswayto
	cmp0
	je l2705
	push 1
	pop bzmien
	push $2
	pop destx
	push $3
	pop desty
	push 0
	ret
	jmp l2704
l2705:
	push 1
	pop bzatrzym
	push 1
	popax
	sub 0,$a
	ret
l2704:
	jmp l2702
l2703:
	push $2
	push $3
	call ptf,goto
	ret
l2702:
	end method
	method iswaytover
	localint $1
	pop $1
	push slastpathf
	spushs
	push $1
	spop $a
	call [$a],getbyname
	pop $1
	push $1
	cthis getxver
	cthis getposx
	pop $b
	popax
	sub $a,$b
	push $1
	cthis getyver
	cthis getposy
	pop $b
	popax
	sub $a,$b
	call ptf,iswayto
	end method
	method length
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call ptf,length
	end method
	method lengthver
	localint $1
	pop $1
	push slastpathf
	spushs
	push $1
	spop $a
	call [$a],getbyname
	pop $1
	push $1
	cthis getxver
	cthis getposx
	pop $b
	popax
	sub $a,$b
	push $1
	cthis getyver
	cthis getposy
	pop $b
	popax
	sub $a,$b
	cthis length
	end method
	method goto
	localint $1
	localint $2
	pop $2
	pop $1
	push "null"
	push $1
	push $2
	cthis walkto
	ret
	end method
	method gotorel
	localint $1
	localint $2
	pop $2
	pop $1
	push _sanim
	spushs
	spop $a
	call [$a],getpx
	push $1
	pop $b
	popax
	add $a,$b
	push _sanim
	spushs
	spop $a
	call [$a],getey
	push $2
	pop $b
	popax
	add $a,$b
	cthis goto
	ret
	end method
	method turn
	localstring $1
	pop $1
	push $1
	call ptf,turn
	end method
	method iswalking
	call ptf,iswalking
	ret
	end method
	method stand
	call ptf,stand
	end method
	method stop
	localint $1
	pop $1
	push $1
	call ptf,stop
	end method
	method getidpath
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call ptf,getidpath
	ret
	end method
	method cangoto
	localint $1
	localint $2
	pop $2
	pop $1
	localint $3
	push $1
	push $2
	call ptf,getidpath
	pop $3
	push $3
	push 1
	popax
	sub 0,$a
	cmpje
	cmp0
	je l2707
	push 0
	jmp l2706
l2707:
	push $3
	call ptf,isenabled
l2706:
	ret
	end method
	method _cptfreachpocket
	cthis getptfname
	push "look"
	pop $b
	popax
	add $a,$b
	spushs
	push swalkto
	spop $a
	call [$a],herolook
	end method
	method _cptfreachbut
	cthis getptfname
	push "look"
	pop $b
	popax
	add $a,$b
	spushs
	push swalkto
	spop $a
	call [$a],herolook
	end method
	method _cptfreachdoors
	cthis getptfname
	push "look"
	pop $b
	popax
	add $a,$b
	spushs
	push swalkto
	spop $a
	call [$a],herooperate
	end method
	method _cptfreachitem
	cthis getptfname
	push "take"
	pop $b
	popax
	add $a,$b
	spushs
	push swalkto
	spop $a
	call [$a],herotake
	end method
	method _cptfherofin
	cthis herostand
	push swalkto
	push "null"
	cmpjne
	cmp0
	je l2709
	push _sanim
	push "_REACH_"
	pop $b
	popax
	add $a,$b
	push swalkto
	spushs
	spop $a
	call [$a],getbutname
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	push _sanim
	cthis ismainhero
	cmp0
	je l2711
	localstring $1
	push "null"
	pop $1
	push _sanim
	spushs
	spop $a
	call [$a],haspocket
	cmp0
	je l2713
	push _sanim
	spushs
	spop $a
	call [$a],getpocket
	spushs
	spop $a
	call [$a],getitem
	pop $1
l2713:
	push $1
	push "null"
	cmpjne
	cmp0
	je l2715
	cthis getptfname
	push "use"
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	push swalkto
	spop $a
	call [$a],herouse
	jmp l2714
l2715:
	push "_cptfreach"
	push swalkto
	spushs
	spop $a
	call [$a],gettyp
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
l2714:
l2711:
	push "null"
	pop swalkto
	jmp l2708
l2709:
	push _sanim
	push "_ARRIVE"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	cthis _cptheroendpath
l2708:
	end method
	method sigonzmien
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	pop _sobzmien
	push $2
	pop _sfunzmien
	end method
	method _cptheroendpath
	push _sfinob
	push _sfinfun
	cthis callfun
	push _bylfin
	cmp0
	je l2717
	push 0
	pop _bylfin
	jmp l2716
l2717:
	push "null"
	pop _sfinfun
	push "null"
	pop _sfinob
l2716:
	end method
	method _cptfnopath
	push _sanim
	push "_NOPATH"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method _cptfvisit
	push _sanim
	push "_VISIT"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method prepareforhero
	push "onfinish"
	push "_cptfherofin"
	call ptf,addmethod
	new string,_sfinob
	new string,_sfinfun
	new int,_bylfin
	push "_cptfnopath"
	cthis sigonnopath
	push "_cptfvisit"
	cthis sigonvisit
	end method
	method herowalkto2
	localint $1
	localint $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push "null"
	push $1
	push $2
	push $3
	push $4
	cthis herowalkto
	end method
	method herowalkto
	localstring $1
	localint $2
	localint $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push _sstndpref
	push _sanim
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],stop
	push $4
	pop _sfinob
	push $5
	pop _sfinfun
	push $5
	push "null"
	cmpjne
	cmp0
	je l2719
	push 1
	pop _bylfin
l2719:
	push $1
	push $2
	push $3
	cthis walkto
	push 1
	popax
	sub 0,$a
	cmpje
	cmp0
	je l2721
	push 0
	pop ispathto
	jmp l2720
l2721:
	push 1
	pop ispathto
l2720:
	end method
	method heroturn
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $2
	pop _sfinob
	push $3
	pop _sfinfun
	push $3
	push "null"
	cmpjne
	cmp0
	je l2723
	push 1
	pop _bylfin
l2723:
	push $1
	cthis turn
	end method
	method advgoto
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push "null"
	push "null"
	cthis herowalkto2
	end method
	method advwalkto
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push "null"
	push "null"
	cthis herowalkto
	end method
	method advvisit
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],reachable
	cmp0
	je l2725
	push $1
	push $1
	spushs
	spop $a
	call [$a],getgox
	push $1
	spushs
	spop $a
	call [$a],getgoy
	cthis advwalkto
l2725:
	end method
	method herostand
	cthis retstep
	cthis stand
	push _sanim
	spushs
	spop $a
	call [$a],herostand
	end method
	method stophero
	cthis herostand
	push 1
	pop bzatrzym
	end method
	method _cptvisit
	push _sfunvisit
	spushs
	spop $d
	cthis [$d]
	push bzmien
	cmp0
	je l2727
	push 0
	pop bzmien
	push destx
	push desty
	cthis goto
	push 1
	popax
	sub 0,$a
	cmpje
	cmp0
	je l2729
	push _sfunnopath
	spushs
	spop $d
	cthis [$d]
	jmp l2728
l2729:
	push _sobzmien
	push _sfunzmien
	cthis callfun
l2728:
	jmp l2726
l2727:
	push bzatrzym
	cmp0
	je l2731
	push 0
	pop bzatrzym
	push 1
	cthis stop
l2731:
l2726:
	end method
	method _cptffin
	push swalkto
	push "null"
	cmpjne
	cmp0
	je l2733
	push swalkto
	call ptf,onreach
	push "null"
	pop swalkto
	jmp l2732
l2733:
	call ptf,onarrive
l2732:
	end method
	method anposx
	push _sanim
	spushs
	spop $a
	call [$a],getposx
	end method
	method anposy
	push _sanim
	spushs
	spop $a
	call [$a],getposy
	end method
	method bzmien
	push bzmien
	end method
	method bzmien=
	localint $1
	pop $1
	push $1
	pop bzmien
	end method
	method checkreach
	localstring $1
	pop $1
	push ispathto
	neg
	cmp0
	je l2735
	push $1
	push "null"
	cmpjne
	cmp0
	je l2735
	cthis behplaying
	neg
	jmp l2737
l2735:
	push 0
	jmp l2737
l2736:
	push 1
l2737:
	cmp0
	je l2738
	push "beh_"
	push _sanim
	pop $b
	popax
	add $a,$b
	push "_NOPATH_"
	pop $b
	popax
	add $a,$b
	push $1
	spushs
	spop $a
	call [$a],getbutname
	pop $b
	popax
	add $a,$b
	cthis playbehif
	neg
	pop _b_rewind
l2738:
	end method
	end class

	class classwalkerqueue
	method init
	new timer,timwq
	push 1
	call timwq,settick
	push 1
	call timwq,setcycle
	push "onfinish"
	push "_timwqfin"
	call timwq,addmethod
	new vector,vecpt
	push "string"
	call vecpt,type
	new int,iverlen
	push 1
	pop iverlen
	new int,igox
	new int,igoy
	new string,_simg
	new int,bniezmien
	push 1
	pop bniezmien
	end method
	method _timwqfin
	cthis checkqueue
	cthis play
	end method
	method start
	end method
	method ptpos
	localstring $1
	pop $1
	push $1
	call vecpt,find
	end method
	method remove
	localstring $1
	pop $1
	localint $2
	push $1
	cthis ptpos
	pop $2
	push $2
	push 0
	cmpjae
	cmp0
	je l2740
	push $2
	push 0
	cmpje
	cmp0
	je l2742
	call vecpt,first
	spushs
	push "null"
	push "null"
	spop $a
	call [$a],sigonzmien
	push 0
	call vecpt,removeat
	call vecpt,size
	cmp0
	je l2744
	call vecpt,first
	spushs
	cthis getname
	push "ptzmien"
	spop $a
	call [$a],sigonzmien
l2744:
	jmp l2741
l2742:
	push $2
	call vecpt,removeat
l2741:
l2740:
	end method
	method stop
	push 0
	call timwq,stop
	end method
	method add
	localstring $1
	pop $1
	push $1
	spushs
	push $1
	spushs
	spop $a
	call [$a],anposx
	push $1
	spushs
	spop $a
	call [$a],anposy
	spop $a
	call [$a],iswayto
	popax
	push $1
	call vecpt,add
	call vecpt,size
	push 1
	cmpje
	cmp0
	je l2746
	call vecpt,first
	spushs
	cthis getname
	push "ptzmien"
	spop $a
	call [$a],sigonzmien
l2746:
	end method
	method ptzmien
	push 0
	pop bniezmien
	push _simg
	push igox
	call clcamera,getposx
	pop $b
	popax
	add $a,$b
	push igoy
	call clcamera,getposy
	pop $b
	popax
	add $a,$b
	cthis walkto
	call vecpt,first
	spushs
	push 0
	spop $a
	call [$a],bzmien=
	push 1
	pop bniezmien
	end method
	method goto
	localint $1
	localint $2
	pop $2
	pop $1
	push "null"
	push $1
	push $2
	cthis walkto
	end method
	method visit
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],reachable
	cmp0
	je l2748
	call vecpt,size
	jmp l2750
l2748:
	push 0
	jmp l2750
l2749:
	push 1
l2750:
	cmp0
	je l2751
	call vecpt,first
	push "_WALKTO_"
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	push $1
	push $1
	spushs
	spop $a
	call [$a],getgox
	push $1
	spushs
	spop $a
	call [$a],getgoy
	cthis walkto
l2751:
	end method
	method setverlen
	localint $1
	pop $1
	push $1
	pop iverlen
	end method
	method stand
	localint $1
	push 0
	pop $1
l2752:
	push $1
	call vecpt,size
	cmpjl
	cmp0
	je l2753
	jmp l2755
l2754:
	add $1,1
	pop $1
	jmp l2752
l2755:
	push $1
	call vecpt,get
	spushs
	push 0
	spop $a
	call [$a],stop
	push $1
	call vecpt,get
	spushs
	spop $a
	call [$a],herostand
	jmp l2754
l2753:
	end method
	method mulspeed
	localint $1
	pop $1
	localint $2
	push 0
	pop $2
l2756:
	push $2
	call vecpt,size
	cmpjl
	cmp0
	je l2757
	jmp l2759
l2758:
	add $2,1
	pop $2
	jmp l2756
l2759:
	push $2
	call vecpt,get
	spushs
	push $1
	spop $a
	call [$a],mulspeed
	jmp l2758
l2757:
	end method
	method walkto
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $2
	call clcamera,getposx
	pop $b
	popax
	sub $a,$b
	pop igox
	push $3
	call clcamera,getposy
	pop $b
	popax
	sub $a,$b
	pop igoy
	push $1
	pop _simg
	push 1
	pop iverlen
	localint $4
	call vecpt,size
	pop $4
	push $4
	push 0
	cmpjle
	cmp0
	je l2761
	ret
l2761:
	localstring $5
	call vecpt,first
	pop $5
	push $5
	spushs
	push $1
	push $2
	push $3
	spop $a
	call [$a],advwalkto
	localint $6
	localint $7
	localstring $8
	localint $9
	push 1
	pop $9
l2762:
	push $9
	push $4
	cmpjl
	cmp0
	je l2763
	jmp l2765
l2764:
	add $9,1
	pop $9
	jmp l2762
l2765:
	push $9
	call vecpt,get
	pop $8
	push $5
	spushs
	spop $a
	call [$a],getidgo
	pop $7
	push bniezmien
	cmp0
	je l2767
	push $5
	spushs
	push iverlen
	spop $a
	call [$a],getgover
	pop $6
	jmp l2766
l2767:
	push $8
	spushs
	push $1
	push $2
	push $3
	spop $a
	call [$a],advwalkto
	push $8
	spushs
	push $9
	push iverlen
	pop $b
	popax
	mul $a,$b
	spop $a
	call [$a],getgover
	pop $6
l2766:
	push $6
	push 0
	cmpjl
	cmp0
	je l2769
	push $5
	spushs
	push iverlen
	spop $a
	call [$a],getgover
	pop $6
	push $6
	push 0
	cmpjl
	cmp0
	je l2771
	push $5
	spushs
	spop $a
	call [$a],getidan
	pop $6
l2771:
l2769:
	push $6
	push $7
	cmpje
	cmp0
	je l2773
	push bniezmien
	jmp l2775
l2773:
	push 0
	jmp l2775
l2774:
	push 1
l2775:
	cmp0
	je l2776
	push 1
	popax
	sub 0,$a
	pop $6
l2776:
	push $8
	pop $5
	push $6
	push 0
	cmpjae
	cmp0
	je l2778
	push $8
	spushs
	push "null"
	push $8
	spushs
	push $6
	spop $a
	call [$a],getxver
	push $8
	spushs
	push $6
	spop $a
	call [$a],getyver
	spop $a
	call [$a],advwalkto
	jmp l2777
l2778:
	push $8
	spushs
	push 0
	spop $a
	call [$a],stop
	push $8
	spushs
	spop $a
	call [$a],herostand
l2777:
	jmp l2764
l2763:
	push $5
	spushs
	push $1
	spop $a
	call [$a],checkreach
	end method
	method checkqueue
	localint $1
	call vecpt,size
	pop $1
	push $1
	push 1
	cmpjle
	cmp0
	je l2780
	ret
l2780:
	localint $2
	localstring $3
	localstring $4
	localint $5
	localint $6
	localint $7
	push 0
	pop $7
l2781:
	push $7
	push $1
	cmpjl
	cmp0
	je l2782
	jmp l2784
l2783:
	add $7,1
	pop $7
	jmp l2781
l2784:
	push $7
	call vecpt,get
	pop $3
	push $3
	spushs
	spop $a
	call [$a],iswalking
	cmp0
	je l2786
	push $3
	spushs
	spop $a
	call [$a],getidan
	pop $5
	push $3
	spushs
	spop $a
	call [$a],getidan2
	pop $6
	push $7
	push 1
	pop $b
	popax
	add $a,$b
	pop $2
l2787:
	push $2
	push $1
	cmpjl
	cmp0
	je l2788
	jmp l2790
l2789:
	add $2,1
	pop $2
	jmp l2787
l2790:
	push $2
	call vecpt,get
	pop $4
	push $4
	spushs
	spop $a
	call [$a],iswalking
	cmp0
	je l2792
	push $4
	spushs
	push $5
	spop $a
	call [$a],excludev
	push $4
	spushs
	push $6
	spop $a
	call [$a],excludev
l2792:
	jmp l2789
l2788:
l2786:
	jmp l2783
l2782:
	end method
	end class

	class classstndgroup
	method init
	new gmobjvec,grstnd
	end method
	method pause
	push "lock"
	call grstnd,eval
	cthis stop
	end method
	method resume
	cthis advstdstate
	cmp0
	je l2794
	push "unlock"
	call grstnd,eval
	cthis play
l2794:
	end method
	method add
	localstring $1
	pop $1
	push $1
	call grstnd,add
	end method
	method remove
	localstring $1
	pop $1
	push $1
	call grstnd,remove
	end method
	method stop
	push "stop"
	call grstnd,eval
	end method
	method play
	push "play"
	call grstnd,eval
	end method
	method reset
	push "reset"
	call grstnd,eval
	end method
	end class

	class classadvstander
	parent classlocker
	method init
	clparent classlocker,init
	new timer,timstand
	push 1
	call timstand,settick
	new int,_i_idle
	push 12000
	pop _i_idle
	push "onfinish"
	push "_timstandfin"
	call timstand,addmethod
	new string,sanim
	cthis getname
	pop sanim
	push _sstndpref
	call sanim,strsubbs
	pop sanim
	cthis _make_idle
	new string,_sbeh
	push "beh_"
	push sanim
	pop $b
	popax
	add $a,$b
	push "_IDLE"
	pop $b
	popax
	add $a,$b
	pop _sbeh
	cthis getname
	call modstnd,add
	end method
	method _make_idle
	push _i_idle
	call _i_idle,rand
	pop $b
	popax
	add $a,$b
	call timstand,delay
	end method
	method _timstandfin
	cthis _make_idle
	localstring $1
	call gameapi,getgamename
	pop $1
	push $1
	spushs
	push _sbeh
	spop $a
	call [$a],behexist
	cmp0
	je l2796
	cthis getlock
	neg
	jmp l2798
l2796:
	push 0
	jmp l2798
l2797:
	push 1
l2798:
	cmp0
	je l2799
	push $1
	spushs
	push _sbeh
	spop $a
	call [$a],playbeh
l2799:
	end method
	method play
	cthis getlock
	neg
	cmp0
	je l2801
	call timstand,isplaying
	neg
	jmp l2803
l2801:
	push 0
	jmp l2803
l2802:
	push 1
l2803:
	cmp0
	je l2804
	call timstand,play
l2804:
	end method
	method stop
	push 0
	call timstand,stop
	end method
	method setdelay
	localint $1
	pop $1
	push $1
	pop _i_idle
	push _i_idle
	push 0
	cmpjle
	cmp0
	je l2806
	push 1
	pop _i_idle
l2806:
	push $1
	call timstand,setdelay
	end method
	method reset
	cthis stop
	cthis play
	end method
	end class

	class classtalker
	parent classadvhero
	method init
	clparent classadvhero,init
	push "talk:"
	cthis _setbase
	new snd,sndtalk
	call sndtalk,buildfullname
	push 0
	push 1
	call sndtalk,setstartstopflag
	push "onfinish"
	push "_ctalkfin"
	call sndtalk,addmethod
	new timer,timtalk
	push 1
	call timtalk,settick
	new real,rdelay
	push 1.0
	pop rdelay
	push "onfinish"
	push "_ctalkfin"
	call timtalk,addmethod
	new gmimgvec,txttalk
	new int,_iletxt
	push 10
	pop _iletxt
	localstring $1
	localint $2
	push 0
	pop $2
l2807:
	push $2
	push _iletxt
	cmpjl
	cmp0
	je l2808
	jmp l2810
l2809:
	add $2,1
	pop $2
	jmp l2807
l2810:
	push "txttalk"
	push $2
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	spushs
	spop $e
	new text,[$e]
	push $1
	call txttalk,add
	jmp l2809
l2808:
	new font,fonttalk
	call txttalk,hide
	new vector,vecpom
	push "string"
	call vecpom,type
	new int,iTxtLim
	push 30
	pop iTxtLim
	new int,irtxt
	new int,igtxt
	new int,ibtxt
	push igmsubtitle
	cmp0
	je l2812
	call subtitle,getcolor
	pop ibtxt
	pop igtxt
	pop irtxt
l2812:
	new string,stextdb
	new string,_swav
	cthis buildfullname
	new string,stalktype
	push "snd"
	cthis settalktype
	end method
	method set
	localstring $1
	pop $1
	push $1
	cthis link
	end method
	method settextdb
	localstring $1
	pop $1
	push $1
	pop stextdb
	end method
	method setfont
	localstring $1
	localint $2
	pop $2
	pop $1
	push $1
	call $2,igetsc
	call fonttalk,load
	push "setfont"
	push "fonttalk"
	call txttalk,eval1
	end method
	method setsnd
	localstring $1
	pop $1
	push $1
	call sndtalk,advloadsnd
	end method
	method herosay1
	localstring $1
	pop $1
	push 1
	push 1
	push 1
	push "null"
	push $1
	cthis herosay
	end method
	method herosay
	localint $1
	localint $2
	localint $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	push $5
	cthis getdir
	cthis herosaydir
	end method
	method herosaydir
	localint $1
	localint $2
	localint $3
	localstring $4
	localstring $5
	localstring $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push _sanim
	spushs
	push 0
	spop $a
	call [$a],thisfinish
	push $2
	neg
	cmp0
	je l2814
	push _sanim
	spushs
	push _sbase
	push $6
	cthis nofpiecesdir
	push $1
	push $2
	push "null"
	push "null"
	push $3
	push $4
	push $5
	push $6
	spop $a
	call [$a],playspec
	push stalktype
	spushs
	spop $d
	cthis [$d]
	jmp l2813
l2814:
	push _sanim
	spushs
	push _sbase
	push $6
	cthis nofpiecesdir
	push $1
	push $2
	cthis getfullname
	push "_ctalkstart"
	push $3
	push $4
	push $5
	push $6
	spop $a
	call [$a],playspec
l2813:
	end method
	method thisfinish
	localint $1
	pop $1
	push _sanim
	spushs
	push $1
	spop $a
	call [$a],thisfinish
	end method
	method stop
	localint $1
	pop $1
	push "snd"
	call stalktype,contains
	cmp0
	je l2816
	call sndtalk,getfullname
	cthis cisactsnd
	cmp0
	je l2818
	push $1
	cthis cactsndstop
	jmp l2817
l2818:
	push $1
	call sndtalk,stop
l2817:
	push 0
	call timtalk,stop
	jmp l2815
l2816:
	push $1
	call timtalk,stop
l2815:
	end method
	method settalktype
	localstring $1
	pop $1
	push "_cplay"
	pop stalktype
	push "snd"
	call $1,contains
	cmp0
	je l2820
	push "snd"
	popax
	add stalktype,$a
	pop stalktype
l2820:
	push "txt"
	call $1,contains
	cmp0
	je l2822
	push "txt"
	popax
	add stalktype,$a
	pop stalktype
l2822:
	push "film"
	call $1,contains
	cmp0
	je l2824
	push "film"
	popax
	add stalktype,$a
	pop stalktype
l2824:
	end method
	method _csay
	push stextdb
	push "null"
	cmpjne
	cmp0
	je l2826
	localint $1
	push stextdb
	spushs
	push _swav
	spop $a
	call [$a],findbyrow
	pop $1
	push $1
	push 0
	cmpjl
	cmp0
	je l2828
	ret
l2828:
	push stextdb
	spushs
	push $1
	push 2
	spop $a
	call [$a],get
	push " "
	call vecpom,vecbuildfromstring
	localstring $2
	push ""
	pop $2
	localint $3
	push 0
	pop $3
	localint $4
	localint $5
	push "txt"
	call stalktype,contains
	cmp0
	je l2830
	push _sanim
	spushs
	spop $a
	call [$a],getcx
	pop $4
	push _sanim
	spushs
	spop $a
	call [$a],getpy
	pop $5
	jmp l2829
l2830:
	push 400
	pop $4
	push 590
	pop $5
l2829:
	localint $6
	push 0
	pop $6
	localint $7
	push iResX
	pop $7
	localint $8
	push 0
	pop $8
	localint $9
	push iResY
	pop $9
	localstring $10
	localint $11
	push 0
	pop $11
l2831:
	push $11
	call vecpom,size
	cmpjl
	cmp0
	je l2832
	jmp l2834
l2833:
	add $11,1
	pop $11
	jmp l2831
l2834:
	push $11
	call vecpom,get
	push " "
	pop $b
	popax
	add $a,$b
	popax
	add $2,$a
	pop $2
	call $2,length
	push iTxtLim
	cmpja
	cmp0
	je l2836
	push "txttalk"
	push $3
	pop $b
	popax
	add $a,$b
	pop $10
	push $10
	spushs
	push $2
	push $4
	push $5
	push $3
	spop $a
	call [$a],_cprinttxt
	push $10
	spushs
	spop $a
	call [$a],getpx
	push $6
	cmpjl
	cmp0
	je l2838
	push $10
	spushs
	spop $a
	call [$a],getpx
	pop $6
l2838:
	push $10
	spushs
	spop $a
	call [$a],getex
	push $7
	cmpja
	cmp0
	je l2840
	push $10
	spushs
	spop $a
	call [$a],getex
	pop $7
l2840:
	push $10
	spushs
	spop $a
	call [$a],getpy
	push $8
	cmpjl
	cmp0
	je l2842
	push $10
	spushs
	spop $a
	call [$a],getpy
	pop $8
l2842:
	push $10
	spushs
	spop $a
	call [$a],getey
	push $9
	cmpja
	cmp0
	je l2844
	push $10
	spushs
	spop $a
	call [$a],getey
	pop $9
l2844:
	push ""
	pop $2
	add $3,1
	pop $3
l2836:
	jmp l2833
l2832:
	call $2,length
	push 0
	cmpja
	cmp0
	je l2846
	push "txttalk"
	push $3
	pop $b
	popax
	add $a,$b
	pop $10
	push $10
	spushs
	push $2
	push $4
	push $5
	push $3
	spop $a
	call [$a],_cprinttxt
	push $10
	spushs
	spop $a
	call [$a],getpx
	push $6
	cmpjl
	cmp0
	je l2848
	push $10
	spushs
	spop $a
	call [$a],getpx
	pop $6
l2848:
	push $10
	spushs
	spop $a
	call [$a],getex
	push $7
	cmpja
	cmp0
	je l2850
	push $10
	spushs
	spop $a
	call [$a],getex
	pop $7
l2850:
	push $10
	spushs
	spop $a
	call [$a],getpy
	push $8
	cmpjl
	cmp0
	je l2852
	push $10
	spushs
	spop $a
	call [$a],getpy
	pop $8
l2852:
	push $10
	spushs
	spop $a
	call [$a],getey
	push $9
	cmpja
	cmp0
	je l2854
	push $10
	spushs
	spop $a
	call [$a],getey
	pop $9
l2854:
	add $3,1
	pop $3
l2846:
	push iResX
	popax
	sub $7,$a
	pop $7
	push iResY
	popax
	sub $9,$a
	pop $9
	push $6
	push 0
	cmpja
	cmp0
	je l2856
	push 0
	pop $6
l2856:
	push $8
	push 0
	cmpja
	cmp0
	je l2858
	push 0
	pop $6
l2858:
	push 0
	push $6
	pop $b
	popax
	sub $a,$b
	push $7
	pop $b
	popax
	add $a,$b
	push $3
	popax
	sub 0,$a
	call txttalk0,geth
	pop $b
	popax
	mul $a,$b
	push $8
	pop $b
	popax
	sub $a,$b
	push $9
	pop $b
	popax
	add $a,$b
	call txttalk,move
	call txttalk0,getpy
	push 0
	cmpjl
	cmp0
	je l2860
	push 0
	call txttalk0,getpy
	popax
	sub 0,$a
	call txttalk,move
l2860:
	push rdelay
	push 500
	pop $b
	popax
	mul $a,$b
	call vecpom,size
	pop $b
	popax
	mul $a,$b
	call timtalk,delay
l2826:
	end method
	method _cprinttxt
	localstring $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	cthis set
	push irtxt
	push igtxt
	push ibtxt
	cthis createtxt
	push $2
	cthis getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push $3
	push $4
	cthis geth
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	cthis setpos
	push 2000
	cthis setz
	cthis show
	end method
	method _cplaysnd
	push irtxt
	push igtxt
	push ibtxt
	call subtitle,setcolor
	call sndtalk,getfullname
	cthis cbsplay
	call subtitle,restorecolor
	end method
	method _cplaysndtxt
	cthis _cplaysnd
	cthis _csay
	end method
	method _cplaysndtxtfilm
	cthis _cplaysnd
	cthis _csay
	end method
	method _cplaysndfilm
	cthis _csay
	end method
	method _cplaytxt
	cthis _csay
	call timtalk,play
	end method
	method _cplaytxtfilm
	cthis _csay
	call timtalk,play
	end method
	method _cplayfilm
	cthis _csay
	call timtalk,play
	end method
	method setdelay
	localreal $1
	pop $1
	push $1
	pop rdelay
	end method
	method settxtcolor
	localint $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	pop irtxt
	push $2
	pop igtxt
	push $3
	pop ibtxt
	end method
	method _ctalkstart
	push stalktype
	spushs
	spop $d
	cthis [$d]
	end method
	method _ctalkfin
	call txttalk,hide
	push _sanim
	spushs
	spop $a
	call [$a],herostop
	end method
	end class

	class classtxttalker
	parent classadvhero
	method init
	clparent classadvhero,init
	push "talk:"
	cthis _setbase
	new int,iR
	new int,iG
	new int,iB
	new int,ibR
	new int,ibG
	new int,ibB
	new int,ibA
	new int,ibrr
	new int,ibrg
	new int,ibrb
	new int,ibra
	new int,ibw
	new db,dbtxt
	new int,iSize
	new gmimgvec,grtxt
	new gmimgvec,grtxt2
	localstring $1
	localint $2
	push 0
	pop $2
l2861:
	push $2
	push 25
	cmpjl
	cmp0
	je l2862
	jmp l2864
l2863:
	add $2,1
	pop $2
	jmp l2861
l2864:
	push "txt"
	push $2
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	spushs
	spop $e
	new text,[$e]
	push $1
	call grtxt,add
	push $1
	spushs
	spop $a
	call [$a],hide
	jmp l2863
l2862:
	new text,imgtxt
	call imgtxt,hide
	new int,bplaying
	push 0
	pop bplaying
	new string,slang
	push "pol"
	cthis setlang
	end method
	method setlang
	localstring $1
	pop $1
	push $1
	pop slang
	end method
	method isplaying
	push bplaying
	end method
	method setfont
	localstring $1
	pop $1
	push "setfont"
	push $1
	call grtxt,eval1
	push $1
	spushs
	spop $a
	call [$a],getsize
	pop iSize
	end method
	method setfontcolor
	localint $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	pop iR
	push $2
	pop iG
	push $3
	pop iB
	end method
	method setfontbg
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	pop ibR
	push $2
	pop ibG
	push $3
	pop ibB
	push $4
	pop ibA
	end method
	method setbgframe
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $2
	pop ibrr
	push $3
	pop ibrg
	push $4
	pop ibrb
	push 255
	pop ibra
	push $1
	pop ibw
	end method
	method set
	localstring $1
	localint $2
	pop $2
	pop $1
	push $1
	cthis link
	push $2
	call grtxt,setz
	push $2
	push 1
	pop $b
	popax
	sub $a,$b
	call imgtxt,setz
	end method
	method herosay
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	cthis getdir
	cthis herosaydir
	end method
	method herosaydir
	localstring $1
	localint $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $4
	push "auto"
	cmpje
	cmp0
	je l2866
	cthis getdir
	pop $4
l2866:
	push 1
	pop bplaying
	cthis getgraphpath
	push $1
	pop $b
	popax
	add $a,$b
	push "."
	pop $b
	popax
	add $a,$b
	push slang
	pop $b
	popax
	add $a,$b
	call dbtxt,load
	localstring $5
	call grtxt2,free
	localint $6
	push 0
	pop $6
	localint $7
	call dbtxt,getrowsno
	pop $7
	localint $8
	push 0
	pop $8
l2867:
	push $8
	push $7
	cmpjl
	cmp0
	je l2868
	jmp l2870
l2869:
	add $8,1
	pop $8
	jmp l2867
l2870:
	push "txt"
	push $8
	pop $b
	popax
	add $a,$b
	pop $5
	push $5
	spushs
	push $8
	push 0
	call dbtxt,get
	spop $a
	call [$a],set
	push $5
	spushs
	push iR
	push iG
	push iB
	spop $a
	call [$a],createtxt
	push $5
	spushs
	push $2
	push $3
	spop $a
	call [$a],setpos
	push iSize
	popax
	add $3,$a
	pop $3
	push $5
	spushs
	spop $a
	call [$a],show
	push $5
	spushs
	spop $a
	call [$a],getw
	push $6
	cmpja
	cmp0
	je l2872
	push $5
	spushs
	spop $a
	call [$a],getw
	pop $6
l2872:
	push $5
	call grtxt2,add
	jmp l2869
l2868:
	call txt0,getpx
	push iSize
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call txt0,getpy
	push iSize
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push $6
	push iSize
	pop $b
	popax
	add $a,$b
	push iSize
	push $7
	push 1
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	mul $a,$b
	push ibR
	push ibG
	push ibB
	push ibA
	call imgtxt,setbkg
	push ibw
	push ibrr
	push ibrg
	push ibrb
	push ibra
	call imgtxt,setborders
	call imgtxt,show
	push _sanim
	push "null"
	cmpjne
	cmp0
	je l2874
	push _sanim
	spushs
	push 0
	spop $a
	call [$a],thisfinish
	push _sanim
	spushs
	push _sbase
	push 0
	push 0
	push 0
	push "null"
	push "null"
	push 0
	push "null"
	push "null"
	push $4
	spop $a
	call [$a],playspec
l2874:
	end method
	method stop
	push 0
	pop bplaying
	call grtxt2,hide
	call imgtxt,hide
	push _sanim
	push "null"
	cmpjne
	cmp0
	je l2876
	push _sanim
	spushs
	push 1
	spop $a
	call [$a],thisfinish
	push _sanim
	spushs
	push "stand"
	cthis getdir
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],play
l2876:
	end method
	end class

	class classbgplan
	parent gmobjvec
	method init
	clparent gmobjvec,init
	new real,rpx
	new real,rpy
	new real,scalex
	new real,scaley
	new int,_ix
	new int,_iy
	end method
	method setscale
	localreal $1
	localreal $2
	pop $2
	pop $1
	push $1
	push $2
	pop scaley
	pop scalex
	end method
	method move
	localreal $1
	localreal $2
	pop $2
	pop $1
	push $1
	popax
	add rpx,$a
	pop rpx
	push $2
	popax
	add rpy,$a
	pop rpy
	localint $3
	push rpx
	pop $3
	localint $4
	push rpy
	pop $4
	push $3
	popax
	sub rpx,$a
	pop rpx
	push $4
	popax
	sub rpy,$a
	pop rpy
	push $3
	cmp0
	jne l2879
	push $4
	jmp l2880
l2878:
	push 0
	jmp l2880
l2879:
	push 1
l2880:
	cmp0
	je l2881
	push $3
	popax
	add _ix,$a
	pop _ix
	push $4
	popax
	add _iy,$a
	pop _iy
	push $3
	push $4
	clparent gmobjvec,move
l2881:
	end method
	method movebgr
	localreal $1
	localreal $2
	pop $2
	pop $1
	push scalex
	push $1
	pop $b
	popax
	mul $a,$b
	push scaley
	push $2
	pop $b
	popax
	mul $a,$b
	cthis move
	end method
	method getpx
	push _ix
	end method
	method getpy
	push _iy
	end method
	end class

	class classgrplans
	parent gmobjvec
	method init
	clparent gmobjvec,init
	new real,_rxp
	new real,_ryp
	end method
	method move
	localreal $1
	localreal $2
	pop $2
	pop $1
	push $1
	popax
	add _rxp,$a
	pop _rxp
	push $2
	popax
	add _ryp,$a
	pop _ryp
	push "movebgr"
	push $1
	push $2
	cthis eval2
	end method
	method getposx
	push _rxp
	ret
	end method
	method getposy
	push _ryp
	ret
	end method
	method shift
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	popax
	add _rxp,$a
	pop _rxp
	push $2
	popax
	add _ryp,$a
	pop _ryp
	push "move"
	push $1
	push $2
	cthis eval2
	end method
	end class

	class CameraPos
	method init
	localreal $1
	localreal $2
	pop $2
	pop $1
	new real,_x
	new real,_y
	push $1
	push $2
	cthis setpos
	end method
	method setpos
	localreal $1
	localreal $2
	pop $2
	pop $1
	push $1
	pop _x
	push $2
	pop _y
	end method
	method getposx
	push _x
	end method
	method getposy
	push _y
	end method
	end class

	class classadvcamera
	method init
	new classgrplans,grbgrs
	new string,sancamera
	push "null"
	pop sancamera
	new string,smsmvfun
	push "null"
	pop smsmvfun
	new real,_rxmod
	new real,_rymod
	push 0.05
	push 0.05
	pop _rymod
	pop _rxmod
	new real,rleft
	new real,rtop
	new real,rright
	new real,rbottom
	push 0.0
	push 0.0
	push igmappw
	push 1
	pop $b
	popax
	sub $a,$b
	push igmapph
	push 1
	pop $b
	popax
	sub $a,$b
	pop rbottom
	pop rright
	pop rtop
	pop rleft
	new int,icamx
	new int,icamy
	push igmappw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push igmapph
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop icamy
	pop icamx
	new real,rborx
	new real,rbory
	push igmappw
	push 1
	pop $b
	popax
	sub $a,$b
	push igmapph
	push 1
	pop $b
	popax
	sub $a,$b
	pop rbory
	pop rborx
	new real,_lastx
	push 0
	pop _lastx
	new real,_lasty
	push 0
	pop _lasty
	new string,_sfunxedge
	push "null"
	pop _sfunxedge
	new string,_sfunyedge
	push "null"
	pop _sfunyedge
	push 0
	push 0
	new CameraPos,_campos
	new timer,timcamera
	push 1
	call timcamera,settick
	push 1
	call timcamera,setcycle
	push "onfinish"
	push "_camerafin"
	call timcamera,addmethod
	end method
	method _camerafin
	cthis checkcamera
	cthis play
	end method
	method setscreen
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	pop rleft
	push $2
	pop rtop
	push $3
	pop rright
	push $4
	pop rbottom
	push $3
	pop rborx
	push $4
	pop rbory
	push $1
	pop _lastx
	push $2
	pop _lasty
	push $1
	push $3
	pop $b
	popax
	add $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop icamx
	push $2
	push $4
	pop $b
	popax
	add $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop icamy
	end method
	method remove
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l2882:
	push $2
	call grbgrs,size
	cmpjl
	cmp0
	je l2883
	jmp l2885
l2884:
	add $2,1
	pop $2
	jmp l2882
l2885:
	push $2
	call grbgrs,get
	spushs
	push $1
	spop $a
	call [$a],remove
	jmp l2884
l2883:
	end method
	method funxedge
	localstring $1
	pop $1
	push $1
	pop _sfunxedge
	end method
	method funyedge
	localstring $1
	pop $1
	push $1
	pop _sfunyedge
	end method
	method setcenter
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	pop icamy
	pop icamx
	end method
	method setborders
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push 1
	pop $b
	popax
	sub $a,$b
	push $2
	push 1
	pop $b
	popax
	sub $a,$b
	pop rbottom
	pop rright
	end method
	method countcenter
	push rleft
	push rright
	push rleft
	pop $b
	popax
	sub $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	push rtop
	push rbottom
	push rtop
	pop $b
	popax
	sub $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	cthis setcenter
	end method
	method getposx
	call grbgrs,getposx
	ret
	end method
	method getposy
	call grbgrs,getposy
	ret
	end method
	method setmetonmsmove
	localstring $1
	pop $1
	push $1
	pop smsmvfun
	end method
	method start
	call timcamera,play
	end method
	method stop
	push 0
	call timcamera,stop
	end method
	method setactor
	localstring $1
	pop $1
	push $1
	pop sancamera
	end method
	method setcampos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call _campos,setpos
	push "_campos"
	cthis setactor
	end method
	method isactor
	localstring $1
	pop $1
	push $1
	push sancamera
	cmpje
	ret
	end method
	method getactor
	push sancamera
	ret
	end method
	method scalemodifiers
	localreal $1
	localreal $2
	pop $2
	pop $1
	push $1
	push $2
	pop _rymod
	pop _rxmod
	end method
	method newbgr
	localstring $1
	localreal $2
	localreal $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new classbgplan,[$e]
	push $1
	push $2
	push $3
	cthis addbgr
	end method
	method addbgr
	localstring $1
	localreal $2
	localreal $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],setscale
	push $1
	call grbgrs,add
	end method
	method findinbgr
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l2886:
	push $2
	call grbgrs,size
	cmpjl
	cmp0
	je l2887
	jmp l2889
l2888:
	add $2,1
	pop $2
	jmp l2886
l2889:
	push $2
	call grbgrs,get
	spushs
	push $1
	spop $a
	call [$a],contains
	cmp0
	je l2891
	push $2
	call grbgrs,get
	ret
l2891:
	jmp l2888
l2887:
	push "null"
	end method
	method removefrombgr
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l2892:
	push $2
	call grbgrs,size
	cmpjl
	cmp0
	je l2893
	jmp l2895
l2894:
	add $2,1
	pop $2
	jmp l2892
l2895:
	push $2
	call grbgrs,get
	spushs
	push $1
	spop $a
	call [$a],remove
	jmp l2894
l2893:
	end method
	method addtobgr
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	push $2
	spop $a
	call [$a],add
	end method
	method setscene
	push 1.0
	push 1.0
	cthis _setscene
	end method
	method _setscene
	localreal $1
	localreal $2
	pop $2
	pop $1
	push sancamera
	push "null"
	cmpje
	cmp0
	je l2897
	ret
l2897:
	localreal $3
	push icamx
	push sancamera
	spushs
	spop $a
	call [$a],getposx
	pop $b
	popax
	sub $a,$b
	pop $3
	push $1
	popax
	mul $3,$a
	pop $3
	localreal $4
	push icamy
	push sancamera
	spushs
	spop $a
	call [$a],getposy
	pop $b
	popax
	sub $a,$b
	pop $4
	push $2
	popax
	mul $4,$a
	pop $4
	localreal $5
	cthis getposx
	push $3
	pop $b
	popax
	add $a,$b
	pop $5
	localreal $6
	cthis getposy
	push $4
	pop $b
	popax
	add $a,$b
	pop $6
	push $5
	push rleft
	cmpjae
	cmp0
	je l2899
	cthis getposx
	popax
	sub 0,$a
	pop $3
	jmp l2898
l2899:
	push $5
	push rright
	pop $b
	popax
	add $a,$b
	push rborx
	cmpjle
	cmp0
	je l2901
	push rborx
	cthis getposx
	push rright
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	sub $a,$b
	pop $3
l2901:
l2898:
	push $6
	push rtop
	cmpjae
	cmp0
	je l2903
	cthis getposy
	popax
	sub 0,$a
	pop $4
	jmp l2902
l2903:
	push $6
	push rbottom
	pop $b
	popax
	add $a,$b
	push rbory
	cmpjle
	cmp0
	je l2905
	push rbory
	cthis getposy
	push rbottom
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	sub $a,$b
	pop $4
l2905:
l2902:
	push $3
	cmp0
	jne l2908
	push $4
	jmp l2909
l2907:
	push 0
	jmp l2909
l2908:
	push 1
l2909:
	cmp0
	je l2910
	push $3
	push $4
	call grbgrs,move
	push smsmvfun
	push "null"
	cmpjne
	cmp0
	je l2912
	push smsmvfun
	spushs
	spop $d
	cthis [$d]
l2912:
l2910:
	push $3
	push 0
	cmpje
	cmp0
	je l2914
	push _lastx
	push 0
	cmpjne
	cmp0
	je l2914
	push _sfunxedge
	push "null"
	cmpjne
	jmp l2916
l2914:
	push 0
	jmp l2916
l2915:
	push 1
l2916:
	cmp0
	je l2917
	push _sfunxedge
	spushs
	spop $d
	cthis [$d]
l2917:
	push $4
	push 0
	cmpje
	cmp0
	je l2919
	push _lasty
	push 0
	cmpjne
	cmp0
	je l2919
	push _sfunyedge
	push "null"
	cmpjne
	jmp l2921
l2919:
	push 0
	jmp l2921
l2920:
	push 1
l2921:
	cmp0
	je l2922
	push _sfunyedge
	spushs
	spop $d
	cthis [$d]
l2922:
	push $3
	pop _lastx
	push $4
	pop _lasty
	end method
	method checkcamera
	push sancamera
	push "null"
	cmpje
	cmp0
	je l2924
	ret
l2924:
	push _rxmod
	push _rymod
	cthis _setscene
	end method
	method moveplans
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	popax
	add rleft,$a
	pop rleft
	push $1
	popax
	add rright,$a
	pop rright
	push $2
	popax
	add rtop,$a
	pop rtop
	push $2
	popax
	add rbottom,$a
	pop rbottom
	push $1
	popax
	add rborx,$a
	pop rborx
	push $2
	popax
	add rbory,$a
	pop rbory
	push $1
	popax
	add icamx,$a
	pop icamx
	push $2
	popax
	add icamy,$a
	pop icamy
	push $1
	push $2
	call grbgrs,shift
	end method
	end class

	class classadvbut
	method init
	localstring $1
	pop $1
	push $1
	push "but"
	cthis setadvbutmets
	end method
	method setasbutton
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push "but"
	clparent classadvbut,setasbutton2
	end method
	method setasbutton2
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	push "setadvbutmets"
	push "setadvbutmets"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setbuttyp"
	push "setbuttyp"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "updatemousecursor"
	push "updatemousecursor"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "refreshmousecursor"
	push "refreshmousecursor"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "showmousecursor"
	push "showmousecursor"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setadvbutpos"
	push "setadvbutpos"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setbutdir"
	push "setbutdir"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setbutbase1"
	push "setbutbase1"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setbutbase2"
	push "setbutbase2"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setbutbase"
	push "setbutbase"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "getbase1"
	push "getbase1"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "getbase2"
	push "getbase2"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "getbutdir"
	push "getbutdir"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "getbutname"
	push "getbutname"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "gettyp"
	push "gettyp"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "reachable"
	push "reachable"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setreach"
	push "setreach"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "getgox"
	push "getgox"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "getgoy"
	push "getgoy"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "enable"
	push "enable"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "disable"
	push "disable"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "enabled"
	push "enabled"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setonce"
	push "setonce"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "checkonce"
	push "checkonce"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setpocket"
	push "classadvbut0"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "getpocket"
	push "classadvbut1"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "moveon"
	push "moveon"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "moveoff"
	push "moveoff"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "clickon"
	push "clickon"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "butlrel"
	push "butlrel"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "becomebut"
	push "classadvbut2"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "becomeitem"
	push "classadvbut3"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "becomedoors"
	push "classadvbut4"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "copyposfrompt"
	push "classadvbut5"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "butisin"
	push "classadvbut6"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "ismask"
	push "classadvbut7"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setbmask"
	push "classadvbut8"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "preparetosort"
	push "preparetosort"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],setadvbutmets
	push $1
	spushs
	push 1
	spop $a
	call [$a],setreach
	end method
	method classadvbut0
	localstring $1
	pop $1
	push $1
	pop _spocket
	end method
	method classadvbut1
	push _spocket
	end method
	method classadvbut2
	cthis getname
	clparent classadvbut,setasbut
	end method
	method classadvbut3
	cthis getname
	clparent classadvbut,setasitem
	end method
	method classadvbut4
	cthis getname
	clparent classadvbut,setasdoors
	end method
	method classadvbut5
	localstring $1
	localint $2
	pop $2
	pop $1
	localint $3
	push $1
	spushs
	push $2
	spop $a
	call [$a],getbyname
	pop $3
	push $1
	spushs
	push $3
	spop $a
	call [$a],getxver
	push $1
	spushs
	spop $a
	call [$a],getposx
	pop $b
	popax
	sub $a,$b
	push $1
	spushs
	push $3
	spop $a
	call [$a],getyver
	push $1
	spushs
	spop $a
	call [$a],getposy
	pop $b
	popax
	sub $a,$b
	cthis setadvbutpos
	end method
	method classadvbut6
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push balpha
	push 1
	popax
	sub 0,$a
	cmpje
	cmp0
	je l2926
	push $1
	push $2
	push $3
	push $4
	cthis isin
	jmp l2925
l2926:
	push $1
	push $2
	push $3
	push balpha
	cthis isin
l2925:
	end method
	method classadvbut7
	push bismask
	end method
	method classadvbut8
	localint $1
	pop $1
	push $1
	pop bismask
	end method
	method setonce
	localstring $1
	pop $1
	push $1
	pop _sonce
	end method
	method checkonce
	push _sonce
	push "null"
	cmpjne
	cmp0
	je l2928
	push _sonce
	call clsave,bis
	neg
	jmp l2930
l2928:
	push 0
	jmp l2930
l2929:
	push 1
l2930:
	cmp0
	je l2931
	push _sonce
	call clsave,bset
	cthis disable
l2931:
	end method
	method setadvbutmets
	localstring $1
	localstring $2
	pop $2
	pop $1
	new string,_styp
	push $2
	pop _styp
	new string,_sname
	push $1
	pop _sname
	new int,igox
	cthis getposx
	pop igox
	new int,igoy
	cthis getposy
	pop igoy
	new string,sgox
	push "null"
	pop sgox
	new string,sgoy
	push "null"
	pop sgoy
	new string,_sbutdir
	push "auto"
	pop _sbutdir
	new string,_sbase1
	push "look:"
	push 1
	call modadv,get
	pop _sbase1
	new string,_sbase2
	push "look:"
	push 2
	call modadv,get
	pop _sbase2
	new int,breachable
	push 0
	pop breachable
	new string,_spocket
	push $1
	pop _spocket
	new string,_sonce
	push "null"
	pop _sonce
	new int,bismask
	push 0
	pop bismask
	push A
	push "baseuse1"
	push _sbase1
	push "baseuse2"
	push _sbase2
	push "hideontake"
	push 1
	push "smousecursor"
	push "active"
	push "balpha"
	push 1
	popax
	sub 0,$a
	push "bautohint"
	push 1
	push "bshownonvis"
	push 0
	cthis vars2
	cthis updatemousecursor
	cthis enable
	end method
	method setasmask
	localstring $1
	pop $1
	push $1
	spushs
	push "butisin"
	push "classadvbut9"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push 1
	spop $a
	call [$a],setbmask
	end method
	method classadvbut9
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push balpha
	push 1
	popax
	sub 0,$a
	cmpje
	cmp0
	je l2933
	push $1
	push $2
	push 0
	push $4
	cthis isin
	jmp l2932
l2933:
	push $1
	push $2
	push 0
	push balpha
	cthis isin
l2932:
	end method
	method enable
	push AdventureGame
	cmp0
	je l2935
	cthis getname
	call grbuts,addonce
l2935:
	end method
	method disable
	push AdventureGame
	cmp0
	je l2937
	cthis getname
	call grbuts,remove
l2937:
	end method
	method enabled
	push AdventureGame
	cmp0
	je l2939
	cthis getname
	call grbuts,contains
	jmp l2938
l2939:
	push 0
l2938:
	end method
	method setbutbase
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	cthis setbutbase1
	push $2
	cthis setbutbase2
	end method
	method setreach
	localint $1
	pop $1
	push $1
	pop breachable
	end method
	method reachable
	push breachable
	end method
	method setbuttyp
	localstring $1
	pop $1
	push $1
	pop _styp
	end method
	method updatemousecursor
	push _styp
	spushs
	push "but"
	cmpst
	jne l2941
	spop $a
	push "active"
	jmp l2940
l2941:
	push "doors"
	cmpst
	jne l2942
	spop $a
	push "exit"
	jmp l2940
l2942:
	push "item"
	cmpst
	jne l2943
	spop $a
	push "take"
	jmp l2940
l2943:
	spop $a
	push smousecursor
l2940:
	pop smousecursor
	end method
	method refreshmousecursor
	localstring $1
	pop $1
	push $1
	pop smousecursor
	cthis updatemousecursor
	push _slastms
	cthis getname
	cmpje
	cmp0
	je l2945
	push smousecursor
	call advmouse,set
l2945:
	end method
	method showmousecursor
	push smousecursor
	call advmouse,set
	end method
	method butlrel
	end method
	method clickon
	cthis reachable
	cmp0
	je l2947
	cthis getname
	call clwalkq,visit
l2947:
	end method
	method moveon
	push "butmoveon"
	cthis hasaddedmet
	cmp0
	je l2949
	cthis butmoveon
	jmp l2948
l2949:
	push sItemMover
	push "null"
	cmpje
	cmp0
	je l2951
	cthis showmousecursor
	jmp l2950
l2951:
	push sItemMover
	spushs
	cthis getname
	push "setactive"
	spop $a
	call [$a],checkusebutton
l2950:
l2948:
	end method
	method moveoff
	push "butmoveoff"
	cthis hasaddedmet
	cmp0
	je l2953
	cthis butmoveoff
	jmp l2952
l2953:
	call advmouse,setstd
l2952:
	end method
	method setadvbutpos
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	pop sgox
	push $2
	pop sgoy
	push $1
	pop igox
	push $2
	pop igoy
	end method
	method setbutdir
	localstring $1
	pop $1
	push $1
	pop _sbutdir
	end method
	method setbutbase1
	localstring $1
	pop $1
	push $1
	pop _sbase1
	push $1
	pop baseuse1
	end method
	method setbutbase2
	localstring $1
	pop $1
	push $1
	pop _sbase2
	push $1
	pop baseuse2
	end method
	method getbase1
	push _sbase1
	end method
	method getbase2
	push _sbase2
	end method
	method getbutdir
	push _sbutdir
	end method
	method getbutname
	push _sname
	end method
	method gettyp
	push _styp
	end method
	method getgox
	push sgox
	push "-hero"
	cmpje
	cmp0
	je l2955
	push sgoy
	push "-main"
	cmpje
	cmp0
	je l2957
	push smainhero
	spushs
	spop $a
	call [$a],getposx
	jmp l2956
l2957:
	push sgoy
	spushs
	spop $a
	call [$a],getposx
l2956:
	jmp l2954
l2955:
	push sgox
	push "-but"
	cmpje
	cmp0
	je l2959
	push sgoy
	spushs
	spop $a
	call [$a],getcx
	jmp l2958
l2959:
	push igox
	call clcamera,getposx
	pop $b
	popax
	add $a,$b
l2958:
l2954:
	end method
	method getgoy
	push sgox
	push "-hero"
	cmpje
	cmp0
	je l2961
	push sgoy
	push "-main"
	cmpje
	cmp0
	je l2963
	push smainhero
	spushs
	spop $a
	call [$a],getposy
	jmp l2962
l2963:
	push sgoy
	spushs
	spop $a
	call [$a],getposy
l2962:
	jmp l2960
l2961:
	push sgox
	push "-but"
	cmpje
	cmp0
	je l2965
	push sgoy
	spushs
	spop $a
	call [$a],getey
	jmp l2964
l2965:
	push igoy
	call clcamera,getposy
	pop $b
	popax
	add $a,$b
l2964:
l2960:
	end method
	method getposx
	push 0
	end method
	method getposy
	push 0
	end method
	method getz
	push 0
	end method
	method butisin
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push 0
	end method
	method preparetosort
	localint $1
	localint $2
	pop $2
	pop $1
	end method
	method endsort
	end method
	method setasbut
	localstring $1
	pop $1
	push $1
	spushs
	push "active"
	spop $a
	call [$a],smousecursor=
	end method
	method setasitem
	localstring $1
	pop $1
	push $1
	spushs
	push "take:"
	push 1
	call modadv,get
	push "take:"
	push 2
	call modadv,get
	spop $a
	call [$a],setbutbase
	push $1
	spushs
	push "take"
	spop $a
	call [$a],smousecursor=
	end method
	method setasdoors
	localstring $1
	pop $1
	push $1
	spushs
	push "doors:"
	push 1
	call modadv,get
	push "doors:"
	push 2
	call modadv,get
	spop $a
	call [$a],setbutbase
	push $1
	spushs
	push "exit"
	spop $a
	call [$a],smousecursor=
	push $1
	spushs
	push 0
	spop $a
	call [$a],bautohint=
	end method
	end class

	class classadvitem
	parent classadvbut
	method init
	localstring $1
	pop $1
	push $1
	push "item"
	clparent classadvbut,init
	push "take:"
	push 1
	call modadv,get
	push "take:"
	push 2
	call modadv,get
	cthis setbutbase
	end method
	method setasbutton
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push "item"
	clparent classadvbut,setasbutton2
	push $1
	spushs
	push "take:"
	push 1
	call modadv,get
	push "take:"
	push 2
	call modadv,get
	spop $a
	call [$a],setbutbase
	end method
	end class

	class classadvdoors
	parent classadvbut
	method init
	localstring $1
	pop $1
	push $1
	push "doors"
	clparent classadvbut,init
	push "doors:"
	push 1
	call modadv,get
	push "doors:"
	push 2
	call modadv,get
	cthis setbutbase
	end method
	method setasbutton
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push "doors"
	clparent classadvbut,setasbutton2
	push $1
	spushs
	push "active"
	spop $a
	call [$a],smousecursor=
	push $1
	spushs
	push "doors:"
	push 1
	call modadv,get
	push "doors:"
	push 2
	call modadv,get
	spop $a
	call [$a],setbutbase
	end method
	end class

	class classbehhero
	method init
	new string,_snextbeh
	push "null"
	pop _snextbeh
	new string,_stdfinfun
	push "null"
	pop _stdfinfun
	new string,_stdfinobj
	push "null"
	pop _stdfinobj
	new string,_stype
	push "null"
	pop _stype
	new string,_scaller
	new int,bblock
	push 1
	pop bblock
	new int,bparal
	push 0
	pop bparal
	push A
	push "bskip"
	push 0
	cthis vars2
	end method
	method sneededbeh
	push "vecneed"
	cthis hasvar
	cmp0
	je l2967
	call vecneed,first
	push "nothing"
	cmpje
	cmp0
	je l2969
	push "nothing"
	jmp l2968
l2969:
	localint $1
	push "GAME_neededbeh"
	call clsave,get
	call vecneed,find
	pop $1
	push $1
	push 0
	cmpjae
	cmp0
	je l2971
	push $1
	call vecneed,get
	jmp l2970
l2971:
	push "null"
l2970:
l2968:
	jmp l2966
l2967:
	push "null"
l2966:
	end method
	method sneededbeh=
	localstring $1
	pop $1
	push "vecneed"
	cthis hasvar
	neg
	cmp0
	je l2973
	new vector,vecneed
	push "string"
	call vecneed,type
l2973:
	push $1
	call vecneed,add
	end method
	method skip
	push bskip
	cmp0
	je l2975
	cthis gettyp
	spushs
	push "sndplay"
	cmpst
	jne l2977
	spop $a
	call sndp,getfullname
	cthis cisactsnd
	cmp0
	je l2979
	push 0
	cthis csplaystop
	jmp l2978
l2979:
	push 0
	call sndp,stop
l2978:
	cthis behreturn
	jmp l2976
l2977:
	push "talk"
	cmpst
	jne l2980
	spop $a
	push _stalkpref
	push _san
	pop $b
	popax
	add $a,$b
	spushs
	push 0
	spop $a
	call [$a],stop
	push _san
	cthis advanstand
	cthis behreturn
	jmp l2976
l2980:
	spop $a
l2976:
l2975:
	end method
	method behreturn
	push _scaller
	cthis finishbeh
	end method
	method gonext
	localstring $1
	pop $1
	push "behgonext_"
	push _stype
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	localint $2
	push 0
	pop $2
	push bparal
	cmp0
	je l2982
	push _sstarter
	spushs
	cthis getname
	spop $a
	call [$a],behret
	pop $2
	jmp l2981
l2982:
	push _sstarter
	spushs
	spop $a
	call [$a],isenumer
	cmp0
	je l2984
	push _sstarter
	cthis getname
	cmpjne
	jmp l2986
l2984:
	push 0
	jmp l2986
l2985:
	push 1
l2986:
	cmp0
	je l2987
	push 1
	pop $2
	jmp l2983
l2987:
	push _snextbeh
	push "null"
	cmpjne
	cmp0
	je l2989
	cthis classbehhero_preeval
	push _snextbeh
	spushs
	push $1
	spop $a
	call [$a],eval
	cthis classbehhero_posteval
	jmp l2988
l2989:
	push 1
	pop $2
l2988:
l2983:
l2981:
	push $2
	cmp0
	je l2991
	push $1
	cthis finishbeh
l2991:
	end method
	method finishbeh
	localstring $1
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l2993
	push $1
	spushs
	spop $a
	call [$a],reteval
	jmp l2992
l2993:
	call modstnd,resume
	localstring $2
	cthis getactbeh
	pop $2
	push _sstarter
	spushs
	spop $a
	call [$a],callbehfin
	cthis getactbeh
	push $2
	cmpje
	cmp0
	je l2995
	push "null"
	cthis setactbeh
l2995:
l2992:
	end method
	method playfin
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	cthis setfinfun
	cthis advgetlock
	pop _bmslock
	push bblock
	cmp0
	je l2997
	push bblock
	cthis advmssetlock
l2997:
	call modstnd,pause
	push "null"
	cthis eval
	end method
	method eval
	localstring $1
	pop $1
	cthis getname
	cthis setactbeh
	push $1
	pop _scaller
	cthis _eval
	end method
	method rewind
	push "_rew"
	cthis hasaddedmet
	cmp0
	je l2999
	cthis _rew
l2999:
	end method
	method reteval
	push _scaller
	cthis gonext
	end method
	method callbehfin
	push bblock
	cmp0
	je l3001
	push _bmslock
	cthis advmssetlock
l3001:
	push _stdfinobj
	push _stdfinfun
	cthis callfun
	push "null"
	pop _stdfinobj
	push "null"
	pop _stdfinfun
	cthis getname
	spushs
	push _sbeh
	spop $a
	call $a,strsubbs
	push "_FINISH"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method _evalenter
	cthis getname
	push "reteval"
	call ccs,obenter
	end method
	method _evalclose
	cthis getname
	push "reteval"
	call ccs,obclose
	end method
	method _evalmusic
	call vmus,getfullname
	push 0
	call mus,playvec
	cthis reteval
	end method
	method _evalreturn
	cthis behreturn
	end method
	method _evalscript
	push _id
	push 0
	cmpjae
	cmp0
	je l3003
	localint $1
	push _id
	pop $1
	localdef $2
	push _sdb
	spushs
	push _row
	push $1
	spop $a
	call [$a],get
	pop $2
l3004:
	push $2
	push ")"
	cmpjne
	cmp0
	je l3005
	push _sscr
	spushs
	push $1
	push _id
	pop $b
	popax
	sub $a,$b
	push $2
	spop $a
	call [$a],ARG=
	add $1,1
	pop $1
	push _sdb
	spushs
	push _row
	push $1
	spop $a
	call [$a],get
	pop $2
	jmp l3004
l3005:
l3003:
	push _sscr
	spushs
	push _sfun2
	spop $a
	call [$a],call
	cthis reteval
	end method
	method _evalmet
	push _icol
	push 0
	cmpjae
	cmp0
	je l3007
	localint $1
	push _icol
	pop $1
	localdef $2
	push _sdb
	spushs
	push _irow
	push $1
	spop $a
	call [$a],get
	pop $2
l3008:
	push $2
	push ")"
	cmpjne
	cmp0
	je l3009
	push $2
	add $1,1
	pop $1
	push _sdb
	spushs
	push _irow
	push $1
	spop $a
	call [$a],get
	pop $2
	jmp l3008
l3009:
l3007:
	push _stypecall
	push "::"
	cmpje
	cmp0
	je l3011
	push _sob2
	spushs
	push _sfun2
	spushs
	spop $d
	spop $a
	 clparent [$a],[$d]
	jmp l3010
l3011:
	push _sob2
	push _sfun2
	cthis callfun
l3010:
	cthis reteval
	end method
	method _evalsave
	push 0
	push 1
	call ssavval,getb
	push "@"
	cmpje
	cmp0
	je l3013
	localint $1
	push 1
	call ssavval,strsubb
	pop $1
	push ssavvar
	push $1
	push ssavvar
	call clsave,get
	pop $b
	popax
	add $a,$b
	call clsave,set
	jmp l3012
l3013:
	push ssavvar
	push ssavval
	call clsave,set
l3012:
	cthis reteval
	end method
	method _evalgame
	localstring $1
	call gameapi,getgamename
	pop $1
	push _styp
	spushs
	push "-def"
	cmpst
	jne l3015
	spop $a
	push $1
	spushs
	push _spath
	push _sgame
	spop $a
	call [$a],playfromscript
	jmp l3014
l3015:
	push "-adv"
	cmpst
	jne l3016
	spop $a
	push $1
	spushs
	push _sgame
	push _spath
	spop $a
	call [$a],playnewgamepath
	jmp l3014
l3016:
	spop $a
	push $1
	spushs
	push _sgame
	spop $a
	call [$a],playnewgame
l3014:
	cthis reteval
	end method
	method _evalread
	push _sread
	push _ix
	push _iy
	push _sdir
	call clhilarytxt,herosaydir
	end method
	method _rewread
	call clhilarytxt,stop
	cthis reteval
	end method
	method _evalwait
	call timwait,play
	end method
	method _evaltalk
	localstring $1
	push _spathpref
	push _san
	pop $b
	popax
	add $a,$b
	pop $1
	localstring $2
	push _stalkpref
	push _san
	pop $b
	popax
	add $a,$b
	pop $2
	push $1
	call engine,varexist
	cmp0
	je l3018
	push $2
	spushs
	spop $a
	call [$a],getdir
	push $2
	spushs
	push _sdir
	spop $a
	call [$a],getpropdir
	cmpjne
	jmp l3020
l3018:
	push 0
	jmp l3020
l3019:
	push 1
l3020:
	cmp0
	je l3021
	push $1
	spushs
	push _sdir
	cthis getname
	push "_evaltalk"
	spop $a
	call [$a],heroturn
	ret
l3021:
	push _san
	cthis advanstand
	push $2
	spushs
	call modadv,gettalktype
	spop $a
	call [$a],settalktype
	push $2
	spushs
	push __swav
	spop $a
	call [$a],setsnd
	push $2
	spushs
	push __sbase
	spop $a
	call [$a],checkamounts
	push $2
	spushs
	push isort
	push bstt
	push bstp
	cthis getname
	push "reteval"
	push $2
	spushs
	push _sdir
	spop $a
	call [$a],getpropdir
	spop $a
	call [$a],herosaydir
	end method
	method _rewtalk
	push _stalkpref
	push _san
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	spop $a
	call [$a],stop
	end method
	method _evalsetpos
	localint $1
	localint $2
	localstring $3
	push _spathpref
	push _san
	pop $b
	popax
	add $a,$b
	pop $3
	push _idestx
	push "-id"
	cmpje
	cmp0
	je l3023
	push $3
	spushs
	push _idesty
	spop $a
	call [$a],getbyname
	pop $2
	push $3
	spushs
	push $2
	spop $a
	call [$a],getxver
	pop $1
	push $3
	spushs
	push $2
	spop $a
	call [$a],getyver
	pop $2
	push _san
	spushs
	push $1
	push $2
	spop $a
	call [$a],setpos
	jmp l3022
l3023:
	push _idestx
	pop $1
	push _idesty
	pop $2
	push _san
	spushs
	push $1
	call clcamera,getposx
	pop $b
	popax
	add $a,$b
	push $2
	call clcamera,getposy
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
l3022:
	push _bssc
	cmp0
	je l3025
	call clcamera,setscene
l3025:
	push $3
	call engine,varexist
	cmp0
	je l3027
	push $3
	spushs
	spop $a
	call [$a],scalean
l3027:
	push _san
	spushs
	push _san
	spushs
	spop $a
	call [$a],getposy
	spop $a
	call [$a],setz
	push _sdir
	push "auto"
	cmpjne
	cmp0
	je l3029
	push _san
	spushs
	push _sdir
	spop $a
	call [$a],setdir
l3029:
	cthis reteval
	end method
	method _evalwalk
	localint $1
	localint $2
	push _idestx
	push "-id"
	cmpje
	cmp0
	je l3031
	push _sptf
	spushs
	push _idesty
	spop $a
	call [$a],getbyname
	pop $2
	push _sptf
	spushs
	push $2
	spop $a
	call [$a],getxver
	push _sptf
	spushs
	spop $a
	call [$a],getposx
	pop $b
	popax
	sub $a,$b
	pop $1
	push _sptf
	spushs
	push $2
	spop $a
	call [$a],getyver
	push _sptf
	spushs
	spop $a
	call [$a],getposy
	pop $b
	popax
	sub $a,$b
	pop $2
	jmp l3030
l3031:
	push _idestx
	push "-hero"
	cmpje
	cmp0
	je l3033
	push _idesty
	spushs
	spop $a
	call [$a],getposx
	pop $1
	push _idesty
	spushs
	spop $a
	call [$a],getposy
	pop $2
	localint $3
	push 1
	pop $3
	push _sptf
	spushs
	push $1
	push $2
	spop $a
	call [$a],ptfgoto
	push 0
	cmpjae
	cmp0
	je l3035
	push _sptf
	spushs
	push 1
	spop $a
	call [$a],getgover
	pop $2
	push $2
	push 0
	cmpjae
	cmp0
	je l3037
	push _sptf
	spushs
	push $2
	spop $a
	call [$a],getxver
	pop $1
	push _sptf
	spushs
	push $2
	spop $a
	call [$a],getyver
	pop $2
	push 0
	pop $3
l3037:
l3035:
	push _sptf
	spushs
	push 0
	spop $a
	call [$a],stop
	push $3
	cmp0
	je l3039
	localdef $4
	push _spathpref
	call _sptf,strsubbs
	pop $4
	push $4
	spushs
	spop $a
	call [$a],getposx
	pop $1
	push $4
	spushs
	spop $a
	call [$a],getposy
	pop $2
l3039:
	jmp l3032
l3033:
	push _idestx
	pop $1
	push _idesty
	pop $2
l3032:
l3030:
	push _sptf
	spushs
	push $1
	call clcamera,getposx
	pop $b
	popax
	add $a,$b
	push $2
	call clcamera,getposy
	pop $b
	popax
	add $a,$b
	cthis getname
	push "reteval"
	spop $a
	call [$a],herowalkto2
	end method
	method _evalturn
	localstring $1
	push _sdir
	pop $1
	push A
	push "uu"
	push "ru"
	push "rr"
	push "rd"
	push "dd"
	push "ld"
	push "ll"
	push "lu"
	call $1,in
	neg
	cmp0
	je l3041
	localstring $2
	push _sptf
	spushs
	spop $a
	call [$a],getanim
	pop $2
	push _sptf
	spushs
	push $1
	spushs
	spop $a
	call [$a],getposx
	push $2
	spushs
	spop $a
	call [$a],getposx
	pop $b
	popax
	sub $a,$b
	push $1
	spushs
	spop $a
	call [$a],getposy
	push $2
	spushs
	spop $a
	call [$a],getposy
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],vecdir
	pop $1
l3041:
	push _sptf
	spushs
	push $1
	cthis getname
	push "reteval"
	spop $a
	call [$a],heroturn
	end method
	method _evalanorder
	push _san
	cthis advanstand
	push _sdb
	push _irow
	push _icol
	push _san
	cthis analizeaninstr
	popax
	cthis reteval
	end method
	method _evalanplay
	push _san
	spushs
	push "bthisfin"
	spop $a
	call [$a],hasvar
	neg
	cmp0
	je l3043
	push _san
	spushs
	spop $a
	call [$a],setasadvanima
l3043:
	push _san
	cthis advanstand
	push _san
	spushs
	push 1
	spop $a
	call [$a],thisfinish
	push _sact
	clparent StringChecker,isdigit
	cmp0
	je l3045
	push _san
	spushs
	push _sact
	spop $a
	call [$a],nameofaction
	pop _sact
l3045:
	push _san
	spushs
	push _sact
	cthis getname
	push "reteval"
	spop $a
	call [$a],playspec2
	end method
	method _evalanfin
	push _san
	spushs
	push _time
	cthis getname
	push "reteval"
	cthis fullname_callfun
	spop $a
	call [$a],anfadein
	end method
	method _evalanfout
	push _san
	spushs
	push _time
	cthis getname
	push "reteval"
	cthis fullname_callfun
	spop $a
	call [$a],anfadeout
	end method
	method _rewanplay
	end method
	method _evalsndbg
	push "irtxt"
	cthis hasvar
	cmp0
	je l3047
	push irtxt
	push igtxt
	push ibtxt
	call subtitle,setcolor
	call _sndbg,getfullname
	cthis cbsplay
	call subtitle,restorecolor
	jmp l3046
l3047:
	call _sndbg,getfullname
	cthis cbsplay
l3046:
	cthis reteval
	end method
	method _evalsndplay
	call engine,isaudio
	cmp0
	je l3049
	localint $1
	push igmlektor
	pop $1
	call sndp,file_loaded
	neg
	cmp0
	je l3051
	push 0
	pop igmlektor
l3051:
	push "irtxt"
	cthis hasvar
	cmp0
	je l3053
	push irtxt
	push igtxt
	push ibtxt
	call subtitle,setcolor
	call sndp,getfullname
	cthis cbsplay
	call subtitle,restorecolor
	jmp l3052
l3053:
	call sndp,getfullname
	cthis cbsplay
l3052:
	push $1
	pop igmlektor
	jmp l3048
l3049:
	cthis reteval
l3048:
	end method
	method _rewsndplay
	call sndp,getfullname
	cthis cisactsnd
	cmp0
	je l3055
	push 1
	cthis csplaystop
	jmp l3054
l3055:
	push 1
	call sndp,stop
l3054:
	end method
	method _evalcall
	localstring $1
	push scallobj
	pop $1
	push "$"
	call $1,contains
	cmp0
	je l3057
	push 1
	call $1,strsubb
	pop $1
	push $1
	call engine,varexist
	cmp0
	je l3059
	push $1
	popax
	mov $a,[$a]
	psax
	jmp l3058
l3059:
	push sscript
	spushs
	push $1
	spop $a
	call [$a],get
l3058:
	pop $1
	push $1
	push "null"
	cmpje
	cmp0
	je l3061
	cthis reteval
	ret
l3061:
l3057:
	push $1
	cthis behexist
	cmp0
	je l3063
	push $1
	cthis getbeh
	spushs
	cthis getname
	spop $a
	call [$a],eval
	jmp l3062
l3063:
	cthis reteval
l3062:
	end method
	method _evalnull
	cthis reteval
	end method
	method _evalstart
	localint $1
	localstring $2
	call vbif,free
	push bonce
	push "null"
	cmpjne
	cmp0
	je l3065
	push bonce
	call clsave,bis
	neg
	cmp0
	je l3067
	push bonce
	call clsave,bset
	jmp l3066
l3067:
	cthis behreturn
	ret
l3066:
l3065:
	push iisifsave
	push 0
	cmpje
	cmp0
	je l3069
	push sisifsave
	push sisifvar
	call clsave,is
	jmp l3071
l3069:
	push 0
	jmp l3071
l3070:
	push 1
l3071:
	cmp0
	jne l3073
	push iisifsave
	push 1
	cmpje
	cmp0
	je l3074
	push sisifsave
	push sisifvar
	call clsave,is
	neg
	jmp l3076
l3074:
	push 0
	jmp l3076
l3075:
	push 1
l3076:
	jmp l3077
l3072:
	push 0
	jmp l3077
l3073:
	push 1
l3077:
	cmp0
	je l3078
	cthis behreturn
	ret
l3078:
	push brand
	cmp0
	je l3080
	call vecbehs,size
	pop $1
	push $1
	push 0
	cmpja
	cmp0
	je l3082
	call $1,rand
	call vecbehs,get
	spushs
	push _scaller
	spop $a
	call [$a],eval
	jmp l3081
l3082:
	cthis reteval
l3081:
	jmp l3079
l3080:
	push bparal
	cmp0
	je l3084
	push "vecbehs"
	call vecbehs2,veccopy
	push 0
	pop $1
l3085:
	push $1
	call vecbehs,size
	cmpjl
	cmp0
	je l3086
	jmp l3088
l3087:
	add $1,1
	pop $1
	jmp l3085
l3088:
	push $1
	call vecbehs,get
	spushs
	push _scaller
	spop $a
	call [$a],eval
	jmp l3087
l3086:
	jmp l3083
l3084:
	push ienumer
	push 0
	cmpja
	cmp0
	je l3090
	cthis nextenum
	push 1
	pop $b
	popax
	sub $a,$b
	call vecbehs,get
	spushs
	push _scaller
	spop $a
	call [$a],eval
	jmp l3089
l3090:
	cthis reteval
l3089:
l3083:
l3079:
	end method
	method _ifst
	localint $1
	localint $2
	pop $2
	pop $1
	push ifst
	spushs
	push 1
	cmpst
	jne l3092
	spop $a
	push $1
	cmp0
	je l3093
	push $2
	jmp l3095
l3093:
	push 0
	jmp l3095
l3094:
	push 1
l3095:
	jmp l3091
l3092:
	push 2
	cmpst
	jne l3096
	spop $a
	push $1
	cmp0
	jne l3098
	push $2
	jmp l3099
l3097:
	push 0
	jmp l3099
l3098:
	push 1
l3099:
	jmp l3091
l3096:
	spop $a
	push $1
l3091:
	end method
	method _oper_check
	localstring $1
	pop $1
	push $1
	spushs
	push "|"
	cmpst
	jne l3101
	spop $a
	push 2
	jmp l3100
l3101:
	push "&"
	cmpst
	jne l3102
	spop $a
	push 1
	jmp l3100
l3102:
	spop $a
	push 0
l3100:
	end method
	method _ifcheck
	localint $1
	localint $2
	localstring $3
	localstring $4
	localint $5
	push istart
	pop $5
	push 0
	pop ifst
l3103:
	push $5
	push istop
	cmpjl
	cmp0
	je l3104
	push _db
	spushs
	push irow
	push $5
	spop $a
	call [$a],get
	pop $3
	push _db
	spushs
	push irow
	push $5
	spop $a
	call [$a],dbchecknext
	pop $4
	push $4
	spushs
	push "="
	cmpst
	je l3107
	push "!="
	cmpst
	je l3107
	push "<"
	cmpst
	je l3107
	push "<="
	cmpst
	je l3107
	push ">"
	cmpst
	je l3107
	push ">="
	cmpst
	je l3107
	jmp l3106
l3107:
	spop $a
	push 2
	popax
	add $5,$a
	pop $5
	push $4
	spushs
	push "="
	cmpst
	jne l3109
	spop $a
	push $3
	cthis _getifvar
	push _db
	spushs
	push irow
	push $5
	spop $a
	call [$a],get
	cmpje
	pop $2
	jmp l3108
l3109:
	push "!="
	cmpst
	jne l3110
	spop $a
	push $3
	cthis _getifvar
	push _db
	spushs
	push irow
	push $5
	spop $a
	call [$a],get
	cmpjne
	pop $2
	jmp l3108
l3110:
	push "<"
	cmpst
	jne l3111
	spop $a
	push $3
	cthis _getifvar
	spushs
	spop $h
	call $h,to_r
	push _db
	spushs
	push irow
	push $5
	spop $a
	call [$a],get
	spushs
	spop $h
	call $h,to_r
	cmpjl
	pop $2
	jmp l3108
l3111:
	push "<="
	cmpst
	jne l3112
	spop $a
	push $3
	cthis _getifvar
	spushs
	spop $h
	call $h,to_r
	push _db
	spushs
	push irow
	push $5
	spop $a
	call [$a],get
	spushs
	spop $h
	call $h,to_r
	cmpjle
	pop $2
	jmp l3108
l3112:
	push ">"
	cmpst
	jne l3113
	spop $a
	push $3
	cthis _getifvar
	spushs
	spop $h
	call $h,to_r
	push _db
	spushs
	push irow
	push $5
	spop $a
	call [$a],get
	spushs
	spop $h
	call $h,to_r
	cmpja
	pop $2
	jmp l3108
l3113:
	push ">="
	cmpst
	jne l3114
	spop $a
	push $3
	cthis _getifvar
	spushs
	spop $h
	call $h,to_r
	push _db
	spushs
	push irow
	push $5
	spop $a
	call [$a],get
	spushs
	spop $h
	call $h,to_r
	cmpjae
	pop $2
	jmp l3108
l3114:
	spop $a
l3108:
	push $2
	push $1
	cthis _ifst
	pop $1
	push _db
	spushs
	push irow
	push $5
	spop $a
	call [$a],dbchecknext
	cthis _oper_check
	pop ifst
	push ifst
	cmp0
	je l3116
	add $5,1
	pop $5
l3116:
	jmp l3105
l3106:
	push "&"
	cmpst
	jne l3117
	spop $a
	add $5,1
	pop $5
	push $3
	cthis _is_ifvar
	push $1
	cthis _ifst
	pop $1
	push 1
	pop ifst
	jmp l3105
l3117:
	push "|"
	cmpst
	jne l3118
	spop $a
	add $5,1
	pop $5
	push $3
	cthis _is_ifvar
	push $1
	cthis _ifst
	pop $1
	push 2
	pop ifst
	jmp l3105
l3118:
	spop $a
	push $3
	cthis _is_ifvar
	push $1
	cthis _ifst
	pop $1
l3105:
	add $5,1
	pop $5
	jmp l3103
l3104:
	push _sstarter
	spushs
	push $1
	spop $a
	call [$a],bif=
	push $1
	end method
	method _getifvar
	localstring $1
	pop $1
	push 0
	push 1
	call $1,getb
	push "."
	cmpje
	cmp0
	je l3120
	call gameapi,getgamename
	spushs
	push 1
	call $1,strsubb
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	jmp l3119
l3120:
	push $1
	call clsave,get
l3119:
	end method
	method _is_ifvar
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
	push 0
	push 1
	call $1,getb
	push "!"
	cmpje
	cmp0
	je l3122
	push 1
	pop $2
	push 1
	call $1,strsubb
	pop $1
l3122:
	push $1
	cthis _getifvar
	pop $1
	localint $3
	push $1
	push "null"
	cmpje
	cmp0
	jne l3124
	push $1
	push "0"
	cmpje
	jmp l3125
l3123:
	push 0
	jmp l3125
l3124:
	push 1
l3125:
	cmp0
	je l3127
	push 0
	jmp l3126
l3127:
	push 1
l3126:
	pop $3
	push $2
	cmp0
	je l3129
	push $3
	neg
	jmp l3128
l3129:
	push $3
l3128:
	end method
	method _checkif
	cthis _ifcheck
	cmp0
	je l3131
	cthis reteval
	jmp l3130
l3131:
	push _sstarter
	spushs
	cthis getname
	spop $a
	call [$a],classbehhero0
l3130:
	end method
	method classbehhero0
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
	localint $3
	call vecbehs,size
	pop $3
	localint $4
	push 0
	pop $4
	localint $5
	push $1
	call vecbehs,find
	push 1
	pop $b
	popax
	add $a,$b
	pop $5
l3132:
	push $5
	push $3
	cmpjl
	cmp0
	je l3133
	jmp l3135
l3134:
	add $5,1
	pop $5
	jmp l3132
l3135:
	push $5
	call vecbehs,get
	spushs
	spop $a
	call [$a],gettyp
	spushs
	push "IF"
	cmpst
	jne l3137
	spop $a
	add $2,1
	pop $2
	jmp l3136
l3137:
	push "FI"
	cmpst
	jne l3138
	spop $a
	push $2
	push 0
	cmpje
	cmp0
	je l3140
	push $5
	pop $4
	push $3
	pop $5
	jmp l3139
l3140:
	sub $2,1
	pop $2
l3139:
	jmp l3136
l3138:
	push "ELSE"
	cmpst
	je l3142
	push "ELIF"
	cmpst
	je l3142
	jmp l3141
l3142:
	spop $a
	push $2
	push 0
	cmpje
	cmp0
	je l3144
	push $5
	pop $4
	push $3
	pop $5
l3144:
	jmp l3136
l3141:
	spop $a
l3136:
	jmp l3134
l3133:
	push $4
	call vecbehs,get
	spushs
	push _scaller
	spop $a
	call [$a],eval
	end method
	method _evalIF
	push _sstarter
	spushs
	spop $a
	call [$a],ifpush
	cthis _checkif
	end method
	method _gotofi
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
	localint $3
	push $1
	call vecbehs,find
	push 1
	pop $b
	popax
	add $a,$b
	pop $3
l3145:
	push $3
	call vecbehs,size
	cmpjl
	cmp0
	je l3146
	jmp l3148
l3147:
	add $3,1
	pop $3
	jmp l3145
l3148:
	push $3
	call vecbehs,get
	spushs
	spop $a
	call [$a],gettyp
	spushs
	push "IF"
	cmpst
	jne l3150
	spop $a
	add $2,1
	pop $2
	jmp l3149
l3150:
	push "FI"
	cmpst
	jne l3151
	spop $a
	push $2
	push 0
	cmpje
	cmp0
	je l3153
	push $3
	call vecbehs,get
	spushs
	push _scaller
	spop $a
	call [$a],eval
	ret
	jmp l3152
l3153:
	sub $2,1
	pop $2
l3152:
	jmp l3149
l3151:
	spop $a
l3149:
	jmp l3147
l3146:
	end method
	method _evalELIF
	push _sstarter
	spushs
	spop $a
	call [$a],bif
	cmp0
	je l3155
	push _sstarter
	spushs
	cthis getname
	spop $a
	call [$a],_gotofi
	jmp l3154
l3155:
	cthis _checkif
l3154:
	end method
	method _evalELSE
	push _sstarter
	spushs
	spop $a
	call [$a],bif
	cmp0
	je l3157
	push _sstarter
	spushs
	cthis getname
	spop $a
	call [$a],_gotofi
	jmp l3156
l3157:
	cthis reteval
l3156:
	end method
	method _evalFI
	push _sstarter
	spushs
	spop $a
	call [$a],ifpop
	cthis reteval
	end method
	method gettyp
	push _stype
	end method
	method settype
	localstring $1
	pop $1
	push $1
	pop _stype
	push "_eval"
	push "_eval_std"
	cthis addmethod
	push "_rew"
	push $1
	pop $b
	popax
	add $a,$b
	cthis hasmet
	cmp0
	je l3159
	push "_rew"
	push "_rew"
	push $1
	pop $b
	popax
	add $a,$b
	cthis addmethod
l3159:
	end method
	method settype2
	localstring $1
	pop $1
	push $1
	pop _stype
	push "_eval"
	push "_eval"
	push $1
	pop $b
	popax
	add $a,$b
	cthis addmethod
	push "_rew"
	push $1
	pop $b
	popax
	add $a,$b
	cthis hasmet
	cmp0
	je l3161
	push "_rew"
	push "_rew"
	push $1
	pop $b
	popax
	add $a,$b
	cthis addmethod
l3161:
	end method
	method _eval_std
	push "_eval"
	push _stype
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	push "behposteval_"
	push _stype
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method setflags
	localstring $1
	pop $1
	push $1
	pop _snextbeh
	end method
	method setfinfun
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	pop _stdfinobj
	push $2
	pop _stdfinfun
	end method
	method setasstarter
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	localstring $7
	localstring $8
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push "start"
	cthis settype
	new string,_sstarter
	cthis getname
	pop _sstarter
	new int,brand
	push $2
	pop brand
	new int,_bmslock
	new vector,vecbehs
	push $4
	pop bblock
	push "string"
	call vecbehs,type
	new string,bonce
	push $1
	pop bonce
	push $3
	pop bparal
	new int,ienumer
	push $5
	pop ienumer
	push $5
	push 0
	cmpja
	cmp0
	je l3163
	new int,_iencnt
	push 1
	pop _iencnt
	jmp l3162
l3163:
	push $3
	cmp0
	je l3165
	new vector,vecbehs2
	push "string"
	call vecbehs2,type
l3165:
l3162:
	new int,iisifsave
	push $6
	pop iisifsave
	push $6
	push 0
	cmpjae
	cmp0
	je l3167
	new string,sisifsave
	push $7
	pop sisifsave
	push $8
	push "null"
	cmpjne
	cmp0
	je l3169
	new string,sisifvar
	push $8
	pop sisifvar
l3169:
l3167:
	new vector,vbif
	end method
	method bif
	call vbif,last
	end method
	method bif=
	localint $1
	pop $1
	call vbif,size
	push 1
	pop $b
	popax
	sub $a,$b
	push $1
	call vbif,set
	end method
	method ifpush
	push 1
	call vbif,add
	end method
	method ifpop
	call vbif,pop
	popax
	end method
	method isenumer
	push ienumer
	end method
	method nextenum
	push _iencnt
	call vecbehs,size
	cmpja
	cmp0
	je l3171
	push ienumer
	push 1
	pop $b
	popax
	add $a,$b
	pop _iencnt
	jmp l3170
l3171:
	add _iencnt,1
	pop _iencnt
l3170:
	push _iencnt
	push 1
	pop $b
	popax
	sub $a,$b
	end method
	method addtostarter
	localstring $1
	pop $1
	push $1
	call vecbehs,add
	push $1
	spushs
	push "behstarter"
	cthis getname
	spop $a
	call [$a],var2
	push $1
	spushs
	push bskip
	spop $a
	call [$a],bskip=
	end method
	method getblock
	push bblock
	end method
	method addflags
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	new string,_sstarter
	push $1
	pop _sstarter
	push _stype
	push "read"
	cmpje
	cmp0
	je l3173
	push 0
	jmp l3172
l3173:
	push $2
l3172:
	pop bblock
	push $3
	pop bparal
	end method
	method behret
	localstring $1
	pop $1
	push $1
	call vecbehs2,remove
	call vecbehs2,size
	push 0
	cmpje
	end method
	method _setasif
	localstring $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	new int,istart
	push $3
	pop istart
	new int,istop
	push $4
	pop istop
	new string,_db
	push $1
	pop _db
	new int,irow
	push $2
	pop irow
	new int,ifst
	push 0
	pop ifst
	end method
	method setasIF
	localstring $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push "IF"
	cthis settype
	push $1
	push $2
	push $3
	push $4
	cthis _setasif
	end method
	method setasELIF
	localstring $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push "ELIF"
	cthis settype
	push $1
	push $2
	push $3
	push $4
	cthis _setasif
	end method
	method setas
	localstring $1
	pop $1
	push $1
	cthis settype
	end method
	method setasscript
	localstring $1
	localstring $2
	localstring $3
	localint $4
	localint $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push "script"
	cthis settype
	new string,_sscr
	push $1
	pop _sscr
	new string,_sfun2
	push $2
	pop _sfun2
	new int,_id
	push $5
	pop _id
	new string,_sdb
	push $3
	pop _sdb
	new int,_row
	push $4
	pop _row
	end method
	method setasuse
	localstring $1
	pop $1
	push "use"
	cthis settype
	new string,_sitem
	push $1
	pop _sitem
	end method
	method _evaluse
	push _spocketpref
	cthis getmainhero
	pop $b
	popax
	add $a,$b
	spushs
	push _sitem
	spop $a
	call [$a],pckremove
	cthis reteval
	end method
	method _evaltopck
	push _spocketpref
	cthis getmainhero
	pop $b
	popax
	add $a,$b
	spushs
	push _sitem
	push _sfile
	spop $a
	call [$a],additem
	cthis reteval
	end method
	method setastopck
	localstring $1
	localstring $2
	pop $2
	pop $1
	push "topck"
	cthis settype
	new string,_sitem
	push $1
	pop _sitem
	new string,_sfile
	push $2
	pop _sfile
	end method
	method setasmet
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	localint $5
	localint $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push "met"
	cthis settype
	new string,_sob2
	push $1
	pop _sob2
	new string,_sfun2
	push $2
	pop _sfun2
	new string,_sdb
	push $4
	pop _sdb
	new string,_stypecall
	push $3
	pop _stypecall
	new int,_irow
	push $5
	pop _irow
	new int,_icol
	push $6
	pop _icol
	end method
	method setassaver
	localstring $1
	localstring $2
	pop $2
	pop $1
	push "save"
	cthis settype
	new string,ssavvar
	push $1
	pop ssavvar
	new string,ssavval
	push $2
	pop ssavval
	end method
	method setasnewgamer
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push "game"
	cthis settype
	new string,_sgame
	push $3
	pop _sgame
	new string,_styp
	push $1
	pop _styp
	new string,_spath
	push $2
	pop _spath
	end method
	method setasreader
	localstring $1
	localint $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push "read"
	cthis settype
	new string,_sread
	push $1
	pop _sread
	new int,_ix
	push $2
	pop _ix
	new int,_iy
	push $3
	pop _iy
	new string,_sdir
	push $4
	pop _sdir
	end method
	method setaswaiter
	localint $1
	pop $1
	push "wait"
	cthis settype
	new timer,timwait
	push 1
	call timwait,settick
	push $1
	call timwait,delay
	cthis getname
	push "reteval"
	call timwait,_csplbuild
	push "onfinish"
	push "_csplfinish"
	call timwait,addmethod
	end method
	method setassndbg
	localstring $1
	localint $2
	pop $2
	pop $1
	push "sndbg"
	cthis settype
	new snd,_sndbg
	call _sndbg,buildfullname
	push 0
	push 1
	call _sndbg,setstartstopflag
	push 0
	call SFXPATH,length
	call $1,getb
	push SFXPATH
	cmpje
	cmp0
	je l3175
	push "bisfxbg"
	cthis var
l3175:
	localdef $3
	push $1
	push ".wav"
	pop $b
	popax
	add $a,$b
	pop $3
	push $3
	call engine,fileexist
	neg
	cmp0
	je l3177
	push $1
	push ".ogg"
	pop $b
	popax
	add $a,$b
	pop $3
l3177:
	push $3
	call _sndbg,advloadsnd
	push $2
	call _sndbg,setvol
	end method
	method _loadsnd
	end method
	method setasanorder
	localstring $1
	localint $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push "anorder"
	cthis settype
	new string,_sdb
	push $1
	pop _sdb
	new int,_irow
	push $2
	pop _irow
	new int,_icol
	push $3
	pop _icol
	new string,_san
	push $4
	pop _san
	end method
	method setascaller
	localstring $1
	localstring $2
	pop $2
	pop $1
	push "call"
	cthis settype
	new string,scallobj
	push $1
	pop scallobj
	new string,sscript
	push $2
	pop sscript
	end method
	method _csplbuild
	localstring $1
	localstring $2
	pop $2
	pop $1
	new string,_sobj
	push $1
	pop _sobj
	new string,_sfinfun
	push $2
	pop _sfinfun
	end method
	method _csplfinish
	push _sobj
	push _sfinfun
	cthis callfun
	end method
	method setassndplayer
	localstring $1
	localint $2
	pop $2
	pop $1
	push "sndplay"
	cthis settype
	new snd,sndp
	call sndp,buildfullname
	push 0
	push 1
	call sndp,setstartstopflag
	localdef $3
	push $1
	push ".wav"
	pop $b
	popax
	add $a,$b
	pop $3
	push $3
	call engine,fileexist
	neg
	cmp0
	je l3179
	push $1
	push ".ogg"
	pop $b
	popax
	add $a,$b
	pop $3
l3179:
	push $3
	call sndp,advloadsnd
	cthis getname
	push "reteval"
	call sndp,_csplbuild
	push "onfinish"
	push "_csplfinish"
	call sndp,addmethod
	push $2
	call sndp,setvol
	end method
	method setasposer
	localstring $1
	localstring $2
	localint $3
	localint $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push "setpos"
	cthis settype
	new string,_san
	push $1
	pop _san
	new string,_idestx
	push $2
	pop _idestx
	new int,_idesty
	push $3
	pop _idesty
	new int,_bssc
	push $4
	pop _bssc
	new string,_sdir
	push $5
	pop _sdir
	end method
	method setasturn
	localstring $1
	localstring $2
	pop $2
	pop $1
	push "turn"
	cthis settype
	new string,_sptf
	push $1
	pop _sptf
	new string,_sdir
	push $2
	pop _sdir
	end method
	method setaswalker
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push "walk"
	cthis settype
	new string,_sptf
	push $1
	pop _sptf
	new string,_idestx
	push $2
	pop _idestx
	new string,_idesty
	push $3
	pop _idesty
	end method
	method setasanplayer
	localstring $1
	localstring $2
	pop $2
	pop $1
	push "anplay"
	cthis settype
	new string,_san
	push $1
	pop _san
	new string,_sact
	push $2
	pop _sact
	end method
	method setasanfin
	localstring $1
	localint $2
	pop $2
	pop $1
	push "anfin"
	cthis settype
	new string,_san
	push $1
	pop _san
	new int,_time
	push $2
	pop _time
	end method
	method setasanfout
	localstring $1
	localint $2
	pop $2
	pop $1
	push "anfout"
	cthis settype
	new string,_san
	push $1
	pop _san
	new int,_time
	push $2
	pop _time
	end method
	method setastalker
	localstring $1
	localstring $2
	localstring $3
	localint $4
	localint $5
	localint $6
	localstring $7
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push "talk"
	cthis settype
	new string,_san
	push $1
	pop _san
	new string,__swav
	push $2
	push ".wav"
	pop $b
	popax
	add $a,$b
	pop __swav
	push __swav
	call engine,fileexist
	neg
	cmp0
	je l3181
	push $2
	push ".ogg"
	pop $b
	popax
	add $a,$b
	pop __swav
l3181:
	new string,__sbase
	push $3
	pop __sbase
	new int,isort
	push $4
	pop isort
	new int,bstt
	push $5
	pop bstt
	new int,bstp
	push $6
	pop bstp
	new string,_sdir
	push $7
	pop _sdir
	end method
	method setasenter
	push "enter"
	cthis settype
	end method
	method setasclose
	push "close"
	cthis settype
	end method
	method setasmusic
	localstring $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push "music"
	cthis settype
	new vector,vmus
	push "string"
	call vmus,type
	call vmus,buildfullname
l3182:
	push $3
	push 0
	cmpjae
	cmp0
	je l3183
	push $3
	push $4
	cmpjl
	jmp l3185
l3183:
	push 0
	jmp l3185
l3184:
	push 1
l3185:
	cmp0
	je l3186
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	call vmus,add
	add $3,1
	pop $3
	jmp l3182
l3186:
	end method
	method setasreturn
	push "return"
	cthis settype
	end method
	end class

	new snd,_fx_pocket
	push "sounds/sfx/harfa.wav"
	call _fx_pocket,load
	new string,sItemMover
	push "null"
	pop sItemMover
	class classadvpocket
	parent classadvobject
	parent classadvbut
	parent gmimgvec
	method init
	localstring $1
	pop $1
	clparent classadvobject,init
	push $1
	clparent classadvbut,init
	clparent gmimgvec,init
	push "pocket"
	cthis setbuttyp
	push 1
	cthis setreach
	push "-hero"
	push "-main"
	cthis setadvbutpos
	new int,iX
	new int,iY
	new int,iNumItems
	push 0
	pop iNumItems
	new int,iMaxItems
	push 14
	pop iMaxItems
	new int,iScale
	new string,sState
	push "closed"
	pop sState
	new string,_sanim
	cthis getname
	pop _sanim
	push _spocketpref
	call _sanim,strsubbs
	pop _sanim
	new string,sItem
	push "null"
	pop sItem
	new string,sFocusItem
	push "null"
	pop sFocusItem
	new string,_sbase
	push "anpocket"
	pop _sbase
	new int,_ibase
	call _sbase,length
	pop _ibase
	new int,_ipcz
	push 1000
	pop _ipcz
	push _ipcz
	cthis setz
	new string,sitempath
	new vector,arPocket
	push "string"
	call arPocket,type
	new vector,arPocketFile
	push "string"
	call arPocketFile,type
	push "tim"
	push 1
	push 1
	push "evalpocket"
	cthis cnewtimercyclefin
	push "itempath:"
	push 1
	call modadv,get
	pop sitempath
	localint $2
	cthis getz
	pop $2
	new anima,imitem
	call imitem,anloopfin
	push $2
	push 1
	pop $b
	popax
	add $a,$b
	call imitem,setz
	new img,immarker
	push sitempath
	push "itemmarker.png"
	pop $b
	popax
	add $a,$b
	call immarker,load
	push $2
	push 1
	pop $b
	popax
	sub $a,$b
	call immarker,setz
	call immarker,hide
	cthis hide
	new int,bskip
	push 0
	pop bskip
	new string,save_dir
	push "saves"
	pop save_dir
	end method
	method addtoadv
	cthis getname
	cthis addtogamevars
	cthis enable
	cthis addasadvobject
	end method
	method removefromadv
	cthis disable
	cthis removefromadvobjs
	end method
	method hidepocket
	push sState
	push "closed"
	cmpjne
	cmp0
	je l3188
	push sState
	push "close"
	cmpjne
	cmp0
	je l3190
	cthis pockettoggle
	push 0
	call tim,stop
l3190:
l3191:
	push sState
	push "closed"
	cmpjne
	cmp0
	je l3192
	call tim,evalpocket
	push 0
	call tim,stop
	jmp l3191
l3192:
l3188:
	end method
	method exitpocket
	push "closed"
	pop sState
	push 0
	call tim,stop
	cthis hide
	end method
	method skip
	push 1
	pop bskip
	end method
	method skipitem
	push sItem
	push "null"
	cmpjne
	cmp0
	je l3194
	push 1
	pop bskip
l3194:
	end method
	method additem
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	call arPocket,contains
	cmp0
	je l3196
	ret
l3196:
	push $1
	call arPocket,add
	push $2
	call arPocketFile,add
	localstring $3
	push _sbase
	push $1
	pop $b
	popax
	add $a,$b
	pop $3
	push $3
	spushs
	spop $e
	new anima,[$e]
	push $3
	cthis add
	push $3
	spushs
	push sitempath
	push $2
	pop $b
	popax
	add $a,$b
	push ".pyz"
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],load
	push $3
	spushs
	push 0
	spop $a
	call [$a],play
	push $3
	spushs
	cthis getz
	spop $a
	call [$a],setz
	push $3
	spushs
	spop $a
	call [$a],hide
	add iNumItems,1
	pop iNumItems
	end method
	method savestate
	localstring $1
	pop $1
	push save_dir
	push "/"
	pop $b
	popax
	add $a,$b
	cthis getname
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	add $a,$b
	push "_name.txt"
	pop $b
	popax
	add $a,$b
	call arPocket,vecsave
	push save_dir
	push "/"
	pop $b
	popax
	add $a,$b
	cthis getname
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	add $a,$b
	push "_file.txt"
	pop $b
	popax
	add $a,$b
	call arPocketFile,vecsave
	end method
	method loadstate
	localstring $1
	pop $1
	new vector,vpcp
	push "string"
	call vpcp,type
	new vector,vpcf
	push "string"
	call vpcf,type
	push save_dir
	push "/"
	pop $b
	popax
	add $a,$b
	cthis getname
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	add $a,$b
	push "_name.txt"
	pop $b
	popax
	add $a,$b
	call vpcp,vecload
	push save_dir
	push "/"
	pop $b
	popax
	add $a,$b
	cthis getname
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	add $a,$b
	push "_file.txt"
	pop $b
	popax
	add $a,$b
	call vpcf,vecload
	localint $2
	push 0
	pop $2
l3197:
	push $2
	call vpcp,size
	cmpjl
	cmp0
	je l3198
	jmp l3200
l3199:
	add $2,1
	pop $2
	jmp l3197
l3200:
	push $2
	call vpcp,get
	push $2
	call vpcf,get
	cthis additem
	jmp l3199
l3198:
	delete vpcp
	delete vpcf
	end method
	method removeitem
	localstring $1
	pop $1
	localdef $2
	push _sbase
	call $1,strsubbs
	call arPocket,find
	pop $2
	push $2
	push 0
	cmpjl
	cmp0
	je l3202
	ret
l3202:
	push $2
	call arPocket,removeat
	push $2
	call arPocketFile,removeat
	push $1
	cthis remove
	push $1
	spushs
	spop $d
	delete [$d]
	sub iNumItems,1
	pop iNumItems
	push sState
	push "opened"
	cmpje
	cmp0
	je l3204
	cthis hide
l3204:
	end method
	method useitem
	push sItem
	push "null"
	cmpjne
	cmp0
	je l3206
	push sItem
	cthis removeitem
	cthis itemhide
l3206:
	end method
	method pckremove
	localstring $1
	pop $1
	push _sbase
	push $1
	pop $b
	popax
	add $a,$b
	cthis removeitem
	end method
	method evalpocket
	cthis play
	push sState
	push "open"
	cmpje
	cmp0
	je l3208
	push 16
	popax
	add iScale,$a
	pop iScale
	jmp l3207
l3208:
	push sState
	push "close"
	cmpje
	cmp0
	je l3210
	push 16
	popax
	sub iScale,$a
	pop iScale
l3210:
l3207:
	push iScale
	push 116
	cmpja
	cmp0
	je l3212
	push 0
	cthis stop
	push 116
	pop iScale
	push "opened"
	pop sState
	jmp l3211
l3212:
	push iScale
	push 0
	cmpjl
	cmp0
	je l3214
	push 0
	cthis stop
	push 0
	pop iScale
	push "closed"
	pop sState
l3214:
l3211:
	localreal $1
	push iScale
	push iScale
	pop $b
	popax
	mul $a,$b
	push 550
	pop $b
	popax
	div $a,$b
	psax
	pop $1
	localreal $2
	localstring $3
	localint $4
	push 0
	pop $4
l3215:
	push $4
	push iNumItems
	cmpjl
	cmp0
	je l3216
	jmp l3218
l3217:
	add $4,1
	pop $4
	jmp l3215
l3218:
	push $1
	push $4
	pop $b
	popax
	mul $a,$b
	push $1
	push iNumItems
	pop $b
	popax
	mul $a,$b
	push 2.0
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push 90.0
	pop $b
	popax
	sub $a,$b
	push $1
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	pop $2
	push $4
	cthis get
	pop $3
	push $3
	spushs
	call $2,cos
	push iScale
	pop $b
	popax
	mul $a,$b
	push iX
	pop $b
	popax
	add $a,$b
	push 76
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call $2,sin
	push iScale
	pop $b
	popax
	mul $a,$b
	push iY
	pop $b
	popax
	add $a,$b
	push 75
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setpos
	push $3
	spushs
	spop $a
	call [$a],isvisible
	cmp0
	je l3220
	push $3
	spushs
	push 0
	spop $a
	call [$a],play
l3220:
	jmp l3217
l3216:
	push sState
	push "closed"
	cmpje
	cmp0
	je l3222
	cthis hide
l3222:
	end method
	method pocketpos
	localint $1
	localint $2
	pop $2
	pop $1
	localint $3
	push $1
	push iX
	pop $b
	popax
	sub $a,$b
	pop $3
	localint $4
	push $2
	push iY
	pop $b
	popax
	sub $a,$b
	pop $4
	push $3
	push $4
	cthis move
	push $1
	pop iX
	push $2
	pop iY
	end method
	method pockettoggle
	push sState
	push "opened"
	cmpje
	cmp0
	je l3224
	push "close"
	pop sState
	call immarker,hide
	call tim,play
	jmp l3223
l3224:
	push sState
	push "closed"
	cmpje
	cmp0
	je l3226
	push "open"
	pop sState
	call arPocket,size
	push 0
	cmpja
	cmp0
	je l3228
	call _fx_pocket,play
l3228:
	push _sanim
	spushs
	spop $a
	call [$a],getposx
	pop iX
	push _sanim
	spushs
	spop $a
	call [$a],getposy
	push _sanim
	spushs
	spop $a
	call [$a],geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	pop iY
	cthis itemhide
	cthis show
	call tim,evalpocket
	call tim,play
	jmp l3225
l3226:
	push sState
	push "open"
	cmpje
	cmp0
	je l3230
	push "close"
	pop sState
	jmp l3229
l3230:
	push sState
	push "close"
	cmpje
	cmp0
	je l3232
	push "open"
	pop sState
l3232:
l3229:
l3225:
l3223:
	end method
	method getitem
	push sItem
	push "null"
	cmpjne
	cmp0
	je l3234
	push _sbase
	call sItem,strsubbs
	jmp l3233
l3234:
	push "null"
l3233:
	ret
	end method
	method itemhide
	push "null"
	pop sFocusItem
	push "null"
	pop sItem
	push 0
	call imitem,stop
	call imitem,hide
	push "null"
	pop sItemMover
	end method
	method printstate
	call sState,print
	call bskip,print
	end method
	method itemclick
	cthis skip
	push sState
	push "closed"
	cmpje
	cmp0
	je l3236
	cthis pockettoggle
	jmp l3235
l3236:
	push sState
	push "opened"
	cmpje
	cmp0
	je l3238
	push sFocusItem
	push "null"
	cmpjne
	cmp0
	je l3240
	push sItem
	push "null"
	cmpjne
	cmp0
	je l3242
	cthis pockettoggle
	push "beh_"
	push _sanim
	pop $b
	popax
	add $a,$b
	push "_USE_"
	pop $b
	popax
	add $a,$b
	push _sbase
	call sItem,strsubbs
	pop $b
	popax
	add $a,$b
	push "_ON_"
	pop $b
	popax
	add $a,$b
	push _sbase
	call sFocusItem,strsubbs
	pop $b
	popax
	add $a,$b
	cthis playbehif
	neg
	pop _b_rewind
	cthis itemhide
	jmp l3241
l3242:
	push sFocusItem
	pop sItem
	push sItem
	call imitem,copy
	push sFocusItem
	spushs
	spop $a
	call [$a],hide
	push 1
	call imitem,play
	cthis getz
	push 1
	pop $b
	popax
	add $a,$b
	call imitem,setz
	cthis setitempos
	cthis getname
	pop sItemMover
l3241:
	jmp l3239
l3240:
	cthis pockettoggle
l3239:
	jmp l3237
l3238:
	push sState
	push "open"
	cmpje
	cmp0
	je l3244
	cthis pockettoggle
	jmp l3243
l3244:
	push sState
	push "close"
	cmpje
	cmp0
	je l3246
	cthis pockettoggle
l3246:
l3243:
l3237:
l3235:
	end method
	method preparetosort
	localint $1
	localint $2
	pop $2
	pop $1
	localint $3
	push $1
	push $2
	push 1
	push 1
	clparent gmimgvec,isin
	pop $3
	push $3
	push 0
	cmpje
	cmp0
	je l3248
	push _sanim
	spushs
	spop $a
	call [$a],getz
	cthis setz
l3248:
	end method
	method endsort
	push _ipcz
	cthis setz
	end method
	method butisin
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	localint $5
	push $1
	push $2
	push $3
	push $4
	clparent gmimgvec,isin
	pop $5
	push $5
	cmp0
	je l3250
	push $5
	push 1
	pop $b
	popax
	sub $a,$b
	cthis get
	pop sFocusItem
	jmp l3249
l3250:
	push "null"
	pop sFocusItem
	push _sanim
	spushs
	push $1
	push $2
	push $3
	push $4
	spop $a
	call [$a],isin
	pop $5
l3249:
	push $5
	ret
	end method
	method hide
	push "stop"
	push 0
	cthis eval1
	push "hide"
	cthis eval
	call immarker,hide
	end method
	method setitempos
	call mouse,getpx
	push 76
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call mouse,getpy
	push 75
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call imitem,setpos
	end method
	method itemmoveoff
	push sState
	push "opened"
	cmpje
	cmp0
	je l3252
	call immarker,hide
l3252:
	end method
	method itemmoveon
	push sState
	push "opened"
	cmpje
	cmp0
	je l3254
	push sFocusItem
	push "null"
	cmpjne
	cmp0
	je l3256
	call immarker,show
	push sFocusItem
	spushs
	spop $a
	call [$a],getcx
	call immarker,getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push sFocusItem
	spushs
	spop $a
	call [$a],getcy
	call immarker,geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call immarker,setpos
l3256:
l3254:
	end method
	method checkusebutton
	localstring $1
	localstring $2
	pop $2
	pop $1
	push "beh_"
	push _sanim
	pop $b
	popax
	add $a,$b
	push "_USE_"
	pop $b
	popax
	add $a,$b
	push _sbase
	call sItem,strsubbs
	pop $b
	popax
	add $a,$b
	push "_ON_"
	pop $b
	popax
	add $a,$b
	push $1
	spushs
	spop $a
	call [$a],getbutname
	pop $b
	popax
	add $a,$b
	cthis behexist
	cmp0
	jne l3259
	push sFocusItem
	push "null"
	cmpjne
	cmp0
	je l3260
	push "beh_"
	push _sanim
	pop $b
	popax
	add $a,$b
	push "_USE_"
	pop $b
	popax
	add $a,$b
	push _sbase
	call sItem,strsubbs
	pop $b
	popax
	add $a,$b
	push "_ON_"
	pop $b
	popax
	add $a,$b
	push _sbase
	call sFocusItem,strsubbs
	pop $b
	popax
	add $a,$b
	cthis behexist
	jmp l3262
l3260:
	push 0
	jmp l3262
l3261:
	push 1
l3262:
	jmp l3263
l3258:
	push 0
	jmp l3263
l3259:
	push 1
l3263:
	cmp0
	je l3264
	push $2
	spushs
	spop $d
	call advmouse,[$d]
l3264:
	end method
	method moveon
	push sItemMover
	push "null"
	cmpje
	cmp0
	je l3266
	cthis ismainhero
	cmp0
	jne l3269
	push "beh_"
	cthis getmainhero
	pop $b
	popax
	add $a,$b
	push "_OPERATE_"
	pop $b
	popax
	add $a,$b
	push _sanim
	pop $b
	popax
	add $a,$b
	cthis behexist
	jmp l3270
l3268:
	push 0
	jmp l3270
l3269:
	push 1
l3270:
	cmp0
	je l3271
	call advmouse,setactive
l3271:
	jmp l3265
l3266:
	push sItemMover
	spushs
	cthis getname
	push "setactive"
	spop $a
	call [$a],checkusebutton
l3265:
	end method
	method onmouselclick
	localint $1
	localint $2
	pop $2
	pop $1
	push bskip
	cmp0
	je l3273
	push 0
	pop bskip
	push sItem
	push "null"
	cmpjne
	cmp0
	je l3275
	push sState
	push "opened"
	cmpje
	cmp0
	je l3275
	push sFocusItem
	push "null"
	cmpje
	jmp l3277
l3275:
	push 0
	jmp l3277
l3276:
	push 1
l3277:
	cmp0
	je l3278
	cthis pockettoggle
l3278:
	jmp l3272
l3273:
	cthis ismainhero
	cmp0
	je l3280
	push sState
	push "opened"
	cmpje
	cmp0
	jne l3282
	push sState
	push "open"
	cmpje
	jmp l3283
l3281:
	push 0
	jmp l3283
l3282:
	push 1
l3283:
	cmp0
	je l3285
	cthis pockettoggle
	jmp l3284
l3285:
	cthis itemhide
l3284:
l3280:
l3272:
	end method
	method onmouserclick
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 1
	cthis butisin
	cmp0
	je l3287
	push sState
	push "opened"
	cmpje
	cmp0
	je l3289
	push sFocusItem
	push "null"
	cmpjne
	jmp l3291
l3289:
	push 0
	jmp l3291
l3290:
	push 1
l3291:
	cmp0
	je l3292
	push "beh_"
	push _sanim
	pop $b
	popax
	add $a,$b
	push "_ITEM_"
	pop $b
	popax
	add $a,$b
	push _sbase
	call sFocusItem,strsubbs
	pop $b
	popax
	add $a,$b
	cthis playbehif
	popax
	jmp l3288
l3292:
	cthis ismainhero
	cmp0
	je l3294
	push "beh_RCLICK_"
	push _sanim
	pop $b
	popax
	add $a,$b
	cthis playbehif
	popax
l3294:
l3288:
l3287:
	end method
	method onmousemove
	localint $1
	localint $2
	pop $2
	pop $1
	push sItem
	push "null"
	cmpjne
	cmp0
	je l3296
	cthis setitempos
l3296:
	push sState
	push "opened"
	cmpje
	cmp0
	je l3298
	push $1
	push $2
	push 1
	push 1
	cthis butisin
	jmp l3300
l3298:
	push 0
	jmp l3300
l3299:
	push 1
l3300:
	cmp0
	je l3301
	cthis itemmoveon
l3301:
	end method
	method moveoff
	call advmouse,setstd
	cthis itemmoveoff
	end method
	method ismainhero
	cthis getmainhero
	push _sanim
	cmpje
	end method
	method clickon
	cthis ismainhero
	cmp0
	je l3303
	call clwalkq,stand
	cthis itemclick
	jmp l3302
l3303:
	cthis getname
	call clwalkq,visit
l3302:
	end method
	end class

	new db,gdbsound
	new string,_slhpref
	push "cllh"
	pop _slhpref
	new string,_spathpref
	push "pt"
	pop _spathpref
	new string,_spocketpref
	push "pc"
	pop _spocketpref
	new string,_sstndpref
	push "stnd"
	pop _sstndpref
	new string,_stalkpref
	push "ctlk"
	pop _stalkpref
	new int,AdventureGame
	method advgetscreenshoot
	call gameapi,getgamename
	spushs
	cthis getsavepath
	push "slot"
	pop $b
	popax
	add $a,$b
	push PrzygodaNumer
	pop $b
	popax
	add $a,$b
	push ".bmp"
	pop $b
	popax
	add $a,$b
	push 0.3
	spop $a
	call [$a],cgetscreenshoot
	end method
	method bneedbeh
	push "GAME_needbeh"
	call clsave,bis
	end method
	method bneededbeh
	localstring $1
	pop $1
	push "GAME_neededbeh"
	call clsave,get
	push $1
	cmpje
	cmp0
	jne l3305
	push $1
	push "nothing"
	cmpje
	jmp l3306
l3304:
	push 0
	jmp l3306
l3305:
	push 1
l3306:
	end method
	method canplaybeh
	localstring $1
	pop $1
	cthis bneedbeh
	neg
	cmp0
	jne l3308
	push $1
	cthis bneededbeh
	jmp l3309
l3307:
	push 0
	jmp l3309
l3308:
	push 1
l3309:
	end method
	method canplaybehs
	cthis bneedbeh
	cmp0
	je l3311
	localdef $1
	pop $1
	localint $2
	push 0
	pop $2
l3312:
	push $1
	push A
	cmpjne
	cmp0
	je l3313
	push $2
	cmp0
	jne l3315
	push $1
	cthis bneededbeh
	jmp l3316
l3314:
	push 0
	jmp l3316
l3315:
	push 1
l3316:
	pop $2
	localdef $1
	pop $1
	jmp l3312
l3313:
	push $2
	jmp l3310
l3311:
	push 1
l3310:
	end method
	module modadv
	method init
	new db,dbload
	new string,stalktype
	push "snd"
	cthis settalktype
	push "null"
	new Script,scrl
	new string,_stalk
	end method
	method execute
	localstring $1
	pop $1
	push $1
	call scrl,call
	end method
	method loadscript
	localstring $1
	pop $1
	push $1
	call scrl,load
	end method
	method loadsounds
	localstring $1
	pop $1
	push $1
	call gdbsound,load
	push igmdebug
	cmp0
	je l3318
	push "exports/adv.dlg"
	call gdbsound,save
l3318:
	end method
	method gettalktype
	push stalktype
	end method
	method settalktype
	localstring $1
	pop $1
	push $1
	pop stalktype
	end method
	method load
	localstring $1
	pop $1
	push $1
	call dbload,loadscript
	push "talk:"
	push 1
	cthis get
	pop _stalk
	end method
	method get
	localstring $1
	localint $2
	pop $2
	pop $1
	localint $3
	push $1
	call dbload,findbyrow
	pop $3
	push $3
	push 0
	cmpjl
	cmp0
	je l3320
	push "modadv.dbload: can't find "
	push $1
	pop $b
	popax
	add $a,$b
	call engine,print
	push "null"
	jmp l3319
l3320:
	push $3
	push $2
	call dbload,get
l3319:
	end method
	end module

	module modadvglob
	method init
	new gmobjvec,grhero
	new gmobjvec,grfiles
	new gmobjvec,grpck
	end method
	method addhero
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	push "hero_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_active"
	pop $b
	popax
	add $a,$b
	push 1
	call clsave,set
	localint $4
	push $1
	call grhero,find
	pop $4
	push $4
	push 0
	cmpjae
	cmp0
	je l3322
	push $4
	call grfiles,get
	push $2
	cmpjne
	cmp0
	je l3324
	push $4
	push $2
	call grfiles,set
	push $1
	spushs
	push $2
	cthis getpath
	spop $a
	call [$a],load
l3324:
	push $1
	spushs
	push $1
	spop $a
	call [$a],addtogamevars
	push $3
	cmp0
	je l3326
	push _spocketpref
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],addtoadv
l3326:
	push 0
	jmp l3321
l3322:
	push $1
	push $2
	push 0
	cthis newanima
	push $1
	spushs
	push $1
	spop $a
	call [$a],addtogamevars
	push $1
	call grhero,add
	push $2
	call grfiles,add
	push $3
	cmp0
	je l3328
	localstring $5
	push _spocketpref
	push $1
	pop $b
	popax
	add $a,$b
	pop $5
	push $5
	cthis hasvar
	neg
	cmp0
	je l3330
	push $5
	spushs
	push $1
	spop $e
	new classadvpocket,[$e]
	push $5
	call grpck,add
	push $5
	spushs
	spop $a
	call [$a],addtoadv
	jmp l3329
l3330:
	push $5
	spushs
	spop $a
	call [$a],addtoadv
l3329:
l3328:
	push 1
l3321:
	end method
	method reloadhero
	localstring $1
	pop $1
	localint $2
	push $1
	call grhero,find
	pop $2
	push $2
	push 0
	cmpjae
	cmp0
	je l3332
	localstring $3
	push $2
	call grfiles,get
	pop $3
	push $1
	push 0
	cthis _delhero
	push $1
	push $3
	push 0
	cthis addhero
	popax
l3332:
	end method
	method delhero
	localstring $1
	pop $1
	push $1
	push 1
	cthis _delhero
	end method
	method delheros
l3333:
	call grhero,size
	cmp0
	je l3334
	call grhero,first
	cthis delhero
	jmp l3333
l3334:
	end method
	method _delhero
	localstring $1
	localint $2
	pop $2
	pop $1
	push "hero_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_active"
	pop $b
	popax
	add $a,$b
	push 0
	call clsave,set
	localint $3
	push $1
	call grhero,find
	pop $3
	push $3
	push 0
	cmpjae
	cmp0
	je l3336
	localstring $4
	push _spocketpref
	push $1
	pop $b
	popax
	add $a,$b
	pop $4
	push $4
	cthis hasvar
	cmp0
	je l3338
	push $2
	jmp l3340
l3338:
	push 0
	jmp l3340
l3339:
	push 1
l3340:
	cmp0
	je l3341
	push $4
	call grpck,remove
	push $4
	spushs
	spop $a
	call [$a],removefromadv
	push $4
	spushs
	spop $d
	delete [$d]
l3341:
	push $3
	call grhero,removeat
	push $3
	call grfiles,removeat
	push $1
	spushs
	spop $d
	delete [$d]
l3336:
	end method
	method savepck
	localstring $1
	pop $1
	push "grpck_"
	push $1
	pop $b
	popax
	add $a,$b
	push ".txt"
	pop $b
	popax
	add $a,$b
	call grpck,vecsave
	localint $2
	push 0
	pop $2
l3342:
	push $2
	call grpck,size
	cmpjl
	cmp0
	je l3343
	jmp l3345
l3344:
	add $2,1
	pop $2
	jmp l3342
l3345:
	push $2
	call grpck,get
	spushs
	push $1
	spop $a
	call [$a],savestate
	jmp l3344
l3343:
	end method
	method loadpck
	localstring $1
	pop $1
	localdef $2
	localdef $3
	localint $4
	push 0
	pop $4
l3346:
	push $4
	call grpck,size
	cmpjl
	cmp0
	je l3347
	jmp l3349
l3348:
	add $4,1
	pop $4
	jmp l3346
l3349:
	push $4
	call grpck,get
	pop $2
	push $2
	spushs
	spop $a
	call [$a],removefromadv
	push $2
	spushs
	spop $d
	delete [$d]
	jmp l3348
l3347:
	push "grpck_"
	push $1
	pop $b
	popax
	add $a,$b
	push ".txt"
	pop $b
	popax
	add $a,$b
	call grpck,vecload
	push 0
	pop $4
l3350:
	push $4
	call grpck,size
	cmpjl
	cmp0
	je l3351
	jmp l3353
l3352:
	add $4,1
	pop $4
	jmp l3350
l3353:
	push $4
	call grpck,get
	pop $2
	push $2
	spushs
	push _spocketpref
	call $2,strsubbs
	spop $e
	new classadvpocket,[$e]
	push $2
	spushs
	push $1
	spop $a
	call [$a],loadstate
	push $2
	spushs
	spop $a
	call [$a],removefromadv
	jmp l3352
l3351:
	end method
	method onexit
	localstring $1
	localint $2
	push 0
	pop $2
l3354:
	push $2
	call grhero,size
	cmpjl
	cmp0
	je l3355
	jmp l3357
l3356:
	add $2,1
	pop $2
	jmp l3354
l3357:
	push $2
	call grhero,get
	pop $1
	push $1
	spushs
	push 0
	spop $a
	call [$a],stop
	push $1
	spushs
	spop $a
	call [$a],hide
	push _spocketpref
	push $1
	pop $b
	popax
	add $a,$b
	cthis hasvar
	cmp0
	je l3359
	push _spocketpref
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],exitpocket
l3359:
	push _spathpref
	push $1
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	spushs
	spop $a
	call [$a],unlinkanima
	jmp l3356
l3355:
	end method
	method print
	call grhero,print
	call grfiles,print
	call grpck,print
	end method
	end module

	class classloadedhero
	method init
	new string,sanhero
	new int,bplaystart
	push 0
	pop bplaystart
	new int,bplaystop
	push 0
	pop bplaystop
	end method
	method setplaystart
	localint $1
	pop $1
	push $1
	pop bplaystart
	end method
	method setplaystop
	localint $1
	pop $1
	push $1
	pop bplaystop
	end method
	method getstartstop
	push bplaystart
	push bplaystop
	ret
	end method
	end class

	class classadvcontroller
	parent classadv
	method init
	push 1
	pop AdventureGame
	push "null"
	clparent classadv,init
	cthis advsetstdstate
	new snd,__sndplay
	call __sndplay,classadvcontroller0
	new classstndgroup,modstnd
	push "engine"
	call mus,smixer=
	new timer,_tim_dbclk
	push 200
	call _tim_dbclk,setdelay
	new int,_if_pos
	push 1
	popax
	sub 0,$a
	pop _if_pos
	push "_dbbh"
	new classobjcounter,clcbeh
	new string,_sbeh
	push "clbeh"
	pop _sbeh
	new int,iidbeh
	push "dbadv"
	new classobjcounter,clcadv
	new db,dbmacros
	new vector,_vecarg
	push "string"
	call _vecarg,type
	new classadvcamera,clcamera
	push "advmsmove"
	call clcamera,setmetonmsmove
	new classwalkerqueue,clwalkq
	new gmadvvec,grbuts
	new gmimgvec,grmsmove
	new gmimgvec,grmslclick
	new gmimgvec,grmsrclick
	new gmimgvec,grmslrel
	new gmobjvec,grsndsrcs
	push "csndsrc"
	new classobjcounter,csndsrc
	push "_timsndsrc"
	push "classadvcontroller2"
	cthis cycle=
	call _timsndsrc,play
	new string,_susetool
	push "null"
	pop _susetool
	new string,_slastms
	push "null"
	pop _slastms
	new int,_b_rewind
	push 1
	pop _b_rewind
	new string,sactbeh
	push "null"
	pop sactbeh
	new string,slastpathf
	new int,licznik
	push 0
	pop licznik
	new string,smainhero
	push "null"
	pop smainhero
	cthis advsaveonstart
	push sgmgame
	push "null"
	cmpje
	cmp0
	je l3365
	cthis getname
	pop sgmgame
l3365:
	new string,sprivgame
	push sgmgame
	pop sprivgame
	push "null"
	pop sgmgame
	end method
	method classadvcontroller0
	push A
	push "sfun"
	push "null"
	push "sob"
	push "null"
	cthis vars2
	push 0
	push 1
	cthis setstartstopflag
	push "onfinish"
	push "classadvcontroller1"
	cthis addmethod
	end method
	method classadvcontroller1
	push sob
	push sfun
	cthis callfun
	end method
	method classadvcontroller2
	push "classadvcontroller3"
	call grsndsrcs,eval
	cthis play
	end method
	method classadvcontroller3
	localint $1
	localint $2
	localdef $3
	cthis getmainhero
	pop $3
	push $3
	push "null"
	cmpje
	cmp0
	je l3361
	push igmappw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $1
	push igmapph
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $2
	jmp l3360
l3361:
	push $3
	spushs
	spop $a
	call [$a],getposx
	pop $1
	push $3
	spushs
	spop $a
	call [$a],getposy
	pop $2
l3360:
	localreal $4
	push slinkedobj
	push "-pos"
	cmpje
	cmp0
	je l3363
	push iobjx
	push $1
	pop $b
	popax
	sub $a,$b
	call clcamera,getposx
	pop $b
	popax
	add $a,$b
	push iobjy
	push $2
	pop $b
	popax
	sub $a,$b
	call clcamera,getposy
	pop $b
	popax
	add $a,$b
	call $4,length
	pop $4
	jmp l3362
l3363:
	push slinkedobj
	spushs
	spop $a
	call [$a],getcx
	push $1
	pop $b
	popax
	sub $a,$b
	push slinkedobj
	spushs
	spop $a
	call [$a],getcy
	push $2
	pop $b
	popax
	sub $a,$b
	call $4,length
	pop $4
l3362:
	push slinkedfx
	push imaxvol
	push ioutervol
	push rradious
	push $4
	clparent SoundSource,setvol
	end method
	method initadventure
	localstring $1
	localstring $2
	push "game"
	call sprivgame,strsubbs
	pop $2
	push sgmglobpath
	push "null"
	cmpjne
	cmp0
	je l3367
	push sgmglobpath
	pop $1
	push "null"
	pop sgmglobpath
	jmp l3366
l3367:
	push $2
	pop $1
l3366:
	push "scripts/"
	push $1
	pop $b
	popax
	add $a,$b
	push "/"
	pop $b
	popax
	add $a,$b
	cthis setgraphpath
	push $2
	push ".adv"
	pop $b
	popax
	add $a,$b
	cthis loadadventure
	call grbuts,sortimgs
	push smainhero
	push "null"
	cmpje
	cmp0
	je l3369
	call clcamera,getactor
	pop smainhero
l3369:
	call clcamera,start
	call clcamera,setscene
	call clwalkq,start
	push 1
	call clwalkq,setverlen
	call advmouse,setstd
	call grbuts,sortimgs
	push "_advtimmove"
	push "classadvcontroller4"
	cthis cycle=
	call _advtimmove,play
	push "GAME_actadvgame"
	push sprivgame
	call clsave,set
	push "GAME_fadeout_music"
	push 0
	call clsave,set
	end method
	method classadvcontroller4
	cthis advbutrefresh
	cthis play
	end method
	method playbehoninit
	push "preinit"
	cthis behexist
	cmp0
	je l3371
	push "preinit"
	cthis getname
	push "playbehinit"
	cthis playbehobfin
	jmp l3370
l3371:
	cthis playbehinit
l3370:
	end method
	method playbehinit
	push sprivgame
	push "visited"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l3373
	push "behinit_FROM_"
	push sgmlastscene
	pop $b
	popax
	add $a,$b
	cthis playpostinit
	cmp0
	je l3375
	jmp l3374
l3375:
	push "behinit"
	cthis playpostinit
	cmp0
	je l3377
l3377:
l3374:
	jmp l3372
l3373:
	push sprivgame
	push "visited"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	push "behinit0_FROM_"
	push sgmlastscene
	pop $b
	popax
	add $a,$b
	cthis playpostinit
	cmp0
	je l3379
	jmp l3378
l3379:
	push "behinit0"
	cthis playpostinit
	cmp0
	je l3381
	jmp l3380
l3381:
	push "behinit_FROM_"
	push sgmlastscene
	pop $b
	popax
	add $a,$b
	cthis playpostinit
	cmp0
	je l3383
	jmp l3382
l3383:
	push "behinit"
	cthis playpostinit
	cmp0
	je l3385
l3385:
l3382:
l3380:
l3378:
l3372:
	end method
	method getmainhero
	push smainhero
	end method
	method setmainhero
	localstring $1
	pop $1
	push $1
	pop smainhero
	end method
	method ismainhero
	localstring $1
	pop $1
	push smainhero
	push $1
	cmpje
	end method
	method setactbeh
	localstring $1
	pop $1
	push $1
	pop sactbeh
	end method
	method getactbeh
	push sactbeh
	end method
	method skipactbeh
	cthis getactbeh
	push "null"
	cmpjne
	cmp0
	je l3387
	cthis getactbeh
	spushs
	spop $a
	call [$a],skip
l3387:
	end method
	method setusetool
	localstring $1
	pop $1
	push $1
	pop _susetool
	end method
	method getusetool
	push _susetool
	end method
	method ishintablebut
	push bautohint
	cmp0
	je l3388
	cthis isvisible
	cmp0
	jne l3391
	cthis ismask
	cmp0
	jne l3391
	push bshownonvis
	jmp l3392
l3390:
	push 0
	jmp l3392
l3391:
	push 1
l3392:
	jmp l3393
l3388:
	push 0
	jmp l3393
l3389:
	push 1
l3393:
	end method
	method playpostinit
	localstring $1
	pop $1
	push $1
	call gameapi,getgamename
	push "postinit"
	cthis playbehobfinif
	end method
	method playbeh
	localstring $1
	pop $1
	push $1
	push "null"
	cthis playbehfin
	end method
	method playbehif
	localstring $1
	pop $1
	push $1
	cthis behexist
	cmp0
	je l3395
	push $1
	push "null"
	cthis playbehfin
	push 1
	jmp l3394
l3395:
	push 0
l3394:
	end method
	method playbehfin
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push "null"
	push $2
	cthis playbehobfin
	end method
	method playbehfinif
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	cthis behexist
	cmp0
	je l3397
	push $1
	push $2
	cthis playbehfin
	push 1
	jmp l3396
l3397:
	push 0
l3396:
	end method
	method playbehobfin
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	localdef $4
	push $1
	cthis getbeh
	pop $4
	push $4
	spushs
	spop $a
	call [$a],sneededbeh
	cthis canplaybeh
	cmp0
	je l3399
	push $4
	spushs
	push $2
	push $3
	spop $a
	call [$a],playfin
l3399:
	end method
	method playbehobfinif
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	cthis behexist
	cmp0
	je l3401
	push $1
	push $2
	push $3
	cthis playbehobfin
	push 1
	jmp l3400
l3401:
	push 0
l3400:
	end method
	method playnewgamepath
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $2
	pop sgmglobpath
	push sprivgame
	pop sgmlastscene
	push "lastscene"
	push sgmlastscene
	call clsave,set
	push $1
	call gameapi,play
	end method
	method playnewgame
	localstring $1
	pop $1
	push $1
	push "null"
	cthis playnewgamepath
	end method
	method playfromscript
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $2
	pop sgmgame
	push "defaultadv:"
	push 1
	call modadv,get
	push $1
	cthis playnewgamepath
	end method
	method getheroloader
	localstring $1
	pop $1
	push _slhpref
	push $1
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	call engine,varexist
	cmp0
	je l3403
	push $1
	jmp l3402
l3403:
	push "null"
l3402:
	end method
	method advanstand
	localstring $1
	pop $1
	localstring $2
	push _spathpref
	push $1
	pop $b
	popax
	add $a,$b
	pop $2
	push $2
	call engine,varexist
	cmp0
	je l3405
	push $2
	spushs
	spop $a
	call [$a],iswalking
	jmp l3407
l3405:
	push 0
	jmp l3407
l3406:
	push 1
l3407:
	cmp0
	je l3408
	push $2
	spushs
	push 0
	spop $a
	call [$a],stop
	push $2
	spushs
	spop $a
	call [$a],stand
l3408:
	end method
	method reloadhero
	localstring $1
	pop $1
	push $1
	cthis _getheropath
	cthis anreload
	localstring $2
	push _spathpref
	cthis getname
	pop $b
	popax
	add $a,$b
	pop $2
	push $2
	spushs
	cthis getname
	spop $a
	call [$a],linkanima
	push $2
	spushs
	spop $a
	call [$a],linkfilter
	push $2
	spushs
	spop $a
	call [$a],scalean
	end method
	method analizeanopts
	localstring $1
	localint $2
	localint $3
	localint $4
	localstring $5
	localstring $6
	localstring $7
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	localreal $8
	localreal $9
	localstring $10
	localstring $11
	localint $12
	push 0
	pop $12
	localint $13
	push 0
	pop $13
	localint $14
	localint $15
	localint $16
	localint $17
	push 0
	pop $17
l3409:
	push $3
	push $4
	cmpjl
	cmp0
	je l3410
	add $3,1
	pop $3
	push $1
	spushs
	push $2
	push $3
	push 1
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],get
	spushs
	push "-stt"
	cmpst
	jne l3412
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $12
	add $3,1
	pop $3
	jmp l3411
l3412:
	push "-stp"
	cmpst
	jne l3413
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $13
	add $3,1
	pop $3
	jmp l3411
l3413:
	push "-wav"
	cmpst
	jne l3414
	spop $a
	push _slhpref
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $b
	popax
	add $a,$b
	pop $10
	add $3,1
	pop $3
	push $10
	spushs
	spop $e
	new classloadedhero,[$e]
	push $10
	spushs
	push "sanhero"
	push $5
	spop $a
	call [$a],varset
	push $6
	spushs
	push $10
	spop $a
	call [$a],add
	jmp l3411
l3414:
	push "-path"
	cmpst
	jne l3415
	spop $a
	push $5
	clparent classadvanhero,buildheroframe
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $10
	add $3,1
	pop $3
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $8
	add $3,1
	pop $3
	push _spathpref
	push $5
	pop $b
	popax
	add $a,$b
	pop $11
	push $11
	push $5
	push $10
	push $8
	cthis newclpathfcopy
	push $11
	spushs
	spop $a
	call [$a],prepareforhero
	push $11
	push "look"
	pop $b
	popax
	add $a,$b
	pop $10
	push $10
	spushs
	spop $e
	new classherolooker,[$e]
	push $10
	spushs
	push $5
	spop $a
	call [$a],link
	push $11
	push "use"
	pop $b
	popax
	add $a,$b
	pop $10
	push $10
	spushs
	spop $e
	new classherouser,[$e]
	push $10
	spushs
	push $5
	spop $a
	call [$a],link
	push $11
	push "take"
	pop $b
	popax
	add $a,$b
	pop $10
	push $10
	spushs
	spop $e
	new classherotaker,[$e]
	push $10
	spushs
	push $5
	spop $a
	call [$a],link
	jmp l3411
l3415:
	push "-ft"
	cmpst
	jne l3416
	spop $a
	push _spathpref
	push $5
	pop $b
	popax
	add $a,$b
	pop $11
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $8
	add $3,1
	pop $3
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $9
	add $3,1
	pop $3
	push $11
	spushs
	spop $a
	call [$a],linkfilter
	push $11
	spushs
	push $8
	spop $a
	call [$a],setzsize
	push $11
	spushs
	push $9
	spop $a
	call [$a],setscalepower
	jmp l3411
l3416:
	push "-stnd"
	cmpst
	jne l3417
	spop $a
	push _sstndpref
	push $5
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	spop $a
	call [$a],setdelay
	add $3,1
	pop $3
	jmp l3411
l3417:
	push "-txtcolor"
	cmpst
	jne l3418
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $14
	add $3,1
	pop $3
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $15
	add $3,1
	pop $3
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $16
	add $3,1
	pop $3
	push _stalkpref
	push $5
	pop $b
	popax
	add $a,$b
	spushs
	push $14
	push $15
	push $16
	spop $a
	call [$a],settxtcolor
	jmp l3411
l3418:
	push "-font"
	cmpst
	jne l3419
	spop $a
	push 1
	pop $17
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $10
	add $3,1
	pop $3
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $11
	add $3,1
	pop $3
	push $7
	push "hero:"
	cmpje
	cmp0
	je l3421
	push _stalkpref
	push $5
	pop $b
	popax
	add $a,$b
	spushs
	push $10
	push $11
	spop $a
	call [$a],setfont
l3421:
	jmp l3411
l3419:
	spop $a
	push $1
	push $2
	push $3
	push 1
	pop $b
	popax
	sub $a,$b
	push $5
	cthis analizeaninstr
	pop $3
l3411:
	jmp l3409
l3410:
	push $17
	neg
	cmp0
	je l3423
	push $7
	push "hero:"
	cmpje
	jmp l3425
l3423:
	push 0
	jmp l3425
l3424:
	push 1
l3425:
	cmp0
	je l3426
	push _stalkpref
	push $5
	pop $b
	popax
	add $a,$b
	spushs
	push "font:"
	push 1
	call modadv,get
	push "font:"
	push 2
	call modadv,get
	spop $a
	call [$a],setfont
l3426:
	push $6
	spushs
	push "setplaystart"
	push $12
	spop $a
	call [$a],eval1
	push $6
	spushs
	push "setplaystop"
	push $13
	spop $a
	call [$a],eval1
	push $6
	spushs
	spop $a
	call [$a],free
	end method
	method setasadvanima
	cthis getname
	push "cadvherofinish"
	clparent classadvanhero,setashero
	end method
	method analizebut
	localstring $1
	localstring $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	localstring $5
	localstring $6
	localstring $7
	localint $8
	localint $9
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	pop $5
	add $4,1
	pop $4
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	pop $6
	add $4,1
	pop $4
	push ".pyz"
	call $6,contains
	cmp0
	je l3428
	push $6
	pop $7
	push "an"
	push 4
	call $6,strsube
	pop $b
	popax
	add $a,$b
	pop $6
	push $6
	push $7
	push 0
	cthis newanima
l3428:
	push 1
	call $1,strsube
	pop $1
	push $6
	push $5
	push $1
	clparent classadvbut,setasbutton2
	push "setas"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push $6
	spop $d
	clparent classadvbut,[$d]
	push $6
	spushs
	push $6
	spushs
	spop $a
	call [$a],getcx
	push $6
	spushs
	spop $a
	call [$a],getcy
	spop $a
	call [$a],setadvbutpos
l3429:
	push $4
	push $2
	spushs
	push $3
	spop $a
	call [$a],getcolsno
	cmpjl
	cmp0
	je l3430
	add $4,1
	pop $4
	push $2
	spushs
	push $3
	push $4
	push 1
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],get
	spushs
	push "-pos"
	cmpst
	jne l3432
	spop $a
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	pop $5
	add $4,1
	pop $4
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	pop $7
	add $4,1
	pop $4
	push $5
	push "-id"
	cmpje
	cmp0
	je l3434
	push slastpathf
	push "null"
	cmpjne
	jmp l3436
l3434:
	push 0
	jmp l3436
l3435:
	push 1
l3436:
	cmp0
	je l3437
	push slastpathf
	spushs
	push $7
	spop $a
	call [$a],getbyname
	pop $8
	push slastpathf
	spushs
	push $8
	spop $a
	call [$a],getxver
	push slastpathf
	spushs
	spop $a
	call [$a],getposx
	pop $b
	popax
	sub $a,$b
	pop $5
	push slastpathf
	spushs
	push $8
	spop $a
	call [$a],getyver
	push slastpathf
	spushs
	spop $a
	call [$a],getposy
	pop $b
	popax
	sub $a,$b
	pop $7
l3437:
	push $6
	spushs
	push $5
	push $7
	spop $a
	call [$a],setadvbutpos
	jmp l3431
l3432:
	push "-bs1"
	cmpst
	jne l3438
	spop $a
	push $6
	spushs
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	spop $a
	call [$a],setbutbase1
	add $4,1
	pop $4
	jmp l3431
l3438:
	push "-bs2"
	cmpst
	jne l3439
	spop $a
	push $6
	spushs
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	spop $a
	call [$a],setbutbase2
	add $4,1
	pop $4
	jmp l3431
l3439:
	push "-us1"
	cmpst
	jne l3440
	spop $a
	push $6
	spushs
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	spop $a
	call [$a],baseuse1=
	add $4,1
	pop $4
	jmp l3431
l3440:
	push "-us2"
	cmpst
	jne l3441
	spop $a
	push $6
	spushs
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	spop $a
	call [$a],baseuse2=
	add $4,1
	pop $4
	jmp l3431
l3441:
	push "-useon"
	cmpst
	jne l3442
	spop $a
	push $6
	spushs
	push "use:"
	push 1
	call modadv,get
	spop $a
	call [$a],setbutbase1
	push $6
	spushs
	push "use:"
	push 2
	call modadv,get
	spop $a
	call [$a],setbutbase2
	jmp l3431
l3442:
	push "-dir"
	cmpst
	jne l3443
	spop $a
	push $6
	spushs
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	spop $a
	call [$a],setbutdir
	add $4,1
	pop $4
	jmp l3431
l3443:
	push "-noreach"
	cmpst
	jne l3444
	spop $a
	push $6
	spushs
	push 0
	spop $a
	call [$a],setreach
	jmp l3431
l3444:
	push "-nh"
	cmpst
	jne l3445
	spop $a
	push $6
	spushs
	push 0
	spop $a
	call [$a],hideontake=
	jmp l3431
l3445:
	push "-pck"
	cmpst
	jne l3446
	spop $a
	push $6
	spushs
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	spop $a
	call [$a],setpocket
	add $4,1
	pop $4
	jmp l3431
l3446:
	push "-mask"
	cmpst
	jne l3447
	spop $a
	push $6
	clparent classadvbut,setasmask
	push $6
	spushs
	spop $a
	call [$a],hide
	jmp l3431
l3447:
	push "-inpck"
	cmpst
	jne l3448
	spop $a
	push $6
	spushs
	spop $a
	call [$a],hideontake
	cmp0
	je l3450
	push $6
	spushs
	spop $a
	call [$a],hide
	jmp l3449
l3450:
	push $6
	spushs
	push "but"
	spop $a
	call [$a],setbuttyp
l3449:
	cthis getmainhero
	pop $5
	push $5
	push "null"
	cmpje
	cmp0
	je l3452
	call clcamera,getactor
	pop $5
l3452:
	push $5
	spushs
	spop $a
	call [$a],getpocket
	spushs
	push $6
	spushs
	spop $a
	call [$a],getbutname
	push $6
	spushs
	spop $a
	call [$a],getpocket
	spop $a
	call [$a],additem
	jmp l3431
l3448:
	push "-disable"
	cmpst
	jne l3453
	spop $a
	push $6
	spushs
	spop $a
	call [$a],disable
	jmp l3431
l3453:
	push "-once"
	cmpst
	jne l3454
	spop $a
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	pop $5
	add $4,1
	pop $4
	push $6
	spushs
	push $5
	spop $a
	call [$a],setonce
	push $5
	call clsave,bis
	cmp0
	je l3456
	push $6
	spushs
	spop $a
	call [$a],disable
l3456:
	jmp l3431
l3454:
	push "-cursor"
	cmpst
	jne l3457
	spop $a
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	pop $5
	add $4,1
	pop $4
	push $6
	spushs
	push $5
	spop $a
	call [$a],smousecursor=
	jmp l3431
l3457:
	push "-balpha"
	cmpst
	jne l3458
	spop $a
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	pop $8
	add $4,1
	pop $4
	push $6
	spushs
	push $8
	spop $a
	call [$a],balpha=
	jmp l3431
l3458:
	push "-noautohint"
	cmpst
	jne l3459
	spop $a
	push $6
	spushs
	push 0
	spop $a
	call [$a],bautohint=
	jmp l3431
l3459:
	spop $a
	push $6
	push $2
	push $3
	push $4
	push $2
	spushs
	push $3
	push $4
	push 1
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],get
	cthis subanalizebut
	pop $4
l3431:
	jmp l3429
l3430:
	end method
	method subanalizebut
	localstring $1
	localstring $2
	localint $3
	localint $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $4
	end method
	method _getheropath
	localstring $1
	pop $1
	localstring $2
	push $1
	cthis getpath
	pop $2
	push $2
	call engine,fileexist
	cmp0
	je l3461
	push "$"
	push $2
	pop $b
	popax
	add $a,$b
	jmp l3460
l3461:
	push "$"
	push "heropath:"
	push 1
	call modadv,get
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	add $a,$b
l3460:
	end method
	method loadadventure
	localstring $1
	pop $1
	localstring $2
	call clcadv,get
	pop $2
	localstring $3
	push "grpers"
	call clcadv,size
	pop $b
	popax
	add $a,$b
	pop $3
	push $2
	spushs
	spop $e
	new db,[$e]
	push $2
	spushs
	push $1
	cthis getpath
	spop $a
	call [$a],loadbeh
	localint $4
	push $2
	spushs
	spop $a
	call [$a],getrowsno
	pop $4
	localint $5
	localint $6
	localint $7
	localint $8
	localstring $9
	localstring $10
	localstring $11
	localint $12
	localint $13
	localint $14
	localreal $15
	localreal $16
	push $2
	push "script"
	pop $b
	popax
	add $a,$b
	pop $9
	push $9
	spushs
	push $2
	spop $e
	new Script,[$e]
	localstring $17
	push ""
	pop $17
	push $3
	spushs
	spop $e
	new gmobjvec,[$e]
	localint $18
	push 0
	pop $18
l3462:
	push $18
	push $4
	cmpjl
	cmp0
	je l3463
	jmp l3465
l3464:
	add $18,1
	pop $18
	jmp l3462
l3465:
	push 0
	pop $5
	push $2
	spushs
	push $18
	spop $a
	call [$a],getcolsno
	pop $6
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $9
	add $5,1
	pop $5
	push $9
	spushs
	push "setpath:"
	cmpst
	jne l3467
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $17
	add $5,1
	pop $5
	push $17
	cthis setgraphpath
	jmp l3466
l3467:
	push "nopath:"
	cmpst
	jne l3468
	spop $a
	push ""
	pop $17
	push $17
	cthis setgraphpath
	jmp l3466
l3468:
	push "func"
	cmpst
	jne l3469
	spop $a
l3470:
	push $2
	spushs
	push $18
	push 0
	spop $a
	call [$a],get
	push "end"
	cmpjne
	cmp0
	je l3471
	add $18,1
	pop $18
	jmp l3470
l3471:
	jmp l3466
l3469:
	push "sndpath:"
	cmpst
	jne l3472
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $9
	add $5,1
	pop $5
	push $9
	cthis setwavpath
	jmp l3466
l3472:
	push "hero:"
	cmpst
	je l3474
	push "an:"
	cmpst
	je l3474
	jmp l3473
l3474:
	spop $a
	push $2
	spushs
	push $18
	push "-global"
	spop $a
	call [$a],dbdelvar
	pop $7
	push $2
	spushs
	push $18
	push "-pck"
	spop $a
	call [$a],dbdelvar
	pop $8
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $11
	add $5,1
	pop $5
	push ".pyz"
	call $11,contains
	cmp0
	je l3476
	push $11
	pop $10
	push "an"
	push ".pyz"
	call $11,strsubes
	pop $b
	popax
	add $a,$b
	pop $11
	jmp l3475
l3476:
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $10
	add $5,1
	pop $5
l3475:
	push $9
	push "hero:"
	cmpje
	cmp0
	je l3478
	push ".pyz"
	call $10,contains
	cmp0
	je l3480
	push $10
	cthis _getheropath
	pop $10
l3480:
l3478:
	push ".pyz"
	call $10,contains
	cmp0
	je l3482
	push $7
	cmp0
	je l3484
	push $11
	push $10
	push $8
	call modadvglob,addhero
	cmp0
	je l3486
	push $11
	spushs
	spop $a
	call [$a],setasadvanima
l3486:
	sub $6,1
	pop $6
	jmp l3483
l3484:
	push $11
	push $10
	push 0
	cthis newanima
	push $11
	spushs
	spop $a
	call [$a],setasadvanima
	push $9
	push "hero:"
	cmpje
	cmp0
	je l3488
	push $8
	jmp l3490
l3488:
	push 0
	jmp l3490
l3489:
	push 1
l3490:
	cmp0
	je l3491
	push _spocketpref
	push $11
	pop $b
	popax
	add $a,$b
	spushs
	push $11
	spop $e
	new classadvpocket,[$e]
l3491:
l3483:
	jmp l3481
l3482:
	push $10
	push $11
	cthis copyanima
	push $11
	spushs
	spop $a
	call [$a],setasadvanima
	push $9
	push "hero:"
	cmpje
	cmp0
	je l3493
	push $8
	jmp l3495
l3493:
	push 0
	jmp l3495
l3494:
	push 1
l3495:
	cmp0
	je l3496
	push _spocketpref
	push $11
	pop $b
	popax
	add $a,$b
	spushs
	push $11
	spop $e
	new classadvpocket,[$e]
l3496:
l3481:
	push $8
	cmp0
	je l3498
	sub $6,1
	pop $6
l3498:
	push $9
	push "hero:"
	cmpje
	cmp0
	je l3500
	push _sstndpref
	push $11
	pop $b
	popax
	add $a,$b
	spushs
	spop $e
	new classadvstander,[$e]
	push _stalkpref
	push $11
	pop $b
	popax
	add $a,$b
	pop $10
	push $10
	spushs
	spop $e
	new classtalker,[$e]
	push $10
	spushs
	push $11
	spop $a
	call [$a],set
	push $10
	spushs
	push "gdbsound"
	spop $a
	call [$a],settextdb
l3500:
	push $2
	push $18
	push $5
	push $6
	push $11
	push $3
	push $9
	cthis analizeanopts
	jmp l3466
l3473:
	push "rect:"
	cmpst
	jne l3501
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $9
	add $5,1
	pop $5
	push $9
	spushs
	spop $e
	new ImgRect,[$e]
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $10
	push $10
	clparent StringChecker,isdigit
	neg
	cmp0
	je l3503
	push $9
	spushs
	push $10
	spop $a
	call [$a],operator=
	add $5,1
	pop $5
	jmp l3502
l3503:
	push $9
	spushs
	call $10,to_r
	push igmappw
	pop $b
	popax
	mul $a,$b
	push $2
	spushs
	push $18
	push $5
	push 1
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],get
	spushs
	spop $h
	call $h,to_r
	push igmapph
	pop $b
	popax
	mul $a,$b
	push $2
	spushs
	push $18
	push $5
	push 2
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],get
	spushs
	spop $h
	call $h,to_r
	push igmappw
	pop $b
	popax
	mul $a,$b
	push $2
	spushs
	push $18
	push $5
	push 3
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],get
	spushs
	spop $h
	call $h,to_r
	push igmapph
	pop $b
	popax
	mul $a,$b
	spop $a
	call [$a],setrect
	push 4
	popax
	add $5,$a
	pop $5
l3502:
	jmp l3466
l3501:
	push "anaac:"
	cmpst
	jne l3504
	spop $a
	push $2
	spushs
	push $18
	push "-mask"
	spop $a
	call [$a],dbdelvar
	pop $7
	push 0
	pop $8
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $9
	add $5,1
	pop $5
	push ".pyz"
	call $9,contains
	cmp0
	je l3506
	push $9
	pop $10
	push "an"
	push ".pyz"
	call $9,strsubes
	pop $b
	popax
	add $a,$b
	pop $9
	jmp l3505
l3506:
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $10
	add $5,1
	pop $5
l3505:
	push $7
	cmp0
	je l3508
	sub $6,1
	pop $6
	push $9
	spushs
	spop $e
	new gmmaskvec,[$e]
	jmp l3507
l3508:
	push $9
	spushs
	spop $e
	new gmadvvec,[$e]
l3507:
	push ".pyz"
	call $10,contains
	cmp0
	je l3510
	push "_"
	push $9
	pop $b
	popax
	add $a,$b
	push $10
	push 0
	cthis newanima
	push "_"
	push $9
	pop $b
	popax
	add $a,$b
	pop $10
	push 1
	pop $8
l3510:
	push $10
	push $9
	push $9
	cthis newanactionsgr
	pop $7
	push $2
	push $18
	push $5
	push $9
	cthis analizeaninstr
	pop $5
	push $8
	cmp0
	je l3512
	push $10
	spushs
	spop $a
	call [$a],hide
l3512:
	jmp l3466
l3504:
	push "anaf:"
	cmpst
	jne l3513
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $9
	add $5,1
	pop $5
	push ".pyz"
	call $9,contains
	cmp0
	je l3515
	push $9
	pop $10
	push "an"
	push ".pyz"
	call $9,strsubes
	pop $b
	popax
	add $a,$b
	pop $9
	jmp l3514
l3515:
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $10
	add $5,1
	pop $5
l3514:
	push $9
	spushs
	spop $e
	new gmimgvec,[$e]
	push ".pyz"
	call $10,contains
	cmp0
	je l3517
	push "_"
	push $9
	pop $b
	popax
	add $a,$b
	push $10
	push 0
	cthis newanima
	push "_"
	push $9
	pop $b
	popax
	add $a,$b
	pop $10
l3517:
	push $10
	push $9
	push $9
	cthis newanfrbyactgr
	pop $7
	push $2
	push $18
	push $5
	push $9
	cthis analizeaninstr
	pop $5
	jmp l3466
l3513:
	push "anfac:"
	cmpst
	jne l3518
	spop $a
	push $2
	spushs
	push $18
	push "-mask"
	spop $a
	call [$a],dbdelvar
	pop $7
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $9
	add $5,1
	pop $5
	push $7
	cmp0
	je l3520
	sub $6,1
	pop $6
	push $9
	spushs
	spop $e
	new gmmaskvec,[$e]
	jmp l3519
l3520:
	push $9
	spushs
	spop $e
	new gmadvvec,[$e]
l3519:
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $10
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $11
	add $5,1
	pop $5
	push $10
	push $9
	push $10
	spushs
	push $11
	spop $a
	call [$a],actionnr
	push $9
	cthis newanframesgr
	pop $7
	push $2
	push $18
	push $5
	push $9
	cthis analizeaninstr
	pop $5
	jmp l3466
l3518:
	push "anac:"
	cmpst
	jne l3521
	spop $a
	push $2
	spushs
	push $18
	push "-adv"
	spop $a
	call [$a],dbdelvar
	pop $7
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $9
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $10
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $11
	add $5,1
	pop $5
	push $11
	clparent StringChecker,isdigit
	cmp0
	je l3523
	push $10
	spushs
	push $11
	spop $a
	call [$a],nameofaction
	pop $11
l3523:
	push $10
	push $9
	push $11
	cthis copyanimaact
	push $7
	cmp0
	je l3525
	sub $6,1
	pop $6
	push $9
	spushs
	spop $a
	call [$a],setasadvanima
l3525:
	push $2
	push $18
	push $5
	push $9
	cthis analizeaninstr
	pop $5
	jmp l3466
l3521:
	push "anf:"
	cmpst
	jne l3526
	spop $a
	push $2
	spushs
	push $18
	push "-mask"
	spop $a
	call [$a],dbdelvar
	pop $7
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $9
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $10
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $11
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $8
	add $5,1
	pop $5
	push $10
	push $9
	cthis copyanima
	push $9
	spushs
	push $11
	push $8
	spop $a
	call [$a],setframe
	push $7
	cmp0
	je l3528
	sub $6,1
	pop $6
	push $9
	spushs
	spop $a
	call [$a],setasadvanima
l3528:
	push $2
	push $18
	push $5
	push $9
	cthis analizeaninstr
	pop $5
	jmp l3466
l3526:
	push "anorder:"
	cmpst
	jne l3529
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $9
	add $5,1
	pop $5
	push $2
	push $18
	push $5
	push $9
	cthis analizeaninstr
	pop $5
	jmp l3466
l3529:
	push "behfile:"
	cmpst
	jne l3530
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	cthis loadbehaviours
	add $5,1
	pop $5
	jmp l3466
l3530:
	push "include:"
	cmpst
	jne l3531
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	cthis loadadventure
	add $5,1
	pop $5
	jmp l3466
l3531:
	push "walkqueue:"
	cmpst
	jne l3532
	spop $a
l3533:
	push $5
	push $6
	cmpjl
	cmp0
	je l3534
	push _spathpref
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $b
	popax
	add $a,$b
	call clwalkq,add
	add $5,1
	pop $5
	jmp l3533
l3534:
	jmp l3466
l3532:
	push "font:"
	cmpst
	jne l3535
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $9
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $10
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $7
	add $5,1
	pop $5
	push $9
	spushs
	spop $e
	new font,[$e]
	push $9
	spushs
	push $10
	call $7,igetsc
	spop $a
	call [$a],load
	jmp l3466
l3535:
	push "bkg:"
	cmpst
	jne l3536
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $9
	add $5,1
	pop $5
	push ".pyz"
	call $9,contains
	cmp0
	je l3538
	push "imgbkg"
	push $9
	push 0
	cthis newanima
	jmp l3537
l3538:
	push "imgbkg"
	push $9
	push 0
	cthis newimg
l3537:
	push $2
	push $18
	push $5
	push "imgbkg"
	cthis analizeaninstr
	pop $5
	jmp l3466
l3536:
	push "img:"
	cmpst
	jne l3539
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $9
	add $5,1
	pop $5
	push 0
	push 4
	call $9,gete
	spushs
	push A
	push ".jpg"
	push ".png"
	spop $h
	call $h,in
	cmp0
	je l3541
	push $9
	pop $10
	push "img"
	push 4
	call $9,strsube
	pop $b
	popax
	add $a,$b
	pop $9
	jmp l3540
l3541:
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $10
	add $5,1
	pop $5
l3540:
	push $9
	push $10
	push 0
	cthis newimg
	push $2
	push $18
	push $5
	push $9
	cthis analizeaninstr
	pop $5
	jmp l3466
l3539:
	push "but:"
	cmpst
	je l3543
	push "doors:"
	cmpst
	je l3543
	push "item:"
	cmpst
	je l3543
	jmp l3542
l3543:
	spop $a
	push $9
	push $2
	push $18
	push $5
	cthis analizebut
	jmp l3466
l3542:
	push "camera:"
	cmpst
	jne l3544
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $15
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $16
	add $5,1
	pop $5
	push $15
	push $16
	call clcamera,scalemodifiers
l3545:
	push $5
	push $6
	cmpjl
	cmp0
	je l3546
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $9
	add $5,1
	pop $5
	push $9
	push "-size"
	cmpje
	cmp0
	je l3548
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $7
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $8
	add $5,1
	pop $5
	push $7
	push $8
	call clcamera,setborders
	jmp l3547
l3548:
	push $9
	push "-center"
	cmpje
	cmp0
	je l3550
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $7
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $8
	add $5,1
	pop $5
	push $7
	push $8
	call clcamera,setcenter
	jmp l3549
l3550:
	push $9
	push "-sizebg"
	cmpje
	cmp0
	je l3552
	call imgbkg,getw
	call imgbkg,geth
	call clcamera,setborders
	jmp l3551
l3552:
	push $9
	push "-sizescreen"
	cmpje
	cmp0
	je l3554
	push igmappw
	push igmapph
	call clcamera,setborders
l3554:
l3551:
l3549:
l3547:
	jmp l3545
l3546:
	jmp l3466
l3544:
	push "actor:"
	cmpst
	jne l3555
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	call clcamera,setactor
	add $5,1
	pop $5
	jmp l3466
l3555:
	push "bgr:"
	cmpst
	jne l3556
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $9
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $15
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $16
	add $5,1
	pop $5
	push $9
	spushs
	spop $e
	new classbgplan,[$e]
	push $9
	push $15
	push $16
	call clcamera,addbgr
	jmp l3466
l3556:
	push "pathfinder:"
	cmpst
	jne l3557
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop slastpathf
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $10
	add $5,1
	pop $5
	push ".ptf"
	call $10,contains
	cmp0
	je l3559
	push 20
	pop $7
	push 20
	pop $8
	jmp l3558
l3559:
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $7
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $8
	add $5,1
	pop $5
l3558:
	push slastpathf
	push $10
	push $7
	push $8
	cthis newpathf
	jmp l3466
l3557:
	push "script:"
	cmpst
	jne l3560
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $9
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $10
	add $5,1
	pop $5
	push $9
	spushs
	push $10
	spop $e
	new Script,[$e]
	jmp l3466
l3560:
	push "func:"
	cmpst
	jne l3561
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $10
	add $5,1
	pop $5
	sub $6,1
	pop $6
	call clcadv,size
	push 1
	pop $b
	popax
	sub $a,$b
	pop $7
l3562:
	push $7
	push 0
	cmpjae
	cmp0
	je l3563
	jmp l3565
l3564:
	sub $7,1
	pop $7
	jmp l3562
l3565:
	push $7
	call clcadv,getid
	push "script"
	pop $b
	popax
	add $a,$b
	pop $9
	push $9
	spushs
	push $10
	spop $a
	call [$a],containsfun
	cmp0
	je l3567
	push 3
	pop $7
l3568:
	push $7
	push $6
	cmpjl
	cmp0
	je l3569
	jmp l3571
l3570:
	add $7,1
	pop $7
	jmp l3568
l3571:
	push $9
	spushs
	push $7
	push 3
	pop $b
	popax
	sub $a,$b
	push $2
	spushs
	push $18
	push $7
	spop $a
	call [$a],get
	spop $a
	call [$a],ARG=
	jmp l3570
l3569:
	push 1
	popax
	sub 0,$a
	pop $7
	push $9
	spushs
	push $10
	spop $a
	call [$a],call
l3567:
	jmp l3564
l3563:
	jmp l3466
l3561:
	push "IF"
	cmpst
	jne l3572
	spop $a
	add _if_pos,1
	pop _if_pos
	push $2
	push $18
	push $5
	push $6
	cthis _found_if
	pop $18
	jmp l3466
l3572:
	push "ELSE"
	cmpst
	jne l3573
	spop $a
	push $2
	push $18
	push 1
	pop $b
	popax
	add $a,$b
	cthis _goto_fi
	pop $18
	jmp l3466
l3573:
	push "FI"
	cmpst
	jne l3574
	spop $a
	sub _if_pos,1
	pop _if_pos
	push _if_pos
	push 1
	popax
	sub 0,$a
	cmpjl
	cmp0
	je l3576
	push "FI error! "
	cthis getname
	pop $b
	popax
	add $a,$b
	push "."
	pop $b
	popax
	add $a,$b
	cthis methodname
	pop $b
	popax
	add $a,$b
	spushs
	spop $h
	call $h,print
l3576:
	jmp l3466
l3574:
	push "bsave:"
	cmpst
	jne l3577
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	call clsave,bset
	add $5,1
	pop $5
	jmp l3466
l3577:
	push "save:"
	cmpst
	jne l3578
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $9
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $10
	add $5,1
	pop $5
	push $9
	push $10
	call clsave,set
	jmp l3466
l3578:
	push "stdptf:"
	cmpst
	jne l3579
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop slastpathf
	add $5,1
	pop $5
	jmp l3466
l3579:
	push "sfxs:"
	cmpst
	jne l3580
	spop $a
l3581:
	push $5
	push $6
	cmpjl
	cmp0
	je l3582
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $11
	push "fx"
	push $11
	pop $b
	popax
	add $a,$b
	pop $9
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],dbchecknext
	push "-f"
	cmpje
	cmp0
	je l3584
	push 2
	popax
	add $5,$a
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $11
l3584:
	add $5,1
	pop $5
	push $9
	push $11
	cthis newsfx
	push 1
	pop $7
l3585:
	push $7
	cmp0
	je l3586
	push $5
	push $6
	cmpjl
	jmp l3588
l3586:
	push 0
	jmp l3588
l3587:
	push 1
l3588:
	cmp0
	je l3589
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	spushs
	push "-v"
	cmpst
	je l3592
	push "-vol"
	cmpst
	je l3592
	jmp l3591
l3592:
	spop $a
	add $5,1
	pop $5
	push $9
	spushs
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	spop $a
	call [$a],setvol
	jmp l3590
l3591:
	push "-l"
	cmpst
	jne l3593
	spop $a
	push $9
	spushs
	push "onfinish"
	push "_stdsndloop"
	spop $a
	call [$a],addmethod
	jmp l3590
l3593:
	push "-p"
	cmpst
	jne l3594
	spop $a
	push $9
	spushs
	spop $a
	call [$a],play
	jmp l3590
l3594:
	push "-pl"
	cmpst
	je l3596
	push "-lp"
	cmpst
	je l3596
	push "-n"
	cmpst
	je l3596
	jmp l3595
l3596:
	spop $a
	push $9
	spushs
	spop $a
	call [$a],playloop
	jmp l3590
l3595:
	push "-tp"
	cmpst
	jne l3597
	spop $a
	push $9
	spushs
	spop $a
	call [$a],classadvcontroller5
	jmp l3590
l3597:
	push "-tp1"
	cmpst
	jne l3598
	spop $a
	push $9
	spushs
	spop $a
	call [$a],classadvcontroller6
	jmp l3590
l3598:
	push "-t"
	cmpst
	jne l3599
	spop $a
	add $5,1
	pop $5
	push $9
	spushs
	push "timpauza"
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	push "classadvcontroller7"
	spop $a
	call [$a],timer=
	push $9
	spushs
	spop $a
	call [$a],classadvcontroller8
	jmp l3590
l3599:
	spop $a
	sub $5,1
	pop $5
	push 0
	pop $7
l3590:
	add $5,1
	pop $5
	jmp l3585
l3589:
	jmp l3581
l3582:
	jmp l3466
l3580:
	push "met:"
	cmpst
	jne l3604
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $10
	add $5,1
	pop $5
	push "."
	call $10,contains
	cmp0
	je l3606
	push "."
	call $10,strgetto
	pop $11
	push "."
	call $10,strgetfrom
	pop $10
	push $11
	push ""
	cmpje
	cmp0
	jne l3609
	push $11
	push "this"
	cmpje
	jmp l3610
l3608:
	push 0
	jmp l3610
l3609:
	push 1
l3610:
	cmp0
	je l3611
	call gameapi,getgamename
	pop $11
l3611:
	jmp l3605
l3606:
	call gameapi,getgamename
	pop $11
l3605:
	push $11
	call gameapi,getgamename
	cmpje
	cmp0
	je l3613
	push $11
	spushs
	push $10
	spushs
	spop $d
	spop $a
	 clparent [$a],[$d]
	jmp l3612
l3613:
	push $11
	spushs
	push $10
	spushs
	spop $d
	spop $a
	call [$a],[$d]
l3612:
	jmp l3466
l3604:
	push "sndsrc:"
	cmpst
	jne l3614
	spop $a
	call csndsrc,get
	pop $11
	push $11
	spushs
	spop $e
	new int,[$e]
	push $11
	spushs
	push A
	push "slinkedfx"
	push "null"
	push "ioutervol"
	push 0
	push "rradious"
	push 0.0
	push "slinkedobj"
	push "null"
	push "iobjx"
	push 0
	push "iobjy"
	push 0
	push "imaxvol"
	push 0
	spop $a
	call [$a],vars2
	push $11
	spushs
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	spop $a
	call [$a],slinkedfx=
	add $5,1
	pop $5
	push $11
	spushs
	push $11
	spushs
	spop $a
	call [$a],slinkedfx
	spushs
	spop $a
	call [$a],getvol
	spop $a
	call [$a],imaxvol=
	push $11
	spushs
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	spop $a
	call [$a],ioutervol=
	add $5,1
	pop $5
	push $11
	spushs
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	spop $a
	call [$a],rradious=
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $10
	push $11
	spushs
	push $10
	spop $a
	call [$a],slinkedobj=
	push $10
	push "-pos"
	cmpje
	cmp0
	je l3616
	add $5,1
	pop $5
	push $11
	spushs
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	spop $a
	call [$a],iobjx=
	add $5,1
	pop $5
	push $11
	spushs
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	spop $a
	call [$a],iobjy=
l3616:
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],dbchecknext
	spushs
	push "-v"
	cmpst
	je l3619
	push "-vol"
	cmpst
	je l3619
	jmp l3618
l3619:
	spop $a
	push 2
	popax
	add $5,$a
	pop $5
	push $11
	spushs
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	spop $a
	call [$a],imaxvol=
	jmp l3617
l3618:
	spop $a
l3617:
	add $5,1
	pop $5
	push $11
	call grsndsrcs,add
	push 1
	call _timsndsrc,stop
	jmp l3466
l3614:
	spop $a
	call gameapi,getgamename
	spushs
	push $2
	push $18
	push $5
	push $9
	spop $a
	call [$a],subloadadventure
	pop $5
l3466:
	jmp l3464
l3463:
	push $2
	spushs
	spop $a
	call [$a],readonly
	end method
	method classadvcontroller5
	call timpauza,play
	end method
	method classadvcontroller6
	push 0
	call timpauza,bloop=
	call timpauza,play
	end method
	method classadvcontroller7
	localint $1
	push 1
	pop $1
	push bfirst
	cmp0
	je l3601
	push 0
	pop bfirst
	jmp l3600
l3601:
	push bloop
	pop $1
l3600:
	push $1
	cmp0
	je l3603
	cthis getbuildername
	spushs
	spop $a
	call [$a],play
l3603:
	end method
	method classadvcontroller8
	push "onfinish"
	push "classadvcontroller9"
	cthis addmethod
	push A
	push "bloop"
	push 1
	push "bfirst"
	push 1
	call timpauza,vars2
	end method
	method classadvcontroller9
	call timpauza,play
	end method
	method subloadadventure
	localstring $1
	localint $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $3
	end method
	method _found_if
	localstring $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	add $3,1
	pop $3
	localint $5
	push 0
	pop $5
	localint $6
	push 0
	pop $6
	sub $4,1
	pop $4
	localstring $7
	localstring $8
l3620:
	push $3
	push $4
	cmpjl
	cmp0
	je l3621
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $7
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],dbchecknext
	pop $8
	push $8
	spushs
	push ")"
	cmpst
	je l3624
	push "|"
	cmpst
	je l3624
	push "&"
	cmpst
	je l3624
	jmp l3623
l3624:
	spop $a
	push $5
	push $6
	push 0
	push 1
	call $7,getb
	push "!"
	cmpje
	cmp0
	je l3626
	push 1
	call $7,strsubb
	push 1
	cthis _check_if_var
	neg
	jmp l3625
l3626:
	push $7
	push 1
	cthis _check_if_var
l3625:
	cthis _check_if
	pop $6
	push $8
	push "|"
	cmpje
	cmp0
	je l3628
	push 1
	pop $5
	jmp l3627
l3628:
	push $8
	push "&"
	cmpje
	cmp0
	je l3630
	push 2
	pop $5
l3630:
l3627:
	jmp l3622
l3623:
	push "="
	cmpst
	jne l3631
	spop $a
	push 2
	popax
	add $3,$a
	pop $3
	push $5
	push $6
	push $7
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	cthis _check_if_var
	cthis _check_if
	pop $6
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],dbchecknext
	cthis _check_if2
	pop $5
	jmp l3622
l3631:
	push "!="
	cmpst
	jne l3632
	spop $a
	push 2
	popax
	add $3,$a
	pop $3
	push $5
	push $6
	push $7
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	cthis _check_if_var
	neg
	cthis _check_if
	pop $6
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],dbchecknext
	cthis _check_if2
	pop $5
	jmp l3622
l3632:
	push "<"
	cmpst
	jne l3633
	spop $a
	push 2
	popax
	add $3,$a
	pop $3
	push $5
	push $6
	push $7
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	cthis _check_if_lessvar
	cthis _check_if
	pop $6
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],dbchecknext
	cthis _check_if2
	pop $5
	jmp l3622
l3633:
	push ">"
	cmpst
	jne l3634
	spop $a
	push 2
	popax
	add $3,$a
	pop $3
	push $5
	push $6
	push $7
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	cthis _check_if_greatervar
	cthis _check_if
	pop $6
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],dbchecknext
	cthis _check_if2
	pop $5
	jmp l3622
l3634:
	push "<="
	cmpst
	jne l3635
	spop $a
	push 2
	popax
	add $3,$a
	pop $3
	push $5
	push $6
	push $7
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	cthis _check_if_lesseqvar
	cthis _check_if
	pop $6
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],dbchecknext
	cthis _check_if2
	pop $5
	jmp l3622
l3635:
	push ">="
	cmpst
	jne l3636
	spop $a
	push 2
	popax
	add $3,$a
	pop $3
	push $5
	push $6
	push $7
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	cthis _check_if_greatereqvar
	cthis _check_if
	pop $6
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],dbchecknext
	cthis _check_if2
	pop $5
	jmp l3622
l3636:
	spop $a
l3622:
	push 2
	popax
	add $3,$a
	pop $3
	jmp l3620
l3621:
	push $6
	neg
	cmp0
	je l3638
	push $1
	push $2
	push 1
	pop $b
	popax
	add $a,$b
	cthis _goto_fi
	jmp l3637
l3638:
	push $2
l3637:
	end method
	method _check_if_var
	localstring $1
	localstring $2
	pop $2
	pop $1
	push 0
	push 1
	call $1,getb
	push "."
	cmpje
	cmp0
	je l3640
	call gameapi,getgamename
	spushs
	push 1
	call $1,strsubb
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	push $2
	cmpje
	jmp l3639
l3640:
	push $1
	push $2
	call clsave,is
l3639:
	end method
	method _check_if_lessvar
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	call clsave,get
	spushs
	spop $h
	call $h,to_r
	call $2,to_r
	cmpjl
	end method
	method _check_if_greatervar
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	call clsave,get
	spushs
	spop $h
	call $h,to_r
	call $2,to_r
	cmpja
	end method
	method _check_if_lesseqvar
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	call clsave,get
	spushs
	spop $h
	call $h,to_r
	call $2,to_r
	cmpjle
	end method
	method _check_if_greatereqvar
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	call clsave,get
	spushs
	spop $h
	call $h,to_r
	call $2,to_r
	cmpjae
	end method
	method _goto_fi
	localstring $1
	localint $2
	pop $2
	pop $1
	localint $3
	push _if_pos
	pop $3
l3641:
	push 1
	cmp0
	je l3642
	push $1
	spushs
	push $2
	push 0
	spop $a
	call [$a],get
	spushs
	push "IF"
	cmpst
	jne l3644
	spop $a
	add $3,1
	pop $3
	jmp l3643
l3644:
	push "ELSE"
	cmpst
	jne l3645
	spop $a
	push $3
	push _if_pos
	cmpje
	cmp0
	je l3647
	push $2
	ret
l3647:
	jmp l3643
l3645:
	push "FI"
	cmpst
	jne l3648
	spop $a
	push $3
	push _if_pos
	cmpje
	cmp0
	je l3650
	sub _if_pos,1
	pop _if_pos
	push $2
	ret
	jmp l3649
l3650:
	sub $3,1
	pop $3
l3649:
	jmp l3643
l3648:
	spop $a
l3643:
	add $2,1
	pop $2
	jmp l3641
l3642:
	end method
	method _check_if2
	localstring $1
	pop $1
	push $1
	spushs
	push "|"
	cmpst
	jne l3652
	spop $a
	push 1
	jmp l3651
l3652:
	push "&"
	cmpst
	jne l3653
	spop $a
	push 2
	jmp l3651
l3653:
	spop $a
	push 0
l3651:
	end method
	method _check_if
	localint $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	push 1
	cmpst
	jne l3655
	spop $a
	push $2
	cmp0
	jne l3657
	push $3
	jmp l3658
l3656:
	push 0
	jmp l3658
l3657:
	push 1
l3658:
	jmp l3654
l3655:
	push 2
	cmpst
	jne l3659
	spop $a
	push $2
	cmp0
	je l3660
	push $3
	jmp l3662
l3660:
	push 0
	jmp l3662
l3661:
	push 1
l3662:
	jmp l3654
l3659:
	spop $a
	push $3
l3654:
	end method
	method behrewind
	push sactbeh
	push "null"
	cmpjne
	cmp0
	je l3664
	push sactbeh
	spushs
	spop $a
	call [$a],rewind
l3664:
	end method
	method behplaying
	push sactbeh
	push "null"
	cmpjne
	end method
	method behempty
	push sactbeh
	push "null"
	cmpje
	end method
	method behexist
	localstring $1
	pop $1
	push $1
	cthis getbeh
	call engine,varexist
	end method
	method getbeh
	localstring $1
	pop $1
	push _sbeh
	push $1
	pop $b
	popax
	add $a,$b
	end method
	method newbehname
	localstring $1
	push _sbeh
	push "_"
	pop $b
	popax
	add $a,$b
	push iidbeh
	pop $b
	popax
	add $a,$b
	pop $1
	add iidbeh,1
	pop iidbeh
	push $1
	end method
	method newbeh
	localstring $1
	cthis newbehname
	pop $1
	push $1
	spushs
	spop $e
	new classbehhero,[$e]
	push $1
	end method
	method _checkvol
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	localdef $4
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],dbchecknext
	pop $4
	push $4
	push "-v"
	cmpje
	cmp0
	jne l3667
	push $4
	push "-vol"
	cmpje
	jmp l3668
l3666:
	push 0
	jmp l3668
l3667:
	push 1
l3668:
	cmp0
	je l3669
	push 2
	popax
	add $3,$a
	pop $3
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	push $3
	push 1
	pop $b
	popax
	add $a,$b
	ret
	jmp l3665
l3669:
	push 100
	push $3
	push 1
	pop $b
	popax
	add $a,$b
	ret
l3665:
	end method
	method loadbeh
	localstring $1
	localint $2
	localint $3
	localint $4
	localstring $5
	localstring $6
	localint $7
	localint $8
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	localstring $9
	localstring $10
	localstring $11
	localstring $12
	localint $13
	push $5
	spushs
	spop $a
	call [$a],getblock
	pop $13
	localint $14
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $9
	add $4,1
	pop $4
	cthis newbeh
	pop $10
	localint $15
	localint $16
	push $9
	spushs
	push "IF"
	cmpst
	je l3672
	push "ELIF"
	cmpst
	je l3672
	jmp l3671
l3672:
	spop $a
	push $4
	push 1
	pop $b
	popax
	add $a,$b
	pop $15
l3673:
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	push ")"
	cmpjne
	cmp0
	je l3674
	add $4,1
	pop $4
	jmp l3673
l3674:
	push $10
	spushs
	push "setas"
	push $9
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	push $2
	push $15
	push $4
	spop $d
	spop $a
	call [$a],[$d]
	add $4,1
	pop $4
	jmp l3670
l3671:
	push "FI"
	cmpst
	je l3676
	push "ELSE"
	cmpst
	je l3676
	jmp l3675
l3676:
	spop $a
	push $10
	spushs
	push $9
	spop $a
	call [$a],setas
	jmp l3670
l3675:
	push "call:"
	cmpst
	jne l3677
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $9
	add $4,1
	pop $4
	push $10
	spushs
	push $9
	push $1
	push "script"
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setascaller
	jmp l3670
l3677:
	push "walk:"
	cmpst
	jne l3678
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $9
	add $4,1
	pop $4
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $11
	add $4,1
	pop $4
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $12
	add $4,1
	pop $4
	push $10
	spushs
	push _spathpref
	push $9
	pop $b
	popax
	add $a,$b
	push $11
	push $12
	spop $a
	call [$a],setaswalker
	jmp l3670
l3678:
	push "turn:"
	cmpst
	jne l3679
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $9
	add $4,1
	pop $4
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $11
	add $4,1
	pop $4
	push $10
	spushs
	push _spathpref
	push $9
	pop $b
	popax
	add $a,$b
	push $11
	spop $a
	call [$a],setasturn
	jmp l3670
l3679:
	push "setpos:"
	cmpst
	jne l3680
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $9
	add $4,1
	pop $4
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $11
	add $4,1
	pop $4
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $16
	push 0
	pop $15
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],dbchecknext
	pop $12
	push $12
	push "-ssc"
	cmpje
	cmp0
	je l3682
	push 1
	pop $15
	add $4,1
	pop $4
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],dbchecknext
	pop $12
l3682:
	push $12
	push "-dir"
	cmpje
	cmp0
	je l3684
	push 2
	popax
	add $4,$a
	pop $4
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $12
	jmp l3683
l3684:
	push "auto"
	pop $12
l3683:
	add $4,1
	pop $4
	push $10
	spushs
	push $9
	push $11
	push $16
	push $15
	push $12
	spop $a
	call [$a],setasposer
	jmp l3670
l3680:
	push "game:"
	cmpst
	jne l3685
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $9
	add $4,1
	pop $4
	push $9
	spushs
	push "-def"
	cmpst
	je l3688
	push "-adv"
	cmpst
	je l3688
	jmp l3687
l3688:
	spop $a
	push $10
	spushs
	push $9
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	push $1
	spushs
	push $2
	push $4
	push 1
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],get
	spop $a
	call [$a],setasnewgamer
	push 2
	popax
	add $4,$a
	pop $4
	jmp l3686
l3687:
	spop $a
	push $10
	spushs
	push "null"
	push "null"
	push $9
	spop $a
	call [$a],setasnewgamer
l3686:
	jmp l3670
l3685:
	push "ref:"
	cmpst
	jne l3689
	spop $a
	push "_"
	push iidbeh
	pop $b
	popax
	add $a,$b
	push $1
	push $2
	push $4
	cthis buildbeh
	pop $4
	cthis newbehname
	pop $9
	push $10
	spushs
	push _sbeh
	call $9,strsubbs
	push $1
	push "script"
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setascaller
	jmp l3670
l3689:
	push "anplay:"
	cmpst
	jne l3690
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $9
	add $4,1
	pop $4
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $11
	add $4,1
	pop $4
	push $10
	spushs
	push $9
	push $11
	spop $a
	call [$a],setasanplayer
	jmp l3670
l3690:
	push "anfin:"
	cmpst
	jne l3691
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $9
	add $4,1
	pop $4
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $15
	add $4,1
	pop $4
	push $10
	spushs
	push $9
	push $15
	spop $a
	call [$a],setasanfin
	jmp l3670
l3691:
	push "anfout:"
	cmpst
	jne l3692
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $9
	add $4,1
	pop $4
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $15
	add $4,1
	pop $4
	push $10
	spushs
	push $9
	push $15
	spop $a
	call [$a],setasanfout
	jmp l3670
l3692:
	push "anorder:"
	cmpst
	jne l3693
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $11
	add $4,1
	pop $4
	push $10
	spushs
	push $1
	push $2
	push $4
	push $11
	spop $a
	call [$a],setasanorder
	push $1
	push $2
	push $4
	push "null"
	cthis analizeaninstr
	pop $4
	jmp l3670
l3693:
	push "sndbg:"
	cmpst
	je l3695
	push "sndbgcol:"
	cmpst
	je l3695
	jmp l3694
l3695:
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $11
	push $1
	push $2
	push $4
	cthis _checkvol
	pop $4
	pop $15
	push $10
	spushs
	push SNDPATH
	push $11
	pop $b
	popax
	add $a,$b
	push $15
	spop $a
	call [$a],setassndbg
	push $9
	push "sndbgcol:"
	cmpje
	cmp0
	je l3697
	push $10
	spushs
	push A
	push "irtxt"
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	spushs
	spop $h
	call $h,to_i
	push "igtxt"
	push $1
	spushs
	push $2
	push $4
	push 1
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],get
	spushs
	spop $h
	call $h,to_i
	push "ibtxt"
	push $1
	spushs
	push $2
	push $4
	push 2
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],get
	spushs
	spop $h
	call $h,to_i
	spop $a
	call [$a],vars2
	push 3
	popax
	add $4,$a
	pop $4
l3697:
	jmp l3670
l3694:
	push "sndplay:"
	cmpst
	je l3699
	push "sndplaycol:"
	cmpst
	je l3699
	jmp l3698
l3699:
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $11
	push $1
	push $2
	push $4
	cthis _checkvol
	pop $4
	pop $15
	push $10
	spushs
	push SNDPATH
	push $11
	pop $b
	popax
	add $a,$b
	push $15
	spop $a
	call [$a],setassndplayer
	push $9
	push "sndplaycol:"
	cmpje
	cmp0
	je l3701
	push $10
	spushs
	push A
	push "irtxt"
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	spushs
	spop $h
	call $h,to_i
	push "igtxt"
	push $1
	spushs
	push $2
	push $4
	push 1
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],get
	spushs
	spop $h
	call $h,to_i
	push "ibtxt"
	push $1
	spushs
	push $2
	push $4
	push 2
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],get
	spushs
	spop $h
	call $h,to_i
	spop $a
	call [$a],vars2
	push 3
	popax
	add $4,$a
	pop $4
l3701:
	jmp l3670
l3698:
	push "fxplay:"
	cmpst
	jne l3702
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $9
	push $1
	push $2
	push $4
	cthis _checkvol
	pop $4
	pop $15
	push $10
	spushs
	push SFXPATH
	push $9
	pop $b
	popax
	add $a,$b
	push $15
	spop $a
	call [$a],setassndplayer
	jmp l3670
l3702:
	push "fxbg:"
	cmpst
	jne l3703
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $11
	push $1
	push $2
	push $4
	cthis _checkvol
	pop $4
	pop $15
	push $10
	spushs
	push SFXPATH
	push $11
	pop $b
	popax
	add $a,$b
	push $15
	spop $a
	call [$a],setassndbg
	jmp l3670
l3703:
	push "wait:"
	cmpst
	jne l3704
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $15
	add $4,1
	pop $4
	push $10
	spushs
	push $15
	spop $a
	call [$a],setaswaiter
	jmp l3670
l3704:
	push "read:"
	cmpst
	jne l3705
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $9
	add $4,1
	pop $4
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $15
	add $4,1
	pop $4
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $16
	add $4,1
	pop $4
	push "auto"
	pop $11
	push $1
	spushs
	push $2
	spop $a
	call [$a],getcolsno
	push $4
	cmpja
	cmp0
	je l3707
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $11
	push $11
	push "-dir"
	cmpje
	cmp0
	je l3709
	add $4,1
	pop $4
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $11
	add $4,1
	pop $4
l3709:
l3707:
	push $10
	spushs
	push $9
	push $15
	push $16
	push $11
	spop $a
	call [$a],setasreader
	jmp l3670
l3705:
	push "met:"
	cmpst
	jne l3710
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $9
	add $4,1
	pop $4
	call gameapi,getgamename
	pop $12
	localdef $17
	push "null"
	pop $17
	push "."
	call $9,contains
	cmp0
	je l3712
	push "."
	pop $17
l3712:
	push "::"
	call $9,contains
	cmp0
	je l3714
	push "::"
	pop $17
l3714:
	push $17
	push "null"
	cmpjne
	cmp0
	je l3716
	push $17
	call $9,strgetto
	pop $11
	push $17
	call $9,strgetfrom
	pop $9
	push $11
	push ""
	cmpje
	cmp0
	jne l3719
	push $11
	push "this"
	cmpje
	jmp l3720
l3718:
	push 0
	jmp l3720
l3719:
	push 1
l3720:
	cmp0
	je l3721
	push $12
	pop $11
l3721:
	jmp l3715
l3716:
	push $12
	pop $11
l3715:
	push $1
	spushs
	push $2
	push $4
	push 1
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],dbchecknext
	pop $12
	push $12
	push "("
	cmpje
	cmp0
	je l3723
	add $4,1
	pop $4
	push $4
	pop $15
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $12
	add $4,1
	pop $4
l3724:
	push $12
	push ")"
	cmpjne
	cmp0
	je l3725
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $12
	add $4,1
	pop $4
	jmp l3724
l3725:
	jmp l3722
l3723:
	push 1
	popax
	sub 0,$a
	pop $15
l3722:
	push $10
	spushs
	push $11
	push $9
	push $17
	push $1
	push $2
	push $15
	spop $a
	call [$a],setasmet
	jmp l3670
l3710:
	push "bsave:"
	cmpst
	jne l3726
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $9
	add $4,1
	pop $4
	push $10
	spushs
	push $9
	push "1"
	spop $a
	call [$a],setassaver
	jmp l3670
l3726:
	push "save:"
	cmpst
	jne l3727
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $9
	add $4,1
	pop $4
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $11
	add $4,1
	pop $4
	push $10
	spushs
	push $9
	push $11
	spop $a
	call [$a],setassaver
	jmp l3670
l3727:
	push "script:"
	cmpst
	jne l3728
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $9
	add $4,1
	pop $4
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $11
	add $4,1
	pop $4
	push $10
	spushs
	push $9
	push $11
	spop $a
	call [$a],setasscript
	jmp l3670
l3728:
	push "func:"
	cmpst
	jne l3729
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $11
	call clcbeh,size
	push 1
	pop $b
	popax
	sub $a,$b
	pop $16
l3730:
	push $16
	push 0
	cmpjae
	cmp0
	je l3731
	jmp l3733
l3732:
	sub $16,1
	pop $16
	jmp l3730
l3733:
	push $16
	call clcbeh,getid
	push "script"
	pop $b
	popax
	add $a,$b
	pop $9
	push $9
	spushs
	push $11
	spop $a
	call [$a],containsfun
	cmp0
	je l3735
	push 1
	popax
	sub 0,$a
	pop $16
l3735:
	jmp l3732
l3731:
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],dbchecknext
	push "("
	cmpje
	cmp0
	je l3737
	push $4
	push 2
	pop $b
	popax
	add $a,$b
	pop $16
l3738:
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	push ")"
	cmpjne
	cmp0
	je l3739
	add $4,1
	pop $4
	jmp l3738
l3739:
	jmp l3736
l3737:
	push 1
	popax
	sub 0,$a
	pop $16
l3736:
	add $4,1
	pop $4
	push $10
	spushs
	push $9
	push $11
	push $1
	push $2
	push $16
	spop $a
	call [$a],setasscript
	jmp l3670
l3729:
	push "use:"
	cmpst
	jne l3740
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $9
	add $4,1
	pop $4
	push $10
	spushs
	push $9
	spop $a
	call [$a],setasuse
	jmp l3670
l3740:
	push "topck:"
	cmpst
	jne l3741
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $11
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],dbchecknext
	push "-pck"
	cmpje
	cmp0
	je l3743
	push 2
	popax
	add $4,$a
	pop $4
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $12
	jmp l3742
l3743:
	push $11
	pop $12
l3742:
	add $4,1
	pop $4
	push $10
	spushs
	push $11
	push $12
	spop $a
	call [$a],setastopck
	jmp l3670
l3741:
	push "enter:"
	cmpst
	jne l3744
	spop $a
	push $10
	spushs
	spop $a
	call [$a],setasenter
	jmp l3670
l3744:
	push "close:"
	cmpst
	jne l3745
	spop $a
	push $10
	spushs
	spop $a
	call [$a],setasclose
	jmp l3670
l3745:
	push "music:"
	cmpst
	jne l3746
	spop $a
	push $4
	push 1
	pop $b
	popax
	add $a,$b
	pop $16
l3747:
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	push ")"
	cmpjne
	cmp0
	je l3748
	add $4,1
	pop $4
	jmp l3747
l3748:
	push $10
	spushs
	push $1
	push $2
	push $16
	push $4
	spop $a
	call [$a],setasmusic
	add $4,1
	pop $4
	jmp l3670
l3746:
	push "return"
	cmpst
	jne l3749
	spop $a
	push $10
	spushs
	spop $a
	call [$a],setasreturn
	jmp l3670
l3749:
	spop $a
	push $9
	push $10
	push $1
	push $2
	push $4
	cthis subloadbeh
	pop $16
	push $16
	push $4
	cmpjae
	cmp0
	je l3751
	push $16
	pop $4
	jmp l3750
l3751:
	push "_"
	call $9,strgetto
	pop $12
	push $12
	cthis getheroloader
	pop $11
	push $11
	push "null"
	cmpje
	cmp0
	je l3753
	push igmdebug
	cmp0
	je l3755
	push $10
	push ": "
	pop $b
	popax
	add $a,$b
	push $9
	pop $b
	popax
	add $a,$b
	push " loadbeh error: no hero linked to "
	pop $b
	popax
	add $a,$b
	push $12
	pop $b
	popax
	add $a,$b
	call engine,print
l3755:
	push $10
	push $3
	ret
	jmp l3752
l3753:
	localint $18
	localint $19
	push $11
	spushs
	spop $a
	call [$a],getstartstop
	pop $19
	pop $18
	localstring $20
	push "auto"
	pop $20
	localstring $21
	push "_stalk"
	call modadv,varget
	pop $21
	localint $22
	push 1
	pop $22
	push $4
	push $3
	cmpjl
	pop $14
l3756:
	push $14
	cmp0
	je l3757
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $12
	add $4,1
	pop $4
	push $12
	spushs
	push "-stt"
	cmpst
	jne l3759
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $18
	add $4,1
	pop $4
	jmp l3758
l3759:
	push "-stp"
	cmpst
	jne l3760
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $19
	add $4,1
	pop $4
	jmp l3758
l3760:
	push "-base"
	cmpst
	jne l3761
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $21
	add $4,1
	pop $4
	jmp l3758
l3761:
	push "-r"
	cmpst
	jne l3762
	spop $a
	push 1
	pop $22
	jmp l3758
l3762:
	push "-nr"
	cmpst
	jne l3763
	spop $a
	push 0
	pop $22
	jmp l3758
l3763:
	push "-dir"
	cmpst
	jne l3764
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $20
	add $4,1
	pop $4
	jmp l3758
l3764:
	spop $a
	push 0
	pop $14
	sub $4,1
	pop $4
l3758:
	push $14
	cmp0
	je l3766
	push $4
	push $3
	cmpjae
	jmp l3768
l3766:
	push 0
	jmp l3768
l3767:
	push 1
l3768:
	cmp0
	je l3769
	push 0
	pop $14
l3769:
	jmp l3756
l3757:
	push $10
	spushs
	push $11
	spushs
	push "sanhero"
	spop $a
	call [$a],varget
	push SNDPATH
	push $9
	pop $b
	popax
	add $a,$b
	push $21
	push $22
	push $18
	push $19
	push $20
	spop $a
	call [$a],setastalker
l3752:
l3750:
l3670:
	push $5
	spushs
	push $10
	spop $a
	call [$a],addtostarter
	push $7
	push 0
	cmpje
	cmp0
	je l3771
	push $6
	spushs
	push $10
	spop $a
	call [$a],setflags
	push $10
	spushs
	push $5
	push $13
	push $8
	spop $a
	call [$a],addflags
	jmp l3770
l3771:
	push $6
	spushs
	push "null"
	spop $a
	call [$a],setflags
	push $10
	spushs
	push $5
	push $13
	push 0
	spop $a
	call [$a],addflags
l3770:
	push $10
	push $4
	ret
	end method
	method subloadbeh
	localstring $1
	localstring $2
	localstring $3
	localint $4
	localint $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $5
	end method
	method buildbeh
	localstring $1
	localstring $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	localint $5
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	call dbmacros,findbyrow
	pop $5
	push $5
	push 0
	cmpjl
	cmp0
	je l3773
	push "no such macro: "
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	pop $b
	popax
	add $a,$b
	call engine,print
	push 1
	popax
	sub 0,$a
	ret
l3773:
l3774:
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	push "("
	cmpjne
	cmp0
	je l3775
	add $4,1
	pop $4
	jmp l3774
l3775:
	add $4,1
	pop $4
	localint $6
	push $2
	spushs
	spop $a
	call [$a],addrow
	push 1
	pop $b
	popax
	sub $a,$b
	pop $6
	localstring $7
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	pop $7
	add $4,1
	pop $4
	call _vecarg,free
l3776:
	push $7
	push ")"
	cmpjne
	cmp0
	je l3777
	push $7
	call _vecarg,add
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	pop $7
	add $4,1
	pop $4
	jmp l3776
l3777:
	localint $8
	push $5
	call dbmacros,getcolsno
	pop $8
	localint $9
	push $2
	spushs
	push $6
	push $1
	spop $a
	call [$a],add
	localstring $10
	localint $11
	push 1
	pop $11
l3778:
	push $11
	push $8
	cmpjl
	cmp0
	je l3779
	jmp l3781
l3780:
	add $11,1
	pop $11
	jmp l3778
l3781:
	push $5
	push $11
	call dbmacros,get
	pop $7
	push ""
	pop $10
l3782:
	push "$"
	call $7,contains
	cmp0
	je l3783
	push "$"
	call $7,strgetto
	popax
	add $10,$a
	pop $10
	push "$"
	call $7,strgetfrom
	pop $7
	push 0
	push 1
	call $7,getb
	push "["
	cmpje
	cmp0
	je l3785
	push "["
	call $7,strgetfrom
	pop $9
	push "]"
	call $7,strgetfrom
	pop $7
	jmp l3784
l3785:
	push $7
	pop $9
	push ""
	pop $7
l3784:
	push $9
	push 1
	pop $b
	popax
	sub $a,$b
	call _vecarg,get
	popax
	add $10,$a
	pop $10
	jmp l3782
l3783:
	push $7
	push ""
	cmpjne
	cmp0
	je l3787
	push $7
	popax
	add $10,$a
	pop $10
l3787:
	push $2
	spushs
	push $6
	push $10
	spop $a
	call [$a],add
	jmp l3780
l3779:
	push $4
	end method
	method subaddbehs
	localstring $1
	pop $1
	end method
	method loadbehaviours
	localstring $1
	pop $1
	localstring $2
	call clcbeh,get
	pop $2
	push $2
	spushs
	spop $e
	new db,[$e]
	push $2
	spushs
	push $1
	cthis getpath
	spop $a
	call [$a],loadbeh
	push $2
	cthis subaddbehs
	localstring $3
	push $2
	push "script"
	pop $b
	popax
	add $a,$b
	pop $3
	push $3
	spushs
	push $2
	spop $e
	new Script,[$e]
	localint $4
	localint $5
	localstring $6
	localstring $7
	localstring $8
	localstring $9
	localint $10
	localint $11
	localstring $12
	localint $13
	localint $14
	localint $15
	localint $16
	localstring $17
	localstring $18
	localint $19
	push 0
	pop $19
l3788:
	push $19
	push $2
	spushs
	spop $a
	call [$a],getrowsno
	cmpjl
	cmp0
	je l3789
	jmp l3791
l3790:
	add $19,1
	pop $19
	jmp l3788
l3791:
	push 0
	pop $5
	push $2
	spushs
	push $19
	push $5
	spop $a
	call [$a],get
	pop $6
	add $5,1
	pop $5
	push $6
	spushs
	push "macro:"
	cmpst
	jne l3793
	spop $a
	push $2
	push $19
	push 1
	call dbmacros,dbaddrowfrom
	jmp l3792
l3793:
	push "include:"
	cmpst
	jne l3794
	spop $a
	push $2
	spushs
	push $19
	push $5
	spop $a
	call [$a],get
	cthis loadbehaviours
	add $5,1
	pop $5
	jmp l3792
l3794:
	push "build:"
	cmpst
	jne l3795
	spop $a
	push $2
	spushs
	push $19
	push $5
	spop $a
	call [$a],get
	push $2
	push $19
	push $5
	push 1
	pop $b
	popax
	add $a,$b
	cthis buildbeh
	pop $5
	jmp l3792
l3795:
	push "func"
	cmpst
	jne l3796
	spop $a
l3797:
	push $2
	spushs
	push $19
	push 0
	spop $a
	call [$a],get
	push "end"
	cmpjne
	cmp0
	je l3798
	add $19,1
	pop $19
	jmp l3797
l3798:
	jmp l3792
l3796:
	push "IF"
	cmpst
	jne l3799
	spop $a
	add _if_pos,1
	pop _if_pos
	push $2
	push $19
	push $5
	push $2
	spushs
	push $19
	spop $a
	call [$a],getcolsno
	cthis _found_if
	pop $19
	jmp l3792
l3799:
	push "ELSE"
	cmpst
	jne l3800
	spop $a
	push $2
	push $19
	push 1
	pop $b
	popax
	add $a,$b
	cthis _goto_fi
	pop $19
	jmp l3792
l3800:
	push "FI"
	cmpst
	jne l3801
	spop $a
	sub _if_pos,1
	pop _if_pos
	push _if_pos
	push 1
	popax
	sub 0,$a
	cmpjl
	cmp0
	je l3803
	push "FI error! "
	cthis getname
	pop $b
	popax
	add $a,$b
	push "."
	pop $b
	popax
	add $a,$b
	cthis methodname
	pop $b
	popax
	add $a,$b
	spushs
	spop $h
	call $h,print
l3803:
	jmp l3792
l3801:
	spop $a
	push $2
	spushs
	push $19
	spop $a
	call [$a],getcolsno
	pop $4
	push $6
	cthis getbeh
	pop $6
	push $6
	spushs
	spop $e
	new classbehhero,[$e]
	push 0
	pop $10
	push 1
	pop $11
	push "null"
	pop $12
	push 0
	pop $13
	push 1
	pop $14
	push "null"
	pop $18
	push 1
	popax
	sub 0,$a
	pop $16
	push 0
	pop $15
l3804:
	push $11
	cmp0
	je l3805
	push $2
	spushs
	push $19
	push $5
	spop $a
	call [$a],get
	pop $7
	add $5,1
	pop $5
	push $7
	spushs
	push "-nr"
	cmpst
	jne l3807
	spop $a
	push 0
	pop $10
	jmp l3806
l3807:
	push "-once"
	cmpst
	jne l3808
	spop $a
	push $2
	spushs
	push $19
	push $5
	spop $a
	call [$a],get
	pop $12
	add $5,1
	pop $5
	jmp l3806
l3808:
	push "-par"
	cmpst
	jne l3809
	spop $a
	push 1
	pop $13
	jmp l3806
l3809:
	push "-r"
	cmpst
	jne l3810
	spop $a
	push 1
	pop $10
	jmp l3806
l3810:
	push "-nb"
	cmpst
	jne l3811
	spop $a
	push 0
	pop $14
	jmp l3806
l3811:
	push "-b"
	cmpst
	jne l3812
	spop $a
	push 1
	pop $14
	jmp l3806
l3812:
	push "-en"
	cmpst
	jne l3813
	spop $a
	push $2
	spushs
	push $19
	push $5
	spop $a
	call [$a],get
	pop $15
	add $5,1
	pop $5
	jmp l3806
l3813:
	push "-bif"
	cmpst
	jne l3814
	spop $a
	push 1
	pop $16
	push $2
	spushs
	push $19
	push $5
	spop $a
	call [$a],get
	pop $17
	add $5,1
	pop $5
	push 1
	pop $18
	jmp l3806
l3814:
	push "-bnif"
	cmpst
	jne l3815
	spop $a
	push 0
	pop $16
	push $2
	spushs
	push $19
	push $5
	spop $a
	call [$a],get
	pop $17
	add $5,1
	pop $5
	push 1
	pop $18
	jmp l3806
l3815:
	push "-if"
	cmpst
	jne l3816
	spop $a
	push 1
	pop $16
	push $2
	spushs
	push $19
	push $5
	spop $a
	call [$a],get
	pop $17
	add $5,1
	pop $5
	push $2
	spushs
	push $19
	push $5
	spop $a
	call [$a],get
	pop $18
	add $5,1
	pop $5
	jmp l3806
l3816:
	push "-nif"
	cmpst
	jne l3817
	spop $a
	push 0
	pop $16
	push $2
	spushs
	push $19
	push $5
	spop $a
	call [$a],get
	pop $17
	add $5,1
	pop $5
	push $2
	spushs
	push $19
	push $5
	spop $a
	call [$a],get
	pop $18
	add $5,1
	pop $5
	jmp l3806
l3817:
	spop $a
	push 0
	pop $11
	push $6
	spushs
	push $12
	push $10
	push $13
	push $14
	push $15
	push $16
	push $17
	push $18
	spop $a
	call [$a],setasstarter
	sub $5,1
	pop $5
l3818:
	push 0
	push 1
	call $7,getb
	push "-"
	cmpje
	cmp0
	je l3819
	push $7
	spushs
	push "-skip"
	cmpst
	jne l3821
	spop $a
	push $6
	spushs
	push 1
	spop $a
	call [$a],bskip=
	add $5,1
	pop $5
	jmp l3820
l3821:
	push "-need"
	cmpst
	jne l3822
	spop $a
	push $6
	spushs
	push $2
	spushs
	push $19
	push $5
	push 1
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],get
	spop $a
	call [$a],sneededbeh=
	push 2
	popax
	add $5,$a
	pop $5
	jmp l3820
l3822:
	spop $a
	push $6
	push $2
	push $19
	push $5
	push $7
	cthis behstarteropt
	pop $5
l3820:
	push $2
	spushs
	push $19
	push $5
	spop $a
	call [$a],get
	pop $7
	jmp l3818
l3819:
	push $6
	pop $7
l3823:
	push $5
	push $4
	cmpjl
	cmp0
	je l3824
	push $2
	push $19
	push $4
	push $5
	push $6
	push $7
	push $10
	push $13
	cthis loadbeh
	pop $5
	pop $7
	jmp l3823
l3824:
l3806:
	jmp l3804
l3805:
l3792:
	jmp l3790
l3789:
	push $2
	spushs
	spop $a
	call [$a],readonly
	end method
	method behstarteropt
	localstring $1
	localstring $2
	localint $3
	localint $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $4
	push 1
	pop $b
	popax
	add $a,$b
	end method
	method analizeaninstr
	localstring $1
	localint $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	localint $5
	push 1
	pop $5
	push $3
	push $1
	spushs
	push $2
	spop $a
	call [$a],getcolsno
	cmpjae
	cmp0
	je l3826
	push 0
	pop $5
l3826:
	localint $6
	push 0
	pop $6
	push $4
	push "null"
	cmpjne
	cmp0
	je l3828
	push 1
	pop $6
	push $4
	cthis advanstand
l3828:
	localint $7
	localint $8
	localint $9
	localstring $10
	localstring $11
	localstring $12
	localreal $13
	localreal $14
	localreal $15
l3829:
	push $5
	cmp0
	je l3830
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $11
	add $3,1
	pop $3
	push $11
	spushs
	push "-z"
	cmpst
	jne l3832
	spop $a
	push $6
	cmp0
	je l3834
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $10
	push $10
	clparent StringChecker,isdigit
	cmp0
	je l3836
	push $4
	spushs
	push $10
	spop $a
	call [$a],setz
	jmp l3835
l3836:
	push $4
	spushs
	push $10
	spushs
	spop $a
	call [$a],getz
	spop $a
	call [$a],setz
l3835:
l3834:
	add $3,1
	pop $3
	jmp l3831
l3832:
	push "-pos"
	cmpst
	jne l3837
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $10
	add $3,1
	pop $3
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $12
	add $3,1
	pop $3
	push $6
	cmp0
	je l3839
	push $10
	push "-id"
	cmpje
	cmp0
	je l3841
	push _spathpref
	push $4
	pop $b
	popax
	add $a,$b
	pop $10
	push $10
	spushs
	push $12
	spop $a
	call [$a],getbyname
	pop $7
	push $10
	spushs
	push $7
	spop $a
	call [$a],getxver
	push $10
	spushs
	spop $a
	call [$a],getposx
	pop $b
	popax
	sub $a,$b
	pop $8
	push $10
	spushs
	push $7
	spop $a
	call [$a],getyver
	push $10
	spushs
	spop $a
	call [$a],getposy
	pop $b
	popax
	sub $a,$b
	pop $9
	jmp l3840
l3841:
	push $10
	push "-center"
	cmpje
	cmp0
	je l3843
	push $12
	spushs
	spop $a
	call [$a],getcx
	pop $8
	push $12
	spushs
	spop $a
	call [$a],getcy
	pop $9
	jmp l3842
l3843:
	push rgmscalex
	call $10,to_i
	pop $b
	popax
	mul $a,$b
	pop $8
	push rgmscaley
	call $12,to_i
	pop $b
	popax
	mul $a,$b
	pop $9
l3842:
l3840:
	push $4
	spushs
	push $8
	push $9
	spop $a
	call [$a],setpos
l3839:
	jmp l3831
l3837:
	push "-move"
	cmpst
	jne l3844
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $8
	add $3,1
	pop $3
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $9
	add $3,1
	pop $3
	push $6
	cmp0
	je l3846
	push $4
	spushs
	push rgmscalex
	push $8
	pop $b
	popax
	mul $a,$b
	push rgmscaley
	push $9
	pop $b
	popax
	mul $a,$b
	spop $a
	call [$a],move
l3846:
	jmp l3831
l3844:
	push "-putgr"
	cmpst
	jne l3847
	spop $a
	push $6
	cmp0
	je l3849
	push $4
	spushs
	spop $a
	call [$a],anputgr
l3849:
	jmp l3831
l3847:
	push "-vis"
	cmpst
	jne l3850
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $7
	add $3,1
	pop $3
	push $6
	cmp0
	je l3852
	push $7
	push 0
	cmpje
	cmp0
	je l3854
	push $4
	spushs
	spop $a
	call [$a],hide
	jmp l3853
l3854:
	push $4
	spushs
	spop $a
	call [$a],show
l3853:
l3852:
	jmp l3831
l3850:
	push "-show"
	cmpst
	jne l3855
	spop $a
	push $6
	cmp0
	je l3857
	push $4
	spushs
	spop $a
	call [$a],show
l3857:
	jmp l3831
l3855:
	push "-hide"
	cmpst
	jne l3858
	spop $a
	push $6
	cmp0
	je l3860
	push $4
	spushs
	spop $a
	call [$a],hide
l3860:
	jmp l3831
l3858:
	push "-dir"
	cmpst
	jne l3861
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $10
	add $3,1
	pop $3
	push $6
	cmp0
	je l3863
	push $4
	spushs
	spop $a
	call [$a],actionname
	pop $11
	push $4
	spushs
	spop $a
	call [$a],framenr
	pop $7
	push $4
	spushs
	push 2
	call $11,strsube
	push $10
	pop $b
	popax
	add $a,$b
	push 0
	spop $a
	call [$a],setframe
l3863:
	jmp l3831
l3861:
	push "-smooth"
	cmpst
	jne l3864
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $7
	add $3,1
	pop $3
	push $6
	cmp0
	je l3866
	push $4
	spushs
	push $7
	spop $a
	call [$a],setsmooth
l3866:
	jmp l3831
l3864:
	push "-play"
	cmpst
	je l3868
	push "-smplay"
	cmpst
	je l3868
	jmp l3867
l3868:
	spop $a
	push $6
	cmp0
	je l3870
	push $11
	push "-play"
	cmpje
	cmp0
	je l3872
	push "play"
	jmp l3871
l3872:
	push "playsmooth"
l3871:
	pop $10
	push $4
	spushs
	push $10
	spushs
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	spop $d
	spop $a
	call [$a],[$d]
l3870:
	add $3,1
	pop $3
	jmp l3831
l3867:
	push "-nplay"
	cmpst
	je l3874
	push "-nsmplay"
	cmpst
	je l3874
	jmp l3873
l3874:
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $7
	add $3,1
	pop $3
	push $6
	cmp0
	je l3876
	push $11
	push "-nplay"
	cmpje
	cmp0
	je l3878
	push "play"
	jmp l3877
l3878:
	push "playsmooth"
l3877:
	pop $10
	push $4
	spushs
	spop $a
	call [$a],gettype
	push "anima"
	cmpje
	cmp0
	je l3880
	push $4
	spushs
	push $10
	spushs
	push $7
	spop $d
	spop $a
	call [$a],[$d]
	jmp l3879
l3880:
	push $4
	spushs
	push $7
	spop $a
	call [$a],nplay
l3879:
l3876:
	jmp l3831
l3873:
	push "-nplayif"
	cmpst
	jne l3881
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $7
	add $3,1
	pop $3
	push $6
	cmp0
	je l3883
	push $4
	spushs
	push $7
	spop $a
	call [$a],anplayif
l3883:
	jmp l3831
l3881:
	push "-conplay"
	cmpst
	jne l3884
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $7
	add $3,1
	pop $3
	push $6
	cmp0
	je l3886
	push $4
	spushs
	spop $a
	call [$a],framenr
	pop $8
	push $4
	spushs
	push $7
	spop $a
	call [$a],play
	push $4
	spushs
	push 1
	popax
	sub 0,$a
	push $8
	spop $a
	call [$a],setframe
l3886:
	jmp l3831
l3884:
	push "-lplay"
	cmpst
	jne l3887
	spop $a
	push $6
	cmp0
	je l3889
	push $4
	spushs
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	spop $a
	call [$a],anloopsplay
l3889:
	add $3,1
	pop $3
	jmp l3831
l3887:
	push "-bgr"
	cmpst
	jne l3890
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $11
	add $3,1
	pop $3
	push $6
	cmp0
	je l3892
	push $11
	spushs
	push $4
	spop $a
	call [$a],add
	push _spathpref
	push $4
	pop $b
	popax
	add $a,$b
	call engine,varexist
	cmp0
	je l3894
	push $11
	spushs
	push _spathpref
	push $4
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],add
l3894:
l3892:
	jmp l3831
l3890:
	push "-sc"
	cmpst
	jne l3895
	spop $a
	push $6
	cmp0
	je l3897
	push _spathpref
	push $4
	pop $b
	popax
	add $a,$b
	pop $11
	push $11
	call engine,varexist
	cmp0
	je l3899
	push $11
	spushs
	spop $a
	call [$a],scalean
l3899:
l3897:
	jmp l3831
l3895:
	push "-ssc"
	cmpst
	jne l3900
	spop $a
	push $6
	cmp0
	je l3902
	call clcamera,setscene
l3902:
	jmp l3831
l3900:
	push "-actor"
	cmpst
	jne l3903
	spop $a
	push $6
	cmp0
	je l3905
	push $4
	call clcamera,setactor
l3905:
	jmp l3831
l3903:
	push "-mhero"
	cmpst
	jne l3906
	spop $a
	push $6
	cmp0
	je l3908
	push $4
	cthis setmainhero
l3908:
	jmp l3831
l3906:
	push "-puty"
	cmpst
	jne l3909
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $10
	add $3,1
	pop $3
	push $6
	cmp0
	je l3911
	push $10
	push "resy"
	cmpje
	cmp0
	je l3913
	push $4
	spushs
	push iResY
	push 1
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],anputy
	jmp l3912
l3913:
	push $4
	spushs
	push $10
	spop $a
	call [$a],anputy
l3912:
l3911:
	jmp l3831
l3909:
	push "-stopf"
	cmpst
	jne l3914
	spop $a
	push $6
	cmp0
	je l3916
	push $4
	spushs
	push 0
	spop $a
	call [$a],stop
l3916:
	jmp l3831
l3914:
	push "-stoph"
	cmpst
	jne l3917
	spop $a
	push $6
	cmp0
	je l3919
	push $4
	spushs
	push 0
	spop $a
	call [$a],stop
	push $4
	spushs
	spop $a
	call [$a],hide
l3919:
	jmp l3831
l3917:
	push "-setaction"
	cmpst
	jne l3920
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $10
	add $3,1
	pop $3
	push $6
	cmp0
	je l3922
	push $10
	clparent StringChecker,isdigit
	cmp0
	je l3924
	push $4
	spushs
	call $10,to_i
	push 0
	spop $a
	call [$a],setframe
	jmp l3923
l3924:
	push $4
	spushs
	push $10
	push 0
	spop $a
	call [$a],setframe
l3923:
	push $4
	spushs
	push 0
	spop $a
	call [$a],stop
l3922:
	jmp l3831
l3920:
	push "-setframe"
	cmpst
	jne l3925
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $10
	add $3,1
	pop $3
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $11
	add $3,1
	pop $3
	push $6
	cmp0
	je l3927
	push $11
	push "-act"
	cmpje
	cmp0
	je l3929
	cthis framenr
	jmp l3928
l3929:
	push $11
l3928:
	pop $7
	push $10
	clparent StringChecker,isdigit
	cmp0
	je l3931
	push $4
	spushs
	call $10,to_i
	push $7
	spop $a
	call [$a],setframe
	jmp l3930
l3931:
	push $4
	spushs
	push $10
	push $7
	spop $a
	call [$a],setframe
l3930:
	push $4
	spushs
	push 0
	spop $a
	call [$a],stop
l3927:
	jmp l3831
l3925:
	push "-randfr"
	cmpst
	jne l3932
	spop $a
	push $6
	cmp0
	je l3934
	push $4
	spushs
	spop $a
	call [$a],ansetrandfr
l3934:
	jmp l3831
l3932:
	push "-randfrplay"
	cmpst
	jne l3935
	spop $a
	push $6
	cmp0
	je l3937
	push $4
	spushs
	spop $a
	call [$a],anrandfrplay
l3937:
	jmp l3831
l3935:
	push "-stand"
	cmpst
	jne l3938
	spop $a
	push $6
	cmp0
	je l3940
	push $4
	spushs
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	spop $a
	call [$a],setstandbase
l3940:
	add $3,1
	pop $3
	jmp l3831
l3938:
	push "-delay"
	cmpst
	jne l3941
	spop $a
	push $6
	cmp0
	je l3943
	push $4
	spushs
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	spop $a
	call [$a],setdelay
l3943:
	add $3,1
	pop $3
	jmp l3831
l3941:
	push "-opshow"
	cmpst
	jne l3944
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $10
	add $3,1
	pop $3
	push $6
	cmp0
	je l3946
	push $4
	spushs
	push $10
	push "null"
	spop $a
	call [$a],anfadein
l3946:
	jmp l3831
l3944:
	push "-ophide"
	cmpst
	jne l3947
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $10
	add $3,1
	pop $3
	push $6
	cmp0
	je l3949
	push $4
	spushs
	push $10
	push "null"
	spop $a
	call [$a],anfadeout
l3949:
	jmp l3831
l3947:
	push "-step"
	cmpst
	jne l3950
	spop $a
	push $6
	cmp0
	je l3952
	push _spathpref
	push $4
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	spop $a
	call [$a],setanstep
l3952:
	add $3,1
	pop $3
	jmp l3831
l3950:
	push "-sb1"
	cmpst
	jne l3953
	spop $a
	push $6
	cmp0
	je l3955
	push $4
	spushs
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	spop $a
	call [$a],setbutbase1
l3955:
	add $3,1
	pop $3
	jmp l3831
l3953:
	push "-sb2"
	cmpst
	jne l3956
	spop $a
	push $6
	cmp0
	je l3958
	push $4
	spushs
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	spop $a
	call [$a],setbutbase2
l3958:
	add $3,1
	pop $3
	jmp l3831
l3956:
	push "-lineardodge"
	cmpst
	jne l3959
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $10
	add $3,1
	pop $3
	push $6
	cmp0
	je l3961
	push "_ft"
	push $4
	pop $b
	popax
	add $a,$b
	pop $11
	push $11
	cthis hasvar
	neg
	cmp0
	je l3963
	push $11
	spushs
	spop $e
	new filter,[$e]
	push $11
	spushs
	push $4
	spop $a
	call [$a],link
l3963:
	push $11
	spushs
	push $10
	spop $a
	call [$a],lineardodge
l3961:
	jmp l3831
l3959:
	push "-drawmode"
	cmpst
	jne l3964
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $10
	add $3,1
	pop $3
	push $6
	cmp0
	je l3966
	push $10
	push "lineardodge"
	cmpje
	cmp0
	je l3968
	push $4
	spushs
	push 1
	spop $a
	call [$a],setdrawmode
l3968:
l3966:
	jmp l3831
l3964:
	push "-anmover"
	cmpst
	jne l3969
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $10
	add $3,1
	pop $3
	push $10
	push "-loop"
	cmpje
	cmp0
	je l3971
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $13
	add $3,1
	pop $3
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $14
	add $3,1
	pop $3
	push 1
	pop $9
	jmp l3970
l3971:
	push $10
	pop $13
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $14
	add $3,1
	pop $3
	push 0
	pop $9
l3970:
	push $6
	cmp0
	je l3973
	push $4
	push $13
	push $14
	clparent SetAnMover,setas
	push $9
	cmp0
	je l3975
	push $4
	spushs
	spop $a
	call [$a],sam_copy
l3975:
	push $4
	spushs
	spop $a
	call [$a],sam_addtimer
	push $4
	spushs
	spop $a
	call [$a],sam_playtimer
l3973:
	jmp l3831
l3969:
	push "-hideonstart"
	cmpst
	jne l3976
	spop $a
	push $6
	cmp0
	je l3978
	push $4
	spushs
	spop $a
	call [$a],anhideonsetframe
l3978:
	jmp l3831
l3976:
	push "-transparency"
	cmpst
	jne l3979
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $10
	add $3,1
	pop $3
	push $6
	cmp0
	je l3981
	push $4
	spushs
	push $10
	spop $a
	call [$a],transparency
l3981:
	jmp l3831
l3979:
	push "-roto"
	cmpst
	jne l3982
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $14
	add $3,1
	pop $3
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $13
	add $3,1
	pop $3
	localreal $16
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $16
	add $3,1
	pop $3
	localint $17
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $17
	add $3,1
	pop $3
	push $6
	cmp0
	je l3984
	push $4
	spushs
	spop $a
	call [$a],getpx
	pop $7
	push $4
	spushs
	spop $a
	call [$a],getpy
	pop $8
	push $4
	spushs
	push 1
	push 0
	spop $a
	call [$a],setframe
	push $4
	spushs
	push $7
	push $8
	spop $a
	call [$a],ansetbpos
	push $4
	spushs
	push "idopframe"
	push 0
	spop $a
	call [$a],var2
	push $4
	spushs
	push "setopacityframe"
	push "classadvcontroller10"
	spop $a
	call [$a],addmethod
	push $4
	spushs
	spop $a
	call [$a],internal_filter
	spushs
	spop $a
	call [$a],getfullname
	pop $11
	push $11
	spushs
	push 2
	spop $a
	call [$a],setpivottype
	push $11
	spushs
	push 1
	spop $a
	call [$a],setsmooth
	push $4
	spushs
	spop $a
	call [$a],setopacityframe
	push "_timroto"
	push $4
	pop $b
	popax
	add $a,$b
	pop $10
	push $10
	push "classadvcontroller11"
	cthis cycle=
	push $10
	spushs
	push $17
	spop $a
	call [$a],setcycle
	push $10
	spushs
	push A
	push "san"
	push $4
	push "ftsan"
	push $11
	push "mkat"
	push $13
	push "pkat"
	push $14
	push "speed"
	push $16
	spop $a
	call [$a],vars2
	push $10
	spushs
	spop $a
	call [$a],play
l3984:
	jmp l3831
l3982:
	push "-buildroto"
	cmpst
	je l4000
	push "-buildrotorle"
	cmpst
	je l4000
	jmp l3999
l4000:
	spop $a
	localint $18
	push $11
	push "-buildrotorle"
	cmpje
	cmp0
	je l4002
	push 1
	jmp l4001
l4002:
	push 0
l4001:
	pop $18
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $14
	add $3,1
	pop $3
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $13
	add $3,1
	pop $3
	localreal $16
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $16
	add $3,1
	pop $3
	localint $17
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $17
	add $3,1
	pop $3
	push $6
	cmp0
	je l4004
	push $4
	spushs
	spop $a
	call [$a],getpx
	pop $7
	push $4
	spushs
	spop $a
	call [$a],getpy
	pop $8
	push $4
	spushs
	push 1
	push 0
	spop $a
	call [$a],setframe
	push $4
	spushs
	push $7
	push $8
	spop $a
	call [$a],ansetbpos
	localreal $19
	push 0.0
	pop $19
	call $16,abs
	pop $16
	push 0
	pop $7
	localstring $20
	push "null"
	pop $20
	localreal $15
	push $13
	pop $15
l4005:
	push $15
	push $14
	cmpjle
	cmp0
	je l4006
	jmp l4008
l4007:
	push $19
	popax
	add $15,$a
	pop $15
	jmp l4005
l4008:
	localreal $21
	push $15
	push $13
	pop $b
	popax
	sub $a,$b
	push $14
	push $13
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	div $a,$b
	psax
	spushs
	spop $h
	call $h,abs
	pop $21
	push 0.1
	call $21,_rin1
	cmp0
	je l4010
	push 0.4
	push $16
	pop $b
	popax
	mul $a,$b
	pop $19
	jmp l4009
l4010:
	push 0.2
	call $21,_rin1
	cmp0
	je l4012
	push 0.8
	push $16
	pop $b
	popax
	mul $a,$b
	pop $19
	jmp l4011
l4012:
	push $16
	pop $19
l4011:
l4009:
	push "_imgroto"
	push $7
	pop $b
	popax
	add $a,$b
	push $4
	pop $b
	popax
	add $a,$b
	pop $11
	push $11
	spushs
	spop $e
	new img,[$e]
	push $11
	spushs
	push $4
	push $15
	push 1.0
	push 1.0
	spop $a
	call [$a],buildrotozoom
l4013:
	push $20
	push "null"
	cmpjne
	cmp0
	je l4014
	push $11
	spushs
	spop $a
	call [$a],getw
	push $20
	spushs
	spop $a
	call [$a],getw
	cmpje
	cmp0
	je l4014
	push $11
	spushs
	spop $a
	call [$a],geth
	push $20
	spushs
	spop $a
	call [$a],geth
	cmpje
	cmp0
	je l4014
	push $11
	spushs
	spop $a
	call [$a],getpx
	push $20
	spushs
	spop $a
	call [$a],getpx
	cmpje
	cmp0
	je l4014
	push $11
	spushs
	spop $a
	call [$a],getpy
	push $20
	spushs
	spop $a
	call [$a],getpy
	cmpje
	jmp l4016
l4014:
	push 0
	jmp l4016
l4015:
	push 1
l4016:
	cmp0
	je l4017
	push 0.2
	pop $21
	push $21
	push $19
	pop $b
	popax
	mul $a,$b
	popax
	add $15,$a
	pop $15
	push $21
	push 1.0
	pop $b
	popax
	add $a,$b
	popax
	mul $19,$a
	pop $19
	push $11
	spushs
	push $4
	push $15
	push 1.0
	push 1.0
	spop $a
	call [$a],buildrotozoom
	jmp l4013
l4017:
	push $11
	spushs
	push $4
	spushs
	spop $a
	call [$a],getz
	spop $a
	call [$a],setz
	push $11
	spushs
	spop $a
	call [$a],hide
	push $18
	cmp0
	je l4019
	push $11
	spushs
	spop $a
	call [$a],rle
l4019:
	push $11
	pop $20
	add $7,1
	pop $7
	jmp l4007
l4006:
	push "_timroto"
	push $4
	pop $b
	popax
	add $a,$b
	pop $10
	push $10
	push "classadvcontroller12"
	cthis cycle=
	push $10
	spushs
	push $17
	spop $a
	call [$a],setcycle
	push $10
	spushs
	push A
	push "san"
	push $4
	push "ileimgs"
	push $7
	push "slastimg"
	push $11
	push "idimg"
	push 0
	push "dir"
	push 1
	spop $a
	call [$a],vars2
	push $4
	spushs
	spop $a
	call [$a],hide
	push "_imgroto0"
	push $4
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],show
	push $10
	spushs
	spop $a
	call [$a],play
l4004:
	jmp l3831
l3999:
	push "-opacityframe"
	cmpst
	jne l4024
	spop $a
	push $6
	cmp0
	je l4026
	push $4
	spushs
	spop $a
	call [$a],anopacityframe
l4026:
	jmp l3831
l4024:
	push "-rle"
	cmpst
	jne l4027
	spop $a
	push $6
	cmp0
	je l4029
	push $4
	spushs
	spop $a
	call [$a],rle
l4029:
	jmp l3831
l4027:
	push "-bitmask"
	cmpst
	jne l4030
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $7
	add $3,1
	pop $3
	push $6
	cmp0
	je l4032
	push $4
	spushs
	push $7
	spop $a
	call [$a],bitmask
l4032:
	jmp l3831
l4030:
	spop $a
	push $3
	pop $7
	push $4
	push $1
	push $2
	push $3
	push $11
	cthis subanalizeaninstr
	pop $3
	push $7
	push $3
	push 1
	pop $b
	popax
	add $a,$b
	cmpje
	cmp0
	je l4034
	push 0
	pop $5
l4034:
l3831:
	push $5
	cmp0
	je l4036
	push $3
	push $1
	spushs
	push $2
	spop $a
	call [$a],getcolsno
	cmpjae
	jmp l4038
l4036:
	push 0
	jmp l4038
l4037:
	push 1
l4038:
	cmp0
	je l4039
	push 0
	pop $5
l4039:
	jmp l3829
l3830:
	push $3
	end method
	method classadvcontroller10
	push 0
	cthis nofframes
	push 1
	cmpja
	cmp0
	je l3986
	localdef $1
	push 0
	push idopframe
	cthis nameofframe
	pop $1
	push 0
	push 2
	call $1,getb
	push "op"
	cmpje
	cmp0
	je l3988
	cthis internal_filter
	spushs
	push 2
	call $1,strsubb
	spushs
	spop $h
	call $h,to_r
	push 100.0
	pop $b
	popax
	div $a,$b
	psax
	push 255.0
	pop $b
	popax
	mul $a,$b
	push 0.5
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setopacity
l3988:
	push idopframe
	push 1
	pop $b
	popax
	add $a,$b
	push 0
	cthis nofframes
	pop $b
	popax
	div $a,$b
	push $d
	pop idopframe
l3986:
	end method
	method classadvcontroller11
	localreal $1
	push pkat
	push mkat
	pop $b
	popax
	sub $a,$b
	pop $1
	localreal $2
	push 1.0
	pop $2
	localreal $3
	push ftsan
	spushs
	spop $a
	call [$a],getangle
	pop $3
	push speed
	push 0.0
	cmpjl
	cmp0
	je l3990
	push $3
	push mkat
	cmpjle
	cmp0
	je l3992
	push speed
	popax
	sub 0,$a
	pop speed
l3992:
	push $3
	push mkat
	pop $b
	popax
	sub $a,$b
	push $1
	pop $b
	popax
	div $a,$b
	psax
	pop $3
	jmp l3989
l3990:
	push $3
	push pkat
	cmpjae
	cmp0
	je l3994
	push speed
	popax
	sub 0,$a
	pop speed
l3994:
	push pkat
	push $3
	pop $b
	popax
	sub $a,$b
	push $1
	pop $b
	popax
	div $a,$b
	psax
	pop $3
l3989:
	push 0.1
	call $3,_rin1
	cmp0
	je l3996
	push 0.4
	pop $2
	jmp l3995
l3996:
	push 0.2
	call $3,_rin1
	cmp0
	je l3998
	push 0.8
	pop $2
l3998:
l3995:
	push ftsan
	spushs
	push $2
	push speed
	pop $b
	popax
	mul $a,$b
	spop $a
	call [$a],rotate
	push san
	spushs
	spop $a
	call [$a],setopacityframe
	cthis play
	end method
	method classadvcontroller12
	push slastimg
	spushs
	spop $a
	call [$a],hide
	push "_imgroto"
	push idimg
	pop $b
	popax
	add $a,$b
	push san
	pop $b
	popax
	add $a,$b
	pop slastimg
	push slastimg
	spushs
	spop $a
	call [$a],show
	push idimg
	push dir
	pop $b
	popax
	add $a,$b
	pop idimg
	push idimg
	push 0
	cmpjl
	cmp0
	je l4021
	push 0
	pop idimg
	push 1
	pop dir
	jmp l4020
l4021:
	push idimg
	push ileimgs
	cmpjae
	cmp0
	je l4023
	push ileimgs
	push 1
	pop $b
	popax
	sub $a,$b
	pop idimg
	push 1
	popax
	sub 0,$a
	pop dir
l4023:
l4020:
	cthis play
	end method
	method _rin1
	localreal $1
	pop $1
	cthis get
	push $1
	cmpjl
	cmp0
	jne l4041
	cthis get
	push 1.0
	push $1
	pop $b
	popax
	sub $a,$b
	cmpja
	jmp l4042
l4040:
	push 0
	jmp l4042
l4041:
	push 1
l4042:
	end method
	method subanalizeaninstr
	localstring $1
	localstring $2
	localint $3
	localint $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $4
	push 1
	pop $b
	popax
	sub $a,$b
	end method
	method cadvherofinish
	end method
	method butmoveoff
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],moveoff
	push $1
	spushs
	spop $a
	call [$a],getbutname
	push "_MOVEOFF"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	cthis behplaying
	neg
	cmp0
	je l4044
	push "beh_"
	push $1
	spushs
	spop $a
	call [$a],getbutname
	pop $b
	popax
	add $a,$b
	push "_MOVEOFF"
	pop $b
	popax
	add $a,$b
	cthis playbehif
	neg
	pop _b_rewind
l4044:
	end method
	method butmoveon
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],moveon
	push $1
	spushs
	spop $a
	call [$a],getbutname
	push "_MOVEON"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	cthis behplaying
	neg
	cmp0
	je l4046
	push "beh_"
	push $1
	spushs
	spop $a
	call [$a],getbutname
	pop $b
	popax
	add $a,$b
	push "_MOVEON"
	pop $b
	popax
	add $a,$b
	cthis playbehif
	neg
	pop _b_rewind
l4046:
	end method
	method advfocusedbut
	push _slastms
	end method
	method advbutrefresh
	call imgpause,isvisible
	cmp0
	je l4048
	ret
l4048:
	localint $1
	localint $2
	call mouse,getpos
	pop $2
	pop $1
	localint $3
	push $1
	push $2
	push 1
	push 1
	call grbuts,butisin
	pop $3
	push $3
	cmp0
	je l4050
	localstring $4
	push $3
	push 1
	pop $b
	popax
	sub $a,$b
	call grbuts,get
	pop $4
	push $4
	push _slastms
	cmpjne
	cmp0
	je l4052
	push _slastms
	push "null"
	cmpjne
	cmp0
	je l4054
	push _slastms
	cthis butmoveoff
l4054:
	push $4
	pop _slastms
	push $4
	cthis butmoveon
l4052:
	jmp l4049
l4050:
	push _slastms
	push "null"
	cmpjne
	cmp0
	je l4056
	push _slastms
	cthis butmoveoff
	push "null"
	pop _slastms
l4056:
l4049:
	push "onmousemove"
	push $1
	push $2
	call grmsmove,eval2
	end method
	method advmsmove
	cthis advgetlock
	neg
	cmp0
	je l4058
	cthis advbutrefresh
l4058:
	end method
	method butclickon
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],clickon
	cthis behplaying
	neg
	cmp0
	je l4060
	push "beh_"
	push $1
	spushs
	spop $a
	call [$a],getbutname
	pop $b
	popax
	add $a,$b
	push "_LCLICK"
	pop $b
	popax
	add $a,$b
	cthis playbehif
	neg
	pop _b_rewind
l4060:
	end method
	method butrelease
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],butlrel
	end method
	method mouse_dblclick
	push 2
	call clwalkq,mulspeed
	end method
	method advmsclick
	push 1
	pop _b_rewind
	cthis advgetlock
	neg
	cmp0
	je l4062
	localint $1
	localint $2
	call mouse,getpos
	pop $2
	pop $1
	push "preparetosort"
	push $1
	push $2
	call grbuts,eval2
	call grbuts,sortimgs
	localint $3
	push $1
	push $2
	push 1
	push 1
	call grbuts,butisin
	pop $3
	push "endsort"
	call grbuts,eval
	push $3
	cmp0
	je l4064
	push $3
	push 1
	pop $b
	popax
	sub $a,$b
	call grbuts,get
	cthis butclickon
	jmp l4063
l4064:
	localstring $4
	push _spocketpref
	cthis getmainhero
	pop $b
	popax
	add $a,$b
	pop $4
	push $4
	call engine,varexist
	cmp0
	je l4066
	push $4
	spushs
	spop $a
	call [$a],itemhide
l4066:
	push $1
	push $2
	call clwalkq,goto
l4063:
	push "onmouselclick"
	push $1
	push $2
	call grmslclick,eval2
l4062:
	push _b_rewind
	cmp0
	je l4068
	cthis behrewind
l4068:
	end method
	method advmsrclick
	cthis advgetlock
	neg
	cmp0
	je l4070
	push "onmouserclick"
	call mouse,getpos
	call grmsrclick,eval2
l4070:
	end method
	method advmslrel
	cthis advgetlock
	neg
	cmp0
	je l4072
	localint $1
	localint $2
	call mouse,getpos
	pop $2
	pop $1
	localint $3
	push $1
	push $2
	push 1
	push 1
	call grbuts,butisin
	pop $3
	push $3
	cmp0
	je l4074
	push $3
	push 1
	pop $b
	popax
	sub $a,$b
	call grbuts,get
	cthis butrelease
l4074:
	push "onmouselrel"
	push $1
	push $2
	call grmslrel,eval2
l4072:
	end method
	method mouse_move
	cthis advstdstate
	cmp0
	je l4076
	cthis advmsmove
l4076:
	end method
	method mouse_lclick
	cthis advstdstate
	cmp0
	je l4078
	cthis advmsclick
l4078:
	end method
	method mouse_lrel
	cthis advstdstate
	cmp0
	je l4080
	cthis advmslrel
l4080:
	end method
	method mouse_rclick
	cthis advstdstate
	cmp0
	je l4082
	cthis advmsrclick
l4082:
	end method
	method sndplayobfin
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	cthis getsndpath
	push $1
	pop $b
	popax
	add $a,$b
	push ".wav"
	pop $b
	popax
	add $a,$b
	call __sndplay,load
	push igmsubtitle
	cmp0
	je l4084
	push "__sndplay"
	cthis getsndpath
	push $1
	pop $b
	popax
	add $a,$b
	push ".wav"
	pop $b
	popax
	add $a,$b
	call subtitle,register
l4084:
	push $2
	call __sndplay,sob=
	push $3
	call __sndplay,sfun=
	push "__sndplay"
	cthis cbsplay
	end method
	method sndplayfin
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push "null"
	push $2
	cthis sndplayobfin
	end method
	method sndplay
	localstring $1
	pop $1
	push $1
	push "null"
	push "null"
	cthis sndplayobfin
	end method
	method advloadsnd
	localstring $1
	pop $1
	push "file_loaded"
	cthis hasvar
	neg
	cmp0
	je l4086
	push "file_loaded"
	push 1
	cthis var2
l4086:
	push $1
	call engine,fileexist
	cmp0
	je l4088
	push $1
	cthis load
	jmp l4087
l4088:
	push 0
	pop file_loaded
l4087:
	push igmsubtitle
	cmp0
	je l4090
	cthis getfullname
	push $1
	call subtitle,register
l4090:
	end method
	method save_metreturn
	localstring $1
	pop $1
	push "save_metreturn"
	push $1
	call clsave,set
	end method
	end class

	class classmoddbg
	parent classlocker
	method init
	clparent classlocker,init
	new string,sstate
	push "init"
	pop sstate
	new int,ilastx
	new int,ilasty
	new text,txtpos
	push 5000
	call txtpos,setz
	push 0
	push 0
	call txtpos,setpos
	push 0
	push 0
	push 64
	push 16
	push 0
	push 0
	push 0
	push 192
	call txtpos,setbkg
	new text,txtmsg
	push 5000
	call txtmsg,setz
	push 220
	push igmoffsetx
	pop $b
	popax
	add $a,$b
	push 10
	call txtmsg,setpos
	push 0
	push 0
	push 500
	push 16
	push 0
	push 0
	push 0
	push 192
	call txtmsg,setbkg
	call txtmsg,hide
	new timer,timmsg
	push 4000
	call timmsg,setdelay
	push "onfinish"
	push "classmoddbg0"
	call timmsg,addmethod
	new text,txtpod
	push 5000
	call txtpod,setz
	push 0
	push 0
	push 128
	push 16
	push 0
	push 0
	push 0
	push 192
	call txtpod,setbkg
	new img,impod
	new string,slastimpod
	push "null"
	pop slastimpod
	cthis disable
	end method
	method classmoddbg0
	call txtmsg,hide
	end method
	method enable
	cthis unlock
	call txtpos,show
	call txtpod,show
	end method
	method disable
	cthis lock
	call txtpos,hide
	call txtpod,hide
	end method
	method updatetxtpos
	localint $1
	localint $2
	pop $2
	pop $1
	push "clcamera"
	call engine,varexist
	cmp0
	je l4092
	push ""
	push $1
	call clcamera,getposx
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	add $a,$b
	push ","
	pop $b
	popax
	add $a,$b
	push $2
	call clcamera,getposy
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	add $a,$b
	call txtpos,set
	jmp l4091
l4092:
	push ""
	push $1
	pop $b
	popax
	add $a,$b
	push ","
	pop $b
	popax
	add $a,$b
	push $2
	pop $b
	popax
	add $a,$b
	call txtpos,set
l4091:
	push $1
	call txtpos,getw
	pop $b
	popax
	sub $a,$b
	call advmouse,lodx
	pop $b
	popax
	sub $a,$b
	push $2
	call txtpos,geth
	pop $b
	popax
	sub $a,$b
	call advmouse,lody
	pop $b
	popax
	sub $a,$b
	call txtpos,setpos
	push $1
	call txtpod,getw
	pop $b
	popax
	sub $a,$b
	call advmouse,lodx
	pop $b
	popax
	sub $a,$b
	push $2
	push 2
	call txtpod,geth
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	sub $a,$b
	call advmouse,lody
	pop $b
	popax
	sub $a,$b
	call txtpod,setpos
	localstring $3
	push $1
	push $2
	push 1
	push 1
	push 2000
	popax
	sub 0,$a
	push 2000
	call engine,getimg
	pop $3
	push $3
	call txtpod,set
	push $3
	push "null"
	cmpje
	cmp0
	jne l4095
	push $3
	push "imgbkg"
	cmpje
	jmp l4096
l4094:
	push 0
	jmp l4096
l4095:
	push 1
l4096:
	cmp0
	je l4097
	call impod,hide
	jmp l4093
l4097:
	push $3
	call engine,varexist
	cmp0
	je l4099
	push $3
	push slastimpod
	cmpjne
	cmp0
	jne l4102
	push $3
	push slastimpod
	cmpje
	cmp0
	je l4103
	call impod,isvisible
	neg
	jmp l4105
l4103:
	push 0
	jmp l4105
l4104:
	push 1
l4105:
	cmp0
	jne l4102
	push $3
	spushs
	spop $a
	call [$a],getw
	call impod,getw
	cmpjne
	cmp0
	jne l4102
	push $3
	spushs
	spop $a
	call [$a],geth
	call impod,geth
	cmpjne
	jmp l4106
l4101:
	push 0
	jmp l4106
l4102:
	push 1
l4106:
	cmp0
	je l4107
	push $3
	spushs
	spop $a
	call [$a],getw
	push $3
	spushs
	spop $a
	call [$a],geth
	push 255
	push 255
	push 0
	push 64
	call impod,create
	call impod,show
	push 2010
	call impod,setz
	push $3
	pop slastimpod
l4107:
	push $3
	spushs
	spop $a
	call [$a],getpx
	push $3
	spushs
	spop $a
	call [$a],getpy
	call impod,setpos
l4099:
l4093:
	call txtpos,getey
	push iResY
	pop $b
	popax
	sub $a,$b
	pop $2
	push $2
	push 0
	cmpja
	cmp0
	je l4109
	push 0
	push $2
	popax
	sub 0,$a
	call txtpos,move
	push 0
	push $2
	popax
	sub 0,$a
	call txtpod,move
l4109:
	call txtpod,getex
	push iResX
	pop $b
	popax
	sub $a,$b
	pop $1
	push $1
	push 0
	cmpja
	cmp0
	je l4111
	push $1
	popax
	sub 0,$a
	push 0
	call txtpos,move
	push $1
	popax
	sub 0,$a
	push 0
	call txtpod,move
l4111:
	call txtpod,getpx
	popax
	sub 0,$a
	pop $1
	push $1
	push 0
	cmpja
	cmp0
	je l4113
	push $1
	push 0
	call txtpos,move
	push $1
	push 0
	call txtpod,move
l4113:
	end method
	method msminit
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	cthis updatetxtpos
	end method
	method msmmove
	localint $1
	localint $2
	pop $2
	pop $1
	push "clcamera"
	call engine,varexist
	cmp0
	je l4115
	push $1
	push ilastx
	pop $b
	popax
	sub $a,$b
	push $2
	push ilasty
	pop $b
	popax
	sub $a,$b
	call clcamera,moveplans
l4115:
	push $1
	push $2
	cthis updatetxtpos
	end method
	method msmove
	cthis getlock
	cmp0
	je l4117
	ret
l4117:
	localint $1
	call mouse,getpx
	pop $1
	localint $2
	call mouse,getpy
	pop $2
	push "msm"
	push sstate
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	push $2
	spop $d
	cthis [$d]
	push $1
	pop ilastx
	push $2
	pop ilasty
	end method
	method mslclick
	cthis getlock
	cmp0
	je l4119
	ret
l4119:
	push "space"
	call keyboard,iskeydown
	cmp0
	je l4121
	push "move"
	pop sstate
l4121:
	end method
	method mslrel
	cthis getlock
	cmp0
	je l4123
	ret
l4123:
	push "init"
	pop sstate
	end method
	method msrclick
	localint $1
	call mouse,getpx
	pop $1
	localint $2
	call mouse,getpy
	pop $2
	localint $3
	push $1
	push $2
	push 1
	push 1
	call grbuts,isin
	pop $3
	push $3
	push 0
	cmpjne
	cmp0
	je l4125
	localstring $4
	push $3
	push 1
	pop $b
	popax
	sub $a,$b
	call grbuts,get
	pop $4
	call $4,print
l4125:
	end method
	method msg
	localstring $1
	pop $1
	call txtmsg,show
	push $1
	call txtmsg,set
	push igmoffsetx
	push 100
	pop $b
	popax
	add $a,$b
	push 10
	call txtmsg,setpos
	call timmsg,play
	end method
	method dbkeydown
	push igmdebug
	neg
	cmp0
	je l4127
	ret
l4127:
	push "lctrl"
	call keyboard,iskeydown
	cmp0
	je l4129
	push "d"
	call keyboard,iskey
	cmp0
	je l4131
	cthis getlock
	cmp0
	je l4133
	cthis enable
	push "debug mode on: ^c-b: screenshoot, ^c-s: save, ^c-l: load, d: debug on/off"
	cthis msg
	jmp l4132
l4133:
	cthis disable
	push "debug mode off"
	cthis msg
l4132:
	jmp l4130
l4131:
	push "l"
	call keyboard,iskey
	cmp0
	je l4135
	localdef $1
	push "cache"
	pop $1
	push "1"
	call keyboard,iskeydown
	cmp0
	je l4137
	push "1"
	popax
	add $1,$a
	pop $1
	jmp l4136
l4137:
	push "2"
	call keyboard,iskeydown
	cmp0
	je l4139
	push "2"
	popax
	add $1,$a
	pop $1
	jmp l4138
l4139:
	push "3"
	call keyboard,iskeydown
	cmp0
	je l4141
	push "3"
	popax
	add $1,$a
	pop $1
	jmp l4140
l4141:
	push "4"
	call keyboard,iskeydown
	cmp0
	je l4143
	push "4"
	popax
	add $1,$a
	pop $1
	jmp l4142
l4143:
	push "5"
	call keyboard,iskeydown
	cmp0
	je l4145
	push "5"
	popax
	add $1,$a
	pop $1
	jmp l4144
l4145:
	push "6"
	call keyboard,iskeydown
	cmp0
	je l4147
	push "6"
	popax
	add $1,$a
	pop $1
	jmp l4146
l4147:
	push "7"
	call keyboard,iskeydown
	cmp0
	je l4149
	push "7"
	popax
	add $1,$a
	pop $1
	jmp l4148
l4149:
	push "8"
	call keyboard,iskeydown
	cmp0
	je l4151
	push "8"
	popax
	add $1,$a
	pop $1
	jmp l4150
l4151:
	push "9"
	call keyboard,iskeydown
	cmp0
	je l4153
	push "9"
	popax
	add $1,$a
	pop $1
l4153:
l4150:
l4148:
l4146:
l4144:
l4142:
l4140:
l4138:
l4136:
	push $1
	cthis _load_game
	push "game loaded from "
	push $1
	pop $b
	popax
	add $a,$b
	cthis msg
	jmp l4134
l4135:
	push "s"
	call keyboard,iskey
	cmp0
	je l4155
	localdef $1
	push "cache"
	pop $1
	cthis can_save
	cmp0
	je l4157
	push "1"
	call keyboard,iskeydown
	cmp0
	je l4159
	push "1"
	popax
	add $1,$a
	pop $1
	jmp l4158
l4159:
	push "2"
	call keyboard,iskeydown
	cmp0
	je l4161
	push "2"
	popax
	add $1,$a
	pop $1
	jmp l4160
l4161:
	push "3"
	call keyboard,iskeydown
	cmp0
	je l4163
	push "3"
	popax
	add $1,$a
	pop $1
	jmp l4162
l4163:
	push "4"
	call keyboard,iskeydown
	cmp0
	je l4165
	push "4"
	popax
	add $1,$a
	pop $1
	jmp l4164
l4165:
	push "5"
	call keyboard,iskeydown
	cmp0
	je l4167
	push "5"
	popax
	add $1,$a
	pop $1
	jmp l4166
l4167:
	push "6"
	call keyboard,iskeydown
	cmp0
	je l4169
	push "6"
	popax
	add $1,$a
	pop $1
	jmp l4168
l4169:
	push "7"
	call keyboard,iskeydown
	cmp0
	je l4171
	push "7"
	popax
	add $1,$a
	pop $1
	jmp l4170
l4171:
	push "8"
	call keyboard,iskeydown
	cmp0
	je l4173
	push "8"
	popax
	add $1,$a
	pop $1
	jmp l4172
l4173:
	push "9"
	call keyboard,iskeydown
	cmp0
	je l4175
	push "9"
	popax
	add $1,$a
	pop $1
l4175:
l4172:
l4170:
l4168:
l4166:
l4164:
l4162:
l4160:
l4158:
	push $1
	cthis _save_game
	push "game saved to "
	push $1
	pop $b
	popax
	add $a,$b
	cthis msg
	jmp l4156
l4157:
	push "could not save game to "
	push $1
	pop $b
	popax
	add $a,$b
	push " , sgmstate="
	pop $b
	popax
	add $a,$b
	push sgmstate
	pop $b
	popax
	add $a,$b
	cthis msg
l4156:
	jmp l4154
l4155:
	push "b"
	call keyboard,iskey
	cmp0
	je l4177
	call gameapi,getgamename
	spushs
	push "saves/cache.bmp"
	push 1
	spop $a
	call [$a],cgetscreenshoot
	push "screenshoot in saves/cache.bmp"
	cthis msg
	jmp l4176
l4177:
	push "p"
	call keyboard,iskey
	cmp0
	je l4179
	push "debugger: "
	cthis dprint
	localint $2
	call engine,getstack
	pop $2
	push "stack = "
	push $2
	pop $b
	popax
	add $a,$b
	cthis msg
l4179:
l4176:
l4154:
l4134:
l4130:
l4129:
	end method
	end class

	new classmoddbg,moddbg
	game Tclassmenu
	method init
	new db,_dbl
	new gmobjvec,gr1
	push "bkg"
	call gr1,add
	end method
	method tload
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	cthis setgraphpath
	push $3
	push "null"
	cmpjne
	cmp0
	je l4181
	cthis getgraphpath
	push $3
	pop $b
	popax
	add $a,$b
	call _dbl,loadscript
	localint $4
	push 0
	pop $4
l4182:
	push $4
	call _dbl,getrowsno
	cmpjl
	cmp0
	je l4183
	jmp l4185
l4184:
	add $4,1
	pop $4
	jmp l4182
l4185:
	push "snd"
	push $4
	push 0
	call _dbl,get
	pop $b
	popax
	add $a,$b
	push $4
	push 1
	call _dbl,get
	push ".wav"
	pop $b
	popax
	add $a,$b
	cthis newsnd
	jmp l4184
l4183:
l4181:
	new classbutton,_clb
	cthis getgraphpath
	push $2
	pop $b
	popax
	add $a,$b
	push 10
	push "imglobcurs"
	push "gr1"
	call _clb,build2
	push "_gmbutclick"
	call _clb,clickfunc
	push "_gmbutmove"
	call _clb,movonfunc
	push "sndintro"
	call engine,varexist
	cmp0
	je l4187
	push "sndintro"
	cthis cbplay
l4187:
	end method
	method mouselclick
	push 1
	cthis cactsndstop
	end method
	method _gmbutmove
	localstring $1
	pop $1
	call sndakskermovon,play
	push "sndintro"
	call engine,varexist
	cmp0
	je l4189
	call sndintro,isplaying
	jmp l4191
l4189:
	push 0
	jmp l4191
l4190:
	push 1
l4191:
	cmp0
	je l4192
	ret
l4192:
	push "snd"
	push $1
	pop $b
	popax
	add $a,$b
	call engine,varexist
	cmp0
	je l4194
	push "snd"
	push $1
	pop $b
	popax
	add $a,$b
	cthis crselfplay
l4194:
	end method
	method _gmbutclick
	localstring $1
	pop $1
	push $1
	push "_BUTCLICK"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	end game

	class TMenu
	method init
	end method
	method tinit
	localstring $1
	pop $1
	push $1
	new Buttons,but1
	end method
	method mousel_click
	push 1
	cthis cactsndstop
	end method
	method but1_moveon
	localstring $1
	call but1,sobject
	pop $1
	call sndakskermovon,play
	push "sndintro"
	call engine,varexist
	cmp0
	je l4196
	call sndintro,isplaying
	jmp l4198
l4196:
	push 0
	jmp l4198
l4197:
	push 1
l4198:
	neg
	cmp0
	je l4199
	push "snd"
	push $1
	pop $b
	popax
	add $a,$b
	call engine,varexist
	cmp0
	je l4201
	push "snd"
	push $1
	pop $b
	popax
	add $a,$b
	cthis cbselfplay
l4201:
l4199:
	push $1
	push "_MOVEON"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method but1_moveoff
	call but1,sobject
	push "_MOVEOFF"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method but1_lclick
	call but1,sobject
	push "_BUTCLICK"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	end class

	class TPainter
	method init
	end method
	method tinit
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	localstring $5
	localstring $6
	localdef $7
	localstring $8
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l4203
	push $1
	clparent GameController,init
l4203:
	cthis unlock
	push $2
	push "null"
	cmpjne
	cmp0
	je l4205
	push $2
	cthis setgraphpath
l4205:
	push $3
	push "null"
	cmpjne
	cmp0
	je l4207
	push "anbkg"
	push $3
	push 0
	cthis newanima
l4207:
	push "anbrush1"
	push $4
	push 3000
	cthis newanima
	push "anbrush1"
	push "anbrush2"
	cthis copyanima
	push 0
	push 1
	call anbrush2,setframe
	call anbrush1,getz
	push 1
	pop $b
	popax
	sub $a,$b
	call anbrush2,setz
	push "anbrush1"
	clparent anima_pack,resizemethods
	push "anbrush2"
	clparent anima_pack,resizemethods
	localint $9
	localint $10
	push $7
	spushs
	push "ru"
	cmpst
	jne l4209
	spop $a
	call anbrush2,getex
	pop $9
	call anbrush2,getpy
	pop $10
	jmp l4208
l4209:
	push "rd"
	cmpst
	jne l4210
	spop $a
	call anbrush2,getex
	pop $9
	call anbrush2,getey
	pop $10
	jmp l4208
l4210:
	push "ld"
	cmpst
	jne l4211
	spop $a
	call anbrush2,getpx
	pop $9
	call anbrush2,getey
	pop $10
	jmp l4208
l4211:
	spop $a
	call anbrush2,getpx
	pop $9
	call anbrush2,getpy
	pop $10
l4208:
	push $9
	push $10
	call anbrush1,saverelpos
	push $9
	push $10
	call anbrush2,saverelpos
	call mouse,hide
	push "anfg"
	push $5
	push 100
	cthis newanima
	push "foreground"
	push 0
	call anfg,setframe
	new gmimgvec,grdraw
	push "anfg"
	push "andraw"
	push "draw"
	call anfg,actionnr
	push "grdraw"
	cthis newanframesgr
	popax
	push 10
	call grdraw,setz
	new gmimgvec,grpaleta
	push "grpaleta"
	push $6
	popax
	pop $b
	psax
	call [$b],operator<
	push 20
	call grpaleta,setz
	new int,_ibrx
	call anbrush2,getpx
	pop _ibrx
	new int,_ibry
	call anbrush2,getpy
	pop _ibry
l4212:
	push _ibrx
	push _ibry
	push 0
	push 1
	call anbrush2,isin
	neg
	cmp0
	je l4213
	add _ibrx,1
	pop _ibrx
	push _ibrx
	call anbrush2,getex
	cmpje
	cmp0
	je l4215
	call anbrush2,getpx
	pop _ibrx
	add _ibry,1
	pop _ibry
l4215:
	jmp l4212
l4213:
	call anbrush2,getpx
	popax
	sub _ibrx,$a
	pop _ibrx
	call anbrush2,getpy
	popax
	sub _ibry,$a
	pop _ibry
	clparent TPainter,tp_mouse_move
	push $8
	push "null"
	cmpjne
	cmp0
	je l4217
	new string,savefile
	push $8
	pop savefile
	new db,dbkolory
	localdef $11
	push $8
	pop $11
	push $11
	cthis saveexist
	cmp0
	je l4219
	push $11
	call dbkolory,vecload
	push "TPainter0"
	call grdraw,each
	jmp l4218
l4219:
	push "TPainter1"
	call grdraw,each
	cthis tp_savekols
l4218:
l4217:
	end method
	method TPainter0
	localdef $1
	pop $1
	push $1
	push 0
	call dbkolory,get
	push $1
	push 1
	call dbkolory,get
	push $1
	push 2
	call dbkolory,get
	push 255
	push 0
	cthis paint
	end method
	method TPainter1
	localdef $1
	pop $1
	cthis white
	push 255
	push 0
	cthis paint
	push "255 255 255"
	push " "
	call dbkolory,dbaddstringrow
	end method
	method game_exit
	call mouse,show
	clparent GameController,game_exit
	end method
	method tp_exit
	call mouse,show
	end method
	method tp_mouse_move
	call anbrush1,mssetrelpos
	call anbrush2,mssetrelpos
	end method
	method tp_mouse_lclick
	cthis getlock
	neg
	cmp0
	je l4221
	localint $1
	localint $2
	call mouse,getpos
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 1
	call grdraw,isin
	cmp0
	je l4223
	call grdraw,getsfound
	spushs
	call anbrush2,getpx
	push _ibrx
	pop $b
	popax
	add $a,$b
	call anbrush2,getpy
	push _ibry
	pop $b
	popax
	add $a,$b
	call anbrush2,getrgba
	push 0
	spop $a
	call [$a],paint
	cthis onpaint
	jmp l4222
l4223:
	push $1
	push $2
	push 0
	push 1
	call grpaleta,isin
	cmp0
	je l4225
	localdef $3
	localdef $4
	localdef $5
	localdef $6
	call grpaleta,getsfound
	spushs
	push $1
	push $2
	spop $a
	call [$a],getrgba
	pop $6
	pop $5
	pop $4
	pop $3
	push 255
	pop $6
	push $3
	push $4
	push $5
	push $6
	push 0
	call anbrush2,paint
	cthis onsetbrush
l4225:
l4222:
l4221:
	end method
	method tp_savekols
	push GAME
	spushs
	push "dbkolory"
	spop $a
	call [$a],hasvar
	neg
	cmp0
	je l4227
	ret
l4227:
	push "TPainter2"
	call grdraw,each
	push savefile
	call dbkolory,vecsave
	end method
	method TPainter2
	localdef $1
	pop $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	cthis getex
	pop $6
	localint $7
	cthis getey
	pop $7
	localint $8
	cthis getpx
	pop $8
	localint $9
	cthis getpy
	pop $9
l4228:
	push $8
	push $6
	cmpjne
	cmp0
	je l4229
	push $9
	push $7
	cmpjne
	jmp l4231
l4229:
	push 0
	jmp l4231
l4230:
	push 1
l4231:
	cmp0
	je l4232
	push $8
	push $9
	push 0
	push 1
	cthis isin
	cmp0
	je l4234
	push $8
	pop $2
	push $9
	pop $3
	push $6
	pop $8
	jmp l4233
l4234:
	add $8,1
	pop $8
l4233:
	jmp l4228
l4232:
	push $2
	push $3
	cthis getrgba
	popax
	pop $4
	pop $3
	pop $2
	push $1
	push 0
	push $2
	call dbkolory,set
	push $1
	push 1
	push $3
	call dbkolory,set
	push $1
	push 2
	push $4
	call dbkolory,set
	end method
	method tp_default_erase
	cthis white
	push 255
	cthis tp_erase
	end method
	method tp_erase
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	localint $5
	push 0
	pop $5
l4235:
	push $5
	call grdraw,size
	cmpjl
	cmp0
	je l4236
	jmp l4238
l4237:
	add $5,1
	pop $5
	jmp l4235
l4238:
	push $5
	call grdraw,get
	spushs
	push $1
	push $2
	push $3
	push $4
	push 0
	spop $a
	call [$a],paint
	push $5
	push 0
	push 255
	call dbkolory,set
	push $5
	push 1
	push 255
	call dbkolory,set
	push $5
	push 2
	push 255
	call dbkolory,set
	jmp l4237
l4236:
	cthis tp_savekols
	end method
	end class

	class TPainterCon
	parent TPainter
	parent GameController
	method init
	end method
	end class

	new int,iMemoTryb
	push 1
	pop iMemoTryb
	new int,iMemoW
	new int,iMemoH
	new int,iMemoAI
	push 0
	pop iMemoAI
	class TMemo
	method init
	end method
	method tinit
	localstring $1
	localstring $2
	localstring $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push 0
	push 3
	call $1,gete
	push "pyz"
	cmpje
	cmp0
	je l4240
	push "anbkg"
	push $1
	push 0
	cthis newanima
	jmp l4239
l4240:
	push "anbkg"
	push $1
	push 0
	cthis newimg
l4239:
	push "antaf"
	push $2
	push 20
	cthis newanima
	push "annak"
	push $3
	push 20
	cthis newanima
	new int,ipredkosc
	push 25
	pop ipredkosc
	new gmimgvec,grtaf
	new gmimgvec,grnak
	new vector,veci
	call veci,TMemo0
	localstring $5
	localint $6
	localint $7
	localint $8
	localint $9
	push 0
	pop $6
	localint $10
	push 0
	pop $10
l4241:
	push $10
	push iMemoW
	cmpjl
	cmp0
	je l4242
	jmp l4244
l4243:
	add $10,1
	pop $10
	jmp l4241
l4244:
	push 0
	pop $9
l4245:
	push $9
	push iMemoH
	cmpjl
	cmp0
	je l4246
	jmp l4248
l4247:
	add $9,1
	pop $9
	jmp l4245
l4248:
	push "antaf"
	push $6
	pop $b
	popax
	add $a,$b
	spushs
	push $6
	spop $e
	new anima,[$e]
	call [$e],TMemo1
	push "annak"
	push $6
	pop $b
	popax
	add $a,$b
	spushs
	push $6
	spop $e
	new anima,[$e]
	call [$e],TMemo2
	add $6,1
	pop $6
	jmp l4247
l4246:
	jmp l4243
l4242:
	call antaf,hide
	call annak,hide
	call grtaf,hash
	push 0
	pop $6
	call antaf,getw
	push $4
	pop $b
	popax
	add $a,$b
	pop $7
	call antaf,geth
	push $4
	pop $b
	popax
	add $a,$b
	pop $8
	push 0
	pop $10
l4249:
	push $10
	push iMemoW
	cmpjl
	cmp0
	je l4250
	jmp l4252
l4251:
	add $10,1
	pop $10
	jmp l4249
l4252:
	push 0
	pop $9
l4253:
	push $9
	push iMemoH
	cmpjl
	cmp0
	je l4254
	jmp l4256
l4255:
	add $9,1
	pop $9
	jmp l4253
l4256:
	push $6
	call grtaf,get
	pop $5
	push $5
	spushs
	push $7
	push $10
	pop $b
	popax
	mul $a,$b
	push $8
	push $9
	pop $b
	popax
	mul $a,$b
	spop $a
	call [$a],ansetbpos
	push $5
	spushs
	push $7
	push $10
	pop $b
	popax
	mul $a,$b
	push $8
	push $9
	pop $b
	popax
	mul $a,$b
	spop $a
	call [$a],ansetbpos
	push $5
	spushs
	push A
	push "col"
	push $10
	push "row"
	push $9
	spop $a
	call [$a],vars2
	push $5
	spushs
	push 10
	push 2
	push $6
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	push 1
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setz
	push $6
	call grnak,get
	spushs
	push 10
	push 2
	push $6
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setz
	add $6,1
	pop $6
	jmp l4255
l4254:
	jmp l4251
l4250:
	push "link"
	call grtaf,eval
	push "link"
	call grnak,eval
	push iResX
	call grtaf,getw
	pop $b
	popax
	sub $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $7
	push iResY
	call grtaf,geth
	pop $b
	popax
	sub $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $8
	push $7
	push $8
	call grtaf,move
	push $7
	push $8
	call grnak,move
	new int,iplayer
	push 1
	pop iplayer
	new int,icompplayer
	push 0
	pop icompplayer
	new classfadeinout,clfio
	new classfadeinout,clfio2
	new int,imemostate
	push 0
	pop imemostate
	new string,staf1
	new string,staf2
	new string,snak1
	new string,snak2
	new int,ileai
	push 1
	push 5
	push iMemoW
	push iMemoH
	pop $b
	popax
	mul $a,$b
	push 0.2
	pop $b
	popax
	mul $a,$b
	push 10
	cthis between
	push iMemoAI
	pop $b
	popax
	add $a,$b
	push 20
	cthis between
	pop ileai
	new string,sset1
	new string,sset2
	new vector,vecai
	call vecai,TMemo3
	new int,iaistate
	push 0
	pop iaistate
	push "timwait"
	push 500
	push 1
	cthis newtimer
	call timwait,mresize
	push "timpoka"
	push 500
	push 1
	push "endset22"
	cthis cnewtimerfin
	end method
	method TMemo0
	push 0
	call antaf,nofframes
	cthis vecnewint
	cthis hash
	end method
	method TMemo1
	localint $1
	pop $1
	push "antaf"
	cthis copy
	push 0
	push $1
	push 2
	pop $b
	popax
	div $a,$b
	psax
	call veci,get
	cthis setframe
	cthis anaddfilter
	cthis unlink
	cthis getname
	call grtaf,add
	end method
	method TMemo2
	localint $1
	pop $1
	push "annak"
	cthis copy
	cthis anaddfilter
	cthis unlink
	cthis getname
	call grnak,add
	end method
	method TMemo3
	cthis mresize
	push "string"
	cthis type
	end method
	method tm_start
	push 1
	pop imemostate
	push iMemoTryb
	push 1
	cmpje
	cmp0
	je l4258
	push 2
	pop icompplayer
l4258:
	end method
	method aigo
	push 11
	pop imemostate
	push sset1
	cthis tclicks
	end method
	method aigo2
	push sset2
	cthis tclicks
	end method
	method aifind1
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	push "null"
	cmpje
	cmp0
	je l4260
	push 1
	popax
	sub 0,$a
	ret
l4260:
	localint $4
	push $1
	spushs
	spop $a
	call [$a],framenr
	pop $4
	localstring $5
l4261:
	push $2
	push $3
	cmpjl
	cmp0
	je l4262
	jmp l4264
l4263:
	add $2,1
	pop $2
	jmp l4261
l4264:
	push $2
	cthis get
	pop $5
	push $5
	push "null"
	cmpjne
	cmp0
	je l4266
	push $5
	push $1
	cmpjne
	cmp0
	je l4266
	push $4
	push $5
	spushs
	spop $a
	call [$a],framenr
	cmpje
	cmp0
	je l4266
	push $2
	cthis tstats
	jmp l4268
l4266:
	push 0
	jmp l4268
l4267:
	push 1
l4268:
	cmp0
	je l4269
	push $2
	ret
l4269:
	jmp l4263
l4262:
	push 1
	popax
	sub 0,$a
	end method
	method tstats
	localint $1
	pop $1
	push 100
	push $1
	push 10
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	sub $a,$b
	cthis stats
	end method
	method startai
	localstring $1
	pop $1
	push iplayer
	push icompplayer
	cmpje
	cmp0
	je l4271
	localint $2
	call vecai,size
	push ileai
	cthis min
	pop $2
	push $1
	push "aigo"
	cmpje
	cmp0
	je l4273
	push 11
	pop imemostate
	localint $3
	localint $4
	localint $5
	push 1
	popax
	sub 0,$a
	pop $5
	push 0
	pop $3
l4274:
	push $3
	push $2
	cmpjl
	cmp0
	je l4275
	jmp l4277
l4276:
	add $3,1
	pop $3
	jmp l4274
l4277:
	push $3
	call vecai,get
	push $3
	push 1
	pop $b
	popax
	add $a,$b
	push $2
	call vecai,aifind1
	pop $5
	push $5
	push 0
	cmpjae
	cmp0
	je l4279
	push $3
	cthis tstats
	jmp l4281
l4279:
	push 0
	jmp l4281
l4280:
	push 1
l4281:
	cmp0
	je l4282
	push $3
	pop $4
	push $2
	pop $3
	jmp l4278
l4282:
	push 1
	popax
	sub 0,$a
	pop $5
l4278:
	jmp l4276
l4275:
	push $5
	push 0
	cmpjae
	cmp0
	je l4284
	push $4
	call vecai,get
	pop sset1
	push $5
	call vecai,get
	pop sset2
	jmp l4283
l4284:
	call grtaf,rand
	pop sset1
	push "null"
	pop sset2
l4283:
	jmp l4272
l4273:
	push sset2
	push "null"
	cmpje
	cmp0
	je l4286
	localint $6
	push sset1
	push 0
	push $2
	call vecai,aifind1
	pop $6
	push $6
	push 0
	cmpjae
	cmp0
	je l4288
	push $6
	cthis tstats
	jmp l4290
l4288:
	push 0
	jmp l4290
l4289:
	push 1
l4290:
	cmp0
	je l4291
	push $6
	call vecai,get
	pop sset2
	jmp l4287
l4291:
	push sset1
	call grtaf,randdiff
	pop sset2
l4287:
l4286:
l4272:
	push "timwait"
	push $1
	popax
	pop $b
	psax
	call [$b],operator<
	call timwait,play
l4271:
	end method
	method endset3
	push 1
	pop imemostate
	push iMemoTryb
	push 0
	cmpja
	cmp0
	je l4293
	cthis tnextplayer
	push "aigo"
	cthis startai
l4293:
	end method
	method endset2
	call timpoka,play
	end method
	method endset22
	push 3
	pop imemostate
	push snak2
	spushs
	spop $a
	call [$a],hide
	push staf1
	spushs
	spop $a
	call [$a],framenr
	push staf2
	spushs
	spop $a
	call [$a],framenr
	cmpje
	cmp0
	je l4295
	push "grnak"
	push snak1
	popax
	pop $b
	psax
	call [$b],operator-
	push snak2
	popax
	pop $b
	psax
	call [$b],operator-
	popax
	push "grtaf"
	push staf1
	popax
	pop $b
	psax
	call [$b],operator-
	push staf2
	popax
	pop $b
	psax
	call [$b],operator-
	popax
	push staf1
	call vecai,find
	push "null"
	call vecai,set
	push staf2
	call vecai,find
	push "null"
	call vecai,set
	call grtaf,empty
	cmp0
	je l4297
	push 5
	pop imemostate
	push 1
	push ipredkosc
	popax
	sub 0,$a
	push staf1
	push "null"
	call clfio,setopacity
	push 1
	push ipredkosc
	popax
	sub 0,$a
	push staf2
	push "null"
	call clfio2,setopacity
	cthis tfinish
	jmp l4296
l4297:
	push 1
	push ipredkosc
	popax
	sub 0,$a
	push staf1
	push "TMemo4"
	call clfio,setopacity
	push 1
	push ipredkosc
	popax
	sub 0,$a
	push staf2
	push "null"
	call clfio2,setopacity
	cthis tpoint
l4296:
	jmp l4294
l4295:
	push snak1
	spushs
	spop $a
	call [$a],show
	push snak2
	spushs
	spop $a
	call [$a],show
	push 1
	push ipredkosc
	push snak1
	push "endset3"
	call clfio,setopacity
	push 1
	push ipredkosc
	push snak2
	push "null"
	call clfio2,setopacity
	cthis terror
l4294:
	end method
	method TMemo4
	push staf1
	spushs
	spop $a
	call [$a],hide
	push staf2
	spushs
	spop $a
	call [$a],hide
	push iplayer
	push icompplayer
	cmpjne
	cmp0
	je l4299
	push 1
	pop imemostate
l4299:
	push "aigo"
	cthis startai
	end method
	method tclicks
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getcx
	push $1
	spushs
	spop $a
	call [$a],getcy
	cthis tclick
	end method
	method tclick
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 1
	call grnak,isin
	cmp0
	je l4301
	localstring $3
	call grnak,getsfound
	pop $3
	jmp l4300
l4301:
	ret
l4300:
	cthis tchoose
	push imemostate
	push 1
	cmpje
	cmp0
	jne l4304
	push imemostate
	push 11
	cmpje
	jmp l4305
l4303:
	push 0
	jmp l4305
l4304:
	push 1
l4305:
	cmp0
	je l4306
	sub imemostate,1
	pop imemostate
	push $3
	pop snak1
	push $3
	spushs
	spop $a
	call [$a],getcx
	push $3
	spushs
	spop $a
	call [$a],getcy
	push 1
	push 1
	call grtaf,getimg
	pop staf1
	push staf1
	push "null"
	call vecai,vecset
	push staf1
	call vecai,addbegin
	push 30
	call vecai,veclimes
	push 1
	push ipredkosc
	popax
	sub 0,$a
	push $3
	push "TMemo5"
	call clfio,setopacity
	jmp l4302
l4306:
	push imemostate
	push 2
	cmpje
	cmp0
	jne l4309
	push imemostate
	push 12
	cmpje
	jmp l4310
l4308:
	push 0
	jmp l4310
l4309:
	push 1
l4310:
	cmp0
	je l4311
	push 2
	popax
	sub imemostate,$a
	pop imemostate
	push $3
	pop snak2
	push $3
	spushs
	spop $a
	call [$a],getcx
	push $3
	spushs
	spop $a
	call [$a],getcy
	push 1
	push 1
	call grtaf,getimg
	pop staf2
	push staf2
	push "null"
	call vecai,vecset
	push staf2
	call vecai,addbegin
	push 30
	call vecai,veclimes
	push 1
	push ipredkosc
	popax
	sub 0,$a
	push $3
	push "endset2"
	call clfio,setopacity
l4311:
l4302:
	end method
	method TMemo5
	push snak1
	spushs
	spop $a
	call [$a],hide
	push 2
	popax
	add imemostate,$a
	pop imemostate
	push "aigo2"
	cthis startai
	end method
	method tnextplayer
	push iplayer
	push 1
	cmpje
	cmp0
	je l4313
	push 2
	jmp l4312
l4313:
	push 1
l4312:
	pop iplayer
	end method
	method tfitinsurf
	localint $1
	localint $2
	pop $2
	pop $1
	push "unlink"
	call grtaf,eval
	push "unlink"
	call grnak,eval
	localdef $3
	push $1
	push iMemoW
	pop $b
	popax
	div $a,$b
	psax
	pop $3
	localdef $4
	push $2
	push iMemoH
	pop $b
	popax
	div $a,$b
	psax
	pop $4
	localdef $5
	call grtaf,first
	spushs
	spop $a
	call [$a],getw
	pop $5
	localdef $6
	call grtaf,first
	spushs
	spop $a
	call [$a],geth
	pop $6
	localdef $7
	push $4
	push $6
	pop $b
	popax
	sub $a,$b
	pop $7
	localdef $8
	push $3
	push $5
	pop $b
	popax
	sub $a,$b
	pop $8
	localdef $9
	push 0
	pop $9
	localint $10
	push 0
	pop $10
l4314:
	push $10
	push iMemoW
	cmpjl
	cmp0
	je l4315
	jmp l4317
l4316:
	add $10,1
	pop $10
	jmp l4314
l4317:
	localint $11
	push 0
	pop $11
l4318:
	push $11
	push iMemoH
	cmpjl
	cmp0
	je l4319
	jmp l4321
l4320:
	add $11,1
	pop $11
	jmp l4318
l4321:
	localdef $12
	push $9
	call grtaf,get
	pop $12
	push $12
	spushs
	push $3
	push $10
	pop $b
	popax
	mul $a,$b
	push $4
	push $11
	pop $b
	popax
	mul $a,$b
	spop $a
	call [$a],ansetbpos
	push $8
	push 0
	cmpjl
	cmp0
	je l4323
	push $10
	push 2
	pop $b
	popax
	div $a,$b
	push $d
	jmp l4325
l4323:
	push 0
	jmp l4325
l4324:
	push 1
l4325:
	cmp0
	je l4326
	push $12
	spushs
	push 0
	push $7
	push 2
	pop $b
	popax
	div $a,$b
	psax
	spop $a
	call [$a],move
l4326:
	push $9
	call grnak,get
	spushs
	push $12
	spushs
	spop $a
	call [$a],getpx
	push $12
	spushs
	spop $a
	call [$a],getpy
	spop $a
	call [$a],ansetbpos
	add $9,1
	pop $9
	jmp l4320
l4319:
	jmp l4316
l4315:
	push iResX
	call grnak,getex
	pop $b
	popax
	sub $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $1
	push iResY
	call grnak,getey
	pop $b
	popax
	sub $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $2
	push $1
	push $2
	call grnak,move
	push $1
	push $2
	call grtaf,move
	push "link"
	call grtaf,eval
	push "link"
	call grnak,eval
	end method
	method tm_mouselclick
	push A
	push 1
	push 2
	call imemostate,in
	cmp0
	je l4328
	call mouse,getpos
	cthis tclick
l4328:
	end method
	method tfinish
	end method
	method tpoint
	end method
	method terror
	end method
	method tchoose
	end method
	end class

	class classadvstdgame
	parent classadvcontroller
	method init
	call clbuts,reset
	clparent classadvcontroller,init
	cthis advsave_game
	new img,_im_podbg
	push igmappw
	push 1
	cthis black
	push 255
	call _im_podbg,create
	push 0
	push igmapph
	push 1
	pop $b
	popax
	sub $a,$b
	call _im_podbg,setpos
	push 2000
	popax
	sub 0,$a
	call _im_podbg,setz
	new img,_im_podbg2
	push 1
	push igmapph
	cthis black
	push 255
	call _im_podbg2,create
	push igmappw
	push 1
	pop $b
	popax
	sub $a,$b
	push 0
	call _im_podbg2,setpos
	push 2000
	popax
	sub 0,$a
	call _im_podbg2,setz
	end method
	method add_helps
	new gmimgvec,__grhelp
	new anima,__anhp
	push "scripts/common/aktywny.pyz"
	call __anhp,load
	call __anhp,hide
	localint $1
	push 0
	pop $1
l4329:
	push $1
	push 100
	cmpjl
	cmp0
	je l4330
	jmp l4332
l4331:
	add $1,1
	pop $1
	jmp l4329
l4332:
	localstring $2
	push "__anhp"
	push $1
	pop $b
	popax
	add $a,$b
	pop $2
	push "__anhp"
	push $2
	cthis copyanima
	push $2
	spushs
	push 2700
	spop $a
	call [$a],setz
	push $2
	call __grhelp,add
	jmp l4331
l4330:
	end method
	method clbuts_help_butclick
	localint $1
	push 0
	pop $1
	localint $2
	push 0
	pop $2
l4333:
	push $2
	call grbuts,size
	cmpjl
	cmp0
	je l4334
	jmp l4336
l4335:
	add $2,1
	pop $2
	jmp l4333
l4336:
	localstring $3
	push $2
	call grbuts,get
	pop $3
	localstring $4
	localstring $5
	push $3
	spushs
	spop $a
	call [$a],gettyp
	pop $5
	push $5
	push "item"
	cmpje
	cmp0
	jne l4339
	push $5
	push "but"
	cmpje
	cmp0
	jne l4339
	push $5
	push "doors"
	cmpje
	jmp l4340
l4338:
	push 0
	jmp l4340
l4339:
	push 1
l4340:
	cmp0
	je l4341
	push $3
	spushs
	spop $a
	call [$a],enabled
	cmp0
	je l4341
	push $3
	spushs
	spop $a
	call [$a],isvisible
	cmp0
	jne l4344
	push $3
	spushs
	spop $a
	call [$a],ismask
	jmp l4345
l4343:
	push 0
	jmp l4345
l4344:
	push 1
l4345:
	jmp l4346
l4341:
	push 0
	jmp l4346
l4342:
	push 1
l4346:
	cmp0
	je l4347
	push $1
	call __grhelp,get
	pop $4
	add $1,1
	pop $1
	push $4
	spushs
	push $3
	spushs
	spop $a
	call [$a],getcx
	push $3
	spushs
	spop $a
	call [$a],getcy
	spop $a
	call [$a],setpos
	push $5
	push "doors"
	cmpje
	cmp0
	je l4349
	push $4
	spushs
	push 1
	spop $a
	call [$a],play
	jmp l4348
l4349:
	call gameapi,getgamename
	spushs
	push _stalkpref
	push $3
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],hasvar
	cmp0
	je l4351
	push $4
	spushs
	push 2
	spop $a
	call [$a],play
	jmp l4350
l4351:
	push $4
	spushs
	push 0
	spop $a
	call [$a],play
l4350:
l4348:
	push $4
	call clcamera,removefrombgr
	push $3
	call clcamera,findinbgr
	pop $5
	push $5
	push "null"
	cmpjne
	cmp0
	je l4353
	push $5
	push $4
	call clcamera,addtobgr
l4353:
l4347:
	jmp l4335
l4334:
	end method
	end class

	new string,sAskerGame
	push "global.sav"
	new classfullsave,clsmen
	call clsmen,stdload
	class StdGame
	parent classadv
	parent Localize
	method init
	localstring $1
	pop $1
	push 0
	pop AdventureGame
	push $1
	clparent classadv,init
	clparent Localize,init
	push 0
	push 0
	call clbuts,setcursorpos
	push 0
	push 0
	call claskexit,setcursorpos
	push $1
	cthis path=
	call clbuts,reset
	call claskexit,reset
	call advmouse,setstd
	push PrzygodaMode
	cmp0
	je l4355
	cthis advsaveonstart
	cthis advsave_game
l4355:
	end method
	method stdstart
	push "refreshstdstate"
	call ccs,enter
	end method
	method refreshstdstate
	cthis advsetstdstate
	call butgame,refresh
	end method
	method timfinito
	push GAME
	spushs
	push "_timfinito"
	spop $a
	call [$a],hasvar
	neg
	cmp0
	je l4357
	push GAME
	spushs
	push "_timfinito"
	push 100
	push "StdGame0"
	spop $a
	call [$a],timer=
l4357:
	call _timfinito,play
	end method
	method StdGame0
	cthis advstdstate
	cmp0
	je l4359
	cthis mend
l4359:
	end method
	method Button_stdoff
	push "butmoveoff"
	push "StdGame1"
	cthis addmethod
	end method
	method StdGame1
	cthis advstdstate
	cmp0
	je l4361
	call advmouse,setstd
l4361:
	end method
	method crect
	push 600
	push 196
	push 403
	push 497
	new Rect,rec
	end method
	method crect2
	push 6
	push 174
	push 1012
	push 530
	new Rect,rec2
	end method
	method cshowbut
	localstring $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	call clbuts,StdGame2
	end method
	method StdGame2
	localstring $1
	localdef $2
	pop $2
	pop $1
	push $1
	push "getcx"
	call buts,callimgfun
	push $1
	push "getcy"
	call buts,callimgfun
	push $2
	call clp,show
	end method
	method key_down
	push igmdebug
	cmp0
	je l4363
	push "lctrl"
	call keyboard,iskeydown
	cmp0
	je l4363
	push "r"
	call keyboard,iskey
	jmp l4365
l4363:
	push 0
	jmp l4365
l4364:
	push 1
l4365:
	cmp0
	je l4366
	cthis crestart
l4366:
	end method
	method askrestart
	call claskexit,askrestart
	end method
	end class

	new string,HiddenPath
	push "null"
	pop HiddenPath
	new string,HiddenExclude
	push "null"
	pop HiddenExclude
	new string,HiddenEls
	push "null"
	pop HiddenEls
	new int,HiddenShape
	push 0
	pop HiddenShape
	class Hidden
	method init_hidden
	localstring $1
	pop $1
	push HiddenPath
	push "null"
	cmpjne
	cmp0
	je l4368
	push HiddenPath
	cthis path=
	push "null"
	pop HiddenPath
l4368:
	push $1
	neg
	cmp0
	je l4370
	push ""
	pop $1
l4370:
	new int,bhoshape
	push HiddenShape
	pop bhoshape
	push 0
	pop HiddenShape
	new int,ihoclickdelay
	push "hoclick_delay:"
	call dbconf,dbget
	pop ihoclickdelay
	new int,ihoclicktimes
	push "hoclick_times:"
	call dbconf,dbget
	pop ihoclicktimes
	new int,ihoclickkara
	push "hoclick_kara:"
	call dbconf,dbget
	pop ihoclickkara
	new string,stakeitemtype
	push "direct"
	pop stakeitemtype
	new int,ihotxtz
	push 507
	pop ihotxtz
	new int,ihoclicker
	push 0
	pop ihoclicker
	push "timhoclicker"
	push ihoclickdelay
	push "Hidden0"
	cthis timer=
	push "timhokara"
	push ihoclickkara
	push "Hidden1"
	cthis timer=
	new img,imgkara
	push igmappw
	push igmapph
	cthis black
	push 128
	call imgkara,create
	push 2222
	call imgkara,setz
	call imgkara,hide
	push A
	push "tolist0 60"
	push "tolist1 60"
	push "clickoblok"
	cthis sfxs=
	push "fxtolist2"
	push "tolist0.ogg"
	cthis newsfx
	push "fxtolist3"
	push "tolist1.ogg"
	cthis newsfx
	push "fxtolist4"
	push "tolist2.ogg"
	cthis newsfx
	push "fxtolist5"
	push "tolist3.ogg"
	cthis newsfx
	push "fxtolist6"
	push "tolist4.ogg"
	cthis newsfx
	push "grels"
	push "els"
	push $1
	pop $b
	popax
	add $a,$b
	push 10
	cthis newgrimg
	new gmimgvec,grelscopy
	push "grels"
	call grelscopy,copy
	push HiddenExclude
	push "null"
	cmpjne
	cmp0
	je l4372
	new gmimgvec,grexclude
	push "dbexc"
	push HiddenExclude
	cthis lang_db
	localint $2
	push 0
	pop $2
l4373:
	push $2
	call dbexc,getrowsno
	cmpjl
	cmp0
	je l4374
	jmp l4376
l4375:
	add $2,1
	pop $2
	jmp l4373
l4376:
	localdef $3
	push $2
	push 0
	call dbexc,get
	call grels,getsac
	pop $3
	push $3
	spushs
	spop $a
	call [$a],hide
	push $3
	call grels,remove
	push $3
	call grexclude,add
	jmp l4375
l4374:
	push "null"
	pop HiddenExclude
l4372:
	cthis mpanel
	new string,sclickedho
	push "null"
	pop sclickedho
	localint $4
	localint $5
	localint $6
	localint $7
	localstring $8
	localstring $9
	localstring $10
	localstring $11
	new gmimgvec,grtxt
	push bhoshape
	cmp0
	je l4378
	localint $2
	push 0
	pop $2
l4379:
	push $2
	call grels,size
	cmpjl
	cmp0
	je l4380
	jmp l4382
l4381:
	add $2,1
	pop $2
	jmp l4379
l4382:
	push $2
	call grels,get
	pop $10
	push $10
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],nofframes
	push 2
	cmpja
	cmp0
	je l4384
	push "anshadow_"
	push $10
	pop $b
	popax
	add $a,$b
	pop $8
	push $10
	push $8
	cthis copyanima
	push $8
	spushs
	push 1
	popax
	sub 0,$a
	push 2
	spop $a
	call [$a],setframe
	push $8
	spushs
	push ihotxtz
	spop $a
	call [$a],setz
	push $8
	spushs
	spop $a
	call [$a],show
	push $10
	spushs
	push "stxtview"
	push $8
	spop $a
	call [$a],var2
	push $8
	call grtxt,add
l4384:
	jmp l4381
l4380:
	jmp l4377
l4378:
	push HiddenEls
	push "null"
	cmpjne
	cmp0
	je l4386
	push "dbtxts"
	push HiddenEls
	cthis lang_db
	push "null"
	pop HiddenEls
	jmp l4385
l4386:
	push "dbtxts"
	push "els_"
	cthis lang_db
l4385:
	new vector,vtexts
	push "string"
	call vtexts,type
	new gmimgvec,grtxtgrey
	localint $12
	new int,itxtheight
	push 16
	spushs
	spop $h
	call $h,igetsc
	pop itxtheight
	push "hoguifont:"
	call dbconf,dbget
	pop $8
	push $8
	push "null"
	cmpje
	cmp0
	je l4388
	push sgmfontitalic
	pop $8
l4388:
	push "fnttxts"
	push $8
	push itxtheight
	cthis newfont
	localint $2
	push 0
	pop $2
l4389:
	push $2
	call dbtxts,getrowsno
	cmpjl
	cmp0
	je l4390
	jmp l4392
l4391:
	add $2,1
	pop $2
	jmp l4389
l4392:
	push $2
	call dbtxts,getcolsno
	push 1
	cmpja
	cmp0
	je l4394
	push 0
	pop $12
	push $2
	push 0
	call dbtxts,get
	pop $8
	push $8
	push "<external>"
	cmpje
	cmp0
	je l4396
	push $2
	push 1
	call dbtxts,get
	pop $10
	push $2
	push 2
	call dbtxts,get
	pop $9
	push $10
	pop $8
	push 1
	popax
	sub 0,$a
	pop $4
	jmp l4395
l4396:
	push $8
	push "<virtual>"
	cmpje
	cmp0
	je l4398
	push 1
	pop $12
	push $2
	push 1
	call dbtxts,get
	pop $8
	push $8
	call grels,getsac
	pop $10
	push 1
	popax
	sub 0,$a
	pop $4
	jmp l4397
l4398:
	push $8
	call grels,getsac
	pop $10
	push $2
	push 1
	call dbtxts,get
	pop $9
	push $9
	call vtexts,find
	pop $4
l4397:
l4395:
	push $4
	push 0
	cmpjae
	cmp0
	je l4400
	push 0
	pop $5
l4401:
	push $5
	call grtxt,size
	cmpjl
	cmp0
	je l4402
	jmp l4404
l4403:
	add $5,1
	pop $5
	jmp l4401
l4404:
	push $5
	call grtxt,get
	pop $11
	push $11
	spushs
	spop $a
	call [$a],idvtext
	push $4
	cmpje
	cmp0
	je l4406
	push $10
	spushs
	push "stxtview"
	push $11
	spop $a
	call [$a],var2
	push $11
	spushs
	push 1
	spop $a
	call [$a],mupdatetxt
l4406:
	jmp l4403
l4402:
	jmp l4399
l4400:
	push $12
	cmp0
	je l4408
	push $10
	spushs
	push "stxtview"
	push "<virtual>"
	spop $a
	call [$a],var2
	jmp l4407
l4408:
	push $9
	call vtexts,add
	push "txtel_"
	push $8
	pop $b
	popax
	add $a,$b
	pop $8
	push $2
	push 0
	call dbtxts,get
	push "<external>"
	cmpje
	cmp0
	je l4410
	push $8
	push $9
	push "fnttxts"
	cthis hoexternalcol
	cthis newtext
	push $8
	spushs
	push "externalan"
	push $10
	spop $a
	call [$a],var2
	push $10
	spushs
	push "externaltxt"
	push $8
	spop $a
	call [$a],var2
	jmp l4409
l4410:
	push $8
	push $9
	push "fnttxts"
	cthis guifontcolor
	cthis newtext
l4409:
	push $8
	spushs
	spop $a
	call [$a],hide
	push $8
	spushs
	push ihotxtz
	spop $a
	call [$a],setz
	push $8
	spushs
	push A
	push "stekst"
	push $9
	push "icnt"
	push 1
	push "iidtxt"
	push 0
	push "idvtext"
	call vtexts,size
	push 1
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],vars2
	push $8
	spushs
	push "mupdatetxt"
	push "Hidden2"
	spop $a
	call [$a],addmethod
	push $8
	spushs
	push "mupdatetxt2"
	push "Hidden3"
	spop $a
	call [$a],addmethod
	push $8
	call grtxt,add
	push $10
	spushs
	push "stxtview"
	push $8
	spop $a
	call [$a],var2
l4407:
l4399:
l4394:
	jmp l4391
l4390:
	push A
	push "irows"
	push 3
	push "icols"
	push 4
	call grtxt,vars2
	push "lastid"
	push "Hidden4"
	call grtxt,addmethod
	push "shownext"
	push "Hidden5"
	call grtxt,addmethod
	push 0
	pop $2
l4420:
	push $2
	push 12
	cmpjl
	cmp0
	je l4421
	jmp l4423
l4422:
	add $2,1
	pop $2
	jmp l4420
l4423:
	call grtxt,shownext
	jmp l4422
l4421:
l4377:
	new int,ilehonaraz
	push 35
	pop ilehonaraz
	new classancounter,ctcen
	push "timcenter"
	push ilehonaraz
	call ctcen,set
	new int,idtimcenter
	push 0
	pop idtimcenter
	new real,rcykcenter
	push 18.0
	pop rcykcenter
	new string,shidenmov
	push "null"
	pop shidenmov
	localint $2
	push 0
	pop $2
l4424:
	push $2
	push ilehonaraz
	cmpjl
	cmp0
	je l4425
	jmp l4427
l4426:
	add $2,1
	pop $2
	jmp l4424
l4427:
	localdef $13
	push 3
	pop $13
	push "timcenter"
	push $2
	pop $b
	popax
	add $a,$b
	push "Hidden6"
	cthis cycle=
	push "timcenter"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push "mstart"
	push "Hidden7"
	spop $a
	call [$a],addmethod
	push "timcenter"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push $2
	spop $a
	call [$a],Hidden8
	push "timcenterb"
	push $2
	pop $b
	popax
	add $a,$b
	push 500
	push "Hidden9"
	cthis timer=
	push "timcenterb"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push A
	push "myid"
	push $2
	spop $a
	call [$a],vars2
	jmp l4426
l4425:
	localdef $3
	cthis getgraphpath
	pop $3
	push "common"
	cthis path=
	localdef $14
	push 60
	pop $14
	push "anhodym"
	push "dymki.pyz"
	push 600
	cthis newanima
	call anhodym,hide
	new gmimgvec,grdym
	push "anhodym"
	push $14
	call grdym,ancopies
	new classancounter,ctdym
	push "anhodym_"
	push $14
	call ctdym,set
	push A
	push "gwiazdki1.pyzGH"
	push "bable.pyzH"
	cthis imgs=
	push "guishowhint"
	push "angwiazdkif"
	cthis copyanima
	push "anbable"
	push "anbable2"
	cthis copyanima
	new gmimgvec,grgwiazdkif
	localint $2
	push 0
	pop $2
l4465:
	push $2
	push 4
	cmpjl
	cmp0
	je l4466
	jmp l4468
l4467:
	add $2,1
	pop $2
	jmp l4465
l4468:
	push "angwiazdkif"
	push "angwiazdkif"
	push $2
	pop $b
	popax
	add $a,$b
	cthis copyanima
	push "angwiazdkif"
	push $2
	pop $b
	popax
	add $a,$b
	call grgwiazdkif,add
	jmp l4467
l4466:
	push $3
	cthis setgraphpath
	new int,izels
	push 10
	pop izels
	push "Hidden10"
	call grelscopy,each
	push "Hidden11"
	call grels,each
	push 0
	pop $2
l4469:
	push $2
	call grels,size
	cmpjl
	cmp0
	je l4470
	localdef $3
	push $2
	call grels,get
	pop $3
	push $3
	cthis istakenhobject
	cmp0
	je l4472
	push $3
	spushs
	push "stxtview"
	spop $a
	call [$a],hasvar
	jmp l4474
l4472:
	push 0
	jmp l4474
l4473:
	push 1
l4474:
	cmp0
	je l4475
	push $3
	spushs
	spop $a
	call [$a],stxtview
	pop sclickedho
	push $3
	cthis removehobject
	push "null"
	pop sclickedho
	jmp l4471
l4475:
	add $2,1
	pop $2
l4471:
	jmp l4469
l4470:
	push 0
	pop $2
l4476:
	push $2
	call grtxt,size
	cmpjl
	cmp0
	je l4477
	localdef $3
	push $2
	call grtxt,get
	pop $3
	push $3
	spushs
	push "externalan"
	spop $a
	call [$a],hasvar
	cmp0
	je l4479
	push $3
	spushs
	spop $a
	call [$a],externalan
	cthis istakenhoitem
	jmp l4481
l4479:
	push 0
	jmp l4481
l4480:
	push 1
l4481:
	cmp0
	je l4482
	push $3
	spushs
	spop $a
	call [$a],externalan
	cthis checkexternalobj
	jmp l4478
l4482:
	add $2,1
	pop $2
l4478:
	jmp l4476
l4477:
	push igmdebug
	cmp0
	je l4484
	new string,smovedfont
	push 14
	cthis stdfont
	pop smovedfont
	push "txtmovedho"
	push ""
	push smovedfont
	push 240
	cthis grey
	cthis newtext
	push 1500
	call txtmovedho,setz
	push "txtmovedho2"
	push ""
	push smovedfont
	push 2
	cthis grey
	cthis newtext
	push 1499
	call txtmovedho2,setz
l4484:
	end method
	method Hidden0
	push 0
	pop ihoclicker
	end method
	method Hidden1
	call imgkara,hide
	push 1
	pop igmstate
	end method
	method Hidden2
	localint $1
	pop $1
	push $1
	popax
	add icnt,$a
	pop icnt
	push stekst
	push " 0/"
	pop $b
	popax
	add $a,$b
	push icnt
	pop $b
	popax
	add $a,$b
	cthis txtset
	end method
	method Hidden3
	localint $1
	pop $1
	push $1
	popax
	add iidtxt,$a
	pop iidtxt
	push stekst
	push " "
	pop $b
	popax
	add $a,$b
	push iidtxt
	pop $b
	popax
	add $a,$b
	push "/"
	pop $b
	popax
	add $a,$b
	push icnt
	pop $b
	popax
	add $a,$b
	cthis txtset
	end method
	method Hidden4
	localint $1
	push 0
	pop $1
l4411:
	push $1
	cthis size
	cmpjl
	cmp0
	je l4412
	push $1
	cthis get
	spushs
	spop $a
	call [$a],isvisible
	jmp l4414
l4412:
	push 0
	jmp l4414
l4413:
	push 1
l4414:
	cmp0
	je l4415
	add $1,1
	pop $1
	jmp l4411
l4415:
	push $1
	end method
	method Hidden5
	localint $1
	cthis lastid
	pop $1
	push $1
	cthis size
	cmpje
	cmp0
	je l4417
	ret
l4417:
	push $1
	push irows
	push icols
	pop $b
	popax
	mul $a,$b
	cmpjl
	cmp0
	je l4419
	localdef $2
	push $1
	cthis get
	pop $2
	localint $3
	push $1
	push icols
	pop $b
	popax
	div $a,$b
	psax
	pop $3
	localint $4
	push $1
	push icols
	pop $b
	popax
	div $a,$b
	push $d
	pop $4
	push $2
	spushs
	push igmappw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	call icols,to_r
	push 2.0
	pop $b
	popax
	div $a,$b
	psax
	call $4,to_r
	pop $b
	popax
	sub $a,$b
	push 0.5
	pop $b
	popax
	sub $a,$b
	push rgmscalex
	pop $b
	popax
	mul $a,$b
	push 120
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	sub $a,$b
	push $2
	spushs
	spop $a
	call [$a],getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call guihoinventory,getpy
	push 10
	pop $b
	popax
	add $a,$b
	push rgmscaley
	push 50
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	push $3
	push itxtheight
	push 2
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	push $2
	spushs
	spop $a
	call [$a],show
l4419:
	end method
	method Hidden6
	add icyk,1
	pop icyk
	push rpx
	popax
	add rdx,$a
	pop rdx
	push rpy
	popax
	add rdy,$a
	pop rdy
	push ietap
	push 2
	cmpje
	cmp0
	je l4429
	push shidenmov
	spushs
	push icyk
	call vhox,get
	push icyk
	call vhoy,get
	spop $a
	call [$a],ansetbpos
	jmp l4428
l4429:
	push shidenmov
	spushs
	push rdx
	push rdy
	spop $a
	call [$a],move
l4428:
	push rdx
	spushs
	spop $h
	call $h,to_i
	popax
	sub rdx,$a
	pop rdx
	push rdy
	spushs
	spop $h
	call $h,to_i
	popax
	sub rdy,$a
	pop rdy
	localdef $1
	call ctdym,get
	pop $1
	push $1
	spushs
	push shidenmov
	spushs
	spop $a
	call [$a],getcx
	push shidenmov
	spushs
	spop $a
	call [$a],getcy
	spop $a
	call [$a],setpos
	push $1
	spushs
	push shidenmov
	spushs
	spop $a
	call [$a],getz
	push 1
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setz
	push icyk
	push rcykcenter
	cmpjae
	cmp0
	je l4431
	push ietap
	push 1
	cmpje
	cmp0
	je l4433
	push idestx2
	pop idestx
	push idesty2
	pop idesty
	push 2
	pop ietap
	push shidenmov
	spushs
	spop $a
	call [$a],getcx
	push shidenmov
	spushs
	spop $a
	call [$a],getcy
	call anbable2,setpos
	push shidenmov
	spushs
	spop $a
	call [$a],getz
	push 1
	pop $b
	popax
	sub $a,$b
	call anbable2,setz
	push 0
	call anbable2,play
	push stakeitemtype
	push "center"
	cmpje
	cmp0
	je l4435
	call fxtolist2,playif
l4435:
	cthis mstart
	push stakeitemtype
	push "center"
	cmpje
	cmp0
	je l4437
	push "timcenterb"
	push myid
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],play
	jmp l4436
l4437:
	push stakeitemtype
	push "direct"
	cmpje
	cmp0
	je l4439
	cthis play
l4439:
l4436:
	jmp l4432
l4433:
	call fxclickoblok,play
	cthis getname
	call ctcen,retf
	call ctcen,allfree
	cmp0
	je l4441
	cthis advsetstdstate
	push 1
	pop igmstate
l4441:
	localstring $2
	push shidenmov
	spushs
	push "externaltxt"
	spop $a
	call [$a],hasvar
	cmp0
	je l4443
	push shidenmov
	pop $2
	jmp l4442
l4443:
	push shidenmov
	spushs
	spop $a
	call [$a],actionname
	pop $2
l4442:
	push $2
	cthis saveastaken
	push shidenmov
	cthis removehobject
	push $2
	push "_put"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	cthis hiddenobj_put
l4432:
	jmp l4430
l4431:
	push ietap
	push 1
	cmpje
	cmp0
	jne l4446
	push ietap
	push 2
	cmpje
	jmp l4447
l4445:
	push 0
	jmp l4447
l4446:
	push 1
l4447:
	cmp0
	je l4448
	push $1
	spushs
	push "go"
	spop $a
	call [$a],play
l4448:
	cthis play
l4430:
	end method
	method Hidden7
	localdef $1
	push shidenmov
	spushs
	spop $a
	call [$a],getcx
	pop $1
	localdef $2
	push shidenmov
	spushs
	spop $a
	call [$a],getcy
	pop $2
	push idestx
	push $1
	pop $b
	popax
	sub $a,$b
	spushs
	spop $h
	call $h,to_r
	push rcykcenter
	pop $b
	popax
	div $a,$b
	psax
	pop rpx
	push idesty
	push $2
	pop $b
	popax
	sub $a,$b
	spushs
	spop $h
	call $h,to_r
	push rcykcenter
	pop $b
	popax
	div $a,$b
	psax
	pop rpy
	push 0.0
	pop rdx
	push 0.0
	pop rdy
	push 0
	pop icyk
	push ietap
	push 2
	cmpje
	cmp0
	je l4450
	push 0
	push $1
	push $1
	push shidenmov
	spushs
	spop $a
	call [$a],getpx
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	sub $a,$b
	call vhox,set
	push 0
	push $2
	push $2
	push shidenmov
	spushs
	spop $a
	call [$a],getpy
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	sub $a,$b
	call vhoy,set
	push rpx
	push 0
	cmpjl
	cmp0
	je l4452
	localint $3
	push 1
	pop $3
l4453:
	push $3
	push rcykcenter
	cmpjle
	cmp0
	je l4454
	jmp l4456
l4455:
	add $3,1
	pop $3
	jmp l4453
l4456:
	push $3
	push rpx
	push $3
	push 1
	pop $b
	popax
	sub $a,$b
	call vhox,get
	pop $b
	popax
	add $a,$b
	push $3
	call rcykcenter,to_i
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push 5
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	sub $a,$b
	call vhox,set
	push $3
	push rpy
	push $3
	push 1
	pop $b
	popax
	sub $a,$b
	call vhoy,get
	pop $b
	popax
	add $a,$b
	push $3
	call rcykcenter,to_i
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push 5
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	sub $a,$b
	call vhoy,set
	jmp l4455
l4454:
	jmp l4451
l4452:
	localint $3
	push 1
	pop $3
l4457:
	push $3
	push rcykcenter
	cmpjle
	cmp0
	je l4458
	jmp l4460
l4459:
	add $3,1
	pop $3
	jmp l4457
l4460:
	push $3
	push rpx
	push $3
	push 1
	pop $b
	popax
	sub $a,$b
	call vhox,get
	pop $b
	popax
	add $a,$b
	push $3
	call rcykcenter,to_i
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push 5
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	call vhox,set
	push $3
	push rpy
	push $3
	push 1
	pop $b
	popax
	sub $a,$b
	call vhoy,get
	pop $b
	popax
	add $a,$b
	push $3
	call rcykcenter,to_i
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push 5
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	sub $a,$b
	call vhoy,set
	jmp l4459
l4458:
l4451:
	localreal $4
	localreal $5
	localreal $6
	localreal $7
	push idesty
	push $2
	pop $b
	popax
	sub $a,$b
	pop $4
	push rcykcenter
	push 1
	pop $b
	popax
	sub $a,$b
	call vhoy,get
	push 0
	call vhoy,get
	pop $b
	popax
	sub $a,$b
	pop $5
	push $4
	push $5
	pop $b
	popax
	div $a,$b
	psax
	pop $6
	push 1
	pop $3
l4461:
	push $3
	push rcykcenter
	cmpjle
	cmp0
	je l4462
	jmp l4464
l4463:
	add $3,1
	pop $3
	jmp l4461
l4464:
	push $3
	push $3
	call vhoy,get
	push $6
	pop $b
	popax
	mul $a,$b
	call vhoy,set
	jmp l4463
l4462:
l4450:
	end method
	method Hidden8
	localdef $1
	pop $1
	new vector,vhox
	push "real"
	call vhox,type
	push rcykcenter
	push 1
	pop $b
	popax
	add $a,$b
	push 0.0
	call vhox,resize
	new vector,vhoy
	push "real"
	call vhoy,type
	push rcykcenter
	push 1
	pop $b
	popax
	add $a,$b
	push 0.0
	call vhoy,resize
	push A
	push "rdx"
	push "rdy"
	push "rpx"
	push "rpy"
	push "icyk"
	push "idestx"
	push "idesty"
	push "idestx2"
	push "idesty2"
	push "ietap"
	push "shidenmov"
	push "myid"
	push "sclickedho"
	cthis vars
	push $1
	pop myid
	push "null"
	pop shidenmov
	push "null"
	pop sclickedho
	end method
	method Hidden9
	push "timcenter"
	push myid
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],mstart
	call fxtolist1,playif
	push "timcenter"
	push myid
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],play
	end method
	method Hidden10
	localdef $1
	pop $1
	push izels
	push $1
	push 5
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	cthis setz
	end method
	method Hidden11
	localdef $1
	pop $1
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	cthis mhobut
	end method
	method hoexternalcol
	push 255
	push 220
	push 0
	ret
	end method
	method mhobutmask
	push 0
	cthis _mhobut
	end method
	method mhobut
	push 1
	cthis _mhobut
	end method
	method _mhobut
	localint $1
	pop $1
	push $1
	cmp0
	je l4486
	push "isbutin"
	push "Hidden12"
	cthis addmethod
	jmp l4485
l4486:
	push "isbutin"
	push "Hidden13"
	cthis addmethod
l4485:
	push "butmoveon"
	push "Hidden14"
	cthis addmethod
	push "butmoveoff"
	push "Hidden15"
	cthis addmethod
	push "myz"
	cthis getz
	cthis var2
	push "butclick"
	push "Hidden16"
	cthis addmethod
	push "butrel"
	push "Hidden17"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method Hidden12
	localdef $1
	localdef $2
	pop $2
	pop $1
	push 1
	popax
	sub 0,$a
	cthis nofframes
	push 1
	cmpja
	cmp0
	je l4488
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	push $1
	push $2
	push 1
	push 1
	cthis isin
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	jmp l4487
l4488:
	push $1
	push $2
	push 1
	push 1
	cthis isin
l4487:
	end method
	method Hidden13
	localdef $1
	localdef $2
	pop $2
	pop $1
	push 1
	popax
	sub 0,$a
	cthis nofframes
	push 1
	cmpja
	cmp0
	je l4490
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	push $1
	push $2
	push 0
	push 1
	cthis isin
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	jmp l4489
l4490:
	push $1
	push $2
	push 1
	push 0
	cthis isin
l4489:
	end method
	method Hidden14
	push igmdebug
	cmp0
	je l4492
	localdef $1
	cthis actionname
	pop $1
	call txtmovedho,get
	push $1
	cmpjne
	cmp0
	je l4494
	push $1
	call txtmovedho,txtset
	push $1
	call txtmovedho2,txtset
l4494:
	call mouse,getpx
	call mouse,getpy
	call txtmovedho,geth
	pop $b
	popax
	sub $a,$b
	push 1
	pop $b
	popax
	sub $a,$b
	call txtmovedho,setpos
	call mouse,getpx
	push 1
	pop $b
	popax
	add $a,$b
	call mouse,getpy
	call txtmovedho,geth
	pop $b
	popax
	sub $a,$b
	call txtmovedho2,setpos
	call txtmovedho,show
	call txtmovedho2,show
l4492:
	push "smovedcursor"
	cthis hasvar
	cmp0
	je l4496
	push smovedcursor
	call advmouse,set
l4496:
	end method
	method Hidden15
	push igmdebug
	cmp0
	je l4498
	call txtmovedho,hide
	call txtmovedho2,hide
l4498:
	call advmouse,setstd
	end method
	method Hidden16
	localdef $1
	cthis actionname
	pop $1
	push GAME
	spushs
	push $1
	push "_preclick"
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],hasmet
	cmp0
	je l4500
	push $1
	push "_preclick"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	jmp l4499
l4500:
	push igmstate
	push 1
	cmpje
	cmp0
	jne l4503
	push sgmstate
	push "hoout"
	cmpje
	jmp l4504
l4502:
	push 0
	jmp l4504
l4503:
	push 1
l4504:
	cmp0
	je l4505
	cthis mho_click
	push $1
	push "_click"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	call butgame,onmousemove
l4505:
l4499:
	end method
	method Hidden17
	cthis checktouchpad
	cmp0
	je l4507
	cthis butclick
l4507:
	end method
	method setmovedcursor
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	cthis mgetel
	push $2
	cthis setanmovedcursor
	end method
	method setanmovedcursor
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l4509
	push $1
	spushs
	push "smovedcursor"
	push $2
	spop $a
	call [$a],var2
l4509:
	end method
	method mmasks
	cthis getgraphpath
	push "masks.pyz"
	pop $b
	popax
	add $a,$b
	call engine,fileexist
	cmp0
	je l4511
	push "grmasks"
	push "masks"
	push 0
	cthis newgrimg
	push "Hidden18"
	call grmasks,eval
	jmp l4510
l4511:
	new gmimgvec,grmasks
l4510:
	end method
	method Hidden18
	cthis actionname
	cthis mmask
	push 1
	popax
	sub 0,$a
	cthis nofframes
	push 1
	cmpja
	cmp0
	je l4513
	push 1
	popax
	sub 0,$a
	cthis play
l4513:
	end method
	method mmask
	localstring $1
	pop $1
	push 0
	push 5
	call $1,getb
	push "_prev"
	cmpje
	cmp0
	je l4515
	localdef $2
	cthis getname
	call grmasks,find
	pop $2
	push $2
	push 0
	cmpja
	cmp0
	je l4517
	push $2
	push 1
	pop $b
	popax
	sub $a,$b
	call grmasks,get
	spushs
	spop $a
	call [$a],getz
	cthis setz
	jmp l4516
l4517:
	push 2
	cthis setz
l4516:
	jmp l4514
l4515:
	localstring $3
	localdef $2
	push $1
	call grelscopy,findsac
	pop $2
	push $2
	push 0
	cmpjl
	cmp0
	je l4519
	push $1
	call grexclude,getsac
	pop $3
	jmp l4518
l4519:
	push $2
	call grelscopy,get
	pop $3
l4518:
	push $3
	spushs
	spop $a
	call [$a],getz
	push 2
	pop $b
	popax
	add $a,$b
	cthis setz
l4514:
	end method
	method mhider
	localstring $1
	pop $1
	localdef $2
	push $1
	call grels,getsac
	pop $2
	push $2
	spushs
	spop $a
	call [$a],getz
	push 2
	pop $b
	popax
	sub $a,$b
	cthis setz
	push $2
	spushs
	spop $a
	call [$a],hide
	push "maskedobj"
	push $2
	cthis var2
	push "hidemask"
	push "Hidden19"
	cthis addmethod
	push "showmask"
	push "Hidden20"
	cthis addmethod
	end method
	method Hidden19
	push maskedobj
	call grels,contains
	cmp0
	je l4521
	push maskedobj
	spushs
	spop $a
	call [$a],hide
l4521:
	end method
	method Hidden20
	push maskedobj
	call grels,contains
	cmp0
	je l4523
	push maskedobj
	spushs
	spop $a
	call [$a],show
l4523:
	end method
	method mhiderclick
	push 1
	popax
	sub 0,$a
	cthis actionnr
	push 0
	cmpje
	cmp0
	je l4525
	push 1
	push 0
	cthis setframe
	cthis showmask
	jmp l4524
l4525:
	push 0
	push 0
	cthis setframe
	cthis hidemask
l4524:
	end method
	method mho_click
	push "stxtview"
	cthis hasvar
	cmp0
	je l4527
	push stxtview
	spushs
	spop $a
	call [$a],isvisible
	jmp l4529
l4527:
	push 0
	jmp l4529
l4528:
	push 1
l4529:
	cmp0
	je l4530
	push stxtview
	pop sclickedho
	jmp l4526
l4530:
	push "null"
	pop sclickedho
l4526:
	push sclickedho
	push "null"
	cmpjne
	cmp0
	je l4532
	push igmstate
	push 1
	cmpje
	cmp0
	jne l4535
	push sgmstate
	push "hoout"
	cmpje
	jmp l4536
l4534:
	push 0
	jmp l4536
l4535:
	push 1
l4536:
	jmp l4537
l4532:
	push 0
	jmp l4537
l4533:
	push 1
l4537:
	cmp0
	je l4538
	localdef $1
	call ctcen,getf
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l4540
	push 0
	pop ihoclicker
	cthis getname
	call butgame,removebut
	push "anhide"
	call grgwiazdkif,eval
	cthis getname
	pop shidenmov
	push $1
	spushs
	cthis getname
	spop $a
	call [$a],shidenmov=
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	push 600
	cthis setz
	push 2
	pop igmstate
	push GAME
	spushs
	cthis actionname
	push "_put"
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],hasmet
	cmp0
	je l4542
	cthis advsetstdstate
	jmp l4541
l4542:
	push "hoout"
	pop sgmstate
l4541:
	push $1
	spushs
	push igmappw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	spop $a
	call [$a],idestx=
	push $1
	spushs
	push igmapph
	push 2
	pop $b
	popax
	div $a,$b
	psax
	spop $a
	call [$a],idesty=
	push $1
	spushs
	push sclickedho
	spushs
	spop $a
	call [$a],getpx
	push sclickedho
	spushs
	spop $a
	call [$a],getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],idestx2=
	push $1
	spushs
	push sclickedho
	spushs
	spop $a
	call [$a],getpy
	push sclickedho
	spushs
	spop $a
	call [$a],geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],idesty2=
	push $1
	spushs
	push 1
	spop $a
	call [$a],ietap=
	push $1
	spushs
	push sclickedho
	spop $a
	call [$a],sclickedho=
	push $1
	spushs
	spop $a
	call [$a],mstart
	localdef $2
	call ctdym,get
	pop $2
	push $2
	spushs
	push shidenmov
	spushs
	spop $a
	call [$a],getcx
	push shidenmov
	spushs
	spop $a
	call [$a],getcy
	spop $a
	call [$a],setpos
	push $2
	spushs
	push "start"
	spop $a
	call [$a],play
	push $1
	spushs
	spop $a
	call [$a],Hidden21
	jmp l4539
l4540:
	push "null"
	pop sclickedho
l4539:
l4538:
	end method
	method Hidden21
	cthis play
	push stakeitemtype
	push "direct"
	cmpje
	cmp0
	je l4544
	push rcykcenter
	pop icyk
	push 1
	cthis stop
	push "fxtolist"
	push 0
	push 6
	cthis fxplayifgr
	jmp l4543
l4544:
	push stakeitemtype
	push "center"
	cmpje
	cmp0
	je l4546
	call fxtolist0,playif
l4546:
l4543:
	end method
	method butgame_lclick
	push igmstate
	push 1
	cmpje
	cmp0
	je l4548
	call grtxt,empty
	neg
	jmp l4550
l4548:
	push 0
	jmp l4550
l4549:
	push 1
l4550:
	cmp0
	je l4551
	call timhoclicker,isplaying
	cmp0
	je l4553
	add ihoclicker,1
	pop ihoclicker
l4553:
	push ihoclicker
	push ihoclicktimes
	cmpje
	cmp0
	je l4555
	push 0
	pop ihoclicker
	push 0
	call timhoclicker,stop
	push "null"
	pop sobject
	push 12345
	pop igmstate
	call imgkara,show
	call timhokara,play
	push "ho_ukarany"
	call clsave,bis
	neg
	cmp0
	je l4557
	push "ho_ukarany"
	call clsave,bset
l4557:
	jmp l4554
l4555:
	call timhoclicker,play
l4554:
	jmp l4547
l4551:
	push 0
	pop ihoclicker
l4547:
	end method
	method ho_hint_click
	new gmobjvec,_grtmp
	localstring $1
	localint $2
	push 0
	pop $2
l4558:
	push $2
	call grels,size
	cmpjl
	cmp0
	je l4559
	jmp l4561
l4560:
	add $2,1
	pop $2
	jmp l4558
l4561:
	push $2
	call grels,get
	pop $1
	push $1
	spushs
	push "stxtview"
	spop $a
	call [$a],hasvar
	cmp0
	je l4563
	push $1
	spushs
	spop $a
	call [$a],stxtview
	spushs
	push 0
	push 1
	spop $h
	call $h,getb
	push "<"
	cmpjne
	cmp0
	je l4563
	push $1
	spushs
	spop $a
	call [$a],stxtview
	spushs
	spop $a
	call [$a],isvisible
	cmp0
	je l4563
	push $1
	spushs
	push "bnohint"
	spop $a
	call [$a],hasvar
	cmp0
	je l4565
	push $1
	spushs
	spop $a
	call [$a],bnohint
	jmp l4567
l4565:
	push 0
	jmp l4567
l4566:
	push 1
l4567:
	neg
	jmp l4568
l4563:
	push 0
	jmp l4568
l4564:
	push 1
l4568:
	cmp0
	je l4569
	push $1
	call _grtmp,add
l4569:
	jmp l4560
l4559:
	localint $3
	call _grtmp,empty
	cmp0
	je l4571
	push 0
	pop $3
	jmp l4570
l4571:
	call _grtmp,rand
	cthis mhintonobj
	pop $3
l4570:
	delete _grtmp
	push $3
	end method
	method mgetfirsthint
	localstring $1
	call grgwiazdkif,first
	pop $1
	localint $2
	push 1
	pop $2
l4572:
	push $1
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],isplaying
	push 0
	cmpjne
	cmp0
	je l4573
	push $2
	call grgwiazdkif,size
	cmpjl
	jmp l4575
l4573:
	push 0
	jmp l4575
l4574:
	push 1
l4575:
	cmp0
	je l4576
	push $2
	call grgwiazdkif,get
	pop $1
	add $2,1
	pop $2
	jmp l4572
l4576:
	push $2
	call grgwiazdkif,size
	cmpje
	cmp0
	je l4578
	call grgwiazdkif,first
	jmp l4577
l4578:
	push $1
l4577:
	end method
	method mishintplaying
	localint $1
	push 0
	pop $1
l4579:
	push $1
	call grgwiazdkif,size
	cmpjl
	cmp0
	je l4580
	jmp l4582
l4581:
	add $1,1
	pop $1
	jmp l4579
l4582:
	push $1
	call grgwiazdkif,get
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],isplaying
	cmp0
	je l4584
	push 1
	ret
l4584:
	jmp l4581
l4580:
	push 0
	end method
	method mhintonobj
	localstring $1
	pop $1
	push $1
	push "null"
	cmpje
	cmp0
	je l4586
	push 0
	ret
l4586:
	localdef $2
	push $1
	spushs
	spop $a
	call [$a],framenr
	pop $2
	push $1
	spushs
	push 1
	popax
	sub 0,$a
	push 0
	spop $a
	call [$a],setframe
	localstring $3
	cthis mgetfirsthint
	pop $3
	push $3
	spushs
	push $1
	spushs
	spop $a
	call [$a],getcx
	push $1
	spushs
	spop $a
	call [$a],getcy
	spop $a
	call [$a],setpos
	push $1
	spushs
	push 1
	popax
	sub 0,$a
	push $2
	spop $a
	call [$a],setframe
	push $3
	spushs
	push 600
	spop $a
	call [$a],setz
	push $3
	spushs
	push 0
	spop $a
	call [$a],play
	push 1
	end method
	method mgetel
	localstring $1
	pop $1
	localdef $2
	push $1
	call grels,findsac
	pop $2
	push $2
	push 0
	cmpjae
	cmp0
	je l4588
	push $2
	call grels,get
	jmp l4587
l4588:
	push "null"
l4587:
	end method
	method mouse_move
	clparent StdGame,mouse_move
	end method
	method removehobject
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],hide
	push $1
	call grels,remove
	push bhoshape
	cmp0
	je l4590
	push sclickedho
	cthis mputshadow
	jmp l4589
l4590:
	localdef $2
	call grtxt,irows
	call grtxt,icols
	pop $b
	popax
	mul $a,$b
	pop $2
	push sclickedho
	spushs
	spop $a
	call [$a],icnt
	push sclickedho
	spushs
	spop $a
	call [$a],iidtxt
	push 1
	pop $b
	popax
	add $a,$b
	cmpja
	cmp0
	je l4592
	push sclickedho
	spushs
	push 1
	spop $a
	call [$a],mupdatetxt2
	jmp l4591
l4592:
	push sclickedho
	spushs
	spop $a
	call [$a],icnt
	push 1
	cmpja
	cmp0
	je l4594
	push sclickedho
	spushs
	push 1
	spop $a
	call [$a],mupdatetxt2
l4594:
	push sclickedho
	call grtxt,remove
	push sclickedho
	call grtxtgrey,add
	push sclickedho
	spushs
	push 128
	cthis grey
	spop $a
	call [$a],createtxt
	call grtxtgrey,size
	push $2
	cmpje
	cmp0
	je l4596
	call grtxt,size
	push 0
	cmpja
	jmp l4598
l4596:
	push 0
	jmp l4598
l4597:
	push 1
l4598:
	cmp0
	je l4599
	call grtxtgrey,hide
	call grtxtgrey,free
	localint $3
	push 0
	pop $3
l4600:
	push $3
	push $2
	cmpjl
	cmp0
	je l4601
	call grtxt,size
	push 0
	cmpja
	jmp l4603
l4601:
	push 0
	jmp l4603
l4602:
	push 1
l4603:
	cmp0
	je l4604
	call grtxt,shownext
	add $3,1
	pop $3
	jmp l4600
l4604:
l4599:
l4591:
l4589:
	end method
	method removehoitem
	localstring $1
	pop $1
	localdef $2
	push $1
	cthis mgetel
	pop $2
	push $2
	spushs
	spop $a
	call [$a],hide
	push $2
	call grels,remove
	end method
	method checkexternalobj
	localstring $1
	pop $1
	push $1
	cthis istakenhoitem
	cmp0
	je l4606
	push $1
	spushs
	spop $a
	call [$a],externaltxt
	pop sclickedho
	push $1
	cthis removehobject
	push "horemoved_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	push "null"
	pop sclickedho
l4606:
	end method
	method mputshadow
	localstring $1
	pop $1
	push $1
	call grtxt,remove
	push $1
	spushs
	push 1
	popax
	sub 0,$a
	push 3
	spop $a
	call [$a],setframe
	end method
	method advstdstate
	push igmstate
	push 1
	cmpje
	cmp0
	jne l4608
	push igmstate
	push 20
	cmpje
	jmp l4609
l4607:
	push 0
	jmp l4609
l4608:
	push 1
l4609:
	end method
	method getakenho
	localstring $1
	pop $1
	push "takenho_"
	push GAME
	pop $b
	popax
	add $a,$b
	push "_"
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	add $a,$b
	end method
	method istakenhobject
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],actionname
	cthis getakenho
	call clsave,bis
	end method
	method istakenhoitem
	localstring $1
	pop $1
	push $1
	cthis getakenho
	call clsave,bis
	end method
	method saveastaken
	localstring $1
	pop $1
	push $1
	cthis getakenho
	call clsave,bset
	end method
	method canexit
	push igmstate
	push 1
	cmpje
	cmp0
	je l4610
	push sgmstate
	push "hoout"
	cmpjne
	jmp l4612
l4610:
	push 0
	jmp l4612
l4611:
	push 1
l4612:
	end method
	end class

	new real,rBehPopupStep
	push "popup_speed:"
	call dbconf,dbget
	pop rBehPopupStep
	push rBehPopupStep
	push 0
	cmpjle
	cmp0
	je l4614
	push 0.1
	pop rBehPopupStep
l4614:
	class advbanbeh
	parent classbehhero
	method init
	clparent classbehhero,init
	end method
	method _evalpopup
	push _icol
	push 0
	cmpjae
	cmp0
	je l4616
	localint $1
	push _icol
	pop $1
	localdef $2
	push _sdb
	spushs
	push _irow
	push $1
	spop $a
	call [$a],get
	pop $2
l4617:
	push $2
	push ")"
	cmpjne
	cmp0
	je l4618
	push ".pyz"
	call $2,contains
	cmp0
	je l4620
	localint $3
	push 0
	pop $3
	push "@"
	call $2,contains
	cmp0
	je l4622
	push "@"
	call $2,strgetfrom
	pop $3
	push "@"
	call $2,strgetto
	pop $2
l4622:
	push "antmpanim"
	push $2
	push iPopupZ
	cthis newanima
	push "antmpanim"
	pop $2
	push $2
	spushs
	push $3
	push 0
	spop $a
	call [$a],setframe
	push $2
	spushs
	spop $a
	call [$a],hide
l4620:
	push $1
	push _icol
	cmpje
	cmp0
	je l4624
	push $2
	call imgpopup,clone
	jmp l4623
l4624:
	push $2
	call imgpopup,blit
l4623:
	push "antmpanim"
	cthis hasvar
	cmp0
	je l4626
	delete antmpanim
l4626:
	add $1,1
	pop $1
	push _sdb
	spushs
	push _irow
	push $1
	spop $a
	call [$a],get
	pop $2
	jmp l4617
l4618:
	call imgpopup,hide
	push $1
	push _icol
	cmpja
	cmp0
	je l4628
	push "imgpopup"
	call ftpopup,link
	push 0
	call ftpopup,setpivottype
	call timpopup,setstart
	call timpopup,play
	jmp l4627
l4628:
	cthis reteval
l4627:
	jmp l4615
l4616:
	cthis reteval
l4615:
	end method
	method setaspopup
	localstring $1
	localint $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push "popup"
	cthis settype2
	new string,_spoptype
	push $4
	pop _spoptype
	new string,_sdb
	push $1
	pop _sdb
	new int,_irow
	push $2
	pop _irow
	new int,_icol
	push $3
	pop _icol
	push "timpopup"
	push "advbanbeh0"
	cthis cycle=
	push A
	push "rzoom"
	push rBehPopupStep
	push "sbehaviour"
	cthis getname
	push "idir"
	push $4
	push "popin"
	cmpje
	cmp0
	je l4643
	push 1
	jmp l4642
l4643:
	push 1
	popax
	sub 0,$a
l4642:
	call timpopup,vars2
	push "setstart"
	push "advbanbeh1"
	call timpopup,addmethod
	new img,imgpopup
	push iPopupZ
	call imgpopup,setz
	new filter,ftpopup
	end method
	method advbanbeh0
	push idir
	push 0
	cmpja
	cmp0
	je l4630
	push rzoom
	push 1.0
	cmpja
	jmp l4632
l4630:
	push 0
	jmp l4632
l4631:
	push 1
l4632:
	cmp0
	jne l4634
	push idir
	push 0
	cmpjl
	cmp0
	je l4635
	push rzoom
	push rBehPopupStep
	cmpjle
	jmp l4637
l4635:
	push 0
	jmp l4637
l4636:
	push 1
l4637:
	jmp l4638
l4633:
	push 0
	jmp l4638
l4634:
	push 1
l4638:
	cmp0
	je l4639
	call ftpopup,unlink
	push idir
	push 0
	cmpja
	cmp0
	je l4641
	push "imgpopup"
	call imglastpopup,clone
	push iPopupZ
	call imglastpopup,setz
l4641:
	push 2
	push 2
	cthis transparent
	call imgpopup,create
	call imgpopup,hide
	push sbehaviour
	spushs
	spop $a
	call [$a],reteval
	call engine,redraw
	jmp l4629
l4639:
	push rzoom
	call ftpopup,setzoom
	call imgpopup,show
	push rBehPopupStep
	push idir
	pop $b
	popax
	mul $a,$b
	popax
	add rzoom,$a
	pop rzoom
	cthis play
l4629:
	end method
	method advbanbeh1
	push idir
	push 0
	cmpja
	cmp0
	je l4645
	push rBehPopupStep
	jmp l4644
l4645:
	push 1.0
l4644:
	pop rzoom
	end method
	method _evalopenbook
	push schapter
	push "-last"
	cmpjne
	cmp0
	je l4647
	push "guibook_lastchapter"
	push schapter
	call clsave,set
	push "guibook_enabled_"
	push schapter
	pop $b
	popax
	add $a,$b
	call clsave,bset
l4647:
	cthis gui_openbook
	end method
	method _evalclosebook
	cthis gui_closebook
	end method
	method setasopenbook
	localstring $1
	pop $1
	push "openbook"
	cthis settype
	new string,schapter
	push $1
	pop schapter
	end method
	method setasclosebook
	push "closebook"
	cthis settype
	end method
	end class

	class classbanadvmouse
	parent classadvmouse
	method init
	clparent classadvmouse,init
	end method
	method set
	localstring $1
	pop $1
	push PrzygodaMode
	cmp0
	je l4649
	call gameapi,getgamename
	spushs
	push "guiloupe"
	spop $a
	call [$a],hasvar
	cmp0
	je l4649
	call guiloupe,isvisible
	cmp0
	je l4649
	push "sysloupe_disablecursor"
	call clsave,bis
	neg
	jmp l4651
l4649:
	push 0
	jmp l4651
l4650:
	push 1
l4651:
	cmp0
	je l4652
	push $1
	push "normal"
	cmpje
	cmp0
	je l4654
	push "glass"
	jmp l4653
l4654:
	push "glassac"
l4653:
	clparent classadvmouse,set
	push $1
	pop sactac
	jmp l4648
l4652:
	push $1
	clparent classadvmouse,set
l4648:
	end method
	end class

	delete advmouse
	new classbanadvmouse,advmouse
	call advmouse,stdload
	new gmimgvec,grguipck
	new int,iSzkielkoZ
	push 5340
	pop iSzkielkoZ
	new int,iHintStarZ
	push iSzkielkoZ
	push 5
	pop $b
	popax
	sub $a,$b
	pop iHintStarZ
	new int,iTakeZ
	push iSzkielkoZ
	push 10
	pop $b
	popax
	sub $a,$b
	pop iTakeZ
	new int,iPopupZ
	push iSzkielkoZ
	push 20
	pop $b
	popax
	sub $a,$b
	pop iPopupZ
	new int,iGuiBookZ
	push iSzkielkoZ
	push 35
	pop $b
	popax
	sub $a,$b
	pop iGuiBookZ
	new int,iGuiZ
	push iSzkielkoZ
	push 40
	pop $b
	popax
	sub $a,$b
	pop iGuiZ
	new int,iBookZ
	push iSzkielkoZ
	push 50
	pop $b
	popax
	sub $a,$b
	pop iBookZ
	new int,iSlotZ
	push iSzkielkoZ
	push 70
	pop $b
	popax
	sub $a,$b
	pop iSlotZ
	new int,iTxtButtonZ
	push iSzkielkoZ
	push 80
	pop $b
	popax
	sub $a,$b
	pop iTxtButtonZ
	new int,iSzkielkoPodZ
	push iSzkielkoZ
	push 90
	pop $b
	popax
	sub $a,$b
	pop iSzkielkoPodZ
	new int,iGuiTutZ
	push iSzkielkoZ
	push 1
	pop $b
	popax
	sub $a,$b
	pop iGuiTutZ
	new int,iRotoIleRot
	push 20
	pop iRotoIleRot
	new int,iRotoIleObrotow
	push 2
	pop iRotoIleObrotow
	new int,bHOInventory
	new int,ishowpouptime
	push "showpopup_time:"
	call dbconf,dbget
	pop ishowpouptime
	call ishowpouptime,to_r
	push 1000.0
	pop $b
	popax
	mul $a,$b
	call igmdelay,to_r
	pop $b
	popax
	div $a,$b
	psax
	push 255.0
	pop $b
	popax
	div $a,$b
	psax
	call ccs,delay
	new img,imglastpopup
	new db,dbgame
	push LANGDIR
	push "gametxts.db"
	pop $b
	popax
	add $a,$b
	call dbgame,load
	new db,dbobject
	push LANGDIR
	push "objectives.db"
	pop $b
	popax
	add $a,$b
	call dbobject,load
	new db,dbmghelp
	push LANGDIR
	push "sys_mghelp.db"
	pop $b
	popax
	add $a,$b
	call dbmghelp,load
	new db,dbsurvey
	push LANGDIR
	push "survey.db"
	pop $b
	popax
	add $a,$b
	call dbsurvey,load
	new font,fnthogui
	push "hoguifont:"
	call dbconf,dbget
	push "item_txtname_size:"
	call dbconf,dbgetscr
	call fnthogui,load
	method guifontcolor
	push 240
	cthis grey
	end method
	new text,gtxtpause
	push "fnthogui"
	call gtxtpause,setfont
	push "pause"
	call dbgame,dbget
	cthis guifontcolor
	call gtxtpause,txtsetcol
	call gtxtpause,hide
	call imgpause,getz
	push 10
	pop $b
	popax
	add $a,$b
	call gtxtpause,setz
	method globsfx
	localstring $1
	localint $2
	pop $2
	pop $1
	localstring $3
	push "sfx"
	push $1
	pop $b
	popax
	add $a,$b
	pop $3
	push $3
	spushs
	spop $e
	new snd,[$e]
	push $3
	spushs
	push SFXPATH
	push $1
	pop $b
	popax
	add $a,$b
	push ".ogg"
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],load
	push $3
	spushs
	push $2
	spop $a
	call [$a],setvol
	end method
	push "magic1"
	push 60
	cthis globsfx
	push "hint1"
	push 25
	cthis globsfx
	push "hint2"
	push 50
	cthis globsfx
	push "popitem"
	push 80
	cthis globsfx
	push "retitem"
	push 30
	cthis globsfx
	push "openpopup"
	push 30
	cthis globsfx
	push "closepopup"
	push 30
	cthis globsfx
	push "butclick2"
	push 50
	cthis globsfx
	push "butmoveon2"
	push 80
	cthis globsfx
	push "wysun2"
	push 100
	cthis globsfx
	push "blink"
	push 80
	cthis globsfx
	class BanGuiSrc
	method init
	new anima,gguihint
	push "scripts/sys_gui/hint.pyz"
	call gguihint,load
	call gguihint,hide
	push iGuiZ
	call gguihint,setz
	new anima,guirose
	push "scripts/sys_gui/roza.pyz"
	call guirose,load
	push iGuiZ
	call guirose,setz
	call guirose,hide
	new anima,gguishowhint
	push "scripts/sys_gui/showhintb.pyz"
	call gguishowhint,load
	push iHintStarZ
	call gguishowhint,setz
	call gguishowhint,hide
	new anima,gguishowhintcursor
	push "scripts/sys_gui/cursors.pyz"
	call gguishowhintcursor,load
	push iHintStarZ
	push 1
	pop $b
	popax
	add $a,$b
	call gguishowhintcursor,setz
	call gguishowhintcursor,hide
	new anima,guiloupe
	new anima,anpopexit
	push "scripts/sys_gui/popexit.pyz"
	call anpopexit,load
	call anpopexit,hide
	push "ad06_posagmamy_night_karzel_ozywiony2"
	call clsave,bis
	neg
	cmp0
	je l4656
	new anima,gguiglass
	push "scripts/sys_gui/szkielko.pyz"
	call gguiglass,load
	push iGuiZ
	push 2
	pop $b
	popax
	add $a,$b
	call gguiglass,setz
	call gguiglass,hide
l4656:
	new anima,gguipopup
	push "scripts/sys_gui/popup.pyz"
	call gguipopup,load
	push iPopupZ
	call gguipopup,setz
	call gguipopup,hide
	new anima,gguimenu_base
	push "scripts/sys_gui/menu_base.pyz"
	call gguimenu_base,load
	push iGuiBookZ
	call gguimenu_base,setz
	call gguimenu_base,hide
	new anima,globalguimapa
	push "scripts/sys_gui/mapa.pyz"
	call globalguimapa,load
	push iGuiBookZ
	push 1
	pop $b
	popax
	add $a,$b
	call globalguimapa,setz
	call globalguimapa,hide
	new anima,globalguibook
	push "scripts/sys_gui/guibook.pyz"
	call globalguibook,load
	push iGuiBookZ
	push 2
	pop $b
	popax
	add $a,$b
	call globalguibook,setz
	call globalguibook,hide
	new anima,guipiorko
	push "scripts/sys_gui/piorko.pyz"
	call guipiorko,load
	call guipiorko,hide
	push iGuiBookZ
	push 3
	pop $b
	popax
	add $a,$b
	call guipiorko,setz
	new anima,gguimenu
	push "scripts/sys_gui/menu.pyz"
	call gguimenu,load
	push iGuiBookZ
	push 4
	pop $b
	popax
	add $a,$b
	call gguimenu,setz
	call gguimenu,hide
	new db,dbitems
	push LANGDIR
	push "popup_items.db"
	pop $b
	popax
	add $a,$b
	call dbitems,load
	new anima,guimigot
	push "scripts/sys_gui/migot.pyz"
	call guimigot,load
	call guimigot,rle
	push iSzkielkoPodZ
	push 2
	pop $b
	popax
	add $a,$b
	call guimigot,setz
	call guimigot,hide
	new anima,anhoenter
	push "scripts/sys_gui/hoenterw.pyz"
	call anhoenter,load
	call anhoenter,hide
	new text,gtxtskipdialog
	push "fnthogui"
	call gtxtskipdialog,setfont
	push "skipdialog"
	call dbgame,dbget
	cthis guifontcolor
	call gtxtskipdialog,txtsetcol
	call gtxtskipdialog,hide
	new text,gtxtnextdialog
	push "fnthogui"
	call gtxtnextdialog,setfont
	push "nextdialog"
	call dbgame,dbget
	cthis guifontcolor
	call gtxtnextdialog,txtsetcol
	call gtxtnextdialog,hide
	new img,imgobjective
	push "scripts/sys_gui/podobjective.png"
	call imgobjective,load
	call imgobjective,hide
	new anima,antutorial
	push "scripts/sys_gui/tutorial.pyz"
	call antutorial,load
	call antutorial,hide
	push iGuiTutZ
	call antutorial,setz
	new anima,globalstrzalka
	push "scripts/sys_gui/strzalka.pyz"
	call globalstrzalka,load
	call globalstrzalka,hide
	push iGuiTutZ
	push 2
	pop $b
	popax
	add $a,$b
	call globalstrzalka,setz
	new anima,guiwinopis
	push "scripts/sys_gui/winopis.pyz"
	call guiwinopis,load
	call guiwinopis,hide
	push iGuiTutZ
	push 1
	pop $b
	popax
	add $a,$b
	call guiwinopis,setz
	new font,fnttutorial
	push "subtitles_font:"
	call dbconf,dbget
	push "tutorial_font_size:"
	call dbconf,dbgetscr
	call fnttutorial,load
	end method
	method load
	push "dbitems"
	call dbitems,addtogamevars
	push "globalhint"
	call gguihint,addtogamevars
	push "globalrose"
	call guirose,addtogamevars
	push "globalmenu"
	call gguimenu,addtogamevars
	push "globalmenu_base"
	call gguimenu_base,addtogamevars
	push "globalshowhint"
	call gguishowhint,addtogamevars
	push "globalshowhintcursor"
	call gguishowhintcursor,addtogamevars
	push "globalloupe"
	call guiloupe,addtogamevars
	push "globalpopexit"
	call anpopexit,addtogamevars
	push "globalpiorko"
	call guipiorko,addtogamevars
	push "globalpopup"
	call gguipopup,addtogamevars
	push "ad06_posagmamy_night_karzel_ozywiony2"
	call clsave,bis
	neg
	cmp0
	je l4658
	push "globalglass"
	call gguiglass,addtogamevars
l4658:
	push "globalmigot"
	call guimigot,addtogamevars
	push "anhoenter"
	call anhoenter,addtogamevars
	push "gtxtskipdialog"
	call gtxtskipdialog,addtogamevars
	push "gtxtnextdialog"
	call gtxtnextdialog,addtogamevars
	push "imgobjective"
	call imgobjective,addtogamevars
	push "antutorial"
	call antutorial,addtogamevars
	push "globalguibook"
	call globalguibook,addtogamevars
	push "globalguimapa"
	call globalguimapa,addtogamevars
	push "globalstrzalka"
	call globalstrzalka,addtogamevars
	push "guiwinopis"
	call guiwinopis,addtogamevars
	push "fnttutorial"
	call fnttutorial,addtogamevars
	cthis loadguiloupe
	end method
	method loadguiloupe
	push "ad06_posagmamy_night_karzel_ozywiony2"
	call clsave,bis
	cmp0
	je l4660
	push "scripts/sys_gui/reka5.pyz"
	call guiloupe,load
	jmp l4659
l4660:
	push "ad06_posagmamy_karzel_show"
	call clsave,bis
	cmp0
	je l4662
	push "scripts/sys_gui/reka5.pyz"
	call guiloupe,load
	push 4
	push 0
	call gguiglass,setframe
	jmp l4661
l4662:
	push "e1_mg21_duch_kubek_oddany"
	call clsave,bis
	cmp0
	je l4664
	push "scripts/sys_gui/reka4.pyz"
	call guiloupe,load
	push 3
	push 0
	call gguiglass,setframe
	jmp l4663
l4664:
	push "e1_ad18_szklarnia_medalion_wziety"
	call clsave,bis
	cmp0
	je l4666
	push "scripts/sys_gui/reka3.pyz"
	call guiloupe,load
	push 2
	push 0
	call gguiglass,setframe
	jmp l4665
l4666:
	push "e1_mg09_szkielko_finished"
	call clsave,bis
	cmp0
	je l4668
	push "scripts/sys_gui/reka2.pyz"
	call guiloupe,load
	push 1
	push 0
	call gguiglass,setframe
	jmp l4667
l4668:
	push "scripts/sys_gui/reka.pyz"
	call guiloupe,load
	push 0
	push 0
	call gguiglass,setframe
l4667:
l4665:
l4663:
l4661:
l4659:
	call guiloupe,hide
	end method
	end class

	new BanGuiSrc,banguisrc
	class BanGui
	method init
	new gmimgvec,grguiloupe
	push 2
	push 2
	cthis transparent
	call imglastpopup,create
	call imglastpopup,hide
	push iPopupZ
	call imglastpopup,setz
	push "fntbantxt"
	call fntsubtitle,addtogamevars
	end method
	method guirose_endframe
	push "hint_frame"
	cthis framenr
	call clsave,set
	end method
	method isadvclass
	call gameapi,getgamename
	spushs
	push "clcamera"
	spop $a
	call [$a],hasvar
	end method
	method initgui
	new int,difficulty
	push 1
	pop difficulty
	push "currentprofile"
	call clsmen,has
	cmp0
	je l4670
	localint $1
	push "currentprofile"
	call clsmen,get
	pop $1
	push "difficulty_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsmen,get
	cmp0
	je l4672
	push "difficulty_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsmen,get
	pop difficulty
l4672:
l4670:
	new int,hint_state
	push 0
	pop hint_state
	new int,hint_frame
	push 0
	pop hint_frame
	push "hint_state"
	call clsave,get
	push 0
	cmpja
	cmp0
	je l4674
	push "hint_state"
	call clsave,get
	pop hint_state
l4674:
	push "hint_frame"
	call clsave,get
	push 0
	cmpja
	cmp0
	je l4676
	push "hint_frame"
	call clsave,get
	pop hint_frame
l4676:
	new int,hint_delay
	push 0
	pop hint_delay
	new int,skip_delay
	push 0
	pop skip_delay
	new int,hint_delay_conf
	push "hint_delay:"
	call dbconf,dbget
	pop hint_delay_conf
	push difficulty
	push 1
	cmpje
	cmp0
	je l4678
	push hint_delay_conf
	cmp0
	je l4680
	push hint_delay_conf
	pop hint_delay
	jmp l4679
l4680:
	push 30
	pop hint_delay
l4679:
	push 45
	pop skip_delay
	jmp l4677
l4678:
	push difficulty
	push 2
	cmpje
	cmp0
	je l4682
	push hint_delay_conf
	cmp0
	je l4684
	push hint_delay_conf
	pop hint_delay
	jmp l4683
l4684:
	push 60
	pop hint_delay
l4683:
	push 90
	pop skip_delay
l4682:
l4677:
	push hint_delay_conf
	neg
	cmp0
	je l4686
	push hint_delay
	push 30
	pop $b
	popax
	mul $a,$b
	push 80
	pop $b
	popax
	div $a,$b
	psax
	pop hint_delay
l4686:
	push skip_delay
	push 30
	pop $b
	popax
	mul $a,$b
	push 80
	pop $b
	popax
	div $a,$b
	psax
	pop skip_delay
	localdef $2
	cthis getgraphpath
	pop $2
	new int,gui_skipclick
	push 0
	pop gui_skipclick
	push "sys_gui"
	cthis path=
	push "snd_wrong_use_0"
	push "wrong_use_0"
	cthis newsndfree
	push "snd_wrong_use_1"
	push "wrong_use_1"
	cthis newsndfree
	push "snd_wrong_use_2"
	push "wrong_use_2"
	cthis newsndfree
	new int,iItemSlots
	push 8
	pop iItemSlots
	push "guinventory"
	push "inventory.pyz"
	push iGuiZ
	cthis newanima
	push "guitemslot"
	push "items.pyz"
	push iGuiZ
	cthis newanima
	push "guileft"
	push "itemleft.pyz"
	push iGuiZ
	cthis newanima
	push "guiright"
	push "itemright.pyz"
	push iGuiZ
	cthis newanima
	call guileft,hide
	call guiright,hide
	push "guihintbase"
	push "hint_base.pyz"
	push iGuiZ
	push 1
	pop $b
	popax
	sub $a,$b
	cthis newanima
	call guihintbase,show
	push "globalhint"
	push "guihint"
	cthis copyanima
	push "globalrose"
	push "guirose"
	cthis copyanima
	call guirose,show
	push difficulty
	push 3
	cmpjl
	cmp0
	je l4688
	call guihint,show
	push iGuiZ
	call guihint,setz
l4688:
	push "globalmenu_base"
	push "guimenu_base"
	cthis copyanima
	call guimenu_base,show
	push "globalmenu"
	push "guimenu"
	cthis copyanima
	call guimenu,show
	push "globalhint"
	push "guiskipmg"
	cthis copyanima
	push "skip"
	push 2
	call guiskipmg,setframe
	call guiskipmg,hide
	push "globalshowhint"
	push "guishowhint"
	cthis copyanima
	push "globalshowhintcursor"
	push "guishowhintcursor"
	cthis copyanima
	call guishowhint,hide
	call guishowhintcursor,hide
	push "guishowhint"
	push "guishowhint2"
	cthis copyanima
	push "guishowhint"
	push "guishowhint3"
	cthis copyanima
	push "guishowhint"
	push "guishowhintitem1"
	cthis copyanima
	push "guishowhint"
	push "guishowhintitem2"
	cthis copyanima
	push "sysloupe_disablecursor"
	push 0
	call clsave,set
	push "sysloupe_disableclose"
	push 0
	call clsave,set
	push "ad06_posagmamy_night_karzel_ozywiony2"
	call clsave,bis
	neg
	cmp0
	je l4690
	push "globalglass"
	push "guiglass"
	cthis copyanima
	call guiglass,show
	push "globalglass"
	push "guiglassglow"
	cthis copyanima
	call guiglassglow,anopacityframe
l4690:
	push "globalloupe"
	push "guiloupe"
	cthis copyanima
	push "enabled"
	push 1
	call guiloupe,var2
	push "disable"
	push "BanGui0"
	call guiloupe,addmethod
	push "enable"
	push "BanGui1"
	call guiloupe,addmethod
	push iSzkielkoZ
	call guiloupe,setz
	call guiloupe,hide
	push "guiloupe"
	push "guiloupemask"
	cthis copyanima
	push 1
	push 0
	call guiloupemask,setframe
	push iSzkielkoPodZ
	call guiloupemask,setz
	new filter,ftguiloupe
	push "guiloupe"
	push "guiloupeskrzat"
	cthis copyanima
	new gmimgvec,grgotopckstack
	new gmimgvec,grguitemslots
	localdef $3
	push 3
	pop $3
	call guitemslot,hide
	push A
	push "bdokuj"
	push "guinventory_dokuj"
	call clsave,bis
	call guinventory,vars2
	push bHOInventory
	cmp0
	je l4692
	push "guihoinventory"
	push "hoinventory.pyz"
	push 505
	cthis newanima
	push 505
	call guinventory,setz
	call guinventory,hide
	jmp l4691
l4692:
	localint $4
	push 0
	pop $4
l4693:
	push $4
	push iItemSlots
	cmpjl
	cmp0
	je l4694
	jmp l4696
l4695:
	add $4,1
	pop $4
	jmp l4693
l4696:
	cthis additemslot
	jmp l4695
l4694:
	push A
	push "blockout"
	push 0
	push "sitemshow"
	push "null"
	call guinventory,vars2
	call guinventory,show
l4691:
	push "txtpckitem"
	push ""
	push "fntbantxt"
	cthis white
	cthis newtext
	push "txtpckitemshadow"
	push ""
	push "fntbantxt"
	cthis black
	cthis newtext
	new string,stxtpckitem
	push "null"
	pop stxtpckitem
	push "guinventory"
	push "guinventorydok"
	cthis copyanima
	cthis inventory_dock
	localstring $5
	push "bismoved"
	push 0
	call guinventory,var2
	push "isinactfield"
	push "BanGui2"
	call guinventory,addmethod
	cthis isadvclass
	cmp0
	je l4706
	push "clickon"
	pop $5
	push "guinventory"
	push "guinventory"
	push "guinventory"
	clparent classadvbut,setasbutton2
	push 0
	call guinventory,bautohint=
	push "normal"
	call guinventory,smousecursor=
	push "butisin"
	push "BanGui3"
	call guinventory,addmethod
	push "guileft"
	push "guileft"
	push "guileft"
	clparent classadvbut,setasbutton2
	push 0
	call guileft,bautohint=
	push "guiright"
	push "guiright"
	push "guiright"
	clparent classadvbut,setasbutton2
	push 0
	call guiright,bautohint=
	push "guihintbase"
	push "guihintbase"
	push "guihintbase"
	clparent classadvbut,setasbutton2
	push 0
	call guihintbase,bautohint=
	call guileft,Button_moveon
	call guileft,Button_moveoff
	call guiright,Button_moveon
	call guiright,Button_moveoff
	push "moveon"
	push "guihintbase_func_moveon"
	call guihintbase,addmethod
	push "moveoff"
	push "guihintbase_func_moveoff"
	call guihintbase,addmethod
	push "clickon"
	push "guihintbase_func_clickon"
	call guihintbase,addmethod
	jmp l4705
l4706:
	push bHOInventory
	neg
	cmp0
	je l4711
	call guinventory,BanGui4
	call guileft,Button_std
	call guiright,Button_std
	push "guileft"
	call butgame,add
	push "guiright"
	call butgame,add
	push "butclick"
	pop $5
l4711:
l4705:
	call guihintbase,Button_isinalpha
	push "butmoveon"
	push "guihintbase_func_moveon"
	call guihintbase,addmethod
	push "butmoveoff"
	push "guihintbase_func_moveoff"
	call guihintbase,addmethod
	push "butclick"
	push "guihintbase_func_clickon"
	call guihintbase,addmethod
	push "guihintbase"
	call butgame,add
	push $5
	push "BanGui6"
	call guinventory,addmethod
	push "_timrevinv"
	push "BanGui7"
	cthis cycle=
	push A
	push "speed"
	push 20
	push "actspeed"
	push 0
	call _timrevinv,vars2
	push "startrew"
	push "BanGui8"
	call _timrevinv,addmethod
	push $5
	push "BanGui9"
	call guileft,addmethod
	push $5
	push "BanGui10"
	call guiright,addmethod
	push "butlrel"
	push "stoprewinventory"
	call guileft,addmethod
	push "butlrel"
	push "stoprewinventory"
	call guiright,addmethod
	push "_timinv"
	push "BanGui11"
	cthis cycle=
	push A
	push "dir"
	push 1
	popax
	sub 0,$a
	push "speed"
	push 15
	call _timinv,vars2
	push "timunblockinventory"
	push 2000
	push "BanGui12"
	cthis timer=
	push "ad06_posagmamy_night_karzel_ozywiony2"
	call clsave,bis
	neg
	cmp0
	je l4735
	cthis isadvclass
	cmp0
	je l4737
	push "clickon"
	pop $5
	push "guiglass"
	push "guiglass"
	push "guiglass"
	clparent classadvbut,setasbutton2
	push "normal"
	call guiglass,smousecursor=
	push 0
	call guiglass,bautohint=
	push "moveon"
	push "BanGui13"
	call guiglass,addmethod
	push "moveoff"
	push "BanGui14"
	call guiglass,addmethod
	jmp l4736
l4737:
	call guiglass,BanGui15
	push "butclick"
	pop $5
l4736:
l4735:
	push difficulty
	push 3
	cmpjl
	cmp0
	je l4741
	cthis isadvclass
	cmp0
	je l4743
	push "clickon"
	pop $5
	push "guihint"
	push "guihint"
	push "guihint"
	clparent classadvbut,setasbutton2
	push 0
	call guihint,bautohint=
	push "normal"
	call guihint,smousecursor=
	push "moveon"
	push "BanGui18"
	call guihint,addmethod
	push "moveoff"
	push "BanGui19"
	call guihint,addmethod
	jmp l4742
l4743:
	call guihint,BanGui20
	push "butclick"
	pop $5
l4742:
	call guihint,BanGui23
l4741:
	push "ad06_posagmamy_night_karzel_ozywiony2"
	call clsave,bis
	neg
	cmp0
	je l4771
	push $5
	push "BanGui26"
	call guiglass,addmethod
l4771:
	push difficulty
	push 3
	cmpjl
	cmp0
	je l4775
	push hint_state
	push 1
	cmpjl
	cmp0
	je l4777
	push hint_delay
	call guirose,setdelay
	push "grow"
	call guirose,play
	localint $6
	push hint_frame
	pop $6
	push $6
	push 1
	popax
	sub 0,$a
	call guirose,nofframes
	push 1
	pop $b
	popax
	sub $a,$b
	cmpjl
	cmp0
	je l4779
	push 1
	popax
	add $6,$a
	pop $6
l4779:
	push 1
	popax
	sub 0,$a
	push $6
	call guirose,setframe
	push "nonactive"
	call guihint,play
	jmp l4776
l4777:
l4776:
	push $5
	push "BanGui27"
	call guihint,addmethod
	push "onendframe"
	push "guirose_endframe"
	call guirose,addmethod
	push "onfinish"
	push "BanGui28"
	call guirose,addmethod
l4775:
	push "globalmigot"
	push "guimigot"
	cthis copyanima
	cthis isadvclass
	cmp0
	je l4795
	push "guimenu"
	push "guimenu"
	push "guimenu"
	clparent classadvbut,setasbutton2
	push 0
	call guimenu,bautohint=
	push "normal"
	call guimenu,smousecursor=
	call guimenu,Button_moveon_std
	call guimenu,Button_moveoff
	jmp l4794
l4795:
	call guimenu,Button_isinalpha
	push "butmoveon"
	push "BanGui29"
	call guimenu,addmethod
	push "butmoveoff"
	push "BanGui30"
	call guimenu,addmethod
	push "guimenu"
	call butgame,add
l4794:
	push $5
	push "BanGui31"
	call guimenu,addmethod
	push "globalguimapa"
	push "anguimapa"
	cthis copyanima
	cthis isadvclass
	cmp0
	je l4801
	push "clickon"
	pop $5
	push "anguimapa"
	push "anguimapa"
	push "guimapa"
	clparent classadvbut,setasbutton2
	push "normal"
	call anguimapa,smousecursor=
	push 0
	call anguimapa,bautohint=
	push "moveon"
	push "BanGui32"
	call anguimapa,addmethod
	push "moveoff"
	push "BanGui33"
	call anguimapa,addmethod
	jmp l4800
l4801:
	call anguimapa,Button_isinalpha
	push "butmoveon"
	push "BanGui34"
	call anguimapa,addmethod
	push "butmoveoff"
	push "BanGui35"
	call anguimapa,addmethod
	push "anguimapa"
	call butgame,add
	push "butclick"
	pop $5
l4800:
	push $5
	push "BanGui36"
	call anguimapa,addmethod
	push "guimapa_taken"
	call clsave,bis
	cmp0
	je l4807
	call anguimapa,show
l4807:
	push "globalguibook"
	push "anguibook"
	cthis copyanima
	push "globalguibook"
	push "anguibookmagic"
	cthis copyanima
	call anguibookmagic,hide
	call anguibookmagic,anopacityframe
	push "guibook_taken"
	call clsave,bis
	cmp0
	je l4809
	call anguibook,show
	push "sysbook_to_show"
	call clsave,bis
	cmp0
	je l4811
	cthis glow_guiglass_loop
l4811:
l4809:
	cthis isadvclass
	cmp0
	je l4813
	push "clickon"
	pop $5
	push "anguibook"
	push "guibook"
	push "book"
	clparent classadvbut,setasbutton2
	push 0
	call anguibook,bautohint=
	push "normal"
	call anguibook,smousecursor=
	call anguibook,Button_moveon_std
	call anguibook,Button_moveoff
	jmp l4812
l4813:
	call anguibook,BanGui37
	push "butclick"
	pop $5
l4812:
	push $5
	push "BanGui39"
	call anguibook,addmethod
	push $2
	cthis setgraphpath
	new string,_clicked_guiitem
	cthis freeactitem
	new DelayMover,guimov
	cthis checktouchpad
	neg
	cmp0
	je l4817
	push 1
	call guimov,b2clicks=
l4817:
	call guimov,unlock
	new gmimgvec,grguitems
	new string,sanitemprefix
	push "anitem_"
	pop sanitemprefix
	push bHOInventory
	neg
	cmp0
	je l4819
	localint $4
	push 0
	pop $4
l4820:
	push $4
	call grguipck,size
	cmpjl
	cmp0
	je l4821
	jmp l4823
l4822:
	add $4,1
	pop $4
	jmp l4820
l4823:
	push $4
	call grguipck,get
	cthis _addtopck
	jmp l4822
l4821:
	cthis inventory_show
	push 0
	push 0
	push 0
	push 0
	new Rect,invhide
	push 0
	call guinventory,getpy
	push igmappw
	push igmapph
	call invhide,setborders
	localint $7
	call guinventory,bdokuj
	pop $7
	push 0
	call guinventory,bdokuj=
	cthis inventory_hide
	push 0
	push 0
	push 0
	push 0
	new Rect,invshow
	call guileft,getex
	call guinventory,getpy
	call guiright,getpx
	push igmapph
	call invshow,setborders
	push $7
	call guinventory,bdokuj=
	push $7
	cmp0
	je l4825
	cthis inventory_show
l4825:
	call grguitemslots,last
	spushs
	spop $a
	call [$a],getw
	popax
	sub 0,$a
	call grguitemslots,size
	pop $b
	popax
	mul $a,$b
	cthis moveslots
l4819:
	new gmimgvec,grhints
	cthis isadvclass
	cmp0
	je l4827
	push difficulty
	push 3
	cmpjl
	jmp l4829
l4827:
	push 0
	jmp l4829
l4828:
	push 1
l4829:
	cmp0
	je l4830
	push "BanGui40"
	pop $5
	localint $8
	push 5000
	pop $8
	push difficulty
	push 2
	cmpje
	cmp0
	je l4844
	push 15000
	pop $8
l4844:
	push "_tim_autohint"
	push $8
	push $5
	cthis timplay
l4830:
	cthis isadvclass
	cmp0
	je l4846
	new img,imgskipdialog
	call gtxtskipdialog,getw
	call gtxtskipdialog,geth
	cthis black
	push 128
	call imgskipdialog,create
	push "gtxtskipdialog"
	call imgskipdialog,blit
	push iTxtButtonZ
	call imgskipdialog,setz
	call imgskipdialog,hide
	call imgskipdialog,Button_isin
	call imgskipdialog,Button_moveonmstd
	call imgskipdialog,Button_moveoffms
	push "butclick"
	push "BanGui41"
	call imgskipdialog,addmethod
	push "imgskipdialog"
	call butgame,add
l4846:
	new img,imgnextdialog
	call imgnextdialog,BanGui42
	push "imgnextdialog"
	call butgame,add
	push "_timnextdial"
	push "BanGui44"
	cthis cycle=
	call _timnextdial,play
	new img,imgobject
	call imgobject,BanGui45
	push "txtobject0"
	push ""
	push "fntbantxt"
	call subtitle,getcolor
	cthis newtext
	push "txtobject1"
	push ""
	push "fntbantxt"
	call subtitle,getcolor
	cthis newtext
	push "txtobject2"
	push ""
	push "fntbantxt"
	call subtitle,getcolor
	cthis newtext
	new gmimgvec,grobjectives
	push A
	push "imgobject"
	push "txtobject0"
	push "txtobject1"
	push "txtobject2"
	call grobjectives,addlist
	call grobjectives,hide
	new vector,_vecobjective
	push "string"
	call _vecobjective,type
	new img,imgtut
	push "antutorial"
	push "antutorialexit"
	cthis copyanima
	push "exit"
	push 0
	call antutorialexit,setframe
	push "skip"
	push 0
	call antutorial,setframe
	new img,antutorialskip
	push "antutorial"
	call antutorialskip,imgclone
	call antutorial,lodx
	call antutorial,lody
	call antutorialskip,setlodxy
	push 0
	push 0
	call antutorialskip,setpos
	push "txtutorial"
	push ""
	push "fnttutorial"
	cthis black
	cthis newtext
	push "txtutname"
	push "tutorial"
	call dbgame,dbget
	push "fnthogui"
	cthis black
	cthis newtext
	call txtutname,hide
	push "skiptutorial"
	call dbgame,dbget
	call subtitle,getcolor
	call txtutorial,txtsetcol
	push "antutorialskip"
	call txtutorial,txtcenter
	push 0
	push 10
	call txtutorial,scmove
	push "txtutorial"
	call antutorialskip,blit
	call txtutorial,hide
	call antutorialexit,Button_isin
	push "butmoveon"
	push "BanGui47"
	call antutorialexit,addmethod
	push "butmoveoff"
	push "BanGui48"
	call antutorialexit,addmethod
	push "butclick"
	push "BanGui49"
	call antutorialexit,addmethod
	call antutorialskip,Button_isin
	push "butclick"
	push "BanGui50"
	call antutorialskip,addmethod
	new db,dbtut
	push LANGDIR
	push "tutorial.db"
	pop $b
	popax
	add $a,$b
	call dbtut,load
	push "globalstrzalka"
	push "guistrzalka"
	cthis copyanima
	push "globalstrzalka"
	push "guistrzalka2"
	cthis copyanima
	push "guiwinopis"
	push "anwinopis"
	cthis copyanima
	push "guiwinopis"
	push "anwinopisexit"
	cthis copyanima
	new img,imgwinopis
	cthis isadvclass
	neg
	cmp0
	je l4855
	call anwinopisexit,BanGui51
l4855:
	cthis enabled_tutorial
	cmp0
	je l4863
	cthis enable_tutorial
l4863:
	cthis save_game
	end method
	method BanGui0
	push 0
	pop enabled
	end method
	method BanGui1
	push 1
	pop enabled
	end method
	method BanGui2
	localint $1
	pop $1
	push $1
	cmp0
	je l4698
	cthis pckitem_movon
	cmp0
	je l4700
	push bismoved
	neg
	cmp0
	je l4702
	push 1
	pop bismoved
	push "take"
	call advmouse,set
l4702:
	jmp l4699
l4700:
	push 0
	pop bismoved
	call advmouse,setstd
l4699:
	jmp l4697
l4698:
	push bismoved
	cmp0
	je l4704
	push 0
	pop bismoved
	call advmouse,setstd
l4704:
l4697:
	push $1
	end method
	method BanGui3
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	cthis getpx
	cmpjae
	cmp0
	je l4707
	push $1
	cthis getex
	cmpjl
	cmp0
	je l4707
	push $2
	cthis getpy
	cmpjae
	jmp l4709
l4707:
	push 0
	jmp l4709
l4708:
	push 1
l4709:
	cthis isinactfield
	end method
	method BanGui4
	push "isbutin"
	push "BanGui5"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method BanGui5
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 1
	cthis isin
	cthis isinactfield
	end method
	method BanGui6
	call mouse,getpos
	push 1
	push 0
	call guinventorydok,isin
	cmp0
	je l4713
	push bdokuj
	neg
	pop bdokuj
	push "guinventory_dokuj"
	push bdokuj
	call clsave,set
	cthis inventory_dock
	call sfxbutclick2,play
	push bdokuj
	push 0
	cmpje
	cmp0
	je l4715
	cthis inventory_check
	push "beh_INVENTORY_UNDOCK"
	cthis playbehif
	popax
	jmp l4714
l4715:
	push "beh_INVENTORY_DOCK"
	cthis playbehif
	popax
l4714:
l4713:
	end method
	method BanGui7
	push actspeed
	cthis moveslots
	cthis play
	end method
	method BanGui8
	localint $1
	pop $1
	push $1
	push speed
	pop $b
	popax
	mul $a,$b
	pop actspeed
	push 1
	cthis stop
	end method
	method BanGui9
	cthis advstdstate
	cmp0
	je l4717
	push 1
	call _timrevinv,startrew
l4717:
	end method
	method BanGui10
	cthis advstdstate
	cmp0
	je l4719
	push 1
	popax
	sub 0,$a
	call _timrevinv,startrew
l4719:
	end method
	method BanGui11
	localdef $1
	push dir
	push speed
	pop $b
	popax
	mul $a,$b
	pop $1
	push dir
	push 0
	cmpja
	cmp0
	je l4721
	cthis inventory_hidden
	cmp0
	je l4723
	jmp l4722
l4723:
	push $1
	cthis inventory_move
	cthis play
l4722:
	jmp l4720
l4721:
	cthis inventory_showed
	cmp0
	je l4725
	localint $2
	push 0
	pop $2
l4726:
	push $2
	call grgotopckstack,size
	cmpjl
	cmp0
	je l4727
	jmp l4729
l4728:
	add $2,1
	pop $2
	jmp l4726
l4729:
	push $2
	call grgotopckstack,get
	spushs
	spop $a
	call [$a],_item_gotopck2
	jmp l4728
l4727:
	cthis isretitemstate
	cmp0
	je l4731
	cthis item_gotopck
	jmp l4730
l4731:
	call guinventory,sitemshow
	push "null"
	cmpjne
	cmp0
	je l4733
	call guinventory,sitemshow
	cthis showhintitem
l4733:
l4730:
	jmp l4724
l4725:
	push $1
	cthis inventory_move
	cthis inventory_showed
	popax
	cthis play
l4724:
l4720:
	end method
	method BanGui12
	push 0
	call guinventory,blockout=
	end method
	method BanGui13
	call sndakskermovon,playif
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	clparent classadvbut,moveon
	end method
	method BanGui14
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	clparent classadvbut,moveoff
	end method
	method BanGui15
	cthis Button_isinalpha
	push "butmoveon"
	push "BanGui16"
	cthis addmethod
	push "butmoveoff"
	push "BanGui17"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method BanGui16
	cthis advstdstate
	cmp0
	je l4739
	call sndakskermovon,playif
	push "normal"
	call advmouse,set
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
l4739:
	end method
	method BanGui17
	call advmouse,setstd
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	end method
	method BanGui18
	push 1
	popax
	sub 0,$a
	cthis actionnr
	push 1
	cmpjne
	cmp0
	je l4745
	call sndakskermovon,playif
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
l4745:
	clparent classadvbut,moveon
	end method
	method BanGui19
	push 1
	popax
	sub 0,$a
	cthis actionnr
	push 1
	cmpjne
	cmp0
	je l4747
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
l4747:
	clparent classadvbut,moveoff
	end method
	method BanGui20
	cthis Button_isinalpha
	push "butmoveon"
	push "BanGui21"
	cthis addmethod
	push "butmoveoff"
	push "BanGui22"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method BanGui21
	cthis advstdstate
	cmp0
	je l4749
	push "normal"
	call advmouse,set
	push 1
	popax
	sub 0,$a
	cthis actionnr
	push 1
	cmpjne
	cmp0
	je l4751
	call sndakskermovon,playif
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
l4751:
	call guiskipmg,isvisible
	cmp0
	je l4753
	push 1
	popax
	sub 0,$a
	call guirose,isplaying
	neg
	jmp l4755
l4753:
	push 0
	jmp l4755
l4754:
	push 1
l4755:
	cmp0
	je l4756
	push 1
	popax
	sub 0,$a
	push 1
	call guiskipmg,setframe
l4756:
l4749:
	end method
	method BanGui22
	call advmouse,setstd
	push 1
	popax
	sub 0,$a
	cthis actionnr
	push 1
	cmpjne
	cmp0
	je l4758
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
l4758:
	call guiskipmg,isvisible
	cmp0
	je l4760
	push 1
	popax
	sub 0,$a
	call guirose,isplaying
	neg
	jmp l4762
l4760:
	push 0
	jmp l4762
l4761:
	push 1
l4762:
	cmp0
	je l4763
	push 1
	popax
	sub 0,$a
	push 0
	call guiskipmg,setframe
l4763:
	end method
	method BanGui23
	push "switchtoskip"
	push "BanGui24"
	cthis addmethod
	push "switchtohint"
	push "BanGui25"
	cthis addmethod
	end method
	method BanGui24
	push difficulty
	push 2
	cmpja
	cmp0
	je l4765
	ret
l4765:
	localint $1
	call guirose,framenr
	pop $1
	push "fall"
	call guirose,play
	push $1
	push 1
	popax
	sub 0,$a
	call guirose,nofframes
	push 1
	pop $b
	popax
	sub $a,$b
	cmpjl
	cmp0
	je l4767
	push 1
	popax
	sub 0,$a
	push $1
	call guirose,setframe
l4767:
	push 1
	call guirose,setdelay
	call guiskipmg,show
	push "hint_state"
	push 0
	call clsave,set
	end method
	method BanGui25
	push difficulty
	push 2
	cmpja
	cmp0
	je l4769
	ret
l4769:
	push hint_delay
	call guirose,setdelay
	call guiskipmg,hide
	push "hint_state"
	push 0
	call clsave,set
	end method
	method BanGui26
	cthis loupe_visible
	cmp0
	je l4773
	cthis gui_hide_loupe
	jmp l4772
l4773:
	cthis gui_show_loupe
l4772:
	end method
	method BanGui27
	cthis actionname
	push "hint"
	cmpje
	cmp0
	je l4781
	call guiskipmg,isvisible
	cmp0
	je l4783
	cthis isadvclass
	cmp0
	je l4785
	push "beh_SKIP_CLICK"
	cthis playbehif
	popax
	jmp l4784
l4785:
	call gameapi,getgamename
	spushs
	spop $a
	call [$a],SKIP_CLICK
l4784:
	call sfxhint1,play
	jmp l4782
l4783:
	push "fall"
	call guirose,play
	push "nonactive"
	call guihint,play
	cthis isadvclass
	cmp0
	je l4787
	push "beh_HINT_CLICK"
	cthis playbehif
	popax
	jmp l4786
l4787:
	call gameapi,getgamename
	spushs
	spop $a
	call [$a],HINT_CLICK
l4786:
l4782:
l4781:
	end method
	method BanGui28
	cthis actionname
	spushs
	push "fall"
	cmpst
	je l4790
	push "startskip"
	cmpst
	je l4790
	jmp l4789
l4790:
	spop $a
	call guiskipmg,isvisible
	neg
	cmp0
	je l4792
	push hint_delay
	cthis setdelay
	jmp l4791
l4792:
	push skip_delay
	cthis setdelay
l4791:
	push "grow"
	cthis play
	push "nonactive"
	call guihint,play
	push "hint_state"
	push 0
	call clsave,set
	jmp l4788
l4789:
	push "grow"
	cmpst
	jne l4793
	spop $a
	push "hint"
	push 0
	call guihint,setframe
	push 200
	push "null"
	call guihint,anfadein
	push 1
	call guirose,setdelay
	push 1
	popax
	sub 0,$a
	push 0
	call guiskipmg,setframe
	push "hint_state"
	push 1
	call clsave,set
	jmp l4788
l4793:
	spop $a
l4788:
	end method
	method BanGui29
	cthis advstdstate
	cmp0
	je l4797
	call sndakskermovon,playif
	push "normal"
	call advmouse,set
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
l4797:
	end method
	method BanGui30
	call advmouse,setstd
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	end method
	method BanGui31
	cthis advstdstate
	cmp0
	je l4799
	cthis gui_gotomenu
l4799:
	end method
	method BanGui32
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	clparent classadvbut,moveon
	end method
	method BanGui33
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	clparent classadvbut,moveoff
	end method
	method BanGui34
	cthis advstdstate
	cmp0
	je l4803
	push "normal"
	call advmouse,set
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
l4803:
	end method
	method BanGui35
	call advmouse,setstd
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	end method
	method BanGui36
	cthis advstdstate
	cmp0
	je l4805
	cthis gui_openmap
l4805:
	end method
	method BanGui37
	push "isbutin"
	push "BanGui38"
	cthis addmethod
	cthis Button_moveon_std
	cthis Button_moveoff
	cthis getname
	call butgame,add
	end method
	method BanGui38
	localdef $1
	localdef $2
	pop $2
	pop $1
	localdef $3
	push 1
	popax
	sub 0,$a
	cthis actionnr
	pop $3
	localdef $4
	cthis framenr
	pop $4
	push 0
	push 0
	cthis setframe
	push $1
	push $2
	push 1
	push 1
	cthis isin
	push $3
	push $4
	cthis setframe
	end method
	method BanGui39
	cthis advstdstate
	cmp0
	je l4815
	cthis gui_opendiary
l4815:
	end method
	method BanGui40
	call grhints,free
	localint $1
	push 0
	pop $1
l4831:
	push $1
	call grbuts,size
	cmpjl
	cmp0
	je l4832
	jmp l4834
l4833:
	add $1,1
	pop $1
	jmp l4831
l4834:
	push $1
	call grbuts,get
	spushs
	spop $a
	call [$a],ishintablebut
	cmp0
	je l4836
	push $1
	call grbuts,get
	call grhints,add
l4836:
	jmp l4833
l4832:
	call grhints,size
	cmp0
	je l4838
	localdef $2
	call grhints,rand
	pop $2
	push $2
	spushs
	push "bhoenter"
	spop $a
	call [$a],hasvar
	cmp0
	je l4840
	call fthoenter,unlink
	push $2
	spushs
	spop $a
	call [$a],getcx
	push $2
	spushs
	spop $a
	call [$a],getey
	call anhoenter,setpos
	localreal $3
	push $2
	spushs
	spop $a
	call [$a],getw
	spushs
	spop $h
	call $h,to_r
	call anhoenter,getw
	spushs
	spop $h
	call $h,to_r
	pop $b
	popax
	div $a,$b
	psax
	pop $3
	push $3
	push 1.0
	cmpjl
	cmp0
	je l4842
	push "anhoenter"
	call fthoenter,link
	push 1
	call fthoenter,setpivottype
	push $3
	call fthoenter,setzoom
l4842:
	push 0
	call anhoenter,play
	jmp l4839
l4840:
	push $2
	cthis showautohint
l4839:
l4838:
	cthis play
	end method
	method BanGui41
	push 1
	pop gui_skipclick
	cthis skipactbeh
	end method
	method BanGui42
	call gtxtnextdialog,getw
	push 1
	pop $b
	popax
	add $a,$b
	call gtxtnextdialog,geth
	push 1
	pop $b
	popax
	add $a,$b
	cthis transparent
	cthis create
	cthis black
	call gtxtnextdialog,createtxt
	push 1
	push 1
	call gtxtnextdialog,move
	push "gtxtnextdialog"
	cthis blit
	cthis guifontcolor
	call gtxtnextdialog,createtxt
	push 1
	popax
	sub 0,$a
	push 1
	popax
	sub 0,$a
	call gtxtnextdialog,move
	push "gtxtnextdialog"
	cthis blit
	push iTxtButtonZ
	cthis setz
	cthis hide
	cthis Button_isin
	cthis Button_moveonmstd
	cthis Button_moveoffms
	push "butclick"
	push "BanGui43"
	cthis addmethod
	end method
	method BanGui43
	push 1
	pop gui_skipclick
	cthis banbehrewind
	end method
	method BanGui44
	cthis cisdialogplaying
	neg
	cmp0
	je l4848
	call imgnextdialog,hide
l4848:
	cthis play
	end method
	method BanGui45
	push A
	push "sobject"
	push "null"
	cthis vars2
	push "timfinobj"
	push 5000
	push "BanGui46"
	cthis timer=
	end method
	method BanGui46
	push ishowpouptime
	push "null"
	call imgobject,anzoomfadeout
	end method
	method BanGui47
	push "normal"
	call advmouse,set
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	end method
	method BanGui48
	push "normal"
	call advmouse,set
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	end method
	method BanGui49
	push "GAME_acttutorial"
	call clsave,get
	push "T7a"
	cmpje
	cmp0
	jne l4851
	push "GAME_acttutorial"
	call clsave,get
	push "T7b"
	cmpje
	jmp l4852
l4850:
	push 0
	jmp l4852
l4851:
	push 1
l4852:
	cmp0
	je l4853
	ret
l4853:
	push "GAME_skiptutorial"
	call clsave,bset
	cthis hide_tutorial
	push 1
	pop gui_skipclick
	end method
	method BanGui50
	push "GAME_skiptutorial"
	push 0
	call clsave,set
	cthis exit_tutorial
	push 1
	pop gui_skipclick
	end method
	method BanGui51
	push "exit"
	push 0
	cthis setframe
	call anwinopis,getz
	push 1
	pop $b
	popax
	add $a,$b
	cthis setz
	push "isbutin"
	push "BanGui52"
	cthis addmethod
	push "butclick"
	push "BanGui53"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method BanGui52
	localdef $1
	localdef $2
	pop $2
	pop $1
	push sgmstate
	push "state_shownmgopis"
	cmpje
	cmp0
	je l4857
	push $1
	push $2
	push 1
	push 1
	cthis isin
	cmp0
	je l4859
	call advmouse,setstd
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	jmp l4858
l4859:
	push "normal"
	call advmouse,setif
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
l4858:
	push 1
	jmp l4856
l4857:
	push 0
l4856:
	end method
	method BanGui53
	push sgmstate
	push "state_shownmgopis"
	cmpje
	cmp0
	je l4861
	cthis hide_mghelp
l4861:
	end method
	method guihintbase_func_moveon
	cthis isadvclass
	cmp0
	je l4865
	call guihint,moveon
	jmp l4864
l4865:
	call guihint,butmoveon
l4864:
	end method
	method guihintbase_func_isin
	call mouse,getpos
	push 1
	push 1
	cthis isin
	ret
	end method
	method guihintbase_func_moveoff
	cthis isadvclass
	cmp0
	je l4867
	call guihint,moveoff
	jmp l4866
l4867:
	call guihint,butmoveoff
l4866:
	end method
	method guihintbase_func_clickon
	cthis isadvclass
	cmp0
	je l4869
	call guihint,clickon
	jmp l4868
l4869:
	call guihint,butclick
l4868:
	end method
	method getsfunclick
	cthis isadvclass
	cmp0
	je l4871
	push "clickon"
	jmp l4870
l4871:
	push "butclick"
l4870:
	end method
	method reskip_tutorial
	push "GAME_skiptutorial"
	call clsave,bis
	cmp0
	je l4873
	cthis enable_tutorial
l4873:
	end method
	method exit_tutorial
	cthis disable_tutorial
	cthis hide_tutorial
	end method
	method enable_tutorial
	push "GAME_enabled_tutorial"
	call clsave,bset
	call antutorialexit,butenable
	call antutorialskip,butenable
	end method
	method enabled_tutorial
	push "GAME_enabled_tutorial"
	push "1"
	call clsave,is
	end method
	method bncanplaybeh
	localstring $1
	pop $1
	cthis enabled_tutorial
	cmp0
	jne l4875
	push $1
	cthis canplaybeh
	jmp l4876
l4874:
	push 0
	jmp l4876
l4875:
	push 1
l4876:
	end method
	method bncanplaybehs
	cthis canplaybehs
	cmp0
	jne l4878
	cthis enabled_tutorial
	jmp l4879
l4877:
	push 0
	jmp l4879
l4878:
	push 1
l4879:
	end method
	method disable_tutorial
	push "GAME_enabled_tutorial"
	push 0
	call clsave,set
	call antutorialexit,butdisable
	call antutorialskip,butdisable
	end method
	method isact_tutorial
	localstring $1
	pop $1
	cthis enabled_tutorial
	cmp0
	je l4880
	push "GAME_acttutorial"
	call clsave,get
	push $1
	cmpje
	jmp l4882
l4880:
	push 0
	jmp l4882
l4881:
	push 1
l4882:
	end method
	method hide_tutorial
	call antutorialexit,isvisible
	cmp0
	je l4884
	localstring $1
	push "tutorial_"
	push "GAME_acttutorial"
	call clsave,get
	pop $b
	popax
	add $a,$b
	push "_hidden"
	pop $b
	popax
	add $a,$b
	pop $1
	push "GAME_acttutorial"
	push "null"
	call clsave,set
	call antutorialexit,hide
	call antutorialskip,hide
	push ishowpouptime
	push "BanGui54"
	call imgtut,anzoomfadeout
	cthis hide_tutpointer
	push GAME
	spushs
	push $1
	spushs
	spop $d
	spop $a
	call [$a],[$d]
l4884:
	end method
	method BanGui54
	push 2
	push 2
	cthis transparent
	call imgtut,create
	call imgtut,hide
	end method
	method hide_tutpointer
	call guistrzalka,isvisible
	cmp0
	je l4886
	push 0
	call guistrzalka,stop
	push ishowpouptime
	push "std_anfadeout_finish"
	call guistrzalka,anfadeout
l4886:
	call guistrzalka2,isvisible
	cmp0
	je l4888
	push 0
	call guistrzalka2,stop
	push ishowpouptime
	push "std_anfadeout_finish"
	call guistrzalka2,anfadeout
l4888:
	end method
	method timhide_tutorial
	localint $1
	pop $1
	push GAME
	spushs
	push $1
	spop $a
	call [$a],BanGui55
	end method
	method BanGui55
	localint $1
	pop $1
	push "_timtutfin"
	cthis hasvar
	neg
	cmp0
	je l4890
	push "_timtutfin"
	push $1
	push "hide_tutorial"
	cthis timer=
l4890:
	push $1
	call _timtutfin,setdelay
	call _timtutfin,play
	end method
	method tutpos
	push igmoffsetx
	push rgmscalex
	push 80.0
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	push igmoffsety
	push rgmscaley
	push 80.0
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	ret
	end method
	method ctutpos
	push igmappw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	call antutorial,getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push igmoffsety
	push rgmscaley
	push 80.0
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	ret
	end method
	method rtutpos
	push "bkg"
	push 0
	call antutorial,setframe
	push igmappw
	push 2
	push igmoffsetx
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	sub $a,$b
	call antutorial,getw
	pop $b
	popax
	sub $a,$b
	push rgmscalex
	push 80.0
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	sub $a,$b
	push igmoffsety
	push rgmscaley
	push 80.0
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	ret
	end method
	method tutshow
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	push igmoffsetx
	push rgmscalex
	push $2
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	push igmoffsety
	push rgmscaley
	push $3
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	cthis show_tutorial
	end method
	method tutshowe
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push "bkg"
	push 0
	call antutorial,setframe
	push $1
	push igmappw
	push igmoffsetx
	pop $b
	popax
	sub $a,$b
	call antutorial,getw
	pop $b
	popax
	sub $a,$b
	push rgmscalex
	push $2
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	sub $a,$b
	push igmoffsety
	push rgmscaley
	push $3
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	cthis show_tutorial
	end method
	method tutpoint
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push 0
	push 0
	push $2
	cthis tutpointdxdy
	end method
	method tutpointdxdy
	localstring $1
	localint $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getcx
	call $2,igetsc
	pop $b
	popax
	add $a,$b
	push $1
	spushs
	spop $a
	call [$a],getcy
	call $3,igetsc
	pop $b
	popax
	add $a,$b
	push $4
	cthis tutpointxy
	end method
	method tutpointxy
	localint $1
	localint $2
	localstring $3
	pop $3
	pop $2
	pop $1
	cthis enabled_tutorial
	neg
	cmp0
	je l4892
	ret
l4892:
	push $3
	spushs
	push "uu"
	cmpst
	je l4895
	push "u"
	cmpst
	je l4895
	jmp l4894
l4895:
	spop $a
	push "uu"
	jmp l4893
l4894:
	push "ru"
	cmpst
	je l4897
	push "ur"
	cmpst
	je l4897
	jmp l4896
l4897:
	spop $a
	push "ru"
	jmp l4893
l4896:
	push "rr"
	cmpst
	je l4899
	push "r"
	cmpst
	je l4899
	jmp l4898
l4899:
	spop $a
	push "rr"
	jmp l4893
l4898:
	push "rd"
	cmpst
	je l4901
	push "dr"
	cmpst
	je l4901
	jmp l4900
l4901:
	spop $a
	push "rd"
	jmp l4893
l4900:
	push "ld"
	cmpst
	je l4903
	push "dl"
	cmpst
	je l4903
	jmp l4902
l4903:
	spop $a
	push "ld"
	jmp l4893
l4902:
	push "ll"
	cmpst
	je l4905
	push "l"
	cmpst
	je l4905
	jmp l4904
l4905:
	spop $a
	push "ll"
	jmp l4893
l4904:
	push "lu"
	cmpst
	je l4907
	push "ul"
	cmpst
	je l4907
	jmp l4906
l4907:
	spop $a
	push "lu"
	jmp l4893
l4906:
	spop $a
	push "dd"
l4893:
	pop $3
	call guistrzalka,unlink_internal_filter
	push $3
	call guistrzalka,play
	push $1
	push $2
	call guistrzalka,setpos
	end method
	method tutpointxy2
	localint $1
	localint $2
	localstring $3
	pop $3
	pop $2
	pop $1
	cthis enabled_tutorial
	neg
	cmp0
	je l4909
	ret
l4909:
	push $3
	spushs
	push "uu"
	cmpst
	je l4912
	push "u"
	cmpst
	je l4912
	jmp l4911
l4912:
	spop $a
	push "uu"
	jmp l4910
l4911:
	push "ru"
	cmpst
	je l4914
	push "ur"
	cmpst
	je l4914
	jmp l4913
l4914:
	spop $a
	push "ru"
	jmp l4910
l4913:
	push "rr"
	cmpst
	je l4916
	push "r"
	cmpst
	je l4916
	jmp l4915
l4916:
	spop $a
	push "rr"
	jmp l4910
l4915:
	push "rd"
	cmpst
	je l4918
	push "dr"
	cmpst
	je l4918
	jmp l4917
l4918:
	spop $a
	push "rd"
	jmp l4910
l4917:
	push "ld"
	cmpst
	je l4920
	push "dl"
	cmpst
	je l4920
	jmp l4919
l4920:
	spop $a
	push "ld"
	jmp l4910
l4919:
	push "ll"
	cmpst
	je l4922
	push "l"
	cmpst
	je l4922
	jmp l4921
l4922:
	spop $a
	push "ll"
	jmp l4910
l4921:
	push "lu"
	cmpst
	je l4924
	push "ul"
	cmpst
	je l4924
	jmp l4923
l4924:
	spop $a
	push "lu"
	jmp l4910
l4923:
	spop $a
	push "dd"
l4910:
	pop $3
	call guistrzalka2,unlink_internal_filter
	push $3
	call guistrzalka2,play
	push $1
	push $2
	call guistrzalka2,setpos
	end method
	method hide_mghelp
	call anwinopisexit,hide
	call advmouse,setstd
	push "state_hidemgopis"
	pop sgmstate
	push ishowpouptime
	push "BanGui56"
	call imgwinopis,anzoomfadeout
	end method
	method BanGui56
	cthis advsetstdstate
	cthis hide
	push "tutorial7a_shown"
	call clsave,bis
	cmp0
	je l4926
	push "tutorial7b_shown"
	call clsave,bis
	neg
	jmp l4928
l4926:
	push 0
	jmp l4928
l4927:
	push 1
l4928:
	cmp0
	je l4929
	cthis enabled_tutorial
	cmp0
	je l4931
	cthis hide_tutorial
	push "T7b"
	cthis ctutpos
	cthis show_tutorial
	push "globalhint"
	push "rd"
	cthis tutpoint
	push "tutorial7b_shown"
	call clsave,bset
l4931:
l4929:
	end method
	method show_mghelp
	localstring $1
	pop $1
	localint $2
	push $1
	call dbmghelp,findbyrow
	pop $2
	push $2
	push 0
	cmpjae
	cmp0
	je l4933
	push "state_showmgopis"
	pop sgmstate
	call imgwinopis,unlink_internal_filter
	push A
	push "anwinopis"
	call imgwinopis,imgbuildfromlist
	call imgwinopis,show
	call anwinopis,getz
	call imgwinopis,setz
	new vector,vtut
	push $2
	push 1
	call dbmghelp,get
	push 70
	call vtut,vecbuildlines
	localdef $3
	call vtut,size
	pop $3
	localint $4
	push 0
	pop $4
l4934:
	push $4
	call vtut,size
	cmpjl
	cmp0
	je l4935
	jmp l4937
l4936:
	add $4,1
	pop $4
	jmp l4934
l4937:
	push $4
	call vtut,get
	cthis guifontcolor
	call txtutorial,txtsetcol
	call imgwinopis,getcx
	call txtutorial,getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call imgwinopis,getcy
	push $3
	push 1
	pop $b
	popax
	add $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push $4
	pop $b
	popax
	sub $a,$b
	call txtutorial,geth
	push 2
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	sub $a,$b
	call txtutorial,setpos
	push "txtutorial"
	call imgwinopis,blit
	jmp l4936
l4935:
	call txtutorial,hide
	push igmappw
	call imgwinopis,getw
	pop $b
	popax
	sub $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push igmoffsety
	push 25
	spushs
	spop $h
	call $h,igetsc
	pop $b
	popax
	add $a,$b
	call imgwinopis,setpos
	push ishowpouptime
	push "BanGui57"
	call imgwinopis,anzoomfadein
	delete vtut
l4933:
	end method
	method BanGui57
	push "state_shownmgopis"
	pop sgmstate
	cthis getpx
	cthis getpy
	call anwinopisexit,setpos
	call anwinopisexit,show
	end method
	method show_tutorial
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	cthis enabled_tutorial
	neg
	cmp0
	je l4939
	ret
l4939:
	cthis hide_tutpointer
	localint $4
	push $1
	call dbtut,findbyrow
	pop $4
	push $4
	push 0
	cmpjae
	cmp0
	je l4941
	push $1
	cthis next_tutorial
	push "GAME_acttutorial"
	push $1
	call clsave,set
	push 0
	push 0
	call antutorialskip,setpos
	push "bkg"
	push 0
	call antutorial,setframe
	call imgtut,unlink_internal_filter
	push A
	push "antutorial"
	push "antutorialskip"
	call imgtut,imgbuildfromlist
	call imgtut,show
	call antutorial,getz
	call imgtut,setz
	call antutorial,getcx
	call txtutname,getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call antutorial,getpy
	push 0.01
	call antutorial,geth
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	call txtutname,geth
	pop $b
	popax
	add $a,$b
	call txtutname,setpos
	push "txtutname"
	call imgtut,blit
	new vector,vtut
	push $4
	push 1
	call dbtut,get
	push 32
	call vtut,vecbuildlines
	localdef $5
	call vtut,size
	pop $5
	localint $6
	push 0
	pop $6
l4942:
	push $6
	call vtut,size
	cmpjl
	cmp0
	je l4943
	jmp l4945
l4944:
	add $6,1
	pop $6
	jmp l4942
l4945:
	push $6
	call vtut,get
	cthis black
	call txtutorial,txtsetcol
	call antutorial,getcx
	call txtutorial,getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call antutorial,getcy
	push $5
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push $6
	pop $b
	popax
	sub $a,$b
	call txtutorial,geth
	push 2
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	sub $a,$b
	push 8
	pop $b
	popax
	add $a,$b
	call txtutorial,setpos
	push "txtutorial"
	call imgtut,blit
	jmp l4944
l4943:
	push $2
	call antutorial,lodx
	pop $b
	popax
	add $a,$b
	push $3
	call antutorial,lody
	pop $b
	popax
	add $a,$b
	call imgtut,scpos
	push $2
	push $3
	call antutorialexit,scpos
	push $2
	push $3
	call antutorialskip,scpos
	call antutorialexit,show
	call antutorialskip,show
	delete vtut
l4941:
	end method
	method next_tutorial
	localstring $1
	pop $1
	push "GAME_neededbeh"
	push $1
	call clsave,set
	end method
	method behstarteropt
	localstring $1
	localstring $2
	localint $3
	localint $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	localstring $6
	localstring $7
	push $5
	spushs
	push "-tut"
	cmpst
	jne l4947
	spop $a
	push $6
	spushs
	push $2
	spushs
	push $3
	push $4
	push 1
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],get
	spop $a
	call [$a],sneededbeh=
	push $6
	spushs
	push "itutx"
	push rgmscalex
	push $2
	spushs
	push $3
	push $4
	push 2
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],get
	pop $b
	popax
	mul $a,$b
	spop $a
	call [$a],var2
	push $6
	spushs
	push "ituty"
	push rgmscaley
	push $2
	spushs
	push $3
	push $4
	push 3
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],get
	pop $b
	popax
	mul $a,$b
	spop $a
	call [$a],var2
	push 4
	popax
	add $4,$a
	pop $4
	jmp l4946
l4947:
	spop $a
	add $4,1
	pop $4
l4946:
	push $4
	end method
	method loupe_visible
	call guiloupe,isvisible
	end method
	method update_loupepos
	cthis loupe_visible
	cmp0
	je l4949
	call guiloupe,enabled
	jmp l4951
l4949:
	push 0
	jmp l4951
l4950:
	push 1
l4951:
	cmp0
	je l4952
	call mouse,getpos
	cthis setpos_loupe
l4952:
	end method
	method setpos_loupe
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call guiloupe,setpos
	push $1
	push $2
	call guiloupemask,setpos
	end method
	method show_loupe
	call guiloupe,show
	call grguiloupe,size
	cmp0
	je l4954
	call guiloupemask,show
	push "guiloupemask"
	call ftguiloupe,link
	localint $1
	push 0
	pop $1
l4955:
	push $1
	call grguiloupe,size
	cmpjl
	cmp0
	je l4956
	jmp l4958
l4957:
	add $1,1
	pop $1
	jmp l4955
l4958:
	localdef $2
	push $1
	call grguiloupe,get
	pop $2
	push $2
	spushs
	spop $a
	call [$a],mtype
	push "loupe"
	cmpje
	cmp0
	je l4960
	push $2
	call ftguiloupe,loupe
	jmp l4959
l4960:
	push $2
	spushs
	spop $a
	call [$a],mtype
	push "umask"
	cmpje
	cmp0
	je l4962
	push $2
	spushs
	spop $a
	call [$a],startumask
l4962:
l4959:
	jmp l4957
l4956:
l4954:
	cthis update_loupepos
	call advmouse,refresh
	cthis butrefresh
	end method
	method gui_show_loupe
	cthis isadvclass
	neg
	cmp0
	je l4964
	call gameapi,getgamename
	spushs
	push "anaskopis"
	spop $a
	call [$a],hasvar
	cmp0
	je l4966
	call anaskopis,isvisible
	cmp0
	je l4966
	call gameapi,getgamename
	push "mg47_szafa"
	cmpjne
	jmp l4968
l4966:
	push 0
	jmp l4968
l4967:
	push 1
l4968:
	jmp l4969
l4964:
	push 0
	jmp l4969
l4965:
	push 1
l4969:
	cmp0
	je l4970
	ret
l4970:
	push "ad06_posagmamy_night_karzel_ozywiony2"
	call clsave,bis
	cmp0
	je l4972
	ret
l4972:
	call guimov,moving
	cmp0
	je l4974
	cthis freeactitem
	call guimov,getfree
	spushs
	spop $a
	call [$a],_pckitem_gotopck
l4974:
	cthis show_loupe
	call sfxmagic1,playif
	push GAME
	spushs
	spop $a
	call [$a],LOUPE_SHOW
	cthis isadvclass
	cmp0
	je l4976
	push _slastms
	push "null"
	cmpjne
	cmp0
	je l4978
	push _slastms
	cthis gui_canclick2v
	neg
	jmp l4980
l4978:
	push 0
	jmp l4980
l4979:
	push 1
l4980:
	cmp0
	je l4981
	call advmouse,setstd
l4981:
	push "beh_LOUPE_SHOW"
	cthis playbehif
	popax
	jmp l4975
l4976:
	call butgame,sobject
	push "null"
	cmpjne
	cmp0
	je l4983
	call butgame,sobject
	cthis gui_canclick2v
	neg
	jmp l4985
l4983:
	push 0
	jmp l4985
l4984:
	push 1
l4985:
	cmp0
	je l4986
	call advmouse,setstd
l4986:
l4975:
	end method
	method gui_hide_loupe
	push "sysloupe_disableclose"
	call clsave,bis
	cmp0
	je l4988
	ret
l4988:
	cthis hide_loupe
	push GAME
	spushs
	spop $a
	call [$a],LOUPE_HIDE
	cthis isadvclass
	cmp0
	je l4990
	push "beh_LOUPE_HIDE"
	cthis playbehif
	popax
l4990:
	cthis gui_refreshcursor
	end method
	method gui_refreshcursor
	cthis isadvclass
	cmp0
	je l4992
	push _slastms
	push "null"
	cmpjne
	cmp0
	je l4994
	push _slastms
	spushs
	spop $a
	call [$a],showmousecursor
	jmp l4993
l4994:
	call advmouse,setstd
l4993:
	jmp l4991
l4992:
	localstring $1
	call butgame,sobject
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l4996
	push $1
	spushs
	push "butmoveon"
	spop $a
	call [$a],hasaddedmet
	jmp l4998
l4996:
	push 0
	jmp l4998
l4997:
	push 1
l4998:
	cmp0
	je l4999
	push $1
	spushs
	spop $a
	call [$a],butmoveon
l4999:
l4991:
	end method
	method hide_loupe
	call ftguiloupe,removeallblend
	call ftguiloupe,unlink
	call guiloupe,hide
	call guiloupemask,hide
	push "BanGui58"
	call grguiloupe,eval
	call advmouse,refresh
	cthis butrefresh
	end method
	method BanGui58
	push mtype
	push "umask"
	cmpje
	cmp0
	je l5001
	cthis stopumask
l5001:
	end method
	method show_loupe_skrzat
	cthis loupe_visible
	cmp0
	je l5003
	cthis hide_loupe
l5003:
	push 0.55
	push igmappw
	pop $b
	popax
	mul $a,$b
	push 0.65
	push igmapph
	pop $b
	popax
	mul $a,$b
	call guiloupeskrzat,setpos
	call guiloupeskrzat,show
	push 200
	push 1
	push 1
	popax
	sub 0,$a
	push "std_anfadeout_finish"
	push 1.0
	push 4.0
	call guiloupeskrzat,_anzoomfadeinout
	end method
	method show_loupe_skrzat_outro
	cthis loupe_visible
	cmp0
	je l5005
	cthis hide_loupe
l5005:
	push 0.55
	push igmappw
	pop $b
	popax
	mul $a,$b
	push 200
	pop $b
	popax
	add $a,$b
	push 0.65
	push igmapph
	pop $b
	popax
	mul $a,$b
	push 100
	pop $b
	popax
	add $a,$b
	call guiloupeskrzat,setpos
	call guiloupeskrzat,show
	push 200
	push 1
	push 1
	popax
	sub 0,$a
	push "std_anfadeout_finish"
	push 1.0
	push 4.0
	call guiloupeskrzat,_anzoomfadeinout
	end method
	method hide_loupe_skrzat
	cthis loupe_visible
	cmp0
	je l5007
	cthis hide_loupe
l5007:
	push 0.55
	push igmappw
	pop $b
	popax
	mul $a,$b
	push 0.65
	push igmapph
	pop $b
	popax
	mul $a,$b
	call guiloupeskrzat,setpos
	call guiloupeskrzat,show
	push 200
	push 1
	popax
	sub 0,$a
	push 1
	popax
	sub 0,$a
	push "std_anfadeout_finish"
	push 1.0
	push 4.0
	call guiloupeskrzat,_anzoomfadeinout
	end method
	method hide_loupe_skrzat_outro
	cthis loupe_visible
	cmp0
	je l5009
	cthis hide_loupe
l5009:
	push 0.55
	push igmappw
	pop $b
	popax
	mul $a,$b
	push 200
	pop $b
	popax
	add $a,$b
	push 0.65
	push igmapph
	pop $b
	popax
	mul $a,$b
	push 100
	pop $b
	popax
	add $a,$b
	call guiloupeskrzat,setpos
	call guiloupeskrzat,show
	push 200
	push 1
	popax
	sub 0,$a
	push 1
	popax
	sub 0,$a
	push "std_anfadeout_finish"
	push 1.0
	push 4.0
	call guiloupeskrzat,_anzoomfadeinout
	end method
	method show_loupe_roger
	cthis loupe_visible
	cmp0
	je l5011
	cthis hide_loupe
l5011:
	push 0.75
	push igmappw
	pop $b
	popax
	mul $a,$b
	push 0.65
	push igmapph
	pop $b
	popax
	mul $a,$b
	call guiloupeskrzat,setpos
	call guiloupeskrzat,show
	push 200
	push 1
	push 1
	popax
	sub 0,$a
	push "std_anfadeout_finish"
	push 1.0
	push 4.0
	call guiloupeskrzat,_anzoomfadeinout
	end method
	method hide_loupe_roger
	cthis loupe_visible
	cmp0
	je l5013
	cthis hide_loupe
l5013:
	push 0.75
	push igmappw
	pop $b
	popax
	mul $a,$b
	push 0.65
	push igmapph
	pop $b
	popax
	mul $a,$b
	call guiloupeskrzat,setpos
	call guiloupeskrzat,show
	push 200
	push 1
	popax
	sub 0,$a
	push 1
	popax
	sub 0,$a
	push "std_anfadeout_finish"
	push 1.0
	push 4.0
	call guiloupeskrzat,_anzoomfadeinout
	end method
	method showautohint
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getcx
	push $1
	spushs
	spop $a
	call [$a],getcy
	call guimigot,setpos
	push 2
	push 4
	call $1,getb
	push "znak"
	cmpje
	cmp0
	jne l5016
	push 2
	push 4
	call $1,getb
	push "k_ks"
	cmpje
	jmp l5017
l5015:
	push 0
	jmp l5017
l5016:
	push 1
l5017:
	cmp0
	je l5018
	push 1
	call guimigot,play
	jmp l5014
l5018:
	push 0
	call guimigot,play
l5014:
	push $1
	call grguiloupe,contains
	cmp0
	je l5020
	call mouse,getpos
	push 1
	push 1
	call guiglass,isin
	neg
	jmp l5022
l5020:
	push 0
	jmp l5022
l5021:
	push 1
l5022:
	cmp0
	je l5023
	push 1
	popax
	sub 0,$a
	call guiglass,actionnr
	push 5
	pop $b
	popax
	add $a,$b
	call guiglassglow,play
l5023:
	end method
	method showhint
	localstring $1
	pop $1
	push $1
	push 0
	push 0
	cthis showhintdxdy
	push $1
	push "anpopexit"
	cmpje
	cmp0
	je l5025
	push "hint"
	call guihint,play
	push "fall"
	call guirose,play
	push "nonactive"
	call guihint,play
l5025:
	cthis isadvclass
	cmp0
	je l5027
	push $1
	push "null"
	cmpjne
	cmp0
	je l5029
	push $1
	spushs
	push "smousecursor"
	spop $a
	call [$a],hasvar
	jmp l5031
l5029:
	push 0
	jmp l5031
l5030:
	push 1
l5031:
	cmp0
	je l5032
	localdef $2
	push $1
	spushs
	spop $a
	call [$a],smousecursor
	pop $2
	push $2
	push "exit"
	cmpje
	cmp0
	jne l5035
	push $2
	push "gouu"
	cmpje
	cmp0
	jne l5035
	push $2
	push "gorr"
	cmpje
	cmp0
	jne l5035
	push $2
	push "gorr"
	cmpje
	cmp0
	jne l5035
	push $2
	push "godd"
	cmpje
	cmp0
	jne l5035
	push $2
	push "goll"
	cmpje
	jmp l5036
l5034:
	push 0
	jmp l5036
l5035:
	push 1
l5036:
	cmp0
	je l5037
	push 1
	popax
	sub 0,$a
	call guishowhintcursor,isplaying
	neg
	cmp0
	je l5039
	push $1
	spushs
	spop $a
	call [$a],getcx
	push $1
	spushs
	spop $a
	call [$a],getcy
	call guishowhintcursor,setpos
	push 200
	push "null"
	call guishowhintcursor,anfadein
	push $1
	spushs
	spop $a
	call [$a],smousecursor
	call guishowhintcursor,play
l5039:
l5037:
l5032:
l5027:
	end method
	method showhintdxdy
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getcx
	push $2
	pop $b
	popax
	add $a,$b
	push $1
	spushs
	spop $a
	call [$a],getcy
	push $3
	pop $b
	popax
	add $a,$b
	push 0
	cthis showhintxy
	end method
	method showhint2vdxdy
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getcx
	push $2
	pop $b
	popax
	add $a,$b
	push $1
	spushs
	spop $a
	call [$a],getcy
	push $3
	pop $b
	popax
	add $a,$b
	push 1
	cthis showhintxy
	end method
	method showhint2v
	localstring $1
	pop $1
	push $1
	push 0
	push 0
	cthis showhint2vdxdy
	end method
	method showhintxy
	localint $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push 1
	popax
	sub 0,$a
	call guishowhint,isplaying
	cmp0
	je l5041
	push 1
	popax
	sub 0,$a
	call guishowhint2,isplaying
	cmp0
	je l5043
	push 1
	popax
	sub 0,$a
	call guishowhint3,isplaying
	cmp0
	je l5045
	push $1
	push $2
	push $3
	call guishowhint,_showhint
	jmp l5044
l5045:
	push $1
	push $2
	push $3
	call guishowhint3,_showhint
l5044:
	jmp l5042
l5043:
	push $1
	push $2
	push $3
	call guishowhint2,_showhint
l5042:
	jmp l5040
l5041:
	push $1
	push $2
	push $3
	call guishowhint,_showhint
l5040:
	end method
	method _showhint
	localint $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	cthis setpos
	push $3
	cthis play
	end method
	method showhintitem
	localstring $1
	pop $1
	cthis inventory_playing
	cmp0
	jne l5048
	cthis inventory_hidden
	jmp l5049
l5047:
	push 0
	jmp l5049
l5048:
	push 1
l5049:
	cmp0
	je l5050
	push $1
	call guinventory,sitemshow=
	cthis inventory_in
	jmp l5046
l5050:
	push 1
	call guinventory,blockout=
	push "null"
	call guinventory,sitemshow=
	localdef $2
	push $1
	cthis getanitem
	pop $2
	localint $3
	push $2
	spushs
	spop $a
	call [$a],getcx
	pop $3
	localint $4
	push $2
	spushs
	spop $a
	call [$a],getcy
	pop $4
	push 1
	popax
	sub 0,$a
	call guishowhintitem1,isplaying
	cmp0
	je l5052
	push 1
	popax
	sub 0,$a
	call guishowhintitem2,isplaying
	cmp0
	je l5054
	push $3
	push $4
	push 0
	call guishowhintitem1,_showhint
	jmp l5053
l5054:
	push $3
	push $4
	push 0
	call guishowhintitem2,_showhint
l5053:
	jmp l5051
l5052:
	push $3
	push $4
	push 0
	call guishowhintitem1,_showhint
l5051:
l5046:
	end method
	method showhintitemif
	localstring $1
	pop $1
	push "ma_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l5056
	push $1
	cthis showhintitem
l5056:
	end method
	method gui_toloupe
	localstring $1
	pop $1
	push $1
	spushs
	push "mtype"
	push "loupe"
	spop $a
	call [$a],var2
	push $1
	call grguiloupe,add
	call grguiloupe,sortimgs
	cthis gui_refreshloupe
	end method
	method gui_buttoninloupe
	localstring $1
	pop $1
	push A
	push "butisinloupe"
	push 1
	push "enabled"
	push 1
	cthis vars2
	end method
	method gui_removefromloupe
	localstring $1
	pop $1
	push $1
	call grguiloupe,remove
	cthis gui_refreshloupe
	end method
	method gui_inloupe
	localstring $1
	pop $1
	push $1
	call grguiloupe,contains
	cmp0
	jne l5058
	push $1
	spushs
	push "butisinloupe"
	spop $a
	call [$a],hasvar
	cmp0
	je l5059
	push $1
	spushs
	spop $a
	call [$a],enabled
	jmp l5061
l5059:
	push 0
	jmp l5061
l5060:
	push 1
l5061:
	jmp l5062
l5057:
	push 0
	jmp l5062
l5058:
	push 1
l5062:
	end method
	method gui_refreshloupe
	call gameapi,getgamename
	spushs
	push "guiloupe"
	spop $a
	call [$a],hasvar
	cmp0
	je l5064
	cthis loupe_visible
	jmp l5066
l5064:
	push 0
	jmp l5066
l5065:
	push 1
l5066:
	cmp0
	je l5067
	cthis hide_loupe
	cthis show_loupe
l5067:
	end method
	method subanalizeaninstr
	localstring $1
	localstring $2
	localint $3
	localint $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	localint $6
	push $1
	push "null"
	cmpjne
	pop $6
	localint $7
	localint $8
	push $5
	spushs
	push "-toloupe"
	cmpst
	jne l5069
	spop $a
	push $6
	cmp0
	je l5071
	push $1
	cthis gui_toloupe
l5071:
	jmp l5068
l5069:
	push "-loupeumask"
	cmpst
	jne l5072
	spop $a
	push $6
	cmp0
	je l5074
	push $1
	spushs
	spop $a
	call [$a],BanGui59
	push $1
	call grguiloupe,add
l5074:
	jmp l5068
l5072:
	push "-popz"
	cmpst
	jne l5075
	spop $a
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	pop $7
	add $4,1
	pop $4
	push $6
	cmp0
	je l5077
	push $1
	spushs
	push iPopupZ
	push $7
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setz
l5077:
	jmp l5068
l5075:
	push "-loupez"
	cmpst
	jne l5078
	spop $a
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	pop $7
	add $4,1
	pop $4
	push $6
	cmp0
	je l5080
	push $1
	spushs
	push iSzkielkoPodZ
	push $7
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setz
l5080:
	jmp l5068
l5078:
	spop $a
	sub $4,1
	pop $4
l5068:
	push $4
	end method
	method BanGui59
	push "mtype"
	push "umask"
	cthis var2
	new filter,ftumask
	push "startumask"
	push "BanGui60"
	cthis addmethod
	push "stopumask"
	push "BanGui61"
	cthis addmethod
	end method
	method BanGui60
	cthis getname
	call ftumask,link
	push "guiloupemask"
	call ftumask,umask
	end method
	method BanGui61
	call ftumask,removeallblend
	call ftumask,unlink
	end method
	method subanalizebut
	localstring $1
	localstring $2
	localint $3
	localint $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $5
	spushs
	push "-inloupe"
	cmpst
	jne l5082
	spop $a
	push $1
	spushs
	push 1
	spop $a
	call [$a],bshownonvis=
	push $1
	spushs
	push "butisinloupe"
	spop $a
	call [$a],var
	push $1
	spushs
	push "butisin"
	push "BanGui62"
	spop $a
	call [$a],addmethod
	localstring $6
	push $1
	spushs
	spop $a
	call [$a],getbutname
	pop $6
	push 4
	push 1
	call $6,getb
	clparent StringChecker,isdigit
	cmp0
	je l5088
	push 0
	push 4
	call $6,getb
	push "znak"
	cmpje
	cmp0
	je l5090
	push $1
	spushs
	push "moveon"
	push "BanGui63"
	spop $a
	call [$a],addmethod
	jmp l5089
l5090:
	push 0
	push 4
	call $6,getb
	push "k_ks"
	cmpje
	cmp0
	je l5094
	push $1
	spushs
	push "moveon"
	push "BanGui64"
	spop $a
	call [$a],addmethod
l5094:
l5089:
l5088:
	jmp l5081
l5082:
	push "-rotopck"
	cmpst
	jne l5097
	spop $a
	push $1
	cthis setasitemtopck
	jmp l5081
l5097:
	push "-topck"
	cmpst
	jne l5098
	spop $a
	push $1
	cthis setasitemtopck
	push $1
	spushs
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	spop $a
	call [$a],sitemtopck=
	add $4,1
	pop $4
	jmp l5081
l5098:
	push "-popup"
	cmpst
	jne l5099
	spop $a
	push "globalpopexit"
	push $1
	push "popexit"
	pop $b
	popax
	add $a,$b
	cthis copyanima
	push $1
	spushs
	spop $a
	call [$a],BanGui65
	jmp l5081
l5099:
	push "-hoenter"
	cmpst
	je l5112
	push "-hidehoenter"
	cmpst
	je l5112
	jmp l5111
l5112:
	spop $a
	localdef $6
	push "anhoenter_"
	push $1
	pop $b
	popax
	add $a,$b
	pop $6
	push $6
	spushs
	spop $e
	new anima,[$e]
	localreal $7
	push $1
	spushs
	spop $a
	call [$a],getw
	spushs
	spop $h
	call $h,to_r
	call anhoenter,getw
	spushs
	spop $h
	call $h,to_r
	pop $b
	popax
	div $a,$b
	psax
	pop $7
	push $7
	push 1.0
	cmpjl
	cmp0
	je l5114
	push $6
	spushs
	push "scripts/sys_gui/hoenter.pyz"
	push $7
	push $7
	spop $a
	call [$a],loadzoom
	jmp l5113
l5114:
	push $6
	spushs
	push "scripts/sys_gui/hoenter.pyz"
	spop $a
	call [$a],load
l5113:
	push $6
	spushs
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	spop $a
	call [$a],setz
	push $6
	spushs
	push $1
	spushs
	spop $a
	call [$a],getcx
	push $1
	spushs
	spop $a
	call [$a],getey
	spop $a
	call [$a],setpos
	push $6
	spushs
	push 1
	spop $a
	call [$a],setdrawmode
	push $5
	push "-hoenter"
	cmpje
	cmp0
	je l5116
	push $6
	spushs
	push 0
	spop $a
	call [$a],play
	jmp l5115
l5116:
	push $6
	spushs
	spop $a
	call [$a],hide
l5115:
	add $4,1
	pop $4
	jmp l5081
l5111:
	spop $a
l5081:
	push $4
	end method
	method BanGui62
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	call guiloupe,isvisible
	cmp0
	je l5084
	push $1
	push $2
	push 0
	push balpha
	push 1
	popax
	sub 0,$a
	cmpje
	cmp0
	je l5086
	push $4
	jmp l5085
l5086:
	push balpha
l5085:
	cthis isin
	jmp l5083
l5084:
	push 0
l5083:
	end method
	method BanGui63
	push "e1_00znakcomment"
	call clsave,bgo
	cmp0
	je l5092
	push "T16watchglass"
	push 280
	push 10
	cthis tutshowe
	cthis getname
	push "dd"
	cthis tutpoint
l5092:
	clparent classadvbut,moveon
	end method
	method BanGui64
	push "e1_00znakcomment"
	call clsave,bgo
	cmp0
	je l5096
	push "T16watchglass"
	push 280
	push 10
	cthis tutshowe
	cthis getname
	push "dd"
	cthis tutpoint
l5096:
	clparent classadvbut,moveon
	end method
	method BanGui65
	push "loupe"
	pop smousecursor
	push 1
	pop bshownonvis
	push A
	push "state"
	push "hidden"
	push "spopexit"
	cthis getname
	push "popexit"
	pop $b
	popax
	add $a,$b
	push "spopwnd"
	cthis getname
	push "_window"
	pop $b
	popax
	add $a,$b
	cthis vars2
	cthis hide
	push spopwnd
	spushs
	spop $a
	call [$a],hide
	push spopwnd
	spushs
	push iPopupZ
	spop $a
	call [$a],setz
	push spopexit
	spushs
	push iPopupZ
	push 100
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setz
	push "butisin"
	push "BanGui66"
	cthis addmethod
	push "moveon"
	push "BanGui67"
	cthis addmethod
	push "moveoff"
	push "BanGui68"
	cthis addmethod
	push "clickon"
	push "BanGui69"
	cthis addmethod
	push "hidepopup"
	push "BanGui70"
	cthis addmethod
	push "showpopup"
	push "BanGui71"
	cthis addmethod
	end method
	method BanGui66
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push state
	push "hidden"
	cmpje
	cmp0
	je l5101
	push $1
	push $2
	push 0
	push $4
	cthis isin
	jmp l5100
l5101:
	push spopexit
	spushs
	push $1
	push $2
	push 1
	push 0
	spop $a
	call [$a],isin
	cmp0
	jne l5103
	push spopwnd
	spushs
	push $1
	push $2
	push 1
	push 0
	spop $a
	call [$a],isin
	neg
	jmp l5104
l5102:
	push 0
	jmp l5104
l5103:
	push 1
l5104:
l5100:
	end method
	method BanGui67
	push state
	push "shown"
	cmpje
	cmp0
	je l5106
	push spopexit
	spushs
	push 0
	push 1
	spop $a
	call [$a],setframe
	jmp l5105
l5106:
	push smousecursor
	call advmouse,set
l5105:
	end method
	method BanGui68
	call advmouse,setstd
	push state
	push "shown"
	cmpje
	cmp0
	je l5108
	push spopexit
	spushs
	push 0
	push 0
	spop $a
	call [$a],setframe
l5108:
	end method
	method BanGui69
	push state
	push "shown"
	cmpje
	cmp0
	je l5110
	push "beh_"
	cthis getbutname
	pop $b
	popax
	add $a,$b
	push "_QUIT"
	pop $b
	popax
	add $a,$b
	cthis playbehif
	popax
l5110:
	end method
	method BanGui70
	push spopexit
	spushs
	spop $a
	call [$a],hide
	push spopwnd
	spushs
	spop $a
	call [$a],hide
	push "hidden"
	pop state
	end method
	method BanGui71
	push spopexit
	spushs
	spop $a
	call [$a],show
	push spopwnd
	spushs
	spop $a
	call [$a],show
	push spopexit
	spushs
	push spopwnd
	spushs
	spop $a
	call [$a],getex
	push 2
	pop $b
	popax
	sub $a,$b
	push spopwnd
	spushs
	spop $a
	call [$a],getpy
	spop $a
	call [$a],setpos
	call imglastpopup,hide
	push "shown"
	pop state
	end method
	method setasitemtopck
	localstring $1
	pop $1
	push $1
	push iRotoIleRot
	push iRotoIleObrotow
	clparent GuiItem,setasrototaker
	push $1
	spushs
	push A
	push "styperoto"
	push "init"
	push "sbehstate"
	push "behstate_playbeh"
	push "sitemtopck"
	push "null"
	push "sitemtojoinobj"
	push "null"
	spop $a
	call [$a],vars2
	push $1
	spushs
	push "rototaker_endroto"
	push "BanGui72"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "clickpopup"
	push "BanGui73"
	spop $a
	call [$a],addmethod
	cthis isadvclass
	cmp0
	je l5142
	push $1
	spushs
	push "clickon"
	push "BanGui74"
	spop $a
	call [$a],addmethod
	jmp l5141
l5142:
	push $1
	spushs
	spop $a
	call [$a],BanGui75
	push $1
	call butgame,add
l5141:
	end method
	method BanGui72
	push styperoto
	push "startroto"
	cmpje
	cmp0
	je l5118
	cthis isadvclass
	cmp0
	je l5120
	push sbehstate
	push "behstate_nobeh"
	cmpje
	cmp0
	je l5122
	cthis _item_gotopck
	jmp l5121
l5122:
	localdef $1
	push "beh_"
	cthis getbutname
	pop $b
	popax
	add $a,$b
	push "_TAKEN"
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	cthis behexist
	cmp0
	je l5124
	push $1
	cthis playbeh
	jmp l5123
l5124:
	push sgmstate
	push "state_itemgotocenter"
	cmpje
	cmp0
	je l5126
	push "state_itemgotopck"
	cthis advsetstate
l5126:
	cthis _item_gotopck
l5123:
l5121:
	jmp l5119
l5120:
	cthis _item_gotopck
l5119:
	jmp l5117
l5118:
	push styperoto
	push "endroto"
	cmpje
	cmp0
	je l5128
	cthis freeactitem
	push "inpck"
	pop styperoto
	cthis hide
	cthis isadvclass
	cmp0
	je l5130
	push sbehstate
	push "behstate_nobeh"
	cmpjne
	cmp0
	je l5132
	cthis advinitial
	localdef $2
	cthis getbutname
	pop $2
	localdef $1
	push "beh_"
	push $2
	pop $b
	popax
	add $a,$b
	push "_INPCK"
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	cthis behexist
	cmp0
	je l5134
	push $1
	cthis playbeh
	jmp l5133
l5134:
	push "beh_"
	cthis getname
	pop $b
	popax
	add $a,$b
	push "_INPCK"
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	cthis behexist
	cmp0
	je l5136
	push $1
	cthis playbeh
l5136:
l5133:
l5132:
	push sitemtopck
	push "null"
	cmpjne
	cmp0
	je l5138
	push sitemtopck
	cthis addtopck
l5138:
	cthis getname
	call grgotopckstack,remove
	jmp l5129
l5130:
	cthis advinitial
	push GAME
	spushs
	cthis getname
	push "_INPCK"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	spop $a
	call [$a],[$d]
l5129:
	jmp l5127
l5128:
	cthis checkjoinitems
	cmp0
	je l5140
	push "init"
	pop styperoto
l5140:
l5127:
l5117:
	end method
	method BanGui73
	push sitemtopck
	cthis hide_itempopup
	cthis getname
	cthis item_gotocenterobj_popup
	push 1
	pop gui_skipclick
	cthis advbutrefresh
	end method
	method BanGui74
	push styperoto
	push "init"
	cmpje
	cmp0
	je l5144
	localdef $1
	push "beh_"
	cthis getbutname
	pop $b
	popax
	add $a,$b
	push "_TAKE"
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	cthis behexist
	cmp0
	je l5146
	push "behstate_playbeh"
	pop sbehstate
	push $1
	cthis playbeh
	jmp l5145
l5146:
	push "behstate_nobeh"
	pop sbehstate
	push sitemtopck
	push "null"
	cmpjne
	cmp0
	je l5148
	push sitemtopck
	cthis saveitemtopck
l5148:
	cthis _item_gotocenter
l5145:
	jmp l5143
l5144:
	push styperoto
	push "pre_readytogo"
	cmpje
	cmp0
	je l5150
	jmp l5149
l5150:
	push styperoto
	push "readytogo"
	cmpje
	cmp0
	je l5152
	cthis clickpopup
	jmp l5151
l5152:
	push styperoto
	push "inpck"
	cmpje
	cmp0
	je l5154
l5154:
l5151:
l5149:
l5143:
	end method
	method BanGui75
	push A
	push "gettyp"
	push "itemtotake"
	push "disable"
	push 0
	push "bignoralpha"
	push 0
	cthis vars2
	cthis Button_isinalpha
	push "isbutin"
	push "BanGui76"
	cthis addmethod
	push "butmoveon"
	push "BanGui77"
	cthis addmethod
	cthis Button_moveoffms
	push "butclick"
	push "BanGui78"
	cthis addmethod
	end method
	method BanGui76
	localdef $1
	localdef $2
	pop $2
	pop $1
	push disable
	neg
	cmp0
	je l5155
	push $1
	push $2
	push 1
	push bignoralpha
	cthis isin
	jmp l5157
l5155:
	push 0
	jmp l5157
l5156:
	push 1
l5157:
	end method
	method BanGui77
	cthis advstdstate
	cmp0
	je l5159
	push "take"
	call advmouse,set
l5159:
	end method
	method BanGui78
	cthis advstdstate
	neg
	cmp0
	je l5161
	ret
l5161:
	push styperoto
	push "readytogo"
	cmpje
	cmp0
	je l5163
	cthis clickpopup
	jmp l5162
l5163:
	push styperoto
	push "pre_readytogo"
	cmpje
	cmp0
	je l5165
	jmp l5164
l5165:
	push GAME
	spushs
	cthis getname
	push "_TAKE"
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],hasmet
	cmp0
	je l5167
	push GAME
	spushs
	cthis getname
	push "_TAKE"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	jmp l5166
l5167:
	cthis item_gotocenter
l5166:
l5164:
l5162:
	end method
	method setactitem
	localstring $1
	pop $1
	push $1
	pop _clicked_guiitem
	end method
	method getactitem
	push _clicked_guiitem
	end method
	method freeactitem
	push "null"
	cthis setactitem
	end method
	method item_gotocenter
	cthis advmslock
	push "state_itemgotocenter"
	cthis advsetstate
	cthis _item_gotocenter
	end method
	method getitempopexit
	localstring $1
	pop $1
	push "anpopup_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_exit"
	pop $b
	popax
	add $a,$b
	end method
	method popitem_gotocenter
	localstring $1
	pop $1
	push $1
	cthis getclickedbut
	cthis popitem_gotocenterobj
	end method
	method popitem_gotocenterobj
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $2
	push "null"
	cmpjne
	cmp0
	je l5169
	push $2
	spushs
	push "pre_readytogo"
	spop $a
	call [$a],styperoto=
	push $2
	spushs
	push $1
	spop $a
	call [$a],sitemtopck=
	push $2
	spushs
	push "rotocenter"
	push 0
	spop $a
	call [$a],setframe
	push $1
	push $2
	cthis show_itempopup
	call advmouse,setstd
	localdef $3
	push $1
	cthis getitempopexit
	pop $3
	push $3
	spushs
	push "sanitemtopck"
	push $2
	spop $a
	call [$a],var2
	push $3
	spushs
	push "clickexit"
	push "BanGui79"
	spop $a
	call [$a],addmethod
l5169:
	end method
	method BanGui79
	cthis isadvclass
	cmp0
	je l5171
	push sanitemtopck
	spushs
	spop $a
	call [$a],clickon
	jmp l5170
l5171:
	push sanitemtopck
	spushs
	spop $a
	call [$a],butclick
l5170:
	end method
	method item_gotocenterobj
	localstring $1
	pop $1
	cthis advmslock
	push "state_itemgotocenter"
	cthis advsetstate
	push $1
	cthis _obj_gotocenter
	call sfxopenpopup,play
	end method
	method item_gotocenterobj_popup
	localstring $1
	pop $1
	cthis advmslock
	push "state_itemgotocenter"
	cthis advsetstate
	push $1
	cthis _obj_gotocenter_popup
	call sfxclosepopup,play
	end method
	method item_takecenter
	localstring $1
	pop $1
	push $1
	cthis saveitemtopck
	cthis item_gotocenter
	call sfxopenpopup,play
	end method
	method saveitemtostack
	localstring $1
	pop $1
	localdef $2
	push "ile_item_"
	push $1
	pop $b
	popax
	add $a,$b
	pop $2
	localint $3
	push $2
	call clsave,get
	pop $3
	push $3
	push 0
	cmpja
	cmp0
	je l5173
	push $1
	push "_"
	pop $b
	popax
	add $a,$b
	push $3
	pop $b
	popax
	add $a,$b
	cthis saveitemoutpck
l5173:
	add $3,1
	pop $3
	push $2
	push $3
	call clsave,set
	push $1
	push "_"
	pop $b
	popax
	add $a,$b
	push $3
	pop $b
	popax
	add $a,$b
	cthis saveitemtopck
	end method
	method stackitemobj_topck
	localstring $1
	localstring $2
	pop $2
	pop $1
	push "takenan_"
	push $2
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l5175
	ret
l5175:
	push $1
	cthis saveitemtostack
	push "takenan_"
	push $2
	pop $b
	popax
	add $a,$b
	call clsave,bset
	localint $3
	push "ile_item_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,get
	pop $3
	push $3
	push 1
	cmpje
	cmp0
	je l5177
	push $1
	push "_1"
	pop $b
	popax
	add $a,$b
	push $2
	cthis popitem_gotocenterobj
	jmp l5176
l5177:
	push $1
	push "_"
	pop $b
	popax
	add $a,$b
	push $3
	pop $b
	popax
	add $a,$b
	push $2
	cthis item_takecenterobj
l5176:
	end method
	method stackitem_topck
	localstring $1
	pop $1
	push $1
	cthis getclickedbut
	cthis stackitemobj_topck
	end method
	method additemtostack
	localstring $1
	pop $1
	localint $2
	push "ile_item_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,get
	pop $2
	push $2
	push 1
	cmpja
	cmp0
	je l5179
	push $1
	push "_"
	pop $b
	popax
	add $a,$b
	push $2
	push 1
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	add $a,$b
	cthis removefrompck
l5179:
	push $1
	push "_"
	pop $b
	popax
	add $a,$b
	push $2
	pop $b
	popax
	add $a,$b
	cthis addtopck
	end method
	method item_takecenterobj
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	cthis saveitemtopck
	push $2
	cthis item_gotocenterobj
	call sfxopenpopup,play
	end method
	method item_takecenterobj_popup
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	cthis saveitemtopck
	push $2
	cthis item_gotocenterobj_popup
	end method
	method getclickedbut
	cthis isadvclass
	cmp0
	je l5181
	call grbuts,getsfound
	jmp l5180
l5181:
	call butgame,sclicked
l5180:
	end method
	method _item_gotocenter
	localdef $1
	cthis getclickedbut
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l5183
	push $1
	cthis _obj_gotocenter
l5183:
	end method
	method _obj_gotocenter
	localstring $1
	pop $1
	push sgmstate
	push "state_itemgotocenter"
	cmpje
	cmp0
	je l5185
	push $1
	spushs
	push "behstate_playbeh"
	spop $a
	call [$a],sbehstate=
	push $1
	cthis setactitem
l5185:
	push $1
	call grguiloupe,contains
	cmp0
	je l5187
	push $1
	spushs
	spop $a
	call [$a],show
	push $1
	cthis remove_from_loupe
l5187:
	push $1
	spushs
	push "rotostart"
	push 0
	spop $a
	call [$a],setframe
	push $1
	spushs
	push "startroto"
	spop $a
	call [$a],styperoto=
	push $1
	spushs
	push iTakeZ
	spop $a
	call [$a],setz
	call sfxwysun2,play
	push $1
	spushs
	cthis getappcenter
	push "rotocenter"
	spop $a
	call [$a],rototaker_startact
	end method
	method _obj_gotocenter_popup
	localstring $1
	pop $1
	push sgmstate
	push "state_itemgotocenter"
	cmpje
	cmp0
	je l5189
	push $1
	spushs
	push "behstate_playbeh"
	spop $a
	call [$a],sbehstate=
	push $1
	cthis setactitem
l5189:
	push $1
	call grguiloupe,contains
	cmp0
	je l5191
	push $1
	spushs
	spop $a
	call [$a],show
	push $1
	cthis remove_from_loupe
l5191:
	push $1
	spushs
	push "rotocenter"
	push 0
	spop $a
	call [$a],setframe
	push $1
	spushs
	push "startroto"
	spop $a
	call [$a],styperoto=
	push $1
	spushs
	push iTakeZ
	spop $a
	call [$a],setz
	call sfxwysun2,play
	push $1
	spushs
	cthis getappcenter
	push "rotocenter"
	spop $a
	call [$a],rototaker_startact
	end method
	method item_gotopck
	localdef $1
	cthis getactitem
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l5193
	push $1
	spushs
	spop $a
	call [$a],_item_gotopck2
l5193:
	end method
	method _item_gotopck2
	cthis gettyp
	push "pckitem"
	cmpje
	cmp0
	je l5195
	cthis _pckitem_gotopck
	jmp l5194
l5195:
	cthis _item_gotopck
l5194:
	end method
	method _item_gotopck
	cthis isretitemstate
	cmp0
	je l5197
	cthis advmslock
	push "state_itemgotopck"
	cthis advsetstate
	jmp l5196
l5197:
	cthis getname
	call grgotopckstack,addonce
l5196:
	push bHOInventory
	neg
	cmp0
	je l5199
	cthis inventory_playing
	cmp0
	jne l5202
	cthis inventory_hidden
	jmp l5203
l5201:
	push 0
	jmp l5203
l5202:
	push 1
l5203:
	jmp l5204
l5199:
	push 0
	jmp l5204
l5200:
	push 1
l5204:
	cmp0
	je l5205
	cthis inventory_in
	jmp l5198
l5205:
	push bHOInventory
	cmp0
	je l5207
	localdef $1
	push "guihoinventory"
	pop $1
	jmp l5206
l5207:
	localdef $1
	cthis lastemptyslot
	pop $1
l5206:
	push "endroto"
	pop styperoto
	localdef $2
	cthis actionname
	pop $2
	push "rotopck"
	push 0
	cthis setframe
	localdef $3
	cthis getw
	pop $3
	localdef $4
	cthis geth
	pop $4
	push $2
	push 0
	cthis setframe
	call sfxwysun2,play
	push bHOInventory
	neg
	cmp0
	je l5209
	call grguitemslots,last
	spushs
	spop $a
	call [$a],getw
	popax
	sub 0,$a
	call grguitemslots,size
	pop $b
	popax
	mul $a,$b
	cthis moveslots
	localdef $1
	cthis lastemptyslot
	pop $1
l5209:
	push $1
	spushs
	spop $a
	call [$a],getcx
	push $1
	spushs
	spop $a
	call [$a],getcy
	cthis getw
	cthis geth
	push $3
	push $4
	cthis rototaker_startwh
l5198:
	end method
	method save_join_items
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	cthis saveitemtopck
	push $1
	cthis removefrompck
	push $2
	cthis removefrompck
	push $3
	cthis saveitemtopck
	end method
	method join_items
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $3
	push $4
	cthis save_join_items
	push $2
	push $3
	cthis getanitem
	push $4
	push $5
	cthis join_itemsobj
	end method
	method join_pckitems
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $1
	cthis getanitem
	push $2
	push $3
	push $4
	cthis join_items
	end method
	method join_itemsobj
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $4
	spushs
	cthis getappcenter
	spop $a
	call [$a],ansetbpos
	push "state_joinitems1"
	cthis advsetstate
	push $1
	spushs
	push "mystate"
	spop $a
	call [$a],hasvar
	cmp0
	je l5211
	push $1
	spushs
	push "joinitems"
	spop $a
	call [$a],mystate=
	push $1
	spushs
	push $2
	spop $a
	call [$a],sitemtojoinobj=
	push $1
	spushs
	cthis getappcenter
	push 1
	spop $a
	call [$a],rototaker_startact
	jmp l5210
l5211:
	push $1
	spushs
	push "joinitems"
	spop $a
	call [$a],styperoto=
	push $1
	spushs
	push $2
	spop $a
	call [$a],sitemtojoinobj=
	push $1
	spushs
	cthis getappcenter
	push "rotocenter"
	spop $a
	call [$a],rototaker_startact
l5210:
	push $1
	spushs
	push iTakeZ
	spop $a
	call [$a],setz
	push $1
	spushs
	spop $a
	call [$a],show
	push $2
	spushs
	push "joinitems"
	spop $a
	call [$a],mystate=
	push $2
	spushs
	spop $a
	call [$a],show
	push $2
	spushs
	push iTakeZ
	spop $a
	call [$a],setz
	push $2
	spushs
	push 1
	push 0
	spop $a
	call [$a],setframe
	push $2
	spushs
	push $4
	spop $a
	call [$a],sitemtojoinobjout=
	push $2
	spushs
	push $1
	spop $a
	call [$a],sitemtojoinobj=
	push $2
	spushs
	push $3
	spop $a
	call [$a],sitemtojoinout=
	push $2
	spushs
	cthis getappcenter
	push 1
	spop $a
	call [$a],rototaker_startact
	end method
	method checkjoinitems
	push sgmstate
	push "state_joinitems1"
	cmpje
	cmp0
	je l5213
	push "state_joinitems2"
	pop sgmstate
	push 1
	jmp l5212
l5213:
	push sgmstate
	push "state_joinitems2"
	cmpje
	cmp0
	je l5215
	localstring $1
	localstring $2
	push "myslot"
	cthis hasvar
	cmp0
	je l5217
	push sitemtojoinobjout
	push "null"
	cmpjne
	jmp l5219
l5217:
	push 0
	jmp l5219
l5218:
	push 1
l5219:
	cmp0
	je l5220
	cthis getname
	pop $2
	jmp l5216
l5220:
	push sitemtojoinobj
	pop $2
l5216:
	push sitemtojoinobj
	spushs
	spop $a
	call [$a],hide
	cthis hide
	push GAME
	spushs
	push $2
	spushs
	spop $a
	call [$a],sitemtojoinout
	push $2
	spushs
	spop $a
	call [$a],sitemtojoinobjout
	spop $a
	call [$a],popitem_gotocenterobj
	push $2
	spushs
	push "null"
	spop $a
	call [$a],sitemtojoinobjout=
	push $2
	spushs
	push "null"
	spop $a
	call [$a],sitemtojoinobj=
	push $2
	spushs
	push "null"
	spop $a
	call [$a],sitemtojoinout=
	push 1
	jmp l5214
l5215:
	push 0
l5214:
l5212:
	end method
	method item_returntopck
	localstring $1
	pop $1
	push $1
	cthis getanitem
	spushs
	spop $a
	call [$a],_pckitem_gotopck
	end method
	method _pckitem_gotopck
	cthis isretitemstate
	cmp0
	je l5222
	cthis advmslock
	push "state_pckitemgotopck"
	cthis advsetstate
	jmp l5221
l5222:
	cthis getname
	call grgotopckstack,addonce
l5221:
	cthis inventory_playing
	cmp0
	jne l5225
	cthis inventory_hidden
	jmp l5226
l5224:
	push 0
	jmp l5226
l5225:
	push 1
l5226:
	cmp0
	je l5227
	cthis inventory_in
	jmp l5223
l5227:
	push "gotopck"
	pop mystate
	call sfxretitem,play
	cthis saveitemtolastslot
	cthis getname
	call grguitems,addonce
	push 0
	push 0
	cthis setframe
	localdef $1
	cthis getw
	pop $1
	localdef $2
	cthis geth
	pop $2
	push 1
	push 0
	cthis setframe
	push myslot
	spushs
	spop $a
	call [$a],getcx
	push myslot
	spushs
	spop $a
	call [$a],getcy
	cthis getw
	cthis geth
	push $1
	push $2
	cthis rototaker_startwh
l5223:
	end method
	method saveitemtolastslot
	cthis lastemptyslot
	cthis saveitemtoslot
	end method
	method saveitemtoslot
	localstring $1
	pop $1
	push $1
	push "null"
	cmpje
	cmp0
	je l5229
	push "sslot = null!"
	spushs
	spop $h
	call $h,print
	jmp l5228
l5229:
	push $1
	pop myslot
	push myslot
	spushs
	cthis getname
	spop $a
	call [$a],myitem=
l5228:
	end method
	method pckitem_movon
	call mouse,getpos
	push "BanGui80"
	call grguitems,isinfunc
	end method
	method BanGui80
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	cthis withincut
	cmp0
	je l5230
	push $1
	push $2
	push 1
	push 1
	cthis isin
	cmp0
	jne l5233
	push $1
	cthis getcx
	pop $b
	popax
	sub $a,$b
	push $2
	cthis getcy
	pop $b
	popax
	sub $a,$b
	call $1,length
	push 30
	cmpjle
	jmp l5234
l5232:
	push 0
	jmp l5234
l5233:
	push 1
l5234:
	jmp l5235
l5230:
	push 0
	jmp l5235
l5231:
	push 1
l5235:
	end method
	method guimov_GET
	cthis advstdstate
	cmp0
	je l5237
	cthis advgetlock
	neg
	cmp0
	je l5237
	cthis pckitem_movon
	cmp0
	je l5237
	cthis loupe_visible
	neg
	jmp l5239
l5237:
	push 0
	jmp l5239
l5238:
	push 1
l5239:
	cmp0
	je l5240
	localdef $1
	call grguitems,getsfound
	pop $1
	push $1
	spushs
	spop $a
	call [$a],mystate
	push "std"
	cmpjne
	cmp0
	je l5242
	ret
l5242:
	call txtpckitem,hide
	call txtpckitemshadow,hide
	call sfxpopitem,play
	push $1
	call grguitems,remove
	push $1
	cthis freeslot
	push $1
	spushs
	push "null"
	spop $a
	call [$a],myslot=
	push $1
	spushs
	push iTakeZ
	push 1
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setz
	push $1
	spushs
	push 1
	spop $a
	call [$a],play
	push $1
	spushs
	spop $a
	call [$a],anclipscreen
	push $1
	spushs
	push "get"
	spop $a
	call [$a],mystate=
	push $1
	cthis setactitem
	push $1
	cthis mssetobj
	cthis isadvclass
	neg
	cmp0
	je l5244
	push "getitem"
	cthis advsetstate
l5244:
l5240:
	end method
	method rand_wrong_text
	call mouse,getpos
	push 1
	push 1
	call guinventory,isin
	cmp0
	je l5246
	ret
l5246:
	localdef $1
	push "snd_wrong_use_"
	push 3
	spushs
	spop $h
	call $h,rand
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	cthis cbplay
	call imgnextdialog,hide
	end method
	method guimov_PUT
	push 1
	pop gui_skipclick
	localdef $1
	cthis getfree
	pop $1
	push $1
	spushs
	push iTakeZ
	spop $a
	call [$a],setz
	cthis advgetlock
	neg
	cmp0
	je l5248
	cthis isadvclass
	cmp0
	je l5250
	localdef $2
	cthis advfocusedbut
	pop $2
	localdef $3
	push "beh_USE_"
	push $1
	spushs
	spop $a
	call [$a],getbutname
	pop $b
	popax
	add $a,$b
	pop $3
	push $2
	push "null"
	cmpjne
	cmp0
	je l5252
	push $3
	push "_ON_"
	pop $b
	popax
	add $a,$b
	push $2
	spushs
	spop $a
	call [$a],getbutname
	pop $b
	popax
	add $a,$b
	cthis playbehif
	jmp l5254
l5252:
	push 0
	jmp l5254
l5253:
	push 1
l5254:
	cmp0
	je l5255
	jmp l5251
l5255:
	push $3
	cthis playbehif
	neg
	cmp0
	je l5257
	push $1
	spushs
	push "behstate_nobeh"
	spop $a
	call [$a],sbehstate=
	cthis freeactitem
	cthis rand_wrong_text
	push $1
	spushs
	spop $a
	call [$a],_pckitem_gotopck
l5257:
l5251:
	jmp l5249
l5250:
	localdef $4
	push "USE_"
	push $1
	spushs
	spop $a
	call [$a],getbutname
	pop $b
	popax
	add $a,$b
	pop $4
	push GAME
	spushs
	push $4
	spop $a
	call [$a],hasmet
	cmp0
	je l5259
	cthis advsetstdstate
	push $1
	cthis setactitem
	push GAME
	spushs
	push $4
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	cthis cisplaying
	neg
	cmp0
	je l5261
	push sgmstate
	push "state_pckitemgotopck"
	cmpje
	jmp l5263
l5261:
	push 0
	jmp l5263
l5262:
	push 1
l5263:
	cmp0
	je l5264
	cthis rand_wrong_text
l5264:
	jmp l5258
l5259:
	cthis advsetstdstate
	push $1
	spushs
	spop $a
	call [$a],_pckitem_gotopck
	cthis rand_wrong_text
l5258:
l5249:
l5248:
	end method
	method getanitem
	localstring $1
	pop $1
	push sanitemprefix
	push $1
	pop $b
	popax
	add $a,$b
	end method
	method addtopck
	localstring $1
	pop $1
	call gameapi,getgamename
	spushs
	push $1
	spop $a
	call [$a],_addtopck
	end method
	method isaniteminpck
	localstring $1
	pop $1
	call gameapi,getgamename
	spushs
	push $1
	cthis getanitem
	spop $a
	call [$a],hasvar
	end method
	method isiteminpck
	localstring $1
	pop $1
	push "ma_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,bis
	end method
	method _addtopck
	localstring $1
	pop $1
	localdef $2
	push $1
	cthis getanitem
	pop $2
	push $2
	call grguitems,contains
	neg
	cmp0
	je l5266
	push bHOInventory
	neg
	cmp0
	je l5268
	push $2
	push "$scripts/adv_items/"
	push $1
	pop $b
	popax
	add $a,$b
	push ".pyz"
	pop $b
	popax
	add $a,$b
	push iTakeZ
	cthis newanima
	push $2
	push iRotoIleRot
	push iRotoIleObrotow
	clparent GuiItem,setasrototaker
	push $2
	spushs
	push A
	push "getbutname"
	push $1
	push "myslot"
	push "null"
	push "gettyp"
	push "pckitem"
	push "sbehstate"
	push "behstate_nobeh"
	push "mystate"
	push "std"
	push "sitemtojoinobj"
	push "null"
	push "sitemtojoinout"
	push "null"
	push "sitemtojoinobjout"
	push "null"
	spop $a
	call [$a],vars2
	push $2
	spushs
	spop $a
	call [$a],saveitemtolastslot
	push $2
	spushs
	push "rototaker_endroto"
	push "BanGui81"
	spop $a
	call [$a],addmethod
	push $2
	spushs
	spop $a
	call [$a],setposonmyslot
	push $2
	call grguitems,add
l5268:
l5266:
	push $1
	cthis saveitemtopck
	end method
	method BanGui81
	push "std"
	pop mystate
	cthis checkjoinitems
	cmp0
	je l5270
	jmp l5269
l5270:
	push sgmstate
	push "state_pckitemgotopck"
	cmpje
	cmp0
	jne l5273
	push sbehstate
	push "behstate_nobeh"
	cmpje
	jmp l5274
l5272:
	push 0
	jmp l5274
l5273:
	push 1
l5274:
	cmp0
	je l5275
	cthis getname
	call grgotopckstack,remove
	cthis freeactitem
	cthis setposonmyslot
	push sgmstate
	push "state_pckitemgotopck"
	cmpje
	cmp0
	je l5277
	cthis advinitial
l5277:
l5275:
l5269:
	end method
	method setposonmyslot
	push myslot
	push "null"
	cmpje
	cmp0
	je l5279
	ret
l5279:
	push myslot
	spushs
	spop $a
	call [$a],getcx
	push myslot
	spushs
	spop $a
	call [$a],getcy
	cthis setpos
	cthis cliptoguislot
	push 0
	cthis play
	end method
	method saveitemtopck
	localstring $1
	pop $1
	push "ma_"
	push $1
	pop $b
	popax
	add $a,$b
	push 1
	call clsave,set
	push "taken_"
	push $1
	pop $b
	popax
	add $a,$b
	push 1
	call clsave,set
	push $1
	call grguipck,addonce
	end method
	method saveitemoutpck
	localstring $1
	pop $1
	push $1
	call grguipck,remove
	push "ma_"
	push $1
	pop $b
	popax
	add $a,$b
	push 0
	call clsave,set
	end method
	method isretitemstate
	push sgmstate
	push "state_pckitemgotopck"
	cmpje
	cmp0
	jne l5281
	push sgmstate
	push "state_itemgotopck"
	cmpje
	jmp l5282
l5280:
	push 0
	jmp l5282
l5281:
	push 1
l5282:
	end method
	method removefrompck
	localstring $1
	pop $1
	push $1
	push 0
	cthis _removefrompck
	end method
	method _removefrompck
	localstring $1
	localint $2
	pop $2
	pop $1
	localdef $3
	push sanitemprefix
	push $1
	pop $b
	popax
	add $a,$b
	pop $3
	push bHOInventory
	neg
	cmp0
	je l5284
	push GAME
	spushs
	push $3
	spop $a
	call [$a],hasvar
	jmp l5286
l5284:
	push 0
	jmp l5286
l5285:
	push 1
l5286:
	cmp0
	je l5287
	localdef $4
	cthis getactitem
	pop $4
	push $3
	push $4
	cmpje
	cmp0
	je l5289
	cthis freeactitem
l5289:
	push $3
	cthis freeslot
	cthis findemptyslotid
	cthis sortslots
	push $2
	cmp0
	je l5291
	push GAME
	spushs
	push $3
	spop $a
	call [$a],deletegmobj
	push $3
	call butgame,removebut
	jmp l5290
l5291:
	push $3
	spushs
	spop $a
	call [$a],anhide
l5290:
l5287:
	push $3
	call grguitems,remove
	push $1
	cthis saveitemoutpck
	end method
	method freeslot
	localstring $1
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l5293
	push $1
	spushs
	spop $a
	call [$a],myslot
	push "null"
	cmpjne
	cmp0
	je l5293
	push $1
	spushs
	spop $a
	call [$a],myslot
	spushs
	spop $a
	call [$a],myitem
	push $1
	cmpje
	jmp l5295
l5293:
	push 0
	jmp l5295
l5294:
	push 1
l5295:
	cmp0
	je l5296
	localdef $2
	push $1
	spushs
	spop $a
	call [$a],myslot
	pop $2
	push $2
	spushs
	push "null"
	spop $a
	call [$a],myitem=
	push $1
	spushs
	push "null"
	spop $a
	call [$a],myslot=
l5296:
	end method
	method findemptyslotid
	localint $1
	push 0
	pop $1
l5297:
	push $1
	call grguitemslots,size
	cmpjl
	cmp0
	je l5298
	jmp l5300
l5299:
	add $1,1
	pop $1
	jmp l5297
l5300:
	localdef $2
	push $1
	call grguitemslots,get
	pop $2
	push $2
	spushs
	spop $a
	call [$a],myitem
	push "null"
	cmpje
	cmp0
	je l5302
	push $1
	ret
l5302:
	jmp l5299
l5298:
	push 0
	ret
	end method
	method sortslots
	localint $1
	pop $1
l5303:
	push $1
	call grguitemslots,size
	push 1
	pop $b
	popax
	sub $a,$b
	cmpjl
	cmp0
	je l5304
	localstring $2
	push $1
	call grguitemslots,get
	pop $2
	localstring $3
	push $1
	push 1
	pop $b
	popax
	add $a,$b
	call grguitemslots,get
	pop $3
	localdef $4
	push $3
	spushs
	spop $a
	call [$a],myitem
	pop $4
	push $2
	spushs
	push $4
	spop $a
	call [$a],myitem=
	push $4
	push "null"
	cmpjne
	cmp0
	je l5306
	push $4
	spushs
	push $2
	spop $a
	call [$a],myslot=
	push $4
	spushs
	spop $a
	call [$a],setposonmyslot
l5306:
	add $1,1
	pop $1
	jmp l5303
l5304:
	push $1
	call grguitemslots,get
	spushs
	push "null"
	spop $a
	call [$a],myitem=
	end method
	method additemslot
	localdef $1
	call grguitemslots,size
	pop $1
	localdef $2
	push "guitemslot"
	push $1
	pop $b
	popax
	add $a,$b
	pop $2
	push "guitemslot"
	push $2
	cthis copyanima
	push $2
	spushs
	spop $a
	call [$a],setslotpos
	push $2
	spushs
	push "myitem"
	push "null"
	spop $a
	call [$a],var2
	cthis isadvclass
	cmp0
	je l5308
	push $2
	push "guislot"
	push $1
	pop $b
	popax
	add $a,$b
	push "guislot"
	clparent classadvbut,setasbutton2
	push $2
	spushs
	push "butisin"
	push "BanGui82"
	spop $a
	call [$a],addmethod
	push $2
	spushs
	push "normal"
	spop $a
	call [$a],smousecursor=
l5308:
	push $2
	call grguitemslots,add
	end method
	method BanGui82
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	cthis withincut
	cmp0
	je l5309
	push $1
	push $2
	push $3
	push $4
	cthis isin
	jmp l5311
l5309:
	push 0
	jmp l5311
l5310:
	push 1
l5311:
	end method
	method setslotpos
	cthis cliptoguislot
	call grguitemslots,size
	push 1
	cmpjae
	cmp0
	je l5313
	localdef $1
	push 2
	popax
	sub 0,$a
	pop $1
	call grguitemslots,last
	spushs
	spop $a
	call [$a],getex
	push $1
	pop $b
	popax
	add $a,$b
	cthis getpy
	cthis ansetbpos
l5313:
	end method
	method stoprewinventory
	push 0
	call _timrevinv,stop
	end method
	method moveslots
	localint $1
	pop $1
	push $1
	cthis _moveslots
	call grguitemslots,first
	spushs
	spop $a
	call [$a],getpx
	call guileft,getex
	cmpja
	cmp0
	je l5315
	call guileft,getex
	call grguitemslots,first
	spushs
	spop $a
	call [$a],getpx
	pop $b
	popax
	sub $a,$b
	cthis _moveslots
l5315:
	call grguitemslots,last
	spushs
	spop $a
	call [$a],getex
	call guiright,getpx
	cmpjl
	cmp0
	je l5317
	call guiright,getpx
	call grguitemslots,last
	spushs
	spop $a
	call [$a],getex
	pop $b
	popax
	sub $a,$b
	cthis _moveslots
l5317:
	end method
	method _moveslots
	localint $1
	pop $1
	push $1
	push 0
	call grguitems,move
	push $1
	push 0
	call grguitemslots,move
	end method
	method cliptoguislot
	localdef $1
	push 3
	pop $1
	call guileft,getex
	push $1
	pop $b
	popax
	add $a,$b
	push 0
	call guiright,getpx
	push $1
	pop $b
	popax
	sub $a,$b
	push igmapph
	cthis clip
	end method
	method lastemptyslot
	localint $1
	push 0
	pop $1
l5318:
	push $1
	call grguitemslots,size
	cmpjl
	cmp0
	je l5319
	jmp l5321
l5320:
	add $1,1
	pop $1
	jmp l5318
l5321:
	localdef $2
	push $1
	call grguitemslots,get
	pop $2
	push $2
	spushs
	spop $a
	call [$a],myitem
	push "null"
	cmpje
	cmp0
	je l5323
	push $2
	ret
l5323:
	jmp l5320
l5319:
	push GAME
	spushs
	spop $a
	call [$a],additemslot
	call guileft,show
	call guiright,show
	call grguitemslots,last
	end method
	method load_pocket
	localstring $1
	pop $1
	push $1
	push "_banguipck.db"
	pop $b
	popax
	add $a,$b
	call grguipck,vecload
	end method
	method save_pocket
	localstring $1
	pop $1
	push $1
	push "_banguipck.db"
	pop $b
	popax
	add $a,$b
	call grguipck,vecsave
	end method
	method free_pocket
	call grguipck,free
	end method
	method inventory_check
	cthis inventory_hidden
	cmp0
	je l5325
	cthis inventory_in
	jmp l5324
l5325:
	cthis inventory_out
l5324:
	end method
	method inventory_dock
	push "guinventory_dokuj"
	call clsave,bis
	cmp0
	je l5327
	push "locked_gui"
	push 0
	call guinventorydok,setframe
	jmp l5326
l5327:
	push "unlocked_gui"
	push 0
	call guinventorydok,setframe
l5326:
	end method
	method inventory_out
	push 1
	cthis inventory_start
	end method
	method inventory_in
	push 1
	popax
	sub 0,$a
	cthis inventory_start
	end method
	method inventory_start
	localint $1
	pop $1
	call _timinv,isplaying
	cmp0
	je l5329
	call _timinv,dir
	push $1
	cmpje
	cmp0
	je l5331
	ret
l5331:
	push 0
	call _timinv,stop
l5329:
	push $1
	call _timinv,dir=
	call _timinv,play
	call sfxwysun2,play
	end method
	method inventory_playing
	call _timinv,isplaying
	end method
	method inventory_move
	localint $1
	pop $1
	push 0
	push $1
	call grguitemslots,move
	push 0
	push $1
	call guinventory,move
	push 0
	push $1
	call guinventorydok,move
	push 0
	push $1
	call guileft,move
	push 0
	push $1
	call guiright,move
	push 0
	push $1
	call grguitems,move
	push 0
	push $1
	call guishowhintitem1,move
	push 0
	push $1
	call guishowhintitem2,move
	push GAME
	spushs
	push "txtpckitem"
	spop $a
	call [$a],hasvar
	cmp0
	je l5333
	push 0
	push $1
	call txtpckitem,move
	push 0
	push $1
	call txtpckitemshadow,move
l5333:
	end method
	method inventory_hidden
	localint $1
	call grguitemslots,first
	spushs
	spop $a
	call [$a],getpy
	push igmapph
	pop $b
	popax
	sub $a,$b
	pop $1
	push $1
	push 0
	cmpja
	cmp0
	je l5335
	push $1
	popax
	sub 0,$a
	cthis inventory_move
	push 1
	jmp l5334
l5335:
	push $1
	push 0
	cmpje
l5334:
	end method
	method inventory_showed
	call guinventory,getposy
	push 0
	cmpjl
	cmp0
	je l5337
	call guinventory,getposy
	popax
	sub 0,$a
	cthis inventory_move
	push 1
	jmp l5336
l5337:
	call guinventory,getposy
	push 0
	cmpje
l5336:
	end method
	method inventory_hide
	call guinventory,bdokuj
	neg
	cmp0
	je l5339
l5340:
	cthis inventory_hidden
	neg
	cmp0
	je l5341
	push 1
	cthis inventory_move
	jmp l5340
l5341:
l5339:
	end method
	method inventory_show
l5342:
	cthis inventory_showed
	neg
	cmp0
	je l5343
	push 1
	popax
	sub 0,$a
	cthis inventory_move
	jmp l5342
l5343:
	end method
	method gui_mousemove
	push bHOInventory
	neg
	cmp0
	je l5345
	cthis advstdstate
	jmp l5347
l5345:
	push 0
	jmp l5347
l5346:
	push 1
l5347:
	cmp0
	je l5348
	call guimov,moving
	neg
	cmp0
	je l5350
	cthis pckitem_movon
	jmp l5352
l5350:
	push 0
	jmp l5352
l5351:
	push 1
l5352:
	cmp0
	je l5353
	localdef $1
	call grguitems,getsfound
	pop $1
	push $1
	push stxtpckitem
	cmpjne
	cmp0
	je l5355
	push $1
	pop stxtpckitem
	push $1
	spushs
	spop $a
	call [$a],getbutname
	call dbitems,dbget
	call txtpckitem,txtset
	push $1
	spushs
	spop $a
	call [$a],getz
	push 2
	pop $b
	popax
	add $a,$b
	call txtpckitem,setz
	call mouse,getpx
	call txtpckitem,getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call guinventory,getpy
	call txtpckitem,geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call txtpckitem,setpos
	call txtpckitem,show
	call txtpckitem,get
	call txtpckitemshadow,txtset
	call txtpckitem,getpx
	push 2
	pop $b
	popax
	add $a,$b
	call txtpckitem,getpy
	push 2
	pop $b
	popax
	add $a,$b
	call txtpckitemshadow,setpos
	call txtpckitem,getz
	push 1
	pop $b
	popax
	sub $a,$b
	call txtpckitemshadow,setz
	call txtpckitemshadow,show
l5355:
	jmp l5349
l5353:
	push stxtpckitem
	push "null"
	cmpjne
	cmp0
	je l5357
	call txtpckitem,hide
	call txtpckitemshadow,hide
	push "null"
	pop stxtpckitem
l5357:
l5349:
	call grgotopckstack,empty
	cmp0
	je l5359
	cthis inventory_playing
	neg
	jmp l5361
l5359:
	push 0
	jmp l5361
l5360:
	push 1
l5361:
	cmp0
	je l5362
	localint $2
	localint $3
	call mouse,getpos
	pop $3
	pop $2
	cthis inventory_hidden
	cmp0
	je l5364
	push $2
	push $3
	call invshow,isin
	jmp l5366
l5364:
	push 0
	jmp l5366
l5365:
	push 1
l5366:
	cmp0
	je l5367
	cthis inventory_in
	jmp l5363
l5367:
	call guinventory,bdokuj
	neg
	cmp0
	je l5369
	cthis inventory_showed
	cmp0
	je l5369
	push $2
	push $3
	call invhide,isin
	neg
	cmp0
	je l5369
	cthis inventory_unblocked
	jmp l5371
l5369:
	push 0
	jmp l5371
l5370:
	push 1
l5371:
	cmp0
	je l5372
	cthis inventory_out
l5372:
l5363:
l5362:
l5348:
	cthis update_loupepos
	end method
	method inventory_unblocked
	call guinventory,blockout
	push 0
	cmpje
	end method
	method unblock_inventory
	localint $1
	pop $1
	push $1
	push 0
	cmpjle
	cmp0
	je l5374
	push 0
	call guinventory,blockout=
	jmp l5373
l5374:
	push $1
	call timunblockinventory,setdelay
	call timunblockinventory,play
l5373:
	end method
	method gui_mouserclick
	cthis loupe_visible
	cmp0
	je l5376
	cthis gui_hide_loupe
	push 0
	jmp l5375
l5376:
	cthis gui_show_loupe
	push 1
l5375:
	end method
	method advinitial
	cthis advmsunlock
	cthis advsetstdstate
	end method
	method subloadadventure
	localstring $1
	localint $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $4
	spushs
	push "hodoors:"
	cmpst
	jne l5378
	spop $a
	jmp l5377
l5378:
	spop $a
l5377:
	push $3
	end method
	method remove_from_loupe
	localstring $1
	pop $1
	push $1
	call ftguiloupe,removeblend
	push $1
	call grguiloupe,remove
	call grguiloupe,empty
	cmp0
	je l5380
	call guiloupemask,hide
l5380:
	end method
	method show_itempopup
	localstring $1
	localstring $2
	pop $2
	pop $1
	call gameapi,getgamename
	spushs
	push $1
	push $2
	spop $a
	call [$a],BanGui83
	end method
	method BanGui83
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	cthis saveitemtopck
	localdef $3
	push "anpopup_"
	push $1
	pop $b
	popax
	add $a,$b
	pop $3
	localdef $4
	push $3
	push "_blysk"
	pop $b
	popax
	add $a,$b
	pop $4
	localdef $5
	push "_img"
	push $1
	pop $b
	popax
	add $a,$b
	pop $5
	localdef $6
	push "_txtnewitem"
	push $1
	pop $b
	popax
	add $a,$b
	pop $6
	localdef $7
	push "_txtitem"
	push $1
	pop $b
	popax
	add $a,$b
	pop $7
	localdef $8
	push "_gr_"
	push $1
	pop $b
	popax
	add $a,$b
	pop $8
	localdef $9
	push $3
	push "_exit"
	pop $b
	popax
	add $a,$b
	pop $9
	localdef $10
	push "_gr2_"
	push $1
	pop $b
	popax
	add $a,$b
	pop $10
	push $3
	cthis hasvar
	neg
	cmp0
	je l5382
	push "globalpopup"
	push $3
	cthis copyanima
	push $3
	spushs
	spop $a
	call [$a],Button_isin
	push $3
	call butgame,add
	push "globalpopup"
	push $4
	cthis copyanima
	push $4
	spushs
	push 1
	push 0
	spop $a
	call [$a],setframe
	push $5
	spushs
	spop $e
	new img,[$e]
	push $5
	spushs
	push A
	push "swnd"
	push $3
	push "sblysk"
	push $4
	push "sanima"
	push $2
	push "sgr"
	push $8
	push "sitem"
	push $1
	push "spopexit"
	push $9
	spop $a
	call [$a],vars2
	push $6
	push "newitem"
	call dbgame,dbget
	push "fnthogui"
	cthis guifontcolor
	cthis newtext
	push $7
	push $1
	call dbitems,dbget
	push "fnthogui"
	cthis guifontcolor
	cthis newtext
	push $8
	spushs
	spop $e
	new gmimgvec,[$e]
	push $8
	spushs
	push A
	push $3
	push $4
	push $6
	push $7
	spop $a
	call [$a],addlist
	push $10
	spushs
	spop $e
	new gmimgvec,[$e]
	push $10
	spushs
	push A
	push $8
	push $9
	push $2
	spop $a
	call [$a],addlist
	push "globalpopup"
	push $9
	cthis copyanima
	push $9
	spushs
	push 2
	push 0
	spop $a
	call [$a],setframe
	push $9
	spushs
	spop $a
	call [$a],hide
	push $9
	spushs
	push $3
	push $1
	spop $a
	call [$a],BanGui84
l5382:
	localint $11
	push igmappw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push $3
	spushs
	spop $a
	call [$a],getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	pop $11
	localint $12
	push igmapph
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push $3
	spushs
	spop $a
	call [$a],geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	pop $12
	push $3
	spushs
	push $11
	push $12
	spop $a
	call [$a],setpos
	push $4
	spushs
	push $11
	push $12
	spop $a
	call [$a],setpos
	push $9
	spushs
	push $11
	push $12
	spop $a
	call [$a],setpos
	localdef $13
	push 0.12
	pop $13
	push $6
	spushs
	push $3
	spushs
	spop $a
	call [$a],getcx
	push $6
	spushs
	spop $a
	call [$a],getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push $3
	spushs
	spop $a
	call [$a],getpy
	push $13
	push $3
	spushs
	spop $a
	call [$a],geth
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	push $7
	spushs
	push $3
	spushs
	spop $a
	call [$a],getcx
	push $7
	spushs
	spop $a
	call [$a],getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push $3
	spushs
	spop $a
	call [$a],getey
	push $13
	push $3
	spushs
	spop $a
	call [$a],geth
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	sub $a,$b
	push $7
	spushs
	spop $a
	call [$a],geth
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setpos
	push $2
	spushs
	push "rotocenter"
	spop $a
	call [$a],play
	push $2
	spushs
	cthis getappcenter
	spop $a
	call [$a],setpos
	localdef $14
	push $4
	spushs
	spop $a
	call [$a],getz
	push 5
	pop $b
	popax
	add $a,$b
	pop $14
	push $2
	spushs
	push $14
	spop $a
	call [$a],setz
	push $5
	spushs
	push $14
	spop $a
	call [$a],setz
	push $6
	spushs
	push $14
	spop $a
	call [$a],setz
	push $7
	spushs
	push $14
	spop $a
	call [$a],setz
	push $9
	spushs
	push $14
	spop $a
	call [$a],setz
	call butgame,sort
	push $8
	spushs
	spop $a
	call [$a],show
	push $3
	spushs
	spop $a
	call [$a],getpx
	push igmoffsetx
	cmpjl
	cmp0
	je l5401
	push $10
	spushs
	push igmoffsetx
	push $3
	spushs
	spop $a
	call [$a],getpx
	pop $b
	popax
	sub $a,$b
	push 0
	spop $a
	call [$a],move
l5401:
	push $3
	spushs
	spop $a
	call [$a],getex
	push iResX
	push igmoffsetx
	pop $b
	popax
	add $a,$b
	cmpja
	cmp0
	je l5403
	push $10
	spushs
	push iResX
	push igmoffsetx
	pop $b
	popax
	add $a,$b
	push $3
	spushs
	spop $a
	call [$a],getex
	pop $b
	popax
	sub $a,$b
	push 0
	spop $a
	call [$a],move
l5403:
	push $3
	spushs
	spop $a
	call [$a],getpy
	push igmoffsety
	cmpjl
	cmp0
	je l5405
	push $10
	spushs
	push 0
	push igmoffsety
	push $3
	spushs
	spop $a
	call [$a],getpy
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],move
l5405:
	push $3
	spushs
	spop $a
	call [$a],getey
	push iResY
	push igmoffsety
	pop $b
	popax
	add $a,$b
	cmpja
	cmp0
	je l5407
	push $10
	spushs
	push 0
	push iResY
	push igmoffsety
	pop $b
	popax
	add $a,$b
	push $3
	spushs
	spop $a
	call [$a],getey
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],move
l5407:
	push $5
	spushs
	push A
	push $3
	push $4
	push $6
	push $7
	push $2
	spop $a
	call [$a],imgbuildfromlist
	push $5
	spushs
	push $8
	spop $a
	call [$a],imgbuildfromvec
	push $8
	spushs
	spop $a
	call [$a],hide
	push $2
	spushs
	spop $a
	call [$a],hide
	call sfxopenpopup,play
	push $5
	spushs
	push ishowpouptime
	push 1
	push 1
	push "BanGui87"
	spop $a
	call [$a],anzoomfadeinout
	end method
	method BanGui84
	localdef $1
	localdef $2
	pop $2
	pop $1
	push A
	push "swnd"
	push $1
	push "sitem"
	push $2
	push "bisitempopup"
	push 1
	cthis vars2
	push "isbutin"
	push "BanGui85"
	cthis addmethod
	push "butclick"
	push "BanGui86"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method BanGui85
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 0
	cthis isin
	cmp0
	je l5384
	cthis framenr
	push 0
	cmpje
	cmp0
	je l5386
	call advmouse,setstd
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
l5386:
	push 1
	jmp l5383
l5384:
	push swnd
	spushs
	spop $a
	call [$a],isvisible
	cmp0
	je l5388
	cthis framenr
	push 1
	cmpje
	cmp0
	je l5390
	call advmouse,setstd
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
l5390:
	push 1
	jmp l5387
l5388:
	push 0
l5387:
l5383:
	end method
	method BanGui86
	cthis loupe_visible
	cmp0
	je l5392
	call mouse,getpos
	push 1
	push 1
	call guiglass,isin
	jmp l5394
l5392:
	push 0
	jmp l5394
l5393:
	push 1
l5394:
	cmp0
	je l5395
	cthis hide_loupe
	push 1
	pop gui_skipclick
	jmp l5391
l5395:
	cthis getname
	call butgame,removebut
	call advmouse,setstd
	localdef $1
	push "popup_"
	push sitem
	pop $b
	popax
	add $a,$b
	push "_clickexit"
	pop $b
	popax
	add $a,$b
	pop $1
	call gameapi,getgamename
	spushs
	push $1
	spop $a
	call [$a],hasmet
	cmp0
	je l5397
	call gameapi,getgamename
	spushs
	push $1
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	jmp l5396
l5397:
	push "clickexit"
	cthis hasaddedmet
	cmp0
	je l5399
	cthis clickexit
	jmp l5398
l5399:
	push sitem
	cthis hide_itempopup
l5398:
l5396:
l5391:
	end method
	method BanGui87
	cthis hide
	push sgr
	spushs
	spop $a
	call [$a],show
	push sanima
	spushs
	spop $a
	call [$a],show
	push sanima
	spushs
	push "readytogo"
	spop $a
	call [$a],styperoto=
	push spopexit
	spushs
	spop $a
	call [$a],show
	call butgame,onmousemove
	call gameapi,getgamename
	spushs
	push "popup_"
	push sitem
	pop $b
	popax
	add $a,$b
	push "_in"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	end method
	method hide_itempopup
	localstring $1
	pop $1
	call gameapi,getgamename
	spushs
	push $1
	spop $a
	call [$a],BanGui88
	end method
	method BanGui88
	localstring $1
	pop $1
	localdef $2
	push "anpopup_"
	push $1
	pop $b
	popax
	add $a,$b
	pop $2
	localdef $3
	push $2
	push "_blysk"
	pop $b
	popax
	add $a,$b
	pop $3
	localdef $4
	push "_img"
	push $1
	pop $b
	popax
	add $a,$b
	pop $4
	localdef $5
	push "_txtnewitem"
	push $1
	pop $b
	popax
	add $a,$b
	pop $5
	localdef $6
	push "_txtitem"
	push $1
	pop $b
	popax
	add $a,$b
	pop $6
	localdef $7
	push "_gr_"
	push $1
	pop $b
	popax
	add $a,$b
	pop $7
	localdef $8
	push $2
	push "_exit"
	pop $b
	popax
	add $a,$b
	pop $8
	push "taken_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l5409
	push $4
	spushs
	push A
	push $2
	push $5
	push $6
	spop $a
	call [$a],imgbuildfromlist
	jmp l5408
l5409:
	push $4
	spushs
	push A
	push $2
	push $3
	push $5
	push $6
	push $4
	spushs
	spop $a
	call [$a],sanima
	spop $a
	call [$a],imgbuildfromlist
	push $4
	spushs
	spop $a
	call [$a],sanima
	spushs
	spop $a
	call [$a],hide
l5408:
	push $7
	spushs
	spop $a
	call [$a],hide
	push $8
	spushs
	spop $a
	call [$a],hide
	call sfxclosepopup,play
	push $4
	spushs
	push ishowpouptime
	push 1
	popax
	sub 0,$a
	push 1
	popax
	sub 0,$a
	push "BanGui89"
	spop $a
	call [$a],anzoomfadeinout
	end method
	method BanGui89
	cthis hide
	call gameapi,getgamename
	spushs
	push "popup_"
	push sitem
	pop $b
	popax
	add $a,$b
	push "_out"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	end method
	method isvisible_itempopup
	localstring $1
	pop $1
	call gameapi,getgamename
	spushs
	push "anpopup_"
	push $1
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],hasvar
	cmp0
	je l5410
	push "anpopup_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],isvisible
	cmp0
	jne l5413
	push "_img"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],isvisible
	jmp l5414
l5412:
	push 0
	jmp l5414
l5413:
	push 1
l5414:
	jmp l5415
l5410:
	push 0
	jmp l5415
l5411:
	push 1
l5415:
	end method
	method getitempopupshadow
	localstring $1
	pop $1
	push "anpopup_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_blysk"
	pop $b
	popax
	add $a,$b
	end method
	method hideitempopupshadow
	localstring $1
	pop $1
	push $1
	cthis getitempopupshadow
	spushs
	spop $a
	call [$a],hide
	end method
	method objective_done
	localstring $1
	pop $1
	push $1
	push 1
	push 1
	cthis _show_objective
	end method
	method show_objective
	localstring $1
	pop $1
	push $1
	push 0
	push 1
	cthis _show_objective
	end method
	method enable_magic
	localstring $1
	pop $1
	push $1
	clparent mgBook,enable_magic
	cthis glow_guiglass
	end method
	method glow_guiglass
	push "magic_loop"
	call anguibookmagic,isplaying
	neg
	cmp0
	je l5417
	push "magic"
	call anguibookmagic,play
l5417:
	end method
	method glow_guiglass_loop
	push "magic_loop"
	call anguibookmagic,play
	end method
	method _show_objective
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push GAME
	spushs
	push $1
	push $2
	push $3
	spop $a
	call [$a],BanGui90
	end method
	method BanGui90
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	localint $4
	push $1
	call dbobject,findbyrow
	pop $4
	push $4
	push 0
	cmpjl
	cmp0
	je l5419
	ret
l5419:
	localint $5
	push $4
	call dbobject,getcolsno
	pop $5
	push $5
	push 2
	cmpjl
	cmp0
	je l5421
	ret
l5421:
	push $3
	cmp0
	je l5423
	push $1
	clparent mgBook,enable_objectives
l5423:
	call _vecobjective,free
	push "imgobjective"
	call _vecobjective,add
	push $2
	cmp0
	je l5425
	push "txt_objective_completed"
	call dbobject,dbget
	call subtitle,getcolor
	call txtobject0,txtsetcol
	jmp l5424
l5425:
	push "txt_objective"
	call dbobject,dbget
	call subtitle,getcolor
	call txtobject0,txtsetcol
l5424:
	call imgobjective,getcx
	call txtobject0,getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call imgobjective,getcy
	call txtobject0,geth
	push 2
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	sub $a,$b
	call txtobject0,setpos
	push "txtobject0"
	call _vecobjective,add
	localint $6
	push 1
	pop $6
l5426:
	push $6
	push $5
	cmpjl
	cmp0
	je l5427
	jmp l5429
l5428:
	add $6,1
	pop $6
	jmp l5426
l5429:
	localdef $7
	push "txtobject"
	push $6
	pop $b
	popax
	add $a,$b
	pop $7
	push $7
	spushs
	push $4
	push $6
	call dbobject,get
	call subtitle,getcolor
	spop $a
	call [$a],txtsetcol
	push $7
	spushs
	call imgobjective,getcx
	push $7
	spushs
	spop $a
	call [$a],getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call imgobjective,getcy
	push 1
	push $6
	pop $b
	popax
	sub $a,$b
	push $7
	spushs
	spop $a
	call [$a],geth
	push 2
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setpos
	push $7
	call _vecobjective,add
	jmp l5428
l5427:
	push "_vecobjective"
	call imgobject,imgbuildfromvec
	call imgobjective,hide
	call imgobject,show
	push iGuiZ
	call imgobject,setz
	call anguibook,getex
	push 10
	pop $b
	popax
	add $a,$b
	call anguibook,getpy
	push 10
	pop $b
	popax
	sub $a,$b
	call imgobject,geth
	pop $b
	popax
	sub $a,$b
	call imgobject,setpos
	push ishowpouptime
	push "BanGui91"
	call imgobject,anzoomfadein
	push $3
	cmp0
	je l5431
	localdef $7
	push "objectiveid_"
	push $1
	pop $b
	popax
	add $a,$b
	pop $7
	push $7
	call clsave,has
	neg
	cmp0
	je l5433
	localint $5
	push 1
	push "ile_objectives"
	call clsave,get
	pop $b
	popax
	add $a,$b
	pop $5
	push "ile_objectives"
	push $5
	call clsave,set
	push "objective_"
	push $5
	pop $b
	popax
	add $a,$b
	push $1
	call clsave,set
l5433:
	push $7
	push $2
	call clsave,set
l5431:
	call sfxhint2,play
	end method
	method BanGui91
	call timfinobj,play
	end method
	method load_2nd_view
	localstring $1
	pop $1
	call gameapi,getgamename
	spushs
	push $1
	spop $a
	call [$a],BanGui92
	end method
	method BanGui92
	localdef $1
	pop $1
	push "anczachy2w"
	cthis hasvar
	neg
	cmp0
	je l5435
	push "anczachy2w"
	push "$scripts/ad02_brama/czachy2w.pyz"
	push 0
	cthis newanima
	push "anczachy2w"
	call bgr1,add
	call anczachy2w,anhideonsetframe
	push 0
	call anczachy2w,play
	push "anczachy2w"
	cthis gui_toloupe
l5435:
	end method
	method watch_film
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push "filmpath"
	push $1
	call clsave,set
	push "filmdb"
	push "film"
	call clsave,set
	push "nextgame_type"
	push $2
	call clsave,set
	push "nextgame_path"
	push $3
	call clsave,set
	push $2
	push "-def"
	cmpje
	cmp0
	jne l5438
	push $2
	push "-adv"
	cmpje
	jmp l5439
l5437:
	push 0
	jmp l5439
l5438:
	push 1
l5439:
	cmp0
	je l5440
	push "nextgame"
	push "game"
	push "nextgame_path"
	call clsave,get
	pop $b
	popax
	add $a,$b
	push "0"
	pop $b
	popax
	add $a,$b
	call clsave,set
	jmp l5436
l5440:
	push $2
	push "-menu"
	cmpje
	cmp0
	je l5442
	push "nextgame"
	push "nextgame_path"
	call clsave,get
	call clsave,set
	call ccs,buildfromscreen
	push "nextgame"
	call clsave,get
	call gameapi,play
	jmp l5441
l5442:
	push $2
	push "-mg"
	cmpje
	cmp0
	je l5444
	push "nextgame"
	push "nextgame_path"
	call clsave,get
	call clsave,set
	push "nextgame"
	call clsave,get
	cthis stdexit
	jmp l5443
l5444:
	push "nextgame"
	push "nextgame_path"
	call clsave,get
	call clsave,set
l5443:
l5441:
l5436:
	push "BanFilm"
	call gameapi,play
	end method
	method znaklclick
	localstring $1
	pop $1
	push GAME
	spushs
	push $1
	spop $a
	call [$a],BanGui93
	end method
	method BanGui93
	localstring $1
	pop $1
	push "guibook_taken"
	call clsave,bis
	cmp0
	je l5446
	push "T16watchglass"
	cthis isact_tutorial
	cmp0
	jne l5449
	push "T17tornpages"
	cthis isact_tutorial
	jmp l5450
l5448:
	push 0
	jmp l5450
l5449:
	push 1
l5450:
	cmp0
	je l5451
	cthis hide_tutorial
l5451:
	push $1
	cthis gui_removefromloupe
	push $1
	push "b"
	pop $b
	popax
	add $a,$b
	cthis gui_removefromloupe
	push $1
	spushs
	spop $a
	call [$a],anhide
	push $1
	push "b"
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],anhide
	push $1
	spushs
	spop $a
	call [$a],disable
	push "e1_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_wziety"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	push "anznakout"
	cthis gui_toloupe
	push $1
	spushs
	spop $a
	call [$a],getcx
	push $1
	spushs
	spop $a
	call [$a],getcy
	call anznakout,setpos
	push 0
	push "BanGui94"
	call anznakout,anplayfin
	call anznakout,hide
	push GAME
	spushs
	push "fxfounditem2"
	spop $a
	call [$a],hasvar
	neg
	cmp0
	je l5453
	push GAME
	spushs
	push "founditem2 20"
	spop $a
	call [$a],sfx=
l5453:
	call fxfounditem2,play
	localstring $2
	push "img_"
	push $1
	pop $b
	popax
	add $a,$b
	pop $2
	push $2
	spushs
	spop $e
	new img,[$e]
	localint $3
	push $1
	spushs
	spop $a
	call [$a],getw
	pop $3
	localint $4
	push $1
	spushs
	spop $a
	call [$a],geth
	pop $4
	push $2
	spushs
	push $3
	push $4
	cthis transparent
	spop $a
	call [$a],create
	localint $5
	push $1
	spushs
	spop $a
	call [$a],getpx
	pop $5
	localint $6
	push $1
	spushs
	spop $a
	call [$a],getpy
	pop $6
	push $2
	spushs
	push $5
	push $6
	spop $a
	call [$a],setpos
	push $2
	spushs
	push $1
	spop $a
	call [$a],blit
	push $2
	spushs
	push $3
	popax
	sub 0,$a
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push $4
	popax
	sub 0,$a
	push 2
	pop $b
	popax
	div $a,$b
	psax
	spop $a
	call [$a],setlodxy
	push $2
	spushs
	push $1
	spushs
	spop $a
	call [$a],getcx
	push $1
	spushs
	spop $a
	call [$a],getcy
	spop $a
	call [$a],setpos
	push $1
	spushs
	push 0
	push 0
	spop $a
	call [$a],ansetbpos
	push $2
	spushs
	push iGuiBookZ
	push 10
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setz
	push $2
	spushs
	spop $a
	call [$a],show
	push $2
	push iRotoIleRot
	push iRotoIleObrotow
	clparent GuiItem,setasrototaker
	push $2
	spushs
	push "rototaker_endroto"
	push "BanGui95"
	spop $a
	call [$a],addmethod
	push $2
	spushs
	call anguibook,getpx
	call anguibook,getpy
	push $3
	push $4
	push $3
	push $4
	spop $a
	call [$a],rototaker_startwh
l5446:
	end method
	method BanGui94
	cthis hide
	cthis getname
	cthis gui_removefromloupe
	end method
	method BanGui95
	cthis hide
	cthis glow_guiglass
	cthis cheeck_magic_completed
	end method
	method cheeck_magic_completed
	new int,bcomplete
	push 1
	pop bcomplete
	new int,p
	push "sysbook_magic_curpage"
	call clsave,get
	pop p
	localstring $1
	push "sysbook_magicpage_"
	push p
	pop $b
	popax
	add $a,$b
	call clsave,get
	pop $1
	push "anmagznak"
	push "$scripts/sys_mgbook/"
	push $1
	pop $b
	popax
	add $a,$b
	push "_znaki.pyz"
	pop $b
	popax
	add $a,$b
	push 1000
	popax
	sub 0,$a
	cthis newanima
	call anmagznak,hide
	localint $2
	push 0
	pop $2
l5454:
	push $2
	call anmagznak,nofactions
	cmpjl
	cmp0
	je l5455
	jmp l5457
l5456:
	add $2,1
	pop $2
	jmp l5454
l5457:
	push $2
	push 0
	call anmagznak,setframe
	push "e1_an"
	call anmagznak,actionname
	pop $b
	popax
	add $a,$b
	push "_wziety"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l5459
	push 0
	pop bcomplete
l5459:
	jmp l5456
l5455:
	push bcomplete
	cmp0
	je l5461
	cthis glow_guiglass_loop
	push "sysbook_actfold"
	push "magic"
	call clsave,set
	push "sysbook_to_show"
	push 1
	call clsave,set
	push "sysbook_to_show_page"
	push p
	call clsave,set
l5461:
	end method
	method loadznakout
	push "$scripts/sys_gui/znakout.pyzH"
	cthis img=
	push 1000
	popax
	sub 0,$a
	push 1000
	popax
	sub 0,$a
	call anznakout,setpos
	end method
	method setasznakbut
	localstring $1
	pop $1
	push "e1_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_wziety"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l5463
	push $1
	spushs
	spop $a
	call [$a],hide
	push $1
	push "b"
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],hide
	jmp l5462
l5463:
	push $1
	spushs
	push 10
	spop $a
	call [$a],setz
	push $1
	cthis gui_toloupe
	push $1
	push "b"
	pop $b
	popax
	add $a,$b
	cthis gui_toloupe
	push $1
	push "b"
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],anhideonsetframe
	push $1
	push "b"
	pop $b
	popax
	add $a,$b
	spushs
	push 0
	spop $a
	call [$a],play
	push $1
	spushs
	spop $a
	call [$a],hide
	push $1
	spushs
	spop $a
	call [$a],Button_moveonms
	push $1
	spushs
	spop $a
	call [$a],Button_moveoffms
	push $1
	spushs
	push "isbutin"
	push "BanGui96"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "butclick"
	push "BanGui97"
	spop $a
	call [$a],addmethod
	push $1
	call butgame,add
l5462:
	end method
	method BanGui96
	localdef $1
	localdef $2
	pop $2
	pop $1
	cthis loupe_visible
	cmp0
	je l5464
	push $1
	push $2
	push 0
	push 0
	cthis isin
	jmp l5466
l5464:
	push 0
	jmp l5466
l5465:
	push 1
l5466:
	end method
	method BanGui97
	cthis advstdstate
	cmp0
	je l5468
	cthis getname
	cthis znaklclick
	cthis setadvstdstate
l5468:
	end method
	method gui_gotomenu
	cthis save_game
	push 0
	pop PrzygodaMode
	push "e1_karzelek_show"
	call clsave,bis
	neg
	cmp0
	je l5470
	call ccs,buildfromscreen
	push "mg_ingame_menu"
	call gameapi,play
l5470:
	end method
	method gui_openbook
	localstring $1
	pop $1
	push "sysbook_actfold"
	push "note"
	call clsave,set
	push "sysbook_show_note"
	push $1
	call clsave,set
	cthis gui_opendiary
	end method
	method gui_opendiary
	call gameapi,getgamename
	push "mgBook"
	cmpjne
	cmp0
	je l5472
	call ccs,buildfromscreen
	push "mgBook"
	call gameapi,play
l5472:
	end method
	method gui_openmap
	call gameapi,getgamename
	push "mgMap"
	cmpjne
	cmp0
	je l5474
	push "e1_karzelek_show"
	call clsave,bis
	neg
	jmp l5476
l5474:
	push 0
	jmp l5476
l5475:
	push 1
l5476:
	cmp0
	je l5477
	call ccs,buildfromscreen
	push "mgMap"
	call gameapi,play
l5477:
	end method
	method enable_chapter
	localstring $1
	pop $1
	push $1
	clparent mgBook,enable_note
	end method
	method stdpiorko
	localstring $1
	pop $1
	push $1
	cthis enable_chapter
	push 0
	call globalpiorko,play
	end method
	method keydown
	push "lalt"
	call keyboard,iskeydown
	cmp0
	jne l5480
	push "ralt"
	call keyboard,iskeydown
	jmp l5481
l5479:
	push 0
	jmp l5481
l5480:
	push 1
l5481:
	cmp0
	je l5482
	push "enter"
	call keyboard,iskeydown
	jmp l5484
l5482:
	push 0
	jmp l5484
l5483:
	push 1
l5484:
	cmp0
	je l5485
	cthis changefullscreen
	jmp l5478
l5485:
	cthis gmcontrol_keydown
	push igmdebug
	cmp0
	je l5487
	push "m"
	call keyboard,iskeydown
	cmp0
	je l5489
	call ccs,buildfromscreen
	push "MainMenu"
	call gameapi,play
	jmp l5488
l5489:
	push "h"
	call keyboard,iskeydown
	cmp0
	je l5491
	push 1
	call guihint,stop
l5491:
l5488:
l5487:
l5478:
	end method
	method banbehrewind
	cthis cisplaying
	cmp0
	je l5493
	cthis isadvclass
	cmp0
	je l5495
	cthis behrewind
	jmp l5494
l5495:
	push 1
	cthis cactsndstop
l5494:
l5493:
	end method
	method gui_canclick2v
	localstring $1
	pop $1
	cthis loupe_visible
	neg
	cmp0
	jne l5497
	push $1
	cthis gui_inloupe
	cmp0
	jne l5497
	push $1
	spushs
	push "bisitempopup"
	spop $a
	call [$a],hasvar
	cmp0
	jne l5497
	push $1
	push "guimenu"
	cmpje
	cmp0
	jne l5497
	push $1
	push "guiglass"
	cmpje
	cmp0
	jne l5497
	push $1
	push "anguibook"
	cmpje
	cmp0
	jne l5497
	push $1
	push "anguimapa"
	cmpje
	cmp0
	jne l5497
	push $1
	push "guihint"
	cmpje
	cmp0
	jne l5497
	push $1
	push "guihintbase"
	cmpje
	cmp0
	jne l5497
	push $1
	push "imgnextdialog"
	cmpje
	cmp0
	jne l5497
	push $1
	push "anpopexitscr"
	cmpje
	jmp l5498
l5496:
	push 0
	jmp l5498
l5497:
	push 1
l5498:
	end method
	method _save_game
	localstring $1
	pop $1
	push $1
	cthis save_pocket
	clparent classadv,advautosave
	push $1
	clparent classadv,_advsave
	end method
	method _load_game
	localstring $1
	pop $1
	push $1
	cthis load_pocket
	push $1
	clparent classadv,_advload
	end method
	method save_game
	cthis getsavename
	cthis _save_game
	end method
	method load_game
	cthis getsavename
	cthis _load_game
	end method
	method can_save
	push PrzygodaMode
	cmp0
	je l5499
	cthis advstdstate
	jmp l5501
l5499:
	push 0
	jmp l5501
l5500:
	push 1
l5501:
	end method
	method autosave_game
	cthis can_save
	cmp0
	je l5503
	cthis save_game
l5503:
	end method
	method autoload_game
	cthis can_save
	cmp0
	je l5505
	cthis load_game
l5505:
	end method
	method free_save
	localstring $1
	pop $1
	cthis free_pocket
	call clsave,free
	push $1
	cthis _save_game
	end method
	method free_cursave
	cthis getsavename
	cthis free_save
	end method
	end class

	class classadvstdgame2
	parent classadvstdgame
	parent BanGui
	method init
	push 0
	pop bHOInventory
	clparent BanGui,init
	call banguisrc,load
	clparent classadvstdgame,init
	push "butgame"
	cthis deletegmobj
	new ButtonBanshee,butgame
	cthis initadventure
	cthis initgui
	new Film,film1
	push "onfinish"
	push "classadvstdgame20"
	call film1,addmethod
	cthis playbehoninit
	end method
	method classadvstdgame20
	cthis advsetstdstate
	cthis free
	push "beh_END_FILM"
	cthis playbehif
	popax
	end method
	method csubplay
	localstring $1
	pop $1
	push igmsubtitle
	cmp0
	je l5507
	localint $2
	push igmlektor
	pop $2
	push $1
	spushs
	spop $a
	call [$a],loaded
	neg
	cmp0
	je l5509
	push 0
	pop igmlektor
l5509:
	localdef $3
	push $1
	call subtitle,play
	pop $3
	push igmlektor
	cmp0
	jne l5512
	push $3
	push 0
	cmpjle
	jmp l5513
l5511:
	push 0
	jmp l5513
l5512:
	push 1
l5513:
	cmp0
	je l5514
	push $1
	spushs
	spop $a
	call [$a],play
	push $3
	push 0
	cmpja
	cmp0
	je l5516
	push $1
	spushs
	push "voice_volume"
	call clsmen,get
	spop $a
	call [$a],changevol
l5516:
	jmp l5510
l5514:
	push $3
	call timlektor,setdelay
	call timlektor,play
l5510:
	push igmoffsetx
	push igmoffsety
	call subtitle,geth
	pop $b
	popax
	add $a,$b
	call imgnextdialog,setpos
	push $3
	push 0
	cmpja
	cmp0
	je l5518
	call imgnextdialog,show
l5518:
	push $2
	pop igmlektor
	jmp l5506
l5507:
	push $1
	spushs
	spop $a
	call [$a],play
l5506:
	end method
	method butenable
	cthis getname
	call butgame,addbut
	end method
	method butdisable
	cthis getname
	call butgame,removebut
	end method
	method butrefresh
	call butgame,onmousemove
	cthis isadvclass
	cmp0
	je l5520
	cthis advbutrefresh
l5520:
	end method
	method playfilm
	localstring $1
	localstring $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push "state_playfilm"
	cthis advsetstate
	push "film"
	push $1
	call clsave,set
	push $3
	push $4
	call film1,setpos
	push "scripts/"
	push $1
	pop $b
	popax
	add $a,$b
	push "/"
	pop $b
	popax
	add $a,$b
	push $2
	call film1,playfilm
	end method
	method playfilmob
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	spushs
	spop $a
	call [$a],getpx
	push $3
	spushs
	spop $a
	call [$a],getpy
	cthis playfilm
	end method
	method playfilmscreenxy
	localstring $1
	localstring $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push igmoffsetx
	push $3
	pop $b
	popax
	add $a,$b
	push igmoffsety
	push $4
	pop $b
	popax
	add $a,$b
	cthis playfilm
	end method
	method setasbanbeh
	localstring $1
	pop $1
	push "setas"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	clparent advbanbeh,[$d]
	end method
	method subloadbeh
	localstring $1
	localstring $2
	localstring $3
	localint $4
	localint $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	localstring $6
	localstring $7
	localint $8
	localint $9
	push ":"
	call $1,strsubes
	pop $1
	push $1
	spushs
	push "popin"
	cmpst
	je l5523
	push "popout"
	cmpst
	je l5523
	jmp l5522
l5523:
	spop $a
	push $3
	spushs
	push $4
	push $5
	spop $a
	call [$a],get
	pop $7
	add $5,1
	pop $5
	push $7
	push "("
	cmpje
	cmp0
	je l5525
	push $5
	pop $8
	push $3
	spushs
	push $4
	push $5
	spop $a
	call [$a],get
	pop $7
l5526:
	push $7
	push ")"
	cmpjne
	cmp0
	je l5527
	push $3
	spushs
	push $4
	push $5
	spop $a
	call [$a],get
	pop $7
	add $5,1
	pop $5
	jmp l5526
l5527:
	jmp l5524
l5525:
	push "beh popin: no ( error"
	spushs
	spop $h
	call $h,print
l5524:
	push $2
	spushs
	push $3
	push $4
	push $8
	push $1
	push "popup"
	spop $a
	call [$a],setasbanbeh
	jmp l5521
l5522:
	push "openbook"
	cmpst
	jne l5528
	spop $a
	push $3
	spushs
	push $4
	push $5
	spop $a
	call [$a],get
	pop $7
	add $5,1
	pop $5
	push $2
	spushs
	push $7
	push $1
	spop $a
	call [$a],setasbanbeh
	jmp l5521
l5528:
	push "closebook"
	cmpst
	jne l5529
	spop $a
	push $2
	spushs
	push $1
	spop $a
	call [$a],setasbanbeh
	jmp l5521
l5529:
	spop $a
	sub $5,1
	pop $5
l5521:
	push $5
	end method
	method behgonext_sndbg
	push "bisfxbg"
	cthis hasvar
	neg
	cmp0
	je l5531
	call imgnextdialog,hide
l5531:
	end method
	method classbehhero_preeval
	end method
	method classbehhero_posteval
	localdef $1
	cthis gettyp
	pop $1
	push bskip
	cmp0
	je l5533
	push $1
	push "talk"
	cmpje
	cmp0
	jne l5536
	push $1
	push "sndplay"
	cmpje
	jmp l5537
l5535:
	push 0
	jmp l5537
l5536:
	push 1
l5537:
	jmp l5538
l5533:
	push 0
	jmp l5538
l5534:
	push 1
l5538:
	cmp0
	je l5539
	call imgskipdialog,show
	push iResX
	push igmoffsetx
	pop $b
	popax
	add $a,$b
	call imgskipdialog,getw
	pop $b
	popax
	sub $a,$b
	push igmoffsety
	call subtitle,geth
	pop $b
	popax
	add $a,$b
	call imgskipdialog,setpos
	jmp l5532
l5539:
	call imgskipdialog,hide
l5532:
	end method
	method butmoveon
	localstring $1
	pop $1
	push $1
	cthis gui_canclick2v
	cmp0
	je l5541
	push $1
	spushs
	spop $a
	call [$a],moveon
	push $1
	spushs
	spop $a
	call [$a],getbutname
	push "_MOVEON"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	cthis behplaying
	neg
	cmp0
	je l5543
	push "beh_"
	push $1
	spushs
	spop $a
	call [$a],getbutname
	pop $b
	popax
	add $a,$b
	push "_MOVEON"
	pop $b
	popax
	add $a,$b
	cthis playbehif
	neg
	pop _b_rewind
l5543:
l5541:
	end method
	method butclickon
	localstring $1
	pop $1
	push $1
	cthis gui_canclick2v
	cmp0
	je l5545
	push $1
	spushs
	spop $a
	call [$a],clickon
	cthis behplaying
	neg
	cmp0
	je l5547
	push "beh_"
	push $1
	spushs
	spop $a
	call [$a],getbutname
	pop $b
	popax
	add $a,$b
	push "_LCLICK"
	pop $b
	popax
	add $a,$b
	cthis playbehif
	neg
	pop _b_rewind
l5547:
l5545:
	end method
	method advmsclick
	push 1
	pop _b_rewind
	cthis advgetlock
	neg
	cmp0
	je l5549
	localint $1
	localint $2
	call mouse,getpos
	pop $2
	pop $1
	push "preparetosort"
	push $1
	push $2
	call grbuts,eval2
	call grbuts,sortimgs
	localint $3
	push $1
	push $2
	push 1
	push 1
	call grbuts,butisin
	pop $3
	push "endsort"
	call grbuts,eval
	push $3
	cmp0
	je l5551
	push $3
	push 1
	pop $b
	popax
	sub $a,$b
	call grbuts,get
	cthis butclickon
l5551:
	push "onmouselclick"
	push $1
	push $2
	call grmslclick,eval2
l5549:
	push _b_rewind
	cmp0
	je l5553
	cthis cisplayingsnd
	cmp0
	je l5555
	cthis isadvclass
	cmp0
	je l5557
	cthis behrewind
	jmp l5556
l5557:
	push 1
	cthis cactsndstop
l5556:
l5555:
l5553:
	end method
	method mouse_move
	cthis gui_mousemove
	cthis advstdstate
	cmp0
	je l5559
	cthis advmsmove
l5559:
	end method
	method mouse_lclick
	push gui_skipclick
	cmp0
	je l5561
	push 0
	pop gui_skipclick
	jmp l5560
l5561:
	cthis advstdstate
	cmp0
	je l5563
	cthis advmsclick
l5563:
l5560:
	end method
	method mouse_rclick
	cthis advstdstate
	cmp0
	je l5565
	cthis gui_mouserclick
	jmp l5567
l5565:
	push 0
	jmp l5567
l5566:
	push 1
l5567:
	cmp0
	je l5568
	cthis advmsrclick
l5568:
	end method
	end class

	class StdGameSave
	parent StdGame
	method init
	localstring $1
	pop $1
	push $1
	clparent StdGame,init
	end method
	method save_game
	cthis getsavename
	clparent BanGui,_save_game
	end method
	method load_game
	cthis getsavename
	clparent BanGui,_load_game
	end method
	method can_save
	clparent BanGui,can_save
	end method
	end class

	class ButtonBanshee
	parent Button
	method init
	clparent Button,init
	end method
	method onmousemove
	cthis getlock
	cmp0
	je l5570
	ret
l5570:
	push sclicked
	push "null"
	cmpjne
	cmp0
	je l5572
	push sclicked
	spushs
	push "butmoving"
	spop $a
	call [$a],hasaddedmet
	cmp0
	je l5574
	push sclicked
	spushs
	spop $a
	call [$a],butmoving
l5574:
l5572:
	localint $1
	localint $2
	call mouse,getpos
	pop $2
	pop $1
	push $1
	push $2
	push "isbutin"
	call grbuts,isinfunc
	cmp0
	je l5576
	localdef $3
	call grbuts,getsfound
	pop $3
	push $3
	push sobject
	cmpjne
	cmp0
	je l5578
	push $3
	cthis gui_canclick2v
	jmp l5580
l5578:
	push 0
	jmp l5580
l5579:
	push 1
l5580:
	cmp0
	je l5581
	cthis lastoff
	push $3
	pop sobject
	cthis getname
	push "_moveon"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	push $3
	spushs
	push "butmoveon"
	spop $a
	call [$a],hasaddedmet
	cmp0
	je l5583
	push $3
	spushs
	spop $a
	call [$a],butmoveon
l5583:
l5581:
	jmp l5575
l5576:
	cthis lastoff
l5575:
	end method
	method _butmouselclick
	cthis getname
	push "_lclick"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	push sobject
	push "null"
	cmpjne
	cmp0
	je l5585
	push sobject
	pop sclicked
	push sobject
	spushs
	push "butclick"
	spop $a
	call [$a],hasaddedmet
	cmp0
	je l5587
	push sobject
	cthis gui_canclick2v
	jmp l5589
l5587:
	push 0
	jmp l5589
l5588:
	push 1
l5589:
	cmp0
	je l5590
	push sobject
	spushs
	spop $a
	call [$a],butclick
l5590:
l5585:
	end method
	end class

	class BansheeStd
	parent StdGame
	parent BanGui
	method init
	localstring $1
	pop $1
	push $1
	clparent StdGame,init
	push PrzygodaMode
	cmp0
	je l5592
	clparent BanGui,init
	push "butgame"
	cthis deletegmobj
	new ButtonBanshee,butgame
	call banguisrc,load
	cthis initgui
	push bHOInventory
	neg
	cmp0
	je l5594
	cthis inventory_show
l5594:
	new string,save_prefix
	push "epizod"
	call clsave,get
	spushs
	push 0
	push 2
	spop $h
	call $h,getb
	push "_"
	pop $b
	popax
	add $a,$b
	push GAME
	pop $b
	popax
	add $a,$b
	push "_"
	pop $b
	popax
	add $a,$b
	pop save_prefix
l5592:
	end method
	method csubplay
	localstring $1
	pop $1
	push igmsubtitle
	cmp0
	je l5596
	localint $2
	push igmlektor
	pop $2
	push $1
	spushs
	spop $a
	call [$a],loaded
	neg
	cmp0
	je l5598
	push 0
	pop igmlektor
l5598:
	localdef $3
	push $1
	call subtitle,play
	pop $3
	push igmlektor
	cmp0
	jne l5601
	push $3
	push 0
	cmpjle
	jmp l5602
l5600:
	push 0
	jmp l5602
l5601:
	push 1
l5602:
	cmp0
	je l5603
	push $1
	spushs
	spop $a
	call [$a],play
	jmp l5599
l5603:
	push $3
	call timlektor,setdelay
	call timlektor,play
l5599:
	push igmoffsetx
	push igmoffsety
	call subtitle,geth
	pop $b
	popax
	add $a,$b
	call imgnextdialog,setpos
	push $3
	push 0
	cmpja
	cmp0
	je l5605
	push igmlektor
	jmp l5607
l5605:
	push 0
	jmp l5607
l5606:
	push 1
l5607:
	cmp0
	je l5608
	call imgnextdialog,show
l5608:
	push $2
	pop igmlektor
	jmp l5595
l5596:
	push $1
	spushs
	spop $a
	call [$a],play
l5595:
	end method
	method butpopexit
	call anpopexit,BansheeStd0
	end method
	method BansheeStd0
	cthis Button_isinalpha
	push A
	push "bholdon"
	push 0
	cthis vars2
	push "butmoveon"
	push "BansheeStd1"
	cthis addmethod
	push "butmoveoff"
	push "BansheeStd2"
	cthis addmethod
	push "butclick"
	push "BansheeStd3"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method BansheeStd1
	call mouse,getpos
	push 1
	push 1
	cthis isin
	cmp0
	je l5610
	call sfxbutmoveon2,play
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
l5610:
	end method
	method BansheeStd2
	call advmouse,setstd
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	end method
	method BansheeStd3
	cthis advstdstate
	neg
	cmp0
	jne l5613
	push bholdon
	jmp l5614
l5612:
	push 0
	jmp l5614
l5613:
	push 1
l5614:
	cmp0
	je l5615
	ret
l5615:
	call sfxbutclick2,play
	cthis mend
	end method
	method butpopexitisinramka
	push "isbutin"
	push "BansheeStd4"
	call anpopexit,addmethod
	end method
	method BansheeStd4
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 1
	cthis isin
	cmp0
	jne l5617
	push $1
	push $2
	push 1
	push 0
	call anramka,isin
	neg
	jmp l5618
l5616:
	push 0
	jmp l5618
l5617:
	push 1
l5618:
	end method
	method loadimgexitbut
	call imgbkg,Button_isin
	push "butclick"
	push "BansheeStd5"
	call imgbkg,addmethod
	push "imgbkg"
	call butgame,add
	end method
	method BansheeStd5
	cthis advstdstate
	cmp0
	je l5620
	cthis mend
l5620:
	end method
	method loadhoexit
	push HiddenShape
	cmp0
	je l5622
	ret
l5622:
	new ImgRect,anhoexit
	push 0
	call guihoinventory,getpy
	push 4
	pop $b
	popax
	sub $a,$b
	push igmappw
	push igmapph
	call anhoexit,setrect
	call guihoinventory,getz
	push 1
	pop $b
	popax
	sub $a,$b
	call anhoexit,setz
	call anhoexit,Button_isin
	push "butmoveon"
	push "BansheeStd6"
	call anhoexit,addmethod
	call anhoexit,Button_moveoffms
	push "butclick"
	push "BansheeStd7"
	call anhoexit,addmethod
	push "anhoexit"
	call butgame,add
	end method
	method BansheeStd6
	cthis canexit
	cmp0
	je l5624
	push "godd"
	call advmouse,set
l5624:
	end method
	method BansheeStd7
	cthis canexit
	cmp0
	je l5626
	push GAME
	spushs
	push "mexit_hidden"
	spop $a
	call [$a],hasmet
	cmp0
	je l5628
	cthis mexit_hidden
	jmp l5627
l5628:
	push 1000
	call mus,fadeout
	localdef $1
	push "GAME_sgmlastscene"
	call clsave,get
	pop $1
	push $1
	spushs
	push "game"
	spop $h
	call $h,strsubbs
	spushs
	push "0"
	spop $h
	call $h,strsubes
	push $1
	cthis stdexitdefadv
l5627:
l5626:
	end method
	method get_mg_save
	push save_prefix
	push "finished"
	pop $b
	popax
	add $a,$b
	end method
	method set_mg_finished
	cthis get_mg_save
	call clsave,bset
	end method
	method is_mg_finished
	cthis get_mg_save
	call clsave,bis
	end method
	method returntomenu
	push "MainMenu"
	call gameapi,play
	call ccs,buildfromscreen
	end method
	method askopis
	localstring $1
	pop $1
	push "anaskopis"
	push "$scripts/sys_gui/askopis.pyz"
	push 1000
	cthis newanima
	push "sopis"
	push $1
	call anaskopis,var2
	push igmoffsetx
	push iResX
	pop $b
	popax
	add $a,$b
	call anaskopis,getw
	pop $b
	popax
	sub $a,$b
	push igmoffsety
	call anaskopis,ansetbpos
	call anaskopis,Button_stdalpha
	call anaskopis,Button_moveon_std
	push "butclick"
	push "BansheeStd8"
	call anaskopis,addmethod
	push "anaskopis"
	call butgame,add
	end method
	method BansheeStd8
	cthis advstdstate
	cmp0
	je l5630
	push "GAME_acttutorial"
	call clsave,get
	push "T7a"
	cmpje
	cmp0
	je l5632
	cthis hide_tutorial
l5632:
	push sopis
	cthis show_mghelp
l5630:
	end method
	method mousemove
	cthis gmcontrol_mousemove
	push PrzygodaMode
	cmp0
	je l5634
	cthis gui_mousemove
l5634:
	end method
	method mouserclick
	cthis gmcontrol_mouserclick
	push PrzygodaMode
	cmp0
	je l5636
	cthis advstdstate
	cmp0
	jne l5639
	push sgmstate
	push "state_newitem_shown"
	cmpje
	jmp l5640
l5638:
	push 0
	jmp l5640
l5639:
	push 1
l5640:
	jmp l5641
l5636:
	push 0
	jmp l5641
l5637:
	push 1
l5641:
	cmp0
	je l5642
	cthis gui_mouserclick
	popax
l5642:
	end method
	method can_skip_mg
	push 0
	end method
	method skip_mg
	end method
	end class

	class Banshee
	parent BansheeStd
	method init
	localstring $1
	pop $1
	push 0
	pop bHOInventory
	push $1
	clparent BansheeStd,init
	end method
	end class

	class HOBanshee
	parent Hidden
	parent BansheeStd
	method HOBanshee_init
	localstring $1
	localstring $2
	pop $2
	pop $1
	push 1
	pop bHOInventory
	push $1
	clparent BansheeStd,init
	push $2
	cthis init_hidden
	cthis loadhoexit
	end method
	method stdhoenter
	push "HOBanshee0"
	call ccs,enter
	end method
	method HOBanshee0
	push 1
	pop igmstate
	cthis advsetstdstate
	end method
	method mtoloupe
	localstring $1
	pop $1
	localstring $2
	push GAME
	spushs
	push $1
	spop $a
	call [$a],hasvar
	cmp0
	je l5644
	push $1
	pop $2
	jmp l5643
l5644:
	push $1
	cthis istakenhoitem
	cmp0
	je l5646
	ret
l5646:
	push $1
	cthis mgetel
	pop $2
l5643:
	push $2
	cthis gui_toloupe
	call grguiloupe,last
	spushs
	spop $a
	call [$a],getz
	call guiloupemask,setz
	push $2
	spushs
	spop $a
	call [$a],hide
	push $2
	spushs
	push "myz"
	push $2
	spushs
	spop $a
	call [$a],getz
	spop $a
	call [$a],var2
	push bhoshape
	neg
	cmp0
	je l5648
	push $2
	spushs
	spop $a
	call [$a],stxtview
	spushs
	cthis holoupecol
	spop $a
	call [$a],createtxt
l5648:
	push $2
	spushs
	push "isbutin"
	push "HOBanshee1"
	spop $a
	call [$a],addmethod
	push $2
	spushs
	push "butmoveon"
	push "HOBanshee2"
	spop $a
	call [$a],addmethod
	push $2
	spushs
	push "butmoveoff"
	push "HOBanshee3"
	spop $a
	call [$a],addmethod
	end method
	method HOBanshee1
	localdef $1
	localdef $2
	pop $2
	pop $1
	cthis loupe_visible
	cmp0
	je l5650
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	push $1
	push $2
	push 0
	push 1
	cthis isin
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	jmp l5649
l5650:
	push 0
l5649:
	end method
	method holoupecol
	push 0
	push 202
	push 1
	ret
	end method
	method mhintonobj
	localstring $1
	pop $1
	push $1
	push "null"
	cmpje
	cmp0
	je l5652
	push 0
	ret
l5652:
	push $1
	cthis gui_inloupe
	cmp0
	je l5654
	push $1
	cthis showhint2v
	push "guiglass"
	cthis showhint2v
	jmp l5653
l5654:
	localdef $2
	push $1
	spushs
	spop $a
	call [$a],framenr
	pop $2
	push $1
	spushs
	push 1
	popax
	sub 0,$a
	push 0
	spop $a
	call [$a],setframe
	localstring $3
	cthis mgetfirsthint
	pop $3
	push $3
	spushs
	push $1
	spushs
	spop $a
	call [$a],getcx
	push $1
	spushs
	spop $a
	call [$a],getcy
	spop $a
	call [$a],setpos
	push $1
	spushs
	push 1
	popax
	sub 0,$a
	push $2
	spop $a
	call [$a],setframe
	push $3
	spushs
	push 600
	spop $a
	call [$a],setz
	push $3
	spushs
	push 0
	spop $a
	call [$a],play
l5653:
	push 1
	end method
	method finalpopexit
	push 8
	pop igmstate
	push "state_findbscreen"
	pop sgmstate
	push "anpopexit"
	push "anpopexitscr"
	cthis copyanima
	call anpopexit,getz
	push 1
	pop $b
	popax
	add $a,$b
	call anpopexitscr,setz
	call anpopexitscr,HOBanshee4
	end method
	method HOBanshee4
	push "isbutin"
	push "HOBanshee5"
	cthis addmethod
	push "butclick"
	push "HOBanshee6"
	cthis addmethod
	cthis getname
	call butgame,addbut
	end method
	method HOBanshee5
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 0
	cthis isin
	cmp0
	je l5656
	cthis framenr
	push 0
	cmpje
	cmp0
	je l5658
	call advmouse,setstd
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
l5658:
	push 1
	jmp l5655
l5656:
	push sgmstate
	push "state_newitem_shown"
	cmpje
	cmp0
	je l5660
	cthis framenr
	push 1
	cmpje
	cmp0
	je l5662
	call advmouse,setstd
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
l5662:
	push 1
	jmp l5659
l5660:
	push 0
l5659:
l5655:
	end method
	method HOBanshee6
	push sgmstate
	push "state_newitem_shown"
	cmpje
	cmp0
	je l5664
	cthis framenr
	push 1
	cmpje
	cmp0
	je l5666
	call sfxbutclick2,play
l5666:
	call imdbls,sbkg
	spushs
	spop $a
	call [$a],hide
	call imdbls,stxtnew
	spushs
	spop $a
	call [$a],hide
	call imdbls,sitem1
	spushs
	spop $a
	call [$a],hide
	call imdbls,sitem2
	spushs
	spop $a
	call [$a],hide
	call anpopexitscr,hide
	cthis hide
	push "state_foutdbscreen"
	pop sgmstate
	call imdbls,show
	push ishowpouptime
	push 1
	popax
	sub 0,$a
	push 1
	popax
	sub 0,$a
	push "mend"
	call imdbls,anzoomfadeinout
l5664:
	end method
	method show_double_screen
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push GAME
	spushs
	push $1
	push $2
	push $3
	spop $a
	call [$a],HOBanshee7
	end method
	method HOBanshee7
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	cthis finalpopexit
	push $1
	push "rune"
	cmpje
	cmp0
	je l5668
	push "runa"
	cthis saveitemtostack
	jmp l5667
l5668:
	push $1
	cthis saveitemtopck
l5667:
	push $2
	push "rune"
	cmpje
	cmp0
	je l5670
	push "runa"
	cthis saveitemtostack
	jmp l5669
l5670:
	push $2
	cthis saveitemtopck
l5669:
	localdef $4
	push 0.12
	pop $4
	localdef $5
	push "found"
	pop $5
	localdef $6
	push "item1"
	pop $6
	localdef $7
	push "item2"
	pop $7
	push $5
	push "found_new_items"
	call dbgame,dbget
	push "fnthogui"
	cthis guifontcolor
	cthis newtext
	push $6
	push $1
	call dbitems,dbget
	push "fnthogui"
	cthis guifontcolor
	cthis newtext
	push $7
	push $2
	call dbitems,dbget
	push "fnthogui"
	cthis guifontcolor
	cthis newtext
	localdef $8
	push igmappw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push $3
	spushs
	spop $a
	call [$a],getcx
	pop $b
	popax
	sub $a,$b
	pop $8
	localdef $9
	push igmapph
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push $3
	spushs
	spop $a
	call [$a],getcy
	pop $b
	popax
	sub $a,$b
	pop $9
	push $3
	spushs
	push $8
	push $9
	spop $a
	call [$a],setpos
	push $5
	spushs
	push $3
	spushs
	spop $a
	call [$a],getcx
	push $5
	spushs
	spop $a
	call [$a],getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push $3
	spushs
	spop $a
	call [$a],getpy
	push $4
	push $3
	spushs
	spop $a
	call [$a],geth
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	push $5
	spushs
	push 330
	spop $a
	call [$a],setz
	push $3
	spushs
	spop $a
	call [$a],getpx
	push $3
	spushs
	spop $a
	call [$a],getw
	pop $b
	popax
	add $a,$b
	call anpopexitscr,getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push 4
	pop $b
	popax
	sub $a,$b
	push $3
	spushs
	spop $a
	call [$a],getpy
	call anpopexitscr,geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	push 5
	pop $b
	popax
	add $a,$b
	call anpopexitscr,setpos
	localdef $10
	push $3
	spushs
	spop $a
	call [$a],getey
	push $6
	spushs
	spop $a
	call [$a],geth
	pop $b
	popax
	sub $a,$b
	push $6
	spushs
	spop $a
	call [$a],geth
	pop $b
	popax
	sub $a,$b
	pop $10
	push $6
	spushs
	push $3
	spushs
	spop $a
	call [$a],getcx
	push $3
	spushs
	spop $a
	call [$a],getw
	push 4
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push $6
	spushs
	spop $a
	call [$a],getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push $10
	spop $a
	call [$a],setpos
	push $6
	spushs
	push 330
	spop $a
	call [$a],setz
	push $7
	spushs
	push $3
	spushs
	spop $a
	call [$a],getcx
	push $3
	spushs
	spop $a
	call [$a],getw
	push 4
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	push $7
	spushs
	spop $a
	call [$a],getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push $10
	spop $a
	call [$a],setpos
	push $7
	spushs
	push 330
	spop $a
	call [$a],setz
	cthis set_mg_finished
	new img,imdbls
	push A
	push "sbkg"
	push $3
	push "stxtnew"
	push $5
	push "sitem1"
	push $6
	push "sitem2"
	push $7
	push "bisitempopup"
	push 1
	call imdbls,vars2
	push A
	push $3
	push $5
	push $6
	push $7
	push "anpopexitscr"
	call imdbls,imgbuildfromlist
	push $3
	spushs
	spop $a
	call [$a],hide
	push $5
	spushs
	spop $a
	call [$a],hide
	push $6
	spushs
	spop $a
	call [$a],hide
	push $7
	spushs
	spop $a
	call [$a],hide
	push 350
	call imdbls,setz
	call imdbls,hide
	push "timdbls"
	push 500
	push "HOBanshee8"
	cthis timplay
	end method
	method HOBanshee8
	call sfxopenpopup,play
	push ishowpouptime
	push 1
	push 1
	push "HOBanshee9"
	call imdbls,anzoomfadeinout
	end method
	method HOBanshee9
	cthis hide
	push sbkg
	spushs
	spop $a
	call [$a],show
	push stxtnew
	spushs
	spop $a
	call [$a],show
	push sitem1
	spushs
	spop $a
	call [$a],show
	push sitem2
	spushs
	spop $a
	call [$a],show
	call anpopexitscr,show
	push "state_newitem_shown"
	pop sgmstate
	end method
	method show_single_screen
	localstring $1
	localstring $2
	pop $2
	pop $1
	push GAME
	spushs
	push $1
	push $2
	spop $a
	call [$a],HOBanshee10
	end method
	method HOBanshee10
	localstring $1
	localstring $2
	pop $2
	pop $1
	cthis finalpopexit
	push $1
	push "rune"
	cmpje
	cmp0
	je l5672
	push "runa"
	cthis saveitemtostack
	jmp l5671
l5672:
	push $1
	cthis saveitemtopck
l5671:
	push $2
	spushs
	spop $a
	call [$a],show
	push $2
	spushs
	spop $a
	call [$a],Button_isin
	push $2
	spushs
	push "butclick"
	push "HOBanshee11"
	spop $a
	call [$a],addmethod
	push $2
	call butgame,add
	localdef $3
	push 0.12
	pop $3
	localdef $4
	push "found"
	pop $4
	localdef $5
	push "item"
	pop $5
	push $4
	push "found_new_item"
	call dbgame,dbget
	push "fnthogui"
	cthis guifontcolor
	cthis newtext
	push $5
	push $1
	call dbitems,dbget
	push "fnthogui"
	cthis guifontcolor
	cthis newtext
	localdef $6
	push igmappw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push $2
	spushs
	spop $a
	call [$a],getcx
	pop $b
	popax
	sub $a,$b
	pop $6
	localdef $7
	push igmapph
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push $2
	spushs
	spop $a
	call [$a],getcy
	pop $b
	popax
	sub $a,$b
	pop $7
	push $2
	spushs
	push $6
	push $7
	spop $a
	call [$a],setpos
	push $4
	spushs
	push $2
	spushs
	spop $a
	call [$a],getcx
	push $4
	spushs
	spop $a
	call [$a],getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push $2
	spushs
	spop $a
	call [$a],getpy
	push $3
	push $2
	spushs
	spop $a
	call [$a],geth
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	push $4
	spushs
	push 330
	spop $a
	call [$a],setz
	push $2
	spushs
	spop $a
	call [$a],getpx
	push $2
	spushs
	spop $a
	call [$a],getw
	pop $b
	popax
	add $a,$b
	call anpopexitscr,getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push 15
	pop $b
	popax
	sub $a,$b
	push $2
	spushs
	spop $a
	call [$a],getpy
	call anpopexitscr,geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	push 15
	pop $b
	popax
	add $a,$b
	call anpopexitscr,setpos
	localdef $8
	push $2
	spushs
	spop $a
	call [$a],getey
	push $5
	spushs
	spop $a
	call [$a],geth
	pop $b
	popax
	sub $a,$b
	push $5
	spushs
	spop $a
	call [$a],geth
	pop $b
	popax
	sub $a,$b
	pop $8
	push $5
	spushs
	push $2
	spushs
	spop $a
	call [$a],getcx
	push $5
	spushs
	spop $a
	call [$a],getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push $8
	spop $a
	call [$a],setpos
	push $5
	spushs
	push 330
	spop $a
	call [$a],setz
	cthis set_mg_finished
	new img,imdbls
	push A
	push "sbkg"
	push $2
	push "stxtnew"
	push $4
	push "sitem1"
	push $5
	push "sitem2"
	push $5
	push "bisitempopup"
	push 1
	call imdbls,vars2
	push A
	push $2
	push $4
	push $5
	push "anpopexitscr"
	call imdbls,imgbuildfromlist
	push $2
	spushs
	spop $a
	call [$a],hide
	push $4
	spushs
	spop $a
	call [$a],hide
	push $5
	spushs
	spop $a
	call [$a],hide
	push 350
	call imdbls,setz
	call sfxopenpopup,play
	push ishowpouptime
	push 1
	push 1
	push "HOBanshee12"
	call imdbls,anzoomfadeinout
	end method
	method HOBanshee11
	cthis advstdstate
	cmp0
	je l5674
	cthis mend
l5674:
	end method
	method HOBanshee12
	cthis hide
	push sbkg
	spushs
	spop $a
	call [$a],show
	push stxtnew
	spushs
	spop $a
	call [$a],show
	push sitem1
	spushs
	spop $a
	call [$a],show
	push sitem2
	spushs
	spop $a
	call [$a],show
	call anpopexitscr,show
	push "state_newitem_shown"
	pop sgmstate
	end method
	method HINT_CLICK
	cthis ho_hint_click
	end method
	method get_difficulty
	push "currentprofile"
	call clsmen,has
	cmp0
	je l5676
	localint $1
	push "currentprofile"
	call clsmen,get
	pop $1
	push "difficulty_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsmen,get
	ret
l5676:
	push 1
	ret
	end method
	end class

	game BanFilm
	parent StdGameSave
	method init
	push "film"
	clparent StdGameSave,init
	push PrzygodaMode
	cmp0
	je l5678
	cthis getsavename
	clparent BanGui,save_pocket
l5678:
	push "skip.pyzH 100"
	cthis img=
	push igmappw
	push igmoffsetx
	pop $b
	popax
	sub $a,$b
	call anskip,getw
	pop $b
	popax
	sub $a,$b
	push igmapph
	call anskip,geth
	pop $b
	popax
	sub $a,$b
	call anskip,setpos
	push iGuiBookZ
	push 6
	pop $b
	popax
	add $a,$b
	call anskip,setz
	push "timbloker"
	push 3000
	push "BanFilm0"
	cthis timplay
	call timbloker,start
	new Film,film1
	push iGuiBookZ
	push 5
	pop $b
	popax
	add $a,$b
	call film1,setz
	push 1
	call film1,bcenter=
	push 1
	call film1,bborders=
	push "mus"
	call film1,musicclass=
	push "onfinish"
	push "BanFilm1"
	call film1,addmethod
	new string,slastframe
	call film1,BanFilm2
	call anskip,BanFilm3
	end method
	method BanFilm0
	push 1000
	push "null"
	call anskip,anfadein
	end method
	method BanFilm1
	call ccs,buildfromscreen
	localstring $1
	call gameapi,getgamename
	pop $1
	push "nextgame_type"
	call clsave,get
	spushs
	push "-def"
	cmpst
	jne l5680
	spop $a
	push "nextgame_path"
	call clsave,get
	push "nextgame"
	call clsave,get
	cthis stdexitdefadv
	jmp l5679
l5680:
	push "-adv"
	cmpst
	jne l5681
	spop $a
	push "nextgame_path"
	call clsave,get
	push "nextgame"
	call clsave,get
	cthis stdexitadvadv
	jmp l5679
l5681:
	spop $a
	push "nextgame"
	call clsave,get
	cthis stdexit
l5679:
	end method
	method BanFilm2
	push "scripts/"
	push "filmpath"
	call clsave,get
	pop $b
	popax
	add $a,$b
	push "/"
	pop $b
	popax
	add $a,$b
	push "filmdb"
	call clsave,get
	cthis playfilm
	push sprefilm
	push iendklatka
	pop $b
	popax
	add $a,$b
	push ".jpg"
	pop $b
	popax
	add $a,$b
	pop slastframe
	end method
	method BanFilm3
	cthis Button_isin
	cthis Button_moveon_std
	cthis Button_moveoff
	push "butclick"
	push "BanFilm4"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method BanFilm4
	call film1,isplaying
	cmp0
	je l5683
	call timbloker,isplaying
	neg
	jmp l5685
l5683:
	push 0
	jmp l5685
l5684:
	push 1
l5685:
	cmp0
	je l5686
	push 1
	call film1,stop
l5686:
	end method
	method mouse_lclick
	end method
	method showfps
	push "cfps"
	cthis hasvar
	neg
	cmp0
	je l5688
	new CalcFPS,cfps
	push 14
	push 10
	push 10
	call cfps,stdset
l5688:
	call cfps,play
	end method
	end game

	game SplashScreen
	parent StdGame
	method init
	new int,exit
	push 0
	pop exit
	push "splash"
	clparent StdGame,init
	push "splash_bf"
	push "splash_bf.jpg"
	push 0
	cthis newimg
	push "splash_pw"
	push "splash_pw.jpg"
	push 1
	cthis newimg
	call splash_pw,hide
	localint $1
	push "fullscreen"
	call clsmen,get
	pop $1
	localint $2
	push 2000
	pop $2
	push $1
	cmp0
	je l5690
	push 2
	popax
	mul $2,$a
	pop $2
l5690:
	push "tim1"
	push $2
	push "SplashScreen0"
	cthis timer=
	push "tim2"
	push $2
	push "SplashScreen3"
	cthis timer=
	push "SplashScreen5"
	call ccs,enter
	end method
	method SplashScreen0
	push "SplashScreen1"
	push "SplashScreen2"
	call ccs,playfin
	end method
	method SplashScreen1
	call splash_pw,show
	end method
	method SplashScreen2
	call tim2,play
	end method
	method SplashScreen3
	push "SplashScreen4"
	push "null"
	call ccs,playfin
	end method
	method SplashScreen4
	cthis mend
	end method
	method SplashScreen5
	call ccs,buildblack
	call tim1,play
	cthis advsetstdstate
	end method
	method mend
	push "currentprofile"
	call clsmen,has
	cmp0
	je l5692
	push "startgame:"
	call dbconf,dbget
	call gameapi,play
	jmp l5691
l5692:
	push "mgCreateProfile"
	call gameapi,play
l5691:
	end method
	method mouse_lclick
	push exit
	cmp0
	je l5694
	ret
l5694:
	call tim1,isplaying
	cmp0
	je l5696
	push 1
	pop exit
	push 1
	call tim1,stop
	push "SplashScreen6"
	push "SplashScreen7"
	call ccs,playfin
	jmp l5695
l5696:
	push 1
	pop exit
	push "SplashScreen8"
	push "null"
	call ccs,playfin
l5695:
	end method
	method SplashScreen6
	call splash_pw,show
	end method
	method SplashScreen7
	call tim2,play
	cthis advsetstdstate
	push 0
	pop exit
	end method
	method SplashScreen8
	cthis mend
	cthis advsetstdstate
	end method
	end game

	game SlideshowSurvey
	parent StdGame
	method init
	new int,exit
	push 0
	pop exit
	push "slideshow_survey"
	clparent StdGame,init
	push "screen1"
	push "screen1.jpg"
	push 0
	cthis newimg
	push "screen2"
	push "screen2.jpg"
	push 1
	cthis newimg
	push "screen3"
	push "screen3.jpg"
	push 2
	cthis newimg
	push "screen4"
	push "screen4.jpg"
	push 3
	cthis newimg
	push "screen5"
	push "screen5.jpg"
	push 4
	cthis newimg
	push "screen6"
	push "screen6.jpg"
	push 5
	cthis newimg
	push "screen7"
	push "screen7.jpg"
	push 5
	cthis newimg
	call screen2,hide
	call screen3,hide
	call screen4,hide
	call screen5,hide
	call screen6,hide
	call screen7,hide
	push A
	push "gfx1.pyzGH 50"
	push "gfx2.pyzGH 50"
	push "gfx3.pyzGH 50"
	push "gfx4.pyzGH 50"
	push "gfx5.pyzGH 50"
	push "gfx6.pyzGH 50"
	push "gfx7.pyzGH 50"
	cthis imgs=
	call grgfx1,hide
	call grgfx2,hide
	call grgfx3,hide
	call grgfx4,hide
	call grgfx5,hide
	call grgfx6,hide
	call grgfx7,hide
	push "tim1"
	push 5000
	push "SlideshowSurvey0"
	cthis timer=
	push "tim2"
	push 5000
	push "SlideshowSurvey3"
	cthis timer=
	push "tim3"
	push 5000
	push "SlideshowSurvey6"
	cthis timer=
	push "tim4"
	push 5000
	push "SlideshowSurvey9"
	cthis timer=
	push "tim5"
	push 5000
	push "SlideshowSurvey12"
	cthis timer=
	push "tim6"
	push 5000
	push "SlideshowSurvey15"
	cthis timer=
	push "survey"
	call grgfx7,getsac
	spushs
	spop $a
	call [$a],SlideshowSurvey18
	push "SlideshowSurvey21"
	call ccs,enter
	end method
	method SlideshowSurvey0
	push "SlideshowSurvey1"
	push "SlideshowSurvey2"
	call ccs,playfin
	end method
	method SlideshowSurvey1
	call grgfx1,hide
	call screen2,show
	push 1
	popax
	sub 0,$a
	call grgfx2,nplay
	end method
	method SlideshowSurvey2
	call tim2,play
	end method
	method SlideshowSurvey3
	push "SlideshowSurvey4"
	push "SlideshowSurvey5"
	call ccs,playfin
	end method
	method SlideshowSurvey4
	call grgfx2,hide
	call screen3,show
	push 1
	popax
	sub 0,$a
	call grgfx3,nplay
	end method
	method SlideshowSurvey5
	call tim3,play
	end method
	method SlideshowSurvey6
	push "SlideshowSurvey7"
	push "SlideshowSurvey8"
	call ccs,playfin
	end method
	method SlideshowSurvey7
	call grgfx3,hide
	call screen4,show
	push 1
	popax
	sub 0,$a
	call grgfx4,nplay
	push "0"
	call grgfx4,getsac
	spushs
	push 500
	push "null"
	spop $a
	call [$a],anfadein
	end method
	method SlideshowSurvey8
	call tim4,play
	end method
	method SlideshowSurvey9
	push "SlideshowSurvey10"
	push "SlideshowSurvey11"
	call ccs,playfin
	end method
	method SlideshowSurvey10
	call grgfx4,hide
	call screen5,show
	push 1
	popax
	sub 0,$a
	call grgfx5,nplay
	end method
	method SlideshowSurvey11
	call tim5,play
	end method
	method SlideshowSurvey12
	push "SlideshowSurvey13"
	push "SlideshowSurvey14"
	call ccs,playfin
	end method
	method SlideshowSurvey13
	call grgfx5,hide
	call screen6,show
	push 1
	popax
	sub 0,$a
	call grgfx6,nplay
	end method
	method SlideshowSurvey14
	call tim6,play
	end method
	method SlideshowSurvey15
	push "SlideshowSurvey16"
	push "null"
	call ccs,playfin
	end method
	method SlideshowSurvey16
	call grgfx6,hide
	call screen7,show
	call grgfx7,show
	push 1
	popax
	sub 0,$a
	call grgfx7,nplay
	push "survey"
	call grgfx7,getsac
	spushs
	spop $a
	call [$a],hide
	push "2"
	call grgfx7,getsac
	spushs
	push 1000
	push "SlideshowSurvey17"
	spop $a
	call [$a],anfadein
	end method
	method SlideshowSurvey17
	push "survey"
	call grgfx7,getsac
	spushs
	push 1000
	push "null"
	spop $a
	call [$a],anfadein
	end method
	method SlideshowSurvey18
	push "isbutin"
	push "SlideshowSurvey19"
	cthis addmethod
	cthis Button_moveon_std
	cthis Button_moveoff
	push "butclick"
	push "SlideshowSurvey20"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method SlideshowSurvey19
	localdef $1
	localdef $2
	pop $2
	pop $1
	cthis advstdstate
	cmp0
	je l5697
	push $1
	push $2
	push 1
	push 0
	cthis isin
	jmp l5699
l5697:
	push 0
	jmp l5699
l5698:
	push 1
l5699:
	end method
	method SlideshowSurvey20
	cthis advstdstate
	cmp0
	je l5701
	call gameapi,exit
l5701:
	end method
	method SlideshowSurvey21
	call ccs,buildblack
	call tim1,play
	push 1
	popax
	sub 0,$a
	call grgfx1,nplay
	cthis advsetstdstate
	push "engine"
	call mus,smixer=
	push "ck1_loop.ogg -v 40 -l"
	call mus,playstr
	end method
	method mouse_lclick
	push exit
	cmp0
	je l5703
	ret
l5703:
	call tim1,isplaying
	cmp0
	je l5705
	push 1
	pop exit
	push 1
	call tim1,stop
	call grgfx1,hide
	push "SlideshowSurvey22"
	push "SlideshowSurvey23"
	call ccs,playfin
l5705:
	call tim2,isplaying
	cmp0
	je l5707
	push 1
	pop exit
	push 1
	call tim2,stop
	call grgfx2,hide
	push "SlideshowSurvey24"
	push "SlideshowSurvey25"
	call ccs,playfin
l5707:
	call tim3,isplaying
	cmp0
	je l5709
	push 1
	pop exit
	push 1
	call tim3,stop
	call grgfx3,hide
	push "SlideshowSurvey26"
	push "SlideshowSurvey27"
	call ccs,playfin
l5709:
	call tim4,isplaying
	cmp0
	je l5711
	push 1
	pop exit
	push 1
	call tim4,stop
	call grgfx4,hide
	push "SlideshowSurvey28"
	push "SlideshowSurvey29"
	call ccs,playfin
l5711:
	call tim5,isplaying
	cmp0
	je l5713
	push 1
	pop exit
	push 1
	call tim5,stop
	call grgfx5,hide
	push "SlideshowSurvey30"
	push "SlideshowSurvey31"
	call ccs,playfin
l5713:
	call tim6,isplaying
	cmp0
	je l5715
	push 1
	pop exit
	push 1
	call tim6,stop
	call grgfx6,hide
	push "SlideshowSurvey32"
	push "SlideshowSurvey34"
	call ccs,playfin
l5715:
	end method
	method SlideshowSurvey22
	call screen2,show
	push 1
	popax
	sub 0,$a
	call grgfx2,nplay
	end method
	method SlideshowSurvey23
	call tim2,play
	cthis advsetstdstate
	push 0
	pop exit
	end method
	method SlideshowSurvey24
	call screen3,show
	push 1
	popax
	sub 0,$a
	call grgfx3,nplay
	end method
	method SlideshowSurvey25
	call tim3,play
	cthis advsetstdstate
	push 0
	pop exit
	end method
	method SlideshowSurvey26
	call screen4,show
	push 1
	popax
	sub 0,$a
	call grgfx4,nplay
	push "0"
	call grgfx4,getsac
	spushs
	push 500
	push "null"
	spop $a
	call [$a],anfadein
	end method
	method SlideshowSurvey27
	call tim4,play
	cthis advsetstdstate
	push 0
	pop exit
	end method
	method SlideshowSurvey28
	call screen5,show
	push 1
	popax
	sub 0,$a
	call grgfx5,nplay
	end method
	method SlideshowSurvey29
	call tim5,play
	cthis advsetstdstate
	push 0
	pop exit
	end method
	method SlideshowSurvey30
	call screen6,show
	push 1
	popax
	sub 0,$a
	call grgfx6,nplay
	end method
	method SlideshowSurvey31
	call tim6,play
	cthis advsetstdstate
	push 0
	pop exit
	end method
	method SlideshowSurvey32
	call screen7,show
	call grgfx7,show
	push 1
	popax
	sub 0,$a
	call grgfx7,nplay
	push "survey"
	call grgfx7,getsac
	spushs
	spop $a
	call [$a],hide
	push "2"
	call grgfx7,getsac
	spushs
	push 1000
	push "SlideshowSurvey33"
	spop $a
	call [$a],anfadein
	end method
	method SlideshowSurvey33
	push "survey"
	call grgfx7,getsac
	spushs
	push 1000
	push "null"
	spop $a
	call [$a],anfadein
	end method
	method SlideshowSurvey34
	cthis advsetstdstate
	push 0
	pop exit
	end method
	end game

	game CutsceneBiblioteka
	parent StdGame
	method init
	push 1
	pop PrzygodaMode
	push "film"
	clparent StdGame,init
	push "snd1"
	push "emma_c0d0_2a"
	cthis newsndfree
	push "snd2"
	push "emma_c0d0_2b"
	cthis newsndfree
	push "skip.pyzH 100"
	cthis img=
	push igmappw
	push igmoffsetx
	pop $b
	popax
	sub $a,$b
	call anskip,getw
	pop $b
	popax
	sub $a,$b
	push igmapph
	call anskip,geth
	pop $b
	popax
	sub $a,$b
	call anskip,setpos
	push "timbloker"
	push 3000
	push "CutsceneBiblioteka0"
	cthis timplay
	call timbloker,start
	new Film,film1
	push 1
	call film1,bcenter=
	push 1
	call film1,bborders=
	push "mus"
	call film1,musicclass=
	push "scripts/cs02_kinnatbook/"
	push "film"
	call film1,load
	push "onfinish"
	push "CutsceneBiblioteka1"
	call film1,addmethod
	call film1,showfirstframe
	call film1,loadborders
	push "timstart"
	push 1000
	push "CutsceneBiblioteka2"
	cthis timplay
	call anskip,CutsceneBiblioteka3
	end method
	method CutsceneBiblioteka0
	push 1000
	push "null"
	call anskip,anfadein
	end method
	method CutsceneBiblioteka1
	cthis cisplaying
	neg
	cmp0
	je l5717
	cthis mend
l5717:
	end method
	method CutsceneBiblioteka2
	call film1,play
	end method
	method CutsceneBiblioteka3
	cthis Button_isin
	cthis Button_moveon_std
	cthis Button_moveoff
	push "butclick"
	push "CutsceneBiblioteka4"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method CutsceneBiblioteka4
	cthis cisplaying
	cmp0
	je l5719
	push 1
	cthis cactsndstop
	jmp l5718
l5719:
	call film1,isplaying
	cmp0
	je l5721
	call timbloker,isplaying
	neg
	jmp l5723
l5721:
	push 0
	jmp l5723
l5722:
	push 1
l5723:
	cmp0
	je l5724
	push 1
	call film1,stop
l5724:
l5718:
	end method
	method film_onsetframe_80
	push "snd1"
	cthis cbplay
	end method
	method film_onsetframe_220
	push "snd2"
	cthis cbplay
	end method
	method showfps
	push "cfps"
	cthis hasvar
	neg
	cmp0
	je l5726
	new CalcFPS,cfps
	push 14
	push 10
	push 10
	call cfps,stdset
l5726:
	call cfps,play
	end method
	method mend
	push "ad00_endintro"
	push "gamead00_endintro0"
	cthis stdexitdefadv
	end method
	end game

	game cs_outro3
	parent StdGame
	method init
	push 1
	pop PrzygodaMode
	push "film"
	clparent StdGame,init
	push "snd1"
	push "outro_c2_d1"
	cthis newsndfree
	push "snd2"
	push "outro_c2_d2"
	cthis newsndfree
	push "snd3"
	push "outro_c2_d3"
	cthis newsndfree
	push "snd4"
	push "outro_c2_d4"
	cthis newsndfree
	push "skip.pyzH 100"
	cthis img=
	push igmappw
	push igmoffsetx
	pop $b
	popax
	sub $a,$b
	call anskip,getw
	pop $b
	popax
	sub $a,$b
	push igmapph
	call anskip,geth
	pop $b
	popax
	sub $a,$b
	call anskip,setpos
	push "timbloker"
	push 3000
	push "cs_outro30"
	cthis timplay
	call timbloker,start
	new Film,film1
	push 1
	call film1,bcenter=
	push 1
	call film1,bborders=
	push "mus"
	call film1,musicclass=
	push "scripts/cs_outro3/"
	push "film"
	call film1,load
	push "onfinish"
	push "cs_outro31"
	call film1,addmethod
	call film1,showfirstframe
	call film1,loadborders
	call film1,play
	call anskip,cs_outro32
	end method
	method cs_outro30
	push 1000
	push "null"
	call anskip,anfadein
	end method
	method cs_outro31
	cthis cisplaying
	cmp0
	je l5728
	push 1
	cthis cactsndstop
l5728:
	cthis mend
	end method
	method cs_outro32
	cthis Button_isin
	cthis Button_moveon_std
	cthis Button_moveoff
	push "butclick"
	push "cs_outro33"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method cs_outro33
	cthis cisplaying
	cmp0
	je l5730
	push 1
	cthis cactsndstop
l5730:
	call film1,isplaying
	cmp0
	je l5732
	call timbloker,isplaying
	neg
	jmp l5734
l5732:
	push 0
	jmp l5734
l5733:
	push 1
l5734:
	cmp0
	je l5735
	push 1
	call film1,stop
l5735:
	end method
	method film_onsetframe_90
	push "snd1"
	cthis cbplay
	end method
	method film_onsetframe_160
	push "snd2"
	cthis cbplay
	end method
	method film_onsetframe_290
	push "snd3"
	cthis cbplay
	end method
	method film_onsetframe_400
	push "snd4"
	cthis cbplay
	end method
	method mend
	push "ad06_posagmamy_night"
	push "gamead06_posagmamy_night0"
	cthis stdexitdefadv
	end method
	end game

	game cs_outro4
	parent StdGame
	method init
	push 1
	pop PrzygodaMode
	push "film"
	clparent StdGame,init
	push "snd1"
	push "outro_c3_d1"
	cthis newsndfree
	push "snd2"
	push "outro_c3_d2"
	cthis newsndfree
	push "snd3"
	push "outro_c3_d3"
	cthis newsndfree
	push "snd4"
	push "outro_c3_d4"
	cthis newsndfree
	push "skip.pyzH 100"
	cthis img=
	push igmappw
	push igmoffsetx
	pop $b
	popax
	sub $a,$b
	call anskip,getw
	pop $b
	popax
	sub $a,$b
	push igmapph
	call anskip,geth
	pop $b
	popax
	sub $a,$b
	call anskip,setpos
	push "timbloker"
	push 3000
	push "cs_outro40"
	cthis timplay
	call timbloker,start
	new Film,film1
	push 1
	call film1,bcenter=
	push 1
	call film1,bborders=
	push "mus"
	call film1,musicclass=
	push "scripts/cs_outro4/"
	push "film"
	call film1,load
	push "onfinish"
	push "cs_outro41"
	call film1,addmethod
	call film1,showfirstframe
	call film1,loadborders
	call film1,play
	call anskip,cs_outro42
	end method
	method cs_outro40
	push 1000
	push "null"
	call anskip,anfadein
	end method
	method cs_outro41
	cthis cisplaying
	cmp0
	je l5737
	push 1
	cthis cactsndstop
l5737:
	cthis mend
	end method
	method cs_outro42
	cthis Button_isin
	cthis Button_moveon_std
	cthis Button_moveoff
	push "butclick"
	push "cs_outro43"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method cs_outro43
	cthis cisplaying
	cmp0
	je l5739
	push 1
	cthis cactsndstop
l5739:
	call film1,isplaying
	cmp0
	je l5741
	call timbloker,isplaying
	neg
	jmp l5743
l5741:
	push 0
	jmp l5743
l5742:
	push 1
l5743:
	cmp0
	je l5744
	push 1
	call film1,stop
l5744:
	end method
	method film_onsetframe_50
	push "snd1"
	cthis cbplay
	end method
	method film_onsetframe_100
	push "snd2"
	cthis cbplay
	end method
	method film_onsetframe_205
	push "snd3"
	cthis cbplay
	end method
	method film_onsetframe_240
	push "snd4"
	cthis cbplay
	end method
	method mend
	push "ad06_posagmamy_night"
	push "gamead06_posagmamy_night0"
	cthis stdexitdefadv
	end method
	end game

	game cs_outro6
	parent StdGame
	method init
	push 1
	pop PrzygodaMode
	push "film"
	clparent StdGame,init
	push "snd1"
	push "przewodnik_c5_d1_1"
	cthis newsndfree
	push "snd2"
	push "przewodnik_c5_d1_2"
	cthis newsndfree
	push "snd3"
	push "przewodnik_c5_d1_3"
	cthis newsndfree
	push "skip.pyzH 100"
	cthis img=
	push igmappw
	push igmoffsetx
	pop $b
	popax
	sub $a,$b
	call anskip,getw
	pop $b
	popax
	sub $a,$b
	push igmapph
	call anskip,geth
	pop $b
	popax
	sub $a,$b
	call anskip,setpos
	push "timbloker"
	push 3000
	push "cs_outro60"
	cthis timplay
	call timbloker,start
	new Film,film1
	push 1
	call film1,bcenter=
	push 1
	call film1,bborders=
	push "mus"
	call film1,musicclass=
	push "scripts/cs_outro6/"
	push "film"
	call film1,load
	push "onfinish"
	push "cs_outro61"
	call film1,addmethod
	call film1,showfirstframe
	call film1,loadborders
	call film1,play
	call anskip,cs_outro62
	end method
	method cs_outro60
	push 1000
	push "null"
	call anskip,anfadein
	end method
	method cs_outro61
	cthis cisplaying
	cmp0
	je l5746
	push 1
	cthis cactsndstop
l5746:
	cthis mend
	end method
	method cs_outro62
	cthis Button_isin
	cthis Button_moveon_std
	cthis Button_moveoff
	push "butclick"
	push "cs_outro63"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method cs_outro63
	cthis cisplaying
	cmp0
	je l5748
	push 1
	cthis cactsndstop
l5748:
	call film1,isplaying
	cmp0
	je l5750
	call timbloker,isplaying
	neg
	jmp l5752
l5750:
	push 0
	jmp l5752
l5751:
	push 1
l5752:
	cmp0
	je l5753
	push 1
	call film1,stop
l5753:
	end method
	method film_onsetframe_4
	push "snd1"
	cthis cbplay
	end method
	method film_onsetframe_90
	push "snd2"
	cthis cbplay
	end method
	method film_onsetframe_185
	push "snd3"
	cthis cbplay
	end method
	method mend
	push "ad06_posagmamy_night"
	push "gamead06_posagmamy_night0"
	cthis stdexitdefadv
	end method
	end game

	game cs_outro7
	parent StdGame
	method init
	push 1
	pop PrzygodaMode
	push "film"
	clparent StdGame,init
	push "snd1"
	push "outro_c6_d1"
	cthis newsndfree
	push "snd2"
	push "outro_c6_d2"
	cthis newsndfree
	push "snd3"
	push "outro_c6_d3"
	cthis newsndfree
	push "skip.pyzH 100"
	cthis img=
	push igmappw
	push igmoffsetx
	pop $b
	popax
	sub $a,$b
	call anskip,getw
	pop $b
	popax
	sub $a,$b
	push igmapph
	call anskip,geth
	pop $b
	popax
	sub $a,$b
	call anskip,setpos
	push "timbloker"
	push 3000
	push "cs_outro70"
	cthis timplay
	call timbloker,start
	new Film,film1
	push 1
	call film1,bcenter=
	push 1
	call film1,bborders=
	push "mus"
	call film1,musicclass=
	push "scripts/cs_outro7/"
	push "film"
	call film1,load
	push "onfinish"
	push "cs_outro71"
	call film1,addmethod
	call film1,showfirstframe
	call film1,loadborders
	call film1,play
	call anskip,cs_outro72
	end method
	method cs_outro70
	push 1000
	push "null"
	call anskip,anfadein
	end method
	method cs_outro71
	cthis cisplaying
	cmp0
	je l5755
	push 1
	cthis cactsndstop
l5755:
	cthis mend
	end method
	method cs_outro72
	cthis Button_isin
	cthis Button_moveon_std
	cthis Button_moveoff
	push "butclick"
	push "cs_outro73"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method cs_outro73
	cthis cisplaying
	cmp0
	je l5757
	push 1
	cthis cactsndstop
l5757:
	call film1,isplaying
	cmp0
	je l5759
	call timbloker,isplaying
	neg
	jmp l5761
l5759:
	push 0
	jmp l5761
l5760:
	push 1
l5761:
	cmp0
	je l5762
	push 1
	call film1,stop
l5762:
	end method
	method film_onsetframe_113
	push "snd1"
	cthis cbplay
	end method
	method film_onsetframe_174
	push "snd2"
	cthis cbplay
	end method
	method film_onsetframe_415
	push "snd3"
	cthis cbplay
	end method
	method mend
	call ccs,buildfromscreen
	push "credits"
	call gameapi,play
	end method
	end game

	game credits
	parent StdGame
	method init
	push 1
	pop PrzygodaMode
	push "credits"
	clparent StdGame,init
	push "engine"
	call mus,smixer=
	push "Angels_choirs.ogg -v 40 -l"
	call mus,playstr
	push A
	push "bkg.jpg 1"
	push "credits.pyzH 25"
	push "okienko.pyzH 50"
	push "skip.pyzH 100"
	cthis imgs=
	push igmappw
	push igmoffsetx
	pop $b
	popax
	sub $a,$b
	call anskip,getw
	pop $b
	popax
	sub $a,$b
	push igmapph
	call anskip,geth
	pop $b
	popax
	sub $a,$b
	call anskip,setpos
	push "timbloker"
	push 3000
	push "credits0"
	cthis timplay
	call timbloker,start
	new int,icredx1
	push igmappw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop icredx1
	new int,icredy1
	push igmapph
	pop icredy1
	new int,offsetx
	push 0
	pop offsetx
	localdef $1
	push 32
	pop $1
	push "fntcred_italic"
	push "configs/fonts/FreeSerifItalic.ttf"
	push $1
	cthis newfont
	push "fntcred_bold_italic"
	push "configs/fonts/FreeSerifBoldItalic.ttf"
	push $1
	cthis newfont
	push "fntcred_italic$fntcred_bold_italic"
	push $1
	push "$path:"
	push LANGDIR
	pop $b
	popax
	add $a,$b
	push "credits.db"
	pop $b
	popax
	add $a,$b
	cthis white
	push icredx1
	push icredy1
	push 5
	push 125
	push "center"
	new TextDb,tdcred
	call tdcred,getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop offsetx
	push offsetx
	popax
	sub 0,$a
	push 0
	call tdcred,move
	push "timcred"
	push "credits1"
	cthis cycle=
	call timcred,play
	call anskip,credits2
	end method
	method credits0
	push 1000
	push "null"
	call anskip,anfadein
	end method
	method credits1
	push 0
	push 1
	popax
	sub 0,$a
	call tdcred,move
	call tdcred,getey
	push 0
	cmpjl
	cmp0
	je l5764
	cthis mcredgo
l5764:
	cthis play
	end method
	method credits2
	cthis Button_isin
	cthis Button_moveon_std
	cthis Button_moveoff
	push "butclick"
	push "credits3"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method credits3
	cthis cisplaying
	cmp0
	je l5766
	push 1
	cthis cactsndstop
l5766:
	call timbloker,isplaying
	neg
	cmp0
	je l5768
	cthis mend
l5768:
	end method
	method mcredgo
	push igmappw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push offsetx
	pop $b
	popax
	sub $a,$b
	push icredy1
	call tdcred,setpos
	call tdcred,show
	end method
	method mend
	push "credits4"
	call ccs,close
	end method
	method credits4
	call ccs,buildfromscreen
	push "MainMenu"
	call gameapi,play
	end method
	end game

	new classgamepause,clpause
	new classgamemusic,clmusic
	push "sounds/bgr/"
	call clmusic,sndbgrpath
	push "sounds/music/"
	call clmusic,musicpath
	push "sounds/music.db"
	call clmusic,load
	new snd,sndakskermovon
	push "sounds/sfx/butmoveon.ogg"
	call sndakskermovon,load
	push 50
	call sndakskermovon,setvol
	class classasker2
	parent classasker
	method init
	clparent classasker,init
	new snd,sndaskexit
	push 0
	push 1
	call sndaskexit,setstartstopflag
	new snd,sndaskexitgame
	push 0
	push 1
	call sndaskexitgame,setstartstopflag
	new snd,sndyes
	push 0
	push 1
	call sndyes,setstartstopflag
	new snd,sndno
	push 0
	push 1
	call sndno,setstartstopflag
	new snd,sndaskrestart
	push 0
	push 1
	call sndaskrestart,setstartstopflag
	new snd,sndaskrestart2
	push 0
	push 1
	call sndaskrestart2,setstartstopflag
	cthis reload
	push "scripts/common/asker.pyz"
	push 12000
	cthis load
	push "sndakskermovon"
	cthis fxonmovon
	end method
	method reload
	push SNDPATH
	cthis setwavpath
	localdef $1
	cthis getsndpath
	pop $1
	push $1
	push "narexit.wav"
	pop $b
	popax
	add $a,$b
	call sndaskexit,load
	push $1
	push "narexitgame.wav"
	pop $b
	popax
	add $a,$b
	call sndaskexitgame,load
	push $1
	push "naryes.wav"
	pop $b
	popax
	add $a,$b
	call sndyes,load
	push $1
	push "narno.wav"
	pop $b
	popax
	add $a,$b
	call sndno,load
	push $1
	push "narrestart.wav"
	pop $b
	popax
	add $a,$b
	call sndaskrestart,load
	push $1
	push "narrestart.wav"
	pop $b
	popax
	add $a,$b
	call sndaskrestart2,load
	end method
	method askexittomenu
	push "sndaskexit"
	push "sndyes"
	push "sndno"
	push "myestomenu"
	push "mnotomenu"
	cthis ask
	end method
	method askexitgame
	push "sndaskexitgame"
	push "sndyes"
	push "sndno"
	push "myestomenu"
	push "mnotomenu"
	cthis ask
	end method
	method askrestart
	push "sndaskrestart"
	push "sndyes"
	push "sndno"
	push "myesrestart"
	push "mnorestart"
	cthis ask
	end method
	method askrestart2
	push "sndaskrestart2"
	push "sndyes"
	push "sndno"
	push "myesrestart"
	push "mnorestart"
	cthis ask
	end method
	method mnotomenu
	end method
	method myestomenu
	push GAME
	spushs
	push "clsave"
	spop $a
	call [$a],hasvar
	cmp0
	je l5770
	call clsave,free
l5770:
	call gameapi,getgamename
	spushs
	push "MainMenu"
	cmpst
	jne l5772
	spop $a
	push "exit"
	jmp l5771
l5772:
	spop $a
	push "MainMenu"
l5771:
	call gameapi,play
	end method
	method mnorestart
	call gameapi,getgamename
	spushs
	push "SubMenu"
	cmpst
	jne l5774
	spop $a
	push "MenuGry"
	jmp l5773
l5774:
	spop $a
	push "MainMenu"
l5773:
	call gameapi,play
	end method
	method myesrestart
	cthis crestart
	end method
	method ask
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	call ccs,isplaying
	neg
	cmp0
	je l5776
	push $1
	push $2
	push $3
	push $4
	push $5
	clparent classasker,ask
l5776:
	end method
	end class

	new classasker2,claskexit
	method LANG=
	localdef $1
	pop $1
	push $1
	pop LANG
	push "sounds/"
	pop SNDPATH
	push LANG
	push "pl"
	cmpje
	cmp0
	je l5778
	push ""
	pop LANG
l5778:
	call LANG,length
	push 0
	cmpja
	cmp0
	je l5780
	push LANG
	push "/"
	pop $b
	popax
	add $a,$b
	popax
	add SNDPATH,$a
	pop SNDPATH
l5780:
	call claskexit,reload
	end method
	new img,imglobcurs
	module clbuts
	method init
	end method
	method load
	new classbutton,buts
	push "scripts/common/buttons.pyz"
	push 4000
	push "imglobcurs"
	call buts,build
	call engine,actclassname
	push "butclick"
	call buts,transclickfunc
	call engine,actclassname
	push "butmovon"
	call buts,transmovonfunc
	call engine,actclassname
	push "butmovoff"
	call buts,transmovofffunc
	call buts,disableall
	new db,dbb
	push "scripts/common/buts.db"
	call dbb,load
	new snd,sndfxglobon
	push "sounds/sfx/globbutmovon.wav"
	call sndfxglobon,load
	push 50
	call sndfxglobon,setvol
	new def,bvisible
	push 1
	pop bvisible
	end method
	method reset
	call buts,disableall
	localdef $1
	call gameapi,getgamename
	pop $1
	localint $2
	push $1
	call dbb,findbyrow
	pop $2
	push $2
	push 0
	cmpjae
	cmp0
	je l5782
	localint $3
	push $2
	call dbb,getcolsno
	pop $3
	localint $4
	push 1
	pop $4
l5783:
	push $4
	push $3
	cmpjl
	cmp0
	je l5784
	jmp l5786
l5785:
	add $4,1
	pop $4
	jmp l5783
l5786:
	push $2
	push $4
	call dbb,get
	call buts,enable
	jmp l5785
l5784:
l5782:
	end method
	method setcursorpos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call buts,setcursorpos
	end method
	method enable
	localstring $1
	pop $1
	push $1
	call buts,enable
	end method
	method butmovon
	localstring $1
	pop $1
	call sndfxglobon,play
	call mouse,isvisible
	pop bvisible
	call mouse,show
	cthis getname
	push "_"
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	add $a,$b
	push "_butmoveon"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method butmovoff
	localstring $1
	pop $1
	push bvisible
	neg
	cmp0
	je l5788
	call mouse,hide
l5788:
	cthis getname
	push "_"
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	add $a,$b
	push "_butmoveoff"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method butclick
	localstring $1
	pop $1
	push $1
	push "pause"
	cmpje
	cmp0
	je l5790
	call clpause,pause
	jmp l5789
l5790:
	push $1
	push "menu"
	cmpje
	cmp0
	je l5792
	call gameapi,getgamename
	spushs
	push "MainMenu"
	cmpst
	jne l5794
	spop $a
	call claskexit,askexitgame
	jmp l5793
l5794:
	spop $a
	call claskexit,askexittomenu
l5793:
	jmp l5791
l5792:
	push $1
	push "restart"
	cmpje
	cmp0
	je l5796
	call claskexit,askrestart
l5796:
l5791:
l5789:
	cthis getname
	push "_"
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	add $a,$b
	push "_butclick"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	end module

	class classplacepointer2
	parent classplacepointer
	method init
	clparent classplacepointer,init
	push "scripts/common/strzalka.pyz"
	cthis load
	end method
	end class

	call clbuts,load
	push "MainLoader"
	call gameapi,play
	game MainLoader
	parent StdGame
	method init
	push "mainloader"
	clparent StdGame,init
	localdef $1
	push "saves"
	pop $1
	push "GAME_survey_mode"
	call clsave,bis
	cmp0
	jne l5799
	push igmdemo
	jmp l5800
l5798:
	push 0
	jmp l5800
l5799:
	push 1
l5800:
	cmp0
	je l5801
	push "saves_survey"
	pop $1
l5801:
	push "scripts/scripts/defaults.adv"
	call modadv,load
	push "scripts/scripts/sounds.db"
	call modadv,loadsounds
	push "snd"
	call modadv,settalktype
	push "scripts/scripts/initscript.dsc"
	call modadv,loadscript
	push $1
	push "/global.txt"
	pop $b
	popax
	add $a,$b
	call clsave,load
	cthis getname
	pop sgmlastscene
	push "currentprofile"
	call clsmen,has
	cmp0
	je l5803
	localint $2
	push "currentprofile"
	call clsmen,get
	pop $2
	push $2
	cmp0
	je l5805
	localint $3
	push "fullscreen"
	call clsmen,get
	pop $3
	cthis canchangetowindow
	neg
	cmp0
	je l5807
	push "fullscreen"
	push 1
	call clsmen,set
	push 1
	pop $3
l5807:
	push $3
	call engine,setfullscreen
	push "system_cursor"
	call clsmen,get
	pop bsystem_cursor
	push bsystem_cursor
	cmp0
	je l5809
	call mouse,hide
	call mouse,showsys
l5809:
l5805:
	jmp l5802
l5803:
	push 1
	call engine,setfullscreen
	push "fullscreen"
	push 1
	call clsmen,set
	push 0
	pop bsystem_cursor
	push "system_cursor"
	push 0
	call clsmen,set
l5802:
	push "SplashScreen"
	call gameapi,play
	end method
	end game

	new int,ifullscreen
	push 0
	pop ifullscreen
	game gameadvdef
	parent classadvstdgame2
	method init
	clparent classadvstdgame2,init
	end method
	method e1_load_loupe_brama
	call gameapi,getgamename
	spushs
	spop $a
	call [$a],gameadvdef0
	end method
	method gameadvdef0
	push "anczachy2w"
	cthis hasvar
	neg
	cmp0
	je l5811
	push "anczachy2w"
	push "$scripts/ad02_brama/czachy2w.pyz"
	push 0
	cthis newanima
	push "anczachy2w"
	call bgr1,add
	call anczachy2w,anhideonsetframe
	push 0
	call anczachy2w,play
	push "anczachy2w"
	cthis gui_toloupe
l5811:
	end method
	method e1_take_guibook
	push "guibook_fly"
	push "$scripts/ad002_kswew/guibook_fly.pyz"
	push 0
	cthis newanima
	push 0
	call guibook_fly,play
	call anguibook,getz
	push 1
	pop $b
	popax
	add $a,$b
	call guibook_fly,setz
	push "fly"
	call anguibook,play
	push "guibook_taken"
	call clsave,bset
	push "onfinish"
	push "gameadvdef1"
	call anguibook,addmethod
	end method
	method gameadvdef1
	push 0
	push 0
	cthis setpos
	end method
	method e1_take_recipe
	push GAME
	spushs
	spop $a
	call [$a],gameadvdef2
	end method
	method gameadvdef2
	new img,imprzepis
	push "anprzepis"
	call imprzepis,clone
	call anguibook,getz
	push 2
	pop $b
	popax
	add $a,$b
	call imprzepis,setz
	call sfxopenpopup,play
	push 300
	push "gameadvdef3"
	call imprzepis,anzoomin
	end method
	method gameadvdef3
	call imprzepis,unlink_internal_filter
	push GAME
	spushs
	push "time1przepis"
	push 2000
	push "gameadvdef4"
	spop $a
	call [$a],timplay
	end method
	method gameadvdef4
	push GAME
	spushs
	spop $a
	call [$a],gameadvdef5
	end method
	method gameadvdef5
	localint $1
	call imprzepis,getcx
	pop $1
	localint $2
	call imprzepis,getcy
	pop $2
	localint $3
	call imprzepis,getw
	pop $3
	localint $4
	call imprzepis,geth
	pop $4
	push $3
	popax
	sub 0,$a
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push $4
	popax
	sub 0,$a
	push 2
	pop $b
	popax
	div $a,$b
	psax
	call imprzepis,setlodxy
	push $1
	push $2
	call imprzepis,setpos
	push "imprzepis"
	push iRotoIleRot
	push iRotoIleObrotow
	clparent GuiItem,setasrototaker
	push "rototaker_endroto"
	push "gameadvdef6"
	call imprzepis,addmethod
	call sfxretitem,play
	localint $5
	call anguibook,getw
	pop $5
	localint $6
	call anguibook,geth
	pop $6
	call anguibook,getpx
	push $5
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call anguibook,getpy
	push $6
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push $3
	push $4
	push $5
	call $5,to_r
	call $3,to_r
	pop $b
	popax
	div $a,$b
	psax
	push $4
	pop $b
	popax
	mul $a,$b
	call imprzepis,rototaker_startwh
	end method
	method gameadvdef6
	cthis hide
	cthis glow_guiglass
	end method
	end game

	game gamead00_endintro0
	parent classadvstdgame2
	method init
	clparent classadvstdgame2,init
	push A
	push "e1rekator.pyzH"
	push "e1rekaset.pyzGH 20"
	cthis imgs=
	push "gamead00_endintro00"
	call gre1rekaset,each
	localint $1
	push 0
	pop $1
l5812:
	push $1
	push 4
	cmpjl
	cmp0
	je l5813
	jmp l5815
l5814:
	add $1,1
	pop $1
	jmp l5812
l5815:
	push "e1_reka_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_play"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l5817
	push $1
	cthis rekaplay
l5817:
	jmp l5814
l5813:
	end method
	method gamead00_endintro00
	localint $1
	pop $1
	push "myid"
	push $1
	push 1
	pop $b
	popax
	add $a,$b
	cthis var2
	push "onsetframe"
	push "gamead00_endintro01"
	cthis addmethod
	end method
	method gamead00_endintro01
	push myid
	push 1
	pop $b
	popax
	sub $a,$b
	push "ane1reka"
	push myid
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],framenr
	call ane1rekator,setframe
	call ane1rekator,getcx
	call ane1rekator,getcy
	cthis setpos
	end method
	method e1_getrekaid
	localstring $1
	pop $1
	push $1
	spushs
	push "zolty"
	cmpst
	jne l5819
	spop $a
	push 0
	jmp l5818
l5819:
	push "red"
	cmpst
	jne l5820
	spop $a
	push 1
	jmp l5818
l5820:
	push "blue"
	cmpst
	jne l5821
	spop $a
	push 2
	jmp l5818
l5821:
	push "miedz"
	cmpst
	jne l5822
	spop $a
	push 3
	jmp l5818
l5822:
	spop $a
	push 1
	popax
	sub 0,$a
l5818:
	end method
	method e1_dymki_loadhint
	new int,iddymekhint
	push 1
	pop iddymekhint
	push "onendframe"
	push "gamead00_endintro02"
	call andymki2,addmethod
	call andymki2,onendframe
	end method
	method gamead00_endintro02
	localint $1
	cthis framename
	cthis e1_getrekaid
	push 1
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	push 0
	cmpja
	cmp0
	je l5824
	push $1
	pop iddymekhint
l5824:
	end method
	method e1_click_dzwon
	localstring $1
	push "e1_click_dzwon"
	call clsave,get
	pop $1
	localint $2
	push "e1_dzwonki"
	call clsave,get
	pop $2
	push "e1_dzwon"
	push $2
	pop $b
	popax
	add $a,$b
	push $1
	call clsave,set
	push $2
	push 4
	cmpje
	cmp0
	je l5826
	push 1
	pop $2
	cthis recehide
	jmp l5825
l5826:
	push $1
	cthis e1_getrekaid
	localint $3
	pop $3
	push $3
	cthis rekaplay
	push "e1_reka_"
	push $3
	pop $b
	popax
	add $a,$b
	push "_play"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	add $2,1
	pop $2
l5825:
	push "e1_dzwonki"
	push $2
	call clsave,set
	localdef $4
	push "e1_dzwon1"
	call clsave,get
	pop $4
	localdef $5
	push "e1_dzwon2"
	call clsave,get
	pop $5
	localdef $6
	push "e1_dzwon3"
	call clsave,get
	pop $6
	localdef $7
	push "e1_dzwon4"
	call clsave,get
	pop $7
	push $4
	push "blue"
	cmpje
	cmp0
	je l5828
	push $5
	push "miedz"
	cmpje
	cmp0
	je l5828
	push $6
	push "red"
	cmpje
	cmp0
	je l5828
	push $7
	push "zolty"
	cmpje
	jmp l5830
l5828:
	push 0
	jmp l5830
l5829:
	push 1
l5830:
	cmp0
	jne l5832
	push $7
	push "blue"
	cmpje
	cmp0
	je l5833
	push $4
	push "miedz"
	cmpje
	cmp0
	je l5833
	push $5
	push "red"
	cmpje
	cmp0
	je l5833
	push $6
	push "zolty"
	cmpje
	jmp l5835
l5833:
	push 0
	jmp l5835
l5834:
	push 1
l5835:
	cmp0
	jne l5832
	push $6
	push "blue"
	cmpje
	cmp0
	je l5836
	push $7
	push "miedz"
	cmpje
	cmp0
	je l5836
	push $4
	push "red"
	cmpje
	cmp0
	je l5836
	push $5
	push "zolty"
	cmpje
	jmp l5838
l5836:
	push 0
	jmp l5838
l5837:
	push 1
l5838:
	cmp0
	jne l5832
	push $5
	push "blue"
	cmpje
	cmp0
	je l5839
	push $6
	push "miedz"
	cmpje
	cmp0
	je l5839
	push $7
	push "red"
	cmpje
	cmp0
	je l5839
	push $4
	push "zolty"
	cmpje
	jmp l5841
l5839:
	push 0
	jmp l5841
l5840:
	push 1
l5841:
	jmp l5842
l5831:
	push 0
	jmp l5842
l5832:
	push 1
l5842:
	cmp0
	je l5843
	push "e1_zgadla_dzwonki"
	call clsave,bset
	cthis recehide
l5843:
	end method
	method rekaplay
	localint $1
	pop $1
	push $1
	call gre1rekaset,get
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],play
	end method
	method recehide
	push "anhide"
	call gre1rekaset,eval
	localint $1
	push 0
	pop $1
l5844:
	push $1
	push 4
	cmpjl
	cmp0
	je l5845
	jmp l5847
l5846:
	add $1,1
	pop $1
	jmp l5844
l5847:
	push "e1_reka_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_play"
	pop $b
	popax
	add $a,$b
	push 0
	call clsave,set
	jmp l5846
l5845:
	end method
	method e1_hint_rece
	push "andymki2"
	cthis showhint
	push "ane1reka"
	push iddymekhint
	pop $b
	popax
	add $a,$b
	cthis showhint
	end method
	end game

	game gamead004_kspok0
	parent classadvstdgame2
	method init
	clparent classadvstdgame2,init
	end method
	method mousemove
	clparent classadvstdgame2,mousemove
	cthis advstdstate
	cmp0
	je l5849
	call mouse,getpos
	push 0
	push 1
	call anksiega,isin
	cmp0
	je l5849
	push "e1_ad004_najechana_ksiega"
	call clsave,bis
	neg
	jmp l5851
l5849:
	push 0
	jmp l5851
l5850:
	push 1
l5851:
	cmp0
	je l5852
	push "beh_ksiega_FOCUS"
	cthis playbehif
	popax
l5852:
	end method
	end game

	game mgMap
	parent Banshee
	method init
	push "mg_map"
	clparent Banshee,init
	new int,iactmap
	push "sysmap_actmap"
	call clsave,get
	pop iactmap
	push iactmap
	push 1
	cmpjl
	cmp0
	je l5854
	push 1
	pop iactmap
l5854:
	push A
	push "bkg.jpg 1"
	push "popexit.pyz 30"
	push "red.pyz 25"
	cthis imgs=
	push "grmap"
	push "map"
	push iactmap
	pop $b
	popax
	add $a,$b
	push 10
	cthis newgrimg
	push "grext"
	push "exits"
	push iactmap
	pop $b
	popax
	add $a,$b
	push 20
	cthis newgrimg
	call grmap,hide
	call grext,hide
	push "majestic_loop.ogg -v 30 -l"
	call mus,playstr
	push "txtyou"
	push "youarehere"
	call dbgame,dbget
	push "fntsubtitle"
	cthis white
	cthis newtext
	push "txtyou2"
	push "youarehere"
	call dbgame,dbget
	push "fntsubtitle"
	cthis black
	cthis newtext
	push 20
	call txtyou,setz
	push 19
	call txtyou2,setz
	push "e1_ad42_klapa_zamknieta"
	call clsave,bis
	cmp0
	je l5856
	push "e1_ad42_klapa_ponownieotwarta"
	call clsave,bis
	neg
	jmp l5858
l5856:
	push 0
	jmp l5858
l5857:
	push 1
l5858:
	cmp0
	je l5859
	push "snd_cant_move"
	push "kinnat_c4d4_31a"
	cthis newsndfree
	push "onfinish"
	push "mgMap0"
	call snd_cant_move,addmethod
l5859:
	push "mgMap1"
	call grext,eval
	cthis butpopexit
	cthis stdstart
	end method
	method mgMap0
	cthis advsetstdstate
	end method
	method mgMap1
	localstring $1
	cthis actionname
	pop $1
	push "GAME_actadvgame"
	call clsave,get
	push "game"
	push $1
	pop $b
	popax
	add $a,$b
	push "0"
	pop $b
	popax
	add $a,$b
	cmpje
	cmp0
	je l5861
	cthis getpx
	cthis getpy
	call anred,ansetbpos
	call anred,getex
	call anred,getcy
	call txtyou,geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call txtyou,setpos
	call anred,getex
	push 2
	pop $b
	popax
	add $a,$b
	call anred,getcy
	call txtyou,geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push 2
	pop $b
	popax
	add $a,$b
	call txtyou2,setpos
	push "zajety"
	cthis var
l5861:
	push "game"
	push $1
	pop $b
	popax
	add $a,$b
	push "0visited"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l5863
	cthis framename
	spushs
	push 0
	push 1
	spop $h
	call $h,gete
	call grmap,get
	spushs
	spop $a
	call [$a],show
	cthis Button_isinvis
	push "isbutin"
	push "mgMap2"
	cthis addmethod
	push "butmoveon"
	push "mgMap3"
	cthis addmethod
	push "butmoveoff"
	push "mgMap4"
	cthis addmethod
	push "butclick"
	push "mgMap5"
	cthis addmethod
	cthis getname
	call butgame,add
l5863:
	end method
	method mgMap2
	localint $1
	localint $2
	pop $2
	pop $1
	push "zajety"
	cthis hasvar
	neg
	cmp0
	je l5864
	push $1
	push $2
	push 0
	push 0
	cthis isin
	jmp l5866
l5864:
	push 0
	jmp l5866
l5865:
	push 1
l5866:
	end method
	method mgMap3
	cthis show
	call advmouse,Button_moveon_std
	end method
	method mgMap4
	cthis hide
	call advmouse,setstd
	end method
	method mgMap5
	cthis advstdstate
	cmp0
	je l5868
	localdef $1
	cthis actionname
	pop $1
	push iactmap
	push 5
	cmpje
	cmp0
	je l5870
	push "e1_ad42_klapa_zamknieta"
	call clsave,bis
	cmp0
	je l5872
	push "e1_ad42_klapa_ponownieotwarta"
	call clsave,bis
	neg
	jmp l5874
l5872:
	push 0
	jmp l5874
l5873:
	push 1
l5874:
	cmp0
	je l5875
	push "snd_cant_move"
	cthis cbplay
	ret
l5875:
l5870:
	push 1000
	call mus,fadeout
	push "stdexit"
	cthis framename
	spushs
	push 0
	push 3
	spop $a
	call $a,getb
	pop $b
	popax
	add $a,$b
	push "adv"
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	push "game"
	push $1
	pop $b
	popax
	add $a,$b
	push "0"
	pop $b
	popax
	add $a,$b
	spop $d
	cthis [$d]
l5868:
	end method
	method mend
	push 1000
	call mus,fadeout
	cthis stdexitgame
	end method
	end game

	game MainMenu
	parent StdGame
	method init
	push 0
	pop PrzygodaMode
	push "mainmenu"
	clparent StdGame,init
	push A
	push "bgrwiatrN 50"
	push "bgrlas2N 30"
	cthis sfxs=
	push A
	push "bkg.jpg"
	push "buts.pyzG 50"
	push "szkielko.pyz 51"
	push "zaslepka_exit.pyzH 52"
	push "askerbg.pyzH 100"
	push "askerno.pyzH 105"
	push "askerquit.pyzH 105"
	cthis imgs=
	push "animy.adv"
	cthis animaloader_load
	push 0
	call anszkielko,play
	new int,iProfilId
	push 0
	pop iProfilId
	push "currentprofile"
	call clsmen,has
	cmp0
	je l5877
	push "currentprofile"
	call clsmen,get
	pop iProfilId
l5877:
	push iProfilId
	pop PrzygodaNumer
	push "MainMenu0"
	call grbuts,eval
	push "play"
	call grbuts,getsac
	spushs
	push "butclick"
	push "MainMenu2"
	spop $a
	call [$a],addmethod
	cthis checktouchpad
	cmp0
	je l5888
	push "quit"
	call grbuts,getsac
	spushs
	spop $a
	call [$a],hide
	call anzaslepka_exit,show
	jmp l5887
l5888:
	push "quit"
	call grbuts,getsac
	spushs
	push "butclick"
	push "MainMenu5"
	spop $a
	call [$a],addmethod
l5887:
	push "options"
	call grbuts,getsac
	spushs
	push "butclick"
	push "MainMenu6"
	spop $a
	call [$a],addmethod
	push "profiles"
	call grbuts,getsac
	spushs
	push "butclick"
	push "MainMenu7"
	spop $a
	call [$a],addmethod
	push "welcome"
	call grbuts,getsac
	spushs
	push "butclick"
	push "MainMenu8"
	spop $a
	call [$a],addmethod
	push iProfilId
	push 0
	cmpja
	cmp0
	je l5898
	new font,fntwelcome
	push "menufont:"
	call dbconf,dbget
	push 30
	call fntwelcome,load
	push "txtwelcome"
	push "welcome"
	call dbgame,dbget
	push "fntwelcome"
	push 240
	push 109
	push 13
	cthis newtext
	push "profilename_"
	push iProfilId
	pop $b
	popax
	add $a,$b
	call clsmen,get
	call txtwelcome,txtset
	call txtwelcome,show
	push "welcome"
	call grbuts,getsac
	spushs
	spop $a
	call [$a],getcx
	call txtwelcome,getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push "welcome"
	call grbuts,getsac
	spushs
	spop $a
	call [$a],getcy
	call txtwelcome,geth
	push 4
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call txtwelcome,setpos
	push 130
	call txtwelcome,setz
l5898:
	call anaskerno,Button_isinalpha
	call anaskerno,Button_moveon_std
	call anaskerno,Button_moveoff
	push "butclick"
	push "MainMenu9"
	call anaskerno,addmethod
	push "anaskerno"
	call butgame,add
	call anaskerquit,Button_isinalpha
	call anaskerquit,Button_moveoff
	call anaskerquit,Button_moveon_std
	push "butclick"
	push "MainMenu10"
	call anaskerquit,addmethod
	push "anaskerquit"
	call butgame,add
	new gmimgvec,grasker
	push A
	push "anaskerbg"
	push "anaskerno"
	push "anaskerquit"
	call grasker,addlist
	push "MainMenu11"
	call ccs,enter
	end method
	method MainMenu0
	push "isbutin"
	push "MainMenu1"
	cthis addmethod
	cthis Button_moveon_std
	cthis Button_moveoff
	cthis getname
	call butgame,add
	end method
	method MainMenu1
	localdef $1
	localdef $2
	pop $2
	pop $1
	localdef $3
	cthis actionname
	pop $3
	cthis advstdstate
	cmp0
	je l5878
	push $1
	push $2
	push 1
	push 0
	cthis isin
	jmp l5880
l5878:
	push 0
	jmp l5880
l5879:
	push 1
l5880:
	end method
	method MainMenu2
	cthis advstdstate
	cmp0
	je l5882
	push iProfilId
	push 1
	cmpjl
	cmp0
	je l5884
	push 1
	pop iProfilId
	push 1
	pop PrzygodaMode
	push iProfilId
	pop PrzygodaNumer
	cthis setstdprofile
	push "currentprofile"
	push iProfilId
	call clsmen,set
	call ccs,buildfromscreen
	push "mgCreateProfile"
	call gameapi,play
	jmp l5883
l5884:
	push "profile_"
	push iProfilId
	pop $b
	popax
	add $a,$b
	push "_started_game"
	pop $b
	popax
	add $a,$b
	call clsmen,get
	push 1
	cmpje
	cmp0
	je l5886
	push "state_continuegame"
	pop sgmstate
	push 800
	call mus,fadeout
	push "MainMenu3"
	call ccs,close
	jmp l5885
l5886:
	push "MainMenu4"
	call ccs,close
l5885:
l5883:
l5882:
	end method
	method MainMenu3
	push 1
	pop PrzygodaMode
	cthis getsavename
	clparent BanGui,_load_game
	end method
	method MainMenu4
	push "mgGamemodes"
	call gameapi,play
	end method
	method MainMenu5
	cthis advstdstate
	cmp0
	je l5890
	cthis askexit
l5890:
	end method
	method MainMenu6
	cthis advstdstate
	cmp0
	je l5892
	call ccs,buildfromscreen
	push "mgOptions"
	call gameapi,play
l5892:
	end method
	method MainMenu7
	cthis advstdstate
	cmp0
	je l5894
	call ccs,buildfromscreen
	push "mgProfiles"
	call gameapi,play
l5894:
	end method
	method MainMenu8
	cthis advstdstate
	cmp0
	je l5896
	call ccs,buildfromscreen
	push "mgProfiles"
	call gameapi,play
l5896:
	end method
	method MainMenu9
	push sgmstate
	push "state_askexit"
	cmpje
	cmp0
	je l5900
	cthis hideasker
	cthis advsetstdstate
	cthis hide
l5900:
	end method
	method MainMenu10
	push sgmstate
	push "state_askexit"
	cmpje
	cmp0
	je l5902
	cthis mend
l5902:
	end method
	method MainMenu11
	call ccs,buildblack
	cthis advsetstdstate
	push "engine"
	call mus,smixer=
	push "ck1_loop.ogg -v 40 -l"
	call mus,playstr
	end method
	method mend
	push sgmstate
	push "state_exit"
	cmpjne
	cmp0
	je l5904
	push "state_exit"
	pop sgmstate
	push 300
	call mus,fadeout
	push "MainMenu12"
	call ccs,close
l5904:
	end method
	method MainMenu12
	call gameapi,exit
	end method
	method hideasker
	call grasker,hide
	end method
	method buildimgexit
	push A
	push "anaskerbg"
	push "anaskerno"
	push "anaskerquit"
	call imgexit,imgbuildfromlist
	end method
	method askexit
	push "state_askexit"
	pop sgmstate
	call grasker,show
	end method
	end game

	game IntroGame
	parent StdGame
	method init
	push 1
	pop PrzygodaMode
	push "film"
	clparent StdGame,init
	push "sndintro0"
	push "kinnat_intro0"
	cthis newsndfree
	push "sndintro1"
	push "kinnat_intro1"
	cthis newsndfree
	push "onfinish"
	push "mend"
	call sndintro1,addmethod
	push igmvideorecord
	neg
	cmp0
	je l5906
	push "skip.pyzH 100"
	cthis img=
l5906:
	cthis checktouchpad
	cmp0
	je l5908
	new video,myvideo
	push "video/intro.mpg"
	push 0
	push 0
	push 1366
	push 768
	call myvideo,play
	cthis mend
	jmp l5907
l5908:
	push igmvideorecord
	neg
	cmp0
	je l5910
	push igmappw
	push igmoffsetx
	pop $b
	popax
	sub $a,$b
	call anskip,getw
	pop $b
	popax
	sub $a,$b
	push igmapph
	call anskip,geth
	pop $b
	popax
	sub $a,$b
	call anskip,setpos
	push "timbloker"
	push 3000
	push "IntroGame0"
	cthis timplay
	call timbloker,start
l5910:
	new Film,film1
	push 1
	call film1,bcenter=
	push 1
	call film1,bborders=
	push "mus"
	call film1,musicclass=
	push "scripts/cs000_intro/"
	push "film"
	call film1,load
	push "onfinish"
	push "IntroGame1"
	call film1,addmethod
	call film1,showfirstframe
	call film1,loadborders
	push "timstart"
	push 1000
	push "IntroGame2"
	cthis timplay
	push igmvideorecord
	neg
	cmp0
	je l5914
	call anskip,IntroGame3
l5914:
l5907:
	end method
	method IntroGame0
	push 1000
	push "null"
	call anskip,anfadein
	end method
	method IntroGame1
	cthis cisplaying
	neg
	cmp0
	je l5912
	cthis mend
l5912:
	end method
	method IntroGame2
	call film1,play
	end method
	method IntroGame3
	cthis Button_isin
	cthis Button_moveon_std
	cthis Button_moveoff
	push "butclick"
	push "IntroGame4"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method IntroGame4
	cthis cisplaying
	cmp0
	je l5916
	push 1
	cthis cactsndstop
	jmp l5915
l5916:
	call film1,isplaying
	cmp0
	je l5918
	call timbloker,isplaying
	neg
	jmp l5920
l5918:
	push 0
	jmp l5920
l5919:
	push 1
l5920:
	cmp0
	je l5921
	push 1
	call film1,stop
l5921:
l5915:
	end method
	method film_onsetframe_15
	push "sndintro0"
	cthis cbplay
	end method
	method film_onsetframe_500
	push "sndintro1"
	cthis cbplay
	end method
	method mend
	push "GAME_after_intro"
	call clsave,bset
	push "ad001_kszew"
	push "gamead001_kszew0"
	cthis stdexitdefadv
	end method
	end game

	game mgBook
	parent Banshee
	method init
	push "sys_mgbook"
	clparent Banshee,init
	push A
	push "bkg.jpg"
	push "nextp.pyzH 50"
	push "prevp.pyzH 50"
	push "nakladki.pyzG 20"
	push "zak.pyzGH 10"
	push "pageleft.pyzH"
	push "pageright.pyzH"
	push "popexit.pyz 150"
	push "headerl.pyzH"
	push "headerp.pyzH"
	push "posp.pyzH"
	push "posl.pyzH"
	push "ptakl.pyzH 10"
	push "ptakp.pyzH"
	push "skresll.pyzH 10"
	push "skreslp.pyzH 10"
	push "txtobj.pyzH"
	push "n004_monety.pyzGH 15"
	push "n020a_znaki.pyzGH 16"
	cthis imgs=
	push "anpagel"
	call anpageleft,addtogamevars
	push "anpagep"
	call anpageright,addtogamevars
	cthis butpopexit
	push A
	push "book2"
	push "book3"
	push "medalionleft"
	cthis sfxs=
	push "libstart2.ogg -v 50 libloop2.ogg -v 50 -l"
	call mus,playstr
	new db,dbl
	push LANGDIR
	push "sys_book_story.db"
	pop $b
	popax
	add $a,$b
	call dbl,load
	new db,dbm
	push LANGDIR
	push "sys_magic_story.db"
	pop $b
	popax
	add $a,$b
	call dbm,load
	localstring $1
	push "hoguifont:"
	call dbconf,dbget
	pop $1
	push $1
	push "null"
	cmpje
	cmp0
	je l5923
	push sgmfontitalic
	pop $1
l5923:
	localstring $2
	push "hoguifont:"
	call dbconf,dbget
	pop $2
	push $2
	push "null"
	cmpje
	cmp0
	je l5925
	push sgmfontitalic
	pop $2
l5925:
	push "fntnote"
	push $1
	push 20
	spushs
	spop $h
	call $h,igetsc
	cthis newfont
	push "fntitle"
	push $1
	push 28
	spushs
	spop $h
	call $h,igetsc
	cthis newfont
	push "fntfold"
	push $2
	push 17
	spushs
	spop $h
	call $h,igetsc
	cthis newfont
	push "txtfold"
	push ""
	push "fntfold"
	cthis black
	cthis newtext
	push "txtpage"
	push ""
	push "fntnote"
	cthis black
	cthis newtext
	push "txtitl"
	push ""
	push "fntitle"
	cthis black
	cthis newtext
	push "txtitp"
	push ""
	push "fntitle"
	cthis black
	cthis newtext
	push "txtpnl"
	push ""
	push "fntitle"
	cthis black
	cthis newtext
	push "txtpnp"
	push ""
	push "fntitle"
	cthis black
	cthis newtext
	new anima,anpl
	new anima,anpp
	new img,imgtxtl
	new img,imgtxtp
	new anima,antxt
	new gmimgvec,grnotel
	new gmimgvec,grnotep
	push A
	push "anpl"
	push "imgtxtl"
	push "txtitl"
	push "txtpnl"
	call grnotel,addlist
	push A
	push "anpp"
	push "imgtxtp"
	push "txtitp"
	push "txtpnp"
	call grnotep,addlist
	new gmimgvec,grnote
	push A
	push "grnotel"
	push "grnotep"
	push "grn004_monety"
	call grnote,addlist
	new int,ioffsetp
	call anposp,getpx
	call anposl,getpx
	pop $b
	popax
	sub $a,$b
	pop ioffsetp
	new gmimgvec,grznaki
	push A
	push "grn020a_znaki"
	call grznaki,addlist
	new img,imgobj
	new gmimgvec,grobj
	push "imgobj"
	call grobj,add
	new vector,vobj
	new img,imgmag
	new img,imgmagpic
	new gmimgvec,grmag
	push "imgmag"
	call grmag,add
	new int,iilemag
	localint $3
	push 0
	pop $3
l5926:
	push $3
	push 16
	cmpjl
	cmp0
	je l5927
	jmp l5929
l5928:
	add $3,1
	pop $3
	jmp l5926
l5929:
	push "imgmagznak"
	push $3
	pop $b
	popax
	add $a,$b
	spushs
	spop $e
	new img,[$e]
	jmp l5928
l5927:
	localstring $4
	push "note"
	call grzak,getsac
	pop $4
	localreal $5
	push 0.35
	pop $5
	localreal $6
	push 0.35
	pop $6
	push "book_notes"
	call dbgame,findbyrow
	push $4
	spushs
	spop $a
	call [$a],getpx
	push $5
	push $4
	spushs
	spop $a
	call [$a],getw
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	push $4
	spushs
	spop $a
	call [$a],getpy
	push $6
	push $4
	spushs
	spop $a
	call [$a],geth
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	cthis mprintfold
	push "objectives"
	call grzak,getsac
	pop $4
	push "book_objectives"
	call dbgame,findbyrow
	push $4
	spushs
	spop $a
	call [$a],getpx
	push $5
	push $4
	spushs
	spop $a
	call [$a],getw
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	push $4
	spushs
	spop $a
	call [$a],getpy
	push 0.25
	push $4
	spushs
	spop $a
	call [$a],geth
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	cthis mprintfold
	push "magic"
	call grzak,getsac
	pop $4
	push "sysbook_magicile_pages"
	call clsave,has
	neg
	cmp0
	je l5931
	push 64
	cthis grey
	call txtfold,createtxt
l5931:
	push "book_magic"
	call dbgame,findbyrow
	push $4
	spushs
	spop $a
	call [$a],getex
	push $5
	push $4
	spushs
	spop $a
	call [$a],getw
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	sub $a,$b
	call fntfold,getsize
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push $4
	spushs
	spop $a
	call [$a],getpy
	push $6
	push $4
	spushs
	spop $a
	call [$a],geth
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	cthis mprintfold
	cthis black
	call txtfold,createtxt
	push ""
	call txtfold,txtset
	localdef $7
	push "mgBook0"
	pop $7
	push $7
	spushs
	spop $d
	call annextp,[$d]
	push "butclick"
	push "mgBook3"
	call annextp,addmethod
	push $7
	spushs
	spop $d
	call anprevp,[$d]
	push "butclick"
	push "mgBook4"
	call anprevp,addmethod
	new string,sactivepage
	push "null"
	pop sactivepage
	push "mgBook5"
	call grzak,eval
	cthis show_actfold
	push "mgBook9"
	call ccs,enter
	end method
	method mgBook0
	cthis Button_isinvisalpha
	push "butmoveon"
	push "mgBook1"
	cthis addmethod
	push "butmoveoff"
	push "mgBook2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mgBook1
	push 200
	push "null"
	cthis anfadein
	call advmouse,setstd
	end method
	method mgBook2
	push 200
	push "null"
	cthis anfadeout
	call advmouse,setstd
	end method
	method mgBook3
	cthis advstdstate
	cmp0
	je l5933
	push GAME
	spushs
	push 2
	spop $a
	call [$a],nextpage
l5933:
	end method
	method mgBook4
	cthis advstdstate
	cmp0
	je l5935
	push GAME
	spushs
	push 2
	popax
	sub 0,$a
	spop $a
	call [$a],nextpage
l5935:
	end method
	method mgBook5
	push A
	push "bactive"
	push 0
	cthis vars2
	cthis Button_isinvis
	push "butmoveon"
	push "mgBook6"
	cthis addmethod
	push "butmoveoff"
	push "mgBook7"
	cthis addmethod
	push "butclick"
	push "mgBook8"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mgBook6
	cthis show
	call advmouse,setstd
	end method
	method mgBook7
	push bactive
	neg
	cmp0
	je l5937
	cthis hide
l5937:
	call advmouse,setstd
	end method
	method mgBook8
	cthis advstdstate
	cmp0
	je l5939
	localdef $1
	cthis actionname
	pop $1
	push $1
	push "magic"
	cmpje
	cmp0
	je l5941
	push "sysbook_magicile_pages"
	call clsave,has
	neg
	jmp l5943
l5941:
	push 0
	jmp l5943
l5942:
	push 1
l5943:
	cmp0
	je l5944
	jmp l5940
l5944:
	push $1
	cthis getactfold
	cmpjne
	cmp0
	je l5946
	call fxbook3,play
l5946:
	push GAME
	spushs
	push $1
	spop $a
	call [$a],show_zakladka
l5940:
l5939:
	end method
	method mgBook9
	cthis advsetstdstate
	end method
	method restore_imgobj
	push igmappw
	push igmapph
	cthis transparent
	call imgobj,create
	push 30
	call imgobj,setz
	end method
	method mprintfold
	localint $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	localint $4
	push 1
	pop $4
l5947:
	push $4
	push $1
	call dbgame,getcolsno
	cmpjl
	cmp0
	je l5948
	jmp l5950
l5949:
	add $4,1
	pop $4
	jmp l5947
l5950:
	push $1
	push $4
	call dbgame,get
	call txtfold,txtset
	push $2
	push $3
	call txtfold,setpos
	push "txtfold"
	call imgbkg,blit
	call txtfold,geth
	popax
	add $3,$a
	pop $3
	jmp l5949
l5948:
	end method
	method show_actfold
	cthis getactfold
	cthis show_zakladka
	end method
	method getactfold
	push "sysbook_actfold"
	call clsave,get
	end method
	method show_zakladka
	localstring $1
	pop $1
	push $1
	push "magic"
	cmpje
	cmp0
	je l5952
	push "sysbook_magicile_pages"
	call clsave,has
	neg
	jmp l5954
l5952:
	push 0
	jmp l5954
l5953:
	push 1
l5954:
	cmp0
	je l5955
	ret
l5955:
	push $1
	push "null"
	cmpje
	cmp0
	je l5957
	push "note"
	pop $1
l5957:
	push "sysbook_actfold"
	push $1
	call clsave,set
	push sactivepage
	push "null"
	cmpjne
	cmp0
	je l5959
	push sactivepage
	spushs
	push 0
	spop $a
	call [$a],bactive=
	push sactivepage
	spushs
	spop $a
	call [$a],hide
l5959:
	localstring $2
	push $1
	call grzak,getsac
	pop $2
	push $2
	pop sactivepage
	push $2
	spushs
	push 1
	spop $a
	call [$a],bactive=
	call grnakladki,show
	push $1
	cthis hidenak
	cthis hide_folds
	localstring $3
	push "sysbook_show_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,get
	pop $3
	push $3
	push "null"
	cmpje
	cmp0
	je l5961
	push $1
	cthis show_cur_page
	jmp l5960
l5961:
	push $1
	push $3
	cthis show_obj_page
	push "sysbook_show_"
	push $1
	pop $b
	popax
	add $a,$b
	push "null"
	call clsave,set
l5960:
	end method
	method hide_folds
	call grnote,hide
	call grobj,hide
	call grmag,hide
	call grn020a_znaki,hide
	end method
	method hidenak
	localstring $1
	pop $1
	push $1
	call grnakladki,getsac
	spushs
	spop $a
	call [$a],hide
	end method
	method mend
	push 1000
	call mus,fadeout
	cthis stdexitgame
	end method
	method show_cur_page
	localstring $1
	pop $1
	localint $2
	push "sysbook_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_curpage"
	pop $b
	popax
	add $a,$b
	call clsave,get
	pop $2
	push $2
	push 0
	cmpje
	cmp0
	je l5963
	push "sysbook_"
	push $1
	pop $b
	popax
	add $a,$b
	push "ile_pages"
	pop $b
	popax
	add $a,$b
	call clsave,get
	pop $2
	push $2
	push 0
	cmpje
	cmp0
	je l5965
	ret
l5965:
	push "sysbook_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_curpage"
	pop $b
	popax
	add $a,$b
	push $2
	call clsave,set
l5963:
	push $1
	push $2
	cthis show_page
	end method
	method show_page
	localstring $1
	localint $2
	pop $2
	pop $1
	push $2
	push 0
	cmpjl
	cmp0
	je l5967
	push 1
	pop $2
l5967:
	localint $3
	localint $4
	push $2
	push 2
	pop $b
	popax
	div $a,$b
	push $d
	cmp0
	je l5969
	push $2
	pop $3
	push $2
	push 1
	pop $b
	popax
	add $a,$b
	pop $4
	jmp l5968
l5969:
	push $2
	push 1
	pop $b
	popax
	sub $a,$b
	pop $3
	push $2
	pop $4
l5968:
	push $1
	push "objectives"
	cmpje
	cmp0
	je l5971
	cthis restore_imgobj
l5971:
	push $1
	push "magic"
	cmpje
	cmp0
	je l5973
	push $3
	cthis show_magicpage
	jmp l5972
l5973:
	call grn004_monety,hide
	call grn020a_znaki,hide
	push 0
	push 0
	call grn004_monety,setpos
	push 0
	push 0
	call grn020a_znaki,setpos
	push "show_"
	push $1
	pop $b
	popax
	add $a,$b
	push "dir"
	pop $b
	popax
	add $a,$b
	spushs
	push "l"
	push $3
	spop $d
	cthis [$d]
	push "show_"
	push $1
	pop $b
	popax
	add $a,$b
	push "dir"
	pop $b
	popax
	add $a,$b
	spushs
	push "p"
	push $4
	spop $d
	cthis [$d]
l5972:
	end method
	method enable_note
	localstring $1
	pop $1
	localint $2
	push "sysbook_note_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,get
	pop $2
	push $2
	push 0
	cmpje
	cmp0
	je l5975
	push 1
	push "sysbook_noteile_pages"
	call clsave,get
	pop $b
	popax
	add $a,$b
	pop $2
	push "sysbook_noteile_pages"
	push $2
	call clsave,set
	push "sysbook_note_"
	push $1
	pop $b
	popax
	add $a,$b
	push $2
	call clsave,set
	push "sysbook_notepage_"
	push $2
	pop $b
	popax
	add $a,$b
	push $1
	call clsave,set
l5975:
	push "sysbook_note_curpage"
	push $2
	call clsave,set
	end method
	method enable_objectives
	localstring $1
	pop $1
	localint $2
	push "sysbook_objectives_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,get
	pop $2
	push $2
	push 0
	cmpje
	cmp0
	je l5977
	localint $3
	push "sysbook_objectives_lastsubpage"
	call clsave,get
	pop $3
	push $3
	push 0
	cmpje
	cmp0
	jne l5980
	push $3
	push 4
	cmpje
	jmp l5981
l5979:
	push 0
	jmp l5981
l5980:
	push 1
l5981:
	cmp0
	je l5982
	push 1
	push "sysbook_objectivesile_pages"
	call clsave,get
	pop $b
	popax
	add $a,$b
	pop $2
	push 1
	pop $3
	jmp l5978
l5982:
	push "sysbook_objectives_curpage"
	call clsave,get
	pop $2
	add $3,1
	pop $3
l5978:
	push "sysbook_objectives_lastsubpage"
	push $3
	call clsave,set
	push "sysbook_objectives_"
	push $1
	pop $b
	popax
	add $a,$b
	push $2
	call clsave,set
	push "sysbook_objectives_subpagesinpage_"
	push $2
	pop $b
	popax
	add $a,$b
	push $3
	call clsave,set
	push "sysbook_objectivespage_"
	push $3
	pop $b
	popax
	add $a,$b
	push "_"
	pop $b
	popax
	add $a,$b
	push $2
	pop $b
	popax
	add $a,$b
	push $1
	call clsave,set
	push "sysbook_objectivesile_pages"
	push $2
	call clsave,set
l5977:
	push "sysbook_objectives_curpage"
	push $2
	call clsave,set
	end method
	method enable_magic
	localstring $1
	pop $1
	localint $2
	push "sysbook_magic_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,get
	pop $2
	push $2
	push 0
	cmpje
	cmp0
	je l5984
	localint $3
	push "sysbook_magicile_pages"
	call clsave,get
	pop $3
	push $3
	push 0
	cmpje
	cmp0
	je l5986
	push 1
	pop $2
	jmp l5985
l5986:
	push $3
	push 2
	pop $b
	popax
	add $a,$b
	pop $2
l5985:
	push "sysbook_magicile_pages"
	push $2
	call clsave,set
	push "sysbook_magic_"
	push $1
	pop $b
	popax
	add $a,$b
	push $2
	call clsave,set
	push "sysbook_magicpage_"
	push $2
	pop $b
	popax
	add $a,$b
	push $1
	call clsave,set
l5984:
	push "sysbook_magic_curpage"
	push $2
	call clsave,set
	end method
	method show_notedir
	localstring $1
	localint $2
	pop $2
	pop $1
	localstring $3
	push "sysbook_notepage_"
	push $2
	pop $b
	popax
	add $a,$b
	call clsave,get
	pop $3
	localint $4
	push $3
	call dbl,findbyrow
	pop $4
	push $4
	push 0
	cmpjl
	cmp0
	je l5988
	push "grnote"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],hide
	ret
l5988:
	localstring $5
	push "txtit"
	push $1
	pop $b
	popax
	add $a,$b
	pop $5
	push $5
	spushs
	push $4
	push 1
	call dbl,get
	spop $a
	call [$a],txtset
	push $5
	spushs
	push "anheader"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getcx
	push $5
	spushs
	spop $a
	call [$a],getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push "anheader"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getcy
	push $5
	spushs
	spop $a
	call [$a],geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setpos
	push "anp"
	push $1
	pop $b
	popax
	add $a,$b
	pop $5
	push $5
	spushs
	push $3
	push "_gfx.pyz"
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],pathload
	push $3
	push "_txt.pyz"
	pop $b
	popax
	add $a,$b
	call antxt,pathload
	call antxt,hide
	push "imgtxt"
	push $1
	pop $b
	popax
	add $a,$b
	pop $5
	push $5
	spushs
	push $4
	push 2
	call dbl,get
	push "antxt"
	push "txtpage"
	call fntnote,getsize
	push 4
	pop $b
	popax
	add $a,$b
	push 1
	spop $a
	call [$a],imgfittxt
	push $5
	spushs
	push 5
	spop $a
	call [$a],setz
	call txtpage,hide
	push $2
	push $1
	cthis print_page
	push "grnote"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],show
	push $1
	push "p"
	cmpje
	cmp0
	je l5990
	push ioffsetp
	push 0
	call anpp,move
	push ioffsetp
	push 0
	call imgtxtp,move
l5990:
	push $3
	push "n004"
	cmpje
	cmp0
	je l5992
	push "mgBook10"
	call grn004_monety,eval
	push $1
	push "p"
	cmpje
	cmp0
	je l5996
	push ioffsetp
	push 0
	call grn004_monety,setpos
l5996:
l5992:
	push $3
	push "n020a"
	cmpje
	cmp0
	je l5998
	call grn020a_znaki,hide
	push "mgBook11"
	call grn020a_znaki,eval
	push $1
	push "p"
	cmpje
	cmp0
	je l6035
	push ioffsetp
	push 0
	call grn020a_znaki,setpos
l6035:
l5998:
	end method
	method mgBook10
	push "takenan_anmoneta"
	cthis actionname
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l5994
	cthis show
l5994:
	end method
	method mgBook11
	cthis actionname
	push "woda"
	cmpje
	cmp0
	je l6000
	push "e1_mg22_palenisko_woda_dodana"
	call clsave,bis
	jmp l6002
l6000:
	push 0
	jmp l6002
l6001:
	push 1
l6002:
	cmp0
	je l6003
	cthis show
	jmp l5999
l6003:
	cthis actionname
	push "fluid"
	cmpje
	cmp0
	je l6005
	push "e1_mg22_palenisko_fluid_dodany"
	call clsave,bis
	jmp l6007
l6005:
	push 0
	jmp l6007
l6006:
	push 1
l6007:
	cmp0
	je l6008
	cthis show
	jmp l6004
l6008:
	cthis actionname
	push "ziarna"
	cmpje
	cmp0
	je l6010
	push "e1_mg22_palenisko_ziarna_dodane"
	call clsave,bis
	jmp l6012
l6010:
	push 0
	jmp l6012
l6011:
	push 1
l6012:
	cmp0
	je l6013
	cthis show
	jmp l6009
l6013:
	cthis actionname
	push "frog_leg"
	cmpje
	cmp0
	je l6015
	push "e1_mg22_palenisko_frog_leg_dodana"
	call clsave,bis
	jmp l6017
l6015:
	push 0
	jmp l6017
l6016:
	push 1
l6017:
	cmp0
	je l6018
	cthis show
	jmp l6014
l6018:
	cthis actionname
	push "spell"
	cmpje
	cmp0
	je l6020
	push "e1_mg22_palenisko_mikstura_zrobiona"
	call clsave,bis
	jmp l6022
l6020:
	push 0
	jmp l6022
l6021:
	push 1
l6022:
	cmp0
	je l6023
	cthis show
	jmp l6019
l6023:
	cthis actionname
	push "arat"
	cmpje
	cmp0
	je l6025
	push "e1_mg25_lustro_finished"
	call clsave,bis
	jmp l6027
l6025:
	push 0
	jmp l6027
l6026:
	push 1
l6027:
	cmp0
	je l6028
	cthis show
	jmp l6024
l6028:
	cthis actionname
	push "ron"
	cmpje
	cmp0
	je l6030
	push "e1_mg28_luneta_finished"
	call clsave,bis
	jmp l6032
l6030:
	push 0
	jmp l6032
l6031:
	push 1
l6032:
	cmp0
	je l6033
	cthis show
l6033:
l6024:
l6019:
l6014:
l6009:
l6004:
l5999:
	end method
	method show_objectivesdir
	localstring $1
	localint $2
	pop $2
	pop $1
	localint $3
	push "sysbook_objectives_subpagesinpage_"
	push $2
	pop $b
	popax
	add $a,$b
	call clsave,get
	pop $3
	push $3
	push 0
	cmpje
	cmp0
	je l6037
	ret
l6037:
	localint $4
	push 1
	pop $4
l6038:
	push $4
	push $3
	cmpjle
	cmp0
	je l6039
	jmp l6041
l6040:
	add $4,1
	pop $4
	jmp l6038
l6041:
	localstring $5
	push "sysbook_objectivespage_"
	push $4
	pop $b
	popax
	add $a,$b
	push "_"
	pop $b
	popax
	add $a,$b
	push $2
	pop $b
	popax
	add $a,$b
	call clsave,get
	pop $5
	localint $6
	push $5
	call dbobject,findbyrow
	pop $6
	push $6
	push 0
	cmpjae
	cmp0
	je l6043
	push $1
	push $4
	pop $b
	popax
	add $a,$b
	push 0
	call antxtobj,setframe
	push $6
	push 1
	push 1
	popax
	sub 0,$a
	push " "
	call dbobject,dbrowtostring
	push "antxtobj"
	push "txtitl"
	call fntnote,getsize
	push 3
	pop $b
	popax
	add $a,$b
	push 0
	call imgobj,imgfittxt
	push "objectiveid_"
	push $5
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l6045
	call antxtobj,getex
	call antxtobj,getcy
	call anptakl,geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call anptakl,ansetbpos
	push "anptakl"
	call imgobj,blit
l6045:
l6043:
	jmp l6040
l6039:
	push $2
	push $1
	cthis print_page
	push "txtpn"
	push $1
	pop $b
	popax
	add $a,$b
	call imgobj,blit
	call imgobj,show
	end method
	method show_magicpage
	localint $1
	pop $1
	push "sysbook_to_show"
	call clsave,bis
	cmp0
	je l6047
	push "sysbook_to_show_page"
	call clsave,get
	pop $1
	push "magic"
	call anguibookmagic,play
	call anguibookmagic,hide
l6047:
	localstring $2
	push "sysbook_magicpage_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,get
	pop $2
	localint $3
	push $2
	call dbm,findbyrow
	pop $3
	push $3
	push 0
	cmpjl
	cmp0
	je l6049
	call grmag,hide
	ret
l6049:
	push 0
	pop iilemag
	push "anmagbg"
	push $2
	push "_bkg.pyz"
	pop $b
	popax
	add $a,$b
	push 0
	cthis newanima
	push igmappw
	push igmapph
	cthis transparent
	call imgmag,create
	push "anmagbg"
	call imgmag,blit
	delete anmagbg
	localint $4
	push 24
	pop $4
	push "anmagznak"
	push $2
	push "_znaki.pyz"
	pop $b
	popax
	add $a,$b
	push 0
	cthis newanima
	localint $5
	push 1
	pop $5
	localint $6
	push 0
	pop $6
l6050:
	push $6
	call anmagznak,nofactions
	cmpjl
	cmp0
	je l6051
	jmp l6053
l6052:
	add $6,1
	pop $6
	jmp l6050
l6053:
	push $6
	push 0
	call anmagznak,setframe
	push "e1_an"
	call anmagznak,actionname
	pop $b
	popax
	add $a,$b
	push "_wziety"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l6055
	push "e1_an"
	call anmagznak,actionname
	pop $b
	popax
	add $a,$b
	push "_odsloniety"
	pop $b
	popax
	add $a,$b
	call clsave,bgo
	cmp0
	je l6057
	push 0
	pop $5
	localstring $7
	push "imgmagznak"
	push iilemag
	pop $b
	popax
	add $a,$b
	pop $7
	add iilemag,1
	pop iilemag
	push $7
	spushs
	push "anmagznak"
	spop $a
	call [$a],clone
	push $7
	spushs
	push $4
	spop $a
	call [$a],setz
	push "state_enablekulfon"
	pop sgmstate
	call fxmedalionleft,playif
	push $7
	spushs
	push 1000
	push "mgBook12"
	spop $a
	call [$a],anfadein
	jmp l6056
l6057:
	push "anmagznak"
	call imgmag,blit
l6056:
	jmp l6054
l6055:
	push 0
	pop $5
l6054:
	jmp l6052
l6051:
	delete anmagznak
	push $5
	cmp0
	jne l6066
	push "sysbook_to_show"
	call clsave,bis
	jmp l6067
l6065:
	push 0
	jmp l6067
l6066:
	push 1
l6067:
	cmp0
	je l6068
	push "sysbook_to_show"
	push 0
	call clsave,set
	localstring $7
	localint $8
	push "sysbook_magic_page_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_complete"
	pop $b
	popax
	add $a,$b
	call clsave,bgo
	pop $8
	push "anmagstory"
	push $2
	push "_story.pyz"
	pop $b
	popax
	add $a,$b
	push 0
	cthis newanima
	push $8
	cmp0
	je l6070
	push "imgmagpic"
	pop $7
	localdef $9
	push igmappw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $9
	push $9
	push igmapph
	cthis transparent
	call imgmagpic,create
	push $9
	push 0
	call imgmagpic,setpos
	push $4
	call imgmagpic,setz
	jmp l6069
l6070:
	push "imgmag"
	pop $7
l6069:
	push "title"
	push 0
	call anmagstory,setframe
	push $3
	push 1
	call dbm,get
	call txtitl,txtset
	push "anmagstory"
	call txtitl,txtcenter
	push $7
	spushs
	push "txtitl"
	spop $a
	call [$a],blit
	push "txt"
	push 0
	call anmagstory,setframe
	push $7
	spushs
	push $3
	push 2
	call dbm,get
	push "anmagstory"
	push "txtpage"
	call fntnote,getsize
	push 3
	pop $b
	popax
	add $a,$b
	push 0
	spop $a
	call [$a],imgfittxt
	delete anmagstory
	call txtitl,hide
	call txtpage,hide
	push $8
	cmp0
	je l6072
	push "state_enablemagicpage"
	pop sgmstate
	call fxmedalionleft,play
	push 1000
	push "null"
	call imgmagpic,anfadein
	call imgmagpic,hide
	push GAME
	spushs
	spop $a
	call [$a],show_actfold
	cthis advsetstdstate
l6072:
l6068:
	push $1
	push "l"
	cthis print_page
	push $1
	push 1
	pop $b
	popax
	add $a,$b
	push "p"
	cthis print_page
	push "txtpnl"
	call imgmag,blit
	push "txtpnp"
	call imgmag,blit
	call imgmag,show
	push 22
	call imgmag,setz
	cthis enabled_tutorial
	cmp0
	je l6074
	push "e1_T17magic_shown"
	call clsave,bis
	neg
	cmp0
	je l6076
	push "T17magic"
	cthis tutpos
	cthis show_tutorial
	push "e1_T17magic_shown"
	call clsave,bset
l6076:
l6074:
	end method
	method mgBook12
	push "sysbook_to_show"
	call clsave,bis
	neg
	cmp0
	je l6059
	cthis hide
l6059:
	sub iilemag,1
	pop iilemag
	push iilemag
	push 0
	cmpjle
	cmp0
	je l6061
	push "sysbook_to_show"
	call clsave,bis
	neg
	cmp0
	je l6063
	cthis advsetstdstate
	push GAME
	spushs
	spop $a
	call [$a],show_actfold
l6063:
l6061:
	end method
	method show_obj_page
	localstring $1
	localstring $2
	pop $2
	pop $1
	push "enable_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push $2
	spop $d
	cthis [$d]
	push $1
	push "sysbook_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_"
	pop $b
	popax
	add $a,$b
	push $2
	pop $b
	popax
	add $a,$b
	call clsave,get
	cthis show_page
	end method
	method print_page
	localint $1
	localstring $2
	pop $2
	pop $1
	localstring $3
	push "txtpn"
	push $2
	pop $b
	popax
	add $a,$b
	pop $3
	push $3
	spushs
	push $1
	spop $a
	call [$a],txtset
	push $3
	spushs
	push "anpage"
	push $2
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],txtcenter
	end method
	method _nextpage
	localstring $1
	localint $2
	pop $2
	pop $1
	push $2
	push "sysbook_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_curpage"
	pop $b
	popax
	add $a,$b
	call clsave,get
	pop $b
	popax
	add $a,$b
	pop $2
	push $2
	push 1
	cmpjl
	cmp0
	je l6078
	push 1
	pop $2
	jmp l6077
l6078:
	push $2
	push "sysbook_"
	push $1
	pop $b
	popax
	add $a,$b
	push "ile_pages"
	pop $b
	popax
	add $a,$b
	call clsave,get
	spushs
	spop $h
	call $h,to_i
	cmpja
	cmp0
	je l6080
	push "sysbook_"
	push $1
	pop $b
	popax
	add $a,$b
	push "ile_pages"
	pop $b
	popax
	add $a,$b
	call clsave,get
	pop $2
	jmp l6079
l6080:
	call fxbook2,play
l6079:
l6077:
	push "sysbook_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_curpage"
	pop $b
	popax
	add $a,$b
	push $2
	call clsave,set
	push $2
	end method
	method nextpage
	localint $1
	pop $1
	localdef $2
	cthis getactfold
	pop $2
	localint $3
	push "sysbook_"
	push $2
	pop $b
	popax
	add $a,$b
	push "ile_pages"
	pop $b
	popax
	add $a,$b
	call clsave,get
	pop $3
	push $3
	push 3
	cmpjl
	cmp0
	je l6082
	ret
l6082:
	push $2
	push $2
	push $1
	cthis _nextpage
	cthis show_page
	end method
	end game

	game BanTest
	parent StdGame
	method init
	push "bantest"
	clparent StdGame,init
	push A
	push "niebo.pyz"
	push "slonce.pyz 1"
	push "chmury.pyzG 3"
	push "drzewo.pyzP 10"
	push "wdali1.pyz 12"
	push "wod1.pyzP 15"
	push "wod2.pyzP 20"
	push "wod3.pyzP 25"
	push "wod4.pyzP 30"
	push "wod5.pyzP 35"
	push "wod6.pyzP 40"
	push "wzgorze.pyz 45"
	push "wdali2.pyz 50"
	push "fog1.pyz 55"
	push "ogrodzenie.pyz 60"
	push "fire1.pyzP 65"
	push "fire2.pyzP 70"
	push "woda.pyzP 75"
	push "krople.pyzP 80"
	push "fogslow.pyzH 85"
	push "krzak1.pyzP 90"
	push "drzewo1.pyzP 95"
	push "altana.pyz 100"
	push "cien1.pyzP 105"
	push "galaz.pyzP 110"
	push "mglagora.pyz 115"
	push "liscie2.pyzG 116"
	push "lupamask.pyz 20"
	push "lupa.pyz 125"
	cthis imgs=
	push A
	push "bgrlas2N"
	push "bgrdeszczN 0"
	push "bgrrzeka1N 0"
	push "ogien2N 0"
	push "bgrwiatrN 0"
	cthis sfxs=
	call grliscie2,hide
	push 0
	push 50
	popax
	sub 0,$a
	call anslonce,move
	push "fxogien1"
	push "ogien2.ogg"
	cthis newsfx
	push 0
	call fxogien1,setvol
	call fxogien1,playloop
	new filter,ftlupa
	push "anlupamask"
	call ftlupa,link
	push 4
	call grchmury,get
	call ftlupa,loupe
	push 4
	call grchmury,get
	spushs
	spop $a
	call [$a],hide
	push "anwzgorze"
	call ftlupa,loupe
	call anwzgorze,hide
	push "angalaz"
	call ftlupa,loupe
	call angalaz,hide
	push "onfinish"
	push "BanTest0"
	call angalaz,addmethod
	push "andrzewo"
	call ftlupa,loupe
	call andrzewo,hide
	cthis ustaw_dzwieki
	push 1
	call grchmury,get
	push 0.25
	push 0
	clparent SetAnMover,setas
	push 3
	call grchmury,get
	push 0.5
	push 0
	clparent SetAnMover,setas
	push 4
	call grchmury,get
	push 1
	push 0
	clparent SetAnMover,setas
	push 5
	call grchmury,get
	push 1.5
	push 0
	clparent SetAnMover,setas
	push 1
	call grchmury,sortz
	push 1
	call grchmury,get
	spushs
	spop $a
	call [$a],sam_copy
	push 3
	call grchmury,get
	spushs
	spop $a
	call [$a],sam_copy
	push 4
	call grchmury,get
	spushs
	spop $a
	call [$a],sam_copy
	push "anfog1"
	push 0.55
	push 0
	clparent SetAnMover,setas
	call anfog1,sam_copy
	push "timgla"
	push "BanTest1"
	cthis cycle=
	call timgla,play
	call advmouse,setstd
	end method
	method BanTest0
	push 1
	popax
	sub 0,$a
	cthis play
	cthis hide
	end method
	method BanTest1
	call anfog1,sam_move
	push "sam_move"
	call grchmury,eval
	cthis ustaw_dzwieki
	cthis play
	end method
	method sam_move
	end method
	method ustaw_dzwieki
	push "fxbgrdeszcz"
	push 70
	push 22
	push 550
	push 0
	spushs
	call mouse,getposx
	call andrzewo,getcx
	pop $b
	popax
	sub $a,$b
	call mouse,getposy
	call andrzewo,getcy
	call andrzewo,geth
	push 4
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	sub $a,$b
	spop $h
	call $h,length
	clparent SoundSource,setvol
	push "fxbgrrzeka1"
	push 70
	push 12
	push 350
	push 0
	spushs
	call mouse,getposx
	push 343
	pop $b
	popax
	sub $a,$b
	call mouse,getposy
	push 574
	pop $b
	popax
	sub $a,$b
	spop $h
	call $h,length
	clparent SoundSource,setvol
	push "fxogien1"
	push 40
	push 2
	push 200
	push 0
	spushs
	call mouse,getposx
	call anfire1,getcx
	pop $b
	popax
	sub $a,$b
	call mouse,getposy
	call anfire1,getcy
	pop $b
	popax
	sub $a,$b
	spop $h
	call $h,length
	clparent SoundSource,setvol
	push "fxogien2"
	push 40
	push 2
	push 200
	push 0
	spushs
	call mouse,getposx
	call anfire2,getcx
	pop $b
	popax
	sub $a,$b
	call mouse,getposy
	call anfire2,getcy
	pop $b
	popax
	sub $a,$b
	spop $h
	call $h,length
	clparent SoundSource,setvol
	push "fxbgrwiatr"
	push 80
	push 12
	push 600
	push 0
	spushs
	call mouse,getposx
	push iResX
	pop $b
	popax
	sub $a,$b
	call mouse,getposy
	push 0.2
	push iResY
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	sub $a,$b
	spop $h
	call $h,length
	clparent SoundSource,setvol
	end method
	method key_down
	push "space"
	call keyboard,iskey
	cmp0
	je l6084
	localdef $1
	cthis getgraphpath
	push "chmura1/"
	pop $b
	popax
	add $a,$b
	pop $1
	call grchmury,srcanima
	spushs
	push $1
	spop $a
	call [$a],saveimages
l6084:
	end method
	method mouse_move
	call mouse,getpos
	call anlupa,setpos
	call mouse,getpos
	call anlupamask,setpos
	end method
	method mouse_lclick
	end method
	end game

	game TmpGame
	parent StdGame
	method init
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $3
	pop sNextGame
	push $2
	pop sNextGamePath
	push $1
	pop sNextGameType
	push "bantest"
	clparent StdGame,init
	push "$scripts/bantest/minigame.png"
	cthis img=
	push "timfin"
	push 2000
	push "_stdexit"
	cthis timplay
	end method
	end game

	game MojTest
	parent StdGame
	method init
	push "bantest"
	clparent StdGame,init
	new img,imgbg
	push igmappw
	push igmapph
	cthis black
	push 255
	call imgbg,create
	localdef $1
	push 5
	pop $1
	push "dupa"
	pop $1
	localdef $2
	push 20
	cthis stdfont
	pop $2
	push "txt1"
	push $1
	push $2
	cthis white
	cthis newtext
	push igmoffsetx
	push igmoffsety
	call txt1,setpos
	localdef $1
	push "dupa"
	pop $1
	push "txt2"
	push $1
	push $2
	cthis white
	cthis newtext
	push igmoffsetx
	push igmoffsety
	call txt1,geth
	pop $b
	popax
	add $a,$b
	call txt2,setpos
	end method
	end game

	game HO07_Gruz
	parent HOBanshee
	method init
	new anima,ankrasy
	push "scripts/ho07_gruz/krasy.pyz"
	call ankrasy,load
	call ankrasy,hide
	new anima,ankostka
	cthis get_difficulty
	push 3
	cmpjl
	cmp0
	je l6086
	push "ho07_gruz"
	push ""
	cthis HOBanshee_init
	push "scripts/ho07_gruz/kostka.pyz"
	call ankostka,load
	jmp l6085
l6086:
	push "ho07_gruz"
	push "2"
	cthis HOBanshee_init
	push "scripts/ho07_gruz/kostka2.pyz"
	call ankostka,load
l6085:
	push "snd_skrzat"
	push "kinnat_c1d1_4a"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_skrzat,addmethod
	push "banshee2.ogg -v 70 -l"
	call mus,playstr
	push A
	push "bkg.jpg"
	push "final_bkg.pyzH 240"
	push "popexit.pyzH 260"
	cthis imgs=
	call ankostka,mhobut
	push 10
	call ankostka,setz
	cthis mmasks
	new DelayMover,cmov
	call cmov,unlock
	new string,scmov
	push "null"
	pop scmov
	new int,bignoremsclick
	push 0
	pop bignoremsclick
	push "onfinish"
	push "HO07_Gruz0"
	call ankrasy,addmethod
	push "ho_shovel"
	cthis mtoloupe
	push "ho_dwarf"
	push "use"
	cthis setmovedcursor
	push "ho_crown"
	push "take"
	cthis setmovedcursor
	push "HO07_Gruz1"
	call ccs,enter
	push "takenho_HO07_Gruz_ankostka"
	call clsave,bis
	neg
	cmp0
	je l6092
	push "ankostka"
	cthis mtoloupe
l6092:
	end method
	method HO07_Gruz0
	push 0
	push 0
	cthis setframe
	push 1
	pop igmstate
	cthis mho_click
	end method
	method HO07_Gruz1
	push 1
	pop igmstate
	cthis advsetstdstate
	push "e1_tut13_shown"
	call clsave,bgo
	cmp0
	je l6088
	push "T13hoitems"
	push 120
	push 100
	cthis tutshow
	localstring $1
	push "ho_hat"
	cthis mgetel
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l6090
	push $1
	spushs
	spop $a
	call [$a],getpx
	push $1
	spushs
	spop $a
	call [$a],getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	push $1
	spushs
	spop $a
	call [$a],getpy
	push $1
	spushs
	spop $a
	call [$a],geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	push "dd"
	cthis tutpointxy
	push $1
	spushs
	spop $a
	call [$a],stxtview
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getpx
	push $1
	spushs
	spop $a
	call [$a],getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	push $1
	spushs
	spop $a
	call [$a],getpy
	push $1
	spushs
	spop $a
	call [$a],geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	push "ld"
	cthis tutpointxy2
l6090:
l6088:
	end method
	method horemoved_ankrasy
	push "ho_dwarf"
	cthis removehoitem
	push "ho_crown"
	cthis removehoitem
	end method
	method ho_shovel_click
	cthis show
	cthis getname
	cthis remove_from_loupe
	end method
	method ho_dwarf_preclick
	cthis dwarf_preclick
	end method
	method ho_crown_preclick
	cthis crown_preclick
	end method
	method tut14
	push "e1_tut14_shown"
	call clsave,bgo
	cmp0
	je l6094
	push "T14yellowitem"
	push 80
	push 20
	cthis tutshow
l6094:
	end method
	method tutorial_T13hoitems_hidden
	localstring $1
	push "ho_shovel"
	cthis mgetel
	pop $1
	push $1
	push "null"
	cmpje
	cmp0
	je l6096
	push "ankostka"
	pop $1
l6096:
	push $1
	spushs
	spop $a
	call [$a],stxtview
	pop $1
	push $1
	spushs
	spop $a
	call [$a],isvisible
	neg
	cmp0
	jne l6099
	push $1
	push "null"
	cmpje
	jmp l6100
l6098:
	push 0
	jmp l6100
l6099:
	push 1
l6100:
	cmp0
	je l6101
	ret
l6101:
	push "T15greenitem"
	push 120
	push 300
	cthis tutshow
	push $1
	spushs
	spop $a
	call [$a],getpx
	push $1
	spushs
	spop $a
	call [$a],getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	push $1
	spushs
	spop $a
	call [$a],getpy
	push $1
	spushs
	spop $a
	call [$a],geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	push "dd"
	cthis tutpointxy
	end method
	method tutorial_T15greenitem_hidden
	localstring $1
	push "ho_dwarf"
	cthis mgetel
	pop $1
	push "T14yellowitem"
	push 120
	push 20
	cthis tutshowe
	push $1
	push "null"
	cmpjne
	cmp0
	je l6103
	push $1
	spushs
	spop $a
	call [$a],getpx
	push $1
	spushs
	spop $a
	call [$a],getw
	pop $b
	popax
	add $a,$b
	push $1
	spushs
	spop $a
	call [$a],getw
	push 4
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push $1
	spushs
	spop $a
	call [$a],getpy
	push $1
	spushs
	spop $a
	call [$a],getw
	push 4
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	push "ld"
	cthis tutpointxy
l6103:
	push "ho_crown"
	cthis mgetel
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l6105
	push $1
	spushs
	spop $a
	call [$a],getpx
	push $1
	spushs
	spop $a
	call [$a],getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	push $1
	spushs
	spop $a
	call [$a],getpy
	push $1
	spushs
	spop $a
	call [$a],geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	push "ld"
	cthis tutpointxy2
l6105:
	end method
	method dwarf_preclick
	localdef $1
	call cmov,getfree
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l6107
	push "null"
	pop scmov
	cthis hide
	push $1
	spushs
	spop $a
	call [$a],hide
	cthis getname
	call butgame,removebutmoveoff
	push 1
	call ankrasy,play
	push 610
	call ankrasy,setz
	jmp l6106
l6107:
	push "snd_skrzat"
	cthis cbplay
l6106:
	end method
	method crown_preclick
	localdef $1
	call cmov,getfree
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l6109
	push "null"
	pop scmov
	cthis hide
	push $1
	spushs
	spop $a
	call [$a],hide
	cthis getname
	call butgame,removebutmoveoff
	push 1
	call ankrasy,play
	push 610
	call ankrasy,setz
	jmp l6108
l6109:
	cthis getname
	pop scmov
	push 1
	pop bignoremsclick
	push 6
	pop igmstate
	push 600
	cthis setz
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	push scmov
	call cmov,mssetobj
	push scmov
	call butgame,removebut
l6108:
	end method
	method kostka_preclick
	push "ankostka"
	cthis remove_from_loupe
	call ankostka,mho_click
	call ankostka,show
	end method
	method hiddenobj_put
	cthis hide_tutorial
	call grtxt,empty
	cmp0
	je l6111
	push 20
	pop igmstate
	cthis set_mg_finished
	push "kostka"
	push "puszka"
	push "anfinal_bkg"
	cthis show_double_screen
l6111:
	end method
	method mend
	push "ad03_placglowny"
	push "gamead03_placglowny0"
	cthis stdexitdefadv
	end method
	method mouse_lclick
	push bignoremsclick
	cmp0
	je l6113
	push 0
	pop bignoremsclick
	jmp l6112
l6113:
	push scmov
	push "null"
	cmpjne
	cmp0
	je l6115
	call cmov,getfree
	popax
	push 1
	pop igmstate
	push scmov
	spushs
	push 0
	push 0
	spop $a
	call [$a],setpos
	push scmov
	spushs
	push 1
	popax
	sub 0,$a
	push 1
	spop $a
	call [$a],setframe
	push scmov
	spushs
	push scmov
	spushs
	spop $a
	call [$a],myz
	spop $a
	call [$a],setz
	push scmov
	call butgame,add
	push "null"
	pop scmov
l6115:
l6112:
	end method
	method mouse_lrel
	cthis checktouchpad
	cmp0
	je l6117
	cthis mouse_lclick
l6117:
	end method
	method HINT_CLICK
	cthis ho_hint_click
	neg
	cmp0
	je l6119
	push igmstate
	push 1
	cmpje
	jmp l6121
l6119:
	push 0
	jmp l6121
l6120:
	push 1
l6121:
	cmp0
	je l6122
	push "ankostka"
	call butgame,contains
	cmp0
	je l6124
	push "ankostka"
	cthis showhint2v
	push "guiglass"
	cthis showhint2v
	jmp l6123
l6124:
	call grtxt,empty
	neg
	cmp0
	je l6126
	push "ho_dwarf"
	cthis mgetel
	cthis mhintonobj
	popax
	push "ho_crown"
	cthis mgetel
	cthis mhintonobj
	popax
l6126:
l6123:
l6122:
	end method
	end game

	game HO01_Altana
	parent HOBanshee
	method init
	new anima,ankonewka
	new anima,ankawalek_rzezby3
	push "scripts/ho01_altana/kawalek_rzezby3.pyz"
	call ankawalek_rzezby3,load
	push "ho01_altana"
	push ""
	cthis HOBanshee_init
	cthis get_difficulty
	push 3
	cmpjl
	cmp0
	je l6128
	push "scripts/ho01_altana/water_can.pyz"
	call ankonewka,load
	jmp l6127
l6128:
	push "scripts/ho01_altana/water_can2.pyz"
	call ankonewka,load
l6127:
	push "moments.ogg -v 50 -l"
	call mus,playstr
	push A
	push "bkg.jpg"
	push "final_bkg.pyzH 240"
	push "popexit.pyzH 260"
	cthis imgs=
	call ankonewka,mhobut
	push 10
	call ankonewka,setz
	call ankawalek_rzezby3,mhobut
	push 10
	call ankawalek_rzezby3,setz
	push "ankawalek_rzezby3"
	cthis checkexternalobj
	cthis mmasks
	cthis stdhoenter
	push "takenho_HO01_Altana_ankonewka"
	call clsave,bis
	neg
	cmp0
	je l6130
	push "ankonewka"
	cthis mtoloupe
l6130:
	end method
	method konewka_preclick
	push "ankonewka"
	cthis remove_from_loupe
	call ankonewka,mho_click
	call ankonewka,show
	end method
	method kawalek_rzezby3_preclick
	call ankawalek_rzezby3,mho_click
	end method
	method hiddenobj_put
	call grtxt,empty
	cmp0
	je l6132
	push 20
	pop igmstate
	cthis set_mg_finished
	push "kawalek_rzezby3"
	push "anfinal_bkg"
	cthis show_single_screen
l6132:
	end method
	method mend
	push 1000
	call mus,fadeout
	push "ad11_altana"
	push "gamead11_altana0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	cthis ho_hint_click
	neg
	cmp0
	je l6134
	push "txtel_ankonewka"
	call grtxt,contains
	cmp0
	je l6136
	push "ankonewka"
	cthis mhintonobj
	popax
	jmp l6135
l6136:
	push "txtel_ankawalek_rzezby3"
	call grtxt,contains
	cmp0
	je l6138
	push "ankawalek_rzezby3"
	cthis mhintonobj
	popax
l6138:
l6135:
l6134:
	end method
	end game

	game HO09_Brzegjeziora
	parent HOBanshee
	method init
	new anima,bottle_anim
	push "scripts/ho09_brzegjeziora/bottle_anim.pyz"
	call bottle_anim,load
	call bottle_anim,hide
	new anima,andluto
	push "ho09_brzegjeziora"
	push ""
	cthis HOBanshee_init
	cthis get_difficulty
	push 3
	cmpjl
	cmp0
	je l6140
	push "scripts/ho09_brzegjeziora/dluto.pyz"
	call andluto,load
	jmp l6139
l6140:
	push "scripts/ho09_brzegjeziora/dluto2.pyz"
	call andluto,load
l6139:
	push "moments.ogg -v 50 -l"
	call mus,playstr
	push A
	push "bkg.png"
	push "swiatlo.pyz 12"
	push "final_bkg.pyzH 260"
	push "popexit.pyzH 280"
	cthis imgs=
	push A
	push "zamekblyskawiczny"
	cthis sfxs=
	push "snd_bottle"
	push "kinnat_c1d1_19a"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_bottle,addmethod
	call answiatlo,anopacityframe
	push "new"
	call answiatlo,play
	call andluto,mhobut
	push 1000
	call andluto,setz
	cthis mmasks
	new DelayMover,cmov
	call cmov,unlock
	new string,scmov
	push "null"
	pop scmov
	new int,bignoremsclick
	push 0
	pop bignoremsclick
	push "onfinish"
	push "HO09_Brzegjeziora0"
	call bottle_anim,addmethod
	push "takenho_HO09_Brzegjeziora_andluto"
	call clsave,bis
	neg
	cmp0
	je l6142
	push "andluto"
	cthis mtoloupe
l6142:
	push "ho_letter"
	cthis mgetel
	spushs
	spop $a
	call [$a],hide
	push "maska_bag_open"
	cthis mgetel
	spushs
	spop $a
	call [$a],hide
	push "bag_open"
	cthis mgetel
	spushs
	spop $a
	call [$a],hide
	push "ho_bottle"
	push "use"
	cthis setmovedcursor
	push "ho_letter"
	push "take"
	cthis setmovedcursor
	push "ho_bag"
	push "take"
	cthis setmovedcursor
	cthis stdhoenter
	end method
	method HO09_Brzegjeziora0
	push 0
	push 0
	cthis setframe
	push 1
	pop igmstate
	cthis mho_click
	end method
	method horemoved_bottle_anim
	push "ho_bottle"
	cthis removehoitem
	push "ho_letter"
	cthis mgetel
	spushs
	spop $a
	call [$a],hide
	push "maska_bag_open"
	cthis mgetel
	spushs
	spop $a
	call [$a],show
	push "bag_open"
	cthis mgetel
	spushs
	spop $a
	call [$a],show
	push "ho_bag"
	cthis mgetel
	call butgame,removebut
	end method
	method ho_bag_preclick
	push "ho_letter"
	cthis mgetel
	spushs
	spop $a
	call [$a],show
	push "maska_bag_open"
	cthis mgetel
	spushs
	spop $a
	call [$a],show
	push "bag_open"
	cthis mgetel
	spushs
	spop $a
	call [$a],show
	push "ho_bag"
	cthis mgetel
	call butgame,removebut
	call advmouse,setstd
	call fxzamekblyskawiczny,play
	end method
	method dluto_preclick
	push "andluto"
	cthis remove_from_loupe
	call andluto,mho_click
	call andluto,show
	end method
	method hiddenobj_put
	call grtxt,empty
	cmp0
	je l6144
	push 20
	pop igmstate
	cthis set_mg_finished
	push "bulka"
	push "dluto"
	push "anfinal_bkg"
	cthis show_double_screen
l6144:
	end method
	method mend
	push 1000
	call mus,fadeout
	push "ad04_brzegjeziora"
	push "gamead04_brzegjeziora0"
	cthis stdexitdefadv
	end method
	method ho_bottle_preclick
	cthis bottle_preclick
	end method
	method ho_letter_preclick
	cthis letter_preclick
	end method
	method bottle_preclick
	localdef $1
	call cmov,getfree
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l6146
	push "null"
	pop scmov
	cthis hide
	push $1
	spushs
	spop $a
	call [$a],hide
	cthis getname
	call butgame,removebutmoveoff
	push 1
	call bottle_anim,play
	push 610
	call bottle_anim,setz
	jmp l6145
l6146:
	push "snd_bottle"
	cthis cbplay
l6145:
	end method
	method letter_preclick
	localdef $1
	call cmov,getfree
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l6148
	push "null"
	pop scmov
	cthis hide
	push $1
	spushs
	spop $a
	call [$a],hide
	cthis getname
	call butgame,removebutmoveoff
	push 1
	call bottle_anim,play
	push 610
	call bottle_anim,setz
	jmp l6147
l6148:
	cthis getname
	pop scmov
	push 1
	pop bignoremsclick
	push 6
	pop igmstate
	push 600
	cthis setz
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	push scmov
	call cmov,mssetobj
	push scmov
	call butgame,removebut
l6147:
	end method
	method mouse_lclick
	push bignoremsclick
	cmp0
	je l6150
	push 0
	pop bignoremsclick
	jmp l6149
l6150:
	push scmov
	push "null"
	cmpjne
	cmp0
	je l6152
	call cmov,getfree
	popax
	push 1
	pop igmstate
	push scmov
	spushs
	push 0
	push 0
	spop $a
	call [$a],setpos
	push scmov
	spushs
	push 1
	popax
	sub 0,$a
	push 1
	spop $a
	call [$a],setframe
	push scmov
	spushs
	push scmov
	spushs
	spop $a
	call [$a],myz
	spop $a
	call [$a],setz
	push scmov
	call butgame,add
	push "null"
	pop scmov
l6152:
l6149:
	end method
	method mouse_lrel
	cthis checktouchpad
	cmp0
	je l6154
	cthis mouse_lclick
l6154:
	end method
	method HINT_CLICK
	cthis ho_hint_click
	neg
	cmp0
	je l6156
	push "txtel_bottle_anim"
	call grtxt,contains
	cmp0
	je l6158
	push "ho_letter"
	cthis mgetel
	cthis mhintonobj
	popax
	push "ho_bottle"
	cthis mgetel
	cthis mhintonobj
	popax
	jmp l6157
l6158:
	push "txtel_andluto"
	call grtxt,contains
	cmp0
	je l6160
	push "andluto"
	cthis mhintonobj
	popax
l6160:
l6157:
l6156:
	end method
	end game

	game HO04_Wodospad
	parent HOBanshee
	method init
	new anima,bag_anim
	push "scripts/ho04_wodospad/bag_anim.pyz"
	call bag_anim,load
	call bag_anim,hide
	cthis get_difficulty
	push 3
	cmpjl
	cmp0
	je l6162
	push "ho04_wodospad"
	push ""
	cthis HOBanshee_init
	jmp l6161
l6162:
	push "ho04_wodospad"
	push "2"
	cthis HOBanshee_init
l6161:
	push "adventure_loop.ogg -v 30 -l"
	call mus,playstr
	push A
	push "monety1"
	cthis sfxs=
	push A
	push "bkg.jpg"
	push "lewy_bok.pyz 10"
	push "prawy_bok.pyz 20"
	push "final_bkg.pyzH 220"
	push "popexit.pyzH 230"
	cthis imgs=
	cthis mmasks
	new DelayMover,cmov
	call cmov,unlock
	new string,scmov
	push "null"
	pop scmov
	new int,bignoremsclick
	push 0
	pop bignoremsclick
	push "ho_kawalek_rzezby4"
	cthis mtoloupe
	push "ho_bag"
	push "use"
	cthis setmovedcursor
	push "ho_coins"
	push "take"
	cthis setmovedcursor
	cthis stdhoenter
	push "snd_torba"
	push "kinnat_c1d1_26f"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_torba,addmethod
	push "onfinish"
	push "HO04_Wodospad0"
	call bag_anim,addmethod
	end method
	method HO04_Wodospad0
	push 0
	push 0
	cthis setframe
	push 1
	pop igmstate
	cthis mho_click
	end method
	method hiddenobj_put
	call grtxt,empty
	cmp0
	je l6164
	push 20
	pop igmstate
	cthis set_mg_finished
	push "kawalek_lwa4"
	push "kawalek_rzezby2"
	push "anfinal_bkg"
	cthis show_double_screen
l6164:
	end method
	method mend
	push 1000
	call mus,fadeout
	push "ad08_latajacecospod"
	push "gamead08_latajacecospod0"
	cthis stdexitdefadv
	end method
	method horemoved_bag_anim
	push "ho_bag"
	cthis removehoitem
	push "ho_coins"
	cthis removehoitem
	end method
	method ho_bag_preclick
	cthis bag_preclick
	end method
	method ho_coins_preclick
	cthis coins_preclick
	end method
	method coins_preclick
	localdef $1
	call cmov,getfree
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l6166
	push "null"
	pop scmov
	cthis hide
	push $1
	spushs
	spop $a
	call [$a],hide
	cthis getname
	call butgame,removebutmoveoff
	push 1
	call bag_anim,play
	push 610
	call bag_anim,setz
	call fxmonety1,play
	jmp l6165
l6166:
	cthis getname
	pop scmov
	push 1
	pop bignoremsclick
	push 6
	pop igmstate
	push 600
	cthis setz
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	push scmov
	call cmov,mssetobj
	push scmov
	call butgame,removebut
l6165:
	end method
	method bag_preclick
	localdef $1
	call cmov,getfree
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l6168
	push "null"
	pop scmov
	cthis hide
	push $1
	spushs
	spop $a
	call [$a],hide
	cthis getname
	call butgame,removebutmoveoff
	push 1
	call bag_anim,play
	call fxmonety1,play
	push 610
	call bag_anim,setz
	jmp l6167
l6168:
	push "snd_torba"
	cthis cbplay
l6167:
	end method
	method mouse_lclick
	push bignoremsclick
	cmp0
	je l6170
	push 0
	pop bignoremsclick
	jmp l6169
l6170:
	push scmov
	push "null"
	cmpjne
	cmp0
	je l6172
	call cmov,getfree
	popax
	push 1
	pop igmstate
	push scmov
	spushs
	push 0
	push 0
	spop $a
	call [$a],setpos
	push scmov
	spushs
	push 1
	popax
	sub 0,$a
	push 1
	spop $a
	call [$a],setframe
	push scmov
	spushs
	push scmov
	spushs
	spop $a
	call [$a],myz
	spop $a
	call [$a],setz
	push scmov
	call butgame,add
	push "null"
	pop scmov
l6172:
l6169:
	end method
	method mouse_lrel
	cthis checktouchpad
	cmp0
	je l6174
	cthis mouse_lclick
l6174:
	end method
	method ho_kawalek_rzezby4_click
	cthis getname
	cthis remove_from_loupe
	cthis show
	end method
	method HINT_CLICK
	cthis ho_hint_click
	neg
	cmp0
	je l6176
	push "txtel_bag_anim"
	call grtxt,contains
	cmp0
	je l6178
	push "ho_bag"
	cthis mgetel
	cthis mhintonobj
	popax
	push "ho_coins"
	cthis mgetel
	cthis mhintonobj
	popax
l6178:
l6176:
	end method
	end game

	game HO06_Ogrodrozany
	parent HOBanshee
	method init
	new anima,playmusic_anim
	push "scripts/ho06_ogrodrozany/playmusic_anim.pyz"
	call playmusic_anim,load
	call playmusic_anim,hide
	new anima,ankawalek_rzezby1
	cthis get_difficulty
	push 3
	cmpjl
	cmp0
	je l6180
	push "scripts/ho06_ogrodrozany/sculpture_part1.pyz"
	call ankawalek_rzezby1,load
	jmp l6179
l6180:
	push "scripts/ho06_ogrodrozany/sculpture_part1a.pyz"
	call ankawalek_rzezby1,load
l6179:
	new anima,annote
	push "scripts/ho06_ogrodrozany/note.pyz"
	call annote,load
	cthis get_difficulty
	push 3
	cmpjl
	cmp0
	je l6182
	push "ho06_ogrodrozany"
	push ""
	cthis HOBanshee_init
	jmp l6181
l6182:
	push "ho06_ogrodrozany"
	push "2"
	cthis HOBanshee_init
l6181:
	push "e1_ho06_playjazz"
	call clsave,bis
	cmp0
	je l6184
	push "jazz -v 50 -l"
	call mus,playstr
	push 1
	call playmusic_anim,play
	push 180
	call playmusic_anim,setz
	jmp l6183
l6184:
	push "ck1_loop -v 50 -l"
	call mus,playstr
l6183:
	push A
	push "bkg.jpg"
	push "final_bkg.pyzH 200"
	push "popexit.pyzH 220"
	cthis imgs=
	call ankawalek_rzezby1,mhobut
	push 10
	call ankawalek_rzezby1,setz
	cthis mmasks
	push "takenho_HO06_Ogrodrozany_ankawalek_rzezby1"
	call clsave,bis
	neg
	cmp0
	je l6186
	push "ankawalek_rzezby1"
	cthis mtoloupe
l6186:
	call annote,hide
	new DelayMover,cmov
	call cmov,unlock
	new string,scmov
	push "null"
	pop scmov
	new int,bignoremsclick
	push 0
	pop bignoremsclick
	push "ho_iron"
	cthis mtoloupe
	push "ho_gramophone"
	push "use"
	cthis setmovedcursor
	push "ho_plyta"
	push "take"
	cthis setmovedcursor
	cthis stdhoenter
	end method
	method ho_iron_click
	cthis show
	cthis getname
	cthis remove_from_loupe
	end method
	method hiddenobj_put
	call grtxt,empty
	cmp0
	je l6188
	push 20
	pop igmstate
	cthis set_mg_finished
	push "kawalek_rzezby1"
	push "anfinal_bkg"
	cthis show_single_screen
l6188:
	end method
	method horemoved_annote
	push "ho_plyta"
	cthis removehoitem
	push "ho_gramophone"
	cthis removehoitem
	push 1
	call playmusic_anim,play
	push 180
	call playmusic_anim,setz
	end method
	method ho_gramophone_preclick
	cthis gramophone_preclick
	end method
	method ho_plyta_preclick
	cthis plyta_preclick
	end method
	method plyta_preclick
	localdef $1
	call cmov,getfree
	pop $1
	push $1
	push "null"
	cmpje
	cmp0
	je l6190
	cthis getname
	pop scmov
	push 1
	pop bignoremsclick
	push 6
	pop igmstate
	push 600
	cthis setz
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	push scmov
	call cmov,mssetobj
	push scmov
	call butgame,removebutmoveoff
l6190:
	end method
	method gramophone_preclick
	localdef $1
	call cmov,getfree
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l6192
	push "null"
	pop scmov
	push $1
	spushs
	spop $a
	call [$a],hide
	cthis getname
	call butgame,removebutmoveoff
	push 1
	call playmusic_anim,play
	push 180
	call playmusic_anim,setz
	push 1
	pop igmstate
	call annote,mhobut
	call annote,show
	call annote,mho_click
	push "e1_ho06_playjazz"
	call clsave,bset
	push "ck1_loop -v 50 -fout 500 jazz -v 50 -l"
	call mus,playstr
l6192:
	end method
	method mouse_lclick
	push bignoremsclick
	cmp0
	je l6194
	push 0
	pop bignoremsclick
	jmp l6193
l6194:
	push scmov
	push "null"
	cmpjne
	cmp0
	je l6196
	call cmov,getfree
	popax
	push 1
	pop igmstate
	push scmov
	spushs
	push 0
	push 0
	spop $a
	call [$a],setpos
	push scmov
	spushs
	push 1
	popax
	sub 0,$a
	push 1
	spop $a
	call [$a],setframe
	push scmov
	spushs
	push scmov
	spushs
	spop $a
	call [$a],myz
	spop $a
	call [$a],setz
	push scmov
	call butgame,add
	push "null"
	pop scmov
l6196:
l6193:
	end method
	method mouse_lrel
	cthis checktouchpad
	cmp0
	je l6198
	cthis mouse_lclick
l6198:
	end method
	method kawalek_rzezby1_preclick
	push "ankawalek_rzezby1"
	cthis remove_from_loupe
	call ankawalek_rzezby1,show
	call ankawalek_rzezby1,mho_click
	end method
	method mend
	push 1000
	call mus,fadeout
	push "ad10_ogrodrozany"
	push "gamead10_ogrodrozany0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	cthis ho_hint_click
	neg
	cmp0
	je l6200
	push "txtel_annote"
	call grtxt,contains
	cmp0
	je l6202
	push "ho_plyta"
	cthis mgetel
	cthis mhintonobj
	popax
	push "ho_gramophone"
	cthis mgetel
	cthis mhintonobj
	popax
	jmp l6201
l6202:
	push "takenho_HO06_Ogrodrozany_ankawalek_rzezby1"
	call clsave,bis
	neg
	cmp0
	je l6204
	push "ankawalek_rzezby1"
	cthis showhint2v
l6204:
l6201:
l6200:
	end method
	end game

	game HO12_Brama
	parent HOBanshee
	method init
	new anima,padlock_anim
	push "scripts/ho12_brama/padlock_anim.pyz"
	call padlock_anim,load
	call padlock_anim,hide
	new anima,anserce_part2
	cthis get_difficulty
	push 3
	cmpjl
	cmp0
	je l6206
	push "scripts/ho12_brama/serce_part2.pyz"
	call anserce_part2,load
	jmp l6205
l6206:
	push "scripts/ho12_brama/serce_part2a.pyz"
	call anserce_part2,load
l6205:
	push "ho12_brama"
	push ""
	cthis HOBanshee_init
	push A
	push "bkg.jpg"
	push "final_bkg.pyzH 200"
	push "popexit.pyzH 220"
	cthis imgs=
	push A
	push "click"
	push "odkrecanie"
	cthis sfxs=
	push "banshee2.ogg -v 70 -l"
	call mus,playstr
	call anserce_part2,mhobut
	push 2
	call anserce_part2,setz
	cthis mmasks
	new DelayMover,cmov
	call cmov,unlock
	new string,scmov
	push "null"
	pop scmov
	new int,bignoremsclick
	push 0
	pop bignoremsclick
	cthis stdhoenter
	push "takenho_HO12_Brama_anserce_part2"
	call clsave,bis
	neg
	cmp0
	je l6208
	push "anserce_part2"
	cthis mtoloupe
l6208:
	push "takenho_HO12_Brama_ho_runa"
	call clsave,bis
	neg
	cmp0
	je l6210
	push "ho_runa"
	cthis mtoloupe
l6210:
	push "onfinish"
	push "HO12_Brama0"
	call padlock_anim,addmethod
	push "ho_padlock"
	push "use"
	cthis setmovedcursor
	push "ho_key"
	push "take"
	cthis setmovedcursor
	push "snd_padlock"
	push "kinnat_c2d2_2d"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_padlock,addmethod
	end method
	method HO12_Brama0
	push 0
	push 0
	cthis setframe
	push 1
	pop igmstate
	cthis mho_click
	end method
	method hiddenobj_put
	call grtxt,empty
	cmp0
	je l6212
	push 20
	pop igmstate
	cthis set_mg_finished
	push "serce_part2"
	push "rune"
	push "anfinal_bkg"
	cthis show_double_screen
l6212:
	end method
	method horemoved_padlock_anim
	push "ho_key"
	cthis removehoitem
	push "ho_padlock"
	cthis removehoitem
	end method
	method ho_key_preclick
	cthis key_preclick
	end method
	method ho_padlock_preclick
	cthis padlock_preclick
	end method
	method key_preclick
	localdef $1
	call cmov,getfree
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l6214
	push "null"
	pop scmov
	cthis hide
	push $1
	spushs
	spop $a
	call [$a],hide
	cthis getname
	call butgame,removebutmoveoff
	push 1
	call padlock_anim,play
	push 610
	call padlock_anim,setz
	cthis getpx
	cthis getpy
	call padlock_anim,ansetbpos
	call fxodkrecanie,play
	jmp l6213
l6214:
	cthis getname
	pop scmov
	push 1
	pop bignoremsclick
	push 6
	pop igmstate
	push 600
	cthis setz
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	push scmov
	call cmov,mssetobj
	push scmov
	call butgame,removebut
	call fxclick,play
l6213:
	end method
	method padlock_preclick
	localdef $1
	call cmov,getfree
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l6216
	push "null"
	pop scmov
	cthis hide
	push $1
	spushs
	spop $a
	call [$a],hide
	cthis getname
	call butgame,removebutmoveoff
	push 1
	call padlock_anim,play
	push 610
	call padlock_anim,setz
	cthis getpx
	cthis getpy
	call padlock_anim,ansetbpos
	call fxodkrecanie,play
	jmp l6215
l6216:
	push "snd_padlock"
	cthis cbplay
l6215:
	end method
	method ho_runa_click
	cthis show
	cthis getname
	cthis remove_from_loupe
	end method
	method mouse_lclick
	push bignoremsclick
	cmp0
	je l6218
	push 0
	pop bignoremsclick
	jmp l6217
l6218:
	push scmov
	push "null"
	cmpjne
	cmp0
	je l6220
	call cmov,getfree
	popax
	push 1
	pop igmstate
	push scmov
	spushs
	push 0
	push 0
	spop $a
	call [$a],setpos
	push scmov
	spushs
	push 1
	popax
	sub 0,$a
	push 1
	spop $a
	call [$a],setframe
	push scmov
	spushs
	push scmov
	spushs
	spop $a
	call [$a],myz
	spop $a
	call [$a],setz
	push scmov
	call butgame,add
	push "null"
	pop scmov
l6220:
l6217:
	end method
	method mouse_lrel
	cthis checktouchpad
	cmp0
	je l6222
	cthis mouse_lclick
l6222:
	end method
	method serce_part2_preclick
	push "anserce_part2"
	cthis remove_from_loupe
	call anserce_part2,show
	call anserce_part2,mho_click
	end method
	method serce_part2_rotostart_preclick
	cthis serce_part2_preclick
	end method
	method mend
	push "ad12_latajacecosna"
	push "gamead12_latajacecosna0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	cthis ho_hint_click
	neg
	cmp0
	je l6224
	push "txtel_padlock_anim"
	call grtxt,contains
	cmp0
	je l6226
	push "ho_key"
	cthis mgetel
	cthis mhintonobj
	popax
	push "ho_padlock"
	cthis mgetel
	cthis mhintonobj
	popax
	jmp l6225
l6226:
	push "txtel_anserce_part2"
	call grtxt,contains
	cmp0
	je l6228
	push "anserce_part2"
	cthis mhintonobj
	popax
l6228:
l6225:
l6224:
	end method
	end game

	game HO13_Wiszacymost
	parent HOBanshee
	method init
	new anima,fire_anim
	push "scripts/ho13_wiszacymost/fire_anim.pyz"
	call fire_anim,load
	call fire_anim,hide
	new anima,anrekawica_1
	cthis get_difficulty
	push 3
	cmpjl
	cmp0
	je l6230
	push "scripts/ho13_wiszacymost/rekawica_1.pyz"
	call anrekawica_1,load
	jmp l6229
l6230:
	push "scripts/ho13_wiszacymost/rekawica_1a.pyz"
	call anrekawica_1,load
l6229:
	new anima,anpan_bottom
	cthis get_difficulty
	push 3
	cmpjl
	cmp0
	je l6232
	push "scripts/ho13_wiszacymost/pan_bottom.pyz"
	call anpan_bottom,load
	jmp l6231
l6232:
	push "scripts/ho13_wiszacymost/pan_bottoma.pyz"
	call anpan_bottom,load
l6231:
	push "ho13_wiszacymost"
	push ""
	cthis HOBanshee_init
	push "banshee2.ogg -v 70 -l"
	call mus,playstr
	push A
	push "bkg.jpg"
	push "final_bkg.pyzH 200"
	push "popexit.pyzH 220"
	cthis imgs=
	push A
	push "bgrszumN 30"
	push "zapalniczka"
	push "ogien1"
	cthis sfxs=
	push "snd_siano"
	push "kinnat_c2d2_4e"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_siano,addmethod
	call anrekawica_1,mhobut
	push 20
	call anrekawica_1,setz
	call anpan_bottom,mhobut
	push 20
	call anpan_bottom,setz
	cthis mmasks
	new DelayMover,cmov
	call cmov,unlock
	new string,scmov
	push "null"
	pop scmov
	new int,bignoremsclick
	push 0
	pop bignoremsclick
	cthis stdhoenter
	push "takenho_HO13_Wiszacymost_anrekawica_1"
	call clsave,bis
	neg
	cmp0
	je l6234
	push "anrekawica_1"
	cthis mtoloupe
l6234:
	push "takenho_HO13_Wiszacymost_anpan_bottom"
	call clsave,bis
	neg
	cmp0
	je l6236
	push "anpan_bottom"
	cthis mtoloupe
l6236:
	push "onfinish"
	push "HO13_Wiszacymost0"
	call fire_anim,addmethod
	push "ho_nest"
	push "use"
	cthis setmovedcursor
	push "ho_lighter"
	push "take"
	cthis setmovedcursor
	end method
	method HO13_Wiszacymost0
	push 0
	push 0
	cthis setframe
	push 1
	pop igmstate
	cthis mho_click
	end method
	method hiddenobj_put
	call grtxt,empty
	cmp0
	je l6238
	push 20
	pop igmstate
	cthis set_mg_finished
	push "rekawica_1"
	push "pan_bottom"
	push "anfinal_bkg"
	cthis show_double_screen
l6238:
	end method
	method horemoved_fire_anim
	push "ho_lighter"
	cthis removehoitem
	push "ho_nest"
	cthis removehoitem
	end method
	method ho_lighter_preclick
	cthis lighter_preclick
	end method
	method ho_nest_preclick
	cthis nest_preclick
	end method
	method lighter_preclick
	localdef $1
	call cmov,getfree
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l6240
	push "null"
	pop scmov
	cthis hide
	push $1
	spushs
	spop $a
	call [$a],hide
	cthis getname
	call butgame,removebutmoveoff
	push 1
	call fire_anim,play
	call fxogien1,play
	push 610
	call fire_anim,setz
	jmp l6239
l6240:
	cthis getname
	pop scmov
	push 1
	pop bignoremsclick
	push 6
	pop igmstate
	call fxzapalniczka,play
	push 600
	cthis setz
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	push scmov
	call cmov,mssetobj
	push scmov
	call butgame,removebut
l6239:
	end method
	method nest_preclick
	localdef $1
	call cmov,getfree
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l6242
	push "null"
	pop scmov
	cthis hide
	push $1
	spushs
	spop $a
	call [$a],hide
	cthis getname
	call butgame,removebutmoveoff
	push 1
	call fire_anim,play
	call fxogien1,play
	push 610
	call fire_anim,setz
	jmp l6241
l6242:
	push "snd_siano"
	cthis cbplay
l6241:
	end method
	method mouse_lclick
	push bignoremsclick
	cmp0
	je l6244
	push 0
	pop bignoremsclick
	jmp l6243
l6244:
	push scmov
	push "null"
	cmpjne
	cmp0
	je l6246
	call cmov,getfree
	popax
	push 1
	pop igmstate
	push scmov
	spushs
	push 0
	push 0
	spop $a
	call [$a],setpos
	push scmov
	spushs
	push 1
	popax
	sub 0,$a
	push 1
	spop $a
	call [$a],setframe
	push scmov
	spushs
	push scmov
	spushs
	spop $a
	call [$a],myz
	spop $a
	call [$a],setz
	push scmov
	call butgame,add
	push "null"
	pop scmov
l6246:
l6243:
	end method
	method mouse_lrel
	cthis checktouchpad
	cmp0
	je l6248
	cthis mouse_lclick
l6248:
	end method
	method rekawica_1_preclick
	call anrekawica_1,mho_click
	call anrekawica_1,show
	end method
	method pan_bottom_preclick
	call anpan_bottom,mho_click
	call anpan_bottom,show
	end method
	method mend
	push "ad13_wiszacymost"
	push "gamead13_wiszacymost0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	cthis ho_hint_click
	neg
	cmp0
	je l6250
	push "txtel_fire_anim"
	call grtxt,contains
	cmp0
	je l6252
	push "ho_lighter"
	cthis mgetel
	cthis mhintonobj
	popax
	push "ho_nest"
	cthis mgetel
	cthis mhintonobj
	popax
	jmp l6251
l6252:
	push "txtel_anrekawica_1"
	call grtxt,contains
	cmp0
	je l6254
	push "anrekawica_1"
	cthis mhintonobj
	popax
	jmp l6253
l6254:
	push "txtel_anpan_bottom"
	call grtxt,contains
	cmp0
	je l6256
	push "anpan_bottom"
	cthis mhintonobj
	popax
l6256:
l6253:
l6251:
l6250:
	end method
	end game

	game HO19_Szopa
	parent HOBanshee
	method init
	new anima,tea_anim
	push "scripts/ho19_szopa/tea_anim.pyz"
	call tea_anim,load
	call tea_anim,hide
	new anima,fire
	push "scripts/ho19_szopa/ogien.pyz"
	call fire,load
	push 1
	call fire,setdrawmode
	new anima,torch
	push "scripts/ho19_szopa/torch.pyz"
	call torch,load
	push 0
	call fire,play
	push 100
	call fire,setz
	push 101
	call torch,setz
	cthis get_difficulty
	push 3
	cmpjl
	cmp0
	je l6258
	push "ho19_szopa"
	push ""
	cthis HOBanshee_init
	jmp l6257
l6258:
	push "ho19_szopa"
	push "2"
	cthis HOBanshee_init
l6257:
	push A
	push "bkg.jpg"
	push "bkg_final.pyzH 260"
	push "popexit.pyzH 280"
	cthis imgs=
	push A
	push "bgrszumN 30"
	push "fireN 10"
	push "szufladaklik"
	push "dym1 30"
	push "book2 30"
	cthis sfxs=
	new DelayMover,cmov
	call cmov,unlock
	new string,scmov
	push "null"
	pop scmov
	new int,bignoremsclick
	push 0
	pop bignoremsclick
	push "HO_hat"
	cthis mtoloupe
	push "HO19_Szopa_drawr_opened"
	call clsave,bis
	cmp0
	je l6260
	cthis open_drawer
	jmp l6259
l6260:
	cthis close_drawer
l6259:
	push "onfinish"
	push "HO19_Szopa0"
	call tea_anim,addmethod
	cthis mmasks
	cthis stdhoenter
	push "HO_kettle"
	push "use"
	cthis setmovedcursor
	push "HO_herbs"
	push "take"
	cthis setmovedcursor
	push "snd_tea"
	push "kinnat_c2d2_10e"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_tea,addmethod
	push "banshee2.ogg -v 70 -l"
	call mus,playstr
	end method
	method HO19_Szopa0
	push 0
	push 0
	cthis setframe
	push 1
	pop igmstate
	cthis mho_click
	end method
	method horemoved_tea_anim
	push "HO_herbs"
	cthis removehoitem
	push "HO_kettle"
	cthis removehoitem
	end method
	method hiddenobj_put
	call grtxt,empty
	cmp0
	je l6262
	push 20
	pop igmstate
	cthis set_mg_finished
	push "rune"
	push "rune"
	push "anbkg_final"
	cthis show_double_screen
l6262:
	end method
	method HO_hat_click
	cthis show
	cthis getname
	cthis remove_from_loupe
	end method
	method close_drawer
	push "takenho_HO19_Szopa_HO_rune7"
	call clsave,bis
	neg
	cmp0
	je l6264
	push "HO_rune7"
	cthis mgetel
	spushs
	spop $a
	call [$a],hide
l6264:
	localint $1
	push 0
	pop $1
l6265:
	push $1
	call grels,size
	cmpjl
	cmp0
	je l6266
	jmp l6268
l6267:
	add $1,1
	pop $1
	jmp l6265
l6268:
	localdef $2
	push $1
	call grels,get
	pop $2
	push $2
	spushs
	spop $a
	call [$a],actionname
	spushs
	push "sz"
	spop $h
	call $h,contains
	cmp0
	je l6270
	push $2
	spushs
	spop $a
	call [$a],hide
l6270:
	jmp l6267
l6266:
	end method
	method open_drawer
	push "takenho_HO19_Szopa_HO_rune7"
	call clsave,bis
	neg
	cmp0
	je l6272
	push "HO_rune7"
	cthis mgetel
	spushs
	spop $a
	call [$a],show
l6272:
	push "drawer"
	cthis mgetel
	spushs
	push 1
	popax
	sub 0,$a
	push 0
	spop $a
	call [$a],setframe
	localint $1
	push 0
	pop $1
l6273:
	push $1
	call grels,size
	cmpjl
	cmp0
	je l6274
	jmp l6276
l6275:
	add $1,1
	pop $1
	jmp l6273
l6276:
	localdef $2
	push $1
	call grels,get
	pop $2
	push $2
	spushs
	spop $a
	call [$a],actionname
	spushs
	push "sz"
	spop $h
	call $h,contains
	cmp0
	je l6278
	push $2
	spushs
	spop $a
	call [$a],show
l6278:
	jmp l6275
l6274:
	push "drawer"
	cthis mgetel
	call butgame,removebut
	push "HO19_Szopa_drawr_opened"
	call clsave,bset
	call fxszufladaklik,play
	end method
	method drawer_preclick
	cthis open_drawer
	end method
	method HO_herbs_preclick
	cthis herbs_preclick
	end method
	method HO_kettle_preclick
	cthis kettle_preclick
	end method
	method herbs_preclick
	localdef $1
	call cmov,getfree
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l6280
	push "null"
	pop scmov
	cthis hide
	push $1
	spushs
	spop $a
	call [$a],hide
	cthis getname
	call butgame,removebutmoveoff
	push 1
	call tea_anim,play
	push 610
	call tea_anim,setz
	jmp l6279
l6280:
	cthis getname
	pop scmov
	push 1
	pop bignoremsclick
	push 6
	pop igmstate
	push 600
	cthis setz
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	push scmov
	call cmov,mssetobj
	push scmov
	call butgame,removebut
	call fxbook2,play
l6279:
	end method
	method kettle_preclick
	localdef $1
	call cmov,getfree
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l6282
	push "null"
	pop scmov
	cthis hide
	push $1
	spushs
	spop $a
	call [$a],hide
	cthis getname
	call butgame,removebutmoveoff
	push 1
	call tea_anim,play
	push 610
	call tea_anim,setz
	jmp l6281
l6282:
	push "snd_tea"
	cthis cbplay
l6281:
	end method
	method mouse_lclick
	push bignoremsclick
	cmp0
	je l6284
	push 0
	pop bignoremsclick
	jmp l6283
l6284:
	push scmov
	push "null"
	cmpjne
	cmp0
	je l6286
	call cmov,getfree
	popax
	push 1
	pop igmstate
	push scmov
	spushs
	push 0
	push 0
	spop $a
	call [$a],setpos
	push scmov
	spushs
	push 1
	popax
	sub 0,$a
	push 1
	spop $a
	call [$a],setframe
	push scmov
	spushs
	push scmov
	spushs
	spop $a
	call [$a],myz
	spop $a
	call [$a],setz
	push scmov
	call butgame,add
	push "null"
	pop scmov
l6286:
l6283:
	end method
	method mouse_lrel
	cthis checktouchpad
	cmp0
	je l6288
	cthis mouse_lclick
l6288:
	end method
	method mend
	push "ad19_szopa"
	push "gamead19_szopa0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	cthis ho_hint_click
	neg
	cmp0
	je l6290
	push "txtel_anrune7"
	call grtxt,contains
	cmp0
	je l6292
	push "anrune7"
	cthis mhintonobj
	popax
	jmp l6291
l6292:
	push "HO_herbs"
	cthis mgetel
	cthis mhintonobj
	popax
	push "HO_kettle"
	cthis mgetel
	cthis mhintonobj
	popax
l6291:
l6290:
	end method
	end game

	game HO17_Fontanna
	parent HOBanshee
	method init
	new anima,anrekawica_2
	cthis get_difficulty
	push 3
	cmpjl
	cmp0
	je l6294
	push "scripts/ho17_fontanna/rekawica_2.pyz"
	call anrekawica_2,load
	jmp l6293
l6294:
	push "scripts/ho17_fontanna/rekawica_2a.pyz"
	call anrekawica_2,load
l6293:
	push "ho17_fontanna"
	push ""
	cthis HOBanshee_init
	push A
	push "bkg.jpg"
	push "final_bkg.pyzH 300"
	push "popexit.pyzH 320"
	cthis imgs=
	push A
	push "openwindow"
	cthis sfxs=
	call anrekawica_2,mhobut
	push 20
	call anrekawica_2,setz
	cthis mmasks
	push "klatka_open"
	cthis mgetel
	spushs
	spop $a
	call [$a],hide
	push "takenho_HO17_Fontanna_anrekawica_2"
	call clsave,bis
	neg
	cmp0
	je l6296
	push "anrekawica_2"
	cthis mtoloupe
l6296:
	push "HO17_Fontanna_klatka_open"
	call clsave,bis
	cmp0
	je l6298
	push "klatka_closed"
	cthis mgetel
	spushs
	spop $a
	call [$a],hide
	push "klatka_open"
	cthis mgetel
	spushs
	spop $a
	call [$a],show
l6298:
	push "takenho_HO17_Fontanna_HO_ring"
	call clsave,bis
	neg
	cmp0
	je l6300
	localdef $1
	push "HO_ring"
	cthis mgetel
	spushs
	spop $a
	call [$a],stxtview
	pop $1
	push $1
	spushs
	cthis hoexternalcol
	spop $a
	call [$a],createtxt
l6300:
	cthis stdhoenter
	push "banshee2.ogg -v 70 -l"
	call mus,playstr
	end method
	method rekawica_2_preclick
	push "anrekawica_2"
	cthis remove_from_loupe
	call anrekawica_2,mho_click
	call anrekawica_2,show
	end method
	method klatka_closed_click
	cthis hide
	push "klatka_open"
	cthis mgetel
	spushs
	spop $a
	call [$a],show
	push "HO17_Fontanna_klatka_open"
	call clsave,bset
	call fxopenwindow,play
	end method
	method hiddenobj_put
	call grtxt,empty
	cmp0
	je l6302
	push 20
	pop igmstate
	cthis set_mg_finished
	push "rekawica_2"
	push "kielich"
	push "anfinal_bkg"
	cthis show_double_screen
l6302:
	end method
	method mend
	push "ad17_fontanna"
	push "gamead17_fontanna0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	cthis ho_hint_click
	neg
	cmp0
	je l6304
	push "anrekawica_2"
	cthis showhint
l6304:
	end method
	end game

	game HO01a_ksmala
	parent HOBanshee
	method init
	push 1
	pop HiddenShape
	cthis get_difficulty
	push 3
	cmpjl
	cmp0
	je l6306
	push "ho01a_ksmala"
	push ""
	cthis HOBanshee_init
	jmp l6305
l6306:
	push "ho01a_ksmala"
	push "2"
	cthis HOBanshee_init
l6305:
	push "crying_loop -v 40 -l"
	call mus,playstr
	push A
	push "anim_coord.pyzH"
	push "bkg.jpg"
	push "popup_bkg.pyz 4"
	push "ramka.pyzG 90"
	push "final_bkg.pyzH 100"
	push "popexit.pyz 120"
	cthis imgs=
	cthis butpopexit
	call anhoexit,hide
	push "part1"
	cthis mtoloupe
	push "part2"
	cthis mtoloupe
	push "part3"
	cthis mtoloupe
	push "part4"
	cthis mtoloupe
	push "part5"
	cthis mtoloupe
	push "part6"
	cthis mtoloupe
	cthis mmasks
	call anpopup_bkg,HO01a_ksmala0
	call imgbkg,HO01a_ksmala1
	push "HO01a_ksmala3"
	call ccs,enter
	end method
	method HO01a_ksmala0
	cthis Button_isinalpha
	cthis getname
	call butgame,add
	end method
	method HO01a_ksmala1
	cthis Button_isinalpha
	push "butclick"
	push "HO01a_ksmala2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method HO01a_ksmala2
	cthis advstdstate
	neg
	cmp0
	je l6308
	ret
l6308:
	cthis mend
	end method
	method HO01a_ksmala3
	push 1
	pop igmstate
	cthis advsetstdstate
	push "T8shapes"
	cthis tutpos
	cthis show_tutorial
	end method
	method part1_click
	cthis show
	cthis getname
	cthis remove_from_loupe
	end method
	method part2_click
	cthis show
	cthis getname
	cthis remove_from_loupe
	end method
	method part3_click
	cthis show
	cthis getname
	cthis remove_from_loupe
	end method
	method part4_click
	cthis show
	cthis getname
	cthis remove_from_loupe
	end method
	method part5_click
	cthis show
	cthis getname
	cthis remove_from_loupe
	end method
	method part6_click
	cthis show
	cthis getname
	cthis remove_from_loupe
	end method
	method hiddenobj_put
	cthis hide_tutorial
	call grtxt,empty
	cmp0
	je l6310
	push 20
	pop igmstate
	cthis set_mg_finished
	push "herb"
	push "anfinal_bkg"
	cthis show_single_screen
l6310:
	end method
	method HINT_CLICK
	cthis ho_hint_click
	popax
	call grtxt,empty
	neg
	cmp0
	je l6312
	push "guiglass"
	cthis showhint2v
l6312:
	end method
	method mend
	push 1000
	call mus,fadeout
	push "ad002a_kdoors"
	push "gamead002a_kdoors0"
	cthis stdexitdefadv
	end method
	end game

	game HO21_Holglowny
	parent HOBanshee
	method init
	cthis get_difficulty
	push 3
	cmpjl
	cmp0
	je l6314
	push "ho21_holglowny"
	push ""
	cthis HOBanshee_init
	jmp l6313
l6314:
	push "ho21_holglowny"
	push "2"
	cthis HOBanshee_init
l6313:
	push "banshee2.ogg -v 70 -l"
	call mus,playstr
	push A
	push "bkg.jpg"
	push "final_bkg.pyzH 300"
	push "popexit.pyzH 320"
	cthis imgs=
	push "ho_powder_compact"
	cthis mtoloupe
	push "takenho_HO21_Holglowny_ho_shawl"
	call clsave,bis
	cmp0
	je l6316
	push "ho_shawl"
	cthis mgetel
	spushs
	spop $a
	call [$a],hide
l6316:
	push "takenho_HO21_Holglowny_ho_tree"
	call clsave,bis
	neg
	cmp0
	je l6318
	localdef $1
	push "ho_tree"
	cthis mgetel
	spushs
	spop $a
	call [$a],stxtview
	pop $1
	push $1
	spushs
	cthis hoexternalcol
	spop $a
	call [$a],createtxt
l6318:
	cthis mmasks
	cthis stdhoenter
	end method
	method ho_powder_compact_click
	cthis show
	cthis getname
	cthis remove_from_loupe
	end method
	method ho_shawl_click
	push "takenho_HO21_Holglowny_ho_shawl"
	call clsave,bis
	neg
	cmp0
	je l6320
	push 400
	push "null"
	cthis anfadeout
	push "takenho_HO21_Holglowny_ho_shawl"
	call clsave,bset
l6320:
	end method
	method hiddenobj_put
	call grtxt,empty
	cmp0
	je l6322
	push 20
	pop igmstate
	cthis set_mg_finished
	push "klucz_klodka"
	push "tree"
	push "anfinal_bkg"
	cthis show_double_screen
l6322:
	end method
	method mend
	push "ad21_holglowny"
	push "gamead21_holglowny0"
	cthis stdexitdefadv
	end method
	end game

	game HO23_Spizarnia
	parent HOBanshee
	method init
	cthis get_difficulty
	push 3
	cmpjl
	cmp0
	je l6324
	push "ho23_spizarnia"
	push ""
	cthis HOBanshee_init
	jmp l6323
l6324:
	push "ho23_spizarnia"
	push "2"
	cthis HOBanshee_init
l6323:
	push "banshee2.ogg -v 70 -l"
	call mus,playstr
	push A
	push "bkg.jpg"
	push "swi1.pyz 200"
	push "swietlik.pyz 200"
	push "swietlik1.pyz 200"
	push "swietlik2.pyz 200"
	push "swietlik3.pyz 200"
	push "swietlik4.pyz 200"
	push "swietlik5.pyz 200"
	push "ziele1.pyz 201"
	push "ziele2.pyz 201"
	push "maska.pyz 202"
	push "galanim2.pyz 299"
	push "final_bkg.pyzH 300"
	push "popexit.pyzH 320"
	cthis imgs=
	push A
	push "openwindow"
	cthis sfxs=
	cthis mmasks
	push "ho_knife"
	cthis mtoloupe
	call answi1,anopacityframe
	push 0
	call answi1,play
	push "anziele1"
	push 1.64
	push 1.64
	popax
	sub 0,$a
	push 0.64
	push 2
	push 1
	cthis gmbuildroto
	push "anziele2"
	push 3.84
	push 3.84
	popax
	sub 0,$a
	push 0.64
	push 1
	push 1
	cthis gmbuildroto
	push "angalanim2"
	push 1.64
	push 1.64
	popax
	sub 0,$a
	push 0.32
	push 3
	push 1
	cthis gmbuildroto
	push "takenho_HO23_Spizarnia_ho_binoculars"
	call clsave,bis
	neg
	cmp0
	je l6326
	localdef $1
	push "ho_binoculars"
	cthis mgetel
	spushs
	spop $a
	call [$a],stxtview
	pop $1
	push $1
	spushs
	cthis hoexternalcol
	spop $a
	call [$a],createtxt
l6326:
	push "takenho_HO23_Spizarnia_pix_close"
	call clsave,bis
	neg
	cmp0
	je l6328
	push "pix_open"
	cthis mgetel
	spushs
	spop $a
	call [$a],hide
	push "pix_close"
	push "take"
	cthis setmovedcursor
	jmp l6327
l6328:
	push "pix_close"
	cthis mgetel
	spushs
	spop $a
	call [$a],hide
l6327:
	push 0
	call answietlik,play
	push 0
	call answietlik1,play
	push 0
	call answietlik2,play
	push 0
	call answietlik3,play
	push 0
	call answietlik4,play
	push 0
	call answietlik5,play
	cthis stdhoenter
	end method
	method pix_close_click
	push "takenho_HO23_Spizarnia_pix_close"
	call clsave,bis
	neg
	cmp0
	je l6330
	call fxopenwindow,play
	push "pix_open"
	cthis mgetel
	spushs
	push 400
	push "null"
	spop $a
	call [$a],anfadein
	push 400
	push "null"
	cthis anfadeout
	call advmouse,setstd
	push "takenho_HO23_Spizarnia_pix_close"
	call clsave,bset
l6330:
	end method
	method ho_knife_click
	cthis show
	cthis getname
	cthis remove_from_loupe
	end method
	method hiddenobj_put
	call grtxt,empty
	cmp0
	je l6332
	push 20
	pop igmstate
	cthis set_mg_finished
	push "deska"
	push "noga_zaby"
	push "anfinal_bkg"
	cthis show_double_screen
l6332:
	end method
	method mend
	push "ad23_spizarnia"
	push "gamead23_spizarnia0"
	cthis stdexitdefadv
	end method
	end game

	game HO22_Kuchnia
	parent HOBanshee
	method init
	new anima,anmizeria
	push "scripts/ho22_kuchnia/mizeria.pyz"
	call anmizeria,load
	call anmizeria,hide
	cthis get_difficulty
	push 3
	cmpjl
	cmp0
	je l6334
	push "ho22_kuchnia"
	push ""
	cthis HOBanshee_init
	jmp l6333
l6334:
	push "ho22_kuchnia"
	push "2"
	cthis HOBanshee_init
l6333:
	push "banshee2.ogg -v 70 -l"
	call mus,playstr
	push A
	push "bkg.jpg"
	push "final_bkg.pyzH 300"
	push "popexit.pyzH 320"
	cthis imgs=
	push A
	push "ciencie"
	push "openwindow"
	cthis sfxs=
	push "ho_zgnilejablko"
	cthis mtoloupe
	cthis mmasks
	new DelayMover,cmov
	call cmov,unlock
	new string,scmov
	push "null"
	pop scmov
	new int,bignoremsclick
	push 0
	pop bignoremsclick
	push "takenho_HO22_Kuchnia_ZAMKNIETE"
	call clsave,bis
	cmp0
	je l6336
	push "ZAMKNIETE"
	cthis mgetel
	spushs
	spop $a
	call [$a],hide
	push "OTWARTE"
	cthis mgetel
	spushs
	spop $a
	call [$a],show
	jmp l6335
l6336:
	push "ZAMKNIETE"
	cthis mgetel
	spushs
	spop $a
	call [$a],show
	push "OTWARTE"
	cthis mgetel
	spushs
	spop $a
	call [$a],hide
	push "ZAMKNIETE"
	push "take"
	cthis setmovedcursor
l6335:
	push "onfinish"
	push "HO22_Kuchnia0"
	call anmizeria,addmethod
	push "ho_ogoras"
	push "use"
	cthis setmovedcursor
	push "ho_chopper"
	push "take"
	cthis setmovedcursor
	cthis stdhoenter
	push "snd_ogor"
	push "kinnat_c3d3_5d"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_ogor,addmethod
	end method
	method HO22_Kuchnia0
	push 1
	pop igmstate
	cthis mho_click
	end method
	method horemoved_anmizeria
	push "ho_ogoras"
	cthis removehoitem
	push "ho_chopper"
	cthis removehoitem
	end method
	method ho_ogoras_preclick
	cthis ogoras_preclick
	end method
	method ho_chopper_preclick
	cthis mizeria_preclick
	end method
	method mizeria_preclick
	localdef $1
	call cmov,getfree
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l6338
	push "null"
	pop scmov
	cthis hide
	push $1
	spushs
	spop $a
	call [$a],hide
	cthis getname
	call butgame,removebutmoveoff
	push "new"
	call anmizeria,play
	push "timdbls"
	push 1200
	push "HO22_Kuchnia1"
	cthis timplay
	push 610
	call anmizeria,setz
	jmp l6337
l6338:
	cthis getname
	pop scmov
	push 1
	pop bignoremsclick
	push 6
	pop igmstate
	push 600
	cthis setz
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	push scmov
	call cmov,mssetobj
	push scmov
	call butgame,removebut
l6337:
	end method
	method HO22_Kuchnia1
	call fxciencie,play
	end method
	method ogoras_preclick
	localdef $1
	call cmov,getfree
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l6340
	push "null"
	pop scmov
	cthis hide
	push $1
	spushs
	spop $a
	call [$a],hide
	cthis getname
	call butgame,removebutmoveoff
	push "new"
	call anmizeria,play
	push "timdbls"
	push 1200
	push "HO22_Kuchnia2"
	cthis timplay
	push 610
	call anmizeria,setz
	jmp l6339
l6340:
	push "snd_ogor"
	cthis cbplay
l6339:
	end method
	method HO22_Kuchnia2
	call fxciencie,play
	end method
	method mouse_lclick
	push bignoremsclick
	cmp0
	je l6342
	push 0
	pop bignoremsclick
	jmp l6341
l6342:
	push scmov
	push "null"
	cmpjne
	cmp0
	je l6344
	call cmov,getfree
	popax
	push 1
	pop igmstate
	push scmov
	spushs
	push 0
	push 0
	spop $a
	call [$a],setpos
	push scmov
	spushs
	push 1
	popax
	sub 0,$a
	push 1
	spop $a
	call [$a],setframe
	push scmov
	spushs
	push scmov
	spushs
	spop $a
	call [$a],myz
	spop $a
	call [$a],setz
	push scmov
	call butgame,add
	push "null"
	pop scmov
l6344:
l6341:
	end method
	method mouse_lrel
	cthis checktouchpad
	cmp0
	je l6346
	cthis mouse_lclick
l6346:
	end method
	method ZAMKNIETE_click
	push "takenho_HO22_Kuchnia_ZAMKNIETE"
	call clsave,bis
	neg
	cmp0
	je l6348
	call fxopenwindow,play
	call advmouse,setstd
	push 400
	push "null"
	cthis anfadeout
	push "OTWARTE"
	cthis mgetel
	spushs
	spop $a
	call [$a],show
	push "takenho_HO22_Kuchnia_ZAMKNIETE"
	call clsave,bset
l6348:
	end method
	method ho_zgnilejablko_click
	cthis show
	cthis getname
	cthis remove_from_loupe
	end method
	method hiddenobj_put
	call grtxt,empty
	cmp0
	je l6350
	push 20
	pop igmstate
	cthis set_mg_finished
	push "chochla"
	push "magiczne_nasiona"
	push "anfinal_bkg"
	cthis show_double_screen
l6350:
	end method
	method mend
	push "ad22_kuchnia"
	push "gamead22_kuchnia0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	cthis ho_hint_click
	neg
	cmp0
	je l6352
	push "ho_ogoras"
	cthis mgetel
	cthis mhintonobj
	popax
	push "ho_chopper"
	cthis mgetel
	cthis mhintonobj
	popax
l6352:
	end method
	end game

	game HO25_Sypialnia
	parent HOBanshee
	method init
	new anima,anrose_anim
	push "scripts/ho25_sypialnia/rose_anim.pyz"
	call anrose_anim,load
	call anrose_anim,hide
	cthis get_difficulty
	push 3
	cmpjl
	cmp0
	je l6354
	push "ho25_sypialnia"
	push ""
	cthis HOBanshee_init
	jmp l6353
l6354:
	push "ho25_sypialnia"
	push "2"
	cthis HOBanshee_init
l6353:
	push "snd_rose"
	push "kinnat_c3d3_9a"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_rose,addmethod
	push "banshee2.ogg -v 70 -l"
	call mus,playstr
	push A
	push "bkg.jpg"
	push "bkg_final.pyzH 300"
	push "popexit.pyzH 320"
	cthis imgs=
	push "Luneta_L3"
	cthis mtoloupe
	push "e1_ad25_szmata_zawieszona"
	call clsave,bis
	neg
	cmp0
	je l6356
	new anima,anlight
	push "scripts/ho25_sypialnia/light.pyz"
	call anlight,load
	push 300
	call anlight,setz
	call anlight,HO25_Sypialnia0
	push "HO25_Sypialnia_intro_spoken"
	call clsave,bis
	neg
	cmp0
	je l6360
	push "snd_intro"
	push "kinnat_c3d3_7"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_intro,addmethod
	push "snd_intro"
	cthis cbplay
	push "HO25_Sypialnia_intro_spoken"
	call clsave,bset
l6360:
	jmp l6355
l6356:
	push "HO25_Sypialnia_light_off_spoken"
	call clsave,bis
	neg
	cmp0
	je l6362
	push "snd_intro"
	push "kinnat_c3d3_9"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_intro,addmethod
	push "snd_intro"
	cthis cbplay
	push "HO25_Sypialnia_light_off_spoken"
	call clsave,bset
l6362:
	push "ho_rose"
	push "use"
	cthis setmovedcursor
	push "ho_lipstick"
	push "take"
	cthis setmovedcursor
l6355:
	cthis mmasks
	new DelayMover,cmov
	call cmov,unlock
	new string,scmov
	push "null"
	pop scmov
	new int,bignoremsclick
	push 0
	pop bignoremsclick
	push "onfinish"
	push "HO25_Sypialnia3"
	call anrose_anim,addmethod
	cthis stdhoenter
	end method
	method HO25_Sypialnia0
	push "isbutin"
	push "HO25_Sypialnia1"
	cthis addmethod
	push "butclick"
	push "HO25_Sypialnia2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method HO25_Sypialnia1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	end method
	method HO25_Sypialnia2
	cthis advstdstate
	neg
	cmp0
	je l6358
	ret
l6358:
	ret
	end method
	method HO25_Sypialnia3
	push 1
	pop igmstate
	cthis mho_click
	end method
	method horemoved_anrose_anim
	push "ho_rose"
	cthis removehoitem
	push "ho_lipstick"
	cthis removehoitem
	end method
	method ho_lipstick_preclick
	cthis lipstick_preclick
	end method
	method ho_rose_preclick
	cthis rose_preclick
	end method
	method lipstick_preclick
	localdef $1
	call cmov,getfree
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l6364
	push "null"
	pop scmov
	cthis hide
	push $1
	spushs
	spop $a
	call [$a],hide
	cthis getname
	call butgame,removebutmoveoff
	push 1
	call anrose_anim,play
	push 610
	call anrose_anim,setz
	jmp l6363
l6364:
	cthis getname
	pop scmov
	push 1
	pop bignoremsclick
	push 6
	pop igmstate
	push 600
	cthis setz
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	push scmov
	call cmov,mssetobj
	push scmov
	call butgame,removebut
l6363:
	end method
	method rose_preclick
	localdef $1
	call cmov,getfree
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l6366
	push "null"
	pop scmov
	cthis hide
	push $1
	spushs
	spop $a
	call [$a],hide
	cthis getname
	call butgame,removebutmoveoff
	push 1
	call anrose_anim,play
	push 610
	call anrose_anim,setz
	jmp l6365
l6366:
	push "snd_rose"
	cthis cbplay
l6365:
	end method
	method mouse_lclick
	push bignoremsclick
	cmp0
	je l6368
	push 0
	pop bignoremsclick
	jmp l6367
l6368:
	push scmov
	push "null"
	cmpjne
	cmp0
	je l6370
	call cmov,getfree
	popax
	push 1
	pop igmstate
	push scmov
	spushs
	push 0
	push 0
	spop $a
	call [$a],setpos
	push scmov
	spushs
	push 1
	popax
	sub 0,$a
	push 1
	spop $a
	call [$a],setframe
	push scmov
	spushs
	push scmov
	spushs
	spop $a
	call [$a],myz
	spop $a
	call [$a],setz
	push scmov
	call butgame,add
	push "null"
	pop scmov
l6370:
l6367:
	end method
	method mouse_lrel
	cthis checktouchpad
	cmp0
	je l6372
	cthis mouse_lclick
l6372:
	end method
	method Luneta_L3_click
	cthis show
	cthis getname
	cthis remove_from_loupe
	end method
	method hiddenobj_put
	call grtxt,empty
	cmp0
	je l6374
	push 20
	pop igmstate
	cthis set_mg_finished
	push "fragment_lunety3"
	push "gwizdek"
	push "anbkg_final"
	cthis show_double_screen
l6374:
	end method
	method HINT_CLICK
	push "e1_ad25_szmata_zawieszona"
	call clsave,bis
	neg
	cmp0
	je l6376
	push "anhoexit"
	cthis showhint
	jmp l6375
l6376:
	cthis ho_hint_click
	neg
	cmp0
	je l6378
	push "ho_lipstick"
	cthis mgetel
	cthis mhintonobj
	popax
	push "ho_rose"
	cthis mgetel
	cthis mhintonobj
	popax
l6378:
l6375:
	end method
	method mend
	push "ad25_sypialnia"
	push "gamead25_sypialnia0"
	cthis stdexitdefadv
	end method
	end game

	game HO36_cmentarz
	parent HOBanshee
	method init
	cthis get_difficulty
	push 3
	cmpjl
	cmp0
	je l6380
	push "ho36_cmentarz"
	push ""
	cthis HOBanshee_init
	jmp l6379
l6380:
	push "ho36_cmentarz"
	push "2"
	cthis HOBanshee_init
l6379:
	push "banshee2.ogg -v 70 -l"
	call mus,playstr
	new anima,anknife_anim
	push "scripts/ho36_cmentarz/knife_anim.pyz"
	call anknife_anim,load
	call anknife_anim,hide
	push A
	push "bkg.jpg"
	push "bkg_final.pyzH 300"
	push "popexit.pyzH 320"
	cthis imgs=
	push "ho_pogrzebacz"
	cthis mtoloupe
	cthis mmasks
	new DelayMover,cmov
	call cmov,unlock
	new string,scmov
	push "null"
	pop scmov
	new int,bignoremsclick
	push 0
	pop bignoremsclick
	cthis stdhoenter
	new anima,swiecaa
	push "scripts/ho36_cmentarz/swiecaa.pyz"
	call swiecaa,load
	push 0
	call swiecaa,play
	new anima,swiecab
	push "scripts/ho36_cmentarz/swiecab.pyz"
	call swiecab,load
	push 0
	call swiecab,play
	new anima,swiecac
	push "scripts/ho36_cmentarz/swiecac.pyz"
	call swiecac,load
	push 0
	call swiecac,play
	new anima,swiecad
	push "scripts/ho36_cmentarz/swiecad.pyz"
	call swiecad,load
	push 0
	call swiecad,play
	push "ho_pendant_otwarta_"
	cthis mgetel
	spushs
	spop $a
	call [$a],hide
	push "takenho_HO36_cmentarz_ho_golden_heart"
	call clsave,bis
	neg
	cmp0
	je l6382
	push "ho_golden_heart"
	cthis mgetel
	spushs
	spop $a
	call [$a],hide
	push "ho_golden_heart"
	cthis mgetel
	spushs
	push "bnohint"
	push 1
	spop $a
	call [$a],var2
l6382:
	push "HO36_cmentarz_noz_uzyty"
	call clsave,bis
	cmp0
	je l6384
	push "ho_knife"
	cthis removehoitem
	push "ho_pendant"
	cthis removehoitem
	push "ho_pendant_otwarta_"
	cthis mgetel
	spushs
	spop $a
	call [$a],show
	push "takenho_HO36_cmentarz_ho_golden_heart"
	call clsave,bis
	neg
	cmp0
	je l6386
	push "ho_golden_heart"
	cthis mgetel
	spushs
	spop $a
	call [$a],show
	push "ho_golden_heart"
	cthis mgetel
	spushs
	push 0
	spop $a
	call [$a],bnohint=
l6386:
	jmp l6383
l6384:
	localdef $1
	push "ho_golden_heart"
	cthis mgetel
	spushs
	spop $a
	call [$a],stxtview
	pop $1
	push $1
	spushs
	cthis hoexternalcol
	spop $a
	call [$a],createtxt
	push "onfinish"
	push "HO36_cmentarz0"
	call anknife_anim,addmethod
l6383:
	push "ho_pendant"
	push "use"
	cthis setmovedcursor
	push "ho_knife"
	push "take"
	cthis setmovedcursor
	push "snd_pendant"
	push "kinnat_c4d4_12b"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_pendant,addmethod
	end method
	method HO36_cmentarz0
	cthis hide
	push 1
	pop igmstate
	cthis mho_click
	push "ho_pendant_otwarta_"
	cthis mgetel
	spushs
	spop $a
	call [$a],show
	push "ho_golden_heart"
	cthis mgetel
	spushs
	spop $a
	call [$a],show
	push "ho_golden_heart"
	cthis mgetel
	spushs
	push 0
	spop $a
	call [$a],bnohint=
	push "HO36_cmentarz_noz_uzyty"
	call clsave,bset
	end method
	method ho_knife_preclick
	cthis knife_preclick
	end method
	method ho_pendant_preclick
	cthis pendant_preclick
	end method
	method knife_preclick
	localdef $1
	call cmov,getfree
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l6388
	push "null"
	pop scmov
	cthis hide
	push $1
	spushs
	spop $a
	call [$a],hide
	cthis getname
	call butgame,removebutmoveoff
	push 1
	call anknife_anim,play
	push 610
	call anknife_anim,setz
	jmp l6387
l6388:
	cthis getname
	pop scmov
	push 1
	pop bignoremsclick
	push 6
	pop igmstate
	push 600
	cthis setz
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	push scmov
	call cmov,mssetobj
	push scmov
	call butgame,removebut
l6387:
	end method
	method pendant_preclick
	localdef $1
	call cmov,getfree
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l6390
	push "null"
	pop scmov
	cthis hide
	push $1
	spushs
	spop $a
	call [$a],hide
	cthis getname
	call butgame,removebutmoveoff
	push 1
	call anknife_anim,play
	push 610
	call anknife_anim,setz
	jmp l6389
l6390:
	push "snd_pendant"
	cthis cbplay
l6389:
	end method
	method mouse_lclick
	push bignoremsclick
	cmp0
	je l6392
	push 0
	pop bignoremsclick
	jmp l6391
l6392:
	push scmov
	push "null"
	cmpjne
	cmp0
	je l6394
	call cmov,getfree
	popax
	push 1
	pop igmstate
	push scmov
	spushs
	push 0
	push 0
	spop $a
	call [$a],setpos
	push scmov
	spushs
	push 1
	popax
	sub 0,$a
	push 1
	spop $a
	call [$a],setframe
	push scmov
	spushs
	push scmov
	spushs
	spop $a
	call [$a],myz
	spop $a
	call [$a],setz
	push scmov
	call butgame,add
	push "null"
	pop scmov
l6394:
l6391:
	end method
	method mouse_lrel
	cthis checktouchpad
	cmp0
	je l6396
	cthis mouse_lclick
l6396:
	end method
	method hiddenobj_put
	call grtxt,empty
	cmp0
	je l6398
	push 20
	pop igmstate
	cthis set_mg_finished
	push "korek"
	push "pogrzebacz"
	push "anbkg_final"
	cthis show_double_screen
l6398:
	end method
	method mend
	push "ad31_salatortur"
	push "gamead31_salatortur0"
	cthis stdexitdefadv
	end method
	method ho_pogrzebacz_click
	cthis show
	cthis getname
	cthis remove_from_loupe
	end method
	method HINT_CLICK
	cthis ho_hint_click
	neg
	cmp0
	je l6400
	push "ho_knife"
	cthis mgetel
	cthis mhintonobj
	popax
	push "ho_pendant"
	cthis mgetel
	cthis mhintonobj
	popax
l6400:
	end method
	end game

	game HO44_Strych
	parent HOBanshee
	method init
	new anima,ankot_anim
	push "scripts/ho44_strych/kot_anim.pyz"
	call ankot_anim,load
	call ankot_anim,hide
	cthis get_difficulty
	push 3
	cmpjl
	cmp0
	je l6402
	push "ho44_strych"
	push ""
	cthis HOBanshee_init
	jmp l6401
l6402:
	push "ho44_strych"
	push "2"
	cthis HOBanshee_init
l6401:
	push "banshee2.ogg -v 70 -l"
	call mus,playstr
	push "ho_jar"
	cthis mtoloupe
	push A
	push "bkg.jpg"
	push "bkg_final.pyzH 300"
	push "popexit.pyzH 320"
	cthis imgs=
	cthis mmasks
	new DelayMover,cmov
	call cmov,unlock
	new string,scmov
	push "null"
	pop scmov
	new int,bignoremsclick
	push 0
	pop bignoremsclick
	cthis stdhoenter
	push "snd_cat"
	push "kinnat_c4d4_40a"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_cat,addmethod
	push "ho_cat"
	push "use"
	cthis setmovedcursor
	push "ho_mirror"
	push "take"
	cthis setmovedcursor
	cthis stdhoenter
	push "onfinish"
	push "HO44_Strych0"
	call ankot_anim,addmethod
	end method
	method HO44_Strych0
	push 1
	pop igmstate
	cthis mho_click
	end method
	method horemoved_ankot_anim
	push "ho_cat"
	cthis removehoitem
	push "ho_mirror"
	cthis removehoitem
	end method
	method ho_cat_preclick
	cthis cat_preclick
	end method
	method ho_mirror_preclick
	cthis mirror_preclick
	end method
	method mirror_preclick
	localdef $1
	call cmov,getfree
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l6404
	push "null"
	pop scmov
	cthis hide
	push $1
	spushs
	spop $a
	call [$a],hide
	cthis getname
	call butgame,removebutmoveoff
	push 1
	call ankot_anim,play
	push 610
	call ankot_anim,setz
	jmp l6403
l6404:
	cthis getname
	pop scmov
	push 1
	pop bignoremsclick
	push 6
	pop igmstate
	push 600
	cthis setz
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	push scmov
	call cmov,mssetobj
	push scmov
	call butgame,removebut
l6403:
	end method
	method cat_preclick
	localdef $1
	call cmov,getfree
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l6406
	push "null"
	pop scmov
	cthis hide
	push $1
	spushs
	spop $a
	call [$a],hide
	cthis getname
	call butgame,removebutmoveoff
	push 1
	call ankot_anim,play
	push 610
	call ankot_anim,setz
	jmp l6405
l6406:
	push "snd_cat"
	cthis cbplay
l6405:
	end method
	method mouse_lclick
	push bignoremsclick
	cmp0
	je l6408
	push 0
	pop bignoremsclick
	jmp l6407
l6408:
	push scmov
	push "null"
	cmpjne
	cmp0
	je l6410
	call cmov,getfree
	popax
	push 1
	pop igmstate
	push scmov
	spushs
	push 0
	push 0
	spop $a
	call [$a],setpos
	push scmov
	spushs
	push 1
	popax
	sub 0,$a
	push 1
	spop $a
	call [$a],setframe
	push scmov
	spushs
	push scmov
	spushs
	spop $a
	call [$a],myz
	spop $a
	call [$a],setz
	push scmov
	call butgame,add
	push "null"
	pop scmov
l6410:
l6407:
	end method
	method mouse_lrel
	cthis checktouchpad
	cmp0
	je l6412
	cthis mouse_lclick
l6412:
	end method
	method ho_jar_click
	cthis show
	cthis getname
	cthis remove_from_loupe
	end method
	method ho_horse_click
	push 1
	popax
	sub 0,$a
	push 2
	cthis setframe
	end method
	method ho_wheel_click
	push 1
	popax
	sub 0,$a
	push 2
	cthis setframe
	end method
	method ho_ant_click
	push 1
	popax
	sub 0,$a
	push 2
	cthis setframe
	end method
	method hiddenobj_put
	call grtxt,empty
	cmp0
	je l6414
	push 20
	pop igmstate
	cthis set_mg_finished
	push "kolko"
	push "oliwiarka"
	push "anbkg_final"
	cthis show_double_screen
l6414:
	end method
	method mend
	push "ad44_strych"
	push "gamead44_strych0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	cthis ho_hint_click
	neg
	cmp0
	je l6416
	push "ho_cat"
	cthis mgetel
	cthis mhintonobj
	popax
	push "ho_mirror"
	cthis mgetel
	cthis mhintonobj
	popax
l6416:
	end method
	end game

	game mg00Dzban
	parent Banshee
	method init
	push "mg00_dzban"
	clparent Banshee,init
	push A
	push "bgdzban.jpg"
	push "bgpop.pyz 1"
	push "ramka.pyz 2"
	push "popexit.pyz 100"
	push "elsc.pyzG 30"
	push "maski.pyzH 40"
	push "korek.pyz 5"
	push "dzbanspod.pyz 7"
	push "ksiezyc.pyzH 10"
	push "dzban.pyz 15"
	push "zlozone.pyzH 12"
	push "animopen.pyzH 14"
	push "blink.pyzH 35"
	push "dymek.pyzH 50"
	push "podpo.pyzH"
	push "popnak.pyz 60"
	push "grall"
	cthis imgsgr=
	push "mg00_dzban"
	cthis askopis
	call anaskopis,hide
	cthis butpopexit
	cthis butpopexitisinramka
	call anpopexit,getcx
	call anaskopis,getw
	pop $b
	popax
	add $a,$b
	call anpopexit,getcy
	call anaskopis,geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call anaskopis,ansetbpos
	push "guimapa_taken"
	call clsave,bis
	neg
	cmp0
	je l6418
	push "mapa.pyz 50"
	cthis img=
	call anmapa,Button_stdms
	push "butclick"
	push "mg00Dzban0"
	call anmapa,addmethod
	push "anmapa"
	call butgame,add
l6418:
	push "engine"
	call mus,smixer=
	push "banshee1.ogg -v 60 -l"
	call mus,playstr
	push A
	push "ceglamove"
	push "ceglaput"
	push "prund"
	push "clickoblok"
	push "book3"
	push "founditem1"
	cthis sfxs=
	push 0
	push 0
	call imgbgdzban,setpos
	push "andymek"
	push "andymek2"
	cthis copyanima
	push "ananimopen"
	push "animopen2"
	cthis copyanima
	call ananimopen,show
	push 40
	call ananimopen,setz
	push "onfinish"
	push "mopen_dzban"
	call animopen2,addmethod
	push "anksiezyc"
	cthis setasitemtopck
	push "anmaski"
	push "anmaski2"
	cthis copyanima
	push "anmaski1"
	call anmaski,addtogamevars
	new int,iilekat
	push 4
	pop iilekat
	call grelsc,first
	push "anrot1"
	cthis copyanima
	call grelsc,first
	push "anrot2"
	cthis copyanima
	call anrot1,hide
	call anrot2,hide
	new filter,ftrot1
	new filter,ftrot2
	new real,robrot
	new int,ilesteps
	call anzlozone,getcx
	call anzlozone,getcy
	call anrot1,setpos
	call anzlozone,getcx
	call anzlozone,getcy
	call anrot2,setpos
	call anzlozone,getcx
	call anzlozone,getcy
	call anpodpo,setpos
	new vector,vpos
	push "mg00Dzban2"
	call grelsc,eval
	push "e1_mg00dzban_hash"
	call clsave,bis
	cmp0
	je l6424
	localint $1
	push 0
	pop $1
l6425:
	push $1
	call vpos,size
	cmpjl
	cmp0
	je l6426
	jmp l6428
l6427:
	add $1,1
	pop $1
	jmp l6425
l6428:
	push $1
	push "e1_mg00dzban_pos_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,get
	call vpos,set
	push $1
	call grelsc,get
	spushs
	push 1
	popax
	sub 0,$a
	push $1
	call vpos,get
	spop $a
	call [$a],setframe
	jmp l6427
l6426:
	jmp l6423
l6424:
	call vpos,hash
	localint $1
	push 0
	pop $1
l6429:
	push $1
	call vpos,size
	cmpjl
	cmp0
	je l6430
	jmp l6432
l6431:
	add $1,1
	pop $1
	jmp l6429
l6432:
	push "e1_mg00dzban_pos_"
	push $1
	pop $b
	popax
	add $a,$b
	push $1
	call vpos,get
	call clsave,set
	jmp l6431
l6430:
	push "e1_mg00dzban_hash"
	call clsave,bset
	push "mg00Dzban3"
	call grelsc,each
l6423:
	new int,idclick
	push 0
	pop idclick
	new string,sclicked1
	new string,sclicked2
	push "mg00Dzban4"
	call grelsc,eval
	push "timcheck"
	push 500
	push "mg00Dzban8"
	cthis timer=
	push "timrot"
	push 50
	push "mg00Dzban9"
	cthis timer=
	push "e1_mg00dzban_ulozony"
	call clsave,bis
	cmp0
	je l6447
	cthis mshowmoon
	jmp l6446
l6447:
	push "guimapa_taken"
	call clsave,bis
	cmp0
	je l6449
	call guihint,switchtoskip
	call anaskopis,show
l6449:
l6446:
	cthis stdstart
	end method
	method mg00Dzban0
	cthis advstdstate
	neg
	cmp0
	je l6420
	ret
l6420:
	localint $1
	call anmapa,getcx
	pop $1
	localint $2
	call anmapa,getcy
	pop $2
	push "anmapa"
	push iRotoIleRot
	push iRotoIleObrotow
	clparent GuiItem,setasrototaker
	push 1
	push 0
	call anmapa,setframe
	push $1
	push $2
	call anmapa,setpos
	push "guimapa_taken"
	call clsave,bset
	push "state_takemap"
	cthis advsetstate
	push "anmapa"
	call butgame,removebut
	push "rototaker_endroto"
	push "mg00Dzban1"
	call anmapa,addmethod
	call fxbook3,play
	call anguimapa,getcx
	call anguimapa,getcy
	call anmapa,getw
	call anmapa,geth
	call anguimapa,getw
	call anguimapa,geth
	call anmapa,rototaker_startwh
	end method
	method mg00Dzban1
	cthis hide
	call anguimapa,show
	cthis advsetstdstate
	call fxfounditem1,play
	cthis enabled_tutorial
	cmp0
	je l6422
	push "T9mapicon"
	cthis tutpos
	cthis show_tutorial
	push "anguimapa"
	push "ld"
	cthis tutpoint
l6422:
	call guihint,switchtoskip
	call anaskopis,show
	end method
	method mg00Dzban2
	push 1
	popax
	sub 0,$a
	push 1
	popax
	sub 0,$a
	cthis actionnr
	cthis setframe
	call vpos,size
	call vpos,add
	call anzlozone,getcx
	call anzlozone,getcy
	cthis setpos
	end method
	method mg00Dzban3
	localdef $1
	pop $1
	push $1
	push $1
	call vpos,get
	cthis mchange
	end method
	method mg00Dzban4
	cthis Button_isinalpha
	push "butmoveon"
	push "mg00Dzban5"
	cthis addmethod
	push "butmoveoff"
	push "mg00Dzban6"
	cthis addmethod
	push "butclick"
	push "mg00Dzban7"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg00Dzban5
	push 1
	popax
	sub 0,$a
	cthis framenr
	call anblink,setframe
	cthis getposx
	cthis getposy
	call anblink,setpos
	call anblink,show
	end method
	method mg00Dzban6
	call anblink,hide
	end method
	method mg00Dzban7
	cthis advstdstate
	cmp0
	je l6434
	push "guimapa_taken"
	call clsave,bis
	jmp l6436
l6434:
	push 0
	jmp l6436
l6435:
	push 1
l6436:
	cmp0
	je l6437
	push idclick
	push 0
	cmpje
	cmp0
	je l6439
	add idclick,1
	pop idclick
	cthis getname
	cthis mmask
	call fxclickoblok,play
	jmp l6438
l6439:
	push idclick
	push 1
	cmpje
	cmp0
	je l6441
	push sclicked1
	cthis getname
	cmpjne
	cmp0
	je l6443
	call fxclickoblok,play
	add idclick,1
	pop idclick
	cthis getname
	cthis mmask
	push "check"
	pop sgmstate
	call timcheck,play
l6443:
l6441:
l6438:
l6437:
	end method
	method mg00Dzban8
	push 0
	pop idclick
	push sclicked1
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	push sclicked2
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	cthis mrot
	call anmaski1,hide
	call anmaski2,hide
	end method
	method mg00Dzban9
	push ilesteps
	push 0
	cmpja
	cmp0
	je l6445
	push robrot
	popax
	sub 0,$a
	call ftrot1,rotate
	push robrot
	call ftrot2,rotate
	call anzlozone,getcx
	call anzlozone,getcy
	call anrot1,setpos
	call anzlozone,getcx
	call anzlozone,getcy
	call anrot2,setpos
	sub ilesteps,1
	pop ilesteps
	cthis play
	jmp l6444
l6445:
	push 0
	call fxceglamove,stop
	call fxceglaput,play
	call ftrot1,unlink
	call ftrot2,unlink
	call anrot1,hide
	call anrot2,hide
	push sclicked1
	spushs
	spop $a
	call [$a],show
	push sclicked2
	spushs
	spop $a
	call [$a],show
	push sclicked1
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	push sclicked2
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	cthis mchange
	cthis mcheckend
l6444:
	end method
	method mcheckend
	localint $1
	push 1
	pop $1
	localint $2
	push 0
	pop $2
l6450:
	push $2
	call grelsc,size
	cmpjl
	cmp0
	je l6451
	jmp l6453
l6452:
	add $2,1
	pop $2
	jmp l6450
l6453:
	localdef $3
	push $2
	call grelsc,get
	pop $3
	push $3
	spushs
	spop $a
	call [$a],framenr
	push $2
	cmpjne
	cmp0
	je l6455
	push 0
	pop $1
l6455:
	jmp l6452
l6451:
	push $1
	cmp0
	je l6457
	cthis mskipmg
	jmp l6456
l6457:
	cthis advsetstdstate
l6456:
	end method
	method mskipmg
	push "e1_mg00dzban_ulozony"
	call clsave,bset
	push 500
	push "null"
	call anaskopis,anfadeout
	cthis mshowmoon
	push "state_open"
	pop sgmstate
	push 1
	call animopen2,play
	end method
	method mshowmoon
	call guihint,switchtohint
	push "grelsc"
	call butgame,remove
	call grelsc,hide
	call anksiezyc,show
	push 1
	push 1
	call animopen2,nofframes
	push 1
	pop $b
	popax
	sub $a,$b
	call animopen2,setframe
	push "take"
	call advmouse,set
	end method
	method mchange
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	cmpje
	cmp0
	je l6459
	ret
l6459:
	localdef $3
	push $1
	call grelsc,get
	pop $3
	localdef $4
	push $2
	call grelsc,get
	pop $4
	localdef $5
	push $3
	spushs
	spop $a
	call [$a],framenr
	pop $5
	push $3
	spushs
	push 1
	popax
	sub 0,$a
	push $4
	spushs
	spop $a
	call [$a],framenr
	spop $a
	call [$a],setframe
	push $4
	spushs
	push 1
	popax
	sub 0,$a
	push $5
	spop $a
	call [$a],setframe
	push "e1_mg00dzban_pos_"
	push $4
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	pop $b
	popax
	add $a,$b
	push $5
	call clsave,set
	push "e1_mg00dzban_pos_"
	push $3
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	pop $b
	popax
	add $a,$b
	push $3
	spushs
	spop $a
	call [$a],framenr
	call clsave,set
	end method
	method mrot
	localint $1
	localint $2
	pop $2
	pop $1
	localdef $3
	push $1
	call grelsc,get
	pop $3
	localdef $4
	push $2
	call grelsc,get
	pop $4
	push $3
	spushs
	spop $a
	call [$a],hide
	push $4
	spushs
	spop $a
	call [$a],hide
	call anrot1,show
	call anrot2,show
	localdef $5
	push sclicked1
	spushs
	spop $a
	call [$a],framenr
	pop $5
	localdef $6
	push sclicked2
	spushs
	spop $a
	call [$a],framenr
	pop $6
	push $3
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	push $5
	call anrot1,setframe
	push $4
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	push $6
	call anrot2,setframe
	push "anrot1"
	call ftrot1,link
	push "anrot2"
	call ftrot2,link
	push 2
	call ftrot1,setpivottype
	push 2
	call ftrot2,setpivottype
	localdef $7
	push 1
	popax
	sub 0,$a
	call anrot1,nofframes
	pop $7
	push $5
	push $6
	cmpja
	cmp0
	je l6461
	localdef $8
	push $5
	push $6
	pop $b
	popax
	sub $a,$b
	pop $8
	localdef $9
	push $6
	push $7
	push $5
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	add $a,$b
	pop $9
	push $8
	push $9
	cmpjl
	cmp0
	je l6463
	push $8
	push 1
	popax
	sub 0,$a
	cthis mupdate
	jmp l6462
l6463:
	push $9
	push 1
	cthis mupdate
l6462:
	jmp l6460
l6461:
	localdef $8
	push $6
	push $5
	pop $b
	popax
	sub $a,$b
	pop $8
	localdef $9
	push $5
	push $7
	push $6
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	add $a,$b
	pop $9
	push $8
	push $9
	cmpjl
	cmp0
	je l6465
	push $8
	push 1
	cthis mupdate
	jmp l6464
l6465:
	push $9
	push 1
	popax
	sub 0,$a
	cthis mupdate
l6464:
l6460:
	call fxceglamove,play
	call timrot,play
	end method
	method mupdate
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push iilekat
	pop $b
	popax
	mul $a,$b
	pop ilesteps
	push $2
	push 360
	pop $b
	popax
	mul $a,$b
	push 1
	popax
	sub 0,$a
	call anrot1,nofframes
	push iilekat
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	div $a,$b
	psax
	pop robrot
	end method
	method mmask
	localstring $1
	pop $1
	localint $2
	localint $3
	call mouse,getpos
	pop $3
	pop $2
	push idclick
	push 1
	cmpje
	cmp0
	je l6467
	push $2
	push $3
	call andymek,setpos
	push 0
	call andymek,play
	jmp l6466
l6467:
	push $2
	push $3
	call andymek2,setpos
	push 0
	call andymek2,play
l6466:
	push "sclicked"
	push idclick
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	spop $a
	call [$a],set
	localdef $4
	push "anmaski"
	push idclick
	pop $b
	popax
	add $a,$b
	pop $4
	push $4
	spushs
	push 0
	push $1
	spushs
	spop $a
	call [$a],framenr
	spop $a
	call [$a],setframe
	push $4
	spushs
	spop $a
	call [$a],show
	end method
	method mopen_dzban
	cthis advsetstdstate
	end method
	method anksiezyc_TAKE
	push "kolatka"
	cthis popitem_gotocenter
	end method
	method anksiezyc_INPCK
	push "kolatka"
	cthis addtopck
	push "e1_wyciagnela_kolatke"
	call clsave,bset
	cthis timfinito
	end method
	method mend
	push "ad00_endintro"
	push "gamead00_endintro0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "guimapa_taken"
	call clsave,bis
	neg
	cmp0
	je l6469
	push "anmapa"
	cthis showhint
	jmp l6468
l6469:
	push "e1_mg00dzban_ulozony"
	call clsave,bis
	neg
	cmp0
	je l6471
	cthis advstdstate
	jmp l6473
l6471:
	push 0
	jmp l6473
l6472:
	push 1
l6473:
	cmp0
	je l6474
	localstring $1
	localstring $2
	localint $3
	push 0
	pop $3
l6475:
	push $3
	call grelsc,size
	cmpjl
	cmp0
	je l6476
	jmp l6478
l6477:
	add $3,1
	pop $3
	jmp l6475
l6478:
	push $3
	call grelsc,get
	pop $1
	push $1
	spushs
	spop $a
	call [$a],framenr
	push $3
	cmpjne
	cmp0
	je l6480
	localint $4
	push 0
	pop $4
l6481:
	push $4
	call grelsc,size
	cmpjl
	cmp0
	je l6482
	jmp l6484
l6483:
	add $4,1
	pop $4
	jmp l6481
l6484:
	push $4
	call grelsc,get
	pop $2
	push $2
	spushs
	spop $a
	call [$a],framenr
	push $3
	cmpje
	cmp0
	je l6486
	push 0
	push $1
	spushs
	spop $a
	call [$a],framenr
	call anpodpo,setframe
	push "anpodpo"
	cthis showhint
	push 0
	push $2
	spushs
	spop $a
	call [$a],framenr
	call anpodpo,setframe
	push "anpodpo"
	cthis showhint
	ret
l6486:
	jmp l6483
l6482:
l6480:
	jmp l6477
l6476:
	push "anokladka_2v"
	cthis showhint
	jmp l6470
l6474:
	push "ma_kolatka"
	call clsave,bis
	neg
	cmp0
	je l6488
	push "anksiezyc"
	cthis showhint
	jmp l6487
l6488:
	push "anpopexit"
	cthis showhint
l6487:
l6470:
l6468:
	end method
	method SKIP_CLICK
	cthis advstdstate
	cmp0
	je l6490
	cthis mskipmg
l6490:
	end method
	end game

	game TestFilm2
	parent StdGame
	method init
	push "film"
	clparent StdGame,init
	push "empty"
	call advmouse,set
	new Film,film1
	push 1
	call film1,bcenter=
	push 1
	call film1,bborders=
	push "mus"
	call film1,musicclass=
	push "scripts/cs01_barghest/"
	push "film"
	call film1,playfilm
	end method
	method mouse_lclick
	call film1,isplaying
	cmp0
	je l6492
	push 1
	call film1,stop
l6492:
	end method
	end game

	game TestFilm
	parent StdGame
	method init
	push "testfilm2"
	clparent StdGame,init
	new Film,film1
	push "onfinish"
	push "film1_filmend"
	call film1,addmethod
	cthis showfps
	new TicksCounter,tc1
	new img,imgbg
	push iResX
	push iResY
	cthis black
	push 255
	call imgbg,create
	push 1
	popax
	sub 0,$a
	call imgbg,setz
	end method
	method key_down
	push "1"
	call keyboard,iskey
	cmp0
	je l6494
	push 2
	call film1,setcycle
	call tc1,start
	push "scripts/testfilm/"
	push "film"
	call film1,playfilm
	jmp l6493
l6494:
	push "2"
	call keyboard,iskey
	cmp0
	je l6496
	push 2
	call film1,setcycle
	call tc1,start
	push "scripts/testfilm2/"
	push "film"
	call film1,playfilm
	jmp l6495
l6496:
	push "3"
	call keyboard,iskey
	cmp0
	je l6498
	call film1,play
l6498:
l6495:
l6493:
	end method
	method showfps
	push "cfps"
	cthis hasvar
	neg
	cmp0
	je l6500
	new CalcFPS,cfps
	push 14
	push 10
	push 10
	call cfps,stdset
l6500:
	call cfps,play
	end method
	method film1_filmend
	cthis free
	push "film time: "
	call tc1,print
	end method
	end game

	game mg00_skrzynia
	parent Banshee
	method init
	push "mg00_skrzynia"
	clparent Banshee,init
	push "engine"
	call mus,smixer=
	push "e1_dzwonekblue_put"
	call clsave,bis
	cmp0
	je l6502
	push "e1_dzwonekred_put"
	call clsave,bis
	jmp l6504
l6502:
	push 0
	jmp l6504
l6503:
	push 1
l6504:
	cmp0
	je l6505
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "anim2.pyzH 4"
	push "ramka.pyz 5"
	push "napis.pyzH 5"
	push "popexit.pyz 21"
	cthis imgs=
	call ananim2,anopacityframe
	push "0"
	call ananim2,play
	jmp l6501
l6505:
	push "e1_dzwonekblue_put"
	call clsave,bis
	cmp0
	jne l6508
	push "e1_dzwonekred_put"
	call clsave,bis
	jmp l6509
l6507:
	push 0
	jmp l6509
l6508:
	push 1
l6509:
	cmp0
	je l6510
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "anim1.pyzH 3"
	push "ramka.pyz 5"
	push "napis.pyzH 5"
	push "popexit.pyz 21"
	cthis imgs=
	call ananim1,anopacityframe
	push "0"
	call ananim1,play
	jmp l6506
l6510:
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "ramka.pyz 5"
	push "napis.pyzH 5"
	push "popexit.pyz 21"
	cthis imgs=
l6506:
l6501:
	push A
	push "bgrmorzeN 20"
	cthis sfxs=
	cthis butpopexit
	call imgbkg,mg00_skrzynia0
	call annapis,mg00_skrzynia3
	push "sndtranskrypt"
	push "kinnat_c1d1_2b"
	cthis newsndfree
	cthis stdstart
	end method
	method mg00_skrzynia0
	push "isbutin"
	push "mg00_skrzynia1"
	cthis addmethod
	push "butclick"
	push "mg00_skrzynia2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg00_skrzynia1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpopup_bkg,isin
	neg
	end method
	method mg00_skrzynia2
	cthis advstdstate
	neg
	cmp0
	je l6512
	ret
l6512:
	cthis mend
	end method
	method mg00_skrzynia3
	push "isbutin"
	push "mg00_skrzynia4"
	cthis addmethod
	push "butmoveon"
	push "mg00_skrzynia5"
	cthis addmethod
	push "butmoveoff"
	push "mg00_skrzynia6"
	cthis addmethod
	push "butclick"
	push "mg00_skrzynia7"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg00_skrzynia4
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 1
	cthis isin
	end method
	method mg00_skrzynia5
	push "loupe"
	call advmouse,set
	end method
	method mg00_skrzynia6
	call advmouse,setstd
	end method
	method mg00_skrzynia7
	cthis advstdstate
	neg
	cmp0
	je l6514
	ret
l6514:
	push "sndtranskrypt"
	cthis cbplay
	end method
	method mend
	push "ad00_endintro"
	push "gamead00_endintro0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "anpopexit"
	cthis showhint
	end method
	end game

	game mg00_dzwonki
	parent Banshee
	method init
	push "mg00_dzwonki"
	clparent Banshee,init
	push "mg001_dzwonki"
	cthis askopis
	call guihint,switchtoskip
	push "engine"
	call mus,smixer=
	push A
	push "dzwon1"
	push "dzwon2"
	push "dzwon3"
	push "dzwon4"
	cthis sfxs=
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "e1reka1.pyz 3"
	push "e1reka2.pyz 4"
	push "e1reka3.pyz 5"
	push "e1reka4.pyz 6"
	push "ramka.pyz 25"
	push "dymki2.pyz 30"
	push "e1rekaset.pyzGH 7"
	push "e1rekator.pyzH"
	push "popexit.pyz 31"
	cthis imgs=
	cthis butpopexit
	push "mg00_dzwonki0"
	call gre1rekaset,each
	localint $1
	push 0
	pop $1
l6515:
	push $1
	push 4
	cmpjl
	cmp0
	je l6516
	jmp l6518
l6517:
	add $1,1
	pop $1
	jmp l6515
l6518:
	push "e1_reka_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_play"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l6520
	push $1
	cthis rekaplay
l6520:
	jmp l6517
l6516:
	push "snd_reset"
	push "kinnat_c1d1_15"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_reset,addmethod
	push "snd_kinnat_4"
	push "kinnat_4"
	cthis newsndfree
	push "onfinish"
	push "mg00_dzwonki2"
	call snd_kinnat_4,addmethod
	push 0
	call ane1reka1,play
	push 0
	call ane1reka2,play
	push 0
	call ane1reka3,play
	push 0
	call ane1reka4,play
	push 0
	call andymki2,play
	push A
	push "bgrmorzeN 60"
	cthis sfxs=
	call ane1reka1,mg00_dzwonki3
	call ane1reka2,mg00_dzwonki5
	call ane1reka3,mg00_dzwonki7
	call ane1reka4,mg00_dzwonki9
	call imgbkg,mg00_dzwonki11
	cthis stdstart
	end method
	method mg00_dzwonki0
	localint $1
	pop $1
	push "myid"
	push $1
	push 1
	pop $b
	popax
	add $a,$b
	cthis var2
	push "onsetframe"
	push "mg00_dzwonki1"
	cthis addmethod
	end method
	method mg00_dzwonki1
	push myid
	push 1
	pop $b
	popax
	sub $a,$b
	push "ane1reka"
	push myid
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],framenr
	call ane1rekator,setframe
	call ane1rekator,getcx
	call ane1rekator,getcy
	cthis setpos
	end method
	method mg00_dzwonki2
	cthis advsetstdstate
	push "cs03_klif"
	push "-adv"
	push "ad00_endintro"
	cthis watch_film
	end method
	method mg00_dzwonki3
	cthis Button_isin
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg00_dzwonki4"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg00_dzwonki4
	cthis advstdstate
	neg
	cmp0
	jne l6523
	cthis is_mg_finished
	jmp l6524
l6522:
	push 0
	jmp l6524
l6523:
	push 1
l6524:
	cmp0
	je l6525
	ret
l6525:
	push "zolty"
	cthis click_dzwon
	call fxdzwon1,play
	end method
	method mg00_dzwonki5
	cthis Button_isin
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg00_dzwonki6"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg00_dzwonki6
	cthis advstdstate
	neg
	cmp0
	jne l6528
	cthis is_mg_finished
	jmp l6529
l6527:
	push 0
	jmp l6529
l6528:
	push 1
l6529:
	cmp0
	je l6530
	ret
l6530:
	push "red"
	cthis click_dzwon
	call fxdzwon2,play
	end method
	method mg00_dzwonki7
	cthis Button_isin
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg00_dzwonki8"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg00_dzwonki8
	cthis advstdstate
	neg
	cmp0
	jne l6533
	cthis is_mg_finished
	jmp l6534
l6532:
	push 0
	jmp l6534
l6533:
	push 1
l6534:
	cmp0
	je l6535
	ret
l6535:
	push "blue"
	cthis click_dzwon
	call fxdzwon3,play
	end method
	method mg00_dzwonki9
	cthis Button_isin
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg00_dzwonki10"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg00_dzwonki10
	cthis advstdstate
	neg
	cmp0
	jne l6538
	cthis is_mg_finished
	jmp l6539
l6537:
	push 0
	jmp l6539
l6538:
	push 1
l6539:
	cmp0
	je l6540
	ret
l6540:
	push "miedz"
	cthis click_dzwon
	call fxdzwon4,play
	end method
	method mg00_dzwonki11
	push "isbutin"
	push "mg00_dzwonki12"
	cthis addmethod
	push "butclick"
	push "mg00_dzwonki13"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg00_dzwonki12
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpopup_bkg,isin
	neg
	end method
	method mg00_dzwonki13
	cthis advstdstate
	neg
	cmp0
	je l6542
	ret
l6542:
	cthis mend
	end method
	method resetujdzwonki
	push "e1_dzwon1"
	push 0
	call clsave,set
	push "e1_dzwon2"
	push 0
	call clsave,set
	push "e1_dzwon3"
	push 0
	call clsave,set
	push "e1_dzwon4"
	push 0
	call clsave,set
	end method
	method click_dzwon
	localstring $1
	pop $1
	push "e1_koment_rece"
	call clsave,bis
	neg
	cmp0
	je l6544
	push "e1_koment_rece"
	call clsave,bset
	push "e1_dzwonki"
	push 1
	call clsave,set
	cthis resetujdzwonki
l6544:
	push "e1_click_dzwon"
	push $1
	call clsave,set
	cthis kolejnosc
	end method
	method kolejnosc
	cthis click_dzwon_adv
	push "e1_zgadla_dzwonki"
	call clsave,bis
	cmp0
	je l6546
	call ane1reka1,disable
	call ane1reka2,disable
	call ane1reka3,disable
	call ane1reka4,disable
	call advmouse,setstd
	push "e1_rozbity_grobowiec"
	call clsave,bset
	push "snd_kinnat_4"
	cthis cbplay
	cthis set_mg_finished
	cthis timfinito
	jmp l6545
l6546:
	push "e1_dzwonki"
	call clsave,get
	push 1
	cmpje
	cmp0
	je l6548
	cthis resetujdzwonki
	push "snd_reset"
	cthis cbplay
l6548:
l6545:
	end method
	method click_dzwon_adv
	localstring $1
	push "e1_click_dzwon"
	call clsave,get
	pop $1
	localint $2
	push "e1_dzwonki"
	call clsave,get
	pop $2
	push "e1_dzwon"
	push $2
	pop $b
	popax
	add $a,$b
	push $1
	call clsave,set
	push $2
	push 4
	cmpje
	cmp0
	je l6550
	push 1
	pop $2
	cthis recehide
	jmp l6549
l6550:
	localint $3
	push $1
	cthis getrekaid
	pop $3
	push $3
	cthis rekaplay
	push "e1_reka_"
	push $3
	pop $b
	popax
	add $a,$b
	push "_play"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	add $2,1
	pop $2
l6549:
	push "e1_dzwonki"
	push $2
	call clsave,set
	localdef $4
	push "e1_dzwon1"
	call clsave,get
	pop $4
	localdef $5
	push "e1_dzwon2"
	call clsave,get
	pop $5
	localdef $6
	push "e1_dzwon3"
	call clsave,get
	pop $6
	localdef $7
	push "e1_dzwon4"
	call clsave,get
	pop $7
	push $4
	push "blue"
	cmpje
	cmp0
	je l6552
	push $5
	push "miedz"
	cmpje
	cmp0
	je l6552
	push $6
	push "red"
	cmpje
	cmp0
	je l6552
	push $7
	push "zolty"
	cmpje
	jmp l6554
l6552:
	push 0
	jmp l6554
l6553:
	push 1
l6554:
	cmp0
	jne l6556
	push $7
	push "blue"
	cmpje
	cmp0
	je l6557
	push $4
	push "miedz"
	cmpje
	cmp0
	je l6557
	push $5
	push "red"
	cmpje
	cmp0
	je l6557
	push $6
	push "zolty"
	cmpje
	jmp l6559
l6557:
	push 0
	jmp l6559
l6558:
	push 1
l6559:
	cmp0
	jne l6556
	push $6
	push "blue"
	cmpje
	cmp0
	je l6560
	push $7
	push "miedz"
	cmpje
	cmp0
	je l6560
	push $4
	push "red"
	cmpje
	cmp0
	je l6560
	push $5
	push "zolty"
	cmpje
	jmp l6562
l6560:
	push 0
	jmp l6562
l6561:
	push 1
l6562:
	cmp0
	jne l6556
	push $5
	push "blue"
	cmpje
	cmp0
	je l6563
	push $6
	push "miedz"
	cmpje
	cmp0
	je l6563
	push $7
	push "red"
	cmpje
	cmp0
	je l6563
	push $4
	push "zolty"
	cmpje
	jmp l6565
l6563:
	push 0
	jmp l6565
l6564:
	push 1
l6565:
	jmp l6566
l6555:
	push 0
	jmp l6566
l6556:
	push 1
l6566:
	cmp0
	je l6567
	push "e1_zgadla_dzwonki"
	call clsave,bset
	cthis set_mg_finished
	cthis recehide
l6567:
	end method
	method getrekaid
	localstring $1
	pop $1
	push $1
	spushs
	push "zolty"
	cmpst
	jne l6569
	spop $a
	push 0
	jmp l6568
l6569:
	push "red"
	cmpst
	jne l6570
	spop $a
	push 1
	jmp l6568
l6570:
	push "blue"
	cmpst
	jne l6571
	spop $a
	push 2
	jmp l6568
l6571:
	push "miedz"
	cmpst
	jne l6572
	spop $a
	push 3
	jmp l6568
l6572:
	spop $a
	push 1
	popax
	sub 0,$a
l6568:
	end method
	method rekaplay
	localint $1
	pop $1
	push $1
	call gre1rekaset,get
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],play
	end method
	method recehide
	push "anhide"
	call gre1rekaset,eval
	localint $1
	push 0
	pop $1
l6573:
	push $1
	push 4
	cmpjl
	cmp0
	je l6574
	jmp l6576
l6575:
	add $1,1
	pop $1
	jmp l6573
l6576:
	push "e1_reka_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_play"
	pop $b
	popax
	add $a,$b
	push 0
	call clsave,set
	jmp l6575
l6574:
	end method
	method komentdzwonki
	push "e1_koment_rece"
	call clsave,bis
	neg
	cmp0
	je l6578
	push "e1_koment_rece"
	call clsave,bset
	push "snd_kinnat_2"
	cthis cbplay
	push "e1_dzwonki"
	push 1
	call clsave,set
	cthis resetujdzwonki
l6578:
	end method
	method mend
	call ccs,buildfromscreen
	cthis is_mg_finished
	cmp0
	je l6580
	push "cs03_klif"
	push "-adv"
	push "ad00_endintro"
	cthis watch_film
	jmp l6579
l6580:
	push "ad00_endintro"
	push "gamead00_endintro0"
	cthis stdexitadvadv
l6579:
	end method
	method HINT_CLICK
	push "anpopexit"
	cthis showhint
	end method
	method SKIP_CLICK
	push "e1_zgadla_dzwonki"
	call clsave,bset
	cthis set_mg_finished
	push "e1_rozbity_grobowiec"
	call clsave,bset
	push "snd_kinnat_4"
	cthis cbplay
	cthis mend
	end method
	end game

	game mg01Fontanna
	parent Banshee
	method init
	push "mg01_fontanna"
	clparent Banshee,init
	push A
	push "bkg.jpg"
	push "woda.pyzP 5"
	push "wodamask.pyz 10"
	push "dzwonekblue.pyz 60"
	push "oczy.pyzG 25"
	push "czachy.pyzGH 30"
	push "bluszcz.pyz 35"
	push "medalfontanna.pyz 40"
	push "popexit.pyz 45"
	push "ramka.pyz 42"
	cthis imgs=
	new int,idclick
	push "e1_mg01_idclick"
	call clsave,get
	pop idclick
	push "taken_dzwonekblue"
	call clsave,bis
	cmp0
	je l6582
	call andzwonekblue,hide
	jmp l6581
l6582:
	push "andzwonekblue"
	cthis setasitemtopck
l6581:
	push "e1_medalfontanna_taken"
	call clsave,bis
	cmp0
	je l6584
	call anmedalfontanna,hide
	jmp l6583
l6584:
	push "anmedalfontanna"
	cthis setasitemtopck
l6583:
	push "timreset"
	push 500
	push "mg01Fontanna0"
	cthis timer=
	push "snd_medalion"
	push "kinnat_c1d1_2e"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_medalion,addmethod
	push "snd_czaszki_wsadzone"
	push "kinnat_c1d1_1aaa"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_czaszki_wsadzone,addmethod
	push "snd_czegos_brakuje"
	push "kinnat_c1d1_3a"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_czegos_brakuje,addmethod
	push "snd_brakuje_reszty_czaszek"
	push "kinnat_c1d1_3c"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_brakuje_reszty_czaszek,addmethod
	push "snd_reset_czaszek"
	push "kinnat_c1d1_3f"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_reset_czaszek,addmethod
	push "mg01"
	cthis askopis
	call anaskopis,hide
	push "e1_czaszka1_put"
	call clsave,bis
	cmp0
	je l6590
	push "e1_czaszka2_put"
	call clsave,bis
	cmp0
	je l6590
	push "e1_czaszka3_put"
	call clsave,bis
	cmp0
	je l6590
	push idclick
	push 4
	cmpjl
	jmp l6592
l6590:
	push 0
	jmp l6592
l6591:
	push 1
l6592:
	cmp0
	je l6593
	call anaskopis,show
	call guihint,switchtoskip
l6593:
	push A
	push "woda2PL 10"
	push "putitem1 80"
	push "przekladnia1"
	push "bgrdeszczN 10"
	push "bgrrzeka1N 30"
	cthis sfxs=
	cthis butpopexit
	cthis butpopexitisinramka
	call anpopexit,getcx
	call anaskopis,getw
	pop $b
	popax
	add $a,$b
	call anpopexit,getcy
	call anaskopis,geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call anaskopis,ansetbpos
	call grczachy,first
	spushs
	spop $a
	call [$a],show
	call grczachy,first
	spushs
	push 31
	spop $a
	call [$a],setz
	push "mg01Fontanna2"
	call grczachy,each
	push 0
	call grczachy,removeat
	localint $1
	push 1
	pop $1
l6619:
	push $1
	push 3
	cmpjle
	cmp0
	je l6620
	jmp l6622
l6621:
	add $1,1
	pop $1
	jmp l6619
l6622:
	push "e1_czaszka"
	push $1
	pop $b
	popax
	add $a,$b
	push "_put"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l6624
	push $1
	push "e1_czaszka"
	push $1
	pop $b
	popax
	add $a,$b
	push "_putplace"
	pop $b
	popax
	add $a,$b
	call clsave,get
	cthis wstaw_czaszke
l6624:
	jmp l6621
l6620:
	cthis ustaw_wode
	cthis stdstart
	end method
	method mg01Fontanna0
	localint $1
	push 0
	pop $1
l6585:
	push $1
	push 3
	cmpjle
	cmp0
	je l6586
	jmp l6588
l6587:
	add $1,1
	pop $1
	jmp l6585
l6588:
	push "anczachadymi"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	push 0
	spop $a
	call [$a],setframe
	jmp l6587
l6586:
	push "mg01Fontanna1"
	call groczy,each
	cthis ustaw_wode
	end method
	method mg01Fontanna1
	localdef $1
	pop $1
	localdef $1
	push 1
	popax
	sub 0,$a
	cthis actionnr
	pop $1
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	end method
	method mg01Fontanna2
	localint $1
	pop $1
	push "anczachadymi"
	push $1
	pop $b
	popax
	add $a,$b
	cthis addtogamevars
	push "e1_mg01_"
	cthis getname
	pop $b
	popax
	add $a,$b
	push "_frame"
	pop $b
	popax
	add $a,$b
	call clsave,get
	cthis ustaw_czache
	cthis isvisible
	neg
	cmp0
	je l6595
	push $1
	push 2
	cthis setframe
l6595:
	push "isbutin"
	push "mg01Fontanna3"
	cthis addmethod
	push "butmoveon"
	push "mg01Fontanna4"
	cthis addmethod
	push "butmoveoff"
	push "mg01Fontanna5"
	cthis addmethod
	push "butclick"
	push "mg01Fontanna6"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg01Fontanna3
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 1
	cthis isin
	end method
	method mg01Fontanna4
	cthis isvisible
	cmp0
	je l6597
	push idclick
	push 4
	cmpjl
	jmp l6599
l6597:
	push 0
	jmp l6599
l6598:
	push 1
l6599:
	cmp0
	je l6600
	push "take"
	call advmouse,set
	jmp l6596
l6600:
	push idclick
	push 4
	cmpjl
	cmp0
	je l6602
	push "use"
	call advmouse,set
l6602:
l6596:
	end method
	method mg01Fontanna5
	call advmouse,setstd
	end method
	method mg01Fontanna6
	cthis advstdstate
	neg
	cmp0
	jne l6605
	call timreset,isplaying
	cmp0
	jne l6605
	push idclick
	push 4
	cmpje
	jmp l6606
l6604:
	push 0
	jmp l6606
l6605:
	push 1
l6606:
	cmp0
	je l6607
	ret
l6607:
	cthis isvisible
	neg
	cmp0
	je l6609
	push "snd_czegos_brakuje"
	cthis cbplay
	ret
l6609:
	cthis getfreeczacha
	cmp0
	je l6611
	push "snd_brakuje_reszty_czaszek"
	cthis cbplay
	ret
l6611:
	localint $1
	cthis framenr
	pop $1
	push $1
	push 1
	cmpja
	cmp0
	je l6613
	push 0
	pop $1
l6613:
	localdef $2
	push $1
	push 1
	pop $b
	popax
	add $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	push $d
	pop $2
	push "e1_mg01_"
	cthis getname
	pop $b
	popax
	add $a,$b
	push "_frame"
	pop $b
	popax
	add $a,$b
	push $2
	call clsave,set
	push $2
	cthis ustaw_czache
	localdef $3
	push ""
	push 1
	popax
	sub 0,$a
	cthis actionnr
	pop $b
	popax
	add $a,$b
	push "_"
	pop $b
	popax
	add $a,$b
	push idclick
	pop $b
	popax
	add $a,$b
	pop $3
	call fxprzekladnia1,play
	push $3
	spushs
	push "2_0"
	cmpst
	jne l6615
	spop $a
	push 1
	cthis mgoclick
	jmp l6614
l6615:
	push "1_1"
	cmpst
	jne l6616
	spop $a
	push 2
	cthis mgoclick
	jmp l6614
l6616:
	push "3_2"
	cmpst
	jne l6617
	spop $a
	push 3
	cthis mgoclick
	jmp l6614
l6617:
	push "0_3"
	cmpst
	jne l6618
	spop $a
	add idclick,1
	pop idclick
	cthis ustaw_wode
	jmp l6614
l6618:
	spop $a
	push 0
	pop idclick
	cthis reset_czaszek
l6614:
	push "e1_mg01_idclick"
	push idclick
	call clsave,set
	end method
	method reset_czaszek
	localint $1
	push 0
	pop $1
l6625:
	push $1
	push 4
	cmpjl
	cmp0
	je l6626
	jmp l6628
l6627:
	add $1,1
	pop $1
	jmp l6625
l6628:
	push "e1_mg01_anczachy"
	push $1
	pop $b
	popax
	add $a,$b
	push "_frame"
	pop $b
	popax
	add $a,$b
	push 0
	call clsave,set
	jmp l6627
l6626:
	push "snd_reset_czaszek"
	cthis cbplay
	call timreset,play
	end method
	method ustaw_wode
	push idclick
	push 4
	cmpjl
	cmp0
	je l6630
	push idclick
	call anwoda,play
	jmp l6629
l6630:
	call anwoda,anhide
	push 500
	push "null"
	call anaskopis,anfadeout
	call guihint,switchtohint
l6629:
	push 0
	push idclick
	call anmedalfontanna,setframe
	end method
	method ustaw_czache
	localint $1
	pop $1
	localdef $2
	push 1
	popax
	sub 0,$a
	cthis actionnr
	pop $2
	push 1
	popax
	sub 0,$a
	push $1
	cthis setframe
	push $2
	call groczy,get
	spushs
	push 1
	popax
	sub 0,$a
	push $1
	spop $a
	call [$a],setframe
	end method
	method mgoclick
	localint $1
	pop $1
	cthis framenr
	push 1
	cmpje
	cmp0
	je l6632
	push $1
	call anwoda,play
	add idclick,1
	pop idclick
	jmp l6631
l6632:
	push 0
	call anwoda,play
	cthis reset_czaszek
	push 0
	pop idclick
l6631:
	end method
	method USE_czaszka1
	push 1
	cthis _check_use
	end method
	method USE_czaszka2
	push 2
	cthis _check_use
	end method
	method USE_czaszka3
	push 3
	cthis _check_use
	end method
	method _check_use
	localint $1
	pop $1
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call grczachy,isin
	cmp0
	je l6634
	push "czaszka"
	push $1
	pop $b
	popax
	add $a,$b
	cthis removefrompck
	call fxputitem1,play
	push "take"
	call advmouse,set
	push $1
	call grczachy,getsfound
	cthis wstaw_czaszke
	push "e1_czaszka1_put"
	call clsave,bis
	cmp0
	je l6636
	push "e1_czaszka2_put"
	call clsave,bis
	cmp0
	je l6636
	push "e1_czaszka3_put"
	call clsave,bis
	jmp l6638
l6636:
	push 0
	jmp l6638
l6637:
	push 1
l6638:
	cmp0
	je l6639
	push "snd_czaszki_wsadzone"
	cthis cbplay
	call anaskopis,show
	call guihint,switchtoskip
l6639:
	jmp l6633
l6634:
	cthis item_gotopck
l6633:
	end method
	method wstaw_czaszke
	localint $1
	localstring $2
	pop $2
	pop $1
	push $2
	call grczachy,remove
	push $2
	spushs
	spop $a
	call [$a],show
	localint $3
	push "e1_mg01_"
	push $2
	pop $b
	popax
	add $a,$b
	push "_frame"
	pop $b
	popax
	add $a,$b
	call clsave,get
	pop $3
	push $3
	cmp0
	je l6641
	push $2
	spushs
	push 1
	popax
	sub 0,$a
	push $3
	spop $a
	call [$a],setframe
	jmp l6640
l6641:
	push $2
	spushs
	push 1
	popax
	sub 0,$a
	push 0
	spop $a
	call [$a],setframe
l6640:
	push "e1_czaszka"
	push $1
	pop $b
	popax
	add $a,$b
	push "_put"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	push "e1_czaszka"
	push $1
	pop $b
	popax
	add $a,$b
	push "_putplace"
	pop $b
	popax
	add $a,$b
	push $2
	call clsave,set
	end method
	method anmedalfontanna_TAKE
	call anmedalfontanna,framenr
	push 4
	cmpje
	cmp0
	je l6643
	push "e1_medalfontanna_taken"
	call clsave,bset
	push "medalfontanna"
	cthis popitem_gotocenter
	jmp l6642
l6643:
	push "snd_medalion"
	cthis cbplay
l6642:
	end method
	method anmedalfontanna_INPCK
	push "medalfontanna"
	cthis addtopck
	cthis checkend
	end method
	method andzwonekblue_TAKE
	push "dzwonekblue"
	cthis popitem_gotocenter
	end method
	method andzwonekblue_INPCK
	push "dzwonekblue"
	cthis addtopck
	cthis checkend
	end method
	method checkend
	push "taken_dzwonekblue & taken_medalfontanna"
	call clsave,bislist
	cmp0
	je l6645
	cthis mend
l6645:
	end method
	method mend
	push "ad01_widokogolny"
	push "gamead01_widokogolny0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "taken_dzwonekblue"
	call clsave,bis
	neg
	cmp0
	je l6647
	push "andzwonekblue"
	cthis showhint
	jmp l6646
l6647:
	push "taken_czaszka1"
	call clsave,bis
	neg
	cmp0
	jne l6650
	push "taken_czaszka2"
	call clsave,bis
	neg
	cmp0
	jne l6650
	push "taken_czaszka3"
	call clsave,bis
	neg
	jmp l6651
l6649:
	push 0
	jmp l6651
l6650:
	push 1
l6651:
	cmp0
	je l6652
	push "anpopexit"
	cthis showhint
	jmp l6648
l6652:
	cthis getfreeczacha
	cmp0
	je l6654
	push "czaszka"
	cthis getfreeczacha
	pop $b
	popax
	add $a,$b
	cthis showhintitem
	call grczachy,first
	cthis showhint
	jmp l6653
l6654:
	push idclick
	push 4
	cmpjl
	cmp0
	je l6656
	call anczachadymi2,framenr
	push 0
	cmpje
	cmp0
	je l6658
	push idclick
	push 0
	cmpje
	jmp l6660
l6658:
	push 0
	jmp l6660
l6659:
	push 1
l6660:
	cmp0
	je l6661
	push "anczachadymi2"
	cthis showhint
	jmp l6657
l6661:
	call anczachadymi1,framenr
	push 0
	cmpje
	cmp0
	je l6663
	push idclick
	push 1
	cmpje
	jmp l6665
l6663:
	push 0
	jmp l6665
l6664:
	push 1
l6665:
	cmp0
	je l6666
	push "anczachadymi1"
	cthis showhint
	jmp l6662
l6666:
	call anczachadymi3,framenr
	push 0
	cmpje
	cmp0
	je l6668
	push idclick
	push 2
	cmpje
	jmp l6670
l6668:
	push 0
	jmp l6670
l6669:
	push 1
l6670:
	cmp0
	je l6671
	push "anczachadymi3"
	cthis showhint
	jmp l6667
l6671:
	call anczachadymi0,framenr
	push 0
	cmpje
	cmp0
	je l6673
	push idclick
	push 3
	cmpje
	jmp l6675
l6673:
	push 0
	jmp l6675
l6674:
	push 1
l6675:
	cmp0
	je l6676
	push "anczachadymi0"
	cthis showhint
	jmp l6672
l6676:
	localint $1
	push 0
	pop $1
l6677:
	push $1
	push 3
	cmpjle
	cmp0
	je l6678
	jmp l6680
l6679:
	add $1,1
	pop $1
	jmp l6677
l6680:
	push "anczachadymi"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],framenr
	cmp0
	je l6682
	push "anczachadymi"
	push $1
	pop $b
	popax
	add $a,$b
	cthis showhint
l6682:
	jmp l6679
l6678:
l6672:
l6667:
l6662:
l6657:
	jmp l6655
l6656:
	push "e1_medalfontanna_taken"
	call clsave,bis
	neg
	cmp0
	je l6684
	push "anmedalfontanna"
	cthis showhint
	jmp l6683
l6684:
	push "anpopexit"
	cthis showhint
l6683:
l6655:
l6653:
l6648:
l6646:
	end method
	method getfreeczacha
	push "ma_czaszka1"
	call clsave,bis
	cmp0
	je l6686
	push 1
	jmp l6685
l6686:
	push "ma_czaszka2"
	call clsave,bis
	cmp0
	je l6688
	push 2
	jmp l6687
l6688:
	push "ma_czaszka3"
	call clsave,bis
	cmp0
	je l6690
	push 3
	jmp l6689
l6690:
	push 0
l6689:
l6687:
l6685:
	end method
	method SKIP_CLICK
	push 4
	pop idclick
	push "e1_mg01_idclick"
	push idclick
	call clsave,set
	localint $1
	push 0
	pop $1
l6691:
	push $1
	push 4
	cmpjl
	cmp0
	je l6692
	jmp l6694
l6693:
	add $1,1
	pop $1
	jmp l6691
l6694:
	push "e1_mg01_anczachy"
	push $1
	pop $b
	popax
	add $a,$b
	push "_frame"
	pop $b
	popax
	add $a,$b
	push 1
	call clsave,set
	jmp l6693
l6692:
	localint $1
	push 0
	pop $1
l6695:
	push $1
	push 3
	cmpjle
	cmp0
	je l6696
	jmp l6698
l6697:
	add $1,1
	pop $1
	jmp l6695
l6698:
	push "anczachadymi"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	push 1
	spop $a
	call [$a],setframe
	jmp l6697
l6696:
	push "mg01Fontanna7"
	call groczy,each
	cthis ustaw_wode
	push 500
	push "null"
	call anaskopis,anfadeout
	call guihint,switchtohint
	end method
	method mg01Fontanna7
	localdef $1
	pop $1
	localdef $1
	push 1
	popax
	sub 0,$a
	cthis actionnr
	pop $1
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	end method
	end game

	game mg01Schody
	parent Banshee
	method init
	push "mg01_schody"
	clparent Banshee,init
	push A
	push "bkg.jpg"
	push "jezyk.pyzP 5"
	push "jaszczur.pyz 10"
	push "przycisk.pyz 20"
	push "klucz.pyz 25"
	push "dolcien.pyz 30"
	push "klapa.pyz 35"
	push "klapamask.pyz 40"
	push "dolekputmedal.pyz 45"
	push "medalput.pyzH 50"
	push "medalpck.pyzH 55"
	push "lisc1.pyz 60"
	push "lisc2.pyz 60"
	push "lisc3.pyz 60"
	push "lisc4.pyz 60"
	push "cienmask.pyz 70"
	push "motyl.pyzP 115"
	push "ramka.pyz 80"
	push "popexit.pyz 90"
	cthis imgs=
	cthis butpopexit
	cthis butpopexitisinramka
	push A
	push "bgrwiatrN 30"
	push "bgrdeszczN 30"
	push "swist1"
	push "ceglamove"
	cthis sfxs=
	push "sndliscie"
	push "kinnat_c1d1_2a"
	cthis newsndfree
	push "taken_kluczschodek"
	call clsave,bis
	neg
	cmp0
	je l6700
	new filter,ftklucz
	push "anklucz"
	call ftklucz,link
	push 90
	call ftklucz,rotate
	push "anklucz"
	cthis setasitemtopck
	push "isbutin"
	push "mg01Schody0"
	call anklucz,addmethod
	push "snd_nie_moge_wziac"
	push "kinnat_c1d1_2bb"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_nie_moge_wziac,addmethod
	jmp l6699
l6700:
	call anklucz,hide
l6699:
	push "e1_medalfontanna_is_put"
	call clsave,bis
	neg
	cmp0
	je l6705
	push "snd_brak_medalu"
	push "kinnat_c1d1_2d"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_brak_medalu,addmethod
l6705:
	push "e1_mg01_klucz_odkryty"
	call clsave,bis
	neg
	cmp0
	je l6707
	push "e1_medalfontanna_is_put"
	call clsave,bis
	cmp0
	jne l6710
	push "e1_mg01_klucz_przycisk_nacisniety"
	call clsave,bis
	jmp l6711
l6709:
	push 0
	jmp l6711
l6710:
	push 1
l6711:
	cmp0
	je l6712
	push 0
	push 70
	popax
	sub 0,$a
	call anklapa,move
l6712:
	jmp l6706
l6707:
	call anklapa,hide
l6706:
	push igmappw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push 250
	pop $b
	popax
	add $a,$b
	push igmapph
	push 2
	pop $b
	popax
	div $a,$b
	psax
	call anmotyl,ansetbpos
	new filter,ftmotyl
	push "anmotyl"
	call ftmotyl,link
	new int,ilicz
	push 0
	pop ilicz
	push "onendframe"
	push "mg01Schody1"
	call anmotyl,addmethod
	push "taken_czaszka3"
	call clsave,bis
	neg
	cmp0
	je l6716
	push A
	push "czaszka3.pyz 75"
	cthis imgs=
	push "anczaszka3"
	cthis setasitemtopck
l6716:
	localint $1
	push 1
	pop $1
l6717:
	push $1
	push 4
	cmpjle
	cmp0
	je l6718
	jmp l6720
l6719:
	add $1,1
	pop $1
	jmp l6717
l6720:
	push "e1_mg01_lisc_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_odsuniety"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l6722
	push "anlisc"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	spop $a
	call [$a],ansetlastframe
	jmp l6721
l6722:
	push "anlisc"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],mg01Schody2
l6721:
	jmp l6719
l6718:
	call andolekputmedal,mg01Schody6
	push "e1_medalfontanna_is_put"
	call clsave,bis
	cmp0
	je l6737
	call anmedalput,show
l6737:
	push "e1_mg01_klucz_przycisk_nacisniety"
	call clsave,bis
	neg
	cmp0
	je l6739
	call anprzycisk,mg01Schody11
	jmp l6738
l6739:
	push 1
	push 0
	call anprzycisk,setframe
l6738:
	push "timzasuwa"
	push "mg01Schody16"
	cthis cycle=
	push "mg01Schody17"
	call ccs,enter
	end method
	method mg01Schody0
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 1
	call anklucz,isin
	cmp0
	je l6701
	push $1
	push $2
	push 1
	push 1
	call anklapa,isin
	neg
	jmp l6703
l6701:
	push 0
	jmp l6703
l6702:
	push 1
l6703:
	end method
	method mg01Schody1
	add ilicz,1
	pop ilicz
	push ilicz
	push 1
	cmpje
	cmp0
	je l6714
	push 0
	pop ilicz
	localreal $1
	push 12
	push 21
	spushs
	spop $h
	call $h,rand
	pop $b
	popax
	sub $a,$b
	pop $1
	localreal $2
	push 5
	pop $2
	localreal $3
	call ftmotyl,getangle
	pop $3
	localreal $4
	push $3
	spushs
	spop $h
	call $h,sin
	push $2
	pop $b
	popax
	mul $a,$b
	pop $4
	localreal $5
	push $3
	spushs
	spop $h
	call $h,cos
	push $2
	pop $b
	popax
	mul $a,$b
	pop $5
	push $1
	call ftmotyl,rotate
	push $4
	popax
	sub 0,$a
	push $5
	popax
	sub 0,$a
	cthis move
l6714:
	end method
	method mg01Schody2
	cthis Button_isinalpha
	push "butmoveon"
	push "mg01Schody3"
	cthis addmethod
	push "butmoveoff"
	push "mg01Schody4"
	cthis addmethod
	push "butclick"
	push "mg01Schody5"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg01Schody3
	call advmouse,setact
	end method
	method mg01Schody4
	call advmouse,setstd
	end method
	method mg01Schody5
	cthis advstdstate
	neg
	cmp0
	je l6724
	ret
l6724:
	push 1
	popax
	sub 0,$a
	cthis actionnr
	push 0
	cmpje
	cmp0
	je l6726
	call fxswist1,play
	cthis getname
	call butgame,removebut
	call butgame,onmousemove
	push "e1_mg01_lisc_"
	cthis getname
	spushs
	push 0
	push 1
	spop $h
	call $h,gete
	pop $b
	popax
	add $a,$b
	push "_odsuniety"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	push 1
	cthis play
l6726:
	end method
	method mg01Schody6
	push "isbutin"
	push "mg01Schody7"
	cthis addmethod
	push "butmoveon"
	push "mg01Schody8"
	cthis addmethod
	push "butmoveoff"
	push "mg01Schody9"
	cthis addmethod
	push "butclick"
	push "mg01Schody10"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg01Schody7
	localdef $1
	localdef $2
	pop $2
	pop $1
	push 1
	popax
	sub 0,$a
	call anlisc1,actionnr
	push 1
	cmpje
	cmp0
	je l6727
	push $1
	push $2
	push 0
	push 0
	cthis isin
	jmp l6729
l6727:
	push 0
	jmp l6729
l6728:
	push 1
l6729:
	end method
	method mg01Schody8
	push "e1_medalfontanna_is_put"
	call clsave,bis
	neg
	cmp0
	je l6731
	push "use"
	call advmouse,set
l6731:
	end method
	method mg01Schody9
	call advmouse,setstd
	end method
	method mg01Schody10
	cthis advstdstate
	neg
	cmp0
	je l6733
	ret
l6733:
	push "e1_medalfontanna_is_put"
	call clsave,bis
	neg
	cmp0
	je l6735
	push "snd_brak_medalu"
	cthis cbplay
l6735:
	end method
	method mg01Schody11
	push "isbutin"
	push "mg01Schody12"
	cthis addmethod
	push "butmoveon"
	push "mg01Schody13"
	cthis addmethod
	push "butmoveoff"
	push "mg01Schody14"
	cthis addmethod
	push "butclick"
	push "mg01Schody15"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg01Schody12
	localdef $1
	localdef $2
	pop $2
	pop $1
	cthis przyciskodkryty
	cmp0
	je l6740
	push $1
	push $2
	push 0
	push 0
	cthis isin
	jmp l6742
l6740:
	push 0
	jmp l6742
l6741:
	push 1
l6742:
	end method
	method mg01Schody13
	cthis advstdstate
	neg
	cmp0
	je l6744
	ret
l6744:
	push "e1_mg01_klucz_przycisk_nacisniety"
	call clsave,bis
	neg
	cmp0
	je l6746
	push "take"
	call advmouse,set
	jmp l6745
l6746:
	call advmouse,setstd
l6745:
	end method
	method mg01Schody14
	call advmouse,setstd
	end method
	method mg01Schody15
	cthis advstdstate
	neg
	cmp0
	je l6748
	ret
l6748:
	call sfxbutclick2,play
	push 1
	popax
	sub 0,$a
	cthis actionnr
	cmp0
	je l6750
	push 0
	push 0
	cthis setframe
	jmp l6749
l6750:
	push 1
	push 0
	cthis setframe
l6749:
	push "e1_mg01_klucz_przycisk_nacisniety"
	call clsave,bis
	neg
	cmp0
	je l6752
	push 1
	popax
	sub 0,$a
	cthis actionnr
	jmp l6754
l6752:
	push 0
	jmp l6754
l6753:
	push 1
l6754:
	cmp0
	je l6755
	push "anprzycisk"
	call butgame,removebut
	push "e1_mg01_klucz_przycisk_nacisniety"
	call clsave,bset
	cthis butmoveon
	push "odsun"
	pop sgmstate
	call timzasuwa,play
	call fxceglamove,play
l6755:
	end method
	method mg01Schody16
	push 0
	push 10
	popax
	sub 0,$a
	call anklapa,move
	localdef $1
	push 140
	pop $1
	push "e1_medalfontanna_is_put"
	call clsave,bis
	cmp0
	je l6757
	push "e1_mg01_klucz_przycisk_nacisniety"
	call clsave,bis
	jmp l6759
l6757:
	push 0
	jmp l6759
l6758:
	push 1
l6759:
	cmp0
	je l6760
	push 0
	pop $1
l6760:
	call anklapa,getpy
	push $1
	cmpjl
	cmp0
	je l6762
	push 0
	call fxceglamove,stop
	cthis advsetstdstate
	push $1
	push 0
	cmpje
	cmp0
	je l6764
	push "e1_mg01_klucz_odkryty"
	call clsave,bset
l6764:
	jmp l6761
l6762:
	cthis play
l6761:
	end method
	method mg01Schody17
	cthis advsetstdstate
	push "e1_mg01_comment_liscie"
	call clsave,bgo
	cmp0
	je l6766
	push "sndliscie"
	cthis cbplay
l6766:
	end method
	method anklucz_TAKE
	push "e1_mg01_klucz_odkryty"
	call clsave,bis
	cmp0
	je l6768
	push 90
	popax
	sub 0,$a
	call ftklucz,rotate
	push "kluczschodek"
	cthis popitem_gotocenter
	jmp l6767
l6768:
	push "snd_nie_moge_wziac"
	cthis cbplay
l6767:
	end method
	method anklucz_INPCK
	push "kluczschodek"
	cthis addtopck
	push "e1_end_schody"
	call clsave,bset
	push "taken_czaszka3"
	call clsave,bis
	cmp0
	je l6770
	cthis timfinito
l6770:
	end method
	method mend
	push "ad01_widokogolny"
	push "gamead01_widokogolny0"
	cthis stdexitdefadv
	end method
	method przyciskodkryty
	push 1
	popax
	sub 0,$a
	call anlisc2,actionnr
	cmp0
	je l6771
	push 1
	popax
	sub 0,$a
	call anlisc3,actionnr
	cmp0
	je l6771
	push 1
	popax
	sub 0,$a
	call anlisc4,actionnr
	jmp l6773
l6771:
	push 0
	jmp l6773
l6772:
	push 1
l6773:
	end method
	method anczaszka3_TAKE
	push "czaszka3"
	cthis popitem_gotocenter
	end method
	method anczaszka3_INPCK
	push "czaszka3"
	cthis addtopck
	push "taken_czaszka3"
	call clsave,bset
	push "e1_end_schody"
	call clsave,bis
	cmp0
	je l6775
	cthis timfinito
l6775:
	end method
	method USE_medalfontanna
	cthis advsetstdstate
	call mouse,getpos
	call andolekputmedal,isbutin
	cmp0
	je l6777
	push "andolekputmedal"
	call butgame,removebut
	push "medalfontanna"
	cthis removefrompck
	call anmedalput,show
	push "e1_medalfontanna_is_put"
	call clsave,bset
	call advmouse,setstd
	cthis butmoveon
	push "odsun"
	pop sgmstate
	call fxceglamove,play
	call timzasuwa,play
	jmp l6776
l6777:
	cthis item_gotopck
l6776:
	end method
	method HINT_CLICK
	push "taken_czaszka3"
	call clsave,bis
	neg
	cmp0
	je l6779
	push "anczaszka3"
	cthis showhint
	jmp l6778
l6779:
	push "e1_mg01_lisc_1_odsuniety"
	call clsave,bis
	neg
	cmp0
	je l6781
	push "anlisc1"
	cthis showhint
	jmp l6780
l6781:
	push "e1_mg01_lisc_2_odsuniety"
	call clsave,bis
	neg
	cmp0
	je l6783
	push "anlisc2"
	cthis showhint
	jmp l6782
l6783:
	push "e1_mg01_lisc_3_odsuniety"
	call clsave,bis
	neg
	cmp0
	je l6785
	push "anlisc3"
	cthis showhint
	jmp l6784
l6785:
	push "e1_mg01_lisc_4_odsuniety"
	call clsave,bis
	neg
	cmp0
	je l6787
	push "anlisc4"
	cthis showhint
	jmp l6786
l6787:
	push "e1_mg01_klucz_przycisk_nacisniety"
	call clsave,bis
	neg
	cmp0
	je l6789
	push "anprzycisk"
	cthis showhint
	jmp l6788
l6789:
	push "e1_medalfontanna_taken"
	call clsave,bis
	neg
	cmp0
	je l6791
	push "anpopexit"
	cthis showhint
	jmp l6790
l6791:
	push "e1_medalfontanna_is_put"
	call clsave,bis
	neg
	cmp0
	je l6793
	push "andolekputmedal"
	cthis showhint
	push "medalfontanna"
	cthis showhintitem
	jmp l6792
l6793:
	push "e1_mg01_klucz_odkryty"
	call clsave,bis
	neg
	cmp0
	je l6795
	push "anprzycisk"
	cthis showhint
	jmp l6794
l6795:
	push "e1_end_schody"
	call clsave,bis
	neg
	cmp0
	je l6797
	push "anklucz"
	cthis showhint
	jmp l6796
l6797:
	push "anpopexit"
	cthis showhint
l6796:
l6794:
l6792:
l6790:
l6788:
l6786:
l6784:
l6782:
l6780:
l6778:
	end method
	end game

	game mg02Klodkabrama
	parent Banshee
	method init
	push "mg02_klodkabrama"
	clparent Banshee,init
	push A
	push "bkg.jpg"
	push "lew.pyz 30"
	push "oczy.pyzH 40"
	push "box.pyzH 5"
	push "els.pyzGH 10"
	push "forklucz.pyzH 15"
	push "kolatka.pyzH 40"
	push "klucz.pyzH 20"
	push "final_glow.pyzH 21"
	push "popexit.pyz 50"
	cthis imgs=
	cthis butpopexit
	push "mg02_klodkabrama"
	cthis askopis
	call anpopexit,getcx
	call anaskopis,getw
	pop $b
	popax
	add $a,$b
	call anpopexit,getcy
	call anaskopis,geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call anaskopis,ansetbpos
	call anlew,mg02Klodkabrama0
	call imgbkg,mg02Klodkabrama1
	push "e1_lew_losuj"
	call clsave,bis
	neg
	cmp0
	je l6801
	push "e1_lew_losuj"
	call clsave,bset
	localint $1
	push 0
	pop $1
l6802:
	push $1
	call grels,size
	cmpjl
	cmp0
	je l6803
	jmp l6805
l6804:
	add $1,1
	pop $1
	jmp l6802
l6805:
	localdef $2
	push $1
	call grels,get
	pop $2
	push $2
	spushs
	push $1
	push 1
	push $2
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],nofframes
	push 1
	pop $b
	popax
	sub $a,$b
	spushs
	spop $h
	call $h,rand
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setframe
	push "e1_lew_els_"
	push $1
	pop $b
	popax
	add $a,$b
	push $2
	spushs
	spop $a
	call [$a],framenr
	call clsave,set
	jmp l6804
l6803:
	jmp l6800
l6801:
	localint $1
	push 0
	pop $1
l6806:
	push $1
	call grels,size
	cmpjl
	cmp0
	je l6807
	jmp l6809
l6808:
	add $1,1
	pop $1
	jmp l6806
l6809:
	push $1
	call grels,get
	spushs
	push $1
	push "e1_lew_els_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,get
	spop $a
	call [$a],setframe
	jmp l6808
l6807:
l6800:
	push A
	push "odklucza2"
	push "monster1"
	push "bgrwiatrN 10"
	push "bgrlas2N 40"
	push "kolatka"
	push "lockdoor1"
	push "ceglaput"
	push "klucz"
	push "przekrecaklucz"
	cthis sfxs=
	new int,bkoniecmech
	cthis mcheckels
	push "e1_lew_mech"
	call clsave,bis
	cmp0
	je l6811
	push bkoniecmech
	neg
	jmp l6813
l6811:
	push 0
	jmp l6813
l6812:
	push 1
l6813:
	cmp0
	je l6814
	call anaskopis,show
	call guihint,switchtoskip
	jmp l6810
l6814:
	call anaskopis,hide
l6810:
	push "onfinish"
	push "mend"
	call anklucz,addmethod
	call ankolatka,mg02Klodkabrama4
	call anlew,mg02Klodkabrama7
	push "mg02Klodkabrama12"
	call grels,eval
	call anforklucz,mg02Klodkabrama16
	push "e1_lew_mech"
	call clsave,bis
	cmp0
	je l6865
	push "opened"
	push 0
	call anlew,setframe
	cthis mlewmech
	jmp l6864
l6865:
	push "e1_lew_kolatka"
	call clsave,bis
	cmp0
	je l6867
	push "sleep"
	push 0
	call anlew,setframe
	call ankolatka,show
	jmp l6866
l6867:
	push 0
	call anoczy,play
l6866:
l6864:
	push "snd_lew"
	push "kinnat_c1d1_3d"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_lew,addmethod
	push "snd_klucz"
	push "kinnat_c1d1_3e"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_klucz,addmethod
	cthis stdstart
	end method
	method mg02Klodkabrama0
	cthis Button_isinalpha
	cthis getname
	call butgame,add
	end method
	method mg02Klodkabrama1
	push "isbutin"
	push "mg02Klodkabrama2"
	cthis addmethod
	push "butclick"
	push "mg02Klodkabrama3"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg02Klodkabrama2
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anbox,isin
	neg
	end method
	method mg02Klodkabrama3
	cthis advstdstate
	neg
	cmp0
	je l6799
	ret
l6799:
	cthis mend
	end method
	method mg02Klodkabrama4
	cthis Button_isin
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg02Klodkabrama5"
	cthis addmethod
	push "onfinish"
	push "mg02Klodkabrama6"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg02Klodkabrama5
	cthis advstdstate
	neg
	cmp0
	jne l6817
	push "e1_lew_mech"
	call clsave,bis
	jmp l6818
l6816:
	push 0
	jmp l6818
l6817:
	push 1
l6818:
	cmp0
	je l6819
	ret
l6819:
	push "lewopen"
	pop sgmstate
	push "e1_lew_mech"
	call clsave,bset
	push 0
	cthis play
	end method
	method mg02Klodkabrama6
	cthis hide
	cthis mlewmech
	push "open"
	call anlew,playsmooth
	call anaskopis,show
	call guihint,switchtoskip
	call fxlockdoor1,play
	end method
	method mg02Klodkabrama7
	push "isbutin"
	push "mg02Klodkabrama8"
	cthis addmethod
	push "butmoveon"
	push "mg02Klodkabrama9"
	cthis addmethod
	cthis Button_moveoffms
	push "butclick"
	push "mg02Klodkabrama10"
	cthis addmethod
	push "onfinish"
	push "mg02Klodkabrama11"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg02Klodkabrama8
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 1
	cthis isin
	cmp0
	je l6820
	cthis actionname
	push "normal"
	cmpje
	cmp0
	jne l6823
	cthis actionname
	push "sleep"
	cmpje
	cmp0
	je l6824
	call ankolatka,isvisible
	neg
	jmp l6826
l6824:
	push 0
	jmp l6826
l6825:
	push 1
l6826:
	jmp l6827
l6822:
	push 0
	jmp l6827
l6823:
	push 1
l6827:
	jmp l6828
l6820:
	push 0
	jmp l6828
l6821:
	push 1
l6828:
	end method
	method mg02Klodkabrama9
	push "use"
	call advmouse,set
	end method
	method mg02Klodkabrama10
	cthis advstdstate
	neg
	cmp0
	je l6830
	ret
l6830:
	cthis actionname
	push "normal"
	cmpje
	cmp0
	je l6832
	push "angrylew"
	pop sgmstate
	push "angry"
	cthis playsmooth
	call fxmonster1,play
	push "angry"
	call anoczy,play
	push "snd_lew"
	cthis cbplay
l6832:
	end method
	method mg02Klodkabrama11
	push 0
	cthis setsmooth
	cthis actionname
	push "angry"
	cmpje
	cmp0
	je l6834
	push "angry2"
	cthis play
	jmp l6833
l6834:
	cthis actionname
	push "angry2"
	cmpje
	cmp0
	je l6836
	push "angry3"
	cthis playsmooth
	jmp l6835
l6836:
	cthis actionname
	push "angry3"
	cmpje
	cmp0
	je l6838
	cthis advsetstdstate
	push "normal"
	cthis play
	push "normal"
	call anoczy,play
	jmp l6837
l6838:
	cthis actionname
	push "open"
	cmpje
	cmp0
	je l6840
	cthis advsetstdstate
	push "opened"
	push 0
	cthis setframe
	jmp l6839
l6840:
	cthis actionname
	push "sleep"
	cmpje
	cmp0
	je l6842
	cthis advsetstdstate
l6842:
l6839:
l6837:
l6835:
l6833:
	end method
	method mg02Klodkabrama12
	push "isbutin"
	push "mg02Klodkabrama13"
	cthis addmethod
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg02Klodkabrama14"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg02Klodkabrama13
	localint $1
	localint $2
	pop $2
	pop $1
	push bkoniecmech
	neg
	cmp0
	je l6843
	push $1
	push $2
	push 1
	push 1
	cthis isin
	jmp l6845
l6843:
	push 0
	jmp l6845
l6844:
	push 1
l6845:
	end method
	method mg02Klodkabrama14
	cthis advstdstate
	neg
	cmp0
	jne l6848
	push bkoniecmech
	jmp l6849
l6847:
	push 0
	jmp l6849
l6848:
	push 1
l6849:
	cmp0
	je l6850
	ret
l6850:
	cthis ansetnextfr
	push "e1_lew_els_"
	push 1
	popax
	sub 0,$a
	cthis actionnr
	pop $b
	popax
	add $a,$b
	cthis framenr
	call clsave,set
	call fxklucz,play
	cthis mcheckels
	push bkoniecmech
	cmp0
	je l6852
	call fxodklucza2,play
	push 1000
	push "mg02Klodkabrama15"
	call anfinal_glow,anfadein
l6852:
	end method
	method mg02Klodkabrama15
	push 1500
	push "null"
	call anfinal_glow,anfadeout
	end method
	method mg02Klodkabrama16
	push "isbutin"
	push "mg02Klodkabrama17"
	cthis addmethod
	push "butmoveon"
	push "mg02Klodkabrama18"
	cthis addmethod
	cthis Button_moveoffms
	push "butclick"
	push "mg02Klodkabrama19"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg02Klodkabrama17
	localint $1
	localint $2
	pop $2
	pop $1
	push bkoniecmech
	cmp0
	je l6853
	push $1
	push $2
	push 1
	push 0
	cthis isin
	jmp l6855
l6853:
	push 0
	jmp l6855
l6854:
	push 1
l6855:
	end method
	method mg02Klodkabrama18
	push "use"
	call advmouse,set
	end method
	method mg02Klodkabrama19
	cthis advstdstate
	neg
	cmp0
	jne l6858
	call guimov,moving
	cmp0
	je l6859
	call guimov,getmover
	push "anitem_kluczschodek"
	cmpje
	jmp l6861
l6859:
	push 0
	jmp l6861
l6860:
	push 1
l6861:
	jmp l6862
l6857:
	push 0
	jmp l6862
l6858:
	push 1
l6862:
	cmp0
	je l6863
	ret
l6863:
	push "snd_klucz"
	cthis cbplay
	end method
	method mlewmech
	call anbox,show
	call grels,show
	call anforklucz,show
	end method
	method mcheckels
	localint $1
	push 0
	pop $1
l6868:
	push $1
	call grels,size
	cmpjl
	cmp0
	je l6869
	jmp l6871
l6870:
	add $1,1
	pop $1
	jmp l6868
l6871:
	push $1
	call grels,get
	spushs
	spop $a
	call [$a],framename
	spushs
	push "ok"
	spop $h
	call $h,contains
	neg
	cmp0
	je l6873
	push 0
	pop bkoniecmech
	ret
l6873:
	jmp l6870
l6869:
	push 1
	pop bkoniecmech
	end method
	method USE_kolatka
	call mouse,getpos
	push 1
	push 1
	call anlew,isin
	cmp0
	je l6875
	push "kolatka"
	cthis removefrompck
	push "sleep"
	call anlew,play
	call anoczy,anhide
	push 800
	push "null"
	call anoczy,anfadeout
	push 800
	push "null"
	call ankolatka,anfadein
	call fxceglaput,play
	push "e1_lew_kolatka"
	call clsave,bset
	jmp l6874
l6875:
	cthis advsetstdstate
	cthis item_gotopck
l6874:
	end method
	method USE_kluczschodek
	push bkoniecmech
	cmp0
	je l6877
	call mouse,getpos
	push 1
	push 0
	call anforklucz,isin
	jmp l6879
l6877:
	push 0
	jmp l6879
l6878:
	push 1
l6879:
	cmp0
	je l6880
	push "kluczschodek"
	cthis removefrompck
	push "kluczotwiera"
	pop sgmstate
	call anforklucz,butdisable
	call advmouse,setstd
	push "e1_lew_otworzony"
	call clsave,bset
	call fxodklucza2,play
	call fxprzekrecaklucz,play
	push 0
	call anklucz,play
	jmp l6876
l6880:
	cthis advsetstdstate
	cthis item_gotopck
l6876:
	end method
	method mend
	push "ad02_brama"
	push "gamead02_brama0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "taken_kolatka"
	call clsave,bis
	neg
	cmp0
	je l6882
	push "anpopexit"
	cthis showhint
	jmp l6881
l6882:
	push "e1_lew_kolatka"
	call clsave,bis
	neg
	cmp0
	je l6884
	push "anlew"
	cthis showhint
	push "kolatka"
	cthis showhintitem
	jmp l6883
l6884:
	push "e1_lew_mech"
	call clsave,bis
	neg
	cmp0
	je l6886
	push "ankolatka"
	cthis showhint
	jmp l6885
l6886:
	push bkoniecmech
	neg
	cmp0
	je l6888
	localint $1
	push 0
	pop $1
l6889:
	push $1
	call grels,size
	cmpjl
	cmp0
	je l6890
	jmp l6892
l6891:
	add $1,1
	pop $1
	jmp l6889
l6892:
	push $1
	call grels,get
	spushs
	spop $a
	call [$a],framename
	spushs
	push "ok"
	spop $h
	call $h,contains
	neg
	cmp0
	je l6894
	push $1
	call grels,get
	cthis showhint
	ret
l6894:
	jmp l6891
l6890:
	jmp l6887
l6888:
	push "taken_kluczschodek"
	call clsave,bis
	neg
	cmp0
	je l6896
	push "anpopexit"
	cthis showhint
	jmp l6895
l6896:
	push "e1_lew_otworzony"
	call clsave,bis
	neg
	cmp0
	je l6898
	push "anforklucz"
	cthis showhint
	push "kluczschodek"
	cthis showhintitem
	jmp l6897
l6898:
	push "anpopexit"
	cthis showhint
l6897:
l6895:
l6887:
l6885:
l6883:
l6881:
	end method
	method SKIP_CLICK
	localint $1
	push 0
	pop $1
l6899:
	push $1
	call grels,size
	cmpjl
	cmp0
	je l6900
	jmp l6902
l6901:
	add $1,1
	pop $1
	jmp l6899
l6902:
	push $1
	call grels,get
	spushs
	push 1
	popax
	sub 0,$a
	push 0
	spop $a
	call [$a],setframe
	push "e1_lew_els_"
	push $1
	pop $b
	popax
	add $a,$b
	push 0
	call clsave,set
	jmp l6901
l6900:
	push 1
	pop bkoniecmech
	push 500
	push "null"
	call anaskopis,anfadeout
	call guihint,switchtohint
	end method
	end game

	game mg01_barghest
	parent Banshee
	method init
	push "mg01_barghest"
	clparent Banshee,init
	push A
	push "bkg.jpg"
	push "anim_pos.pyz H"
	push "ramka.pyz 20"
	cthis imgs=
	new Film,filmb
	push "mus"
	call filmb,musicclass=
	push "onfinish"
	push "mend"
	call filmb,addmethod
	push "scripts/cs01_barghest/"
	push "film"
	call filmb,load
	call filmb,showfirstframe
	call ananim_pos,getpx
	call ananim_pos,getpy
	call filmb,setpos
	push "mg01_barghest0"
	call ccs,enter
	end method
	method mg01_barghest0
	call filmb,play
	end method
	method mend
	push "ad01_widokogolny"
	push "gamead01_widokogolny0"
	cthis stdexitdefadv
	end method
	end game

	game mg01_czaszka
	parent Banshee
	method init
	push "mg01_czaszka"
	clparent Banshee,init
	push A
	push "bkg.jpg"
	push "popup_bkg.pyz 1"
	push "czaszka1_cien.pyzH 2"
	push "czaszka1.pyz 3"
	push "popexit.pyz 3"
	cthis imgs=
	push A
	push "bgrwiatrN 30"
	push "bgrdeszczN 30"
	push "swist1"
	push "ceglamove"
	cthis sfxs=
	cthis butpopexit
	call imgbkg,mg01_czaszka0
	push "taken_czaszka1"
	call clsave,bis
	neg
	cmp0
	je l6906
	push "anczaszka1"
	cthis setasitemtopck
	call anczaszka1_cien,anopacityframe
	push 0
	call anczaszka1_cien,play
l6906:
	cthis stdstart
	end method
	method mg01_czaszka0
	push "isbutin"
	push "mg01_czaszka1"
	cthis addmethod
	push "butclick"
	push "mg01_czaszka2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg01_czaszka1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpopup_bkg,isin
	neg
	end method
	method mg01_czaszka2
	cthis advstdstate
	neg
	cmp0
	je l6904
	ret
l6904:
	cthis mend
	end method
	method anczaszka1_TAKE
	call anczaszka1_cien,anhide
	push "czaszka1"
	cthis popitem_gotocenter
	cthis set_mg_finished
	end method
	method anczaszka1_INPCK
	push "czaszka1"
	cthis addtopck
	cthis timfinito
	end method
	method HINT_CLICK
	push "taken_czaszka1"
	call clsave,bis
	neg
	cmp0
	je l6908
	push "anczaszka1"
	cthis showhint
	jmp l6907
l6908:
	push "anpopexit"
	cthis showhint
l6907:
	end method
	method mend
	push "ad01_widokogolny"
	push "gamead01_widokogolny0"
	cthis stdexitdefadv
	end method
	end game

	game mg02Gniazdo
	parent Banshee
	method init
	push "mg02_gniazdo"
	clparent Banshee,init
	push A
	push "bkg.jpg"
	push "ptak.pyzH 20"
	push "ptak2.pyzH 10"
	push "tlo.pyz 5"
	push "skorupki.pyz 6"
	push "jajko.pyzH 15"
	push "ziarno.pyzH 15"
	push "nasionka_anim.pyz 16"
	push "popexit.pyz 50"
	cthis imgs=
	call antlo,mg02Gniazdo0
	cthis loadimgexitbut
	push "snd_intro"
	push "kinnat_c1d1_1a"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_intro,addmethod
	push A
	push "ptak1"
	push "ptak2"
	push "bgrwiatrN"
	push "bgrlas2N 40"
	push "quickcrumple"
	cthis sfxs=
	push "e1_jajko_taken"
	call clsave,bis
	neg
	cmp0
	je l6910
	call anjajko,show
l6910:
	push "taken_ziarno"
	call clsave,bis
	neg
	cmp0
	je l6912
	call anziarno,show
	push "anziarno"
	cthis setasitemtopck
	call annasionka_anim,anopacityframe
	push 1
	call annasionka_anim,setdrawmode
	push 0
	call annasionka_anim,play
l6912:
	push "e1_ptok_odslonil_jajco"
	call clsave,bis
	cmp0
	je l6914
	push "anptak2"
	push "anptakcorp"
	cthis copyanima
	push 1
	call anptak2,play
	call anptakcorp,show
	jmp l6913
l6914:
	push 0
	call anptak,play
	push "onfinish"
	push "mg02Gniazdo1"
	call anptak,addmethod
l6913:
	cthis butpopexit
	call anptak,mg02Gniazdo2
	cthis stdstart
	end method
	method mg02Gniazdo0
	cthis Button_isinalpha
	cthis getname
	call butgame,add
	end method
	method mg02Gniazdo1
	push 0
	cthis play
	end method
	method mg02Gniazdo2
	cthis Button_isinalpha
	push "butmoveon"
	push "mg02Gniazdo3"
	cthis addmethod
	push "butmoveoff"
	push "mg02Gniazdo4"
	cthis addmethod
	push "butclick"
	push "mg02Gniazdo5"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg02Gniazdo3
	push "e1_ptok_odslonil_jajco"
	call clsave,bis
	neg
	cmp0
	je l6916
	push "use"
	call advmouse,set
	jmp l6915
l6916:
	call advmouse,setstd
l6915:
	end method
	method mg02Gniazdo4
	call advmouse,setstd
	end method
	method mg02Gniazdo5
	push "e1_ptok_odslonil_jajco"
	call clsave,bis
	neg
	cmp0
	je l6918
	push "snd_intro"
	cthis cbplay
l6918:
	end method
	method anziarno_TAKE
	push "e1_ptok_odslonil_jajco"
	call clsave,bis
	cmp0
	je l6920
	push 0
	call annasionka_anim,stop
	call annasionka_anim,hide
	push "ziarno"
	cthis popitem_gotocenter
	jmp l6919
l6920:
	push 1
	call anptak,isplaying
	neg
	cmp0
	je l6922
	push 1
	call anptak,play
	push "snd_intro"
	cthis cbplay
l6922:
l6919:
	end method
	method anziarno_INPCK
	push "ziarno"
	cthis addtopck
	cthis timfinito
	end method
	method USE_jajo
	cthis advsetstdstate
	call advmouse,setstd
	call mouse,getpos
	push 1
	push 1
	call anptak,isin
	cmp0
	jne l6925
	call mouse,getpos
	push 1
	push 1
	call anjajko,isin
	cmp0
	jne l6925
	call mouse,getpos
	push 1
	push 1
	call anziarno,isin
	jmp l6926
l6924:
	push 0
	jmp l6926
l6925:
	push 1
l6926:
	cmp0
	je l6927
	push "jajo"
	cthis removefrompck
	push "anptak2"
	push "anptakcorp"
	cthis copyanima
	push 300
	push 0
	call anptak,anfadeout
	push 0
	call anptak,stop
	call fxquickcrumple,play
	push 1
	call anptak2,play
	push 500
	push "null"
	call anptak2,anfadein
	call anptakcorp,show
	push "e1_ptok_odslonil_jajco"
	call clsave,bset
	call advmouse,setstd
	jmp l6923
l6927:
	cthis item_gotopck
l6923:
	end method
	method HINT_CLICK
	push "ma_jajo"
	call clsave,bis
	cmp0
	je l6929
	push "anptak"
	cthis showhint
	push "jajo"
	cthis showhintitem
	jmp l6928
l6929:
	push "e1_ptok_odslonil_jajco"
	call clsave,bis
	cmp0
	je l6931
	push "taken_ziarno"
	call clsave,bis
	neg
	jmp l6933
l6931:
	push 0
	jmp l6933
l6932:
	push 1
l6933:
	cmp0
	je l6934
	push "anziarno"
	cthis showhint
	jmp l6930
l6934:
	push "anpopexit"
	cthis showhint
l6930:
l6928:
	end method
	method mend
	push "ad02_brama"
	push "gamead02_brama0"
	cthis stdexitdefadv
	end method
	end game

	game mg02SkrytkaL
	parent Banshee
	method init
	push "mg02_skrytkal"
	clparent Banshee,init
	push A
	push "$scripts/mg02_gniazdo/bkg.jpg"
	push "bgpop.pyz 5"
	push "sciana.pyz 15"
	push "mlotek.pyz 10"
	push "podgzyms1.pyz 20"
	push "podgzyms2.pyz 20"
	push "maskabg.pyz 30"
	push "popexit.pyz 40"
	cthis imgs=
	cthis butpopexit
	push "anramka"
	call anmaskabg,addtogamevars
	call imgbkg,mg02SkrytkaL0
	push A
	push "bgrwiatrN"
	push "bgrlas2N 40"
	push "glaz"
	push "ceglaput"
	cthis sfxs=
	push "taken_mlotek"
	call clsave,bis
	cmp0
	je l6938
	call anmlotek,hide
	jmp l6937
l6938:
	push "anmlotek"
	cthis setasitemtopck
l6937:
	push "e1_ad02_gzyms1put"
	call clsave,bis
	cmp0
	je l6940
	call anpodgzyms1,hide
	jmp l6939
l6940:
	call anpodgzyms1,mg02SkrytkaL3
l6939:
	push "e1_ad02_gzyms2put"
	call clsave,bis
	cmp0
	je l6951
	call anpodgzyms2,hide
	jmp l6950
l6951:
	call anpodgzyms2,mg02SkrytkaL8
l6950:
	push "e1_ad02_skrytka_otwarta"
	call clsave,bis
	cmp0
	je l6962
	push "opened"
	push 0
	call ansciana,setframe
	jmp l6961
l6962:
	call anmlotek,hide
	push "isbutin"
	push "mg02SkrytkaL13"
	call ansciana,addmethod
	call ansciana,Button_moveonms
	call ansciana,Button_moveoffms
	push "butclick"
	push "mg02SkrytkaL14"
	call ansciana,addmethod
	push "ansciana"
	call butgame,add
l6961:
	push "e1_ad02_gzyms1put"
	call clsave,bis
	neg
	cmp0
	je l6969
	push "e1_ad02_gzyms2put"
	call clsave,bis
	neg
	jmp l6971
l6969:
	push 0
	jmp l6971
l6970:
	push 1
l6971:
	cmp0
	je l6972
	push "snd_intro"
	push "kinnat_c1d1_3"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_intro,addmethod
	push "snd_intro"
	cthis cbplay
l6972:
	push "snd_brakuje"
	push "kinnat_c1d1_3b"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_brakuje,addmethod
	cthis stdstart
	end method
	method mg02SkrytkaL0
	push "isbutin"
	push "mg02SkrytkaL1"
	cthis addmethod
	push "butclick"
	push "mg02SkrytkaL2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg02SkrytkaL1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anbgpop,isin
	neg
	end method
	method mg02SkrytkaL2
	cthis advstdstate
	neg
	cmp0
	je l6936
	ret
l6936:
	cthis mend
	end method
	method mg02SkrytkaL3
	push "isbutin"
	push "mg02SkrytkaL4"
	cthis addmethod
	push "butmoveon"
	push "mg02SkrytkaL5"
	cthis addmethod
	push "butmoveoff"
	push "mg02SkrytkaL6"
	cthis addmethod
	push "butclick"
	push "mg02SkrytkaL7"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg02SkrytkaL4
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	end method
	method mg02SkrytkaL5
	push "e1_ad02_gzyms1put"
	call clsave,bis
	neg
	cmp0
	je l6942
	push "use"
	call advmouse,set
l6942:
	end method
	method mg02SkrytkaL6
	call advmouse,setstd
	end method
	method mg02SkrytkaL7
	cthis advstdstate
	neg
	cmp0
	jne l6945
	push sgmstate
	push "getitem"
	cmpje
	jmp l6946
l6944:
	push 0
	jmp l6946
l6945:
	push 1
l6946:
	cmp0
	je l6947
	ret
l6947:
	push "e1_ad02_gzyms1put"
	call clsave,bis
	neg
	cmp0
	je l6949
	push "snd_brakuje"
	cthis cbplay
l6949:
	end method
	method mg02SkrytkaL8
	push "isbutin"
	push "mg02SkrytkaL9"
	cthis addmethod
	push "butmoveon"
	push "mg02SkrytkaL10"
	cthis addmethod
	push "butmoveoff"
	push "mg02SkrytkaL11"
	cthis addmethod
	push "butclick"
	push "mg02SkrytkaL12"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg02SkrytkaL9
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	end method
	method mg02SkrytkaL10
	push "e1_ad02_gzyms2put"
	call clsave,bis
	neg
	cmp0
	je l6953
	push "use"
	call advmouse,set
l6953:
	end method
	method mg02SkrytkaL11
	call advmouse,setstd
	end method
	method mg02SkrytkaL12
	cthis advstdstate
	neg
	cmp0
	jne l6956
	push sgmstate
	push "getitem"
	cmpje
	jmp l6957
l6955:
	push 0
	jmp l6957
l6956:
	push 1
l6957:
	cmp0
	je l6958
	ret
l6958:
	push "e1_ad02_gzyms2put"
	call clsave,bis
	neg
	cmp0
	je l6960
	push "snd_brakuje"
	cthis cbplay
l6960:
	end method
	method mg02SkrytkaL13
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 1
	cthis isin
	cmp0
	je l6963
	call anpodgzyms1,isvisible
	neg
	cmp0
	je l6963
	call anpodgzyms2,isvisible
	neg
	jmp l6965
l6963:
	push 0
	jmp l6965
l6964:
	push 1
l6965:
	end method
	method mg02SkrytkaL14
	cthis advstdstate
	neg
	cmp0
	je l6967
	ret
l6967:
	cthis getname
	call butgame,removebut
	call butgame,onmousemove
	push "e1_ad02_skrytka_otwarta"
	call clsave,bset
	push "state_opensciana"
	pop sgmstate
	push 500
	push "null"
	call anmlotek,anfadein
	push "open"
	push "mg02SkrytkaL15"
	cthis anplayfin
	end method
	method mg02SkrytkaL15
	cthis advsetstdstate
	end method
	method anmlotek_TAKE
	push "mlotek"
	cthis popitem_gotocenter
	end method
	method anmlotek_INPCK
	push "mlotek"
	cthis addtopck
	cthis timfinito
	end method
	method USE_gzyms1
	cthis advsetstdstate
	call mouse,getpos
	push 1
	push 0
	call anpodgzyms1,isin
	cmp0
	je l6974
	call fxceglaput,play
	push "e1_ad02_gzyms1put"
	call clsave,bset
	call anpodgzyms1,hide
	push "gzyms1"
	cthis removefrompck
	call advmouse,setstd
	call anpodgzyms1,butdisable
	jmp l6973
l6974:
	cthis item_gotopck
l6973:
	end method
	method USE_gzyms2
	cthis advsetstdstate
	call mouse,getpos
	push 1
	push 0
	call anpodgzyms2,isin
	cmp0
	je l6976
	call fxceglaput,play
	push "e1_ad02_gzyms2put"
	call clsave,bset
	call anpodgzyms2,hide
	push "gzyms2"
	cthis removefrompck
	call advmouse,setstd
	call anpodgzyms2,butdisable
	jmp l6975
l6976:
	cthis item_gotopck
l6975:
	end method
	method HINT_CLICK
	push "ma_gzyms1"
	call clsave,bis
	cmp0
	je l6978
	push "e1_ad02_gzyms1put"
	call clsave,bis
	neg
	jmp l6980
l6978:
	push 0
	jmp l6980
l6979:
	push 1
l6980:
	cmp0
	je l6981
	push "anpodgzyms1"
	cthis showhint
	push "gzyms1"
	cthis showhintitem
	jmp l6977
l6981:
	push "ma_gzyms2"
	call clsave,bis
	cmp0
	je l6983
	push "e1_ad02_gzyms2put"
	call clsave,bis
	neg
	jmp l6985
l6983:
	push 0
	jmp l6985
l6984:
	push 1
l6985:
	cmp0
	je l6986
	push "anpodgzyms2"
	cthis showhint
	push "gzyms2"
	cthis showhintitem
	jmp l6982
l6986:
	push "e1_ad02_gzyms1put"
	call clsave,bis
	push "e1_ad02_gzyms2put"
	call clsave,bis
	pop $b
	popax
	and $a,$b
	push "e1_ad02_skrytka_otwarta"
	call clsave,bis
	neg
	pop $b
	popax
	and $a,$b
	cmp0
	je l6988
	push "anmaskabg"
	cthis showhint
	jmp l6987
l6988:
	push "e1_ad02_skrytka_otwarta"
	call clsave,bis
	cmp0
	je l6990
	push "taken_mlotek"
	call clsave,bis
	neg
	jmp l6992
l6990:
	push 0
	jmp l6992
l6991:
	push 1
l6992:
	cmp0
	je l6993
	push "anmlotek"
	cthis showhint
	jmp l6989
l6993:
	push "anpopexit"
	cthis showhint
l6989:
l6987:
l6982:
l6977:
	end method
	method mend
	push "ad02_brama"
	push "gamead02_brama0"
	cthis stdexitdefadv
	end method
	end game

	game mg03_pnacza
	parent Banshee
	method init
	push "mg03_pnacza"
	clparent Banshee,init
	push A
	push "bkg.jpg 0"
	push "base.pyz 1"
	push "cegla_1.pyzH 3"
	push "cegla_2.pyzH 3"
	push "cegla_3.pyzH 3"
	push "cegla_1_fall.pyzH 3"
	push "cegla_2_fall.pyzH 3"
	push "cegla_3_fall.pyzH 3"
	push "diamond_1.pyzH 4"
	push "diamond_2.pyzH 5"
	push "diamond_3.pyzH 5"
	push "1.pyzH 6"
	push "2.pyzH 6"
	push "3.pyzH 6"
	push "4.pyzH 6"
	push "5.pyzH 6"
	push "6.pyzH 6"
	push "7.pyzH 6"
	push "8.pyzH 6"
	push "9.pyzH 6"
	push "rama.pyz 7"
	push "cut_1.pyz 8"
	push "cut_2.pyz 9"
	push "cut_3.pyz 10"
	push "cut_4.pyz 11"
	push "cut_5.pyz 12"
	push "cut_6.pyz 13"
	push "frame.pyz 14"
	push "popexit.pyz 15"
	cthis imgs=
	cthis butpopexit
	push "mg03_pnacza"
	cthis askopis
	call anpopexit,getcx
	call anaskopis,getw
	pop $b
	popax
	add $a,$b
	call anpopexit,getcy
	call anaskopis,geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call anaskopis,ansetbpos
	call anaskopis,hide
	push A
	push "bgrwiatrN 30"
	push "bgrlas2N 20"
	push "cegly 80"
	push "sekator 90"
	push "prund"
	push "write1"
	push "write2"
	cthis sfxs=
	push "sndnidagetrid"
	push "kinnat_c1d1_7"
	cthis newsndfree
	push "sndnidaloosenbrick"
	push "kinnat_c1d1_9"
	cthis newsndfree
	call imgbkg,mg03_pnacza0
	new int,computer_turn
	push 1
	pop computer_turn
	new int,shake1
	push 0
	pop shake1
	new int,shake2
	push 0
	pop shake2
	new int,shake3
	push 0
	pop shake3
	new Film,filmb
	push "mus"
	call filmb,musicclass=
	push "scripts/cs03_pnacza/"
	push "film"
	call filmb,load
	call anbase,getpx
	call anbase,getpy
	call filmb,setpos
	call filmb,showfirstframe
	push 2
	call filmb,setz
	localint $1
	push 1
	pop $1
l6996:
	push $1
	push 6
	cmpjle
	cmp0
	je l6997
	jmp l6999
l6998:
	add $1,1
	pop $1
	jmp l6996
l6999:
	push "ancut_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],mg03_pnacza3
	jmp l6998
l6997:
	localint $1
	push 1
	pop $1
l7007:
	push $1
	push 9
	cmpjle
	cmp0
	je l7008
	jmp l7010
l7009:
	add $1,1
	pop $1
	jmp l7007
l7010:
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],mg03_pnacza7
	jmp l7009
l7008:
	localint $1
	push 1
	pop $1
l7029:
	push $1
	push 6
	cmpjle
	cmp0
	je l7030
	jmp l7032
l7031:
	add $1,1
	pop $1
	jmp l7029
l7032:
	push "ancut_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],mg03_pnacza10
	jmp l7031
l7030:
	call ancegla_1,mg03_pnacza11
	call ancegla_2,mg03_pnacza13
	call ancegla_3,mg03_pnacza15
	push "andiamond_1"
	cthis setasitemtopck
	push "andiamond_2"
	cthis setasitemtopck
	push "andiamond_3"
	cthis setasitemtopck
	localint $1
	push 1
	pop $1
l7045:
	push $1
	push 6
	cmpjle
	cmp0
	je l7046
	jmp l7048
l7047:
	add $1,1
	pop $1
	jmp l7045
l7048:
	push "e1_bn03pnacza_cuted_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l7050
	push "ancut_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],hide
l7050:
	jmp l7047
l7046:
	push "bn03pnacza_player_won"
	call clsave,bis
	cmp0
	je l7052
	call anrama,hide
	call filmb,showlastframe
	push "bn03pnacza_cegla_1_pushed"
	call clsave,bis
	cmp0
	je l7054
	call ancegla_1,show
	push "pushed"
	call ancegla_1,play
	push "taken_krysztal_red_1"
	call clsave,bis
	neg
	cmp0
	je l7056
	call andiamond_1,show
l7056:
	jmp l7053
l7054:
	call ancegla_1,show
	push "ancegla_1"
	call butgame,add
l7053:
	push "bn03pnacza_cegla_2_pushed"
	call clsave,bis
	cmp0
	je l7058
	call ancegla_2,show
	push "pushed"
	call ancegla_2,play
	push "taken_krysztal_red_2"
	call clsave,bis
	neg
	cmp0
	je l7060
	call andiamond_2,show
l7060:
	jmp l7057
l7058:
	call ancegla_2,show
	push "ancegla_2"
	call butgame,add
l7057:
	push "bn03pnacza_cegla_3_pushed"
	call clsave,bis
	cmp0
	je l7062
	call ancegla_3,show
	push "pushed"
	call ancegla_3,play
	push "taken_krysztal_blue_1"
	call clsave,bis
	neg
	cmp0
	je l7064
	call andiamond_3,show
l7064:
	jmp l7061
l7062:
	call ancegla_3,show
	push "ancegla_3"
	call butgame,add
l7061:
	jmp l7051
l7052:
	cthis check_game_can_start
	cmp0
	je l7066
	cthis start_game
l7066:
l7051:
	push "bn03pnacza_player_won"
	call clsave,bis
	neg
	cmp0
	je l7068
	push "snd_intro_tic_tac_toe"
	push "kinnat_c1d1_10a"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_intro_tic_tac_toe,addmethod
	push save_prefix
	push "intro_tic_tac_toe_spoken"
	pop $b
	popax
	add $a,$b
	call clsave,bset
l7068:
	push "mg03_pnacza17"
	call ccs,enter
	end method
	method mg03_pnacza0
	push "isbutin"
	push "mg03_pnacza1"
	cthis addmethod
	push "butclick"
	push "mg03_pnacza2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg03_pnacza1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anbase,isin
	neg
	end method
	method mg03_pnacza2
	cthis advstdstate
	neg
	cmp0
	je l6995
	ret
l6995:
	cthis mend
	end method
	method mg03_pnacza3
	cthis Button_isin
	push "butmoveon"
	push "mg03_pnacza4"
	cthis addmethod
	push "butmoveoff"
	push "mg03_pnacza5"
	cthis addmethod
	push "butclick"
	push "mg03_pnacza6"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg03_pnacza4
	push "use"
	call advmouse,set
	end method
	method mg03_pnacza5
	call advmouse,setstd
	end method
	method mg03_pnacza6
	cthis advstdstate
	neg
	cmp0
	jne l7002
	push sgmstate
	push "getitem"
	cmpje
	jmp l7003
l7001:
	push 0
	jmp l7003
l7002:
	push 1
l7003:
	cmp0
	je l7004
	ret
l7004:
	cthis get_ancut
	push 1
	popax
	sub 0,$a
	cmpja
	cmp0
	je l7006
	push "sndnidagetrid"
	cthis cbplay
l7006:
	end method
	method mg03_pnacza7
	cthis Button_isin
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg03_pnacza8"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg03_pnacza8
	cthis advstdstate
	neg
	cmp0
	je l7012
	ret
l7012:
	call fxwrite1,play
	push 1
	popax
	sub 0,$a
	cthis actionnr
	push 0
	cmpje
	cmp0
	je l7014
	push 1
	cthis play
	push 500
	push "mg03_pnacza9"
	cthis anfadein
l7014:
	end method
	method mg03_pnacza9
	cthis check_won
	push 0
	cmpje
	cmp0
	je l7016
	cthis table_full
	neg
	cmp0
	je l7018
	cthis computer_move
l7018:
	cthis check_won
	push 0
	cmpja
	cmp0
	je l7020
	cthis check_won
	push 1
	cmpje
	cmp0
	je l7022
	cthis player_won
	jmp l7021
l7022:
	cthis start_game
l7021:
	jmp l7019
l7020:
	cthis table_full
	cmp0
	je l7024
	cthis start_game
l7024:
l7019:
	jmp l7015
l7016:
	cthis check_won
	push 1
	cmpje
	cmp0
	je l7026
	cthis player_won
	ret
	jmp l7025
l7026:
	cthis start_game
	ret
l7025:
	cthis table_full
	cmp0
	je l7028
	cthis start_game
l7028:
l7015:
	end method
	method mg03_pnacza10
	call anbase,getpx
	call anbase,getpy
	call anbase,getex
	call anbase,getey
	cthis clip
	end method
	method mg03_pnacza11
	cthis Button_isin
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg03_pnacza12"
	cthis addmethod
	end method
	method mg03_pnacza12
	cthis advstdstate
	neg
	cmp0
	je l7034
	ret
l7034:
	call fxcegly,play
	push shake1
	push 2
	cmpjl
	cmp0
	je l7036
	push shake1
	push 1
	pop $b
	popax
	add $a,$b
	pop shake1
	push "shake"
	cthis play
	jmp l7035
l7036:
	push "push"
	cthis play
	call ancegla_1_fall,show
	push "fall"
	call ancegla_1_fall,play
	push 300
	push "null"
	call andiamond_1,anfadein
	push "bn03pnacza_cegla_1_pushed"
	call clsave,bset
	push "take"
	call advmouse,set
	cthis getname
	call butgame,removebut
l7035:
	end method
	method mg03_pnacza13
	cthis Button_isin
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg03_pnacza14"
	cthis addmethod
	end method
	method mg03_pnacza14
	cthis advstdstate
	neg
	cmp0
	je l7038
	ret
l7038:
	call fxcegly,play
	push shake2
	push 2
	cmpjl
	cmp0
	je l7040
	push shake2
	push 1
	pop $b
	popax
	add $a,$b
	pop shake2
	push "shake"
	cthis play
	jmp l7039
l7040:
	call ancegla_2_fall,show
	push "fall"
	call ancegla_2_fall,play
	push "push"
	cthis play
	push 300
	push "null"
	call andiamond_2,anfadein
	push "bn03pnacza_cegla_2_pushed"
	call clsave,bset
	cthis getname
	call butgame,removebut
	push "take"
	call advmouse,set
l7039:
	end method
	method mg03_pnacza15
	cthis Button_isin
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg03_pnacza16"
	cthis addmethod
	end method
	method mg03_pnacza16
	cthis advstdstate
	neg
	cmp0
	je l7042
	ret
l7042:
	call fxcegly,play
	push shake3
	push 2
	cmpjl
	cmp0
	je l7044
	push shake3
	push 1
	pop $b
	popax
	add $a,$b
	pop shake3
	push "shake"
	cthis play
	jmp l7043
l7044:
	push "push"
	cthis play
	call ancegla_3_fall,show
	push "fall"
	call ancegla_3_fall,play
	push 300
	push "null"
	call andiamond_3,anfadein
	push "bn03pnacza_cegla_3_pushed"
	call clsave,bset
	push "take"
	call advmouse,set
	cthis getname
	call butgame,removebut
l7043:
	end method
	method mg03_pnacza17
	cthis advsetstdstate
	push "e1_bn03pnacza_cuted_"
	push 6
	call clsave,bisand2
	neg
	cmp0
	je l7070
	push "sndnidagetrid"
	cthis cbplay
	jmp l7069
l7070:
	push "bn03pnacza_player_won"
	call clsave,bis
	neg
	cmp0
	je l7072
	push "snd_intro_tic_tac_toe"
	cthis cbplay
	jmp l7071
l7072:
	push "bn03pnacza_cegla_"
	push 1
	push 3
	push "_pushed"
	call clsave,bisand
	neg
	cmp0
	je l7074
	push "sndnidaloosenbrick"
	cthis cbplay
l7074:
l7071:
l7069:
	end method
	method mend
	push "ad03_placglowny"
	push "gamead03_placglowny0"
	cthis stdexitdefadv
	end method
	method check_game_can_start
	localint $1
	push 1
	pop $1
l7075:
	push $1
	push 6
	cmpjle
	cmp0
	je l7076
	jmp l7078
l7077:
	add $1,1
	pop $1
	jmp l7075
l7078:
	push "e1_bn03pnacza_cuted_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l7080
	push 0
	ret
l7080:
	jmp l7077
l7076:
	push 1
	ret
	end method
	method start_game
	call guiskipmg,isvisible
	neg
	cmp0
	je l7082
	call guihint,switchtoskip
	call anaskopis,show
l7082:
	localint $1
	push 1
	pop $1
l7083:
	push $1
	push 9
	cmpjle
	cmp0
	je l7084
	jmp l7086
l7085:
	add $1,1
	pop $1
	jmp l7083
l7086:
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],show
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push "empty"
	spop $a
	call [$a],play
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 400
	push "null"
	spop $a
	call [$a],anfadein
	jmp l7085
l7084:
	localint $2
	push 7
	pop $2
	push computer_turn
	cmp0
	je l7088
	push "an"
	push $2
	spushs
	spop $a
	call $a,rand
	push 1
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	add $a,$b
	spushs
	push "x"
	spop $a
	call [$a],play
	push 0
	pop computer_turn
	jmp l7087
l7088:
	push 1
	pop computer_turn
l7087:
	end method
	method act_anim
	localint $1
	pop $1
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	ret
	end method
	method check_won
	push 1
	cthis act_anim
	push 2
	cthis act_anim
	cmpje
	cmp0
	je l7090
	push 2
	cthis act_anim
	push 3
	cthis act_anim
	cmpje
	cmp0
	je l7090
	push 1
	cthis act_anim
	push 0
	cmpja
	jmp l7092
l7090:
	push 0
	jmp l7092
l7091:
	push 1
l7092:
	cmp0
	je l7093
	push 1
	cthis act_anim
	ret
l7093:
	push 4
	cthis act_anim
	push 5
	cthis act_anim
	cmpje
	cmp0
	je l7095
	push 5
	cthis act_anim
	push 6
	cthis act_anim
	cmpje
	cmp0
	je l7095
	push 4
	cthis act_anim
	push 0
	cmpja
	jmp l7097
l7095:
	push 0
	jmp l7097
l7096:
	push 1
l7097:
	cmp0
	je l7098
	push 4
	cthis act_anim
	ret
l7098:
	push 7
	cthis act_anim
	push 8
	cthis act_anim
	cmpje
	cmp0
	je l7100
	push 8
	cthis act_anim
	push 9
	cthis act_anim
	cmpje
	cmp0
	je l7100
	push 7
	cthis act_anim
	push 0
	cmpja
	jmp l7102
l7100:
	push 0
	jmp l7102
l7101:
	push 1
l7102:
	cmp0
	je l7103
	push 7
	cthis act_anim
	ret
l7103:
	push 1
	cthis act_anim
	push 4
	cthis act_anim
	cmpje
	cmp0
	je l7105
	push 4
	cthis act_anim
	push 7
	cthis act_anim
	cmpje
	cmp0
	je l7105
	push 1
	cthis act_anim
	push 0
	cmpja
	jmp l7107
l7105:
	push 0
	jmp l7107
l7106:
	push 1
l7107:
	cmp0
	je l7108
	push 1
	cthis act_anim
	ret
l7108:
	push 2
	cthis act_anim
	push 5
	cthis act_anim
	cmpje
	cmp0
	je l7110
	push 5
	cthis act_anim
	push 8
	cthis act_anim
	cmpje
	cmp0
	je l7110
	push 2
	cthis act_anim
	push 0
	cmpja
	jmp l7112
l7110:
	push 0
	jmp l7112
l7111:
	push 1
l7112:
	cmp0
	je l7113
	push 2
	cthis act_anim
	ret
l7113:
	push 3
	cthis act_anim
	push 6
	cthis act_anim
	cmpje
	cmp0
	je l7115
	push 6
	cthis act_anim
	push 9
	cthis act_anim
	cmpje
	cmp0
	je l7115
	push 3
	cthis act_anim
	push 0
	cmpja
	jmp l7117
l7115:
	push 0
	jmp l7117
l7116:
	push 1
l7117:
	cmp0
	je l7118
	push 3
	cthis act_anim
	ret
l7118:
	push 1
	cthis act_anim
	push 5
	cthis act_anim
	cmpje
	cmp0
	je l7120
	push 5
	cthis act_anim
	push 9
	cthis act_anim
	cmpje
	cmp0
	je l7120
	push 1
	cthis act_anim
	push 0
	cmpja
	jmp l7122
l7120:
	push 0
	jmp l7122
l7121:
	push 1
l7122:
	cmp0
	je l7123
	push 1
	cthis act_anim
	ret
l7123:
	push 3
	cthis act_anim
	push 5
	cthis act_anim
	cmpje
	cmp0
	je l7125
	push 5
	cthis act_anim
	push 7
	cthis act_anim
	cmpje
	cmp0
	je l7125
	push 3
	cthis act_anim
	push 0
	cmpja
	jmp l7127
l7125:
	push 0
	jmp l7127
l7126:
	push 1
l7127:
	cmp0
	je l7128
	push 3
	cthis act_anim
	ret
l7128:
	push 0
	ret
	end method
	method computer_move
	call fxwrite2,play
	push 9
	spushs
	spop $h
	call $h,rand
	push 4
	cmpja
	cmp0
	je l7130
	push 1
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l7132
	push 2
	cthis act_anim
	push 0
	cmpje
	cmp0
	je l7132
	push 3
	cthis act_anim
	push 1
	cmpje
	jmp l7134
l7132:
	push 0
	jmp l7134
l7133:
	push 1
l7134:
	cmp0
	je l7135
	push "an2"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l7135:
	push 4
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l7137
	push 5
	cthis act_anim
	push 0
	cmpje
	cmp0
	je l7137
	push 6
	cthis act_anim
	push 1
	cmpje
	jmp l7139
l7137:
	push 0
	jmp l7139
l7138:
	push 1
l7139:
	cmp0
	je l7140
	push "an5"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l7140:
	push 7
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l7142
	push 8
	cthis act_anim
	push 0
	cmpje
	cmp0
	je l7142
	push 9
	cthis act_anim
	push 1
	cmpje
	jmp l7144
l7142:
	push 0
	jmp l7144
l7143:
	push 1
l7144:
	cmp0
	je l7145
	push "an8"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l7145:
	push 1
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l7147
	push 4
	cthis act_anim
	push 0
	cmpje
	cmp0
	je l7147
	push 7
	cthis act_anim
	push 1
	cmpje
	jmp l7149
l7147:
	push 0
	jmp l7149
l7148:
	push 1
l7149:
	cmp0
	je l7150
	push "an4"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l7150:
	push 2
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l7152
	push 5
	cthis act_anim
	push 0
	cmpje
	cmp0
	je l7152
	push 8
	cthis act_anim
	push 1
	cmpje
	jmp l7154
l7152:
	push 0
	jmp l7154
l7153:
	push 1
l7154:
	cmp0
	je l7155
	push "an5"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l7155:
	push 3
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l7157
	push 6
	cthis act_anim
	push 0
	cmpje
	cmp0
	je l7157
	push 9
	cthis act_anim
	push 1
	cmpje
	jmp l7159
l7157:
	push 0
	jmp l7159
l7158:
	push 1
l7159:
	cmp0
	je l7160
	push "an6"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l7160:
	push 1
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l7162
	push 5
	cthis act_anim
	push 0
	cmpje
	cmp0
	je l7162
	push 9
	cthis act_anim
	push 1
	cmpje
	jmp l7164
l7162:
	push 0
	jmp l7164
l7163:
	push 1
l7164:
	cmp0
	je l7165
	push "an5"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l7165:
	push 1
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l7167
	push 5
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l7167
	push 9
	cthis act_anim
	push 0
	cmpje
	jmp l7169
l7167:
	push 0
	jmp l7169
l7168:
	push 1
l7169:
	cmp0
	je l7170
	push "an9"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l7170:
	push 1
	cthis act_anim
	push 0
	cmpje
	cmp0
	je l7172
	push 5
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l7172
	push 9
	cthis act_anim
	push 1
	cmpje
	jmp l7174
l7172:
	push 0
	jmp l7174
l7173:
	push 1
l7174:
	cmp0
	je l7175
	push "an1"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l7175:
	push 3
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l7177
	push 5
	cthis act_anim
	push 0
	cmpje
	cmp0
	je l7177
	push 7
	cthis act_anim
	push 1
	cmpje
	jmp l7179
l7177:
	push 0
	jmp l7179
l7178:
	push 1
l7179:
	cmp0
	je l7180
	push "an5"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l7180:
	push 3
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l7182
	push 5
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l7182
	push 7
	cthis act_anim
	push 0
	cmpje
	jmp l7184
l7182:
	push 0
	jmp l7184
l7183:
	push 1
l7184:
	cmp0
	je l7185
	push "an7"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l7185:
	push 3
	cthis act_anim
	push 0
	cmpje
	cmp0
	je l7187
	push 5
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l7187
	push 7
	cthis act_anim
	push 1
	cmpje
	jmp l7189
l7187:
	push 0
	jmp l7189
l7188:
	push 1
l7189:
	cmp0
	je l7190
	push "an3"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l7190:
	push 1
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l7192
	push 2
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l7192
	push 3
	cthis act_anim
	push 0
	cmpje
	jmp l7194
l7192:
	push 0
	jmp l7194
l7193:
	push 1
l7194:
	cmp0
	je l7195
	push "an3"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l7195:
	push 1
	cthis act_anim
	push 0
	cmpje
	cmp0
	je l7197
	push 2
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l7197
	push 3
	cthis act_anim
	push 1
	cmpje
	jmp l7199
l7197:
	push 0
	jmp l7199
l7198:
	push 1
l7199:
	cmp0
	je l7200
	push "an1"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l7200:
	push 4
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l7202
	push 5
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l7202
	push 6
	cthis act_anim
	push 0
	cmpje
	jmp l7204
l7202:
	push 0
	jmp l7204
l7203:
	push 1
l7204:
	cmp0
	je l7205
	push "an6"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l7205:
	push 4
	cthis act_anim
	push 0
	cmpje
	cmp0
	je l7207
	push 5
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l7207
	push 6
	cthis act_anim
	push 1
	cmpje
	jmp l7209
l7207:
	push 0
	jmp l7209
l7208:
	push 1
l7209:
	cmp0
	je l7210
	push "an4"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l7210:
	push 7
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l7212
	push 8
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l7212
	push 9
	cthis act_anim
	push 0
	cmpje
	jmp l7214
l7212:
	push 0
	jmp l7214
l7213:
	push 1
l7214:
	cmp0
	je l7215
	push "an9"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l7215:
	push 7
	cthis act_anim
	push 0
	cmpje
	cmp0
	je l7217
	push 8
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l7217
	push 9
	cthis act_anim
	push 1
	cmpje
	jmp l7219
l7217:
	push 0
	jmp l7219
l7218:
	push 1
l7219:
	cmp0
	je l7220
	push "an7"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l7220:
	push 1
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l7222
	push 4
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l7222
	push 7
	cthis act_anim
	push 0
	cmpje
	jmp l7224
l7222:
	push 0
	jmp l7224
l7223:
	push 1
l7224:
	cmp0
	je l7225
	push "an7"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l7225:
	push 1
	cthis act_anim
	push 0
	cmpje
	cmp0
	je l7227
	push 4
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l7227
	push 7
	cthis act_anim
	push 1
	cmpje
	jmp l7229
l7227:
	push 0
	jmp l7229
l7228:
	push 1
l7229:
	cmp0
	je l7230
	push "an1"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l7230:
	push 2
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l7232
	push 5
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l7232
	push 8
	cthis act_anim
	push 0
	cmpje
	jmp l7234
l7232:
	push 0
	jmp l7234
l7233:
	push 1
l7234:
	cmp0
	je l7235
	push "an8"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l7235:
	push 2
	cthis act_anim
	push 0
	cmpje
	cmp0
	je l7237
	push 5
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l7237
	push 8
	cthis act_anim
	push 1
	cmpje
	jmp l7239
l7237:
	push 0
	jmp l7239
l7238:
	push 1
l7239:
	cmp0
	je l7240
	push "an2"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l7240:
	push 3
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l7242
	push 6
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l7242
	push 9
	cthis act_anim
	push 0
	cmpje
	jmp l7244
l7242:
	push 0
	jmp l7244
l7243:
	push 1
l7244:
	cmp0
	je l7245
	push "an9"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l7245:
	push 3
	cthis act_anim
	push 0
	cmpje
	cmp0
	je l7247
	push 6
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l7247
	push 9
	cthis act_anim
	push 1
	cmpje
	jmp l7249
l7247:
	push 0
	jmp l7249
l7248:
	push 1
l7249:
	cmp0
	je l7250
	push "an3"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l7250:
	localint $1
	push 1
	pop $1
l7251:
	push $1
	push 9
	cmpjle
	cmp0
	je l7252
	jmp l7254
l7253:
	add $1,1
	pop $1
	jmp l7251
l7254:
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	push 0
	cmpje
	cmp0
	je l7256
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l7256:
	jmp l7253
l7252:
	jmp l7129
l7130:
	localint $2
	push 0
	pop $2
l7257:
	push $2
	neg
	cmp0
	je l7258
	localint $3
	push 9
	spushs
	spop $h
	call $h,rand
	push 1
	pop $b
	popax
	add $a,$b
	pop $3
	push "an"
	push $3
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	push 0
	cmpje
	cmp0
	je l7260
	push "an"
	push $3
	pop $b
	popax
	add $a,$b
	spushs
	push "x"
	spop $a
	call [$a],play
	push 1
	pop $2
l7260:
	jmp l7257
l7258:
l7129:
	end method
	method table_full
	localint $1
	push 1
	pop $1
l7261:
	push $1
	push 9
	cmpjle
	cmp0
	je l7262
	jmp l7264
l7263:
	add $1,1
	pop $1
	jmp l7261
l7264:
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	push 0
	cmpje
	cmp0
	je l7266
	push 0
	ret
l7266:
	jmp l7263
l7262:
	push 1
	ret
	end method
	method player_won
	cthis clear_table
	call anrama,hide
	call filmb,play
	cthis show_bricks
	push "bn03pnacza_player_won"
	call clsave,bset
	push "sndnidaloosenbrick"
	cthis cbplay
	call guihint,switchtohint
	push 500
	push "null"
	call anaskopis,anfadeout
	end method
	method clear_table
	call advmouse,setstd
	localint $1
	push 1
	pop $1
l7267:
	push $1
	push 9
	cmpjle
	cmp0
	je l7268
	jmp l7270
l7269:
	add $1,1
	pop $1
	jmp l7267
l7270:
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],hide
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	call butgame,removebut
	jmp l7269
l7268:
	end method
	method show_bricks
	call advmouse,setstd
	call ancegla_1,show
	push "start"
	call ancegla_1,play
	call ancegla_2,show
	push "start"
	call ancegla_2,play
	call ancegla_3,show
	push "start"
	call ancegla_3,play
	push "ancegla_1"
	call butgame,add
	push "ancegla_2"
	call butgame,add
	push "ancegla_3"
	call butgame,add
	end method
	method andiamond_1_TAKE
	push "krysztal_red_1"
	cthis item_takecenter
	cthis check_finished
	end method
	method andiamond_1_INPCK
	push "krysztal_red_1"
	cthis addtopck
	cthis check_finished
	cthis is_mg_finished
	cmp0
	je l7272
	cthis timfinito
l7272:
	end method
	method andiamond_2_TAKE
	push "krysztal_red_2"
	cthis item_takecenter
	cthis check_finished
	end method
	method andiamond_2_INPCK
	push "krysztal_red_2"
	cthis addtopck
	cthis check_finished
	cthis is_mg_finished
	cmp0
	je l7274
	cthis timfinito
l7274:
	end method
	method andiamond_3_TAKE
	push "krysztal_blue_1"
	cthis item_takecenter
	cthis check_finished
	end method
	method andiamond_3_INPCK
	push "krysztal_blue_1"
	cthis addtopck
	cthis check_finished
	cthis is_mg_finished
	cmp0
	je l7276
	cthis timfinito
l7276:
	end method
	method check_finished
	push "taken_krysztal_blue_1"
	call clsave,bis
	cmp0
	je l7278
	push "taken_krysztal_red_1"
	call clsave,bis
	cmp0
	je l7278
	push "taken_krysztal_red_2"
	call clsave,bis
	jmp l7280
l7278:
	push 0
	jmp l7280
l7279:
	push 1
l7280:
	cmp0
	je l7281
	cthis set_mg_finished
l7281:
	end method
	method get_ancut
	localint $1
	push 1
	pop $1
l7282:
	push $1
	push 6
	cmpjle
	cmp0
	je l7283
	jmp l7285
l7284:
	add $1,1
	pop $1
	jmp l7282
l7285:
	push "ancut_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	call mouse,getpos
	push 1
	push 1
	spop $a
	call [$a],isin
	cmp0
	je l7287
	push "ancut_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],isvisible
	jmp l7289
l7287:
	push 0
	jmp l7289
l7288:
	push 1
l7289:
	cmp0
	je l7290
	push $1
	ret
l7290:
	jmp l7284
l7283:
	push 1
	popax
	sub 0,$a
	ret
	end method
	method USE_sekator
	cthis advsetstdstate
	call mouse,getpos
	push 1
	push 0
	call anbase,isin
	cmp0
	je l7292
	call fxsekator,play
	localint $1
	cthis get_ancut
	pop $1
	push $1
	push 1
	popax
	sub 0,$a
	cmpja
	cmp0
	jne l7295
	cthis checktouchpad
	jmp l7296
l7294:
	push 0
	jmp l7296
l7295:
	push 1
l7296:
	cmp0
	je l7297
	cthis checktouchpad
	cmp0
	je l7299
	localint $2
	push 1
	pop $2
l7300:
	push $2
	push 6
	cmpjle
	cmp0
	je l7301
	jmp l7303
l7302:
	add $2,1
	pop $2
	jmp l7300
l7303:
	push "ancut_"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],hide
	push "e1_bn03pnacza_cuted_"
	push $2
	pop $b
	popax
	add $a,$b
	call clsave,bset
	jmp l7302
l7301:
	jmp l7298
l7299:
	push "ancut_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],hide
	push "e1_bn03pnacza_cuted_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,bset
l7298:
	cthis check_game_can_start
	cmp0
	je l7305
	cthis checktouchpad
	neg
	cmp0
	je l7307
	push "anitem_sekator"
	push "fake_anitem_sekator"
	cthis copyanima
	push "cut"
	call fake_anitem_sekator,play
	push 300
	push "null"
	call fake_anitem_sekator,anfadeout
l7307:
	push "sekator"
	cthis removefrompck
	cthis start_game
	push "snd_intro_tic_tac_toe"
	cthis cbplay
	jmp l7304
l7305:
	push "cut"
	call anitem_sekator,play
	push "getitem"
	cthis advsetstate
	push "anitem_sekator"
	call guimov,setmoved
l7304:
	jmp l7293
l7297:
	cthis checktouchpad
	neg
	cmp0
	je l7309
	push "cut"
	call anitem_sekator,play
	push "getitem"
	cthis advsetstate
	push "anitem_sekator"
	call guimov,setmoved
	jmp l7308
l7309:
	cthis item_gotopck
l7308:
l7293:
	jmp l7291
l7292:
	cthis item_gotopck
l7291:
	end method
	method SKIP_CLICK
	cthis advstdstate
	cmp0
	je l7311
	cthis player_won
l7311:
	end method
	method HINT_CLICK
	push "ma_sekator"
	call clsave,bis
	cmp0
	je l7313
	localint $1
	push 1
	pop $1
l7314:
	push $1
	push 6
	cmpjle
	cmp0
	je l7315
	jmp l7317
l7316:
	add $1,1
	pop $1
	jmp l7314
l7317:
	push "e1_bn03pnacza_cuted_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l7319
	push "ancut_"
	push $1
	pop $b
	popax
	add $a,$b
	cthis showhint
	push "sekator"
	cthis showhintitem
	ret
l7319:
	jmp l7316
l7315:
	jmp l7312
l7313:
	push "bn03pnacza_player_won"
	call clsave,bis
	cmp0
	je l7321
	push "taken_krysztal_red_1"
	call clsave,bis
	neg
	cmp0
	je l7323
	push "andiamond_1"
	cthis showhint
	ret
l7323:
	push "taken_krysztal_red_2"
	call clsave,bis
	neg
	cmp0
	je l7325
	push "andiamond_2"
	cthis showhint
	ret
l7325:
	push "taken_krysztal_blue_1"
	call clsave,bis
	neg
	cmp0
	je l7327
	push "andiamond_3"
	cthis showhint
	ret
	jmp l7326
l7327:
	push "anpopexit"
	cthis showhint
l7326:
	jmp l7320
l7321:
	cthis check_game_can_start
	cmp0
	je l7329
	push "bn03pnacza_player_won"
	call clsave,bis
	neg
	jmp l7331
l7329:
	push 0
	jmp l7331
l7330:
	push 1
l7331:
	cmp0
	je l7332
	localint $1
	push 1
	pop $1
l7333:
	push $1
	push 9
	cmpjle
	cmp0
	je l7334
	jmp l7336
l7335:
	add $1,1
	pop $1
	jmp l7333
l7336:
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	push 0
	cmpje
	cmp0
	je l7338
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	cthis showhint
	ret
l7338:
	jmp l7335
l7334:
	jmp l7328
l7332:
	push "anpopexit"
	cthis showhint
l7328:
l7320:
l7312:
	end method
	end game

	game mg03_rycerz
	parent Banshee
	method init
	push "mg03_rycerz"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "tarcza_mask.pyzH 3"
	push "tarcza.pyzH 3"
	push "miecz_mask.pyzH 4"
	push "miecz.pyzH 5"
	push "gzyms2.pyzH 6"
	push "ramka.pyz 7"
	push "popexit.pyz 8"
	cthis imgs=
	cthis butpopexit
	push A
	push "bgrwiatrN 30"
	push "miecz 30"
	push "ceglaput 50"
	cthis sfxs=
	push "taken_gzyms2"
	call clsave,bis
	neg
	cmp0
	je l7340
	push "angzyms2"
	cthis setasitemtopck
	call angzyms2,show
l7340:
	push save_prefix
	push "intro_spoken"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l7342
	push "snd_intro"
	push "rycerz_c1d1_5_1"
	cthis newsndfree
	push "onfinish"
	push "mg03_rycerz0"
	call snd_intro,addmethod
	push 180
	push 255
	push 0
	call subtitle,setcolor
	push "snd_intro"
	cthis cbplay
	push "rycerz_gada"
	pop sgmstate
	call subtitle,restorecolor
l7342:
	push "snd_rycerz_1"
	push "rycerz_c1d1_5"
	cthis newsndfree
	push "onfinish"
	push "mg03_rycerz1"
	call snd_rycerz_1,addmethod
	push "snd_brak_sprzetu"
	push "kinnat_c1d1_5_2"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_brak_sprzetu,addmethod
	call imgbkg,mg03_rycerz2
	push "e1_rycerz_ma_tarcze"
	call clsave,bis
	neg
	cmp0
	je l7348
	call antarcza_mask,mg03_rycerz5
	jmp l7347
l7348:
	call antarcza,show
l7347:
	push "e1_rycerz_ma_miecz"
	call clsave,bis
	neg
	cmp0
	je l7359
	call anmiecz_mask,mg03_rycerz9
	jmp l7358
l7359:
	call anmiecz,show
l7358:
	cthis stdstart
	end method
	method mg03_rycerz0
	push save_prefix
	push "intro_spoken"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	push "taken_gzyms2"
	call clsave,bis
	cmp0
	je l7344
	cthis timfinito
l7344:
	cthis advsetstdstate
	end method
	method mg03_rycerz1
	cthis advsetstdstate
	cthis timfinito
	end method
	method mg03_rycerz2
	push "isbutin"
	push "mg03_rycerz3"
	cthis addmethod
	push "butclick"
	push "mg03_rycerz4"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg03_rycerz3
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpopup_bkg,isin
	neg
	end method
	method mg03_rycerz4
	cthis advstdstate
	neg
	cmp0
	je l7346
	ret
l7346:
	cthis mend
	end method
	method mg03_rycerz5
	cthis Button_isinvisalpha
	push "butmoveon"
	push "mg03_rycerz6"
	cthis addmethod
	push "butmoveoff"
	push "mg03_rycerz7"
	cthis addmethod
	push "butclick"
	push "mg03_rycerz8"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg03_rycerz6
	push "e1_rycerz_ma_tarcze"
	call clsave,bis
	neg
	cmp0
	je l7350
	push "use"
	call advmouse,set
l7350:
	end method
	method mg03_rycerz7
	call advmouse,setstd
	end method
	method mg03_rycerz8
	cthis advstdstate
	neg
	cmp0
	jne l7353
	push sgmstate
	push "getitem"
	cmpje
	jmp l7354
l7352:
	push 0
	jmp l7354
l7353:
	push 1
l7354:
	cmp0
	je l7355
	ret
l7355:
	push "e1_rycerz_ma_tarcze"
	call clsave,bis
	neg
	cmp0
	je l7357
	push "snd_brak_sprzetu"
	cthis cbplay
l7357:
	end method
	method mg03_rycerz9
	cthis Button_isinvisalpha
	push "butmoveon"
	push "mg03_rycerz10"
	cthis addmethod
	push "butmoveoff"
	push "mg03_rycerz11"
	cthis addmethod
	push "butclick"
	push "mg03_rycerz12"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg03_rycerz10
	push "e1_rycerz_ma_miecz"
	call clsave,bis
	neg
	cmp0
	je l7361
	push "use"
	call advmouse,set
l7361:
	end method
	method mg03_rycerz11
	call advmouse,setstd
	end method
	method mg03_rycerz12
	cthis advstdstate
	neg
	cmp0
	jne l7364
	push sgmstate
	push "getitem"
	cmpje
	jmp l7365
l7363:
	push 0
	jmp l7365
l7364:
	push 1
l7365:
	cmp0
	je l7366
	ret
l7366:
	push "e1_rycerz_ma_miecz"
	call clsave,bis
	neg
	cmp0
	je l7368
	push "snd_brak_sprzetu"
	cthis cbplay
l7368:
	end method
	method mend
	push "ad03_placglowny"
	push "gamead03_placglowny0"
	cthis stdexitdefadv
	end method
	method angzyms2_TAKE
	push save_prefix
	push "intro_spoken"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l7370
	push "gzyms2"
	cthis popitem_gotocenter
l7370:
	end method
	method angzyms2_INPCK
	push "gzyms2"
	cthis addtopck
	push "ma_miecz"
	call clsave,bis
	neg
	cmp0
	je l7372
	push "ma_tarcza"
	call clsave,bis
	neg
	jmp l7374
l7372:
	push 0
	jmp l7374
l7373:
	push 1
l7374:
	cmp0
	je l7375
	cthis timfinito
l7375:
	end method
	method USE_tarcza
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call antarcza_mask,isin
	cmp0
	je l7377
	call fxceglaput,play
	push "e1_rycerz_ma_tarcze"
	call clsave,bset
	push "tarcza"
	cthis removefrompck
	call advmouse,setstd
	push "antarcza_mask"
	call butgame,removebut
	push "e1_rycerz_ma_miecz"
	call clsave,bis
	cmp0
	je l7379
	push "OB5"
	cthis objective_done
	cthis set_mg_finished
	push 500
	push "mg03_rycerz13"
	call antarcza,anfadein
	jmp l7378
l7379:
	push 500
	push "null"
	call antarcza,anfadein
l7378:
	jmp l7376
l7377:
	cthis item_gotopck
l7376:
	end method
	method mg03_rycerz13
	push 180
	push 255
	push 0
	call subtitle,setcolor
	push "snd_rycerz_1"
	cthis cbplay
	call subtitle,restorecolor
	end method
	method USE_miecz
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call anmiecz_mask,isin
	cmp0
	je l7381
	call fxmiecz,play
	push "e1_rycerz_ma_miecz"
	call clsave,bset
	push 500
	push "null"
	call anmiecz,anfadein
	push "miecz"
	cthis removefrompck
	push "anmiecz_mask"
	call butgame,removebut
	push "e1_rycerz_ma_tarcze"
	call clsave,bis
	cmp0
	je l7383
	push "OB5"
	cthis objective_done
	cthis set_mg_finished
	push 500
	push "mg03_rycerz14"
	call anmiecz,anfadein
	jmp l7382
l7383:
	push 500
	push "null"
	call anmiecz,anfadein
l7382:
	call advmouse,setstd
	jmp l7380
l7381:
	cthis item_gotopck
l7380:
	end method
	method mg03_rycerz14
	push 180
	push 255
	push 0
	call subtitle,setcolor
	push "snd_rycerz_1"
	cthis cbplay
	call subtitle,restorecolor
	end method
	method HINT_CLICK
	push "taken_gzyms2"
	call clsave,bis
	neg
	cmp0
	je l7385
	push "angzyms2"
	cthis showhint
	jmp l7384
l7385:
	push "ma_tarcza"
	call clsave,bis
	cmp0
	je l7387
	push "e1_rycerz_ma_tarcze"
	call clsave,bis
	neg
	jmp l7389
l7387:
	push 0
	jmp l7389
l7388:
	push 1
l7389:
	cmp0
	je l7390
	push "antarcza_mask"
	cthis showhint
	push "tarcza"
	cthis showhintitem
	jmp l7386
l7390:
	push "ma_miecz"
	call clsave,bis
	cmp0
	je l7392
	push "e1_rycerz_ma_miecz"
	call clsave,bis
	neg
	jmp l7394
l7392:
	push 0
	jmp l7394
l7393:
	push 1
l7394:
	cmp0
	je l7395
	push "anmiecz_mask"
	cthis showhint
	push "miecz"
	cthis showhintitem
	jmp l7391
l7395:
	push "anpopexit"
	cthis showhint
l7391:
l7386:
l7384:
	end method
	end game

	game mg04_glowa1
	parent Banshee
	method init
	push "mg04_glowa1"
	clparent Banshee,init
	push A
	push "bkg.jpg "
	push "bkg.pyz 0"
	push "wnetrze_czaszki.pyz 1"
	push "baza.pyz 2"
	push "grom_normal_g.pyzH 4"
	push "oko_l.pyz 5"
	push "oko_p.pyz 6"
	push "czaszka_l.pyz 7"
	push "czaszka_p.pyz 7"
	push "ramka.pyz 8"
	push "grom_normal_l.pyzH 10"
	push "grom_normal_p.pyzH 11"
	push "grom_normal_d.pyzH 12"
	push "krysztal.pyzH 13"
	push "krysztal_mask.pyzH 14"
	push "glowa1_element.pyzH 15"
	push "popexit.pyz 50"
	cthis imgs=
	push A
	push "bgrmorze3N 10"
	push "szczeka"
	push "openhead"
	push "ceglamove2"
	push "podswietl"
	cthis sfxs=
	call imgbkg,mg04_glowa10
	cthis butpopexit
	push "mg04_glowa1"
	cthis askopis
	call anpopexit,getcx
	call anaskopis,getw
	pop $b
	popax
	add $a,$b
	call anpopexit,getcy
	call anaskopis,geth
	push 3
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call anaskopis,ansetbpos
	call anaskopis,hide
	push "anglowa1_element"
	cthis setasitemtopck
	new vector,crystal_states
	push "string"
	call crystal_states,type
	push "begin"
	push "redblue"
	push "empty"
	push "blue"
	push "red"
	push "empty"
	push "blue"
	push "blue"
	push "blue"
	call crystal_states,beginadd
	new vector,crystal_states_2
	push "string"
	call crystal_states_2,type
	push "begin"
	push "red"
	push "empty"
	push "empty"
	push "blue"
	push "red"
	push "red"
	push "red"
	call crystal_states_2,beginadd
	new int,click_counter
	push 1
	popax
	sub 0,$a
	pop click_counter
	cthis init_crystals
	push "mg04_glowa1_saved"
	call clsave,bis
	cmp0
	je l7399
	cthis load_ring
l7399:
	new int,left_pushed
	push 0
	pop left_pushed
	new int,right_pushed
	push 0
	pop right_pushed
	push "snd_brak_krysztalow"
	push "kinnat_c1d1_16"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_brak_krysztalow,addmethod
	cthis find_empty_slot
	push 0
	cmpjl
	cmp0
	je l7401
	push "bn_04_glowa_1_kregi_rozwiazane"
	call clsave,bis
	neg
	jmp l7403
l7401:
	push 0
	jmp l7403
l7402:
	push 1
l7403:
	cmp0
	je l7404
	call anaskopis,show
	call guihint,switchtoskip
l7404:
	push "bn_04_glowa_1_lewe_oko_zamkniete"
	call clsave,bis
	cmp0
	je l7406
	call anoko_l,hide
l7406:
	push "bn_04_glowa_1_prawe_oko_zamkniete"
	call clsave,bis
	cmp0
	je l7408
	call anoko_p,hide
l7408:
	push "bn_04_glowa_1_czaszka_otwarta"
	call clsave,bis
	cmp0
	je l7410
	push "taken_glowa1_element"
	call clsave,bis
	neg
	jmp l7412
l7410:
	push 0
	jmp l7412
l7411:
	push 1
l7412:
	cmp0
	je l7413
	call angrom_normal_g,show
	call angrom_normal_d,show
	call anczaszka_l,show
	push "opened"
	push 0
	call anczaszka_l,setframe
	call anczaszka_p,show
	push "opened"
	push 0
	call anczaszka_p,setframe
	push 500
	push "null"
	call anglowa1_element,anfadein
	jmp l7409
l7413:
	call angrom_normal_g,hide
	call angrom_normal_d,hide
l7409:
	call anoko_l,mg04_glowa13
	call anoko_p,mg04_glowa16
	cthis stdstart
	end method
	method mg04_glowa10
	push "isbutin"
	push "mg04_glowa11"
	cthis addmethod
	push "butclick"
	push "mg04_glowa12"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg04_glowa11
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anbkg,isin
	neg
	end method
	method mg04_glowa12
	cthis advstdstate
	neg
	cmp0
	je l7397
	ret
l7397:
	cthis mend
	end method
	method mg04_glowa13
	cthis Button_isin
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg04_glowa14"
	cthis addmethod
	push "onfinish"
	push "mg04_glowa15"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg04_glowa14
	cthis advstdstate
	neg
	cmp0
	je l7415
	ret
l7415:
	push "bn_04_glowa_1_lewe_oko_zamkniete"
	call clsave,bis
	cmp0
	je l7417
	ret
l7417:
	push "bn_04_glowa_1_kregi_rozwiazane"
	call clsave,bis
	neg
	cmp0
	je l7419
	cthis find_empty_slot
	push 1
	popax
	sub 0,$a
	cmpja
	cmp0
	je l7421
	push "snd_brak_krysztalow"
	cthis cbplay
	jmp l7420
l7421:
	push "bn_04_glowa_1_kregi_rozwiazane"
	call clsave,bis
	neg
	cmp0
	je l7423
	call fxceglamove2,play
	cthis rotate_circle_1
l7423:
l7420:
	jmp l7418
l7419:
	push 1
	pop left_pushed
	call fxopenhead,play
	push 1
	call angrom_normal_l,stop
	call angrom_normal_l,hide
	push "push"
	call anoko_l,play
	cthis getname
	call butgame,removebut
	call advmouse,setstd
l7418:
	end method
	method mg04_glowa15
	cthis hide
	push "bn_04_glowa_1_lewe_oko_zamkniete"
	call clsave,bset
	push "bn_04_glowa_1_prawe_oko_zamkniete"
	call clsave,bis
	cmp0
	je l7425
	push "bn_04_glowa_1_czaszka_otwarta"
	call clsave,bis
	neg
	jmp l7427
l7425:
	push 0
	jmp l7427
l7426:
	push 1
l7427:
	cmp0
	je l7428
	cthis open_skull
l7428:
	end method
	method mg04_glowa16
	cthis Button_isin
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg04_glowa17"
	cthis addmethod
	push "onfinish"
	push "mg04_glowa18"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg04_glowa17
	cthis advstdstate
	neg
	cmp0
	je l7430
	ret
l7430:
	push "bn_04_glowa_1_prawe_oko_zamkniete"
	call clsave,bis
	cmp0
	je l7432
	ret
l7432:
	push "bn_04_glowa_1_kregi_rozwiazane"
	call clsave,bis
	neg
	cmp0
	je l7434
	cthis find_empty_slot
	push 1
	popax
	sub 0,$a
	cmpja
	cmp0
	je l7436
	push "snd_brak_krysztalow"
	cthis cbplay
	jmp l7435
l7436:
	push "bn_04_glowa_1_kregi_rozwiazane"
	call clsave,bis
	neg
	cmp0
	je l7438
	call fxceglamove2,play
	cthis rotate_circle_2
l7438:
l7435:
	jmp l7433
l7434:
	push 1
	call angrom_normal_p,stop
	call angrom_normal_p,hide
	push 1
	pop right_pushed
	call fxopenhead,play
	push "push"
	call anoko_p,play
	cthis getname
	call butgame,removebut
	call advmouse,setstd
l7433:
	end method
	method mg04_glowa18
	cthis hide
	push "bn_04_glowa_1_prawe_oko_zamkniete"
	call clsave,bset
	push "bn_04_glowa_1_lewe_oko_zamkniete"
	call clsave,bis
	cmp0
	je l7440
	push "bn_04_glowa_1_czaszka_otwarta"
	call clsave,bis
	neg
	jmp l7442
l7440:
	push 0
	jmp l7442
l7441:
	push 1
l7442:
	cmp0
	je l7443
	cthis open_skull
l7443:
	end method
	method init_crystals
	push "ankrysztal_0"
	push 665
	push 278
	cthis init_crystal
	push "ankrysztal_1"
	push 636
	push 348
	cthis init_crystal
	push "ankrysztal_2"
	push 571
	push 376
	cthis init_crystal
	push "ankrysztal_3"
	push 500
	push 347
	cthis init_crystal
	push "ankrysztal_4"
	push 473
	push 279
	cthis init_crystal
	push "ankrysztal_5"
	push 502
	push 212
	cthis init_crystal
	push "ankrysztal_6"
	push 569
	push 184
	cthis init_crystal
	push "ankrysztal_7"
	push 637
	push 210
	cthis init_crystal
	push "ankrysztal_8"
	push 694
	push 212
	cthis init_crystal
	push "ankrysztal_9"
	push 761
	push 186
	cthis init_crystal
	push "ankrysztal_10"
	push 829
	push 212
	cthis init_crystal
	push "ankrysztal_11"
	push 857
	push 282
	cthis init_crystal
	push "ankrysztal_12"
	push 830
	push 351
	cthis init_crystal
	push "ankrysztal_13"
	push 761
	push 377
	cthis init_crystal
	push "ankrysztal_14"
	push 695
	push 351
	cthis init_crystal
	cthis update_crystals
	end method
	method update_crystals
	localint $1
	push 0
	pop $1
l7444:
	push $1
	call crystal_states,size
	cmpjl
	cmp0
	je l7445
	jmp l7447
l7446:
	add $1,1
	pop $1
	jmp l7444
l7447:
	localstring $2
	push $1
	call crystal_states,get
	pop $2
	push "ankrysztal_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push $2
	spop $a
	call [$a],play
	jmp l7446
l7445:
	localint $1
	push 0
	pop $1
l7448:
	push $1
	call crystal_states_2,size
	cmpjl
	cmp0
	je l7449
	jmp l7451
l7450:
	add $1,1
	pop $1
	jmp l7448
l7451:
	localstring $2
	push $1
	call crystal_states_2,get
	pop $2
	localint $3
	push $1
	push 8
	pop $b
	popax
	add $a,$b
	pop $3
	push "ankrysztal_"
	push $3
	pop $b
	popax
	add $a,$b
	spushs
	push $2
	spop $a
	call [$a],play
	jmp l7450
l7449:
	cthis check_rings
	end method
	method init_crystal
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push "ankrysztal"
	push $1
	cthis copyanima
	push "ankrysztal_mask"
	push $1
	push "_mask"
	pop $b
	popax
	add $a,$b
	cthis copyanima
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],setpos
	push $1
	spushs
	push "empty"
	spop $a
	call [$a],play
	push $1
	push "_mask"
	pop $b
	popax
	add $a,$b
	spushs
	push $2
	push 8
	pop $b
	popax
	add $a,$b
	push $3
	push 5
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	push $1
	push "_mask"
	pop $b
	popax
	add $a,$b
	spushs
	push A
	push "name"
	push $1
	spop $a
	call [$a],vars2
	push $1
	push "_mask"
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],mg04_glowa19
	end method
	method mg04_glowa19
	cthis Button_isinvis
	push "butmoveon"
	push "mg04_glowa110"
	cthis addmethod
	push "butmoveoff"
	push "mg04_glowa111"
	cthis addmethod
	push "butclick"
	push "mg04_glowa112"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg04_glowa110
	cthis name
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	push 3
	cmpje
	cmp0
	je l7453
	push "use"
	call advmouse,set
	jmp l7452
l7453:
	call advmouse,setstd
l7452:
	end method
	method mg04_glowa111
	call advmouse,setstd
	end method
	method mg04_glowa112
	cthis advstdstate
	neg
	cmp0
	je l7455
	ret
l7455:
	cthis name
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	push 3
	cmpje
	cmp0
	je l7457
	push "snd_brak_krysztalow"
	cthis cbplay
l7457:
	end method
	method rotate_circle_1
	localstring $1
	call crystal_states,size
	push 1
	pop $b
	popax
	sub $a,$b
	call crystal_states,get
	pop $1
	localint $2
	call crystal_states,size
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
l7458:
	push $2
	push 0
	cmpja
	cmp0
	je l7459
	jmp l7461
l7460:
	sub $2,1
	pop $2
	jmp l7458
l7461:
	push $2
	push $2
	push 1
	pop $b
	popax
	sub $a,$b
	call crystal_states,get
	call crystal_states,set
	jmp l7460
l7459:
	push 0
	push $1
	call crystal_states,set
	cthis update_crystals
	cthis save_ring
	end method
	method rotate_circle_2
	localstring $1
	push 0
	call crystal_states,get
	pop $1
	localstring $2
	call crystal_states_2,size
	push 1
	pop $b
	popax
	sub $a,$b
	call crystal_states_2,get
	pop $2
	localint $3
	call crystal_states_2,size
	push 1
	pop $b
	popax
	sub $a,$b
	pop $3
l7462:
	push $3
	push 0
	cmpja
	cmp0
	je l7463
	jmp l7465
l7464:
	sub $3,1
	pop $3
	jmp l7462
l7465:
	push $3
	push $3
	push 1
	pop $b
	popax
	sub $a,$b
	call crystal_states_2,get
	call crystal_states_2,set
	jmp l7464
l7463:
	push 0
	push $2
	call crystal_states,set
	push 0
	push $1
	call crystal_states_2,set
	cthis update_crystals
	cthis save_ring
	end method
	method check_rings
	push "bn_04_glowa_1_kregi_rozwiazane"
	call clsave,bis
	cmp0
	je l7467
	ret
l7467:
	localint $1
	push 1
	pop $1
l7468:
	push $1
	call crystal_states,size
	cmpjl
	cmp0
	je l7469
	jmp l7471
l7470:
	add $1,1
	pop $1
	jmp l7468
l7471:
	push $1
	call crystal_states,get
	push "red"
	cmpje
	neg
	cmp0
	je l7473
	ret
l7473:
	jmp l7470
l7469:
	localint $1
	push 0
	pop $1
l7474:
	push $1
	call crystal_states_2,size
	cmpjl
	cmp0
	je l7475
	jmp l7477
l7476:
	add $1,1
	pop $1
	jmp l7474
l7477:
	push $1
	call crystal_states_2,get
	push "blue"
	cmpje
	neg
	cmp0
	je l7479
	ret
l7479:
	jmp l7476
l7475:
	push "bn_04_glowa_1_kregi_rozwiazane"
	call clsave,bset
	push left_pushed
	neg
	cmp0
	je l7481
	push 1500
	push "mg04_glowa113"
	call angrom_normal_l,anfadein
l7481:
	push right_pushed
	neg
	cmp0
	je l7485
	push 1500
	push "mg04_glowa114"
	call angrom_normal_p,anfadein
l7485:
	call fxpodswietl,play
	call guihint,switchtohint
	push 500
	push "null"
	call anaskopis,anfadeout
	end method
	method mg04_glowa113
	push left_pushed
	neg
	cmp0
	je l7483
	push 1500
	push "null"
	call angrom_normal_l,anfadeout
l7483:
	end method
	method mg04_glowa114
	push right_pushed
	neg
	cmp0
	je l7487
	push 1500
	push "null"
	call angrom_normal_p,anfadeout
l7487:
	end method
	method open_skull
	push 700
	push "null"
	call anglowa1_element,anfadein
	push 700
	push "null"
	call angrom_normal_g,anfadein
	push 700
	push "null"
	call angrom_normal_d,anfadein
	push "open"
	call anczaszka_l,play
	push "open"
	call anczaszka_p,play
	call fxpodswietl,play
	push "bn_04_glowa_1_czaszka_otwarta"
	call clsave,bset
	end method
	method USE_krysztal_blue_1
	cthis advsetstdstate
	push "krysztal_blue_1"
	push "blue"
	cthis click_on_empty
	end method
	method USE_krysztal_blue_2
	cthis advsetstdstate
	push "krysztal_blue_2"
	push "blue"
	cthis click_on_empty
	end method
	method USE_krysztal_red_1
	cthis advsetstdstate
	push "krysztal_red_1"
	push "red"
	cthis click_on_empty
	end method
	method USE_krysztal_red_2
	cthis advsetstdstate
	push "krysztal_red_2"
	push "red"
	cthis click_on_empty
	end method
	method click_on_empty
	localstring $1
	localstring $2
	pop $2
	pop $1
	localint $3
	push 1
	popax
	sub 0,$a
	pop $3
	localint $4
	push 0
	pop $4
l7488:
	push $4
	push 15
	cmpjl
	cmp0
	je l7489
	jmp l7491
l7490:
	add $4,1
	pop $4
	jmp l7488
l7491:
	localdef $5
	push "ankrysztal_"
	push $4
	pop $b
	popax
	add $a,$b
	push "_mask"
	pop $b
	popax
	add $a,$b
	pop $5
	push $5
	spushs
	call mouse,getpos
	push 0
	push 1
	spop $a
	call [$a],isin
	cmp0
	je l7493
	push $4
	pop $3
l7493:
	jmp l7490
l7489:
	push $3
	push 1
	popax
	sub 0,$a
	cmpja
	cmp0
	je l7495
	push "ankrysztal_"
	push $3
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	push 3
	cmpje
	cmp0
	je l7497
	push $3
	push $1
	push $2
	cthis put_crystal
	jmp l7496
l7497:
	cthis item_gotopck
l7496:
	jmp l7494
l7495:
	cthis item_gotopck
l7494:
	end method
	method put_crystal
	localint $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	call fxszczeka,play
	push "ankrysztal_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push $3
	spop $a
	call [$a],play
	push $2
	cthis removefrompck
	push $1
	push 8
	cmpjl
	cmp0
	je l7499
	push $1
	push $3
	call crystal_states,set
	jmp l7498
l7499:
	push $1
	push 8
	pop $b
	popax
	sub $a,$b
	push $3
	call crystal_states_2,set
l7498:
	cthis save_ring
	cthis check_rings
	cthis find_empty_slot
	push 0
	cmpjl
	cmp0
	je l7501
	push 500
	push "null"
	call anaskopis,anfadein
	call guihint,switchtoskip
l7501:
	cthis setstdstate
	end method
	method save_ring
	localint $1
	push 0
	pop $1
l7502:
	push $1
	push 15
	cmpjl
	cmp0
	je l7503
	jmp l7505
l7504:
	add $1,1
	pop $1
	jmp l7502
l7505:
	push $1
	push 8
	cmpjl
	cmp0
	je l7507
	push "ankrysztal_"
	push $1
	pop $b
	popax
	add $a,$b
	push $1
	call crystal_states,get
	call clsave,set
	jmp l7506
l7507:
	push "ankrysztal_"
	push $1
	pop $b
	popax
	add $a,$b
	push $1
	push 8
	pop $b
	popax
	sub $a,$b
	call crystal_states_2,get
	call clsave,set
l7506:
	jmp l7504
l7503:
	push "mg04_glowa1_saved"
	call clsave,bset
	end method
	method load_ring
	localint $1
	push 0
	pop $1
l7508:
	push $1
	push 8
	cmpjl
	cmp0
	je l7509
	jmp l7511
l7510:
	add $1,1
	pop $1
	jmp l7508
l7511:
	push $1
	push "ankrysztal_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,get
	call crystal_states,set
	jmp l7510
l7509:
	push 0
	push "ankrysztal_0"
	call clsave,get
	call crystal_states_2,set
	localint $1
	push 8
	pop $1
l7512:
	push $1
	push 15
	cmpjl
	cmp0
	je l7513
	jmp l7515
l7514:
	add $1,1
	pop $1
	jmp l7512
l7515:
	push $1
	push 8
	pop $b
	popax
	sub $a,$b
	push "ankrysztal_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,get
	call crystal_states_2,set
	jmp l7514
l7513:
	cthis update_crystals
	end method
	method find_empty_slot
	localint $1
	push 1
	popax
	sub 0,$a
	pop $1
	localint $2
	push 0
	pop $2
l7516:
	push $2
	push 15
	cmpjl
	cmp0
	je l7517
	jmp l7519
l7518:
	add $2,1
	pop $2
	jmp l7516
l7519:
	push "ankrysztal_"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	push 3
	cmpje
	cmp0
	je l7521
	push $2
	ret
l7521:
	jmp l7518
l7517:
	push 1
	popax
	sub 0,$a
	ret
	end method
	method mend
	push "ad04_brzegjeziora"
	push "gamead04_brzegjeziora0"
	cthis stdexitdefadv
	end method
	method anglowa1_element_TAKE
	call butgame,onmousemove
	push "glowa1_element"
	cthis popitem_gotocenter
	cthis set_mg_finished
	end method
	method anglowa1_element_INPCK
	push "glowa1_element"
	cthis addtopck
	push 700
	push "null"
	call angrom_normal_g,anfadeout
	push 700
	push "null"
	call angrom_normal_d,anfadeout
	push "close"
	call anczaszka_l,play
	push "close"
	call anczaszka_p,play
	call fxpodswietl,play
	cthis timfinito
	end method
	method krysztal_in_inventory
	push "ma_krysztal_blue_1"
	call clsave,bis
	cmp0
	je l7523
	push 1
	ret
	jmp l7522
l7523:
	push "ma_krysztal_blue_2"
	call clsave,bis
	cmp0
	je l7525
	push 1
	ret
	jmp l7524
l7525:
	push "ma_krysztal_red_1"
	call clsave,bis
	cmp0
	je l7527
	push 1
	ret
	jmp l7526
l7527:
	push "ma_krysztal_red_2"
	call clsave,bis
	cmp0
	je l7529
	push 1
	ret
	jmp l7528
l7529:
	push 0
	ret
l7528:
l7526:
l7524:
l7522:
	end method
	method SKIP_CLICK
	cthis advstdstate
	cmp0
	je l7531
	localint $1
	push 0
	pop $1
l7532:
	push $1
	push 8
	cmpjl
	cmp0
	je l7533
	jmp l7535
l7534:
	add $1,1
	pop $1
	jmp l7532
l7535:
	push $1
	push "red"
	call crystal_states,set
	push "ankrysztal_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push "red"
	spop $a
	call [$a],play
	jmp l7534
l7533:
	localint $1
	push 8
	pop $1
l7536:
	push $1
	push 15
	cmpjl
	cmp0
	je l7537
	jmp l7539
l7538:
	add $1,1
	pop $1
	jmp l7536
l7539:
	push $1
	push 8
	pop $b
	popax
	sub $a,$b
	push "blue"
	call crystal_states_2,set
	push "ankrysztal_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push "blue"
	spop $a
	call [$a],play
	jmp l7538
l7537:
	push 0
	push "redblue"
	call crystal_states_2,set
	push "ankrysztal_0"
	spushs
	push "redblue"
	spop $a
	call [$a],play
	push 0
	push "redblue"
	call crystal_states,set
	push 0
	push "redblue"
	call crystal_states_2,set
	push "ankrysztal_0"
	spushs
	push "redblue"
	spop $a
	call [$a],play
	cthis update_crystals
	cthis save_ring
	push "bn_04_glowa_1_kregi_rozwiazane"
	call clsave,bset
	push left_pushed
	neg
	cmp0
	je l7541
	push 1500
	push "mg04_glowa115"
	call angrom_normal_l,anfadein
l7541:
	push right_pushed
	neg
	cmp0
	je l7545
	push 1500
	push "mg04_glowa116"
	call angrom_normal_p,anfadein
l7545:
	call fxpodswietl,play
	call guihint,switchtohint
	push 500
	push "null"
	call anaskopis,anfadeout
l7531:
	end method
	method mg04_glowa115
	push left_pushed
	neg
	cmp0
	je l7543
	push 1500
	push "null"
	call angrom_normal_l,anfadeout
l7543:
	end method
	method mg04_glowa116
	push right_pushed
	neg
	cmp0
	je l7547
	push 1500
	push "null"
	call angrom_normal_p,anfadeout
l7547:
	end method
	method HINT_CLICK
	localint $1
	cthis find_empty_slot
	pop $1
	push $1
	push 1
	popax
	sub 0,$a
	cmpja
	cmp0
	je l7549
	cthis krysztal_in_inventory
	jmp l7551
l7549:
	push 0
	jmp l7551
l7550:
	push 1
l7551:
	cmp0
	je l7552
	push "ankrysztal_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_mask"
	pop $b
	popax
	add $a,$b
	cthis showhint
	push "ma_krysztal_blue_1"
	call clsave,bis
	cmp0
	je l7554
	push "krysztal_blue_1"
	cthis showhintitem
	jmp l7553
l7554:
	push "ma_krysztal_blue_2"
	call clsave,bis
	cmp0
	je l7556
	push "krysztal_blue_2"
	cthis showhintitem
	jmp l7555
l7556:
	push "ma_krysztal_red_1"
	call clsave,bis
	cmp0
	je l7558
	push "krysztal_red_1"
	cthis showhintitem
	jmp l7557
l7558:
	push "ma_krysztal_red_2"
	call clsave,bis
	cmp0
	je l7560
	push "krysztal_red_2"
	cthis showhintitem
l7560:
l7557:
l7555:
l7553:
	jmp l7548
l7552:
	cthis find_empty_slot
	push 0
	cmpjl
	cmp0
	je l7562
	localint $2
	push 0
	pop $2
	push "bn_04_glowa_1_lewe_oko_zamkniete"
	call clsave,bis
	neg
	cmp0
	je l7564
	push "anoko_l"
	cthis showhint
	push 1
	pop $2
l7564:
	push "bn_04_glowa_1_prawe_oko_zamkniete"
	call clsave,bis
	neg
	cmp0
	je l7566
	push "anoko_p"
	cthis showhint
	push 1
	pop $2
l7566:
	push "bn_04_glowa_1_lewe_oko_zamkniete"
	call clsave,bis
	cmp0
	je l7568
	push "bn_04_glowa_1_prawe_oko_zamkniete"
	call clsave,bis
	cmp0
	je l7568
	push "taken_glowa1_element"
	call clsave,bis
	neg
	jmp l7570
l7568:
	push 0
	jmp l7570
l7569:
	push 1
l7570:
	cmp0
	je l7571
	push "anglowa1_element"
	cthis showhint
	push 1
	pop $2
l7571:
	push $2
	neg
	cmp0
	je l7573
	push "anpopexit"
	cthis showhint
l7573:
	jmp l7561
l7562:
	push "anpopexit"
	cthis showhint
l7561:
l7548:
	end method
	end game

	game mg04_glowa2
	parent Banshee
	method init
	push "mg04_glowa2"
	clparent Banshee,init
	push A
	push "bgrmorze3N 10"
	push "szczeka"
	push "openhead"
	push "ceglamove2"
	push "podswietl"
	cthis sfxs=
	push A
	push "bkg.jpg "
	push "bkg_game.pyz 1"
	push "base.pyz 2"
	push "diamenty.pyz 3"
	push "wnetrze_czaszki.pyz 4"
	push "grom_normal_g.pyz 5"
	push "oko.pyz 6"
	push "oko_l.pyz 7"
	push "oko_p.pyz 8"
	push "czaszka_l.pyz 9"
	push "czaszka_p.pyz 10"
	push "element.pyzH 11"
	push "grom_normal_l.pyzH 12"
	push "grom_normal_p.pyzH 13"
	push "grom_normal_d.pyzH 14"
	push "krysztal.pyzH 15"
	push "krysztal_mask.pyzH 16"
	push "ramka.pyz 18"
	push "popexit.pyz 50"
	cthis imgs=
	cthis butpopexit
	cthis butpopexit
	push "mg04_glowa2"
	cthis askopis
	call anpopexit,getcx
	call anaskopis,getw
	pop $b
	popax
	add $a,$b
	call anpopexit,getcy
	call anaskopis,geth
	push 3
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call anaskopis,ansetbpos
	call anaskopis,hide
	call imgbkg,mg04_glowa20
	new int,left_pushed
	push 0
	pop left_pushed
	new int,right_pushed
	push 0
	pop right_pushed
	push "anoko"
	cthis setasitemtopck
	push 1
	call anoko,disable=
	call anelement,mg04_glowa23
	new vector,crystal_states
	push "string"
	call crystal_states,type
	push "begin"
	push "redblue"
	push "blue"
	push "blue"
	push "red"
	push "red"
	push "blue"
	push "blue"
	push "blue"
	call crystal_states,beginadd
	new vector,crystal_states_2
	push "string"
	call crystal_states_2,type
	push "begin"
	push "red"
	push "blue"
	push "red"
	push "blue"
	push "red"
	push "red"
	push "red"
	call crystal_states_2,beginadd
	new int,click_counter
	push 1
	popax
	sub 0,$a
	pop click_counter
	cthis init_crystals
	push "mg04_glowa2_saved"
	call clsave,bis
	cmp0
	je l7583
	cthis load_ring
l7583:
	push "snd_brak_elementu"
	push "kinnat_c1d1_17"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_brak_elementu,addmethod
	push "bn_04_glowa_2_element_on"
	call clsave,bis
	push "bn_04_glowa_2_kregi_rozwiazane"
	call clsave,bis
	neg
	pop $b
	popax
	and $a,$b
	cmp0
	je l7585
	call anaskopis,show
	call guihint,switchtoskip
l7585:
	push "bn_04_glowa_2_element_on"
	call clsave,bis
	cmp0
	je l7587
	call anelement,show
	jmp l7586
l7587:
	call ankrysztal_3,hide
	call ankrysztal_4,hide
l7586:
	push "bn_04_glowa_2_lewe_oko_zamkniete"
	call clsave,bis
	cmp0
	je l7589
	call anoko_l,hide
l7589:
	push "bn_04_glowa_2_prawe_oko_zamkniete"
	call clsave,bis
	cmp0
	je l7591
	call anoko_p,hide
l7591:
	push "bn_04_glowa2_czaszka_otwarta"
	call clsave,bis
	cmp0
	je l7593
	push "taken_oko"
	call clsave,bis
	neg
	jmp l7595
l7593:
	push 0
	jmp l7595
l7594:
	push 1
l7595:
	cmp0
	je l7596
	call angrom_normal_d,show
	call anczaszka_l,show
	push "opened"
	call anczaszka_l,play
	call anczaszka_p,show
	push "opened"
	call anczaszka_p,play
	call angrom_normal_g,show
	push 0
	call anoko,disable=
	jmp l7592
l7596:
	call angrom_normal_g,hide
	call angrom_normal_d,hide
l7592:
	call anoko_l,mg04_glowa27
	call anoko_p,mg04_glowa210
	cthis stdstart
	end method
	method mg04_glowa20
	push "isbutin"
	push "mg04_glowa21"
	cthis addmethod
	push "butclick"
	push "mg04_glowa22"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg04_glowa21
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anbkg_game,isin
	neg
	end method
	method mg04_glowa22
	cthis advstdstate
	neg
	cmp0
	je l7575
	ret
l7575:
	cthis mend
	end method
	method mg04_glowa23
	cthis Button_isinvis
	push "butmoveon"
	push "mg04_glowa24"
	cthis addmethod
	push "butmoveoff"
	push "mg04_glowa25"
	cthis addmethod
	push "butclick"
	push "mg04_glowa26"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg04_glowa24
	push "bn_04_glowa_2_element_on"
	call clsave,bis
	neg
	cmp0
	je l7577
	push "use"
	call advmouse,set
	jmp l7576
l7577:
	call advmouse,setstd
l7576:
	end method
	method mg04_glowa25
	call advmouse,setstd
	end method
	method mg04_glowa26
	cthis advstdstate
	neg
	cmp0
	je l7579
	ret
l7579:
	push "bn_04_glowa_2_element_on"
	call clsave,bis
	neg
	cmp0
	je l7581
	push "snd_brak_elementu"
	cthis cbplay
l7581:
	end method
	method mg04_glowa27
	cthis Button_isin
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg04_glowa28"
	cthis addmethod
	push "onfinish"
	push "mg04_glowa29"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg04_glowa28
	cthis advstdstate
	neg
	cmp0
	je l7598
	ret
l7598:
	push "bn_04_glowa_2_lewe_oko_zamkniete"
	call clsave,bis
	neg
	cmp0
	je l7600
	push "bn_04_glowa_2_kregi_rozwiazane"
	call clsave,bis
	cmp0
	je l7602
	push 1
	pop left_pushed
	call fxopenhead,play
	push 1
	call angrom_normal_l,stop
	call angrom_normal_l,hide
	push "push"
	call anoko_l,play
	push "bn_04_glowa_2_lewe_oko_zamkniete"
	call clsave,bset
	cthis getname
	call butgame,removebut
	call advmouse,setstd
	jmp l7601
l7602:
	push "bn_04_glowa_2_element_on"
	call clsave,bis
	neg
	cmp0
	je l7604
	push "snd_brak_elementu"
	cthis cbplay
	jmp l7603
l7604:
	call fxceglamove2,play
	cthis rotate_circle_1
l7603:
l7601:
l7600:
	end method
	method mg04_glowa29
	cthis hide
	push "bn_04_glowa_2_prawe_oko_zamkniete"
	call clsave,bis
	cmp0
	je l7606
	push "bn_04_glowa_2_czaszka_otwarta"
	call clsave,bis
	neg
	jmp l7608
l7606:
	push 0
	jmp l7608
l7607:
	push 1
l7608:
	cmp0
	je l7609
	cthis open_skull
l7609:
	end method
	method mg04_glowa210
	cthis Button_isin
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg04_glowa211"
	cthis addmethod
	push "onfinish"
	push "mg04_glowa212"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg04_glowa211
	cthis advstdstate
	neg
	cmp0
	je l7611
	ret
l7611:
	push "bn_04_glowa_2_prawe_oko_zamkniete"
	call clsave,bis
	neg
	cmp0
	je l7613
	push "bn_04_glowa_2_kregi_rozwiazane"
	call clsave,bis
	cmp0
	je l7615
	push 1
	pop right_pushed
	push "bn_04_glowa_2_prawe_oko_zamkniete"
	call clsave,bset
	call fxopenhead,play
	push 1
	call angrom_normal_p,stop
	call angrom_normal_p,hide
	push "push"
	call anoko_p,play
	cthis getname
	call butgame,removebut
	call advmouse,setstd
	jmp l7614
l7615:
	push "bn_04_glowa_2_element_on"
	call clsave,bis
	neg
	cmp0
	je l7617
	push "snd_brak_elementu"
	cthis cbplay
	jmp l7616
l7617:
	call fxceglamove2,play
	cthis rotate_circle_2
l7616:
l7614:
l7613:
	end method
	method mg04_glowa212
	cthis hide
	push "bn_04_glowa_2_lewe_oko_zamkniete"
	call clsave,bis
	cmp0
	je l7619
	push "bn_04_glowa_2_czaszka_otwarta"
	call clsave,bis
	neg
	jmp l7621
l7619:
	push 0
	jmp l7621
l7620:
	push 1
l7621:
	cmp0
	je l7622
	cthis open_skull
l7622:
	end method
	method open_skull
	call fxpodswietl,play
	call fxceglamove2,play
	push 800
	push "null"
	call angrom_normal_g,anfadein
	push 300
	push "null"
	call anoko,anfadein
	push "open"
	call anczaszka_l,play
	push "open"
	call anczaszka_p,play
	push 800
	push "null"
	call angrom_normal_d,anfadein
	push 0
	call anoko,disable=
	push "bn_04_glowa2_czaszka_otwarta"
	call clsave,bset
	end method
	method mend
	push "ad04_brzegjeziora"
	push "gamead04_brzegjeziora0"
	cthis stdexitdefadv
	end method
	method anoko_TAKE
	call butgame,onmousemove
	push "oko"
	cthis popitem_gotocenter
	cthis set_mg_finished
	end method
	method anoko_INPCK
	push "oko"
	cthis addtopck
	push "close"
	call anczaszka_l,play
	push "close"
	call anczaszka_p,play
	push 800
	push "null"
	call angrom_normal_g,anfadeout
	push 800
	push "null"
	call angrom_normal_d,anfadeout
	call fxpodswietl,play
	cthis timfinito
	end method
	method USE_glowa1_element
	cthis advsetstdstate
	call mouse,getpos
	push 1
	push 1
	call anbase,isin
	cmp0
	je l7624
	push "glowa1_element"
	cthis removefrompck
	call fxszczeka,play
	push 500
	push "null"
	call anelement,anfadein
	push "bn_04_glowa_2_element_on"
	call clsave,bset
	push 500
	push "null"
	call ankrysztal_3,anfadein
	push 500
	push "null"
	call ankrysztal_4,anfadein
	push "anelement"
	call butgame,removebut
	push 500
	push "null"
	call anaskopis,anfadein
	call guihint,switchtoskip
	call advmouse,setstd
	jmp l7623
l7624:
	cthis advsetstdstate
	cthis item_gotopck
l7623:
	end method
	method SKIP_CLICK
	cthis advstdstate
	cmp0
	je l7626
	localint $1
	push 0
	pop $1
l7627:
	push $1
	push 8
	cmpjl
	cmp0
	je l7628
	jmp l7630
l7629:
	add $1,1
	pop $1
	jmp l7627
l7630:
	push $1
	push "red"
	call crystal_states,set
	push "ankrysztal_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push "red"
	spop $a
	call [$a],play
	jmp l7629
l7628:
	localint $1
	push 8
	pop $1
l7631:
	push $1
	push 15
	cmpjl
	cmp0
	je l7632
	jmp l7634
l7633:
	add $1,1
	pop $1
	jmp l7631
l7634:
	push $1
	push 8
	pop $b
	popax
	sub $a,$b
	push "blue"
	call crystal_states_2,set
	push "ankrysztal_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push "blue"
	spop $a
	call [$a],play
	jmp l7633
l7632:
	push 0
	push "redblue"
	call crystal_states_2,set
	push "ankrysztal_0"
	spushs
	push "redblue"
	spop $a
	call [$a],play
	push 0
	push "redblue"
	call crystal_states,set
	push 0
	push "redblue"
	call crystal_states_2,set
	push "ankrysztal_0"
	spushs
	push "redblue"
	spop $a
	call [$a],play
	cthis update_crystals
	cthis save_ring
	push "bn_04_glowa_2_kregi_rozwiazane"
	call clsave,bset
	push left_pushed
	neg
	cmp0
	je l7636
	push 1500
	push "mg04_glowa213"
	call angrom_normal_l,anfadein
l7636:
	push right_pushed
	neg
	cmp0
	je l7640
	push 1500
	push "mg04_glowa214"
	call angrom_normal_p,anfadein
l7640:
	call fxpodswietl,play
	call guihint,switchtohint
	push 500
	push "null"
	call anaskopis,anfadeout
l7626:
	end method
	method mg04_glowa213
	push left_pushed
	neg
	cmp0
	je l7638
	push 1500
	push "null"
	call angrom_normal_l,anfadeout
l7638:
	end method
	method mg04_glowa214
	push right_pushed
	neg
	cmp0
	je l7642
	push 1500
	push "null"
	call angrom_normal_p,anfadeout
l7642:
	end method
	method HINT_CLICK
	push "bn_04_glowa_2_element_on"
	call clsave,bis
	neg
	cmp0
	je l7644
	push "ma_glowa1_element"
	call clsave,bis
	jmp l7646
l7644:
	push 0
	jmp l7646
l7645:
	push 1
l7646:
	cmp0
	je l7647
	push "anelement"
	cthis showhint
	push "glowa1_element"
	cthis showhintitem
	jmp l7643
l7647:
	push "bn_04_glowa_2_element_on"
	call clsave,bis
	cmp0
	je l7649
	localint $1
	push 0
	pop $1
	push "bn_04_glowa_2_lewe_oko_zamkniete"
	call clsave,bis
	neg
	cmp0
	je l7651
	push "anoko_l"
	cthis showhint
	push 1
	pop $1
l7651:
	push "bn_04_glowa_2_prawe_oko_zamkniete"
	call clsave,bis
	neg
	cmp0
	je l7653
	push "anoko_p"
	cthis showhint
	push 1
	pop $1
l7653:
	push "bn_04_glowa_2_lewe_oko_zamkniete"
	call clsave,bis
	cmp0
	je l7655
	push "bn_04_glowa_2_prawe_oko_zamkniete"
	call clsave,bis
	cmp0
	je l7655
	push "taken_oko"
	call clsave,bis
	neg
	jmp l7657
l7655:
	push 0
	jmp l7657
l7656:
	push 1
l7657:
	cmp0
	je l7658
	push "anoko"
	cthis showhint
	push 1
	pop $1
l7658:
	push $1
	neg
	cmp0
	je l7660
	push "anpopexit"
	cthis showhint
l7660:
	jmp l7648
l7649:
	push "anpopexit"
	cthis showhint
l7648:
l7643:
	end method
	method init_crystals
	push "ankrysztal_0"
	push 665
	push 278
	cthis init_crystal
	push "ankrysztal_1"
	push 636
	push 348
	cthis init_crystal
	push "ankrysztal_2"
	push 571
	push 376
	cthis init_crystal
	push "ankrysztal_3"
	push 500
	push 347
	cthis init_crystal
	push "ankrysztal_4"
	push 473
	push 279
	cthis init_crystal
	push "ankrysztal_5"
	push 502
	push 212
	cthis init_crystal
	push "ankrysztal_6"
	push 569
	push 184
	cthis init_crystal
	push "ankrysztal_7"
	push 637
	push 210
	cthis init_crystal
	push "ankrysztal_8"
	push 694
	push 212
	cthis init_crystal
	push "ankrysztal_9"
	push 761
	push 186
	cthis init_crystal
	push "ankrysztal_10"
	push 829
	push 212
	cthis init_crystal
	push "ankrysztal_11"
	push 857
	push 282
	cthis init_crystal
	push "ankrysztal_12"
	push 830
	push 351
	cthis init_crystal
	push "ankrysztal_13"
	push 761
	push 377
	cthis init_crystal
	push "ankrysztal_14"
	push 695
	push 351
	cthis init_crystal
	cthis update_crystals
	end method
	method update_crystals
	localint $1
	push 0
	pop $1
l7661:
	push $1
	call crystal_states,size
	cmpjl
	cmp0
	je l7662
	jmp l7664
l7663:
	add $1,1
	pop $1
	jmp l7661
l7664:
	localstring $2
	push $1
	call crystal_states,get
	pop $2
	push "ankrysztal_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],isvisible
	cmp0
	je l7666
	push "ankrysztal_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push $2
	spop $a
	call [$a],play
l7666:
	jmp l7663
l7662:
	localint $1
	push 0
	pop $1
l7667:
	push $1
	call crystal_states_2,size
	cmpjl
	cmp0
	je l7668
	jmp l7670
l7669:
	add $1,1
	pop $1
	jmp l7667
l7670:
	localstring $2
	push $1
	call crystal_states_2,get
	pop $2
	localint $3
	push $1
	push 8
	pop $b
	popax
	add $a,$b
	pop $3
	push "ankrysztal_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],isvisible
	cmp0
	je l7672
	push "ankrysztal_"
	push $3
	pop $b
	popax
	add $a,$b
	spushs
	push $2
	spop $a
	call [$a],play
l7672:
	jmp l7669
l7668:
	cthis check_rings
	end method
	method init_crystal
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push "ankrysztal"
	push $1
	cthis copyanima
	push "ankrysztal_mask"
	push $1
	push "_mask"
	pop $b
	popax
	add $a,$b
	cthis copyanima
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],setpos
	push $1
	spushs
	push "empty"
	spop $a
	call [$a],play
	push $1
	push "_mask"
	pop $b
	popax
	add $a,$b
	spushs
	push $2
	push 8
	pop $b
	popax
	add $a,$b
	push $3
	push 5
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	end method
	method rotate_circle_1
	localstring $1
	call crystal_states,size
	push 1
	pop $b
	popax
	sub $a,$b
	call crystal_states,get
	pop $1
	localint $2
	call crystal_states,size
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
l7673:
	push $2
	push 0
	cmpja
	cmp0
	je l7674
	jmp l7676
l7675:
	sub $2,1
	pop $2
	jmp l7673
l7676:
	push $2
	push $2
	push 1
	pop $b
	popax
	sub $a,$b
	call crystal_states,get
	call crystal_states,set
	jmp l7675
l7674:
	push 0
	push $1
	call crystal_states,set
	cthis update_crystals
	cthis save_ring
	end method
	method rotate_circle_2
	localstring $1
	push 0
	call crystal_states,get
	pop $1
	localstring $2
	call crystal_states_2,size
	push 1
	pop $b
	popax
	sub $a,$b
	call crystal_states_2,get
	pop $2
	localint $3
	call crystal_states_2,size
	push 1
	pop $b
	popax
	sub $a,$b
	pop $3
l7677:
	push $3
	push 0
	cmpja
	cmp0
	je l7678
	jmp l7680
l7679:
	sub $3,1
	pop $3
	jmp l7677
l7680:
	push $3
	push $3
	push 1
	pop $b
	popax
	sub $a,$b
	call crystal_states_2,get
	call crystal_states_2,set
	jmp l7679
l7678:
	push 0
	push $2
	call crystal_states,set
	push 0
	push $1
	call crystal_states_2,set
	cthis update_crystals
	cthis save_ring
	end method
	method save_ring
	localint $1
	push 0
	pop $1
l7681:
	push $1
	push 15
	cmpjl
	cmp0
	je l7682
	jmp l7684
l7683:
	add $1,1
	pop $1
	jmp l7681
l7684:
	push $1
	push 8
	cmpjl
	cmp0
	je l7686
	push "ankrysztal_"
	push $1
	pop $b
	popax
	add $a,$b
	push $1
	call crystal_states,get
	call clsave,set
	jmp l7685
l7686:
	push "ankrysztal_"
	push $1
	pop $b
	popax
	add $a,$b
	push $1
	push 8
	pop $b
	popax
	sub $a,$b
	call crystal_states_2,get
	call clsave,set
l7685:
	jmp l7683
l7682:
	push "mg04_glowa2_saved"
	call clsave,bset
	end method
	method load_ring
	localint $1
	push 0
	pop $1
l7687:
	push $1
	push 8
	cmpjl
	cmp0
	je l7688
	jmp l7690
l7689:
	add $1,1
	pop $1
	jmp l7687
l7690:
	push $1
	push "ankrysztal_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,get
	call crystal_states,set
	jmp l7689
l7688:
	push 0
	push "ankrysztal_0"
	call clsave,get
	call crystal_states_2,set
	localint $1
	push 8
	pop $1
l7691:
	push $1
	push 15
	cmpjl
	cmp0
	je l7692
	jmp l7694
l7693:
	add $1,1
	pop $1
	jmp l7691
l7694:
	push $1
	push 8
	pop $b
	popax
	sub $a,$b
	push "ankrysztal_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,get
	call crystal_states_2,set
	jmp l7693
l7692:
	cthis update_crystals
	end method
	method check_rings
	push "bn_04_glowa_2_kregi_rozwiazane"
	call clsave,bis
	cmp0
	je l7696
	ret
l7696:
	localint $1
	push 1
	pop $1
l7697:
	push $1
	call crystal_states,size
	cmpjl
	cmp0
	je l7698
	jmp l7700
l7699:
	add $1,1
	pop $1
	jmp l7697
l7700:
	push $1
	call crystal_states,get
	push "red"
	cmpje
	neg
	cmp0
	je l7702
	ret
l7702:
	jmp l7699
l7698:
	localint $1
	push 0
	pop $1
l7703:
	push $1
	call crystal_states_2,size
	cmpjl
	cmp0
	je l7704
	jmp l7706
l7705:
	add $1,1
	pop $1
	jmp l7703
l7706:
	push $1
	call crystal_states_2,get
	push "blue"
	cmpje
	neg
	cmp0
	je l7708
	ret
l7708:
	jmp l7705
l7704:
	push 500
	push "null"
	call anaskopis,anfadeout
	call guihint,switchtohint
	call fxpodswietl,play
	push left_pushed
	neg
	cmp0
	je l7710
	push 1500
	push "mg04_glowa215"
	call angrom_normal_l,anfadein
l7710:
	push right_pushed
	neg
	cmp0
	je l7714
	push 1500
	push "mg04_glowa216"
	call angrom_normal_p,anfadein
l7714:
	push "bn_04_glowa_2_kregi_rozwiazane"
	call clsave,bset
	end method
	method mg04_glowa215
	push left_pushed
	neg
	cmp0
	je l7712
	push 1500
	push "null"
	call angrom_normal_l,anfadeout
l7712:
	end method
	method mg04_glowa216
	push right_pushed
	neg
	cmp0
	je l7716
	push 1500
	push "null"
	call angrom_normal_p,anfadeout
l7716:
	end method
	end game

	game mg04_glowa3
	parent Banshee
	method init
	push "mg04_glowa3"
	clparent Banshee,init
	push "snd_szczeka"
	push "kinnat_c1d1_18b"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_szczeka,addmethod
	push A
	push "bgrmorze3N 10"
	push "szczeka"
	push "openhead"
	push "ceglamove2"
	push "podswietl"
	push "cyk"
	push "clickoblok"
	push "przekrecaklucz"
	cthis sfxs=
	push A
	push "bkg.jpg"
	push "bkg_game.pyz 1"
	push "wnetrze_czaszki.pyz 2"
	push "baza.pyz 3"
	push "oko_l.pyz 4"
	push "oko_p.pyzH 4"
	push "szczeka_break.pyz 5"
	push "grom_normal_d.pyzH 6"
	push "grom_normal_g.pyzH 6"
	push "grom_normal_p.pyzH 7"
	push "grom_normal_l.pyzH 8"
	push "lopatka.pyzH 9"
	push "czaszka_l.pyz  10"
	push "czaszka_p.pyz 11"
	push "krysztaly.pyz 12"
	push "krysztal.pyzH 13"
	push "krysztal_mask.pyzH 14"
	push "ramka.pyz 18"
	push "popexit.pyz 20"
	cthis imgs=
	cthis butpopexit
	push "mg04_glowa3"
	cthis askopis
	call anpopexit,getcx
	call anaskopis,getw
	pop $b
	popax
	add $a,$b
	call anpopexit,getcy
	call anaskopis,geth
	push 3
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call anaskopis,ansetbpos
	call anaskopis,hide
	new int,left_pushed
	push 0
	pop left_pushed
	new int,right_pushed
	push 0
	pop right_pushed
	push "anlopatka"
	cthis setasitemtopck
	call imgbkg,mg04_glowa30
	push "bn_04_glowa3_czaszka_otwarta"
	call clsave,bis
	cmp0
	je l7720
	push "taken_lopatka"
	call clsave,bis
	neg
	jmp l7722
l7720:
	push 0
	jmp l7722
l7721:
	push 1
l7722:
	cmp0
	je l7723
	call angrom_normal_d,show
	call anczaszka_l,show
	push "opened"
	call anczaszka_l,play
	call anczaszka_p,show
	push "opened"
	call anczaszka_p,play
	call angrom_normal_g,show
	call anlopatka,show
	jmp l7719
l7723:
	call angrom_normal_g,hide
	call angrom_normal_d,hide
l7719:
	push "bn_04_glowa_3_oko_on"
	call clsave,bis
	cmp0
	je l7725
	push "bn_04_glowa_3_prawe_oko_zamkniete"
	call clsave,bis
	neg
	jmp l7727
l7725:
	push 0
	jmp l7727
l7726:
	push 1
l7727:
	cmp0
	je l7728
	call anoko_p,show
	jmp l7724
l7728:
	call anoko_p,hide
l7724:
	push "bn_04_glowa_3_lewe_oko_zamkniete"
	call clsave,bis
	cmp0
	je l7730
	call anoko_l,hide
l7730:
	push "bn_04_glowa3_szczeka_faza"
	call clsave,bis
	cmp0
	je l7732
	localint $1
	push "bn_04_glowa3_szczeka_faza"
	call clsave,get
	pop $1
	push "faza"
	push $1
	pop $b
	popax
	add $a,$b
	call anszczeka_break,play
l7732:
	call anoko_l,mg04_glowa33
	call anoko_p,mg04_glowa36
	call anszczeka_break,mg04_glowa310
	new vector,crystal_states
	push "string"
	call crystal_states,type
	push "begin"
	push "red"
	push "blue"
	push "blue"
	push "red"
	push "red"
	push "blue"
	push "blue"
	push "blue"
	call crystal_states,beginadd
	new vector,crystal_states_2
	push "string"
	call crystal_states_2,type
	push "begin"
	push "red"
	push "blue"
	push "red"
	push "blue"
	push "redblue"
	push "red"
	push "red"
	call crystal_states_2,beginadd
	new int,click_counter
	push 1
	popax
	sub 0,$a
	pop click_counter
	cthis init_crystals
	push "mg04_glowa3_saved"
	call clsave,bis
	cmp0
	je l7774
	cthis load_ring
l7774:
	push "snd_brak_oka"
	push "kinnat_c1d1_18"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_brak_oka,addmethod
	push "bn_04_glowa_3_oko_on"
	call clsave,bis
	cmp0
	je l7776
	push "bn_04_glowa_3_kregi_rozwiazane"
	call clsave,bis
	neg
	jmp l7778
l7776:
	push 0
	jmp l7778
l7777:
	push 1
l7778:
	cmp0
	je l7779
	call anaskopis,show
	call guihint,switchtoskip
l7779:
	cthis stdstart
	end method
	method mg04_glowa30
	push "isbutin"
	push "mg04_glowa31"
	cthis addmethod
	push "butclick"
	push "mg04_glowa32"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg04_glowa31
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anbkg_game,isin
	neg
	end method
	method mg04_glowa32
	cthis advstdstate
	neg
	cmp0
	je l7718
	ret
l7718:
	cthis mend
	end method
	method mg04_glowa33
	cthis Button_isin
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg04_glowa34"
	cthis addmethod
	push "onfinish"
	push "mg04_glowa35"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg04_glowa34
	cthis advstdstate
	neg
	cmp0
	je l7734
	ret
l7734:
	push "bn_04_glowa_3_lewe_oko_zamkniete"
	call clsave,bis
	neg
	cmp0
	je l7736
	push "bn_04_glowa_3_kregi_rozwiazane"
	call clsave,bis
	cmp0
	je l7738
	push 1
	pop left_pushed
	push 1
	call angrom_normal_l,stop
	call angrom_normal_l,hide
	call fxopenhead,play
	push "push"
	call anoko_l,play
	push "bn_04_glowa_3_lewe_oko_zamkniete"
	call clsave,bset
	cthis getname
	call butgame,removebut
	call advmouse,setstd
	jmp l7737
l7738:
	push "bn_04_glowa_3_oko_on"
	call clsave,bis
	neg
	cmp0
	je l7740
	push "snd_brak_oka"
	cthis cbplay
	jmp l7739
l7740:
	call fxceglamove2,play
	cthis rotate_circle_1
l7739:
l7737:
l7736:
	end method
	method mg04_glowa35
	cthis hide
	push "bn_04_glowa_3_prawe_oko_zamkniete"
	call clsave,bis
	cmp0
	je l7742
	push "bn_04_glowa_3_czaszka_otwarta"
	call clsave,bis
	neg
	jmp l7744
l7742:
	push 0
	jmp l7744
l7743:
	push 1
l7744:
	cmp0
	je l7745
	cthis open_skull
l7745:
	end method
	method mg04_glowa36
	cthis Button_isinvisalpha
	push "butmoveon"
	push "mg04_glowa37"
	cthis addmethod
	cthis Button_moveoffms
	push "butclick"
	push "mg04_glowa38"
	cthis addmethod
	push "onfinish"
	push "mg04_glowa39"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg04_glowa37
	push "bn_04_glowa_3_oko_on"
	call clsave,bis
	neg
	cmp0
	je l7747
	push "use"
	call advmouse,set
	jmp l7746
l7747:
	push "take"
	call advmouse,set
l7746:
	end method
	method mg04_glowa38
	cthis advstdstate
	neg
	cmp0
	je l7749
	ret
l7749:
	push "bn_04_glowa_3_prawe_oko_zamkniete"
	call clsave,bis
	neg
	cmp0
	je l7751
	push "bn_04_glowa_3_kregi_rozwiazane"
	call clsave,bis
	cmp0
	je l7753
	push 1
	pop right_pushed
	push 1
	call angrom_normal_p,stop
	call angrom_normal_p,hide
	push "bn_04_glowa_3_prawe_oko_zamkniete"
	call clsave,bset
	call fxopenhead,play
	push "push"
	call anoko_p,play
	cthis getname
	call butgame,removebut
	call advmouse,setstd
	jmp l7752
l7753:
	push "bn_04_glowa_3_oko_on"
	call clsave,bis
	neg
	cmp0
	je l7755
	push "snd_brak_oka"
	cthis cbplay
	jmp l7754
l7755:
	call fxceglamove2,play
	cthis rotate_circle_2
l7754:
l7752:
l7751:
	end method
	method mg04_glowa39
	cthis hide
	push "bn_04_glowa_3_lewe_oko_zamkniete"
	call clsave,bis
	cmp0
	je l7757
	push "bn_04_glowa_3_czaszka_otwarta"
	call clsave,bis
	neg
	jmp l7759
l7757:
	push 0
	jmp l7759
l7758:
	push 1
l7759:
	cmp0
	je l7760
	cthis open_skull
l7760:
	end method
	method mg04_glowa310
	cthis Button_isin
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg04_glowa311"
	cthis addmethod
	push "onfinish"
	push "mg04_glowa312"
	cthis addmethod
	push "bn_04_glowa3_szczeka_urwana"
	call clsave,bis
	neg
	cmp0
	je l7772
	cthis getname
	call butgame,add
l7772:
	end method
	method mg04_glowa311
	cthis advstdstate
	neg
	cmp0
	je l7762
	ret
l7762:
	localint $1
	push "bn_04_glowa3_szczeka_faza"
	call clsave,bis
	cmp0
	je l7764
	push "bn_04_glowa3_szczeka_faza"
	call clsave,get
	pop $1
	jmp l7763
l7764:
	push 1
	pop $1
l7763:
	push "bn_04_glowa3_szczeka_urwana"
	call clsave,bis
	neg
	cmp0
	je l7766
	push $1
	push 1
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	push 2
	cmpja
	cmp0
	je l7768
	push "bn_04_glowa3_szczeka_urwana"
	call clsave,bset
	push 3
	pop $1
	cthis getname
	call butgame,removebut
	call advmouse,setstd
l7768:
	call fxszczeka,play
	push "break"
	push $1
	pop $b
	popax
	add $a,$b
	call anszczeka_break,play
	push "bn_04_glowa3_szczeka_faza"
	push $1
	call clsave,set
l7766:
	end method
	method mg04_glowa312
	push "bn_04_glowa3_szczeka_faza"
	call clsave,bis
	cmp0
	je l7770
	localint $1
	push "bn_04_glowa3_szczeka_faza"
	call clsave,get
	pop $1
	push "faza"
	push $1
	pop $b
	popax
	add $a,$b
	call anszczeka_break,play
l7770:
	end method
	method open_skull
	call fxpodswietl,play
	call fxceglamove2,play
	push 500
	push "null"
	call angrom_normal_g,anfadein
	call anlopatka,show
	push "open"
	call anczaszka_l,play
	push "open"
	call anczaszka_p,play
	push 800
	push "null"
	call angrom_normal_d,anfadein
	push "bn_04_glowa3_czaszka_otwarta"
	call clsave,bset
	call advmouse,setstd
	end method
	method mend
	push "ad04_brzegjeziora"
	push "gamead04_brzegjeziora0"
	cthis stdexitdefadv
	end method
	method USE_oko
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call anoko_p,isin
	cmp0
	je l7781
	push "oko"
	cthis removefrompck
	call anoko_p,show
	call fxszczeka,play
	push "bn_04_glowa_3_oko_on"
	call clsave,bset
	push "take"
	call advmouse,set
	push 500
	push "null"
	call anaskopis,anfadein
	call guihint,switchtoskip
	jmp l7780
l7781:
	cthis advsetstdstate
	cthis item_gotopck
l7780:
	end method
	method anlopatka_TAKE
	push "bn_04_glowa3_szczeka_urwana"
	call clsave,bis
	neg
	cmp0
	je l7783
	call fxceglamove2,play
	call fxpodswietl,play
	call fxprzekrecaklucz,play
	push "closeopen"
	call anczaszka_l,play
	push "closeopen"
	call anczaszka_p,play
	push "smile"
	call anszczeka_break,play
	push "snd_szczeka"
	cthis cbplay
	ret
l7783:
	call butgame,onmousemove
	push "lopatka"
	cthis popitem_gotocenter
	cthis set_mg_finished
	end method
	method anlopatka_INPCK
	push "lopatka"
	cthis addtopck
	call fxpodswietl,play
	call fxceglamove2,play
	push "close"
	call anczaszka_l,play
	push "close"
	call anczaszka_p,play
	push 800
	push "null"
	call angrom_normal_d,anfadeout
	cthis timfinito
	end method
	method SKIP_CLICK
	cthis advstdstate
	cmp0
	je l7785
	localint $1
	push 0
	pop $1
l7786:
	push $1
	push 8
	cmpjl
	cmp0
	je l7787
	jmp l7789
l7788:
	add $1,1
	pop $1
	jmp l7786
l7789:
	push $1
	push "red"
	call crystal_states,set
	push "ankrysztal_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push "red"
	spop $a
	call [$a],play
	jmp l7788
l7787:
	localint $1
	push 8
	pop $1
l7790:
	push $1
	push 15
	cmpjl
	cmp0
	je l7791
	jmp l7793
l7792:
	add $1,1
	pop $1
	jmp l7790
l7793:
	push $1
	push 8
	pop $b
	popax
	sub $a,$b
	push "blue"
	call crystal_states_2,set
	push "ankrysztal_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push "blue"
	spop $a
	call [$a],play
	jmp l7792
l7791:
	push 0
	push "redblue"
	call crystal_states_2,set
	push "ankrysztal_0"
	spushs
	push "redblue"
	spop $a
	call [$a],play
	push 0
	push "redblue"
	call crystal_states,set
	push 0
	push "redblue"
	call crystal_states_2,set
	push "ankrysztal_0"
	spushs
	push "redblue"
	spop $a
	call [$a],play
	cthis update_crystals
	cthis save_ring
	push "bn_04_glowa_3_kregi_rozwiazane"
	call clsave,bset
	push left_pushed
	neg
	cmp0
	je l7795
	push 1500
	push "mg04_glowa313"
	call angrom_normal_l,anfadein
l7795:
	push right_pushed
	neg
	cmp0
	je l7799
	push 1500
	push "mg04_glowa314"
	call angrom_normal_p,anfadein
l7799:
	call fxpodswietl,play
	call guihint,switchtohint
	push 500
	push "null"
	call anaskopis,anfadeout
l7785:
	end method
	method mg04_glowa313
	push left_pushed
	neg
	cmp0
	je l7797
	push 1500
	push "null"
	call angrom_normal_l,anfadeout
l7797:
	end method
	method mg04_glowa314
	push right_pushed
	neg
	cmp0
	je l7801
	push 1500
	push "null"
	call angrom_normal_p,anfadeout
l7801:
	end method
	method HINT_CLICK
	push "bn_04_glowa_3_oko_on"
	call clsave,bis
	neg
	cmp0
	je l7803
	push "ma_oko"
	call clsave,bis
	jmp l7805
l7803:
	push 0
	jmp l7805
l7804:
	push 1
l7805:
	cmp0
	je l7806
	push "anoko_p"
	cthis showhint
	push "oko"
	cthis showhintitem
	jmp l7802
l7806:
	push "bn_04_glowa_3_oko_on"
	call clsave,bis
	cmp0
	je l7808
	localint $1
	push 0
	pop $1
	push "bn_04_glowa_3_lewe_oko_zamkniete"
	call clsave,bis
	neg
	cmp0
	je l7810
	push "anoko_l"
	cthis showhint
	push 1
	pop $1
l7810:
	push "bn_04_glowa_3_prawe_oko_zamkniete"
	call clsave,bis
	neg
	cmp0
	je l7812
	push "anoko_p"
	cthis showhint
	push 1
	pop $1
l7812:
	push "bn_04_glowa_3_lewe_oko_zamkniete"
	call clsave,bis
	cmp0
	je l7814
	push "bn_04_glowa_3_prawe_oko_zamkniete"
	call clsave,bis
	cmp0
	je l7814
	push "bn_04_glowa3_szczeka_urwana"
	call clsave,bis
	neg
	jmp l7816
l7814:
	push 0
	jmp l7816
l7815:
	push 1
l7816:
	cmp0
	je l7817
	push "anszczeka_break"
	cthis showhint
	push 1
	pop $1
l7817:
	push "bn_04_glowa3_szczeka_urwana"
	call clsave,bis
	cmp0
	je l7819
	push "taken_lopatka"
	call clsave,bis
	neg
	jmp l7821
l7819:
	push 0
	jmp l7821
l7820:
	push 1
l7821:
	cmp0
	je l7822
	push "anlopatka"
	cthis showhint
	push 1
	pop $1
l7822:
	push $1
	neg
	cmp0
	je l7824
	push "anpopexit"
	cthis showhint
l7824:
	jmp l7807
l7808:
	push "anpopexit"
	cthis showhint
l7807:
l7802:
	end method
	method init_crystals
	push "ankrysztal_0"
	push 664
	push 276
	cthis init_crystal
	push "ankrysztal_1"
	push 634
	push 344
	cthis init_crystal
	push "ankrysztal_2"
	push 569
	push 372
	cthis init_crystal
	push "ankrysztal_3"
	push 498
	push 344
	cthis init_crystal
	push "ankrysztal_4"
	push 472
	push 276
	cthis init_crystal
	push "ankrysztal_5"
	push 500
	push 208
	cthis init_crystal
	push "ankrysztal_6"
	push 568
	push 180
	cthis init_crystal
	push "ankrysztal_7"
	push 637
	push 208
	cthis init_crystal
	push "ankrysztal_8"
	push 694
	push 208
	cthis init_crystal
	push "ankrysztal_9"
	push 761
	push 182
	cthis init_crystal
	push "ankrysztal_10"
	push 829
	push 208
	cthis init_crystal
	push "ankrysztal_11"
	push 857
	push 278
	cthis init_crystal
	push "ankrysztal_12"
	push 830
	push 346
	cthis init_crystal
	push "ankrysztal_13"
	push 761
	push 374
	cthis init_crystal
	push "ankrysztal_14"
	push 695
	push 346
	cthis init_crystal
	cthis update_crystals
	end method
	method update_crystals
	localint $1
	push 0
	pop $1
l7825:
	push $1
	call crystal_states,size
	cmpjl
	cmp0
	je l7826
	jmp l7828
l7827:
	add $1,1
	pop $1
	jmp l7825
l7828:
	localstring $2
	push $1
	call crystal_states,get
	pop $2
	push "ankrysztal_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],isvisible
	cmp0
	je l7830
	push "ankrysztal_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push $2
	spop $a
	call [$a],play
l7830:
	jmp l7827
l7826:
	localint $1
	push 0
	pop $1
l7831:
	push $1
	call crystal_states_2,size
	cmpjl
	cmp0
	je l7832
	jmp l7834
l7833:
	add $1,1
	pop $1
	jmp l7831
l7834:
	localstring $2
	push $1
	call crystal_states_2,get
	pop $2
	localint $3
	push $1
	push 8
	pop $b
	popax
	add $a,$b
	pop $3
	push "ankrysztal_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],isvisible
	cmp0
	je l7836
	push "ankrysztal_"
	push $3
	pop $b
	popax
	add $a,$b
	spushs
	push $2
	spop $a
	call [$a],play
l7836:
	jmp l7833
l7832:
	cthis check_rings
	end method
	method init_crystal
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push "ankrysztal"
	push $1
	cthis copyanima
	push "ankrysztal_mask"
	push $1
	push "_mask"
	pop $b
	popax
	add $a,$b
	cthis copyanima
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],setpos
	push $1
	spushs
	push "empty"
	spop $a
	call [$a],play
	push $1
	push "_mask"
	pop $b
	popax
	add $a,$b
	spushs
	push $2
	push 8
	pop $b
	popax
	add $a,$b
	push $3
	push 5
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	end method
	method rotate_circle_1
	localstring $1
	call crystal_states,size
	push 1
	pop $b
	popax
	sub $a,$b
	call crystal_states,get
	pop $1
	localint $2
	call crystal_states,size
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
l7837:
	push $2
	push 0
	cmpja
	cmp0
	je l7838
	jmp l7840
l7839:
	sub $2,1
	pop $2
	jmp l7837
l7840:
	push $2
	push $2
	push 1
	pop $b
	popax
	sub $a,$b
	call crystal_states,get
	call crystal_states,set
	jmp l7839
l7838:
	push 0
	push $1
	call crystal_states,set
	call fxclickoblok,play
	cthis save_ring
	cthis update_crystals
	end method
	method rotate_circle_2
	localstring $1
	push 0
	call crystal_states,get
	pop $1
	localstring $2
	call crystal_states_2,size
	push 1
	pop $b
	popax
	sub $a,$b
	call crystal_states_2,get
	pop $2
	localint $3
	call crystal_states_2,size
	push 1
	pop $b
	popax
	sub $a,$b
	pop $3
l7841:
	push $3
	push 0
	cmpja
	cmp0
	je l7842
	jmp l7844
l7843:
	sub $3,1
	pop $3
	jmp l7841
l7844:
	push $3
	push $3
	push 1
	pop $b
	popax
	sub $a,$b
	call crystal_states_2,get
	call crystal_states_2,set
	jmp l7843
l7842:
	push 0
	push $2
	call crystal_states,set
	push 0
	push $1
	call crystal_states_2,set
	call fxclickoblok,play
	cthis save_ring
	cthis update_crystals
	end method
	method save_ring
	localint $1
	push 0
	pop $1
l7845:
	push $1
	push 15
	cmpjl
	cmp0
	je l7846
	jmp l7848
l7847:
	add $1,1
	pop $1
	jmp l7845
l7848:
	push $1
	push 8
	cmpjl
	cmp0
	je l7850
	push "ankrysztal_"
	push $1
	pop $b
	popax
	add $a,$b
	push $1
	call crystal_states,get
	call clsave,set
	jmp l7849
l7850:
	push "ankrysztal_"
	push $1
	pop $b
	popax
	add $a,$b
	push $1
	push 8
	pop $b
	popax
	sub $a,$b
	call crystal_states_2,get
	call clsave,set
l7849:
	jmp l7847
l7846:
	push "mg04_glowa3_saved"
	call clsave,bset
	end method
	method load_ring
	localint $1
	push 0
	pop $1
l7851:
	push $1
	push 8
	cmpjl
	cmp0
	je l7852
	jmp l7854
l7853:
	add $1,1
	pop $1
	jmp l7851
l7854:
	push $1
	push "ankrysztal_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,get
	call crystal_states,set
	jmp l7853
l7852:
	push 0
	push "ankrysztal_0"
	call clsave,get
	call crystal_states_2,set
	localint $1
	push 8
	pop $1
l7855:
	push $1
	push 15
	cmpjl
	cmp0
	je l7856
	jmp l7858
l7857:
	add $1,1
	pop $1
	jmp l7855
l7858:
	push $1
	push 8
	pop $b
	popax
	sub $a,$b
	push "ankrysztal_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,get
	call crystal_states_2,set
	jmp l7857
l7856:
	cthis update_crystals
	end method
	method check_rings
	push "bn_04_glowa_3_kregi_rozwiazane"
	call clsave,bis
	cmp0
	je l7860
	ret
l7860:
	localint $1
	push 1
	pop $1
l7861:
	push $1
	call crystal_states,size
	cmpjl
	cmp0
	je l7862
	jmp l7864
l7863:
	add $1,1
	pop $1
	jmp l7861
l7864:
	push $1
	call crystal_states,get
	push "red"
	cmpje
	neg
	cmp0
	je l7866
	ret
l7866:
	jmp l7863
l7862:
	localint $1
	push 0
	pop $1
l7867:
	push $1
	call crystal_states_2,size
	cmpjl
	cmp0
	je l7868
	jmp l7870
l7869:
	add $1,1
	pop $1
	jmp l7867
l7870:
	push $1
	call crystal_states_2,get
	push "blue"
	cmpje
	neg
	cmp0
	je l7872
	ret
l7872:
	jmp l7869
l7868:
	push 500
	push "null"
	call anaskopis,anfadeout
	call guihint,switchtohint
	call fxpodswietl,play
	push left_pushed
	neg
	cmp0
	je l7874
	push 1500
	push "mg04_glowa315"
	call angrom_normal_l,anfadein
l7874:
	push right_pushed
	neg
	cmp0
	je l7878
	push 1500
	push "mg04_glowa316"
	call angrom_normal_p,anfadein
l7878:
	push "bn_04_glowa_3_kregi_rozwiazane"
	call clsave,bset
	end method
	method mg04_glowa315
	push left_pushed
	neg
	cmp0
	je l7876
	push 1500
	push "null"
	call angrom_normal_l,anfadeout
l7876:
	end method
	method mg04_glowa316
	push right_pushed
	neg
	cmp0
	je l7880
	push 1500
	push "null"
	call angrom_normal_p,anfadeout
l7880:
	end method
	end game

	game mg04_tarcza
	parent Banshee
	method init
	push "mg04_tarcza"
	clparent Banshee,init
	push A
	push "bkg.jpg 0"
	push "base.pyz 1"
	push "kopanie_obszar.pyzH 2"
	push "tarcza.pyz 3"
	push "robaki.pyz 4"
	push "kopanie.pyzH 5"
	push "puszka_robakiH.pyz 6"
	push "maska.pyz 7"
	push "2v_tarcza.pyzH 8"
	push "ramka.pyz 9"
	push "popexit.pyz 10"
	cthis imgs=
	push A
	push "bgrmorze3N 10"
	push "worms 60"
	push "kopanie2 60"
	push "putitem1 50"
	cthis sfxs=
	push "taken_tarcza"
	call clsave,bis
	neg
	cmp0
	je l7882
	push "an2v_tarcza"
	cthis gui_toloupe
l7882:
	call imgbkg,mg04_tarcza0
	cthis butpopexit
	push "antarcza"
	cthis setasitemtopck
	push 1
	call antarcza,disable=
	call anpuszka_robaki,anopacityframe
	push "anpuszka_robaki"
	cthis setasitemtopck
	push 1
	call anpuszka_robaki,disable=
	new int,ilicz
	push 0
	pop ilicz
	call ankopanie,mg04_tarcza3
	push "e1_robaki_wykopane"
	call clsave,bis
	cmp0
	je l7891
	push "taken_puszka_robaki"
	call clsave,bis
	neg
	cmp0
	je l7893
	push 0
	call anpuszka_robaki,disable=
	call anpuszka_robaki,show
l7893:
l7891:
	push "e1_tarcza_wykopana"
	call clsave,bis
	cmp0
	je l7895
	push "taken_tarcza"
	call clsave,bis
	cmp0
	je l7897
	call antarcza,hide
	jmp l7896
l7897:
	push 0
	call antarcza,disable=
l7896:
l7895:
	push "e1_robaki_wykopane"
	call clsave,bis
	cmp0
	je l7899
	push "e1_tarcza_wykopana"
	call clsave,bis
	neg
	cmp0
	je l7901
	push 3
	call anrobaki,play
	jmp l7900
l7901:
	push 4
	call anrobaki,play
l7900:
l7899:
	push "snd_robaki"
	push "kinnat_c1d1_20"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_robaki,addmethod
	push "snd_tarcza"
	push "kinnat_c1d1_22"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_tarcza,addmethod
	push "e1_tarcza_wykopana"
	call clsave,bis
	neg
	cmp0
	je l7903
	call ankopanie_obszar,mg04_tarcza6
l7903:
	cthis stdstart
	end method
	method mg04_tarcza0
	push "isbutin"
	push "mg04_tarcza1"
	cthis addmethod
	push "butclick"
	push "mg04_tarcza2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg04_tarcza1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anbase,isin
	neg
	end method
	method mg04_tarcza2
	cthis advstdstate
	neg
	cmp0
	je l7884
	ret
l7884:
	cthis mend
	end method
	method mg04_tarcza3
	push "onfinish"
	push "mg04_tarcza4"
	cthis addmethod
	push "onendframe"
	push "mg04_tarcza5"
	cthis addmethod
	end method
	method mg04_tarcza4
	push 30
	push 0
	cthis move
	push 0
	pop ilicz
	push 0
	call antarcza,disable=
	push 300
	push "null"
	cthis anfadeout
	call advmouse,setstd
	end method
	method mg04_tarcza5
	add ilicz,1
	pop ilicz
	push ilicz
	push 15
	cmpje
	cmp0
	jne l7887
	push ilicz
	push 28
	cmpje
	jmp l7888
l7886:
	push 0
	jmp l7888
l7887:
	push 1
l7888:
	cmp0
	je l7889
	push 10
	popax
	sub 0,$a
	push 0
	cthis move
l7889:
	end method
	method mg04_tarcza6
	push "isbutin"
	push "mg04_tarcza7"
	cthis addmethod
	push "butmoveon"
	push "mg04_tarcza8"
	cthis addmethod
	push "butmoveoff"
	push "mg04_tarcza9"
	cthis addmethod
	push "butclick"
	push "mg04_tarcza10"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg04_tarcza7
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	end method
	method mg04_tarcza8
	push "e1_tarcza_wykopana"
	call clsave,bis
	neg
	cmp0
	je l7905
	push "use"
	call advmouse,set
	jmp l7904
l7905:
	call advmouse,setstd
l7904:
	end method
	method mg04_tarcza9
	call advmouse,setstd
	end method
	method mg04_tarcza10
	cthis advstdstate
	neg
	cmp0
	je l7907
	ret
l7907:
	push "e1_robaki_wykopane"
	call clsave,bis
	neg
	cmp0
	je l7909
	push "snd_robaki"
	cthis cbplay
	jmp l7908
l7909:
	push "e1_tarcza_wykopana"
	call clsave,bis
	neg
	cmp0
	je l7911
	push "snd_tarcza"
	cthis cbplay
l7911:
l7908:
	end method
	method mend
	push "ad04_brzegjeziora"
	push "gamead04_brzegjeziora0"
	cthis stdexitdefadv
	end method
	method USE_puszka
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call anbase,isin
	cmp0
	je l7913
	push "puszka"
	cthis removefrompck
	push "e1_robaki_wykopane"
	call clsave,bset
	call fxputitem1,play
	push 1
	call anrobaki,play
	push 0
	call anpuszka_robaki,disable=
	push 200
	push "null"
	call anpuszka_robaki,anfadein
	jmp l7912
l7913:
	cthis item_gotopck
l7912:
	end method
	method USE_lopatka
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call ankopanie_obszar,isin
	cmp0
	je l7915
	push "e1_robaki_wykopane"
	call clsave,bis
	cmp0
	je l7917
	push "lopatka"
	cthis removefrompck
	push "e1_tarcza_wykopana"
	call clsave,bset
	push 0
	call ankopanie,play
	push 2
	call anrobaki,play
	jmp l7916
l7917:
	cthis item_gotopck
l7916:
	jmp l7914
l7915:
	cthis item_gotopck
l7914:
	end method
	method anpuszka_robaki_TAKE
	push "puszka_robaki"
	cthis popitem_gotocenter
	end method
	method anpuszka_robaki_INPCK
	push "puszka_robaki"
	cthis addtopck
	push "anpuszka_robaki"
	call butgame,removebut
	push "e1_tarcza_wykopana"
	call clsave,bis
	neg
	cmp0
	je l7919
	push "snd_tarcza"
	cthis cbplay
l7919:
	end method
	method antarcza_TAKE
	push "rotostart"
	push 0
	call antarcza,setframe
	push "tarcza"
	cthis popitem_gotocenter
	cthis set_mg_finished
	end method
	method antarcza_INPCK
	push "tarcza"
	cthis addtopck
	push "taken_puszka_robaki"
	call clsave,bis
	cmp0
	je l7921
	cthis timfinito
l7921:
	end method
	method HINT_CLICK
	push "taken_tarcza"
	call clsave,bis
	neg
	cmp0
	je l7923
	push "e1_robaki_wykopane"
	call clsave,bis
	cmp0
	je l7925
	push "taken_puszka_robaki"
	call clsave,bis
	neg
	jmp l7927
l7925:
	push 0
	jmp l7927
l7926:
	push 1
l7927:
	cmp0
	je l7928
	push "anpuszka_robaki"
	cthis showhint
	jmp l7924
l7928:
	push "ma_puszka"
	call clsave,bis
	cmp0
	je l7930
	push "anrobaki"
	cthis showhint
	push "puszka"
	cthis showhintitem
	jmp l7929
l7930:
	push "ma_lopatka"
	call clsave,bis
	cmp0
	je l7932
	push "e1_robaki_wykopane"
	call clsave,bis
	jmp l7934
l7932:
	push 0
	jmp l7934
l7933:
	push 1
l7934:
	cmp0
	je l7935
	push "anrobaki"
	cthis showhint
	push "lopatka"
	cthis showhintitem
	jmp l7931
l7935:
	push "e1_tarcza_wykopana"
	call clsave,bis
	cmp0
	je l7937
	push "antarcza"
	cthis showhint
	jmp l7936
l7937:
	push "anpopexit"
	cthis showhint
l7936:
l7931:
l7929:
l7924:
	jmp l7922
l7923:
	push "e1_robaki_wykopane"
	call clsave,bis
	cmp0
	je l7939
	push "taken_puszka_robaki"
	call clsave,bis
	neg
	jmp l7941
l7939:
	push 0
	jmp l7941
l7940:
	push 1
l7941:
	cmp0
	je l7942
	push "anpuszka_robaki"
	cthis showhint
	jmp l7938
l7942:
	push "anpopexit"
	cthis showhint
l7938:
l7922:
	end method
	end game

	game mg04_lodz
	parent Banshee
	method init
	push "mg04_lodz"
	clparent Banshee,init
	push A
	push "$scripts/mg04_glowa1/bkg.jpg 1"
	push "base.pyz 2"
	push "krysztal_blue.pyzH 3"
	push "medalion.pyzH 4"
	push "ramka.pyz 5"
	push "popexit.pyz 6"
	push "kruk_idle.pyzH 7"
	push "flight.pyzH 8"
	push "medalion_w_dziobie.pyzH 9"
	push "drzwi_otwarte_obszar.pyzH 10"
	push "medalion_wlozony.pyzH 11"
	cthis imgs=
	cthis butpopexit
	cthis butpopexitisinramka
	push A
	push "bgrmorze3N 30"
	push "ptakout 40"
	push "openwindow"
	push "opendoor2"
	cthis sfxs=
	push "e1_kruk_odlecial"
	call clsave,bis
	neg
	cmp0
	je l7944
	push "loop"
	call ankruk_idle,play
	push "sndkrukodlecial"
	push "kinnat_c1d1_15a"
	cthis newsndfree
	push "onfinish"
	push "mg04_lodz0"
	call sndkrukodlecial,addmethod
l7944:
	push "taken_krysztal_blue_2"
	call clsave,bis
	neg
	cmp0
	je l7946
	call ankrysztal_blue,show
	push "ankrysztal_blue"
	cthis setasitemtopck
	push "e1_kruk_odlecial"
	call clsave,bis
	neg
	cmp0
	je l7948
	push 1
	call ankrysztal_blue,disable=
	jmp l7947
l7948:
	push 0
	call ankrysztal_blue,disable=
l7947:
l7946:
	call ankruk_idle,mg04_lodz1
	call anflight,mg04_lodz3
	push "sndlocked"
	push "kinnat_56"
	cthis newsndfree
	push "butmoveon"
	push "mg04_lodz5"
	call anmedalion_wlozony,addmethod
	push "butmoveoff"
	push "mg04_lodz6"
	call anmedalion_wlozony,addmethod
	push "isbutin"
	push "mg04_lodz7"
	call anmedalion_wlozony,addmethod
	push "butclick"
	push "mg04_lodz8"
	call anmedalion_wlozony,addmethod
	push "anmedalion_wlozony"
	call butgame,add
	call andrzwi_otwarte_obszar,mg04_lodz9
	push "GAME_sgmlastscene"
	push "gamead04b_lodz0"
	call clsave,is
	cmp0
	je l7966
	cthis advsetstdstate
	jmp l7965
l7966:
	push "mg04_lodz12"
	call ccs,enter
l7965:
	end method
	method mg04_lodz0
	cthis advsetstdstate
	end method
	method mg04_lodz1
	cthis Button_isin
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg04_lodz2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg04_lodz2
	cthis advstdstate
	neg
	cmp0
	jne l7951
	push "e1_kruk_odlecial"
	call clsave,bis
	jmp l7952
l7950:
	push 0
	jmp l7952
l7951:
	push 1
l7952:
	cmp0
	je l7953
	ret
l7953:
	cthis hide
	push "e1_kruk_odlecial"
	call clsave,bset
	push 0
	call ankruk_idle,stop
	call fxptakout,play
	push 0
	call anflight,play
	push 0
	call ankrysztal_blue,disable=
	end method
	method mg04_lodz3
	push "onfinish"
	push "mg04_lodz4"
	cthis addmethod
	end method
	method mg04_lodz4
	cthis hide
	push "sndkrukodlecial"
	cthis cbplay
	end method
	method mg04_lodz5
	push "e1_lodz_odblokowana"
	call clsave,bis
	neg
	cmp0
	je l7955
	push "use"
	call advmouse,set
	jmp l7954
l7955:
	call advmouse,setstd
l7954:
	end method
	method mg04_lodz6
	call advmouse,setstd
	end method
	method mg04_lodz7
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	end method
	method mg04_lodz8
	cthis advstdstate
	cmp0
	je l7957
	push "e1_lodz_odblokowana"
	call clsave,bis
	neg
	jmp l7959
l7957:
	push 0
	jmp l7959
l7958:
	push 1
l7959:
	cmp0
	je l7960
	push "sndlocked"
	cthis crplay
l7960:
	end method
	method mg04_lodz9
	cthis Button_isinvis
	cthis Button_moveoffms
	push "butmoveon"
	push "mg04_lodz10"
	cthis addmethod
	push "butclick"
	push "mg04_lodz11"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg04_lodz10
	push "e1_lodz_odblokowana"
	call clsave,bis
	cmp0
	je l7962
	push "gouu"
	call advmouse,set
	jmp l7961
l7962:
	call advmouse,setstd
l7961:
	end method
	method mg04_lodz11
	push "e1_lodz_odblokowana"
	call clsave,bis
	cmp0
	je l7964
	push "ad05_lodz"
	push "gamead05_lodz0"
	cthis stdexitdefadv
l7964:
	end method
	method mg04_lodz12
	push "e1_lodz_1st_click"
	call clsave,bis
	neg
	cmp0
	je l7968
	push "e1_lodz_1st_click"
	call clsave,bset
	push "ad04b_lodz"
	push "gamead04b_lodz0"
	cthis gotoadv
	jmp l7967
l7968:
	cthis advsetstdstate
l7967:
	end method
	method ankrysztal_blue_TAKE
	cthis check_finished
	push "krysztal_blue_2"
	cthis item_takecenter
	call advmouse,setstd
	end method
	method ankrysztal_blue_INPCK
	push "krysztal_blue_2"
	cthis addtopck
	end method
	method mend
	push "ad04_brzegjeziora"
	push "gamead04_brzegjeziora0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "e1_kruk_odlecial"
	call clsave,bis
	neg
	cmp0
	je l7970
	push "ankruk_idle"
	cthis showhint
	jmp l7969
l7970:
	push "taken_krysztal_blue_2"
	call clsave,bis
	neg
	cmp0
	je l7972
	push "ankrysztal_blue"
	cthis showhint
	jmp l7971
l7972:
	push "ma_kluczlodz"
	call clsave,bis
	cmp0
	je l7974
	push "kluczlodz"
	cthis showhintitem
	push "anmedalion_wlozony"
	cthis showhint
	jmp l7973
l7974:
	push "e1_lodz_odblokowana"
	call clsave,bis
	cmp0
	je l7976
	push "andrzwi_otwarte_obszar"
	cthis showhint
	jmp l7975
l7976:
	push "anpopexit"
	cthis showhint
l7975:
l7973:
l7971:
l7969:
	end method
	method USE_kluczlodz
	call mouse,getpos
	push 0
	push 0
	call anmedalion_wlozony,isin
	cmp0
	je l7978
	push "e1_lodz_odblokowana"
	call clsave,bset
	push "anmedalion_wlozony"
	call butgame,removebut
	push "kluczlodz"
	cthis removefrompck
	push "open"
	call anbase,playsmooth
	push "gouu"
	call advmouse,set
	call fxopenwindow,play
	call fxopendoor2,play
	push "open"
	call anmedalion_wlozony,playsmooth
	jmp l7977
l7978:
	cthis advsetstdstate
	cthis item_gotopck
l7977:
	end method
	end game

	game ho09intro
	parent Banshee
	method init
	push "ho09_intro"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "robak1.pyzH 2"
	push "robak2.pyzH 3"
	push "robak3.pyzH 4"
	push "robak4.pyzH 5"
	push "robak5.pyzH 6"
	push "robak6.pyzH 7"
	push "robak7.pyz 8"
	push "idle.pyz 9"
	push "fight2.pyzH 10"
	push "flight.pyzH 11"
	push "swiatlo.pyz 12"
	cthis imgs=
	push "sndatak"
	push "kinnat_c1d1_21"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call sndatak,addmethod
	push "anfight"
	call anfight2,addtogamevars
	push A
	push "bgrmorze3N 70"
	push "angrybird 60"
	push "skrzydla 80"
	push "worms 70"
	push "kopanie 70"
	cthis sfxs=
	push "loop"
	call anidle,play
	call answiatlo,anopacityframe
	push "new"
	call answiatlo,play
	call imgbkg,ho09intro0
	call anfight,ho09intro4
	call anflight,ho09intro6
	new ImgRect,recexit
	call recexit,ho09intro9
	push "use"
	call advmouse,set
	cthis stdstart
	end method
	method ho09intro0
	cthis Button_isin
	push "butmoveon"
	push "ho09intro1"
	cthis addmethod
	push "butmoveoff"
	push "ho09intro2"
	cthis addmethod
	push "butclick"
	push "ho09intro3"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method ho09intro1
	push "e1_robaki_zjedzone"
	call clsave,bis
	neg
	cmp0
	je l7980
	push "use"
	call advmouse,set
	jmp l7979
l7980:
	call advmouse,setstd
l7979:
	end method
	method ho09intro2
	cthis advstdstate
	neg
	cmp0
	je l7982
	ret
l7982:
	call advmouse,setstd
	end method
	method ho09intro3
	cthis advstdstate
	neg
	cmp0
	je l7984
	ret
l7984:
	call anfight,isvisible
	cmp0
	jne l7987
	push "e1_robaki_zjedzone"
	call clsave,bis
	jmp l7988
l7986:
	push 0
	jmp l7988
l7987:
	push 1
l7988:
	cmp0
	je l7989
	ret
l7989:
	call anidle,hide
	push 0
	call anidle,stop
	push 0
	call anfight,play
	push "sndatak"
	cthis cbplay
	end method
	method ho09intro4
	push "onfinish"
	push "ho09intro5"
	cthis addmethod
	end method
	method ho09intro5
	cthis hide
	push "e1_robaki_zjedzone"
	call clsave,bis
	neg
	cmp0
	je l7991
	push 0
	call anidle,play
l7991:
	end method
	method ho09intro6
	push "onfinish"
	push "ho09intro7"
	cthis addmethod
	push "onendframe"
	push "ho09intro8"
	cthis addmethod
	end method
	method ho09intro7
	cthis mend
	end method
	method ho09intro8
	localint $1
	cthis framenr
	pop $1
	localint $2
	push 1
	popax
	sub 0,$a
	cthis nofframes
	pop $2
	push $1
	push 35
	cmpje
	cmp0
	je l7993
	call fxkopanie,play
	call anrobak1,hide
l7993:
	push $1
	push 55
	cmpje
	cmp0
	je l7995
	call fxkopanie,play
	call anrobak2,hide
l7995:
	push $1
	push 72
	cmpje
	cmp0
	je l7997
	call fxkopanie,play
	call anrobak3,hide
l7997:
	push $1
	push 82
	cmpje
	cmp0
	je l7999
	call fxkopanie,play
	call anrobak4,hide
l7999:
	push $1
	push 94
	cmpje
	cmp0
	je l8001
	call fxkopanie,play
	call anrobak5,hide
l8001:
	push $1
	push 110
	cmpje
	cmp0
	je l8003
	call fxkopanie,play
	call anrobak6,hide
l8003:
	push $1
	push 125
	cmpje
	cmp0
	je l8005
	call fxkopanie,play
	call anrobak7,hide
l8005:
	end method
	method ho09intro9
	cthis Button_isin
	cthis Button_moveoffms
	push "butmoveon"
	push "ho09intro10"
	cthis addmethod
	push 0
	push 0.8
	push igmapph
	pop $b
	popax
	mul $a,$b
	push igmappw
	push igmapph
	cthis setrect
	push 300
	cthis setz
	cthis getname
	call butgame,add
	push "butclick"
	push "ho09intro11"
	cthis addmethod
	end method
	method ho09intro10
	push "godd"
	call advmouse,set
	end method
	method ho09intro11
	cthis advstdstate
	neg
	cmp0
	je l8007
	ret
l8007:
	push "ad04_brzegjeziora"
	push "gamead04_brzegjeziora0"
	cthis stdexitdefadv
	end method
	method USE_puszka_robaki
	cthis advsetstdstate
	call mouse,getpos
	push 1
	push 1
	call imgbkg,isin
	cmp0
	je l8009
	call mouse,getpos
	push 1
	push 1
	call recexit,isin
	neg
	jmp l8011
l8009:
	push 0
	jmp l8011
l8010:
	push 1
l8011:
	cmp0
	je l8012
	call anfight,isvisible
	cmp0
	je l8014
	push 0
	call anfight,stop
	push 500
	push "null"
	call anfight,anfadeout
l8014:
	push "e1_HO09_Brzegjeziora_after_intro"
	call clsave,bset
	push "puszka_robaki"
	cthis removefrompck
	push "e1_robaki_zjedzone"
	call clsave,bset
	call anidle,hide
	push 0
	call anidle,stop
	push 500
	push "null"
	call anflight,anfadein
	push 0
	call anflight,play
	call fxworms,play
	call advmouse,setstd
	localint $1
	push 1
	pop $1
l8015:
	push $1
	push 8
	cmpjl
	cmp0
	je l8016
	jmp l8018
l8017:
	add $1,1
	pop $1
	jmp l8015
l8018:
	push "anrobak"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 100
	push $1
	pop $b
	popax
	mul $a,$b
	push "null"
	spop $a
	call [$a],anfadein
	jmp l8017
l8016:
	jmp l8008
l8012:
	cthis advsetstdstate
	cthis item_gotopck
l8008:
	end method
	method mend
	push "HO09_Brzegjeziora"
	cthis stdexit
	end method
	method HINT_CLICK
	push "ma_puszka_robaki"
	call clsave,bis
	cmp0
	je l8020
	push "anidle"
	cthis showhint
	push "puszka_robaki"
	cthis showhintitem
	ret
	jmp l8019
l8020:
	push "recexit"
	cthis showhint
l8019:
	end method
	end game

	game mg06krople
	parent Banshee
	method init
	push "mg06_krople"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "podklad.pyz 2"
	push "tor_4.pyz 3"
	push "tor_3.pyz 5"
	push "tor_2.pyz 6"
	push "tor_1.pyz 7"
	push "tor1_btn.pyz 8"
	push "tor2_btn.pyz 9"
	push "tor3_btn.pyz 10"
	push "tor4_btn.pyz 11"
	push "final_glow.pyzH 12"
	push "ramka.pyz 13"
	push "popexit.pyz 14"
	cthis imgs=
	cthis butpopexit
	push 1
	call anfinal_glow,setdrawmode
	new vector,right_sequence
	new int,good_sequence
	push 0
	pop good_sequence
	push "begin"
	push 0
	push 2200
	push 1050
	push 1975
	call right_sequence,beginadd
	new vector,check_sequence
	push "begin"
	push 1
	push 3
	push 4
	push 2
	call check_sequence,beginadd
	new int,act_check_number
	push 0
	pop act_check_number
	push A
	push "wylaniasie"
	push "kropla1"
	push "kropla2"
	push "bgrwiatrN 40"
	push "bgrlas2N 25"
	cthis sfxs=
	push 1000
	call mus,fadeout
	call guihint,switchtoskip
	push "mg06_krople"
	cthis askopis
	call anpopexit,getcx
	call anaskopis,getw
	pop $b
	popax
	add $a,$b
	call anpopexit,getcy
	call anaskopis,geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call anaskopis,ansetbpos
	new vector,sequence
	push "tim1"
	push 0
	call right_sequence,get
	push "mg06krople0"
	cthis timer=
	push "tim2"
	push 1
	call right_sequence,get
	push "mg06krople1"
	cthis timer=
	push "tim3"
	push 2
	call right_sequence,get
	push "mg06krople2"
	cthis timer=
	push "tim4"
	push 3
	call right_sequence,get
	push "mg06krople3"
	cthis timer=
	call anpodklad,mg06krople4
	call imgbkg,mg06krople5
	call antor1_btn,mg06krople7
	call antor2_btn,mg06krople11
	call antor3_btn,mg06krople15
	call antor4_btn,mg06krople19
	call antor_1,mg06krople23
	call antor_2,mg06krople25
	call antor_3,mg06krople27
	call antor_4,mg06krople29
	cthis stdstart
	end method
	method mg06krople0
	push 0
	call antor_1,play
	call antor1_btn,hide
	end method
	method mg06krople1
	push 0
	call antor_2,play
	call antor2_btn,hide
	end method
	method mg06krople2
	push 0
	call antor_3,play
	call antor3_btn,hide
	end method
	method mg06krople3
	push 0
	call antor_4,play
	call antor4_btn,hide
	end method
	method mg06krople4
	cthis Button_isinalpha
	cthis getname
	call butgame,add
	end method
	method mg06krople5
	cthis Button_isinalpha
	push "butclick"
	push "mg06krople6"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg06krople6
	cthis advstdstate
	neg
	cmp0
	je l8022
	ret
l8022:
	cthis mend
	end method
	method mg06krople7
	cthis Button_isinalpha
	push A
	push "selected"
	push 0
	cthis vars2
	push "butmoveon"
	push "mg06krople8"
	cthis addmethod
	push "butmoveoff"
	push "mg06krople9"
	cthis addmethod
	push "butclick"
	push "mg06krople10"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg06krople8
	call advmouse,setbut
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	end method
	method mg06krople9
	call advmouse,setstd
	push selected
	cmp0
	je l8024
	push 1
	popax
	sub 0,$a
	push 2
	cthis setframe
	jmp l8023
l8024:
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
l8023:
	end method
	method mg06krople10
	cthis advstdstate
	neg
	cmp0
	jne l8027
	push good_sequence
	jmp l8028
l8026:
	push 0
	jmp l8028
l8027:
	push 1
l8028:
	cmp0
	je l8029
	ret
l8029:
	push selected
	neg
	cmp0
	je l8031
	push 1
	pop selected
	push 1
	popax
	sub 0,$a
	push 2
	cthis setframe
	push 1
	cthis add_to_sequence
l8031:
	cthis play_all_selected
	end method
	method mg06krople11
	cthis Button_isinalpha
	push A
	push "selected"
	push 0
	cthis vars2
	push "butmoveon"
	push "mg06krople12"
	cthis addmethod
	push "butmoveoff"
	push "mg06krople13"
	cthis addmethod
	push "butclick"
	push "mg06krople14"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg06krople12
	call advmouse,setbut
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	end method
	method mg06krople13
	call advmouse,setstd
	push selected
	cmp0
	je l8033
	push 1
	popax
	sub 0,$a
	push 2
	cthis setframe
	jmp l8032
l8033:
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
l8032:
	end method
	method mg06krople14
	cthis advstdstate
	neg
	cmp0
	jne l8036
	push good_sequence
	jmp l8037
l8035:
	push 0
	jmp l8037
l8036:
	push 1
l8037:
	cmp0
	je l8038
	ret
l8038:
	push selected
	neg
	cmp0
	je l8040
	push 1
	pop selected
	push 1
	popax
	sub 0,$a
	push 2
	cthis setframe
	push 4
	cthis add_to_sequence
l8040:
	cthis play_all_selected
	end method
	method mg06krople15
	cthis Button_isinalpha
	push A
	push "selected"
	push 0
	cthis vars2
	push "butmoveon"
	push "mg06krople16"
	cthis addmethod
	push "butmoveoff"
	push "mg06krople17"
	cthis addmethod
	push "butclick"
	push "mg06krople18"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg06krople16
	call advmouse,setbut
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	end method
	method mg06krople17
	call advmouse,setstd
	push selected
	cmp0
	je l8042
	push 1
	popax
	sub 0,$a
	push 2
	cthis setframe
	jmp l8041
l8042:
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
l8041:
	end method
	method mg06krople18
	cthis advstdstate
	neg
	cmp0
	jne l8045
	push good_sequence
	jmp l8046
l8044:
	push 0
	jmp l8046
l8045:
	push 1
l8046:
	cmp0
	je l8047
	ret
l8047:
	push selected
	neg
	cmp0
	je l8049
	push 1
	pop selected
	push 1
	popax
	sub 0,$a
	push 2
	cthis setframe
	push 2
	cthis add_to_sequence
l8049:
	cthis play_all_selected
	end method
	method mg06krople19
	cthis Button_isinalpha
	push A
	push "selected"
	push 0
	cthis vars2
	push "butmoveon"
	push "mg06krople20"
	cthis addmethod
	push "butmoveoff"
	push "mg06krople21"
	cthis addmethod
	push "butclick"
	push "mg06krople22"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg06krople20
	call advmouse,setbut
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	end method
	method mg06krople21
	call advmouse,setstd
	push selected
	cmp0
	je l8051
	push 1
	popax
	sub 0,$a
	push 2
	cthis setframe
	jmp l8050
l8051:
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
l8050:
	end method
	method mg06krople22
	cthis advstdstate
	neg
	cmp0
	jne l8054
	push good_sequence
	jmp l8055
l8053:
	push 0
	jmp l8055
l8054:
	push 1
l8055:
	cmp0
	je l8056
	ret
l8056:
	push selected
	neg
	cmp0
	je l8058
	push 1
	pop selected
	push 1
	popax
	sub 0,$a
	push 2
	cthis setframe
	push 3
	cthis add_to_sequence
l8058:
	cthis play_all_selected
	end method
	method mg06krople23
	push "onfinish"
	push "mg06krople24"
	cthis addmethod
	end method
	method mg06krople24
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	call antor1_btn,show
	push 1
	popax
	sub 0,$a
	push 0
	call antor1_btn,setframe
	end method
	method mg06krople25
	push "onfinish"
	push "mg06krople26"
	cthis addmethod
	end method
	method mg06krople26
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	call antor2_btn,show
	push 1
	popax
	sub 0,$a
	push 0
	call antor2_btn,setframe
	end method
	method mg06krople27
	push "onfinish"
	push "mg06krople28"
	cthis addmethod
	end method
	method mg06krople28
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	call antor3_btn,show
	push 1
	popax
	sub 0,$a
	push 0
	call antor3_btn,setframe
	end method
	method mg06krople29
	push "onfinish"
	push "mg06krople30"
	cthis addmethod
	end method
	method mg06krople30
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	call antor4_btn,show
	push 1
	popax
	sub 0,$a
	push 0
	call antor4_btn,setframe
	end method
	method mend
	push "ad06_posagmamy"
	push "gamead06_posagmamy0"
	cthis stdexitdefadv
	end method
	method play_all_selected
	call antor1_btn,selected
	cmp0
	je l8060
	call antor2_btn,selected
	cmp0
	je l8060
	call antor3_btn,selected
	cmp0
	je l8060
	call antor4_btn,selected
	jmp l8062
l8060:
	push 0
	jmp l8062
l8061:
	push 1
l8062:
	cmp0
	je l8063
	push 1
	pop good_sequence
	localint $1
	push 1
	pop $1
l8064:
	push $1
	push 4
	cmpjle
	cmp0
	je l8065
	jmp l8067
l8066:
	add $1,1
	pop $1
	jmp l8064
l8067:
	push $1
	push 1
	pop $b
	popax
	sub $a,$b
	push $1
	push 1
	pop $b
	popax
	sub $a,$b
	call sequence,get
	cmpje
	neg
	cmp0
	je l8069
	push 0
	pop good_sequence
l8069:
	push "antor"
	push $1
	pop $b
	popax
	add $a,$b
	push "_btn"
	pop $b
	popax
	add $a,$b
	spushs
	push 0
	spop $a
	call [$a],selected=
	push "antor"
	push $1
	pop $b
	popax
	add $a,$b
	push "_btn"
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	push 0
	spop $a
	call [$a],setframe
	localint $2
	push $1
	push 1
	pop $b
	popax
	sub $a,$b
	call sequence,get
	pop $2
	localint $3
	push $2
	call right_sequence,get
	pop $3
	localdef $4
	push "tim"
	push $1
	pop $b
	popax
	add $a,$b
	pop $4
	push $4
	spushs
	push $3
	spop $a
	call [$a],delay
	push $4
	spushs
	spop $a
	call [$a],play
	jmp l8066
l8065:
	push good_sequence
	cmp0
	je l8071
	push 500
	push "null"
	call anaskopis,anfadeout
	push "timfinish"
	push 4000
	push "mg06krople31"
	cthis timer=
	push "state_finish"
	pop sgmstate
	call timfinish,play
l8071:
	call sequence,free
l8063:
	end method
	method mg06krople31
	call fxwylaniasie,play
	push 500
	push "mg06krople32"
	call anfinal_glow,anfadein
	end method
	method mg06krople32
	push "e1_krople_rozwiazane"
	call clsave,bset
	call anfinal_glow,hide
	push "e1_mg06_krople_adv"
	push 0
	call clsave,set
	cthis set_mg_finished
	push "mg06_huby"
	cthis stdexit
	end method
	method add_to_sequence
	localint $1
	pop $1
	push $1
	push 1
	pop $b
	popax
	sub $a,$b
	call sequence,add
	call fxkropla1,play
	end method
	method SKIP_CLICK
	cthis advstdstate
	cmp0
	je l8073
	push 500
	push "null"
	call anaskopis,anfadeout
	call fxwylaniasie,play
	push 500
	push "mg06krople33"
	call anfinal_glow,anfadein
	push "state_finish"
	pop sgmstate
l8073:
	end method
	method mg06krople33
	push "e1_krople_rozwiazane"
	call clsave,bset
	call anfinal_glow,hide
	push "e1_mg06_krople_adv"
	push 0
	call clsave,set
	cthis set_mg_finished
	push "mg06_huby"
	cthis stdexit
	end method
	method HINT_CLICK
	push "e1_krople_rozwiazane"
	call clsave,bis
	neg
	cmp0
	je l8075
	localint $1
	push act_check_number
	call check_sequence,get
	pop $1
	add act_check_number,1
	pop act_check_number
	push act_check_number
	push 3
	cmpja
	cmp0
	je l8077
	push 0
	pop act_check_number
l8077:
	push "antor"
	push $1
	pop $b
	popax
	add $a,$b
	push "_btn"
	pop $b
	popax
	add $a,$b
	cthis showhint
	ret
l8075:
	push "taken_sekator"
	call clsave,bis
	neg
	cmp0
	je l8079
	push "anpopexit"
	cthis showhint
l8079:
	end method
	end game

	game mg06_huby
	parent Banshee
	method init
	push "mg06_huby"
	clparent Banshee,init
	push "popexit.pyz 7"
	cthis img=
	push "e1_mg06_krople_adv"
	call clsave,bis
	cmp0
	je l8081
	push "bkg.jpg 1"
	cthis img=
	jmp l8080
l8081:
	new img,imgbkg
	push "imgbkg"
	call ccs,cloneto
	push 1
	call imgbkg,setz
	push 255
	call imgbkg,transparency
	call imgbkg,show
l8080:
	call imgbkg,mg06_huby0
	push A
	push "wylaniasie"
	push "bgrwiatrN 40"
	push "bgrlas2N 25"
	cthis sfxs=
	push 1000
	call mus,fadeout
	cthis butpopexit
	push "null"
	cthis load_mg
	push "ansekator"
	cthis setasitemtopck
	push "butmoveon"
	push "mg06_huby3"
	call ansekator,addmethod
	push "onfinish"
	push "mg06_huby4"
	call anwypalanie,addmethod
	push "snd_cant_take"
	push "kinnat_c1d1_13"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_cant_take,addmethod
	cthis stdstart
	end method
	method mg06_huby0
	push "isbutin"
	push "mg06_huby1"
	cthis addmethod
	push "butclick"
	push "mg06_huby2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg06_huby1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anramka,isin
	neg
	end method
	method mg06_huby2
	cthis advstdstate
	neg
	cmp0
	je l8083
	ret
l8083:
	cthis mend
	end method
	method mg06_huby3
	push "take"
	call advmouse,set
	end method
	method mg06_huby4
	push "e1_huby_wypalone"
	call clsave,bset
	cthis hide
	call anwypalone,show
	call ansekator,show
	cthis advsetstdstate
	call mouse,getpos
	call ansekator,isbutin
	cmp0
	je l8085
	push "take"
	call advmouse,set
l8085:
	end method
	method load_mg
	localstring $1
	pop $1
	push "scripts/mg06_huby/"
	cthis switch_path
	push A
	push "przed_wypaleniem.pyz 2"
	push "wypalanie.pyzH 3"
	push "wypalone.pyzH 4"
	push "sekator.pyzH 5"
	push "ramka.pyz 6"
	cthis imgs=
	push $1
	push "null"
	cmpjne
	cmp0
	je l8087
	call gameapi,getgamename
	spushs
	push "img"
	push $1
	spop $a
	call [$a],varnew
	push $1
	spushs
	push "anprzed_wypaleniem"
	spop $a
	call [$a],clone
	call anprzed_wypaleniem,hide
	call anramka,hide
l8087:
	push "taken_sekator"
	call clsave,bis
	cmp0
	je l8089
	jmp l8088
l8089:
	call ansekator,show
	push $1
	push "null"
	cmpjne
	cmp0
	je l8091
	push $1
	spushs
	push "ansekator"
	spop $a
	call [$a],blit
	call ansekator,hide
l8091:
l8088:
	push "e1_krople_rozwiazane"
	call clsave,bis
	cmp0
	je l8093
	push "e1_huby_wypalone"
	call clsave,bis
	neg
	jmp l8095
l8093:
	push 0
	jmp l8095
l8094:
	push 1
l8095:
	cmp0
	je l8096
	call anprzed_wypaleniem,hide
	push $1
	push "null"
	cmpjne
	cmp0
	je l8098
	push $1
	spushs
	push "anwypalanie"
	spop $a
	call [$a],blit
	jmp l8097
l8098:
	push "state_wypalanie"
	cthis advsetstate
	push "wypalanie"
	call anwypalanie,play
l8097:
	jmp l8092
l8096:
	push "e1_huby_wypalone"
	call clsave,bis
	cmp0
	je l8100
	call anprzed_wypaleniem,hide
	call anwypalanie,hide
	push $1
	push "null"
	cmpjne
	cmp0
	je l8102
	push $1
	spushs
	push "anwypalone"
	spop $a
	call [$a],blit
	jmp l8101
l8102:
	call anwypalone,show
l8101:
l8100:
l8092:
	push $1
	push "null"
	cmpjne
	cmp0
	je l8104
	push $1
	spushs
	push "anramka"
	spop $a
	call [$a],blit
	call anramka,hide
	push $1
	spushs
	spop $a
	call [$a],hide
l8104:
	cthis restore_path
	end method
	method ansekator_TAKE
	push "e1_huby_wypalone"
	call clsave,bis
	neg
	cmp0
	je l8106
	push "snd_cant_take"
	cthis cbplay
	ret
l8106:
	call butgame,onmousemove
	push "sekator"
	cthis popitem_gotocenter
	cthis set_mg_finished
	end method
	method ansekator_INPCK
	push "sekator"
	cthis addtopck
	cthis timfinito
	end method
	method mend
	push "ad06_posagmamy"
	push "gamead06_posagmamy0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "taken_sekator"
	call clsave,bis
	neg
	cmp0
	je l8108
	push "e1_krople_rozwiazane"
	call clsave,bis
	jmp l8110
l8108:
	push 0
	jmp l8110
l8109:
	push 1
l8110:
	cmp0
	je l8111
	push "ansekator"
	cthis showhint
	ret
l8111:
	push "anpopexit"
	cthis showhint
	end method
	end game

	game mg07_gargulec
	parent Banshee
	method init
	push "mg07_gargulec"
	clparent Banshee,init
	push A
	push "bgrwiatr2N"
	push "ceglaput"
	push "wylaniasie2"
	cthis sfxs=
	push A
	push "bkg.jpg 1"
	push "background.pyz 2"
	push "items_mask.pyzH 3"
	push "swiatelko.pyz 3"
	push "kawalek_rzezby_3.pyzH 4"
	push "kawalek_rzezby_2.pyzH 5"
	push "kawalek_rzezby_1.pyzH 6"
	push "efekt.pyzH 7"
	push "ramka.pyz 8"
	push "popexit.pyz 9"
	cthis imgs=
	push 1
	call anefekt,setdrawmode
	cthis butpopexit
	call answiatelko,anopacityframe
	push 1
	call answiatelko,play
	push "snd_gargulec"
	push "kinnat_c1d1_26b"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_gargulec,addmethod
	call imgbkg,mg07_gargulec0
	call anitems_mask,mg07_gargulec3
	push "e1_ankawalek_rzezby_1_on"
	call clsave,bis
	cmp0
	je l8121
	call ankawalek_rzezby_1,show
l8121:
	push "e1_ankawalek_rzezby_2_on"
	call clsave,bis
	cmp0
	je l8123
	call ankawalek_rzezby_2,show
l8123:
	push "e1_ankawalek_rzezby_3_on"
	call clsave,bis
	cmp0
	je l8125
	call ankawalek_rzezby_3,show
l8125:
	cthis stdstart
	end method
	method mg07_gargulec0
	push "isbutin"
	push "mg07_gargulec1"
	cthis addmethod
	push "butclick"
	push "mg07_gargulec2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg07_gargulec1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anbackground,isin
	neg
	end method
	method mg07_gargulec2
	cthis advstdstate
	neg
	cmp0
	je l8113
	ret
l8113:
	cthis mend
	end method
	method mg07_gargulec3
	cthis Button_isinvis
	push "butmoveon"
	push "mg07_gargulec4"
	cthis addmethod
	push "butmoveoff"
	push "mg07_gargulec5"
	cthis addmethod
	push "butclick"
	push "mg07_gargulec6"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg07_gargulec4
	push "e1_ad07_maska_naprawiona"
	call clsave,bis
	neg
	cmp0
	je l8115
	push "use"
	call advmouse,set
	jmp l8114
l8115:
	call advmouse,setstd
l8114:
	end method
	method mg07_gargulec5
	call advmouse,setstd
	end method
	method mg07_gargulec6
	cthis advstdstate
	neg
	cmp0
	je l8117
	ret
l8117:
	push "e1_ad07_maska_naprawiona"
	call clsave,bis
	neg
	cmp0
	je l8119
	push "snd_gargulec"
	cthis cbplay
l8119:
	end method
	method USE_kawalek_rzezby1
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call anitems_mask,isin
	cmp0
	je l8127
	push "kawalek_rzezby1"
	cthis removefrompck
	call fxceglaput,play
	push 800
	push "null"
	call ankawalek_rzezby_1,anfadein
	push "e1_ankawalek_rzezby_1_on"
	call clsave,bset
	cthis check_all_done
	cmp0
	je l8129
	cthis all_done
l8129:
	jmp l8126
l8127:
	cthis item_gotopck
l8126:
	call anitems_mask,butmoveon
	end method
	method USE_kawalek_rzezby2
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call anitems_mask,isin
	cmp0
	je l8131
	push "kawalek_rzezby2"
	cthis removefrompck
	call fxceglaput,play
	push 800
	push "null"
	call ankawalek_rzezby_2,anfadein
	push "e1_ankawalek_rzezby_2_on"
	call clsave,bset
	cthis check_all_done
	cmp0
	je l8133
	cthis all_done
l8133:
	jmp l8130
l8131:
	cthis item_gotopck
l8130:
	call anitems_mask,butmoveon
	end method
	method USE_kawalek_rzezby3
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call anitems_mask,isin
	cmp0
	je l8135
	push "kawalek_rzezby3"
	cthis removefrompck
	call fxceglaput,play
	push 800
	push "null"
	call ankawalek_rzezby_3,anfadein
	push "e1_ankawalek_rzezby_3_on"
	call clsave,bset
	cthis check_all_done
	cmp0
	je l8137
	cthis all_done
l8137:
	call anitems_mask,butmoveon
	jmp l8134
l8135:
	cthis item_gotopck
l8134:
	call anitems_mask,butmoveon
	end method
	method check_all_done
	push "e1_ankawalek_rzezby_1_on"
	call clsave,bis
	cmp0
	je l8138
	push "e1_ankawalek_rzezby_2_on"
	call clsave,bis
	cmp0
	je l8138
	push "e1_ankawalek_rzezby_3_on"
	call clsave,bis
	jmp l8140
l8138:
	push 0
	jmp l8140
l8139:
	push 1
l8140:
	end method
	method all_done
	push "e1_ad07_maska_naprawiona"
	call clsave,bset
	push "Ob7"
	cthis objective_done
	push 1600
	push "efekt_fadout"
	call anefekt,anfadein
	call fxwylaniasie2,play
	cthis set_mg_finished
	end method
	method efekt_fadout
	push 1000
	push "timfinito"
	call anefekt,anfadeout
	end method
	method HINT_CLICK
	push "ma_kawalek_rzezby1"
	call clsave,bis
	cmp0
	je l8142
	call ankawalek_rzezby_1,isvisible
	neg
	jmp l8144
l8142:
	push 0
	jmp l8144
l8143:
	push 1
l8144:
	cmp0
	je l8145
	push "kawalek_rzezby1"
	cthis showhintitem
	push "ankawalek_rzezby_1"
	cthis showhint
	jmp l8141
l8145:
	push "ma_kawalek_rzezby2"
	call clsave,bis
	cmp0
	je l8147
	call ankawalek_rzezby_2,isvisible
	neg
	jmp l8149
l8147:
	push 0
	jmp l8149
l8148:
	push 1
l8149:
	cmp0
	je l8150
	push "kawalek_rzezby2"
	cthis showhintitem
	push "ankawalek_rzezby_2"
	cthis showhint
	jmp l8146
l8150:
	push "ma_kawalek_rzezby3"
	call clsave,bis
	cmp0
	je l8152
	call ankawalek_rzezby_3,isvisible
	neg
	jmp l8154
l8152:
	push 0
	jmp l8154
l8153:
	push 1
l8154:
	cmp0
	je l8155
	push "kawalek_rzezby3"
	cthis showhintitem
	push "ankawalek_rzezby_3"
	cthis showhint
	jmp l8151
l8155:
	push "anpopexit"
	cthis showhint
l8151:
l8146:
l8141:
	end method
	method mend
	push 1000
	call mus,fadeout
	push "ad07_alejadrzew"
	push "gamead07_alejadrzew0"
	cthis stdexitdefadv
	end method
	end game

	game mg07_gargulecjajo
	parent Banshee
	method init
	push "mg07_gargulecjajo"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "base.pyz 2"
	push "oczy.pyzH 3"
	push "base2.pyzH 4"
	push "jajo.pyzH 6"
	push "ramka.pyz 6"
	push "popexit.pyz 7"
	cthis imgs=
	push 1
	call anoczy,setdrawmode
	cthis butpopexit
	push "snd_jajo"
	push "kinnat_c1d1_26c"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_jajo,addmethod
	push "niebezpieczenstwo.ogg -v 50 -l"
	call mus,playstr
	push A
	push "showdemon"
	cthis sfxs=
	call imgbkg,mg07_gargulecjajo0
	cthis butpopexit
	cthis stdstart
	call anjajo,mg07_gargulecjajo3
	new Film,filmb
	push "mus"
	call filmb,musicclass=
	push "onfinish"
	push "mg07_gargulecjajo6"
	call filmb,addmethod
	push "scripts/cs09_gargijajo/"
	push "film"
	call filmb,load
	call filmb,showfirstframe
	push 5
	call filmb,setz
	call anbase,getpx
	call anbase,getpy
	call filmb,setpos
	call filmb,hide
	push "taken_jajo"
	call clsave,bis
	neg
	cmp0
	je l8167
	push "e1_mg07_gargulec_finished"
	call clsave,bis
	jmp l8169
l8167:
	push 0
	jmp l8169
l8168:
	push 1
l8169:
	cmp0
	je l8170
	push "state_finish"
	pop sgmstate
	push "anjajo"
	cthis setasitemtopck
	push "anjajo"
	call butgame,removebut
	cthis animacja
	cthis set_mg_finished
l8170:
	cthis stdstart
	end method
	method mg07_gargulecjajo0
	push "isbutin"
	push "mg07_gargulecjajo1"
	cthis addmethod
	push "butclick"
	push "mg07_gargulecjajo2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg07_gargulecjajo1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anbase,isin
	neg
	end method
	method mg07_gargulecjajo2
	cthis advstdstate
	neg
	cmp0
	je l8157
	ret
l8157:
	cthis mend
	end method
	method mg07_gargulecjajo3
	push "isbutin"
	push "mg07_gargulecjajo4"
	cthis addmethod
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg07_gargulecjajo5"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg07_gargulecjajo4
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	end method
	method mg07_gargulecjajo5
	cthis advstdstate
	cmp0
	je l8159
	push "eye_anim"
	pop sgmstate
	push 700
	push "oczy_fadeout"
	call anoczy,anfadein
	call fxshowdemon,play
	push "taken_jajo"
	call clsave,bis
	neg
	cmp0
	je l8161
	push "snd_jajo"
	cthis cbplay
l8161:
l8159:
	end method
	method mg07_gargulecjajo6
	push "jajo"
	cthis isvisible_itempopup
	neg
	cmp0
	je l8163
	cthis hide
l8163:
	call anbase2,show
	push "jajo"
	cthis isvisible_itempopup
	neg
	cmp0
	je l8165
	cthis advsetstdstate
	push "jajo"
	push "anjajo"
	cthis popitem_gotocenterobj
l8165:
	end method
	method oczy_fadeout
	push 700
	push "advsetstdstate"
	call anoczy,anfadeout
	end method
	method animacja
	call anjajo,hide
	push "tim1"
	push 1000
	push "mg07_gargulecjajo7"
	cthis timplay
	end method
	method mg07_gargulecjajo7
	call filmb,play
	call fxshowdemon,play
	end method
	method anjajo_INPCK
	push "jajo"
	cthis addtopck
	cthis timfinito
	end method
	method HINT_CLICK
	push "taken_jajo"
	call clsave,bis
	neg
	cmp0
	je l8172
	push "e1_mg07gargi_hintjajo"
	call clsave,bgo
	jmp l8174
l8172:
	push 0
	jmp l8174
l8173:
	push 1
l8174:
	cmp0
	je l8175
	push "anjajo"
	cthis showhint
	jmp l8171
l8175:
	push "anpopexit"
	cthis showhint
l8171:
	end method
	method mend
	push 1000
	call mus,fadeout
	push "ad07_alejadrzew"
	push "gamead07_alejadrzew0"
	cthis stdexitdefadv
	end method
	end game

	game mg07_skrzynia
	parent Banshee
	method init
	push "mg07_skrzynia"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "zasuwa1_open.pyzH 4"
	push "zasuwa2_open.pyzH 5"
	push "ramka.pyz 6"
	push "popexit.pyz 7"
	push "skrzynia_open.pyzH 8"
	push "smieci.pyzH 9"
	push "kilof_metal.pyzH 10"
	cthis imgs=
	push "ankilof_metal"
	cthis setasitemtopck
	push A
	push "wiatr_w_jaskiniN 70"
	push "bgrlas2N 60"
	push "openskrzynia 80"
	push "zawiasy 80"
	cthis sfxs=
	call anpopup_bkg,mg07_skrzynia0
	call imgbkg,mg07_skrzynia1
	cthis butpopexit
	call anzasuwa1_open,mg07_skrzynia3
	call anzasuwa2_open,mg07_skrzynia6
	push "e1_mg07_skrzynia_opened"
	call clsave,bis
	cmp0
	je l8201
	call ansmieci,show
	call anzasuwa1_open,butdisable
	call anzasuwa2_open,butdisable
	call anskrzynia_open,show
	push "taken_kilof_metal"
	call clsave,bis
	neg
	cmp0
	je l8203
	call ankilof_metal,show
	call ankilof_metal,butenable
l8203:
	jmp l8200
l8201:
	push "e1_mg07_skrzynia_zasuwa_1_opened"
	call clsave,bis
	cmp0
	je l8205
	call anzasuwa1_open,show
l8205:
	push "e1_mg07_skrzynia_zasuwa_2_opened"
	call clsave,bis
	cmp0
	je l8207
	call anzasuwa2_open,show
l8207:
l8200:
	cthis stdstart
	end method
	method mg07_skrzynia0
	cthis Button_isinalpha
	cthis getname
	call butgame,add
	end method
	method mg07_skrzynia1
	cthis Button_isinalpha
	push "butclick"
	push "mg07_skrzynia2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg07_skrzynia2
	cthis advstdstate
	neg
	cmp0
	je l8177
	ret
l8177:
	cthis mend
	end method
	method mg07_skrzynia3
	push "isbutin"
	push "mg07_skrzynia4"
	cthis addmethod
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg07_skrzynia5"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg07_skrzynia4
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 1
	cthis isin
	end method
	method mg07_skrzynia5
	cthis advstdstate
	neg
	cmp0
	je l8179
	ret
l8179:
	push "e1_mg07_skrzynia_zasuwa_1_opened"
	call clsave,bis
	neg
	cmp0
	je l8181
	cthis show
	push "e1_mg07_skrzynia_zasuwa_1_opened"
	call clsave,bset
	call fxzawiasy,play
	jmp l8180
l8181:
	push "e1_mg07_skrzynia_zasuwa_1_opened"
	call clsave,bis
	cmp0
	je l8183
	push "e1_mg07_skrzynia_zasuwa_2_opened"
	call clsave,bis
	jmp l8185
l8183:
	push 0
	jmp l8185
l8184:
	push 1
l8185:
	cmp0
	je l8186
	push "e1_mg07_skrzynia_opened"
	call clsave,bis
	neg
	cmp0
	je l8188
	push "e1_mg07_skrzynia_opened"
	call clsave,bset
	cthis skrzynia_open
l8188:
l8186:
l8180:
	end method
	method mg07_skrzynia6
	push "isbutin"
	push "mg07_skrzynia7"
	cthis addmethod
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg07_skrzynia8"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg07_skrzynia7
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 1
	cthis isin
	end method
	method mg07_skrzynia8
	cthis advstdstate
	neg
	cmp0
	je l8190
	ret
l8190:
	push "e1_mg07_skrzynia_zasuwa_2_opened"
	call clsave,bis
	neg
	cmp0
	je l8192
	cthis show
	push "e1_mg07_skrzynia_zasuwa_2_opened"
	call clsave,bset
	call fxzawiasy,play
	jmp l8191
l8192:
	push "e1_mg07_skrzynia_zasuwa_1_opened"
	call clsave,bis
	cmp0
	je l8194
	push "e1_mg07_skrzynia_zasuwa_2_opened"
	call clsave,bis
	jmp l8196
l8194:
	push 0
	jmp l8196
l8195:
	push 1
l8196:
	cmp0
	je l8197
	push "e1_mg07_skrzynia_opened"
	call clsave,bis
	neg
	cmp0
	je l8199
	push "e1_mg07_skrzynia_opened"
	call clsave,bset
	cthis skrzynia_open
l8199:
l8197:
l8191:
	end method
	method ankilof_metal_TAKE
	push "kilof_metal"
	cthis popitem_gotocenter
	cthis set_mg_finished
	end method
	method ankilof_metal_INPCK
	push "kilof_metal"
	cthis addtopck
	cthis timfinito
	end method
	method skrzynia_open
	call anzasuwa1_open,hide
	call anzasuwa2_open,hide
	call anskrzynia_open,show
	call ansmieci,show
	call ankilof_metal,show
	call fxopenskrzynia,play
	end method
	method HINT_CLICK
	push "e1_mg07_skrzynia_zasuwa_1_opened"
	call clsave,bis
	neg
	cmp0
	je l8209
	push "anzasuwa1_open"
	cthis showhint
	jmp l8208
l8209:
	push "e1_mg07_skrzynia_zasuwa_2_opened"
	call clsave,bis
	neg
	cmp0
	je l8211
	push "anzasuwa2_open"
	cthis showhint
	jmp l8210
l8211:
	push "taken_kilof_metal"
	call clsave,bis
	neg
	cmp0
	je l8213
	push "ankilof_metal"
	cthis showhint
	jmp l8212
l8213:
	push "anpopexit"
	cthis showhint
l8212:
l8210:
l8208:
	end method
	method mend
	push "ad07_alejadrzew"
	push "gamead07_alejadrzew0"
	cthis stdexitdefadv
	end method
	end game

	game mg08_doniczki
	parent Banshee
	method init
	push "mg08_doniczki"
	clparent Banshee,init
	push A
	push "bgrwiatrN 30"
	push "wlewa1"
	push "swist1"
	cthis sfxs=
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "wyspa.pyzH 3"
	push "doniczka1.pyz 3"
	push "doniczka2.pyz 4"
	push "doniczka3.pyz 5"
	push "ziarenko1.pyzH 5"
	push "ziarenko2.pyzH 6"
	push "ziarenko3.pyzH 7"
	push "elixir1.pyzH 8"
	push "roslinka1.pyzH 9"
	push "elixir2.pyzH 10"
	push "roslinka2.pyzH 11"
	push "elixir3.pyzH 12"
	push "roslinka3.pyzH 13"
	push "ramka.pyz 14"
	push "popexit.pyz 25"
	cthis imgs=
	call anpopup_bkg,mg08_doniczki0
	cthis butpopexit
	push "onfinish"
	push "mg08_doniczki1"
	call anelixir1,addmethod
	push "onfinish"
	push "mg08_doniczki2"
	call anelixir2,addmethod
	push "onfinish"
	push "mg08_doniczki3"
	call anelixir3,addmethod
	push "snd_ziarenka"
	push "kinnat_c1d1_26g"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_ziarenka,addmethod
	push "snd_eliksir"
	push "kinnat_c1d1_26gh"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_eliksir,addmethod
	call imgbkg,mg08_doniczki4
	push "e1_ad08_doniczka1_ziarno_in"
	call clsave,bis
	cmp0
	je l8220
	call anziarenko1,show
l8220:
	push "e1_ad08_doniczka2_ziarno_in"
	call clsave,bis
	cmp0
	je l8222
	call anziarenko2,show
l8222:
	push "e1_ad08_doniczka3_ziarno_in"
	call clsave,bis
	cmp0
	je l8224
	call anziarenko3,show
l8224:
	push "e1_ad08_doniczka1_elixir_in"
	call clsave,bis
	cmp0
	je l8226
	push 1
	call anroslinka1,play
l8226:
	push "e1_ad08_doniczka2_elixir_in"
	call clsave,bis
	cmp0
	je l8228
	push 1
	call anroslinka2,play
l8228:
	push "e1_ad08_doniczka3_elixir_in"
	call clsave,bis
	cmp0
	je l8230
	push 1
	call anroslinka3,play
l8230:
	push "e1_wyspa_wleciala"
	call clsave,bis
	cmp0
	je l8232
	call anwyspa,show
l8232:
	push "e1_ad08_doniczka1_elixir_in"
	call clsave,bis
	neg
	cmp0
	je l8234
	call andoniczka1,mg08_doniczki6
l8234:
	push "e1_ad08_doniczka2_elixir_in"
	call clsave,bis
	neg
	cmp0
	je l8250
	call andoniczka2,mg08_doniczki11
l8250:
	push "e1_ad08_doniczka3_elixir_in"
	call clsave,bis
	neg
	cmp0
	je l8266
	call andoniczka3,mg08_doniczki15
l8266:
	cthis stdstart
	end method
	method mg08_doniczki0
	cthis Button_isinalpha
	cthis getname
	call butgame,add
	end method
	method mg08_doniczki1
	cthis hide
	cthis advsetstdstate
	end method
	method mg08_doniczki2
	cthis hide
	cthis advsetstdstate
	end method
	method mg08_doniczki3
	cthis hide
	cthis advsetstdstate
	end method
	method mg08_doniczki4
	cthis Button_isinalpha
	push "butclick"
	push "mg08_doniczki5"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg08_doniczki5
	cthis advstdstate
	neg
	cmp0
	jne l8216
	push sgmstate
	push "getitem"
	cmpje
	cmp0
	jne l8216
	push sgmstate
	push "anim"
	cmpje
	jmp l8217
l8215:
	push 0
	jmp l8217
l8216:
	push 1
l8217:
	cmp0
	je l8218
	ret
l8218:
	cthis mend
	end method
	method mg08_doniczki6
	cthis Button_isinvis
	push "butmoveon"
	push "mg08_doniczki7"
	cthis addmethod
	push "butmoveoff"
	push "mg08_doniczki8"
	cthis addmethod
	push "butmoveoff"
	push "mg08_doniczki9"
	cthis addmethod
	push "butclick"
	push "mg08_doniczki10"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg08_doniczki7
	cthis advstdstate
	neg
	cmp0
	je l8236
	push sgmstate
	push "getitem"
	cmpjne
	jmp l8238
l8236:
	push 0
	jmp l8238
l8237:
	push 1
l8238:
	cmp0
	jne l8240
	push "e1_ad08_doniczka1_elixir_in"
	call clsave,bis
	jmp l8241
l8239:
	push 0
	jmp l8241
l8240:
	push 1
l8241:
	cmp0
	je l8242
	ret
l8242:
	push "e1_ad08_doniczka1_elixir_in"
	call clsave,bis
	neg
	cmp0
	je l8244
	push "use"
	call advmouse,set
	jmp l8243
l8244:
	call advmouse,setstd
l8243:
	end method
	method mg08_doniczki8
	call advmouse,setstd
	end method
	method mg08_doniczki9
	call advmouse,setstd
	end method
	method mg08_doniczki10
	push "e1_ad08_doniczka1_ziarno_in"
	call clsave,bis
	neg
	cmp0
	je l8246
	push "snd_ziarenka"
	cthis cbplay
	jmp l8245
l8246:
	push "e1_ad08_doniczka1_elixir_in"
	call clsave,bis
	neg
	cmp0
	je l8248
	push "snd_eliksir"
	cthis cbplay
l8248:
l8245:
	end method
	method mg08_doniczki11
	cthis Button_isinvis
	push "butmoveon"
	push "mg08_doniczki12"
	cthis addmethod
	push "butmoveoff"
	push "mg08_doniczki13"
	cthis addmethod
	push "butclick"
	push "mg08_doniczki14"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg08_doniczki12
	cthis advstdstate
	neg
	cmp0
	je l8252
	push sgmstate
	push "getitem"
	cmpjne
	jmp l8254
l8252:
	push 0
	jmp l8254
l8253:
	push 1
l8254:
	cmp0
	jne l8256
	push "e1_ad08_doniczka2_elixir_in"
	call clsave,bis
	jmp l8257
l8255:
	push 0
	jmp l8257
l8256:
	push 1
l8257:
	cmp0
	je l8258
	ret
l8258:
	push "e1_ad08_doniczka2_elixir_in"
	call clsave,bis
	neg
	cmp0
	je l8260
	push "use"
	call advmouse,set
	jmp l8259
l8260:
	call advmouse,setstd
l8259:
	end method
	method mg08_doniczki13
	call advmouse,setstd
	end method
	method mg08_doniczki14
	push "e1_ad08_doniczka2_ziarno_in"
	call clsave,bis
	neg
	cmp0
	je l8262
	push "snd_ziarenka"
	cthis cbplay
	jmp l8261
l8262:
	push "e1_ad08_doniczka2_elixir_in"
	call clsave,bis
	neg
	cmp0
	je l8264
	push "snd_eliksir"
	cthis cbplay
l8264:
l8261:
	end method
	method mg08_doniczki15
	cthis Button_isinvis
	push "butmoveon"
	push "mg08_doniczki16"
	cthis addmethod
	push "butmoveoff"
	push "mg08_doniczki17"
	cthis addmethod
	push "butclick"
	push "mg08_doniczki18"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg08_doniczki16
	cthis advstdstate
	neg
	cmp0
	je l8268
	push sgmstate
	push "getitem"
	cmpjne
	jmp l8270
l8268:
	push 0
	jmp l8270
l8269:
	push 1
l8270:
	cmp0
	jne l8272
	push "e1_ad08_doniczka3_elixir_in"
	call clsave,bis
	jmp l8273
l8271:
	push 0
	jmp l8273
l8272:
	push 1
l8273:
	cmp0
	je l8274
	ret
l8274:
	push "e1_ad08_doniczka3_elixir_in"
	call clsave,bis
	neg
	cmp0
	je l8276
	push "use"
	call advmouse,set
	jmp l8275
l8276:
	call advmouse,setstd
l8275:
	end method
	method mg08_doniczki17
	call advmouse,setstd
	end method
	method mg08_doniczki18
	push "e1_ad08_doniczka3_ziarno_in"
	call clsave,bis
	neg
	cmp0
	je l8278
	push "snd_ziarenka"
	cthis cbplay
	jmp l8277
l8278:
	push "e1_ad08_doniczka3_elixir_in"
	call clsave,bis
	neg
	cmp0
	je l8280
	push "snd_eliksir"
	cthis cbplay
l8280:
l8277:
	end method
	method ziarno_completed
	push "e1_ad08_doniczka1_ziarno_in & e1_ad08_doniczka2_ziarno_in & e1_ad08_doniczka3_ziarno_in"
	call clsave,bislist
	end method
	method elixir_completed
	push "e1_ad08_doniczka1_elixir_in"
	call clsave,bis
	cmp0
	je l8281
	push "e1_ad08_doniczka2_elixir_in"
	call clsave,bis
	cmp0
	je l8281
	push "e1_ad08_doniczka3_elixir_in"
	call clsave,bis
	jmp l8283
l8281:
	push 0
	jmp l8283
l8282:
	push 1
l8283:
	end method
	method USE_ziarno
	cthis advsetstdstate
	call mouse,getpos
	push 1
	push 0
	call andoniczka1,isin
	cmp0
	je l8285
	push "e1_ad08_doniczka1_ziarno_in"
	call clsave,bis
	neg
	jmp l8287
l8285:
	push 0
	jmp l8287
l8286:
	push 1
l8287:
	cmp0
	je l8288
	push "e1_ad08_doniczka1_ziarno_in"
	call clsave,bset
	push 1
	call anziarenko1,play
	cthis checktouchpad
	neg
	cmp0
	je l8290
	push "getitem"
	cthis advsetstate
	push "anitem_ziarno"
	call guimov,setmoved
	jmp l8289
l8290:
	cthis item_gotopck
l8289:
	call fxswist1,play
	cthis ziarno_completed
	cmp0
	je l8292
	push "ziarno"
	cthis removefrompck
	call guimov,free
	cthis advsetstdstate
	jmp l8291
l8292:
	push 200
	push "mg08_doniczki19"
	call anitem_ziarno,anfadeout
l8291:
	jmp l8284
l8288:
	call mouse,getpos
	push 1
	push 0
	call andoniczka2,isin
	cmp0
	je l8294
	push "e1_ad08_doniczka2_ziarno_in"
	call clsave,bis
	neg
	jmp l8296
l8294:
	push 0
	jmp l8296
l8295:
	push 1
l8296:
	cmp0
	je l8297
	push "e1_ad08_doniczka2_ziarno_in"
	call clsave,bset
	push 1
	call anziarenko2,play
	cthis checktouchpad
	neg
	cmp0
	je l8299
	push "getitem"
	cthis advsetstate
	push "anitem_ziarno"
	call guimov,setmoved
	jmp l8298
l8299:
	cthis item_gotopck
l8298:
	call fxswist1,play
	cthis ziarno_completed
	cmp0
	je l8301
	push "ziarno"
	cthis removefrompck
	call guimov,free
	cthis advsetstdstate
	jmp l8300
l8301:
	push 200
	push "mg08_doniczki21"
	call anitem_ziarno,anfadeout
l8300:
	jmp l8293
l8297:
	call mouse,getpos
	push 1
	push 0
	call andoniczka3,isin
	cmp0
	je l8303
	push "e1_ad08_doniczka3_ziarno_in"
	call clsave,bis
	neg
	jmp l8305
l8303:
	push 0
	jmp l8305
l8304:
	push 1
l8305:
	cmp0
	je l8306
	push "e1_ad08_doniczka3_ziarno_in"
	call clsave,bset
	push 1
	call anziarenko3,play
	cthis checktouchpad
	neg
	cmp0
	je l8308
	push "getitem"
	cthis advsetstate
	push "anitem_ziarno"
	call guimov,setmoved
	jmp l8307
l8308:
	cthis item_gotopck
l8307:
	call fxswist1,play
	cthis ziarno_completed
	cmp0
	je l8310
	push "ziarno"
	cthis removefrompck
	call guimov,free
	cthis advsetstdstate
	jmp l8309
l8310:
	push 200
	push "mg08_doniczki23"
	call anitem_ziarno,anfadeout
l8309:
	jmp l8302
l8306:
	cthis item_gotopck
l8302:
l8293:
l8284:
	end method
	method mg08_doniczki19
	push 800
	push "mg08_doniczki20"
	call anitem_ziarno,anfadein
	end method
	method mg08_doniczki20
	cthis advsetstdstate
	end method
	method mg08_doniczki21
	push 800
	push "mg08_doniczki22"
	call anitem_ziarno,anfadein
	end method
	method mg08_doniczki22
	cthis advsetstdstate
	end method
	method mg08_doniczki23
	push 800
	push "mg08_doniczki24"
	call anitem_ziarno,anfadein
	end method
	method mg08_doniczki24
	cthis advsetstdstate
	end method
	method go_to_next_location
	push "sysmap_actmap"
	push 2
	call clsave,set
	push "cs08_doniczki"
	push "-def"
	push "ad12_latajacecosna"
	cthis watch_film
	end method
	method elixir_on_doniczka
	localint $1
	pop $1
	push "andoniczka"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	call mouse,getpos
	push 1
	push 0
	spop $a
	call [$a],isin
	cmp0
	je l8312
	push "e1_ad08_doniczka"
	push $1
	pop $b
	popax
	add $a,$b
	push "_ziarno_in"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l8312
	push "e1_ad08_doniczka"
	push $1
	pop $b
	popax
	add $a,$b
	push "_elixir_in"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	jmp l8314
l8312:
	push 0
	jmp l8314
l8313:
	push 1
l8314:
	cmp0
	je l8315
	push "e1_ad08_doniczka"
	push $1
	pop $b
	popax
	add $a,$b
	push "_elixir_in"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	push "anelixir"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	spop $a
	call [$a],play
	push "anroslinka"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 0
	spop $a
	call [$a],play
	cthis checktouchpad
	neg
	cmp0
	je l8317
	push "getitem"
	cthis advsetstate
	push "anitem_elixir"
	call guimov,setmoved
l8317:
	push "andoniczka"
	push $1
	pop $b
	popax
	add $a,$b
	call butgame,removebut
	call fxwlewa1,play
	cthis elixir_completed
	cmp0
	je l8319
	push "elixir"
	cthis removefrompck
	call guimov,free
	cthis advsetstdstate
	cthis set_mg_finished
	cthis go_to_next_location
	jmp l8318
l8319:
	cthis checktouchpad
	cmp0
	je l8321
	cthis item_gotopck
l8321:
	call advmouse,setstd
	push 200
	push "mg08_doniczki25"
	call anitem_elixir,anfadeout
l8318:
	push 1
	jmp l8311
l8315:
	push 0
l8311:
	end method
	method mg08_doniczki25
	push 800
	push "mg08_doniczki26"
	call anitem_elixir,anfadein
	end method
	method mg08_doniczki26
	cthis advsetstdstate
	call advmouse,setstd
	end method
	method USE_elixir
	cthis advsetstdstate
	push 1
	cthis elixir_on_doniczka
	cmp0
	je l8323
	jmp l8322
l8323:
	push 2
	cthis elixir_on_doniczka
	cmp0
	je l8325
	jmp l8324
l8325:
	push 3
	cthis elixir_on_doniczka
	cmp0
	je l8327
	jmp l8326
l8327:
	cthis item_gotopck
l8326:
l8324:
l8322:
	end method
	method mend
	cthis is_mg_finished
	cmp0
	je l8329
	push "ad12_latajacecosna"
	push "gamead12_latajacecosna0"
	cthis stdexitdefadv
	jmp l8328
l8329:
	push "ad08_latajacecospod"
	push "gamead08_latajacecospod0"
	cthis stdexitdefadv
l8328:
	end method
	method HINT_CLICK
	push "ma_ziarno"
	call clsave,bis
	cmp0
	je l8331
	push "e1_ad08_doniczka1_ziarno_in"
	call clsave,bis
	neg
	cmp0
	je l8333
	push "ziarno"
	cthis showhintitem
	push "andoniczka1"
	cthis showhint
	jmp l8332
l8333:
	push "e1_ad08_doniczka2_ziarno_in"
	call clsave,bis
	neg
	cmp0
	je l8335
	push "ziarno"
	cthis showhintitem
	push "andoniczka2"
	cthis showhint
	jmp l8334
l8335:
	push "e1_ad08_doniczka3_ziarno_in"
	call clsave,bis
	neg
	cmp0
	je l8337
	push "ziarno"
	cthis showhintitem
	push "andoniczka3"
	cthis showhint
l8337:
l8334:
l8332:
	jmp l8330
l8331:
	push "ma_elixir"
	call clsave,bis
	cmp0
	je l8339
	push "e1_ad08_doniczka3_elixir_in"
	call clsave,bis
	neg
	cmp0
	je l8341
	push "elixir"
	cthis showhintitem
	push "andoniczka3"
	cthis showhint
	jmp l8340
l8341:
	push "e1_ad08_doniczka2_elixir_in"
	call clsave,bis
	neg
	cmp0
	je l8343
	push "elixir"
	cthis showhintitem
	push "andoniczka2"
	cthis showhint
	jmp l8342
l8343:
	push "e1_ad08_doniczka1_elixir_in"
	call clsave,bis
	neg
	cmp0
	je l8345
	push "elixir"
	cthis showhintitem
	push "andoniczka1"
	cthis showhint
l8345:
l8342:
l8340:
	jmp l8338
l8339:
	push "anpopexit"
	cthis showhint
l8338:
l8330:
	end method
	end game

	game mg08_aniol
	parent Banshee
	method init
	new int,counter
	push 0
	pop counter
	push "mg08_aniol"
	clparent Banshee,init
	push "crying_loop.ogg -v 80 -pl"
	call mus,playstr
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "ramka.pyz 3"
	push "klucz_kostka.pyzH 3"
	push "ring.pyzH 4"
	push "popexit.pyz 21"
	cthis imgs=
	cthis butpopexit
	push "taken_klucz_kostka"
	call clsave,bis
	neg
	cmp0
	je l8347
	push "anklucz_kostka"
	cthis setasitemtopck
	call anklucz_kostka,show
l8347:
	push "taken_ring"
	call clsave,bis
	neg
	cmp0
	je l8349
	push "anring"
	cthis gui_toloupe
	push "anring"
	cthis setasitemtopck
	call anring,mg08_aniol0
	push "timszkielko"
	push "mg08_aniol2"
	cthis cycle=
	call timszkielko,play
l8349:
	call imgbkg,mg08_aniol3
	cthis stdstart
	end method
	method mg08_aniol0
	push "isbutin"
	push "mg08_aniol1"
	cthis addmethod
	end method
	method mg08_aniol1
	localint $1
	localint $2
	pop $2
	pop $1
	cthis advstdstate
	cmp0
	je l8350
	push $1
	push $2
	push 0
	push 0
	cthis isin
	cmp0
	je l8350
	cthis loupe_visible
	jmp l8352
l8350:
	push 0
	jmp l8352
l8351:
	push 1
l8352:
	end method
	method mg08_aniol2
	push 1
	popax
	sub counter,$a
	pop counter
	push counter
	push 0
	cmpjl
	cmp0
	je l8354
	push 300
	pop counter
	cthis loupe_visible
	neg
	cmp0
	je l8356
	call mouse,getpos
	push 1
	push 1
	call guiglass,isin
	neg
	jmp l8358
l8356:
	push 0
	jmp l8358
l8357:
	push 1
l8358:
	cmp0
	je l8359
	push 1
	popax
	sub 0,$a
	call guiglass,actionnr
	push 5
	pop $b
	popax
	add $a,$b
	call guiglassglow,play
l8359:
l8354:
	push "taken_ring"
	call clsave,bis
	neg
	neg
	cmp0
	je l8361
	call timszkielko,play
l8361:
	end method
	method mg08_aniol3
	push "isbutin"
	push "mg08_aniol4"
	cthis addmethod
	push "butclick"
	push "mg08_aniol5"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg08_aniol4
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpopup_bkg,isin
	neg
	end method
	method mg08_aniol5
	cthis advstdstate
	neg
	cmp0
	je l8363
	ret
l8363:
	cthis mend
	end method
	method anklucz_kostka_TAKE
	push "klucz_kostka"
	cthis popitem_gotocenter
	push "taken_ring"
	call clsave,bis
	cmp0
	je l8365
	cthis set_mg_finished
l8365:
	end method
	method anklucz_kostka_INPCK
	push "klucz_kostka"
	cthis addtopck
	push "taken_ring"
	call clsave,bis
	cmp0
	je l8367
	cthis set_mg_finished
	cthis timfinito
l8367:
	end method
	method anring_TAKE
	push "anring"
	cthis gui_removefromloupe
	call anring,show
	push "ring"
	cthis popitem_gotocenter
	push "taken_klucz_kostka"
	call clsave,bis
	cmp0
	je l8369
	cthis set_mg_finished
l8369:
	end method
	method anring_INPCK
	push "ring"
	cthis addtopck
	push "taken_klucz_kostka"
	call clsave,bis
	cmp0
	je l8371
	cthis set_mg_finished
	cthis timfinito
l8371:
	end method
	method mend
	push 1000
	call mus,fadeout
	push "ad08_latajacecospod"
	push "gamead08_latajacecospod0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "taken_klucz_kostka"
	call clsave,bis
	neg
	cmp0
	je l8373
	push "anklucz_kostka"
	cthis showhint
	jmp l8372
l8373:
	push "taken_ring"
	call clsave,bis
	neg
	cmp0
	je l8375
	push "anring"
	cthis showhint2v
	push "guiglass"
	cthis showhint2v
	jmp l8374
l8375:
	push "anpopexit"
	cthis showhint
l8374:
l8372:
	end method
	end game

	game mg09_reka
	parent Banshee
	method init
	push "mg09_reka"
	clparent Banshee,init
	push A
	push "bkg.jpg"
	push "ramka.pyz 20"
	push "klatka.pyz H"
	cthis imgs=
	new Film,filmb
	push "mus"
	call filmb,musicclass=
	push "onfinish"
	push "mend"
	call filmb,addmethod
	push "scripts/cs09_reka/"
	push "film"
	call filmb,load
	call filmb,showfirstframe
	call anklatka,getpx
	call anklatka,getpy
	call filmb,setpos
	push "mg09_reka0"
	call ccs,enter
	end method
	method mg09_reka0
	call filmb,play
	end method
	method mend
	push "ad09_polekoniczyny"
	push "gamead09_polekoniczyny0"
	cthis stdexitdefadv
	end method
	end game

	game mg09_szkielko
	parent Banshee
	method init
	new string,act_id
	push "null"
	pop act_id
	push "mg09_szkielko"
	clparent Banshee,init
	push A
	push "bgrwiatrN 10"
	push "diamenty 80"
	push "cyk"
	push "medalionleft"
	push "retitem"
	push "putitem1"
	cthis sfxs=
	new ImgRect,recmask
	call recmask,mg09_szkielko0
	push A
	push "bkg.jpg 1"
	push "base.pyz 2"
	push "slot1.pyz 3"
	push "slot2.pyz 3"
	push "slot3.pyz 3"
	push "slot4.pyz 3"
	push "slot5.pyz 3"
	push "osmiornica.pyzH 4"
	push "pajak.pyzH 4"
	push "waz.pyzH 4"
	push "ptak.pyzH 4"
	push "kon.pyzH 4"
	push "kot.pyzH 4"
	push "ryba.pyzH 4"
	push "mis.pyzH 4"
	push "malpa.pyzH 4"
	push "slon.pyzH 4"
	push "mask.pyz 5"
	push "glow1.pyzH 6"
	push "glow2.pyzH 6"
	push "glow3.pyzH 6"
	push "glow4.pyzH 6"
	push "glow5.pyzH 6"
	push "final_anim.pyzH  9"
	push "popexit.pyz 10"
	cthis imgs=
	cthis butpopexit
	call imgbkg,mg09_szkielko1
	push 514
	push 488
	call anglow1,setpos
	push 1
	call anglow1,setdrawmode
	push 1
	call anglow2,setdrawmode
	push 656
	push 482
	call anglow2,setpos
	push 1
	call anglow3,setdrawmode
	push 792
	push 406
	call anglow3,setpos
	push 1
	call anglow4,setdrawmode
	push 866
	push 290
	call anglow4,setpos
	push 1
	call anglow5,setdrawmode
	push 868
	push 160
	call anglow5,setpos
	push "snd_intro_game"
	push "duch_reka_c1d1_27a"
	cthis newsndfree
	push "onfinish"
	push "mg09_szkielko4"
	call snd_intro_game,addmethod
	push "snd_brak_elementow"
	push "kinnat_c1d1_28a"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_brak_elementow,addmethod
	push "mg09_szkielko"
	cthis askopis
	call anaskopis,hide
	call anpopexit,getcx
	call anaskopis,getw
	pop $b
	popax
	add $a,$b
	call anpopexit,getcy
	call anaskopis,geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call anaskopis,ansetbpos
	push "e1_monety_zwierzeta_uzyte"
	call clsave,bis
	cmp0
	je l8379
	push "osmiornica"
	push 774
	push 25
	pop $b
	popax
	add $a,$b
	push 306
	push 50
	pop $b
	popax
	add $a,$b
	push 1
	cthis init_coin
	push "kot"
	push 834
	push 248
	push 2
	cthis init_coin
	push "waz"
	push 788
	push 172
	push 3
	cthis init_coin
	push "ptak"
	push 586
	push 242
	push 4
	cthis init_coin
	push "kon"
	push 740
	push 258
	push 5
	cthis init_coin
	call guihint,switchtoskip
	call anaskopis,show
	jmp l8378
l8379:
	push "e1_monety_zwierzeta_zebrane"
	call clsave,bis
	neg
	cmp0
	je l8381
	push "snd_brak_monet"
	push "kinnat_c1d1_28"
	cthis newsndfree
	push "onfinish"
	push "mg09_szkielko5"
	call snd_brak_monet,addmethod
	push "snd_brak_monet"
	cthis cbplay
l8381:
	call anbase,mg09_szkielko6
l8378:
	push "pajak"
	push 565
	push 366
	push 0
	cthis init_coin
	push "ryba"
	push 624
	push 438
	push 0
	cthis init_coin
	push "mis"
	push 660
	push 312
	push 0
	cthis init_coin
	push "malpa"
	push 675
	push 185
	push 0
	cthis init_coin
	push "slon"
	push 720
	push 386
	push 0
	cthis init_coin
	push "e1_monety_zwierzeta_uzyte"
	call clsave,bis
	neg
	cmp0
	je l8389
	push 0
	cthis enable_buttons
l8389:
	call anslot1,mg09_szkielko10
	call anslot2,mg09_szkielko14
	call anslot3,mg09_szkielko18
	call anslot4,mg09_szkielko22
	call anslot5,mg09_szkielko26
	call anfinal_anim,mg09_szkielko30
	cthis load_slots
	cthis stdstart
	end method
	method mg09_szkielko0
	cthis Button_isin
	cthis Button_moveoffms
	push 0
	push 0
	push igmappw
	push igmapph
	cthis setrect
	push 2
	cthis setz
	cthis hide
	cthis getname
	call butgame,add
	end method
	method mg09_szkielko1
	push "isbutin"
	push "mg09_szkielko2"
	cthis addmethod
	push "butclick"
	push "mg09_szkielko3"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg09_szkielko2
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anbase,isin
	neg
	end method
	method mg09_szkielko3
	cthis advstdstate
	neg
	cmp0
	je l8377
	ret
l8377:
	cthis mend
	end method
	method mg09_szkielko4
	cthis advsetstdstate
	call anbase,butmoveon
	end method
	method mg09_szkielko5
	cthis advsetstdstate
	call anbase,butmoveon
	end method
	method mg09_szkielko6
	cthis Button_isinvisalpha
	push "butmoveon"
	push "mg09_szkielko7"
	cthis addmethod
	push "butmoveoff"
	push "mg09_szkielko8"
	cthis addmethod
	push "butclick"
	push "mg09_szkielko9"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg09_szkielko7
	push "e1_monety_zwierzeta_uzyte"
	call clsave,bis
	neg
	cmp0
	je l8383
	push "use"
	call advmouse,set
l8383:
	end method
	method mg09_szkielko8
	call advmouse,setstd
	end method
	method mg09_szkielko9
	cthis advstdstate
	neg
	cmp0
	je l8385
	ret
l8385:
	push "e1_monety_zwierzeta_uzyte"
	call clsave,bis
	neg
	cmp0
	je l8387
	push "snd_brak_elementow"
	cthis cbplay
l8387:
	end method
	method mg09_szkielko10
	cthis Button_isin
	push "butmoveon"
	push "mg09_szkielko11"
	cthis addmethod
	push "butmoveoff"
	push "mg09_szkielko12"
	cthis addmethod
	push "butclick"
	push "mg09_szkielko13"
	cthis addmethod
	push A
	push "occupied"
	push 0
	push "obj_id"
	push "null"
	cthis vars2
	cthis getname
	call butgame,add
	end method
	method mg09_szkielko11
	push "use"
	call advmouse,set
	end method
	method mg09_szkielko12
	call advmouse,setstd
	end method
	method mg09_szkielko13
	cthis advstdstate
	neg
	cmp0
	jne l8392
	cthis occupied
	jmp l8393
l8391:
	push 0
	jmp l8393
l8392:
	push 1
l8393:
	cmp0
	je l8394
	ret
l8394:
	push "snd_brak_elementow"
	cthis cbplay
	end method
	method mg09_szkielko14
	cthis Button_isin
	push "butmoveon"
	push "mg09_szkielko15"
	cthis addmethod
	push "butmoveoff"
	push "mg09_szkielko16"
	cthis addmethod
	push "butclick"
	push "mg09_szkielko17"
	cthis addmethod
	push A
	push "occupied"
	push 0
	push "obj_id"
	push "null"
	cthis vars2
	cthis getname
	call butgame,add
	end method
	method mg09_szkielko15
	push "use"
	call advmouse,set
	end method
	method mg09_szkielko16
	call advmouse,setstd
	end method
	method mg09_szkielko17
	cthis advstdstate
	neg
	cmp0
	jne l8397
	cthis occupied
	jmp l8398
l8396:
	push 0
	jmp l8398
l8397:
	push 1
l8398:
	cmp0
	je l8399
	ret
l8399:
	push "snd_brak_elementow"
	cthis cbplay
	end method
	method mg09_szkielko18
	cthis Button_isin
	push "butmoveon"
	push "mg09_szkielko19"
	cthis addmethod
	push "butmoveoff"
	push "mg09_szkielko20"
	cthis addmethod
	push "butclick"
	push "mg09_szkielko21"
	cthis addmethod
	push A
	push "occupied"
	push 0
	push "obj_id"
	push "null"
	cthis vars2
	cthis getname
	call butgame,add
	end method
	method mg09_szkielko19
	push "use"
	call advmouse,set
	end method
	method mg09_szkielko20
	call advmouse,setstd
	end method
	method mg09_szkielko21
	cthis advstdstate
	neg
	cmp0
	jne l8402
	cthis occupied
	jmp l8403
l8401:
	push 0
	jmp l8403
l8402:
	push 1
l8403:
	cmp0
	je l8404
	ret
l8404:
	push "snd_brak_elementow"
	cthis cbplay
	end method
	method mg09_szkielko22
	cthis Button_isin
	push "butmoveon"
	push "mg09_szkielko23"
	cthis addmethod
	push "butmoveoff"
	push "mg09_szkielko24"
	cthis addmethod
	push "butclick"
	push "mg09_szkielko25"
	cthis addmethod
	push A
	push "occupied"
	push 0
	push "obj_id"
	push "null"
	cthis vars2
	cthis getname
	call butgame,add
	end method
	method mg09_szkielko23
	push "use"
	call advmouse,set
	end method
	method mg09_szkielko24
	call advmouse,setstd
	end method
	method mg09_szkielko25
	cthis advstdstate
	neg
	cmp0
	jne l8407
	cthis occupied
	jmp l8408
l8406:
	push 0
	jmp l8408
l8407:
	push 1
l8408:
	cmp0
	je l8409
	ret
l8409:
	push "snd_brak_elementow"
	cthis cbplay
	end method
	method mg09_szkielko26
	cthis Button_isin
	push "butmoveon"
	push "mg09_szkielko27"
	cthis addmethod
	push "butmoveoff"
	push "mg09_szkielko28"
	cthis addmethod
	push "butclick"
	push "mg09_szkielko29"
	cthis addmethod
	push A
	push "occupied"
	push 0
	push "obj_id"
	push "null"
	cthis vars2
	cthis getname
	call butgame,add
	end method
	method mg09_szkielko27
	push "use"
	call advmouse,set
	end method
	method mg09_szkielko28
	call advmouse,setstd
	end method
	method mg09_szkielko29
	cthis advstdstate
	neg
	cmp0
	jne l8412
	cthis occupied
	jmp l8413
l8411:
	push 0
	jmp l8413
l8412:
	push 1
l8413:
	cmp0
	je l8414
	ret
l8414:
	push "snd_brak_elementow"
	cthis cbplay
	end method
	method mg09_szkielko30
	push "onfinish"
	push "mg09_szkielko31"
	cthis addmethod
	end method
	method mg09_szkielko31
	localint $1
	push 1
	pop $1
l8415:
	push $1
	push 6
	cmpjl
	cmp0
	je l8416
	jmp l8418
l8417:
	add $1,1
	pop $1
	jmp l8415
l8418:
	push "anglow"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 200
	push "null"
	spop $a
	call [$a],anfadeout
	jmp l8417
l8416:
	cthis mend
	end method
	method save_slots
	push "mg09_szkielko_saved"
	call clsave,bset
	localint $1
	push 1
	pop $1
l8419:
	push $1
	push 6
	cmpjl
	cmp0
	je l8420
	jmp l8422
l8421:
	add $1,1
	pop $1
	jmp l8419
l8422:
	push "szkielko_slot_"
	push $1
	pop $b
	popax
	add $a,$b
	push "anslot"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],obj_id
	call clsave,set
	jmp l8421
l8420:
	end method
	method load_slots
	push "mg09_szkielko_saved"
	call clsave,bis
	neg
	cmp0
	je l8424
	ret
l8424:
	localint $1
	push 1
	pop $1
l8425:
	push $1
	push 6
	cmpjl
	cmp0
	je l8426
	jmp l8428
l8427:
	add $1,1
	pop $1
	jmp l8425
l8428:
	localdef $2
	push "szkielko_slot_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,get
	pop $2
	push $2
	push "null"
	cmpjne
	cmp0
	je l8430
	push "anslot"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	spop $a
	call [$a],occupied=
	push "anslot"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push $2
	spop $a
	call [$a],obj_id=
	push "an"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	spop $a
	call [$a],slot_id=
	push "an"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],index
	push $1
	cmpje
	cmp0
	je l8432
	call fxmedalionleft,play
	push "anglow"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push "green"
	push 0
	spop $a
	call [$a],setframe
	push "anglow"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],show
	jmp l8431
l8432:
	push "anglow"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push "red"
	push 0
	spop $a
	call [$a],setframe
	push "anglow"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],show
l8431:
	push $1
	push 1
	cmpje
	cmp0
	je l8434
	push "an"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push 524
	push 37
	pop $b
	popax
	add $a,$b
	push 500
	push 38
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	jmp l8433
l8434:
	push $1
	push 2
	cmpje
	cmp0
	je l8436
	push "an"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push 672
	push 32
	pop $b
	popax
	add $a,$b
	push 494
	push 38
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	jmp l8435
l8436:
	push $1
	push 3
	cmpje
	cmp0
	je l8438
	push "an"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push 802
	push 37
	pop $b
	popax
	add $a,$b
	push 418
	push 38
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	jmp l8437
l8438:
	push $1
	push 4
	cmpje
	cmp0
	je l8440
	push "an"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push 876
	push 37
	pop $b
	popax
	add $a,$b
	push 304
	push 38
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	jmp l8439
l8440:
	push $1
	push 5
	cmpje
	cmp0
	je l8442
	push "an"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push 880
	push 37
	pop $b
	popax
	add $a,$b
	push 172
	push 38
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
l8442:
l8439:
l8437:
l8435:
l8433:
	push "an"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push 4
	spop $a
	call [$a],setz
	push "null"
	pop act_id
	push "an"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push 0
	spop $a
	call [$a],play
	push 2
	call recmask,setz
l8430:
	jmp l8427
l8426:
	end method
	method init_coin
	localstring $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	push $2
	push $3
	push $4
	spop $a
	call [$a],mg09_szkielko32
	end method
	method mg09_szkielko32
	localstring $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	cthis show
	push $2
	push $3
	cthis setpos
	push A
	push "name"
	push $1
	push "start_x"
	push $2
	push "start_y"
	push $3
	push "index"
	push $4
	push "slot_id"
	push 0
	cthis vars2
	cthis Button_isin
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg09_szkielko33"
	cthis addmethod
	push "butrel"
	push "mg09_szkielko34"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg09_szkielko33
	cthis advstdstate
	neg
	cmp0
	jne l8445
	cthis is_mg_finished
	jmp l8446
l8444:
	push 0
	jmp l8446
l8445:
	push 1
l8446:
	cmp0
	je l8447
	ret
l8447:
	call mouse,getpos
	push 1
	push 0
	call anslot1,isin
	cmp0
	je l8449
	call anslot1,occupied
	cmp0
	je l8451
	call anslot1,obj_id
	cthis name
	cmpje
	cmp0
	je l8453
	cthis getname
	pop act_id
	push 300
	cthis setz
	push 1
	cthis play
	push 5
	call recmask,setz
	call butgame,sort
	push 0
	call anslot1,occupied=
	push "null"
	call anslot1,obj_id=
	push 0
	cthis slot_id=
	call anglow1,hide
	cthis check_won
	cthis save_slots
	ret
	jmp l8452
l8453:
	push 524
	push 37
	pop $b
	popax
	add $a,$b
	push 500
	push 38
	pop $b
	popax
	add $a,$b
	cthis setpos
	push "an"
	call anslot1,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	push 4
	spop $a
	call [$a],setz
	push "an"
	call anslot1,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	push "an"
	call anslot1,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],start_x
	push "an"
	call anslot1,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],start_y
	spop $a
	call [$a],setpos
	cthis name
	call anslot1,obj_id=
	push 1
	cthis slot_id=
	cthis index
	push 1
	cmpje
	cmp0
	je l8455
	call fxmedalionleft,play
	push "green"
	push 0
	call anglow1,setframe
	push 800
	push "null"
	call anglow1,anfadein
	jmp l8454
l8455:
	push "red"
	push 0
	call anglow1,setframe
	push 800
	push "null"
	call anglow1,anfadein
l8454:
l8452:
	jmp l8450
l8451:
	push 1
	call anslot1,occupied=
	cthis name
	call anslot1,obj_id=
	cthis index
	cthis slot_id=
	cthis index
	push 1
	cmpje
	cmp0
	je l8457
	call fxmedalionleft,play
	push "green"
	push 0
	call anglow1,setframe
	push 800
	push "null"
	call anglow1,anfadein
	jmp l8456
l8457:
	push "red"
	push 0
	call anglow1,setframe
	push 800
	push "null"
	call anglow1,anfadein
l8456:
	push 524
	push 37
	pop $b
	popax
	add $a,$b
	push 500
	push 38
	pop $b
	popax
	add $a,$b
	cthis setpos
l8450:
	push 4
	cthis setz
	push "null"
	pop act_id
	push 0
	cthis play
	push 2
	call recmask,setz
	cthis save_slots
	cthis check_won
	jmp l8448
l8449:
	call mouse,getpos
	push 1
	push 0
	call anslot2,isin
	cmp0
	je l8459
	call anslot2,occupied
	cmp0
	je l8461
	call anslot2,obj_id
	cthis name
	cmpje
	cmp0
	je l8463
	cthis getname
	pop act_id
	push 300
	cthis setz
	push 1
	cthis play
	push 5
	call recmask,setz
	call butgame,sort
	push 0
	call anslot2,occupied=
	push "null"
	call anslot2,obj_id=
	push 0
	cthis slot_id=
	call anglow2,hide
	cthis check_won
	cthis save_slots
	ret
	jmp l8462
l8463:
	push 672
	push 32
	pop $b
	popax
	add $a,$b
	push 494
	push 38
	pop $b
	popax
	add $a,$b
	cthis setpos
	push "an"
	call anslot2,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	push 4
	spop $a
	call [$a],setz
	push "an"
	call anslot2,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	push "an"
	call anslot2,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],start_x
	push "an"
	call anslot2,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],start_y
	spop $a
	call [$a],setpos
	cthis name
	call anslot2,obj_id=
	push 2
	cthis slot_id=
	cthis index
	push 2
	cmpje
	cmp0
	je l8465
	call fxmedalionleft,play
	push "green"
	push 0
	call anglow2,setframe
	push 800
	push "null"
	call anglow2,anfadein
	jmp l8464
l8465:
	push "red"
	push 0
	call anglow2,setframe
	push 800
	push "null"
	call anglow2,anfadein
l8464:
l8462:
	jmp l8460
l8461:
	push 1
	call anslot2,occupied=
	cthis name
	call anslot2,obj_id=
	cthis index
	cthis slot_id=
	cthis index
	push 2
	cmpje
	cmp0
	je l8467
	call fxmedalionleft,play
	push "green"
	push 0
	call anglow2,setframe
	push 800
	push "null"
	call anglow2,anfadein
	jmp l8466
l8467:
	push "red"
	push 0
	call anglow2,setframe
	push 800
	push "null"
	call anglow2,anfadein
l8466:
	push 672
	push 32
	pop $b
	popax
	add $a,$b
	push 494
	push 38
	pop $b
	popax
	add $a,$b
	cthis setpos
l8460:
	push 4
	cthis setz
	push "null"
	pop act_id
	push 0
	cthis play
	push 2
	call recmask,setz
	cthis check_won
	cthis save_slots
	jmp l8458
l8459:
	call mouse,getpos
	push 1
	push 0
	call anslot3,isin
	cmp0
	je l8469
	call anslot3,occupied
	cmp0
	je l8471
	call anslot3,obj_id
	cthis name
	cmpje
	cmp0
	je l8473
	cthis getname
	pop act_id
	push 300
	cthis setz
	push 1
	cthis play
	push 5
	call recmask,setz
	call butgame,sort
	push 0
	call anslot3,occupied=
	push "null"
	call anslot3,obj_id=
	push 0
	cthis slot_id=
	call anglow3,hide
	cthis check_won
	cthis save_slots
	ret
	jmp l8472
l8473:
	push 802
	push 37
	pop $b
	popax
	add $a,$b
	push 418
	push 38
	pop $b
	popax
	add $a,$b
	cthis setpos
	push "an"
	call anslot3,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	push 4
	spop $a
	call [$a],setz
	push "an"
	call anslot3,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	push "an"
	call anslot3,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],start_x
	push "an"
	call anslot3,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],start_y
	spop $a
	call [$a],setpos
	cthis name
	call anslot3,obj_id=
	push 3
	cthis slot_id=
	cthis index
	push 3
	cmpje
	cmp0
	je l8475
	call fxmedalionleft,play
	push "green"
	push 0
	call anglow3,setframe
	push 800
	push "null"
	call anglow3,anfadein
	jmp l8474
l8475:
	push "red"
	push 0
	call anglow3,setframe
	push 800
	push "null"
	call anglow3,anfadein
l8474:
l8472:
	jmp l8470
l8471:
	push 1
	call anslot3,occupied=
	cthis name
	call anslot3,obj_id=
	cthis index
	cthis slot_id=
	cthis index
	push 3
	cmpje
	cmp0
	je l8477
	call fxmedalionleft,play
	push "green"
	push 0
	call anglow3,setframe
	push 800
	push "null"
	call anglow3,anfadein
	jmp l8476
l8477:
	push "red"
	push 0
	call anglow3,setframe
	push 800
	push "null"
	call anglow3,anfadein
l8476:
	push 802
	push 37
	pop $b
	popax
	add $a,$b
	push 418
	push 38
	pop $b
	popax
	add $a,$b
	cthis setpos
l8470:
	push 4
	cthis setz
	push "null"
	pop act_id
	push 0
	cthis play
	push 2
	call recmask,setz
	cthis check_won
	cthis save_slots
	jmp l8468
l8469:
	call mouse,getpos
	push 1
	push 0
	call anslot4,isin
	cmp0
	je l8479
	call anslot4,occupied
	cmp0
	je l8481
	call anslot4,obj_id
	cthis name
	cmpje
	cmp0
	je l8483
	cthis getname
	pop act_id
	push 300
	cthis setz
	push 1
	cthis play
	push 5
	call recmask,setz
	call butgame,sort
	push 0
	call anslot4,occupied=
	push "null"
	call anslot4,obj_id=
	push 0
	cthis slot_id=
	call anglow4,hide
	cthis check_won
	cthis save_slots
	ret
	jmp l8482
l8483:
	push 876
	push 37
	pop $b
	popax
	add $a,$b
	push 304
	push 38
	pop $b
	popax
	add $a,$b
	cthis setpos
	push "an"
	call anslot4,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	push 4
	spop $a
	call [$a],setz
	push "an"
	call anslot4,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	push "an"
	call anslot4,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],start_x
	push "an"
	call anslot4,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],start_y
	spop $a
	call [$a],setpos
	cthis name
	call anslot4,obj_id=
	push 4
	cthis slot_id=
	cthis index
	push 4
	cmpje
	cmp0
	je l8485
	call fxmedalionleft,play
	push "green"
	push 0
	call anglow4,setframe
	push 800
	push "null"
	call anglow4,anfadein
	jmp l8484
l8485:
	push "red"
	push 0
	call anglow4,setframe
	push 800
	push "null"
	call anglow4,anfadein
l8484:
l8482:
	jmp l8480
l8481:
	push 1
	call anslot4,occupied=
	cthis name
	call anslot4,obj_id=
	cthis index
	cthis slot_id=
	cthis index
	push 4
	cmpje
	cmp0
	je l8487
	call fxmedalionleft,play
	push "green"
	push 0
	call anglow4,setframe
	push 800
	push "null"
	call anglow4,anfadein
	jmp l8486
l8487:
	push "red"
	push 0
	call anglow4,setframe
	push 800
	push "null"
	call anglow4,anfadein
l8486:
	push 876
	push 37
	pop $b
	popax
	add $a,$b
	push 304
	push 38
	pop $b
	popax
	add $a,$b
	cthis setpos
l8480:
	push 4
	cthis setz
	push "null"
	pop act_id
	push 0
	cthis play
	push 2
	call recmask,setz
	cthis check_won
	cthis save_slots
	jmp l8478
l8479:
	call mouse,getpos
	push 1
	push 0
	call anslot5,isin
	cmp0
	je l8489
	call anslot5,occupied
	cmp0
	je l8491
	call anslot5,obj_id
	cthis name
	cmpje
	cmp0
	je l8493
	cthis getname
	pop act_id
	push 300
	cthis setz
	push 1
	cthis play
	push 5
	call recmask,setz
	call butgame,sort
	push 0
	call anslot5,occupied=
	push "null"
	call anslot5,obj_id=
	push 0
	cthis slot_id=
	call anglow5,hide
	cthis check_won
	cthis save_slots
	ret
	jmp l8492
l8493:
	push 880
	push 37
	pop $b
	popax
	add $a,$b
	push 172
	push 38
	pop $b
	popax
	add $a,$b
	cthis setpos
	push "an"
	call anslot5,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	push 4
	spop $a
	call [$a],setz
	push "an"
	call anslot5,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	push "an"
	call anslot5,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],start_x
	push "an"
	call anslot5,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],start_y
	spop $a
	call [$a],setpos
	cthis name
	call anslot5,obj_id=
	push 5
	cthis slot_id=
	cthis index
	push 5
	cmpje
	cmp0
	je l8495
	call fxmedalionleft,play
	push "green"
	push 0
	call anglow5,setframe
	push 800
	push "null"
	call anglow5,anfadein
	jmp l8494
l8495:
	push "red"
	push 0
	call anglow5,setframe
	push 800
	push "null"
	call anglow5,anfadein
l8494:
l8492:
	jmp l8490
l8491:
	push 1
	call anslot5,occupied=
	cthis name
	call anslot5,obj_id=
	cthis index
	cthis slot_id=
	cthis index
	push 5
	cmpje
	cmp0
	je l8497
	call fxmedalionleft,play
	push "green"
	push 0
	call anglow5,setframe
	push 800
	push "null"
	call anglow5,anfadein
	jmp l8496
l8497:
	push "red"
	push 0
	call anglow5,setframe
	push 800
	push "null"
	call anglow5,anfadein
l8496:
	push 880
	push 37
	pop $b
	popax
	add $a,$b
	push 172
	push 38
	pop $b
	popax
	add $a,$b
	cthis setpos
l8490:
	push 4
	cthis setz
	push "null"
	pop act_id
	push 0
	cthis play
	push 2
	call recmask,setz
	cthis check_won
	cthis save_slots
	jmp l8488
l8489:
	push act_id
	push "null"
	cmpje
	cmp0
	je l8499
	cthis getname
	pop act_id
	push 300
	cthis setz
	push 1
	cthis play
	push 5
	call recmask,setz
	call butgame,sort
	cthis check_won
	cthis save_slots
	ret
	jmp l8498
l8499:
	call fxretitem,play
	cthis start_x
	cthis start_y
	cthis setpos
	push 4
	cthis setz
	push "null"
	pop act_id
	push 0
	cthis play
	push 2
	call recmask,setz
l8498:
l8488:
l8478:
l8468:
l8458:
l8448:
	call butgame,sort
	end method
	method mg09_szkielko34
	cthis butclick
	end method
	method mouse_move
	push act_id
	push "null"
	cmpjne
	cmp0
	je l8501
	push act_id
	spushs
	call mouse,getpos
	spop $a
	call [$a],setpos
l8501:
	end method
	method check_all_done
	localint $1
	push 1
	pop $1
l8502:
	push $1
	push 6
	cmpjl
	cmp0
	je l8503
	jmp l8505
l8504:
	add $1,1
	pop $1
	jmp l8502
l8505:
	push "anglow"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],actionname
	push "green"
	cmpjne
	cmp0
	je l8507
	push 0
	ret
l8507:
	jmp l8504
l8503:
	push 1
	ret
	end method
	method check_won
	push act_id
	push "null"
	cmpje
	cmp0
	je l8509
	call fxcyk,play
	jmp l8508
l8509:
	call fxputitem1,play
l8508:
	cthis check_all_done
	cmp0
	je l8511
	cthis set_mg_finished
	call fxdiamenty,play
	push 1
	call anfinal_anim,play
l8511:
	end method
	method enable_buttons
	localint $1
	pop $1
	push $1
	cmp0
	je l8513
	push "anpajak"
	call butgame,add
	push "anryba"
	call butgame,add
	push "anmis"
	call butgame,add
	push "anmalpa"
	call butgame,add
	push "anslon"
	call butgame,add
	push "anslot1"
	call butgame,add
	push "anslot2"
	call butgame,add
	push "anslot3"
	call butgame,add
	push "anslot4"
	call butgame,add
	push "anslot5"
	call butgame,add
	jmp l8512
l8513:
	push "anpajak"
	call butgame,removebut
	push "anryba"
	call butgame,removebut
	push "anmis"
	call butgame,removebut
	push "anmalpa"
	call butgame,removebut
	push "anslon"
	call butgame,removebut
	push "anslot1"
	call butgame,removebut
	push "anslot2"
	call butgame,removebut
	push "anslot3"
	call butgame,removebut
	push "anslot4"
	call butgame,removebut
	push "anslot5"
	call butgame,removebut
l8512:
	end method
	method USE_moneta_5
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call anbase,isin
	cmp0
	je l8515
	push "moneta_5"
	cthis removefrompck
	call fxcyk,play
	call fxdiamenty,play
	push "osmiornica"
	push 774
	push 25
	pop $b
	popax
	add $a,$b
	push 306
	push 50
	pop $b
	popax
	add $a,$b
	push 1
	cthis init_coin
	push "kot"
	push 834
	push 248
	push 2
	cthis init_coin
	push "waz"
	push 788
	push 172
	push 3
	cthis init_coin
	push "ptak"
	push 586
	push 242
	push 4
	cthis init_coin
	push "kon"
	push 740
	push 258
	push 5
	cthis init_coin
	push "anosmiornica"
	spushs
	spop $a
	call [$a],hide
	push "tim1"
	push 150
	push "mg09_szkielko35"
	cthis timplay
	push "ankot"
	spushs
	spop $a
	call [$a],hide
	push "tim2"
	push 200
	push "mg09_szkielko36"
	cthis timplay
	push "anwaz"
	spushs
	spop $a
	call [$a],hide
	push "tim3"
	push 250
	push "mg09_szkielko37"
	cthis timplay
	push "anptak"
	spushs
	spop $a
	call [$a],hide
	push "tim4"
	push 300
	push "mg09_szkielko38"
	cthis timplay
	push "ankon"
	spushs
	spop $a
	call [$a],hide
	push "tim5"
	push 350
	push "mg09_szkielko39"
	cthis timplay
	push "anbase"
	call butgame,removebut
	push 1
	cthis enable_buttons
	push "e1_monety_zwierzeta_uzyte"
	call clsave,bset
	push "timdlg"
	push 1000
	push "mg09_szkielko40"
	cthis timplay
	call guihint,switchtoskip
	call anaskopis,show
	jmp l8514
l8515:
	cthis item_gotopck
l8514:
	end method
	method mg09_szkielko35
	push "anosmiornica"
	spushs
	spop $a
	call [$a],show
	end method
	method mg09_szkielko36
	push "ankot"
	spushs
	spop $a
	call [$a],show
	end method
	method mg09_szkielko37
	push "anwaz"
	spushs
	spop $a
	call [$a],show
	end method
	method mg09_szkielko38
	push "anptak"
	spushs
	spop $a
	call [$a],show
	end method
	method mg09_szkielko39
	push "ankon"
	spushs
	spop $a
	call [$a],show
	end method
	method mg09_szkielko40
	push "snd_intro_game"
	cthis cbplay
	end method
	method mend
	push "ad09_polekoniczyny"
	push "gamead09_polekoniczyny0"
	cthis stdexitdefadv
	end method
	method SKIP_CLICK
	cthis advstdstate
	cmp0
	je l8517
	cthis set_mg_finished
	call guihint,switchtohint
	push 500
	push "null"
	call anaskopis,anfadeout
	call fxdiamenty,play
	push 4
	call anosmiornica,setz
	push 524
	push 39
	pop $b
	popax
	add $a,$b
	push 500
	push 35
	pop $b
	popax
	add $a,$b
	call anosmiornica,setpos
	push 1
	call anosmiornica,play
	push 4
	call ankot,setz
	push 1
	push 0
	call ankot,setframe
	push 100
	push "null"
	call ankot,anfadein
	push 672
	push 32
	pop $b
	popax
	add $a,$b
	push 494
	push 38
	pop $b
	popax
	add $a,$b
	call ankot,setpos
	push 4
	call anwaz,setz
	push 1
	push 0
	call anwaz,setframe
	push 100
	push "null"
	call anwaz,anfadein
	push 802
	push 37
	pop $b
	popax
	add $a,$b
	push 418
	push 38
	pop $b
	popax
	add $a,$b
	call anwaz,setpos
	push 4
	call anptak,setz
	push 1
	push 0
	call anptak,setframe
	push 100
	push "null"
	call anptak,anfadein
	push 876
	push 37
	pop $b
	popax
	add $a,$b
	push 304
	push 38
	pop $b
	popax
	add $a,$b
	call anptak,setpos
	push 4
	call ankon,setz
	push 1
	push 0
	call ankon,setframe
	push 100
	push "null"
	call ankon,anfadein
	push 880
	push 37
	pop $b
	popax
	add $a,$b
	push 172
	push 38
	pop $b
	popax
	add $a,$b
	call ankon,setpos
	push "green"
	push 0
	call anglow1,setframe
	push 100
	push "null"
	call anglow1,anfadein
	push "green"
	push 0
	call anglow2,setframe
	push 100
	push "null"
	call anglow2,anfadein
	push "green"
	push 0
	call anglow3,setframe
	push 100
	push "null"
	call anglow3,anfadein
	push "green"
	push 0
	call anglow4,setframe
	push 100
	push "null"
	call anglow4,anfadein
	push "green"
	push 0
	call anglow5,setframe
	push 100
	push "null"
	call anglow5,anfadein
	push 1
	call anfinal_anim,play
l8517:
	end method
	method HINT_CLICK
	push "e1_monety_zwierzeta_zebrane"
	call clsave,bis
	neg
	cmp0
	je l8519
	push "anpopexit"
	cthis showhint
	ret
	jmp l8518
l8519:
	push "e1_monety_zwierzeta_uzyte"
	call clsave,bis
	neg
	cmp0
	je l8521
	push "anbase"
	cthis showhint
	push "moneta_5"
	cthis showhintitem
	ret
l8521:
l8518:
	call anslot1,occupied
	neg
	cmp0
	je l8523
	push "anosmiornica"
	cthis showhint
	push "anglow1"
	cthis showhint
	ret
	jmp l8522
l8523:
	call anslot2,occupied
	neg
	cmp0
	je l8525
	push "ankot"
	cthis showhint
	push "anglow2"
	cthis showhint
	ret
	jmp l8524
l8525:
	call anslot3,occupied
	neg
	cmp0
	je l8527
	push "anwaz"
	cthis showhint
	push "anglow3"
	cthis showhint
	ret
	jmp l8526
l8527:
	call anslot4,occupied
	neg
	cmp0
	je l8529
	push "anptak"
	cthis showhint
	push "anglow4"
	cthis showhint
	ret
	jmp l8528
l8529:
	call anslot5,occupied
	neg
	cmp0
	je l8531
	push "ankon"
	cthis showhint
	push "anglow5"
	cthis showhint
	ret
l8531:
l8528:
l8526:
l8524:
l8522:
	push "anpopexit"
	cthis showhint
	end method
	end game

	game mg09_szopa
	parent Banshee
	method init
	push "mg09_szopa"
	clparent Banshee,init
	push A
	push "las4N 30"
	push "noc2N 20"
	push "quickcrumple"
	push "wylaniasie"
	cthis sfxs=
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "cube.pyzH 3"
	push "stol.pyzH 3"
	push "ring.pyzH 4"
	push "key.pyzH 5"
	push "cube_after_anim.pyzH 6"
	push "poison.pyzH 7"
	push "ramka.pyz 20"
	push "popexit.pyz 21"
	cthis imgs=
	cthis butpopexit
	push "anpoison"
	cthis setasitemtopck
	call imgbkg,mg09_szopa0
	push "snd_brak_kostki"
	push "kinnat_c1d1_31b"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_brak_kostki,addmethod
	push "snd_brak_pozostalych"
	push "kinnat_c1d1_31c"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_brak_pozostalych,addmethod
	push "e1_mg09_szopa_poison_shown"
	call clsave,bis
	cmp0
	je l8535
	call ancube_after_anim,show
	push "taken_poison"
	call clsave,bis
	neg
	cmp0
	je l8537
	call anpoison,show
l8537:
	jmp l8534
l8535:
	new Film,filmb
	push "mus"
	call filmb,musicclass=
	push "onfinish"
	push "mg09_szopa3"
	call filmb,addmethod
	push "scripts/cs09_kostka/"
	push "film"
	call filmb,load
	call filmb,showfirstframe
	push 5
	call filmb,setz
	call anpopup_bkg,getpx
	call anpopup_bkg,getpy
	call filmb,setpos
	call filmb,hide
	call anstol,mg09_szopa4
	push "e1_mg09_kostka_on"
	call clsave,bis
	cmp0
	je l8547
	call ancube,mg09_szopa8
l8547:
	push "e1_mg09_ring_on"
	call clsave,bis
	cmp0
	je l8554
	call anring,show
l8554:
	push "e1_mg09_key_on"
	call clsave,bis
	cmp0
	je l8556
	call ankey,show
l8556:
l8534:
	cthis stdstart
	end method
	method mg09_szopa0
	push "isbutin"
	push "mg09_szopa1"
	cthis addmethod
	push "butclick"
	push "mg09_szopa2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg09_szopa1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpopup_bkg,isin
	neg
	end method
	method mg09_szopa2
	cthis advstdstate
	neg
	cmp0
	je l8533
	ret
l8533:
	cthis mend
	end method
	method mg09_szopa3
	cthis hide
	call ancube_after_anim,show
	call anpoison,show
	end method
	method mg09_szopa4
	cthis Button_isinvisalpha
	push "butmoveon"
	push "mg09_szopa5"
	cthis addmethod
	push "butmoveoff"
	push "mg09_szopa6"
	cthis addmethod
	push "butclick"
	push "mg09_szopa7"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg09_szopa5
	cthis all_inserted
	neg
	cmp0
	je l8539
	push "use"
	call advmouse,set
	jmp l8538
l8539:
	call advmouse,setstd
l8538:
	end method
	method mg09_szopa6
	call advmouse,setstd
	end method
	method mg09_szopa7
	cthis advstdstate
	neg
	cmp0
	je l8541
	ret
l8541:
	push "e1_mg09_kostka_on"
	call clsave,bis
	neg
	cmp0
	je l8543
	push "snd_brak_kostki"
	cthis cbplay
	jmp l8542
l8543:
	cthis all_inserted
	neg
	cmp0
	je l8545
	push "snd_brak_pozostalych"
	cthis cbplay
l8545:
l8542:
	end method
	method mg09_szopa8
	cthis show
	cthis Button_isinvisalpha
	push "butmoveon"
	push "mg09_szopa9"
	cthis addmethod
	push "butmoveoff"
	push "mg09_szopa10"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg09_szopa9
	push "e1_mg09_klucz_on"
	call clsave,bis
	neg
	cmp0
	jne l8550
	push "e1_mg09_ring_on"
	call clsave,bis
	neg
	jmp l8551
l8549:
	push 0
	jmp l8551
l8550:
	push 1
l8551:
	cmp0
	je l8552
	push "use"
	call advmouse,set
	jmp l8548
l8552:
	call advmouse,setstd
l8548:
	end method
	method mg09_szopa10
	call advmouse,setstd
	end method
	method USE_kostka
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call anstol,isin
	cmp0
	je l8558
	call fxquickcrumple,play
	push "kostka"
	cthis removefrompck
	push 500
	push "null"
	call ancube,anfadein
	push "use"
	call advmouse,set
	push "e1_mg09_kostka_on"
	call clsave,bset
	cthis all_inserted
	cmp0
	je l8560
	push "e1_mg09_szopa_poison_shown"
	call clsave,bset
	call filmb,play
	jmp l8559
l8560:
	push "use"
	call advmouse,set
l8559:
	jmp l8557
l8558:
	cthis item_gotopck
l8557:
	end method
	method USE_ring
	cthis advsetstdstate
	call mouse,getpos
	push 1
	push 1
	call ancube,isin
	cmp0
	je l8562
	call fxquickcrumple,play
	push "ring"
	cthis removefrompck
	push 500
	push "null"
	call anring,anfadein
	push "e1_mg09_ring_on"
	call clsave,bset
	cthis all_inserted
	cmp0
	je l8564
	push "e1_mg09_szopa_poison_shown"
	call clsave,bset
	call filmb,play
	call advmouse,setstd
	jmp l8563
l8564:
	push "use"
	call advmouse,set
l8563:
	jmp l8561
l8562:
	cthis item_gotopck
l8561:
	end method
	method USE_klucz_kostka
	cthis advsetstdstate
	call mouse,getpos
	push 1
	push 1
	call ancube,isin
	cmp0
	je l8566
	call fxquickcrumple,play
	push "klucz_kostka"
	cthis removefrompck
	push 500
	push "null"
	call ankey,anfadein
	push "e1_mg09_key_on"
	call clsave,bset
	cthis all_inserted
	cmp0
	je l8568
	push "e1_mg09_szopa_poison_shown"
	call clsave,bset
	call filmb,play
	call advmouse,setstd
	jmp l8567
l8568:
	push "use"
	call advmouse,set
l8567:
	jmp l8565
l8566:
	cthis item_gotopck
l8565:
	end method
	method anpoison_TAKE
	push "poison"
	cthis popitem_gotocenter
	cthis set_mg_finished
	end method
	method anpoison_INPCK
	push "poison"
	cthis addtopck
	cthis timfinito
	end method
	method all_inserted
	push "e1_mg09_key_on"
	call clsave,bis
	cmp0
	je l8570
	push "e1_mg09_ring_on"
	call clsave,bis
	jmp l8572
l8570:
	push 0
	jmp l8572
l8571:
	push 1
l8572:
	cmp0
	je l8573
	push 1
	ret
	jmp l8569
l8573:
	push 0
	ret
l8569:
	end method
	method mend
	push "ad09_polekoniczyny"
	push "gamead09_polekoniczyny0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "taken_kostka"
	call clsave,bis
	neg
	cmp0
	je l8575
	push "anpopexit"
	cthis showhint
	jmp l8574
l8575:
	push "ma_kostka"
	call clsave,bis
	cmp0
	je l8577
	push "anstol"
	cthis showhint
	push "kostka"
	cthis showhintitem
	jmp l8576
l8577:
	push "ma_ring"
	call clsave,bis
	cmp0
	je l8579
	push "anring"
	cthis showhint
	push "ring"
	cthis showhintitem
	jmp l8578
l8579:
	push "ma_klucz_kostka"
	call clsave,bis
	cmp0
	je l8581
	push "anstol"
	cthis showhint
	push "klucz_kostka"
	cthis showhintitem
	jmp l8580
l8581:
	push "ma_klucz_kostka"
	call clsave,bis
	cmp0
	je l8583
	push "anklucz"
	cthis showhint
	jmp l8582
l8583:
	push "e1_mg09_szopa_poison_shown"
	call clsave,bis
	cmp0
	je l8585
	push "taken_poison"
	call clsave,bis
	neg
	jmp l8587
l8585:
	push 0
	jmp l8587
l8586:
	push 1
l8587:
	cmp0
	je l8588
	push "anpoison"
	cthis showhint
	jmp l8584
l8588:
	push "anpopexit"
	cthis showhint
l8584:
l8582:
l8580:
l8578:
l8576:
l8574:
	end method
	end game

	game mg10_poison
	parent Banshee
	method init
	push "mg10_poison"
	clparent Banshee,init
	push A
	push "bkg.jpg"
	push "ramka.pyz 20"
	push "klatka.pyz H"
	cthis imgs=
	push A
	push "bgrlas2N"
	cthis sfxs=
	new Film,filmb
	push "mus"
	call filmb,musicclass=
	push "onfinish"
	push "mend"
	call filmb,addmethod
	push "scripts/cs10_poison/"
	push "film"
	call filmb,load
	call filmb,showfirstframe
	call anklatka,getpx
	call anklatka,getpy
	call filmb,setpos
	push "mg10_poison0"
	call ccs,enter
	end method
	method mg10_poison0
	call filmb,play
	end method
	method mend
	push "ad10_ogrodrozany"
	push "gamead10_ogrodrozany0"
	cthis stdexitdefadv
	end method
	end game

	game mg10_grogulec
	parent Banshee
	method init
	push "mg10_grogulec"
	clparent Banshee,init
	push A
	push "bgrlas2N"
	push "wylaniasie2"
	push "ceglaput"
	cthis sfxs=
	push A
	push "bkg.jpg"
	push "popup_bkg.pyz 1"
	push "ramka.pyz 2"
	push "smok.pyz 2"
	push "smok_light.pyzH 3"
	push "smok_rozwalony.pyzH 4"
	push "anim_coord.pyzH 5"
	push "popexit.pyz 13"
	push "elixirH.pyz 14"
	cthis imgs=
	cthis butpopexit
	call imgbkg,mg10_grogulec0
	push "e1_mg10_grogulec_lights_on"
	call clsave,bis
	neg
	cmp0
	je l8592
	call ansmok,mg10_grogulec3
l8592:
	call ansmok_light,mg10_grogulec6
	push "e1_mg10_grogulec_lights_on"
	call clsave,bis
	cmp0
	je l8602
	call ansmok_light,show
	call ansmok,hide
l8602:
	push "e1_mg10_grogulec_smok_rozwalony"
	call clsave,bis
	cmp0
	je l8604
	push "taken_elixir"
	call clsave,bis
	neg
	jmp l8606
l8604:
	push 0
	jmp l8606
l8605:
	push 1
l8606:
	cmp0
	je l8607
	call ansmok_rozwalony,show
	push "anelixir"
	cthis setasitemtopck
	call anelixir,show
l8607:
	push "e1_mg10_grogulec_smok_rozwalony"
	call clsave,bis
	neg
	cmp0
	je l8609
	new Film,filmb
	push "mus"
	call filmb,musicclass=
	push "onfinish"
	push "mg10_grogulec10"
	call filmb,addmethod
	push "scripts/cs10_grogulec/"
	push "film"
	call filmb,load
	call filmb,showfirstframe
	push 5
	call filmb,setz
	call ananim_coord,getpx
	call ananim_coord,getpy
	call filmb,setpos
	call filmb,hide
l8609:
	push save_prefix
	push "intro_spoken"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l8611
	push "snd_intro"
	push "kinnat_c1d1_36"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_intro,addmethod
	push "snd_intro"
	cthis cbplay
	push save_prefix
	push "intro_spoken"
	pop $b
	popax
	add $a,$b
	call clsave,bset
l8611:
	push "snd_smok"
	push "kinnat_c1d1_36a"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_smok,addmethod
	cthis stdstart
	end method
	method mg10_grogulec0
	push "isbutin"
	push "mg10_grogulec1"
	cthis addmethod
	push "butclick"
	push "mg10_grogulec2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg10_grogulec1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpopup_bkg,isin
	neg
	end method
	method mg10_grogulec2
	cthis advstdstate
	neg
	cmp0
	je l8590
	ret
l8590:
	cthis mend
	end method
	method mg10_grogulec3
	cthis Button_isinalpha
	push "butmoveon"
	push "mg10_grogulec4"
	cthis addmethod
	push "butmoveoff"
	push "mg10_grogulec5"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg10_grogulec4
	push "e1_mg10_grogulec_lights_on"
	call clsave,bis
	neg
	cmp0
	je l8594
	push "use"
	call advmouse,set
	jmp l8593
l8594:
	call advmouse,setstd
l8593:
	end method
	method mg10_grogulec5
	call advmouse,setstd
	end method
	method mg10_grogulec6
	cthis Button_isinalpha
	push "butmoveon"
	push "mg10_grogulec7"
	cthis addmethod
	push "butmoveoff"
	push "mg10_grogulec8"
	cthis addmethod
	push "butclick"
	push "mg10_grogulec9"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg10_grogulec7
	push "e1_mg10_grogulec_smok_rozwalony"
	call clsave,bis
	neg
	cmp0
	je l8596
	push "use"
	call advmouse,set
	jmp l8595
l8596:
	call advmouse,setstd
l8595:
	end method
	method mg10_grogulec8
	call advmouse,setstd
	end method
	method mg10_grogulec9
	cthis advstdstate
	neg
	cmp0
	je l8598
	ret
l8598:
	push "e1_mg10_grogulec_smok_rozwalony"
	call clsave,bis
	neg
	cmp0
	je l8600
	push "snd_smok"
	cthis cbplay
l8600:
	end method
	method mg10_grogulec10
	cthis advsetstdstate
	call ansmok_rozwalony,show
	call anelixir,show
	cthis hide
	end method
	method anelixir_TAKE
	push "elixir"
	cthis popitem_gotocenter
	cthis set_mg_finished
	end method
	method anelixir_INPCK
	push "elixir"
	cthis addtopck
	cthis timfinito
	end method
	method USE_oczy
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call ansmok,isin
	cmp0
	je l8613
	push "oczy"
	cthis removefrompck
	call fxceglaput,play
	call fxwylaniasie2,play
	push 400
	push "null"
	call ansmok_light,anfadein
	push "e1_mg10_grogulec_lights_on"
	call clsave,bset
	jmp l8612
l8613:
	cthis advsetstdstate
	cthis item_gotopck
l8612:
	end method
	method USE_kilof
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call ansmok_light,isin
	cmp0
	je l8615
	push "e1_mg10_grogulec_lights_on"
	call clsave,bis
	jmp l8617
l8615:
	push 0
	jmp l8617
l8616:
	push 1
l8617:
	cmp0
	je l8618
	push "kilof"
	cthis removefrompck
	push "e1_mg10_grogulec_smok_rozwalony"
	call clsave,bset
	call filmb,play
	push "anelixir"
	cthis setasitemtopck
	jmp l8614
l8618:
	cthis advsetstdstate
	cthis item_gotopck
l8614:
	end method
	method HINT_CLICK
	push "taken_oczy"
	call clsave,bis
	cmp0
	je l8620
	push "e1_mg10_grogulec_lights_on"
	call clsave,bis
	neg
	jmp l8622
l8620:
	push 0
	jmp l8622
l8621:
	push 1
l8622:
	cmp0
	je l8623
	push "ansmok"
	cthis showhint
	push "oczy"
	cthis showhintitem
	jmp l8619
l8623:
	push "e1_mg10_grogulec_lights_on"
	call clsave,bis
	cmp0
	je l8625
	push "taken_kilof"
	call clsave,bis
	cmp0
	je l8625
	push "e1_mg10_grogulec_smok_rozwalony"
	call clsave,bis
	neg
	jmp l8627
l8625:
	push 0
	jmp l8627
l8626:
	push 1
l8627:
	cmp0
	je l8628
	push "ansmok_light"
	cthis showhint
	push "kilof"
	cthis showhintitem
	jmp l8624
l8628:
	push "e1_mg10_grogulec_smok_rozwalony"
	call clsave,bis
	cmp0
	je l8630
	push "taken_elixir"
	call clsave,bis
	neg
	jmp l8632
l8630:
	push 0
	jmp l8632
l8631:
	push 1
l8632:
	cmp0
	je l8633
	push "anelixir"
	cthis showhint
	jmp l8629
l8633:
	push "anpopexit"
	cthis showhint
l8629:
l8624:
l8619:
	end method
	method mend
	push "ad10_ogrodrozany"
	push "gamead10_ogrodrozany0"
	cthis stdexitdefadv
	end method
	end game

	game mg11_lew
	parent Banshee
	method init
	push "mg11_lew"
	clparent Banshee,init
	push "crying_loop -v 70 -l"
	call mus,playstr
	push A
	push "bkg.jpg 1"
	push "base.pyz 2"
	push "4.pyz 3"
	push "3.pyz 4"
	push "2.pyz 5"
	push "1.pyz 6"
	push "mask.pyz 7"
	push "ramka.pyz 8"
	push "win.pyzH 9"
	push "popexit.pyz 10"
	push "2_hint_mask.pyzH 11"
	push "3_hint_mask.pyzH 12"
	push "4_hint_mask.pyzH 13"
	cthis imgs=
	push A
	push "ceglamove2 70"
	push "ceglaput 90"
	push "podswietl 70"
	cthis sfxs=
	push "an2"
	push "an2copy"
	cthis copyanima
	call an2copy,hide
	push "an3"
	push "an3copy"
	cthis copyanima
	call an3copy,hide
	push "an4"
	push "an4copy"
	cthis copyanima
	call an4copy,hide
	cthis butpopexit
	push "mg11"
	cthis askopis
	call anpopexit,getcx
	call anaskopis,getw
	pop $b
	popax
	add $a,$b
	call anpopexit,getcy
	call anaskopis,geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call anaskopis,ansetbpos
	call anbase,mg11_lew0
	call imgbkg,mg11_lew4
	new int,center_x
	push rgmscalex
	push 666
	pop $b
	popax
	mul $a,$b
	pop center_x
	new int,center_y
	push rgmscaley
	push 374
	pop $b
	popax
	mul $a,$b
	pop center_y
	new int,rot1
	push 0
	pop rot1
	new int,rot2
	push 0
	pop rot2
	new int,rot3
	push 0
	pop rot3
	new int,rot4
	push 0
	pop rot4
	new filter,ftrot2
	push "an2"
	call ftrot2,link
	push 0
	call ftrot2,setpivottype
	new filter,ftrot3
	push "an3"
	call ftrot3,link
	push 0
	call ftrot3,setpivottype
	new filter,ftrot4
	push "an4"
	call ftrot4,link
	push 0
	call ftrot4,setpivottype
	new filter,frot2
	push "an2_hint_mask"
	call frot2,link
	push 2
	call frot2,setpivottype
	new filter,frot3
	push "an3_hint_mask"
	call frot3,link
	push 2
	call frot3,setpivottype
	new filter,frot4
	push "an4_hint_mask"
	call frot4,link
	push 2
	call frot4,setpivottype
	push center_x
	push center_y
	call an2_hint_mask,move
	push center_x
	push center_y
	call an3_hint_mask,move
	push center_x
	push center_y
	call an4_hint_mask,move
	call an2,mg11_lew6
	call an3,mg11_lew11
	call an4,mg11_lew16
	push "e1_kawalek_lwa2_inserted"
	call clsave,bis
	cmp0
	je l8675
	push "inserted"
	call an2,play
l8675:
	push "e1_kawalek_lwa3_inserted"
	call clsave,bis
	cmp0
	je l8677
	push "inserted"
	call an3,play
l8677:
	push "e1_kawalek_lwa4_inserted"
	call clsave,bis
	cmp0
	je l8679
	push "inserted"
	call an4,play
l8679:
	push "timsay"
	push 1
	push "mg11_lew21"
	cthis timer=
	cthis random_rings
	push "e1_kawalek_lwa2_inserted"
	call clsave,bis
	neg
	cmp0
	jne l8687
	push "e1_kawalek_lwa3_inserted"
	call clsave,bis
	neg
	cmp0
	jne l8687
	push "e1_kawalek_lwa4_inserted"
	call clsave,bis
	neg
	jmp l8688
l8686:
	push 0
	jmp l8688
l8687:
	push 1
l8688:
	cmp0
	je l8689
	push "snd_brak_kawalkow"
	push "kinnat_c1d1_34"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_brak_kawalkow,addmethod
	cthis no_items_warning
	jmp l8685
l8689:
	call guihint,switchtoskip
	call anaskopis,show
l8685:
	cthis stdstart
	end method
	method mg11_lew0
	cthis Button_isinalpha
	push "normal"
	call advmouse,set
	push "butmoveon"
	push "mg11_lew1"
	cthis addmethod
	push "butmoveoff"
	push "mg11_lew2"
	cthis addmethod
	push "butclick"
	push "mg11_lew3"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg11_lew1
	cthis all_inserted
	neg
	cmp0
	je l8635
	push "use"
	call advmouse,set
	jmp l8634
l8635:
	call advmouse,setstd
l8634:
	end method
	method mg11_lew2
	call advmouse,setstd
	end method
	method mg11_lew3
	cthis no_items_warning
	end method
	method mg11_lew4
	cthis Button_isinalpha
	push "butclick"
	push "mg11_lew5"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg11_lew5
	cthis advstdstate
	neg
	cmp0
	je l8637
	ret
l8637:
	cthis mend
	end method
	method mg11_lew6
	push "isbutin"
	push "mg11_lew7"
	cthis addmethod
	push "butmoveon"
	push "mg11_lew8"
	cthis addmethod
	push "butmoveoff"
	push "mg11_lew9"
	cthis addmethod
	push "butclick"
	push "mg11_lew10"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg11_lew7
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 1
	cthis isin
	end method
	method mg11_lew8
	push "e1_kawalek_lwa2_inserted"
	call clsave,bis
	neg
	cmp0
	je l8639
	push "normal"
	call advmouse,set
	jmp l8638
l8639:
	cthis all_inserted
	cmp0
	je l8641
	cthis is_mg_finished
	neg
	jmp l8643
l8641:
	push 0
	jmp l8643
l8642:
	push 1
l8643:
	cmp0
	je l8644
	push "take"
	call advmouse,set
	jmp l8640
l8644:
	push "normal"
	call advmouse,set
l8640:
l8638:
	end method
	method mg11_lew9
	call advmouse,setstd
	end method
	method mg11_lew10
	cthis advstdstate
	neg
	cmp0
	jne l8647
	cthis is_mg_finished
	cmp0
	jne l8647
	cthis all_inserted
	neg
	jmp l8648
l8646:
	push 0
	jmp l8648
l8647:
	push 1
l8648:
	cmp0
	je l8649
	cthis no_items_warning
	ret
l8649:
	call fxceglamove2,play
	push 30
	cthis rotate2
	end method
	method mg11_lew11
	push "isbutin"
	push "mg11_lew12"
	cthis addmethod
	push "butmoveon"
	push "mg11_lew13"
	cthis addmethod
	push "butmoveoff"
	push "mg11_lew14"
	cthis addmethod
	push "butclick"
	push "mg11_lew15"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg11_lew12
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 1
	cthis isin
	end method
	method mg11_lew13
	push "e1_kawalek_lwa3_inserted"
	call clsave,bis
	neg
	cmp0
	je l8651
	push "normal"
	call advmouse,set
	jmp l8650
l8651:
	cthis all_inserted
	cmp0
	je l8653
	cthis is_mg_finished
	neg
	jmp l8655
l8653:
	push 0
	jmp l8655
l8654:
	push 1
l8655:
	cmp0
	je l8656
	push "take"
	call advmouse,set
	jmp l8652
l8656:
	push "normal"
	call advmouse,set
l8652:
l8650:
	end method
	method mg11_lew14
	call advmouse,setstd
	end method
	method mg11_lew15
	cthis advstdstate
	neg
	cmp0
	jne l8659
	cthis is_mg_finished
	cmp0
	jne l8659
	cthis all_inserted
	neg
	jmp l8660
l8658:
	push 0
	jmp l8660
l8659:
	push 1
l8660:
	cmp0
	je l8661
	cthis no_items_warning
	ret
l8661:
	call fxceglamove2,play
	push 30
	cthis rotate3
	end method
	method mg11_lew16
	push "isbutin"
	push "mg11_lew17"
	cthis addmethod
	push "butmoveon"
	push "mg11_lew18"
	cthis addmethod
	push "butmoveoff"
	push "mg11_lew19"
	cthis addmethod
	push "butclick"
	push "mg11_lew20"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg11_lew17
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 1
	cthis isin
	end method
	method mg11_lew18
	push "e1_kawalek_lwa4_inserted"
	call clsave,bis
	neg
	cmp0
	je l8663
	push "normal"
	call advmouse,set
	jmp l8662
l8663:
	cthis all_inserted
	cmp0
	je l8665
	cthis is_mg_finished
	neg
	jmp l8667
l8665:
	push 0
	jmp l8667
l8666:
	push 1
l8667:
	cmp0
	je l8668
	push "take"
	call advmouse,set
	jmp l8664
l8668:
	push "normal"
	call advmouse,set
l8664:
l8662:
	end method
	method mg11_lew19
	call advmouse,setstd
	end method
	method mg11_lew20
	cthis advstdstate
	neg
	cmp0
	jne l8671
	cthis is_mg_finished
	cmp0
	jne l8671
	cthis all_inserted
	neg
	jmp l8672
l8670:
	push 0
	jmp l8672
l8671:
	push 1
l8672:
	cmp0
	je l8673
	cthis no_items_warning
	ret
l8673:
	call fxceglamove2,play
	push 30
	cthis rotate4
	end method
	method mg11_lew21
	push "e1_kawalek_lwa2_inserted"
	call clsave,bis
	neg
	cmp0
	jne l8682
	push "e1_kawalek_lwa3_inserted"
	call clsave,bis
	neg
	cmp0
	jne l8682
	push "e1_kawalek_lwa4_inserted"
	call clsave,bis
	neg
	jmp l8683
l8681:
	push 0
	jmp l8683
l8682:
	push 1
l8683:
	cmp0
	je l8684
	push "snd_brak_kawalkow"
	cthis cbplay
l8684:
	end method
	method all_inserted
	push "e1_kawalek_lwa2_inserted"
	call clsave,bis
	neg
	cmp0
	jne l8692
	push "e1_kawalek_lwa3_inserted"
	call clsave,bis
	neg
	cmp0
	jne l8692
	push "e1_kawalek_lwa4_inserted"
	call clsave,bis
	neg
	jmp l8693
l8691:
	push 0
	jmp l8693
l8692:
	push 1
l8693:
	cmp0
	je l8694
	push 0
	ret
	jmp l8690
l8694:
	push 1
	ret
l8690:
	end method
	method rotate2
	localint $1
	pop $1
	push $1
	call ftrot2,rotate
	push $1
	popax
	add rot2,$a
	pop rot2
	call rot2,abs
	push 360
	cmpje
	cmp0
	je l8696
	push 0
	pop rot2
l8696:
	push $1
	call frot2,rotate
	cthis check_won
	cmp0
	je l8698
	cthis finish
l8698:
	end method
	method rotate3
	localint $1
	pop $1
	push $1
	call ftrot3,rotate
	push $1
	popax
	add rot3,$a
	pop rot3
	call rot3,abs
	push 360
	cmpje
	cmp0
	je l8700
	push 0
	pop rot3
l8700:
	push $1
	call frot3,rotate
	cthis check_won
	cmp0
	je l8702
	cthis finish
l8702:
	end method
	method rotate4
	localint $1
	pop $1
	push $1
	call ftrot4,rotate
	push $1
	popax
	add rot4,$a
	pop rot4
	call rot4,abs
	push 360
	cmpje
	cmp0
	je l8704
	push 0
	pop rot4
l8704:
	push $1
	call frot4,rotate
	cthis check_won
	cmp0
	je l8706
	cthis finish
l8706:
	end method
	method random_rings
	localint $1
	push 8
	spushs
	spop $h
	call $h,rand
	push 2
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	push 30
	pop $b
	popax
	mul $a,$b
	cthis rotate4
	localint $2
	push 8
	spushs
	spop $h
	call $h,rand
	push 2
	pop $b
	popax
	add $a,$b
	pop $2
	push $2
	popax
	sub 0,$a
	push 30
	pop $b
	popax
	mul $a,$b
	cthis rotate3
	localint $3
	push 8
	spushs
	spop $h
	call $h,rand
	push 2
	pop $b
	popax
	add $a,$b
	pop $3
	push $3
	push 30
	pop $b
	popax
	mul $a,$b
	cthis rotate2
	end method
	method check_won
	push "e1_kawalek_lwa2_inserted"
	call clsave,bis
	cmp0
	je l8707
	push "e1_kawalek_lwa3_inserted"
	call clsave,bis
	cmp0
	je l8707
	push "e1_kawalek_lwa4_inserted"
	call clsave,bis
	cmp0
	je l8707
	push rot2
	push 0
	cmpje
	cmp0
	je l8707
	push rot3
	push 0
	cmpje
	cmp0
	je l8707
	push rot4
	push 0
	cmpje
	jmp l8709
l8707:
	push 0
	jmp l8709
l8708:
	push 1
l8709:
	end method
	method finish
	call advmouse,setstd
	cthis set_mg_finished
	call fxpodswietl,play
	push 500
	push "null"
	call anaskopis,anfadeout
	push 1200
	push "mg11_lew22"
	call anwin,anfadein
	end method
	method mg11_lew22
	cthis timfinito
	end method
	method mend
	push 1000
	call mus,fadeout
	push "ad11_altana"
	push "gamead11_altana0"
	cthis stdexitdefadv
	end method
	method USE_kawalek_lwa2
	cthis advsetstdstate
	call mouse,getpos
	push 1
	push 1
	call anbase,isin
	cmp0
	je l8711
	push "kawalek_lwa2"
	cthis removefrompck
	call fxceglaput,play
	push "e1_kawalek_lwa2_inserted"
	call clsave,bset
	push "inserted"
	call an2,play
	call advmouse,setstd
	cthis all_inserted
	cmp0
	je l8713
	call guihint,switchtoskip
	call anaskopis,show
l8713:
	cthis check_won
	cmp0
	je l8715
	cthis finish
l8715:
	jmp l8710
l8711:
	cthis item_gotopck
l8710:
	end method
	method USE_kawalek_lwa3
	cthis advsetstdstate
	call mouse,getpos
	push 1
	push 1
	call anbase,isin
	cmp0
	je l8717
	push "kawalek_lwa3"
	cthis removefrompck
	call fxceglaput,play
	push "e1_kawalek_lwa3_inserted"
	call clsave,bset
	push "inserted"
	call an3,play
	call advmouse,setstd
	cthis all_inserted
	cmp0
	je l8719
	call guihint,switchtoskip
	call anaskopis,show
l8719:
	cthis check_won
	cmp0
	je l8721
	cthis finish
l8721:
	jmp l8716
l8717:
	cthis item_gotopck
l8716:
	end method
	method USE_kawalek_lwa4
	cthis advsetstdstate
	call mouse,getpos
	push 1
	push 1
	call anbase,isin
	cmp0
	je l8723
	push "kawalek_lwa4"
	cthis removefrompck
	call fxceglaput,play
	push "e1_kawalek_lwa4_inserted"
	call clsave,bset
	push "inserted"
	call an4,play
	call advmouse,setstd
	cthis all_inserted
	cmp0
	je l8725
	call guihint,switchtoskip
	call anaskopis,show
l8725:
	cthis check_won
	cmp0
	je l8727
	cthis finish
l8727:
	jmp l8722
l8723:
	cthis item_gotopck
l8722:
	end method
	method no_items_warning
	cthis advstdstate
	neg
	cmp0
	je l8729
	ret
l8729:
	call timsay,play
	end method
	method SKIP_CLICK
	cthis advstdstate
	cmp0
	je l8731
	call guihint,switchtohint
	cthis finish
l8731:
	end method
	method HINT_CLICK
	push "ma_kawalek_lwa2"
	call clsave,bis
	cmp0
	je l8733
	push "kawalek_lwa2"
	cthis showhintitem
	push "an2_hint_mask"
	cthis showhint
	jmp l8732
l8733:
	push "ma_kawalek_lwa3"
	call clsave,bis
	cmp0
	je l8735
	push "kawalek_lwa3"
	cthis showhintitem
	push "an3_hint_mask"
	cthis showhint
	jmp l8734
l8735:
	push "ma_kawalek_lwa4"
	call clsave,bis
	cmp0
	je l8737
	push "kawalek_lwa4"
	cthis showhintitem
	push "an4_hint_mask"
	cthis showhint
	jmp l8736
l8737:
	cthis all_inserted
	cmp0
	je l8739
	push rot2
	push 0
	cmpjne
	cmp0
	je l8741
	call an2copy,getcx
	call an2copy,getpy
	push 20
	pop $b
	popax
	add $a,$b
	push 0
	cthis showhintxy
	jmp l8740
l8741:
	push rot3
	push 0
	cmpjne
	cmp0
	je l8743
	call an3copy,getcx
	call an3copy,getpy
	push 20
	pop $b
	popax
	add $a,$b
	push 0
	cthis showhintxy
	jmp l8742
l8743:
	push rot4
	push 0
	cmpjne
	cmp0
	je l8745
	call an4copy,getcx
	call an4copy,getpy
	push 20
	pop $b
	popax
	add $a,$b
	push 0
	cthis showhintxy
l8745:
l8742:
l8740:
	jmp l8738
l8739:
	push "anpopexit"
	cthis showhint
l8738:
l8736:
l8734:
l8732:
	end method
	end game

	game mg11_gargulec
	parent Banshee
	method init
	push "mg11_gargulec"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "oczy.pyz 3"
	push "piorun.pyz 6"
	push "swiatlo.pyz 7"
	push "ramka.pyz 8"
	push "liscie.pyz 9"
	push "popexit.pyz 10"
	cthis imgs=
	push A
	push "prund 10"
	push "noc2N 30"
	push "quickcrumple"
	cthis sfxs=
	push 1
	call answiatlo,setdrawmode
	push 0
	call anpiorun,play
	push "anoczy"
	cthis setasitemtopck
	call imgbkg,mg11_gargulec0
	cthis butpopexit
	cthis stdstart
	end method
	method mg11_gargulec0
	push "isbutin"
	push "mg11_gargulec1"
	cthis addmethod
	push "butclick"
	push "mg11_gargulec2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg11_gargulec1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpopup_bkg,isin
	neg
	end method
	method mg11_gargulec2
	cthis advstdstate
	neg
	cmp0
	je l8747
	ret
l8747:
	cthis mend
	end method
	method mend
	push "ad11_altana"
	push "gamead11_altana0"
	cthis stdexitdefadv
	end method
	method anoczy_TAKE
	call fxquickcrumple,play
	push 800
	push "null"
	call answiatlo,anfadeout
	push 0
	call anpiorun,stop
	push 800
	push "null"
	call anpiorun,anfadeout
	push "oczy"
	cthis popitem_gotocenter
	push "e1_mg11_pioruny_wylaczone"
	call clsave,bset
	cthis set_mg_finished
	end method
	method anoczy_INPCK
	push "oczy"
	cthis addtopck
	cthis timfinito
	end method
	method HINT_CLICK
	push "taken_oczy"
	call clsave,bis
	neg
	cmp0
	je l8749
	push "anoczy"
	cthis showhint
	jmp l8748
l8749:
	push "anpopexit"
	cthis showhint
l8748:
	end method
	end game

	game mg12_aniol
	parent Banshee
	method init
	push "mg12_aniol"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "base.pyz 2"
	push "serce_part_2.pyzH 3"
	push "serce_part_1.pyzH 4"
	push "zwoj.pyzH 5"
	push "animacja.pyzH 6"
	push "ramka.pyz 7"
	push "popexit.pyz 8"
	push "notatka_big.pyzH 9"
	cthis imgs=
	cthis butpopexit
	push A
	push "bgrwiatrN 30"
	push "book2"
	push "clickoblok"
	push "shine"
	push "opendoor"
	cthis sfxs=
	call anbase,mg12_aniol0
	call imgbkg,mg12_aniol1
	push 1000
	call mus,fadeout
	push 1
	call ananimacja,setdrawmode
	push "snd_intro"
	push "kinnat_c2d2_2a"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_intro,addmethod
	push save_prefix
	push "serce_part_1_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l8753
	call anserce_part_1,show
l8753:
	push save_prefix
	push "serce_part_2_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l8755
	call anserce_part_2,show
l8755:
	push "e1_mg12_aniol_notatka_wzieta"
	call clsave,bis
	neg
	cmp0
	je l8757
	push "snd_cant_insert"
	push "kinnat_c2d2_2b"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_cant_insert,addmethod
	push "snd_note_take1"
	push "kinnat_c2d2_2_1"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_note_take1,addmethod
l8757:
	push "e1_mg12_aniol_notatka_wzieta"
	call clsave,bis
	neg
	cmp0
	je l8759
	call anzwoj,mg12_aniol4
	call annotatka_big,mg12_aniol9
l8759:
	call anserce_part_1,mg12_aniol13
	call anserce_part_2,mg12_aniol17
	cthis stdstart
	end method
	method mg12_aniol0
	cthis Button_isinalpha
	cthis getname
	call butgame,add
	end method
	method mg12_aniol1
	push "isbutin"
	push "mg12_aniol2"
	cthis addmethod
	push "butclick"
	push "mg12_aniol3"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg12_aniol2
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anbase,isin
	neg
	end method
	method mg12_aniol3
	cthis advstdstate
	neg
	cmp0
	je l8751
	ret
l8751:
	cthis mend
	end method
	method mg12_aniol4
	cthis show
	cthis Button_isinvisalpha
	push "butmoveon"
	push "mg12_aniol5"
	cthis addmethod
	push "butmoveoff"
	push "mg12_aniol6"
	cthis addmethod
	push "butclick"
	push "mg12_aniol7"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg12_aniol5
	cthis advstdstate
	neg
	cmp0
	je l8761
	ret
l8761:
	push "take"
	call advmouse,set
	end method
	method mg12_aniol6
	call advmouse,setstd
	end method
	method mg12_aniol7
	cthis advstdstate
	neg
	cmp0
	je l8763
	ret
l8763:
	cthis hide
	call fxbook2,play
	push 500
	push "mg12_aniol8"
	call annotatka_big,anfadein
	cthis getname
	call butgame,removebut
	call advmouse,setstd
	end method
	method mg12_aniol8
	push "snd_note_take1"
	cthis cbplay
	end method
	method mg12_aniol9
	cthis Button_isin
	push "butmoveon"
	push "mg12_aniol10"
	cthis addmethod
	push "butmoveoff"
	push "mg12_aniol11"
	cthis addmethod
	push "butclick"
	push "mg12_aniol12"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg12_aniol10
	push "take"
	call advmouse,set
	end method
	method mg12_aniol11
	call advmouse,setstd
	end method
	method mg12_aniol12
	cthis advstdstate
	neg
	cmp0
	je l8765
	ret
l8765:
	push 500
	push "null"
	call annotatka_big,anfadeout
	call fxbook2,play
	push "Ob3b"
	cthis show_objective
	push "n015"
	cthis stdpiorko
	push "e1_mg12_aniol_notatka_wzieta"
	call clsave,bset
	cthis getname
	call butgame,removebut
	call advmouse,setstd
	end method
	method mg12_aniol13
	cthis Button_isinvisalpha
	push "butmoveon"
	push "mg12_aniol14"
	cthis addmethod
	push "butmoveoff"
	push "mg12_aniol15"
	cthis addmethod
	push "butclick"
	push "mg12_aniol16"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg12_aniol14
	push save_prefix
	push "serce_part_1_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l8767
	push "e1_mg12_aniol_notatka_wzieta"
	call clsave,bis
	jmp l8769
l8767:
	push 0
	jmp l8769
l8768:
	push 1
l8769:
	cmp0
	je l8770
	push "use"
	call advmouse,set
l8770:
	end method
	method mg12_aniol15
	call advmouse,setstd
	end method
	method mg12_aniol16
	cthis advstdstate
	neg
	cmp0
	jne l8773
	push "e1_mg12_aniol_notatka_wzieta"
	call clsave,bis
	neg
	cmp0
	jne l8773
	push sgmstate
	push "getitem"
	cmpje
	jmp l8774
l8772:
	push 0
	jmp l8774
l8773:
	push 1
l8774:
	cmp0
	je l8775
	ret
l8775:
	push save_prefix
	push "serce_part_1_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l8777
	push save_prefix
	push "serce_part_2_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l8777
	push sgmstate
	push "getitem"
	cmpjne
	jmp l8779
l8777:
	push 0
	jmp l8779
l8778:
	push 1
l8779:
	cmp0
	je l8780
	push "snd_intro"
	cthis cbplay
l8780:
	end method
	method mg12_aniol17
	cthis Button_isinvisalpha
	push "butmoveon"
	push "mg12_aniol18"
	cthis addmethod
	push "butmoveoff"
	push "mg12_aniol19"
	cthis addmethod
	push "butclick"
	push "mg12_aniol20"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg12_aniol18
	push save_prefix
	push "serce_part_2_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l8782
	push "e1_mg12_aniol_notatka_wzieta"
	call clsave,bis
	jmp l8784
l8782:
	push 0
	jmp l8784
l8783:
	push 1
l8784:
	cmp0
	je l8785
	push "use"
	call advmouse,set
l8785:
	end method
	method mg12_aniol19
	call advmouse,setstd
	end method
	method mg12_aniol20
	cthis advstdstate
	neg
	cmp0
	jne l8788
	push "e1_mg12_aniol_notatka_wzieta"
	call clsave,bis
	neg
	cmp0
	jne l8788
	push sgmstate
	push "getitem"
	cmpje
	jmp l8789
l8787:
	push 0
	jmp l8789
l8788:
	push 1
l8789:
	cmp0
	je l8790
	ret
l8790:
	push save_prefix
	push "serce_part_2_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l8792
	push save_prefix
	push "serce_part_1_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	jmp l8794
l8792:
	push 0
	jmp l8794
l8793:
	push 1
l8794:
	cmp0
	je l8795
	push "snd_intro"
	cthis cbplay
l8795:
	end method
	method mend
	push "ad12_latajacecosna"
	push "gamead12_latajacecosna0"
	cthis stdexitdefadv
	end method
	method USE_serce_part1
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call anbase,isin
	cmp0
	je l8797
	push "e1_mg12_aniol_notatka_wzieta"
	call clsave,bis
	cmp0
	je l8799
	push "serce_part1"
	cthis removefrompck
	push 800
	push "null"
	call anserce_part_1,anfadein
	push save_prefix
	push "serce_part_1_on"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	push "anserce_part_1"
	call butgame,removebut
	call fxclickoblok,play
	jmp l8798
l8799:
	cthis item_gotopck
	push "snd_cant_insert"
	cthis cbplay
l8798:
	cthis check_all_done
	cmp0
	je l8801
	cthis set_mg_finished
	push "timend"
	push 1000
	push "all_done"
	cthis timplay
l8801:
	jmp l8796
l8797:
	cthis item_gotopck
l8796:
	call advmouse,setstd
	end method
	method USE_serce_part2
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call anbase,isin
	cmp0
	je l8803
	push "e1_mg12_aniol_notatka_wzieta"
	call clsave,bis
	cmp0
	je l8805
	push "serce_part2"
	cthis removefrompck
	push 800
	push "null"
	call anserce_part_2,anfadein
	push save_prefix
	push "serce_part_2_on"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	push "anserce_part_2"
	call butgame,removebut
	call fxclickoblok,play
	jmp l8804
l8805:
	cthis item_gotopck
	push "snd_cant_insert"
	cthis cbplay
l8804:
	cthis check_all_done
	cmp0
	je l8807
	cthis set_mg_finished
	push "timend"
	push 1000
	push "all_done"
	cthis timplay
l8807:
	jmp l8802
l8803:
	cthis item_gotopck
l8802:
	call advmouse,setstd
	end method
	method check_all_done
	push save_prefix
	push "serce_part_1_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l8809
	push save_prefix
	push "serce_part_2_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	jmp l8811
l8809:
	push 0
	jmp l8811
l8810:
	push 1
l8811:
	cmp0
	je l8812
	push 1
	ret
	jmp l8808
l8812:
	push 0
	ret
l8808:
	end method
	method all_done
	call fxshine,play
	push 1600
	push "animacja_fadout"
	call ananimacja,anfadein
	end method
	method animacja_fadout
	call fxopendoor,play
	push 1000
	push "timfinito"
	call ananimacja,anfadeout
	end method
	method HINT_CLICK
	push "e1_mg12_aniol_notatka_wzieta"
	call clsave,bis
	neg
	cmp0
	je l8814
	push "anzwoj"
	cthis showhint
	jmp l8813
l8814:
	push "ma_serce_part1"
	call clsave,bis
	cmp0
	je l8816
	push "serce_part1"
	cthis showhintitem
	push "anserce_part_1"
	cthis showhint
	ret
	jmp l8815
l8816:
	push "ma_serce_part2"
	call clsave,bis
	cmp0
	je l8818
	push "serce_part2"
	cthis showhintitem
	push "anserce_part_2"
	cthis showhint
	ret
	jmp l8817
l8818:
	push "anpopexit"
	cthis showhint
l8817:
l8815:
l8813:
	end method
	end game

	game mg12_winogrona
	parent Banshee
	method init
	push "mg12_winogrona"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "ramka.pyz 6"
	push "popexit.pyz 7"
	push "winogrona.pyz 8"
	cthis imgs=
	cthis butpopexit
	push "anwinogrona"
	cthis setasitemtopck
	cthis stdstart
	push A
	push "bgrwiatrN 30"
	cthis sfxs=
	end method
	method anwinogrona_TAKE
	push "winogrona"
	cthis isvisible_itempopup
	neg
	cmp0
	je l8820
	push "winogrona"
	push "anwinogrona"
	cthis show_itempopup
	jmp l8819
l8820:
	push "winogrona"
	cthis hide_itempopup
	push "winogrona"
	cthis item_takecenter
l8819:
	end method
	method anwinogrona_INPCK
	cthis set_mg_finished
	cthis timfinito
	end method
	method mend
	push "ad12_latajacecosna"
	push "gamead12_latajacecosna0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "anpopexit"
	cthis showhint
	end method
	end game

	game mg12_jagody
	parent Banshee
	method init
	push "mg12_jagody"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "pop_bkg.pyz 6"
	push "kielich_brzeg.pyz 16"
	push "jagoda_ok.pyz 17"
	push "jagoda_bad.pyz 18"
	push "jagoda_bad2.pyz 19"
	push "jagoda_bad3.pyz 20"
	push "maska_9.pyz 12"
	push "maska_8.pyz 23"
	push "maska_7.pyz 14"
	push "maska_6.pyz 25"
	push "maska_5.pyz 26"
	push "maska_4.pyz 27"
	push "maska_3.pyz 28"
	push "maska_2.pyz 29"
	push "maska_1.pyz 10"
	push "kielich_move.pyz 33"
	push "pasek_postepu.pyz 40"
	push "jagoda_1.pyzH 41"
	push "jagoda_2.pyzH 41"
	push "jagoda_3.pyzH 41"
	push "jagoda_4.pyzH 41"
	push "jagoda_5.pyzH 41"
	push "jagoda_6.pyzH 41"
	push "jagoda_7.pyzH 41"
	push "jagoda_8.pyzH 41"
	push "jagoda_9.pyzH 41"
	push "jagoda_10.pyzH 41"
	push "jagoda_11.pyzH 41"
	push "jagoda_12.pyzH 41"
	push "winogrona.pyzH 46"
	push "ramka.pyz 56"
	push "popexit.pyz 57"
	cthis imgs=
	new int,start_pos
	call anpop_bkg,getpy
	pop start_pos
	new int,minx
	call anpop_bkg,getpx
	push 30
	pop $b
	popax
	add $a,$b
	pop minx
	new int,maxx
	call anpop_bkg,getpx
	call anpop_bkg,getw
	pop $b
	popax
	add $a,$b
	push 50
	pop $b
	popax
	sub $a,$b
	pop maxx
	new int,zakres
	push maxx
	push minx
	pop $b
	popax
	sub $a,$b
	pop zakres
	new int,rand_x
	push zakres
	spushs
	spop $h
	call $h,rand
	push minx
	pop $b
	popax
	add $a,$b
	pop rand_x
	new int,good_speed
	push 4
	pop good_speed
	new int,score
	push 0
	pop score
	new int,lastscore
	push 1
	popax
	sub 0,$a
	pop lastscore
	new int,won
	push 0
	pop won
	cthis butpopexit
	push A
	push "bgrwiatrN 30"
	push "blyskotkiN 15"
	push "lokacja006_kropla1"
	push "retitem"
	cthis sfxs=
	push "ad12a"
	cthis askopis
	call anaskopis,hide
	call anpopexit,getcx
	call anaskopis,getw
	pop $b
	popax
	add $a,$b
	call anpopexit,getcy
	call anaskopis,geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call anaskopis,ansetbpos
	push "taken_kielich"
	call clsave,bis
	neg
	cmp0
	je l8822
	push "e1_mg12_jagody_kielich_used"
	call clsave,bis
	neg
	jmp l8824
l8822:
	push 0
	jmp l8824
l8823:
	push 1
l8824:
	cmp0
	je l8825
	call ankielich_move,hide
	push "sndstart"
	push "mg12_jagody_1"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call sndstart,addmethod
	push "sndstart"
	cthis cbplay
	jmp l8821
l8825:
	push "e1_mg12_jagody_kielich_used"
	call clsave,bis
	neg
	cmp0
	je l8827
	push "kielich"
	cthis removefrompck
	push "e1_mg12_jagody_kielich_used"
	call clsave,bset
	call guihint,switchtoskip
	call anaskopis,show
l8827:
	new ImgRect,koszyk
	call koszyk,mg12_jagody0
	push "anwinogrona"
	cthis setasitemtopck
	push maxx
	call anpop_bkg,getcy
	push 100
	pop $b
	popax
	add $a,$b
	call ankielich_move,setpos
	push maxx
	call anpop_bkg,getcy
	push 100
	pop $b
	popax
	add $a,$b
	call ankielich_brzeg,setpos
	push maxx
	push 60
	pop $b
	popax
	sub $a,$b
	call anpop_bkg,getcy
	push 30
	pop $b
	popax
	add $a,$b
	call koszyk,setpos
	push rand_x
	push start_pos
	call anjagoda_ok,ansetbpos
	push zakres
	spushs
	spop $h
	call $h,rand
	push minx
	pop $b
	popax
	add $a,$b
	pop rand_x
	push rand_x
	push start_pos
	call anjagoda_bad,ansetbpos
	push zakres
	spushs
	spop $h
	call $h,rand
	push minx
	pop $b
	popax
	add $a,$b
	pop rand_x
	push rand_x
	push start_pos
	call anjagoda_bad2,ansetbpos
	push zakres
	spushs
	spop $h
	call $h,rand
	push minx
	pop $b
	popax
	add $a,$b
	pop rand_x
	push rand_x
	push start_pos
	call anjagoda_bad3,ansetbpos
	push "timjagoda"
	push "mg12_jagody1"
	cthis cycle=
	call timjagoda,play
	push "timjagoda_bad"
	push "mg12_jagody2"
	cthis cycle=
	call timjagoda_bad,play
	push "timjagoda_bad2"
	push "mg12_jagody3"
	cthis cycle=
	push "timejagoda2"
	push 500
	push "mg12_jagody4"
	cthis timplay
	push "timjagoda_bad3"
	push "mg12_jagody5"
	cthis cycle=
	push "timejagoda3"
	push 900
	push "mg12_jagody6"
	cthis timplay
l8821:
	cthis stdstart
	end method
	method mg12_jagody0
	cthis Button_isin
	push 0
	push 0
	push 100
	push 20
	cthis setrect
	push 300
	cthis setz
	cthis getname
	call butgame,add
	end method
	method mg12_jagody1
	push 0
	push good_speed
	call anjagoda_ok,move
	localdef $1
	push igmapph
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push 140
	pop $b
	popax
	add $a,$b
	pop $1
	call anjagoda_ok,getpy
	push $1
	cmpja
	cmp0
	jne l8830
	call anjagoda_ok,getpx
	call anjagoda_ok,getpy
	push 1
	push 1
	call koszyk,isin
	jmp l8831
l8829:
	push 0
	jmp l8831
l8830:
	push 1
l8831:
	cmp0
	je l8832
	call anjagoda_ok,getpy
	push $1
	cmpja
	cmp0
	je l8834
	push 0
	cthis update_score
	jmp l8833
l8834:
	push 1
	cthis update_score
l8833:
	push won
	neg
	cmp0
	je l8836
	push 5
	spushs
	spop $h
	call $h,rand
	push 4
	pop $b
	popax
	add $a,$b
	pop good_speed
	push zakres
	spushs
	spop $h
	call $h,rand
	push minx
	pop $b
	popax
	add $a,$b
	pop rand_x
	push rand_x
	push start_pos
	call anjagoda_ok,ansetbpos
	call timjagoda,play
l8836:
	jmp l8828
l8832:
	push won
	neg
	cmp0
	je l8838
	cthis play
l8838:
l8828:
	end method
	method mg12_jagody2
	push 0
	push 7
	call anjagoda_bad,move
	localdef $1
	push igmapph
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push 140
	pop $b
	popax
	add $a,$b
	pop $1
	call anjagoda_bad,getpy
	push $1
	cmpja
	cmp0
	jne l8841
	call anjagoda_bad,getpx
	call anjagoda_bad,getpy
	push 1
	push 1
	call koszyk,isin
	jmp l8842
l8840:
	push 0
	jmp l8842
l8841:
	push 1
l8842:
	cmp0
	je l8843
	call anjagoda_bad,getpy
	push $1
	cmpja
	cmp0
	je l8845
	push 0
	cthis update_score
	jmp l8844
l8845:
	push 1
	popax
	sub 0,$a
	cthis update_score
l8844:
	push won
	neg
	cmp0
	je l8847
	push zakres
	spushs
	spop $h
	call $h,rand
	push minx
	pop $b
	popax
	add $a,$b
	pop rand_x
	push rand_x
	push start_pos
	call anjagoda_bad,ansetbpos
	call timjagoda_bad,play
l8847:
	jmp l8839
l8843:
	push won
	neg
	cmp0
	je l8849
	cthis play
l8849:
l8839:
	end method
	method mg12_jagody3
	push 0
	push 8
	call anjagoda_bad2,move
	localdef $1
	push igmapph
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push 140
	pop $b
	popax
	add $a,$b
	pop $1
	call anjagoda_bad2,getpy
	push $1
	cmpja
	cmp0
	jne l8852
	call anjagoda_bad2,getpx
	call anjagoda_bad2,getpy
	push 1
	push 1
	call koszyk,isin
	jmp l8853
l8851:
	push 0
	jmp l8853
l8852:
	push 1
l8853:
	cmp0
	je l8854
	call anjagoda_bad2,getpy
	push $1
	cmpja
	cmp0
	je l8856
	push 0
	cthis update_score
	jmp l8855
l8856:
	push 1
	popax
	sub 0,$a
	cthis update_score
l8855:
	push won
	neg
	cmp0
	je l8858
	push zakres
	spushs
	spop $h
	call $h,rand
	push minx
	pop $b
	popax
	add $a,$b
	pop rand_x
	push rand_x
	push start_pos
	call anjagoda_bad2,ansetbpos
	call timjagoda_bad2,play
l8858:
	jmp l8850
l8854:
	push won
	neg
	cmp0
	je l8860
	cthis play
l8860:
l8850:
	end method
	method mg12_jagody4
	call timjagoda_bad2,play
	end method
	method mg12_jagody5
	push 0
	push 9
	call anjagoda_bad3,move
	localdef $1
	push igmapph
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push 140
	pop $b
	popax
	add $a,$b
	pop $1
	call anjagoda_bad3,getpy
	push $1
	cmpja
	cmp0
	jne l8863
	call anjagoda_bad3,getpx
	call anjagoda_bad3,getpy
	push 1
	push 1
	call koszyk,isin
	jmp l8864
l8862:
	push 0
	jmp l8864
l8863:
	push 1
l8864:
	cmp0
	je l8865
	call anjagoda_bad3,getpy
	push $1
	cmpja
	cmp0
	je l8867
	push 0
	cthis update_score
	jmp l8866
l8867:
	push 1
	popax
	sub 0,$a
	cthis update_score
l8866:
	push won
	neg
	cmp0
	je l8869
	push zakres
	spushs
	spop $h
	call $h,rand
	push minx
	pop $b
	popax
	add $a,$b
	pop rand_x
	push rand_x
	push start_pos
	call anjagoda_bad3,ansetbpos
	call timjagoda_bad3,play
l8869:
	jmp l8861
l8865:
	push won
	neg
	cmp0
	je l8871
	cthis play
l8871:
l8861:
	end method
	method mg12_jagody6
	call timjagoda_bad3,play
	end method
	method mouse_move
	push "e1_mg12_jagody_kielich_used"
	call clsave,bis
	neg
	cmp0
	je l8873
	ret
l8873:
	push won
	neg
	cmp0
	je l8875
	call mouse,getpos
	push 0
	push 0
	call anpop_bkg,isin
	jmp l8877
l8875:
	push 0
	jmp l8877
l8876:
	push 1
l8877:
	cmp0
	je l8878
	localint $1
	call mouse,getposx
	pop $1
	push $1
	push minx
	cmpjl
	cmp0
	je l8880
	push minx
	pop $1
l8880:
	push $1
	push maxx
	cmpja
	cmp0
	je l8882
	push maxx
	pop $1
l8882:
	push "ankielich_move"
	spushs
	push $1
	call anpop_bkg,getcy
	push 100
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	push "ankielich_brzeg"
	spushs
	push $1
	call anpop_bkg,getcy
	push 100
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	push $1
	push 60
	pop $b
	popax
	sub $a,$b
	call anpop_bkg,getcy
	push 30
	pop $b
	popax
	add $a,$b
	call koszyk,setpos
l8878:
	end method
	method mend
	push "ad12_latajacecosna"
	push "gamead12_latajacecosna0"
	cthis stdexitdefadv
	end method
	method update_score
	localint $1
	pop $1
	push $1
	push 0
	cmpja
	cmp0
	je l8884
	call fxlokacja006_kropla1,play
	jmp l8883
l8884:
	push $1
	push 0
	cmpjl
	cmp0
	je l8886
	call fxretitem,play
l8886:
l8883:
	push $1
	popax
	add score,$a
	pop score
	push score
	push 1
	cmpjl
	cmp0
	je l8888
	push 0
	pop score
	jmp l8887
l8888:
	push score
	push 11
	cmpja
	cmp0
	je l8890
	push 12
	pop score
l8890:
l8887:
	localint $2
	push 1
	pop $2
l8891:
	push $2
	push 13
	cmpjl
	cmp0
	je l8892
	jmp l8894
l8893:
	add $2,1
	pop $2
	jmp l8891
l8894:
	push $2
	push score
	cmpjle
	cmp0
	je l8896
	push $2
	push score
	cmpje
	cmp0
	je l8898
	push score
	push lastscore
	cmpjne
	jmp l8900
l8898:
	push 0
	jmp l8900
l8899:
	push 1
l8900:
	cmp0
	je l8901
	push "anjagoda_"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push 200
	push "null"
	spop $a
	call [$a],anfadein
	jmp l8897
l8901:
	push "anjagoda_"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],show
l8897:
	jmp l8895
l8896:
	push "anjagoda_"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],hide
l8895:
	jmp l8893
l8892:
	push score
	pop lastscore
	push score
	push 12
	cmpjae
	cmp0
	je l8903
	push 1
	pop won
	push 600
	push "null"
	call anjagoda_ok,anfadeout
	push 600
	push "null"
	call anjagoda_bad,anfadeout
	push 600
	push "null"
	call anjagoda_bad2,anfadeout
	push 600
	push "null"
	call anjagoda_bad3,anfadeout
	push "timejagoda2"
	push 600
	push "mg12_jagody7"
	cthis timplay
l8903:
	end method
	method mg12_jagody7
	push "winogrona"
	push "anwinogrona"
	cthis popitem_gotocenterobj
	call ankielich_move,hide
	call ankielich_brzeg,hide
	end method
	method anwinogrona_INPCK
	cthis set_mg_finished
	push "winogrona"
	cthis addtopck
	cthis timfinito
	end method
	method HINT_CLICK
	push "anpopexit"
	cthis showhint
	end method
	method SKIP_CLICK
	cthis advstdstate
	cmp0
	je l8905
	push 13
	pop score
l8905:
	end method
	end game

	game mg12_studnia
	parent Banshee
	method init
	new int,offsetx
	push 10
	popax
	sub 0,$a
	pop offsetx
	new int,offsety
	push 10
	popax
	sub 0,$a
	pop offsety
	cthis checktouchpad
	cmp0
	je l8907
	push 10
	popax
	sub 0,$a
	pop offsetx
	push 30
	popax
	sub 0,$a
	pop offsety
l8907:
	new string,act_id
	push "empty"
	pop act_id
	push "mg12_studnia"
	clparent Banshee,init
	push A
	push "bkg.jpg 0"
	push "popup_bkg.pyz 1"
	push "wlew.pyzH 2"
	push "slot_1.pyzH 3"
	push "slot_2.pyzH 3"
	push "slot_3.pyzH 3"
	push "slot_4.pyzH 3"
	push "slot_5.pyzH 3"
	push "slot_6.pyzH 3"
	push "slot_7.pyzH 3"
	push "slot_8.pyzH 3"
	push "slot_9.pyzH 3"
	push "slot_10.pyzH 3"
	push "slot_11.pyzH 3"
	push "slot_12.pyzH 3"
	push "slot_13.pyzH 3"
	push "slot_14.pyzH 3"
	push "1.pyz 4"
	push "2.pyz 4"
	push "3.pyz 4"
	push "4.pyz 4"
	push "5.pyz 4"
	push "6.pyz 4"
	push "7.pyz 4"
	push "8.pyz 4"
	push "9.pyz 4"
	push "10.pyz 4"
	push "11.pyz 4"
	push "12.pyz 4"
	push "13.pyz 4"
	push "14.pyz 4"
	push "final.pyzH 5"
	push "anim_coord.pyzH 45"
	push "final_bkg.pyzH 46"
	push "nakladka.pyz 48"
	push "rune_5.pyzH 49"
	push "popexit.pyz 55"
	cthis imgs=
	call imgbkg,mg12_studnia0
	cthis butpopexit
	push "mg12"
	cthis askopis
	call anaskopis,hide
	call anpopexit,getcx
	call anaskopis,getw
	pop $b
	popax
	add $a,$b
	call anpopexit,getcy
	call anaskopis,geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call anaskopis,ansetbpos
	push "snd_final"
	push "kinnat_c2d2_2e"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_final,addmethod
	push "anrune_5"
	cthis setasitemtopck
	push A
	push "bgrwiatrN 30"
	push "click"
	push "wylewanie"
	cthis sfxs=
	push "e1_mg12_studnia_won"
	call clsave,bis
	cmp0
	je l8911
	push "e1_mg12_studnia_runa_to_take"
	call clsave,bis
	neg
	cmp0
	je l8913
	call annakladka,hide
l8913:
	call anfinal,show
	jmp l8910
l8911:
	push "onfinish"
	push "mg12_studnia3"
	call anfinal,addmethod
	call guihint,switchtoskip
	call anaskopis,show
l8910:
	push "e1_mg12_studnia_napelniona"
	call clsave,bis
	neg
	cmp0
	je l8915
	call anwlew,mg12_studnia4
	new Film,filmb
	push "mus"
	call filmb,musicclass=
	push "onfinish"
	push "mg12_studnia7"
	call filmb,addmethod
	push "scripts/cs12_studnia/"
	push "film"
	call filmb,load
	call filmb,showfirstframe
	push 49
	call filmb,setz
	call ananim_coord,getpx
	call ananim_coord,getpy
	call filmb,setpos
	call filmb,hide
	call anslot_1,mg12_studnia8
	call anslot_2,mg12_studnia9
	call anslot_3,mg12_studnia10
	call anslot_4,mg12_studnia11
	call anslot_5,mg12_studnia12
	call anslot_6,mg12_studnia13
	call anslot_7,mg12_studnia14
	call anslot_8,mg12_studnia15
	call anslot_9,mg12_studnia16
	call anslot_10,mg12_studnia17
	call anslot_11,mg12_studnia18
	call anslot_12,mg12_studnia19
	call anslot_13,mg12_studnia20
	call anslot_14,mg12_studnia21
	push "1"
	push "14"
	cthis init_block
	push "2"
	push "13"
	cthis init_block
	push "3"
	push "12"
	cthis init_block
	push "4"
	push "11"
	cthis init_block
	push "5"
	push "10"
	cthis init_block
	push "6"
	push "9"
	cthis init_block
	push "7"
	push "8"
	cthis init_block
	push "8"
	push "7"
	cthis init_block
	push "9"
	push "6"
	cthis init_block
	push "10"
	push "5"
	cthis init_block
	push "11"
	push "4"
	cthis init_block
	push "12"
	push "3"
	cthis init_block
	push "13"
	push "2"
	cthis init_block
	push "14"
	push "1"
	cthis init_block
	localint $1
	push 1
	pop $1
l8921:
	push $1
	push 14
	cmpjle
	cmp0
	je l8922
	jmp l8924
l8923:
	add $1,1
	pop $1
	jmp l8921
l8924:
	push "e1_mg12_studnia_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_good"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l8926
	push "anslot_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push "good"
	spop $a
	call [$a],obj_id=
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	call butgame,removebut
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],hide
	push "anslot_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],show
l8926:
	push "e1_mg12_studnia_slot_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_obj_id"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l8928
	localstring $2
	push "e1_mg12_studnia_slot_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_obj_id"
	pop $b
	popax
	add $a,$b
	call clsave,get
	pop $2
	push $2
	push "good"
	cmpjne
	cmp0
	je l8930
	push $2
	push "empty"
	cmpje
	cmp0
	je l8932
	push "e1_mg12_studnia_act_id"
	call clsave,get
	pop $2
l8932:
	push "anslot_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push $2
	spop $a
	call [$a],obj_id=
	push "an"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push "anslot_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getcx
	push "anslot_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getcy
	spop $a
	call [$a],setpos
	push "an"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push A
	push "id"
	push $2
	push "slot"
	push $1
	spop $a
	call [$a],vars2
l8930:
l8928:
	jmp l8923
l8922:
	jmp l8914
l8915:
	localint $1
	push 1
	pop $1
l8933:
	push $1
	push 14
	cmpjle
	cmp0
	je l8934
	jmp l8936
l8935:
	add $1,1
	pop $1
	jmp l8933
l8936:
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],hide
	jmp l8935
l8934:
	call anfinal_bkg,show
	push "takenan_anrune_5"
	call clsave,bis
	neg
	cmp0
	je l8938
	call anrune_5,show
l8938:
l8914:
	cthis stdstart
	end method
	method mg12_studnia0
	push "isbutin"
	push "mg12_studnia1"
	cthis addmethod
	push "butclick"
	push "mg12_studnia2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg12_studnia1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpopup_bkg,isin
	neg
	end method
	method mg12_studnia2
	cthis advstdstate
	neg
	cmp0
	je l8909
	ret
l8909:
	cthis mend
	end method
	method mg12_studnia3
	push "snd_final"
	cthis cbplay
	end method
	method mg12_studnia4
	cthis Button_isinvis
	push "butmoveon"
	push "mg12_studnia5"
	cthis addmethod
	push "butmoveoff"
	push "mg12_studnia6"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg12_studnia5
	push "e1_mg12_studnia_napelniona"
	call clsave,bis
	neg
	cmp0
	je l8917
	push "e1_mg12_studnia_won"
	call clsave,bis
	jmp l8919
l8917:
	push 0
	jmp l8919
l8918:
	push 1
l8919:
	cmp0
	je l8920
	push "use"
	call advmouse,set
	jmp l8916
l8920:
	call advmouse,setstd
l8916:
	end method
	method mg12_studnia6
	call advmouse,setstd
	end method
	method mg12_studnia7
	cthis hide
	call anfinal_bkg,show
	call annakladka,show
	call anrune_5,show
	push "e1_mg12_studnia_runa_to_take"
	call clsave,bset
	end method
	method mg12_studnia8
	cthis Button_isinvis
	push A
	push "id"
	push "1"
	push "obj_id"
	push "empty"
	cthis vars2
	cthis getname
	call butgame,add
	end method
	method mg12_studnia9
	cthis Button_isinvis
	push A
	push "id"
	push "2"
	push "obj_id"
	push "empty"
	cthis vars2
	cthis getname
	call butgame,add
	end method
	method mg12_studnia10
	cthis Button_isinvis
	push A
	push "id"
	push "3"
	push "obj_id"
	push "empty"
	cthis vars2
	cthis getname
	call butgame,add
	end method
	method mg12_studnia11
	cthis Button_isinvis
	push A
	push "id"
	push "4"
	push "obj_id"
	push "empty"
	cthis vars2
	cthis getname
	call butgame,add
	end method
	method mg12_studnia12
	cthis Button_isinvis
	push A
	push "id"
	push "5"
	push "obj_id"
	push "empty"
	cthis vars2
	cthis getname
	call butgame,add
	end method
	method mg12_studnia13
	cthis Button_isinvis
	push A
	push "id"
	push "6"
	push "obj_id"
	push "empty"
	cthis vars2
	cthis getname
	call butgame,add
	end method
	method mg12_studnia14
	cthis Button_isinvis
	push A
	push "id"
	push "7"
	push "obj_id"
	push "empty"
	cthis vars2
	cthis getname
	call butgame,add
	end method
	method mg12_studnia15
	cthis Button_isinvis
	push A
	push "id"
	push "8"
	push "obj_id"
	push "empty"
	cthis vars2
	cthis getname
	call butgame,add
	end method
	method mg12_studnia16
	cthis Button_isinvis
	push A
	push "id"
	push "9"
	push "obj_id"
	push "empty"
	cthis vars2
	cthis getname
	call butgame,add
	end method
	method mg12_studnia17
	cthis Button_isinvis
	push A
	push "id"
	push "10"
	push "obj_id"
	push "empty"
	cthis vars2
	cthis getname
	call butgame,add
	end method
	method mg12_studnia18
	cthis Button_isinvis
	push A
	push "id"
	push "11"
	push "obj_id"
	push "empty"
	cthis vars2
	cthis getname
	call butgame,add
	end method
	method mg12_studnia19
	cthis Button_isinvis
	push A
	push "id"
	push "12"
	push "obj_id"
	push "empty"
	cthis vars2
	cthis getname
	call butgame,add
	end method
	method mg12_studnia20
	cthis Button_isinvis
	push A
	push "id"
	push "12"
	push "obj_id"
	push "empty"
	cthis vars2
	cthis getname
	call butgame,add
	end method
	method mg12_studnia21
	cthis Button_isinvis
	push A
	push "id"
	push "12"
	push "obj_id"
	push "empty"
	cthis vars2
	cthis getname
	call butgame,add
	end method
	method init_block
	localstring $1
	localstring $2
	pop $2
	pop $1
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	push $2
	spop $a
	call [$a],mg12_studnia22
	end method
	method mg12_studnia22
	localstring $1
	localstring $2
	pop $2
	pop $1
	cthis show
	push "anslot_"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getcx
	push "anslot_"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getcy
	cthis setpos
	push A
	push "id"
	push $1
	push "slot"
	push $2
	cthis vars2
	push "anslot_"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	cthis id
	spop $a
	call [$a],obj_id=
	cthis Button_isinvis
	push "butmoveon"
	push "mg12_studnia23"
	cthis addmethod
	push "butmoveoff"
	push "mg12_studnia24"
	cthis addmethod
	push "butclick"
	push "mg12_studnia25"
	cthis addmethod
	cthis checktouchpad
	cmp0
	je l8977
	push "butrel"
	push "mg12_studnia26"
	cthis addmethod
l8977:
	cthis getname
	call butgame,add
	end method
	method mg12_studnia23
	push "e1_mg12_studnia_won"
	call clsave,bis
	neg
	cmp0
	je l8940
	push "take"
	call advmouse,set
	jmp l8939
l8940:
	call advmouse,setstd
l8939:
	end method
	method mg12_studnia24
	call advmouse,setstd
	end method
	method mg12_studnia25
	cthis advstdstate
	neg
	cmp0
	jne l8943
	cthis is_mg_finished
	jmp l8944
l8942:
	push 0
	jmp l8944
l8943:
	push 1
l8944:
	cmp0
	je l8945
	ret
l8945:
	call mouse,getpos
	push 0
	push 0
	call anslot_1,isin
	cmp0
	je l8947
	push "1"
	cthis click_slot
	jmp l8946
l8947:
	call mouse,getpos
	push 0
	push 0
	call anslot_2,isin
	cmp0
	je l8949
	push "2"
	cthis click_slot
	jmp l8948
l8949:
	call mouse,getpos
	push 0
	push 0
	call anslot_3,isin
	cmp0
	je l8951
	push "3"
	cthis click_slot
	jmp l8950
l8951:
	call mouse,getpos
	push 0
	push 0
	call anslot_4,isin
	cmp0
	je l8953
	push "4"
	cthis click_slot
	jmp l8952
l8953:
	call mouse,getpos
	push 0
	push 0
	call anslot_5,isin
	cmp0
	je l8955
	push "5"
	cthis click_slot
	jmp l8954
l8955:
	call mouse,getpos
	push 0
	push 0
	call anslot_6,isin
	cmp0
	je l8957
	push "6"
	cthis click_slot
	jmp l8956
l8957:
	call mouse,getpos
	push 0
	push 0
	call anslot_7,isin
	cmp0
	je l8959
	push "7"
	cthis click_slot
	jmp l8958
l8959:
	call mouse,getpos
	push 0
	push 0
	call anslot_8,isin
	cmp0
	je l8961
	push "8"
	cthis click_slot
	jmp l8960
l8961:
	call mouse,getpos
	push 0
	push 0
	call anslot_9,isin
	cmp0
	je l8963
	push "9"
	cthis click_slot
	jmp l8962
l8963:
	call mouse,getpos
	push 0
	push 0
	call anslot_10,isin
	cmp0
	je l8965
	push "10"
	cthis click_slot
	jmp l8964
l8965:
	call mouse,getpos
	push 0
	push 0
	call anslot_11,isin
	cmp0
	je l8967
	push "11"
	cthis click_slot
	jmp l8966
l8967:
	call mouse,getpos
	push 0
	push 0
	call anslot_12,isin
	cmp0
	je l8969
	push "12"
	cthis click_slot
	jmp l8968
l8969:
	call mouse,getpos
	push 0
	push 0
	call anslot_13,isin
	cmp0
	je l8971
	push "13"
	cthis click_slot
	jmp l8970
l8971:
	call mouse,getpos
	push 0
	push 0
	call anslot_14,isin
	cmp0
	je l8973
	push "14"
	cthis click_slot
	jmp l8972
l8973:
	cthis checktouchpad
	cmp0
	je l8975
	cthis id
	cthis backtobase
l8975:
l8972:
l8970:
l8968:
l8966:
l8964:
l8962:
l8960:
l8958:
l8956:
l8954:
l8952:
l8950:
l8948:
l8946:
	end method
	method mg12_studnia26
	cthis butclick
	end method
	method backtobase
	localint $1
	pop $1
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push "anslot_"
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],slot
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getcx
	push "anslot_"
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],slot
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getcy
	spop $a
	call [$a],setpos
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 4
	spop $a
	call [$a],setz
	localdef $2
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],slot
	pop $2
	push "anslot_"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	spop $a
	call [$a],obj_id=
	push "empty"
	pop act_id
	push "e1_mg12_studnia_slot_"
	push $2
	pop $b
	popax
	add $a,$b
	push "_obj_id"
	pop $b
	popax
	add $a,$b
	push "anslot_"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],obj_id
	call clsave,set
	end method
	method mouse_move
	push act_id
	push "empty"
	cmpjne
	cmp0
	je l8979
	localdef $1
	call mouse,getposx
	push offsetx
	pop $b
	popax
	add $a,$b
	pop $1
	localdef $2
	call mouse,getposy
	push offsety
	pop $b
	popax
	add $a,$b
	pop $2
	push "an"
	push act_id
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	push $2
	spop $a
	call [$a],setpos
l8979:
	end method
	method save_slot
	ret
	end method
	method load_slot
	ret
	end method
	method click_slot
	localstring $1
	pop $1
	push "e1_mg12_studnia_won"
	call clsave,bis
	cmp0
	je l8981
	ret
l8981:
	push "anslot_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],obj_id
	push "good"
	cmpje
	cmp0
	je l8983
	push act_id
	push "empty"
	cmpjne
	cmp0
	je l8985
	cthis checktouchpad
	jmp l8987
l8985:
	push 0
	jmp l8987
l8986:
	push 1
l8987:
	cmp0
	je l8988
	push act_id
	cthis backtobase
	call butgame,sort
	ret
	jmp l8984
l8988:
	ret
l8984:
l8983:
	call fxclick,play
	push "anslot_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],obj_id
	push "empty"
	cmpje
	cmp0
	je l8990
	cthis checktouchpad
	neg
	jmp l8992
l8990:
	push 0
	jmp l8992
l8991:
	push 1
l8992:
	cmp0
	je l8993
	push "anslot_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push act_id
	spop $a
	call [$a],obj_id=
	push "an"
	push act_id
	pop $b
	popax
	add $a,$b
	spushs
	push "anslot_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getcx
	push "anslot_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getcy
	spop $a
	call [$a],setpos
	push "an"
	push act_id
	pop $b
	popax
	add $a,$b
	spushs
	push 4
	spop $a
	call [$a],setz
	push $1
	cthis check_good
	push "e1_mg12_studnia_slot_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_obj_id"
	pop $b
	popax
	add $a,$b
	push "anslot_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],obj_id
	call clsave,set
	push "empty"
	pop act_id
	jmp l8989
l8993:
	push "anslot_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],obj_id
	push "empty"
	cmpjne
	cmp0
	je l8995
	push act_id
	push "empty"
	cmpjne
	jmp l8997
l8995:
	push 0
	jmp l8997
l8996:
	push 1
l8997:
	cmp0
	je l8998
	cthis checktouchpad
	cmp0
	je l9000
	localstring $2
	push "anslot_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],obj_id
	pop $2
	push "anslot_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push act_id
	spop $a
	call [$a],obj_id=
	push "an"
	push act_id
	pop $b
	popax
	add $a,$b
	spushs
	push "anslot_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getcx
	push "anslot_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getcy
	spop $a
	call [$a],setpos
	push "an"
	push act_id
	pop $b
	popax
	add $a,$b
	spushs
	push 4
	spop $a
	call [$a],setz
	localdef $3
	push "an"
	push act_id
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],slot
	pop $3
	push "an"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push $3
	spop $a
	call [$a],slot=
	push "an"
	push act_id
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	spop $a
	call [$a],slot=
	push "anslot_"
	push $3
	pop $b
	popax
	add $a,$b
	spushs
	push $2
	spop $a
	call [$a],obj_id=
	push "an"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push 4
	spop $a
	call [$a],setz
	push "an"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push "anslot_"
	push $3
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getcx
	push "anslot_"
	push $3
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getcy
	spop $a
	call [$a],setpos
	push $1
	cthis check_good
	push $2
	cthis check_good
	push "e1_mg12_studnia_slot_"
	push $3
	pop $b
	popax
	add $a,$b
	push "_obj_id"
	pop $b
	popax
	add $a,$b
	push "anslot_"
	push $3
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],obj_id
	call clsave,set
	push "empty"
	pop act_id
	jmp l8999
l9000:
	localstring $4
	push "anslot_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],obj_id
	pop $4
	push "anslot_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push act_id
	spop $a
	call [$a],obj_id=
	push "an"
	push act_id
	pop $b
	popax
	add $a,$b
	spushs
	push "anslot_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getcx
	push "anslot_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getcy
	spop $a
	call [$a],setpos
	push "an"
	push act_id
	pop $b
	popax
	add $a,$b
	spushs
	push 4
	spop $a
	call [$a],setz
	push $4
	pop act_id
	push "an"
	push act_id
	pop $b
	popax
	add $a,$b
	spushs
	push 150
	spop $a
	call [$a],setz
	push "an"
	push act_id
	pop $b
	popax
	add $a,$b
	spushs
	push "anslot_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getcx
	push offsetx
	pop $b
	popax
	add $a,$b
	push "anslot_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getcy
	push offsety
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	push $1
	cthis check_good
l8999:
	jmp l8994
l8998:
	push "anslot_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],obj_id
	pop act_id
	cthis checktouchpad
	neg
	cmp0
	je l9002
	push "anslot_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push "empty"
	spop $a
	call [$a],obj_id=
l9002:
	push "an"
	push act_id
	pop $b
	popax
	add $a,$b
	spushs
	push 150
	spop $a
	call [$a],setz
	push "an"
	push act_id
	pop $b
	popax
	add $a,$b
	spushs
	call mouse,getposx
	push offsetx
	pop $b
	popax
	add $a,$b
	call mouse,getposy
	push offsety
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	call butgame,sort
l8994:
l8989:
	call butgame,sort
	cthis checktouchpad
	neg
	cmp0
	je l9004
	push "e1_mg12_studnia_act_id"
	push act_id
	call clsave,set
l9004:
	push "e1_mg12_studnia_slot_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_obj_id"
	pop $b
	popax
	add $a,$b
	push "anslot_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],obj_id
	call clsave,set
	end method
	method check_good
	localstring $1
	pop $1
	push "anslot_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],obj_id
	push $1
	cmpje
	cmp0
	je l9006
	push "anslot_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push "good"
	spop $a
	call [$a],obj_id=
	push "anslot_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],show
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],hide
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	call butgame,removebut
	push "e1_mg12_studnia_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_good"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	call advmouse,setstd
l9006:
	cthis check_won
	cmp0
	je l9008
	cthis set_won
l9008:
	end method
	method check_won
	localint $1
	push 1
	pop $1
l9009:
	push $1
	push 14
	cmpjle
	cmp0
	je l9010
	jmp l9012
l9011:
	add $1,1
	pop $1
	jmp l9009
l9012:
	push "anslot_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],obj_id
	push "good"
	cmpjne
	cmp0
	je l9014
	push 0
	ret
l9014:
	jmp l9011
l9010:
	push 1
	ret
	end method
	method set_won
	call fxwylewanie,play
	push "e1_mg12_studnia_won"
	call clsave,bset
	call annakladka,hide
	push 1
	call anfinal,play
	end method
	method play_movie
	call filmb,play
	end method
	method anrune_5_TAKE
	push "runa"
	cthis stackitem_topck
	cthis set_mg_finished
	end method
	method anrune_5_INPCK
	push "runa"
	cthis additemtostack
	cthis timfinito
	end method
	method USE_rondel_z_woda
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call anwlew,isin
	cmp0
	je l9016
	push "e1_mg12_studnia_won"
	call clsave,bis
	cmp0
	je l9016
	push "e1_mg12_studnia_napelniona"
	call clsave,bis
	neg
	jmp l9018
l9016:
	push 0
	jmp l9018
l9017:
	push 1
l9018:
	cmp0
	je l9019
	push "anwlew"
	call butgame,removebut
	cthis item_gotopck
	push "e1_mg12_studnia_napelniona"
	call clsave,bset
	call advmouse,setstd
	cthis play_movie
	jmp l9015
l9019:
	cthis item_gotopck
l9015:
	end method
	method SKIP_CLICK
	cthis advstdstate
	cmp0
	je l9021
	cthis set_won
	push 500
	push "null"
	call anaskopis,anfadeout
	call guihint,switchtohint
l9021:
	end method
	method mend
	push "ad12_latajacecoszabrama"
	push "gamead12_latajacecoszabrama0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "e1_mg12_studnia_napelniona"
	call clsave,bis
	neg
	cmp0
	je l9023
	push "taken_rondel_z_woda"
	call clsave,bis
	jmp l9025
l9023:
	push 0
	jmp l9025
l9024:
	push 1
l9025:
	cmp0
	je l9026
	push "anwlew"
	cthis showhint
	push "rondel_z_woda"
	cthis showhintitem
	jmp l9022
l9026:
	push "e1_mg12_studnia_napelniona"
	call clsave,bis
	cmp0
	je l9028
	push "takenan_anrune_5"
	call clsave,bis
	neg
	jmp l9030
l9028:
	push 0
	jmp l9030
l9029:
	push 1
l9030:
	cmp0
	je l9031
	push "anrune_5"
	cthis showhint
	jmp l9027
l9031:
	push "anpopexit"
	cthis showhint
l9027:
l9022:
	end method
	end game

	game mg13_wejscie
	parent Banshee
	method init
	push "mg13_wejscie"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "bkg_fire.pyzH 3"
	push "uchwyt.pyzH 4"
	push "pochodnia.pyzH 5"
	push "pochodnia_mask.pyzH 6"
	push "fire.pyzH 7"
	push "fire_mask.pyzH 8"
	push "ramka.pyz 54"
	push "popexit.pyz 55"
	cthis imgs=
	push A
	push "bgrwiatrN 30"
	cthis sfxs=
	push "e1_mg13_wejscie_pochodnia_zapalona"
	call clsave,bis
	neg
	cmp0
	je l9033
	push "snd_pochodnia_put"
	push "kinnat_c2d2_4c"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_pochodnia_put,addmethod
	push "snd_pochodnia_place"
	push "kinnat_c2d2_4ba"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_pochodnia_place,addmethod
l9033:
	call imgbkg,mg13_wejscie0
	cthis butpopexit
	push "e1_mg13_wejscie_pochodnia_zapalona"
	call clsave,bis
	neg
	cmp0
	je l9037
	call anuchwyt,mg13_wejscie3
l9037:
	push "e1_mg13_wejscie_pochodnia_zapalona"
	call clsave,bis
	neg
	cmp0
	je l9039
	call anpochodnia_mask,mg13_wejscie6
l9039:
	push "e1_mg13_wejscie_pochodnia_wlozona"
	call clsave,bis
	cmp0
	je l9046
	call anpochodnia,show
l9046:
	push "e1_mg13_wejscie_pochodnia_zapalona"
	call clsave,bis
	cmp0
	je l9048
	call anbkg_fire,show
	push 0
	call anfire,play
	call anfire_mask,show
l9048:
	cthis stdstart
	end method
	method mg13_wejscie0
	push "isbutin"
	push "mg13_wejscie1"
	cthis addmethod
	push "butclick"
	push "mg13_wejscie2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg13_wejscie1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpopup_bkg,isin
	neg
	end method
	method mg13_wejscie2
	cthis advstdstate
	neg
	cmp0
	je l9035
	ret
l9035:
	cthis mend
	end method
	method mg13_wejscie3
	cthis Button_isinvis
	push "butmoveon"
	push "mg13_wejscie4"
	cthis addmethod
	push "butmoveoff"
	push "mg13_wejscie5"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg13_wejscie4
	push "use"
	call advmouse,set
	end method
	method mg13_wejscie5
	call advmouse,setstd
	end method
	method mg13_wejscie6
	cthis Button_isinvis
	push "butmoveon"
	push "mg13_wejscie7"
	cthis addmethod
	push "butmoveoff"
	push "mg13_wejscie8"
	cthis addmethod
	push "butclick"
	push "mg13_wejscie9"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg13_wejscie7
	push "use"
	call advmouse,set
	end method
	method mg13_wejscie8
	call advmouse,setstd
	end method
	method mg13_wejscie9
	cthis advstdstate
	neg
	cmp0
	jne l9042
	push "e1_mg13_wejscie_pochodnia_zapalona"
	call clsave,bis
	jmp l9043
l9041:
	push 0
	jmp l9043
l9042:
	push 1
l9043:
	cmp0
	je l9044
	ret
l9044:
	push "snd_pochodnia_place"
	cthis cbplay
	end method
	method USE_pochodnia_ogien
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call anuchwyt,isin
	cmp0
	je l9050
	push "pochodnia_ogien"
	cthis removefrompck
	push 200
	push "null"
	call anpochodnia,anfadein
	push "anuchwyt"
	call butgame,removebut
	push "e1_mg13_wejscie_pochodnia_wlozona"
	call clsave,bset
	push "snd_pochodnia_put"
	cthis cbplay
	push "e1_mg13_wejscie_pochodnia_zapalona"
	call clsave,bset
	push "taken_pochodnia_ogien"
	push 0
	call clsave,set
	call advmouse,setstd
	call anbkg_fire,show
	push 0
	call anfire,play
	call anfire_mask,show
	cthis set_mg_finished
	cthis timfinito
	call advmouse,setstd
	jmp l9049
l9050:
	cthis advsetstdstate
	cthis item_gotopck
l9049:
	end method
	method mend
	push "ad13_wiszacymost"
	push "gamead13_wiszacymost0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "ma_pochodnia_ogien"
	call clsave,bis
	cmp0
	je l9052
	push "pochodnia_ogien"
	cthis showhintitem
	push "anuchwyt"
	cthis showhint
	jmp l9051
l9052:
	push "anpopexit"
	cthis showhint
l9051:
	end method
	end game

	game mg14_drzewo
	parent Banshee
	method init
	push "mg14_drzewo"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "rubin_anim.pyzH 3"
	push "rubin_1.pyzH 4"
	push "ramka.pyz 22"
	push "popexit.pyz 23"
	cthis imgs=
	push A
	push "bgrwiatrN 30"
	cthis sfxs=
	cthis butpopexit
	call imgbkg,mg14_drzewo0
	push "taken_rubin_1"
	call clsave,bis
	neg
	cmp0
	je l9056
	push "anrubin_1"
	cthis setasitemtopck
	call anrubin_1,show
	call anrubin_anim,show
	call anrubin_anim,anopacityframe
	push 1
	call anrubin_anim,play
l9056:
	cthis stdstart
	end method
	method mg14_drzewo0
	push "isbutin"
	push "mg14_drzewo1"
	cthis addmethod
	push "butclick"
	push "mg14_drzewo2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg14_drzewo1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anramka,isin
	neg
	end method
	method mg14_drzewo2
	cthis advstdstate
	neg
	cmp0
	je l9054
	ret
l9054:
	cthis mend
	end method
	method anrubin_1_TAKE
	push 0
	call anrubin_anim,stop
	call anrubin_anim,hide
	push "rubin_1"
	cthis popitem_gotocenter
	cthis set_mg_finished
	end method
	method anrubin_1_INPCK
	push "rubin_1"
	cthis addtopck
	cthis timfinito
	end method
	method mend
	push "ad14_wielkiedrzewo"
	push "gamead14_wielkiedrzewo0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "taken_rubin_1"
	call clsave,bis
	neg
	cmp0
	je l9058
	push "anrubin_1"
	cthis showhint
	jmp l9057
l9058:
	push "anpopexit"
	cthis showhint
l9057:
	end method
	end game

	game mg14_sowa
	parent Banshee
	method init
	push "mg14_sowa"
	clparent Banshee,init
	push "engine"
	call mus,smixer=
	new int,popup2_open
	push A
	push "bkg.jpg 0"
	push "popup_bkg.pyz 1"
	push "sowa_body.pyz 3"
	push "runa2.pyz 4"
	push "sowa_head.pyz 4"
	push "sowa_oczy.pyz 5"
	push "medalion_sowa1.pyzH 6"
	push "medalion_sowa2.pyzH 7"
	push "ramka.pyz 20"
	push "popexit.pyz 21"
	push "popup2_bkg.pyzH 24"
	push "popup2_medalion.pyzH 25"
	push "popup2_medalion_sowa1.pyzH 26"
	push "popup2_medalion_sowa2.pyzH 27"
	push "popup2_ramka.pyzH 39"
	push "popup2_popexit.pyzH 40"
	push "sowa_lot.pyzH 41"
	cthis imgs=
	push A
	push "bgrwiatrN 30"
	push "sowa4 20"
	push "podswietl"
	push "sowa1 30"
	push "putitem1 10"
	push "a3"
	cthis sfxs=
	cthis butpopexit
	call imgbkg,mg14_sowa0
	push "takenan_anruna2"
	call clsave,bis
	neg
	cmp0
	je l9065
	push "anruna2"
	cthis setasitemtopck
	jmp l9064
l9065:
	call anruna2,hide
l9064:
	call anruna2,mg14_sowa3
	push "butmoveon"
	push "mg14_sowa6"
	call anpopexit,addmethod
	call anpopup2_popexit,mg14_sowa7
	push "onfinish"
	push "mg14_sowa11"
	call ansowa_lot,addmethod
	push save_prefix
	push "sowa_odleciala"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l9077
	call ansowa_body,mg14_sowa12
l9077:
	push save_prefix
	push "sowa_odleciala"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l9089
	push 0
	call ansowa_oczy,play
	push 0
	call ansowa_head,play
l9089:
	push "e1_mg14_medalion_completed"
	call clsave,bis
	neg
	cmp0
	je l9091
	call anpopup2_medalion,mg14_sowa17
l9091:
	push save_prefix
	push "medalion_sowa1_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l9103
	call anmedalion_sowa1,show
l9103:
	push save_prefix
	push "medalion_sowa2_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l9105
	call anmedalion_sowa2,show
l9105:
	push save_prefix
	push "sowa_odleciala"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l9107
	call anmedalion_sowa1,hide
	call anmedalion_sowa2,hide
	call ansowa_body,hide
	call ansowa_head,hide
	push 0
	call ansowa_head,stop
	call ansowa_oczy,hide
	push 0
	call ansowa_oczy,stop
l9107:
	push "snd_intro"
	push "kinnat_c2d2_5b"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_intro,addmethod
	push save_prefix
	push "intro_spoken"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l9109
	push save_prefix
	push "intro_spoken"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	push "n016"
	cthis stdpiorko
l9109:
	push "snd_medalion"
	push "kinnat_c2d2_5b"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_medalion,addmethod
	push "snd_medalion_miejsce"
	push "kinnat_c2d2_5c"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_medalion_miejsce,addmethod
	cthis stdstart
	end method
	method mg14_sowa0
	push "isbutin"
	push "mg14_sowa1"
	cthis addmethod
	push "butclick"
	push "mg14_sowa2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg14_sowa1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpopup_bkg,isin
	neg
	cmp0
	je l9059
	push $1
	push $2
	push 1
	push 1
	call anpopup2_bkg,isin
	neg
	jmp l9061
l9059:
	push 0
	jmp l9061
l9060:
	push 1
l9061:
	end method
	method mg14_sowa2
	cthis advstdstate
	neg
	cmp0
	je l9063
	ret
l9063:
	cthis mend
	end method
	method mg14_sowa3
	push "butmoveon"
	push "mg14_sowa4"
	cthis addmethod
	push "butmoveoff"
	push "mg14_sowa5"
	cthis addmethod
	end method
	method mg14_sowa4
	push popup2_open
	cmp0
	je l9067
	call advmouse,setstd
	jmp l9066
l9067:
	push "take"
	call advmouse,set
l9066:
	end method
	method mg14_sowa5
	call advmouse,setstd
	end method
	method mg14_sowa6
	push popup2_open
	cmp0
	je l9069
	ret
l9069:
	call advmouse,setstd
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	end method
	method mg14_sowa7
	cthis Button_isinalpha
	push "butmoveon"
	push "mg14_sowa8"
	cthis addmethod
	push "butmoveoff"
	push "mg14_sowa9"
	cthis addmethod
	push "butclick"
	push "mg14_sowa10"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg14_sowa8
	push popup2_open
	neg
	cmp0
	je l9071
	ret
l9071:
	call advmouse,setstd
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	end method
	method mg14_sowa9
	push popup2_open
	neg
	cmp0
	je l9073
	ret
l9073:
	call advmouse,setstd
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	end method
	method mg14_sowa10
	push popup2_open
	neg
	cmp0
	je l9075
	ret
l9075:
	cthis close_popup2
	end method
	method mg14_sowa11
	push 800
	push "null"
	cthis anfadeout
	cthis advsetstdstate
	end method
	method mg14_sowa12
	push "isbutin"
	push "mg14_sowa13"
	cthis addmethod
	push "butmoveon"
	push "mg14_sowa14"
	cthis addmethod
	push "butmoveoff"
	push "mg14_sowa15"
	cthis addmethod
	push "butclick"
	push "mg14_sowa16"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg14_sowa13
	localint $1
	localint $2
	pop $2
	pop $1
	cthis advstdstate
	cmp0
	je l9078
	push $1
	push $2
	push 0
	push 0
	cthis isin
	jmp l9080
l9078:
	push 0
	jmp l9080
l9079:
	push 1
l9080:
	end method
	method mg14_sowa14
	push popup2_open
	neg
	cmp0
	je l9082
	push "loupe"
	call advmouse,set
	jmp l9081
l9082:
	call advmouse,setstd
l9081:
	end method
	method mg14_sowa15
	call advmouse,setstd
	end method
	method mg14_sowa16
	cthis advstdstate
	neg
	cmp0
	jne l9085
	push popup2_open
	jmp l9086
l9084:
	push 0
	jmp l9086
l9085:
	push 1
l9086:
	cmp0
	je l9087
	ret
l9087:
	call advmouse,setbut
	cthis open_popup2
	call advmouse,setstd
	end method
	method mg14_sowa17
	push "isbutin"
	push "mg14_sowa18"
	cthis addmethod
	push "butmoveon"
	push "mg14_sowa19"
	cthis addmethod
	push "butmoveoff"
	push "mg14_sowa20"
	cthis addmethod
	push "butclick"
	push "mg14_sowa21"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg14_sowa18
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	cmp0
	je l9092
	push popup2_open
	jmp l9094
l9092:
	push 0
	jmp l9094
l9093:
	push 1
l9094:
	end method
	method mg14_sowa19
	push popup2_open
	cmp0
	je l9096
	push "use"
	call advmouse,set
	jmp l9095
l9096:
	call advmouse,setstd
l9095:
	end method
	method mg14_sowa20
	call advmouse,setstd
	end method
	method mg14_sowa21
	push popup2_open
	cmp0
	je l9098
	push "e1_mg14_medalion_completed"
	call clsave,bis
	neg
	jmp l9100
l9098:
	push 0
	jmp l9100
l9099:
	push 1
l9100:
	cmp0
	je l9101
	push "snd_medalion_miejsce"
	cthis cbplay
l9101:
	end method
	method anruna2_TAKE
	push popup2_open
	cmp0
	je l9111
	ret
l9111:
	push save_prefix
	push "sowa_odleciala"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l9113
	push "runa"
	cthis stackitem_topck
	cthis set_mg_finished
	jmp l9112
l9113:
	push "snd_intro"
	cthis cbplay
	call fxsowa4,play
l9112:
	end method
	method anruna2_INPCK
	push "runa"
	cthis additemtostack
	cthis timfinito
	end method
	method open_popup2
	push 1
	pop popup2_open
	call anpopup2_bkg,show
	call anpopup2_ramka,show
	call anpopup2_popexit,show
	push save_prefix
	push "medalion_sowa1_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l9115
	call anpopup2_medalion_sowa1,show
l9115:
	push save_prefix
	push "medalion_sowa2_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l9117
	call anpopup2_medalion_sowa2,show
l9117:
	push save_prefix
	push "intro_2_spoken"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l9119
	push "snd_medalion"
	cthis cbplay
	push save_prefix
	push "intro_2_spoken"
	pop $b
	popax
	add $a,$b
	call clsave,bset
l9119:
	end method
	method close_popup2
	push 0
	pop popup2_open
	call anpopup2_bkg,hide
	call anpopup2_ramka,hide
	call anpopup2_popexit,hide
	call anpopup2_medalion_sowa1,hide
	call anpopup2_medalion_sowa2,hide
	cthis advsetstdstate
	call advmouse,setstd
	end method
	method USE_medalion_sowa1
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call anpopup2_medalion,isin
	cmp0
	je l9121
	push "medalion_sowa1"
	cthis removefrompck
	call anmedalion_sowa1,show
	push 800
	push "null"
	call anpopup2_medalion_sowa1,anfadein
	push save_prefix
	push "medalion_sowa1_on"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	cthis check_all_done
	cmp0
	je l9123
	cthis sowa_leci
	jmp l9122
l9123:
	call fxpodswietl,play
	call fxputitem1,play
l9122:
	jmp l9120
l9121:
	cthis item_gotopck
l9120:
	end method
	method USE_medalion_sowa2
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call anpopup2_medalion,isin
	cmp0
	je l9125
	push "medalion_sowa2"
	cthis removefrompck
	call anmedalion_sowa2,show
	push 200
	push "null"
	call anpopup2_medalion_sowa2,anfadein
	push save_prefix
	push "medalion_sowa2_on"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	cthis check_all_done
	cmp0
	je l9127
	cthis sowa_leci
	jmp l9126
l9127:
	call fxputitem1,play
	call fxpodswietl,play
l9126:
	jmp l9124
l9125:
	cthis item_gotopck
l9124:
	end method
	method check_all_done
	push save_prefix
	push "medalion_sowa1_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l9129
	push save_prefix
	push "medalion_sowa2_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	jmp l9131
l9129:
	push 0
	jmp l9131
l9130:
	push 1
l9131:
	cmp0
	je l9132
	push 1
	ret
l9132:
	push 0
	ret
	end method
	method sowa_leci
	cthis close_popup2
	call fxa3,play
	push "ansowa_body"
	call butgame,removebut
	push save_prefix
	push "sowa_odleciala"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	call fxsowa1,play
	call anmedalion_sowa1,hide
	call anmedalion_sowa2,hide
	call anpopup2_medalion_sowa1,hide
	call anpopup2_medalion_sowa1,hide
	push 600
	push "null"
	call ansowa_body,anfadeout
	push 600
	push "null"
	call ansowa_head,anfadeout
	push 0
	call ansowa_head,stop
	push 600
	push "sowa_anim"
	call ansowa_oczy,anfadeout
	push 0
	call ansowa_oczy,stop
	end method
	method sowa_anim
	push 0
	call ansowa_lot,play
	end method
	method mend
	push "ad14_wielkiedrzewo"
	push "gamead14_wielkiedrzewo0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "ma_medalion_sowa1"
	call clsave,bis
	cmp0
	jne l9135
	push "ma_medalion_sowa2"
	call clsave,bis
	jmp l9136
l9134:
	push 0
	jmp l9136
l9135:
	push 1
l9136:
	cmp0
	je l9137
	push "ma_medalion_sowa1"
	call clsave,bis
	cmp0
	je l9139
	push popup2_open
	cmp0
	je l9141
	push "anpopup2_medalion"
	cthis showhint
	push "medalion_sowa1"
	cthis showhintitem
	jmp l9140
l9141:
	push "ansowa_body"
	cthis showhint
l9140:
	jmp l9138
l9139:
	push "ma_medalion_sowa2"
	call clsave,bis
	cmp0
	je l9143
	push popup2_open
	cmp0
	je l9145
	push "medalion_sowa2"
	cthis showhintitem
	push "anpopup2_medalion"
	cthis showhint
	jmp l9144
l9145:
	push "ansowa_body"
	cthis showhint
l9144:
l9143:
l9138:
	jmp l9133
l9137:
	push save_prefix
	push "sowa_odleciala"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l9147
	push "takenan_anruna2"
	call clsave,bis
	neg
	jmp l9149
l9147:
	push 0
	jmp l9149
l9148:
	push 1
l9149:
	cmp0
	je l9150
	push "anruna2"
	cthis showhint
	jmp l9146
l9150:
	push "anpopexit"
	cthis showhint
l9146:
l9133:
	end method
	end game

	game mg15_brama
	parent Banshee
	method init
	push "mg15_brama"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "but_1.pyz 3"
	push "but_2.pyz 3"
	push "but_3.pyz 3"
	push "but_4.pyz 3"
	push "but_5.pyz 3"
	push "but_6.pyz 3"
	push "but_7.pyz 3"
	push "but_8.pyz 3"
	push "seq_1.pyzH 3"
	push "seq_2.pyzH 3"
	push "seq_3.pyzH 3"
	push "seq_4.pyzH 3"
	push "seq_5.pyzH 3"
	push "seq_6.pyzH 3"
	push "seq_7.pyzH 3"
	push "seq_8.pyzH 3"
	push "seq_bad_1.pyzH 4"
	push "seq_bad_2.pyzH 4"
	push "seq_bad_3.pyzH 4"
	push "seq_bad_4.pyzH 4"
	push "seq_bad_5.pyzH 4"
	push "seq_bad_6.pyzH 4"
	push "seq_bad_7.pyzH 4"
	push "seq_bad_8.pyzH 4"
	push "seq_good.pyzH 4"
	push "seq_bad.pyzH 5"
	push "anim_1.pyz 6"
	push "anim_2.pyzH 7"
	push "runy_mask.pyz 8"
	push "ramka.pyz 22"
	push "popexit.pyz 23"
	cthis imgs=
	push A
	push "bgrwiatrN 10"
	push "butclick2"
	push "magic1 20"
	push "closinggate 30"
	push "cant_use02 20"
	cthis sfxs=
	cthis butpopexit
	cthis butpopexitisinramka
	push "mg15"
	cthis askopis
	call anaskopis,hide
	cthis butpopexit
	call anpopexit,getcx
	call anaskopis,getw
	pop $b
	popax
	add $a,$b
	call anpopexit,getcy
	call anaskopis,geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call anaskopis,ansetbpos
	new int,sequence_no
	push 1
	pop sequence_no
	new int,sequence_step
	push 0
	pop sequence_step
	new int,sequence_finish
	push 0
	pop sequence_finish
	new int,sequence_show
	push 0
	pop sequence_show
	new int,next_level
	push 0
	pop next_level
	new int,blend_time
	push 800
	pop blend_time
	new int,start_delay
	push 2000
	pop start_delay
	new vector,sequence
	push "tim1"
	push start_delay
	push "mg15_brama0"
	cthis timer=
	push "tim2"
	push start_delay
	push blend_time
	push 2
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	push "mg15_brama2"
	cthis timer=
	push "tim3"
	push start_delay
	push blend_time
	push 4
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	push "mg15_brama4"
	cthis timer=
	push "tim4"
	push start_delay
	push blend_time
	push 6
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	push "mg15_brama7"
	cthis timer=
	push "tim5"
	push start_delay
	push "mg15_brama10"
	cthis timer=
	push "tim6"
	push start_delay
	push blend_time
	push 2
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	push "mg15_brama12"
	cthis timer=
	push "tim7"
	push start_delay
	push blend_time
	push 4
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	push "mg15_brama14"
	cthis timer=
	push "tim8"
	push start_delay
	push blend_time
	push 6
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	push "mg15_brama16"
	cthis timer=
	push "tim9"
	push start_delay
	push "mg15_brama19"
	cthis timer=
	push "tim10"
	push start_delay
	push blend_time
	push 2
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	push "mg15_brama21"
	cthis timer=
	push "tim11"
	push start_delay
	push blend_time
	push 4
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	push "mg15_brama23"
	cthis timer=
	push "tim12"
	push start_delay
	push blend_time
	push 6
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	push "mg15_brama25"
	cthis timer=
	new vector,act_sequence
	push "begin"
	push 4
	push 1
	push 8
	call act_sequence,beginadd
	localint $1
	push 1
	pop $1
l9151:
	push $1
	push 8
	cmpjle
	cmp0
	je l9152
	jmp l9154
l9153:
	add $1,1
	pop $1
	jmp l9151
l9154:
	push "anbut_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push "isbutin"
	push "mg15_brama28"
	spop $a
	call [$a],addmethod
	push "anbut_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push "butmoveon"
	push "mg15_brama29"
	spop $a
	call [$a],addmethod
	push "anbut_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push "butmoveoff"
	push "mg15_brama30"
	spop $a
	call [$a],addmethod
	push "anbut_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push A
	push "selected"
	push 0
	spop $a
	call [$a],vars2
	push "anbut_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push A
	push "id"
	push $1
	spop $a
	call [$a],vars2
	push "anbut_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push "butclick"
	push "mg15_brama31"
	spop $a
	call [$a],addmethod
	push "anbut_"
	push $1
	pop $b
	popax
	add $a,$b
	call butgame,add
	jmp l9153
l9152:
	push "e1_mg15_brama_runy_uzyte"
	call clsave,bis
	cmp0
	je l9164
	push 1
	pop sequence_show
	call anruny_mask,hide
	push "time_start"
	push 200
	push "mg15_brama32"
	cthis timplay
	call guihint,switchtoskip
	call anaskopis,show
	jmp l9163
l9164:
	push "ma_runa_8"
	call clsave,bis
	neg
	cmp0
	je l9166
	push "snd_brak_runow"
	push "kinnat_c2d2_5"
	cthis newsndfree
	push "onfinish"
	push "mg15_brama33"
	call snd_brak_runow,addmethod
	push save_prefix
	push "intro_spoken"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l9168
	push "OB11"
	cthis show_objective
	push save_prefix
	push "intro_spoken"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	push "n018"
	cthis stdpiorko
l9168:
l9166:
	call anruny_mask,mg15_brama34
l9163:
	cthis stdstart
	end method
	method mg15_brama0
	push blend_time
	push "mg15_brama1"
	call anseq_4,anfadein
	end method
	method mg15_brama1
	push blend_time
	push "null"
	call anseq_4,anfadeout
	end method
	method mg15_brama2
	push blend_time
	push "mg15_brama3"
	call anseq_1,anfadein
	end method
	method mg15_brama3
	push blend_time
	push "null"
	call anseq_1,anfadeout
	end method
	method mg15_brama4
	push blend_time
	push "mg15_brama5"
	call anseq_8,anfadein
	end method
	method mg15_brama5
	push blend_time
	push "mg15_brama6"
	call anseq_8,anfadeout
	end method
	method mg15_brama6
	push 0
	pop sequence_show
	end method
	method mg15_brama7
	push blend_time
	push "mg15_brama8"
	call anseq_8,anfadein
	end method
	method mg15_brama8
	push blend_time
	push "mg15_brama9"
	call anseq_8,anfadeout
	end method
	method mg15_brama9
	push 0
	pop sequence_show
	end method
	method mg15_brama10
	push blend_time
	push "mg15_brama11"
	call anseq_3,anfadein
	end method
	method mg15_brama11
	push blend_time
	push "null"
	call anseq_3,anfadeout
	end method
	method mg15_brama12
	push blend_time
	push "mg15_brama13"
	call anseq_6,anfadein
	end method
	method mg15_brama13
	push blend_time
	push "null"
	call anseq_6,anfadeout
	end method
	method mg15_brama14
	push blend_time
	push "mg15_brama15"
	call anseq_8,anfadein
	end method
	method mg15_brama15
	push blend_time
	push "null"
	call anseq_8,anfadeout
	end method
	method mg15_brama16
	push blend_time
	push "mg15_brama17"
	call anseq_1,anfadein
	end method
	method mg15_brama17
	push blend_time
	push "mg15_brama18"
	call anseq_1,anfadeout
	end method
	method mg15_brama18
	push 0
	pop sequence_show
	end method
	method mg15_brama19
	push blend_time
	push "mg15_brama20"
	call anseq_4,anfadein
	end method
	method mg15_brama20
	push blend_time
	push "null"
	call anseq_4,anfadeout
	end method
	method mg15_brama21
	push blend_time
	push "mg15_brama22"
	call anseq_3,anfadein
	end method
	method mg15_brama22
	push blend_time
	push "null"
	call anseq_3,anfadeout
	end method
	method mg15_brama23
	push blend_time
	push "mg15_brama24"
	call anseq_8,anfadein
	end method
	method mg15_brama24
	push blend_time
	push "null"
	call anseq_8,anfadeout
	end method
	method mg15_brama25
	push blend_time
	push "mg15_brama26"
	call anseq_7,anfadein
	end method
	method mg15_brama26
	push blend_time
	push "mg15_brama27"
	call anseq_7,anfadeout
	end method
	method mg15_brama27
	push 0
	pop sequence_show
	end method
	method mg15_brama28
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 1
	cthis isin
	cmp0
	je l9155
	push sequence_show
	neg
	cmp0
	je l9155
	push sequence_finish
	neg
	jmp l9157
l9155:
	push 0
	jmp l9157
l9156:
	push 1
l9157:
	end method
	method mg15_brama29
	call advmouse,setbut
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	end method
	method mg15_brama30
	call advmouse,setstd
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	end method
	method mg15_brama31
	push selected
	cmp0
	jne l9160
	push sequence_finish
	jmp l9161
l9159:
	push 0
	jmp l9161
l9160:
	push 1
l9161:
	cmp0
	je l9162
	ret
l9162:
	push 1
	pop selected
	call fxbutclick2,play
	cthis hide
	push id
	cthis add_to_sequence
	end method
	method mg15_brama32
	cthis play_sequence_1
	end method
	method mg15_brama33
	cthis advsetstdstate
	call anruny_mask,butmoveon
	end method
	method mg15_brama34
	cthis Button_isinvisalpha
	push "butmoveon"
	push "mg15_brama35"
	cthis addmethod
	push "butmoveoff"
	push "mg15_brama36"
	cthis addmethod
	push "butclick"
	push "mg15_brama37"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg15_brama35
	push "e1_mg15_brama_runy_uzyte"
	call clsave,bis
	neg
	cmp0
	je l9170
	push "use"
	call advmouse,set
l9170:
	end method
	method mg15_brama36
	call advmouse,setstd
	end method
	method mg15_brama37
	cthis advstdstate
	neg
	cmp0
	je l9172
	ret
l9172:
	push "e1_mg15_brama_runy_uzyte"
	call clsave,bis
	neg
	cmp0
	je l9174
	push "ma_runa_8"
	call clsave,bis
	neg
	jmp l9176
l9174:
	push 0
	jmp l9176
l9175:
	push 1
l9176:
	cmp0
	je l9177
	push "snd_brak_runow"
	cthis cbplay
l9177:
	end method
	method mend
	push "ad15_schody"
	push "gamead15_schody0"
	cthis stdexitdefadv
	end method
	method USE_runa_8
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call anruny_mask,isin
	cmp0
	je l9179
	push "runa_8"
	cthis removefrompck
	push "e1_mg15_brama_runy_uzyte"
	call clsave,bset
	push 1
	pop sequence_show
	push "time_start"
	push 200
	push "mg15_brama38"
	cthis timplay
	call advmouse,setstd
	call guihint,switchtoskip
	call anaskopis,show
	push "anruny_mask"
	call butgame,removebut
	push "OB11"
	cthis objective_done
	jmp l9178
l9179:
	cthis item_gotopck
l9178:
	end method
	method mg15_brama38
	push 400
	push "mg15_brama39"
	call anruny_mask,anfadeout
	end method
	method mg15_brama39
	cthis play_sequence_1
	end method
	method add_to_sequence
	localint $1
	pop $1
	push $1
	call sequence,add
	add sequence_step,1
	pop sequence_step
	push sequence_step
	call act_sequence,size
	cmpjae
	cmp0
	je l9181
	push 1
	pop sequence_finish
	cthis check_sequence
l9181:
	end method
	method check_sequence
	localint $1
	push 0
	pop $1
	localint $2
	push 0
	pop $2
l9182:
	push $2
	call act_sequence,size
	cmpjl
	cmp0
	je l9183
	jmp l9185
l9184:
	add $2,1
	pop $2
	jmp l9182
l9185:
	localstring $3
	push $2
	call sequence,get
	pop $3
	localstring $4
	push $2
	call act_sequence,get
	pop $4
	push $3
	push $4
	cmpje
	cmp0
	je l9187
	push "anseq_"
	push $4
	pop $b
	popax
	add $a,$b
	spushs
	push 800
	push "mg15_brama40"
	spop $a
	call [$a],anfadein
	jmp l9186
l9187:
	push "anseq_bad_"
	push $4
	pop $b
	popax
	add $a,$b
	spushs
	push 800
	push "mg15_brama41"
	spop $a
	call [$a],anfadein
	push 1
	pop $1
l9186:
	jmp l9184
l9183:
	push $1
	cmp0
	je l9189
	call fxcant_use02,play
	push 800
	push "mg15_brama42"
	call anseq_bad,anfadein
	jmp l9188
l9189:
	call fxmagic1,play
	push 1
	pop next_level
	push 800
	push "mg15_brama44"
	call anseq_good,anfadein
l9188:
	end method
	method mg15_brama40
	push 800
	push "null"
	cthis anfadeout
	end method
	method mg15_brama41
	push 800
	push "null"
	cthis anfadeout
	end method
	method mg15_brama42
	push 800
	push "mg15_brama43"
	cthis anfadeout
	end method
	method mg15_brama43
	cthis reset_game
	end method
	method mg15_brama44
	push 800
	push "mg15_brama45"
	cthis anfadeout
	end method
	method mg15_brama45
	cthis reset_game
	end method
	method reset_game
	localint $1
	push 0
	pop $1
l9190:
	push $1
	call sequence,size
	cmpjl
	cmp0
	je l9191
	jmp l9193
l9192:
	add $1,1
	pop $1
	jmp l9190
l9193:
	localstring $2
	push $1
	call sequence,get
	pop $2
	push "anbut_"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push 400
	push "null"
	spop $a
	call [$a],anfadein
	push "anbut_"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push 0
	spop $a
	call [$a],selected=
	jmp l9192
l9191:
	push 0
	pop sequence_finish
	push 0
	pop sequence_step
	push 0
	pop sequence_show
	call sequence,free
	call act_sequence,free
	push next_level
	cmp0
	je l9195
	push 0
	pop next_level
	add sequence_no,1
	pop sequence_no
	push sequence_no
	push 2
	cmpje
	cmp0
	je l9197
	call fxclosinggate,play
	push 0
	call ananim_1,play
	push "begin"
	push 3
	push 6
	push 8
	push 1
	call act_sequence,beginadd
	cthis play_sequence_2
	jmp l9196
l9197:
	push sequence_no
	push 3
	cmpje
	cmp0
	je l9199
	call fxclosinggate,play
	push 0
	call ananim_2,play
	push "begin"
	push 4
	push 3
	push 8
	push 7
	call act_sequence,beginadd
	cthis play_sequence_3
	jmp l9198
l9199:
	cthis finish
l9198:
l9196:
	jmp l9194
l9195:
	push sequence_no
	push 1
	cmpje
	cmp0
	je l9201
	push "begin"
	push 4
	push 1
	push 8
	call act_sequence,beginadd
	cthis play_sequence_1
	jmp l9200
l9201:
	push sequence_no
	push 2
	cmpje
	cmp0
	je l9203
	push "begin"
	push 3
	push 6
	push 8
	push 1
	call act_sequence,beginadd
	cthis play_sequence_2
	jmp l9202
l9203:
	push "begin"
	push 4
	push 3
	push 8
	push 7
	call act_sequence,beginadd
	cthis play_sequence_3
l9202:
l9200:
l9194:
	end method
	method play_sequence_1
	push 1
	pop sequence_show
	call tim1,play
	call tim2,play
	call tim3,play
	end method
	method play_sequence_2
	push 1
	pop sequence_show
	call tim5,play
	call tim6,play
	call tim7,play
	call tim8,play
	end method
	method play_sequence_3
	push 1
	pop sequence_show
	call tim9,play
	call tim10,play
	call tim11,play
	call tim12,play
	end method
	method finish
	push "OB11"
	cthis objective_done
	cthis set_mg_finished
	push "cs15_brama"
	push "-def"
	push "ad20_zamekdrzewo"
	cthis watch_film
	end method
	method SKIP_CLICK
	cthis advstdstate
	cmp0
	je l9205
	cthis finish
l9205:
	end method
	method HINT_CLICK
	push "ma_runa_8"
	call clsave,bis
	cmp0
	je l9207
	push "e1_mg15_brama_runy_uzyte"
	call clsave,bis
	neg
	jmp l9209
l9207:
	push 0
	jmp l9209
l9208:
	push 1
l9209:
	cmp0
	je l9210
	push "anruny_mask"
	cthis showhint
	push "runa_8"
	cthis showhintitem
	jmp l9206
l9210:
	push "e1_mg15_brama_runy_uzyte"
	call clsave,bis
	cmp0
	je l9212
	push "anseq_4"
	cthis showhint
	jmp l9211
l9212:
	push "anpopexit"
	cthis showhint
l9211:
l9206:
	end method
	end game

	game mg001_witryna
	parent Banshee
	method init
	push "mg001_witryna"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "popup_ramka.pyz 3"
	push "okladka_2v.pyzH 4"
	push "blask.pyzH 5"
	push "popexit.pyz 5"
	cthis imgs=
	cthis butpopexit
	push A
	push "gwarludziN 40"
	cthis sfxs=
	call imgbkg,mg001_witryna0
	push "snd_ksiazka"
	push "kinnat_c0d0_0a"
	cthis newsndfree
	push "onfinish"
	push "mg001_witryna3"
	call snd_ksiazka,addmethod
	push "anokladka_2v"
	cthis gui_toloupe
	call anokladka_2v,anhideonsetframe
	call anokladka_2v,mg001_witryna4
	push "mg001_witryna9"
	call ccs,enter
	end method
	method mg001_witryna0
	push "isbutin"
	push "mg001_witryna1"
	cthis addmethod
	push "butclick"
	push "mg001_witryna2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg001_witryna1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpopup_bkg,isin
	neg
	end method
	method mg001_witryna2
	cthis advstdstate
	neg
	cmp0
	je l9214
	ret
l9214:
	cthis mend
	end method
	method mg001_witryna3
	push "e1_mg001_witryna_po_snd_ksiazka"
	call clsave,bset
	cthis advsetstdtate
	push "GAME_acttutorial"
	call clsave,get
	push "T2bexitglass"
	cmpjne
	cmp0
	je l9216
	push "GAME_acttutorial"
	call clsave,get
	push "T2bexitglass_pad"
	cmpjne
	jmp l9218
l9216:
	push 0
	jmp l9218
l9217:
	push 1
l9218:
	cmp0
	je l9219
	cthis timfinito
l9219:
	end method
	method mg001_witryna4
	push "isbutin"
	push "mg001_witryna5"
	cthis addmethod
	push "butclick"
	push "mg001_witryna6"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg001_witryna5
	localint $1
	localint $2
	pop $2
	pop $1
	cthis advstdstate
	cmp0
	je l9220
	push $1
	push $2
	push 0
	push 0
	cthis isin
	cmp0
	je l9220
	cthis loupe_visible
	jmp l9222
l9220:
	push 0
	jmp l9222
l9221:
	push 1
l9222:
	end method
	method mg001_witryna6
	push "e1_mg001_witryna_okladka_2v_clicked"
	call clsave,bis
	neg
	cmp0
	je l9224
	push 400
	push "mg001_witryna7"
	call anblask,anfadein
	push "snd_ksiazka"
	cthis cbplay
	cthis checktouchpad
	cmp0
	je l9228
	push "T2bexitglass_pad"
	cthis ctutpos
	cthis show_tutorial
	jmp l9227
l9228:
	push "T2bexitglass"
	cthis ctutpos
	cthis show_tutorial
l9227:
	push "e1_mg001_witryna_okladka_2v_clicked"
	call clsave,bset
l9224:
	end method
	method mg001_witryna7
	push 2500
	push "mg001_witryna8"
	call anblask,anfadeout
	end method
	method mg001_witryna8
	cthis enabled_tutorial
	neg
	cmp0
	je l9226
	cthis hide_loupe
l9226:
	end method
	method mg001_witryna9
	push "e1_mg001_witryna_okladka_2v_clicked"
	call clsave,bis
	neg
	cmp0
	je l9230
	cthis checktouchpad
	cmp0
	je l9232
	push "T2rclick_pad"
	cthis rtutpos
	cthis show_tutorial
	jmp l9231
l9232:
	push "T2rclick"
	cthis rtutpos
	cthis show_tutorial
l9231:
	push "guiglass"
	push "rd"
	cthis tutpoint
l9230:
	cthis advsetstdstate
	end method
	method mend
	push "ad001_kszew"
	push "gamead001_kszew0"
	cthis stdexitdefadv
	end method
	method LOUPE_SHOW
	push "e1_mg001_witryna_okladka_2v_clicked"
	call clsave,bis
	neg
	cmp0
	je l9234
	push "T2aglass"
	cthis tutpos
	cthis show_tutorial
l9234:
	end method
	method LOUPE_HIDE
	push "GAME_acttutorial"
	call clsave,get
	push "T2bexitglass"
	cmpje
	cmp0
	jne l9237
	push "GAME_acttutorial"
	call clsave,get
	push "T2bexitglass_pad"
	cmpje
	jmp l9238
l9236:
	push 0
	jmp l9238
l9237:
	push 1
l9238:
	cmp0
	je l9239
	cthis hide_tutorial
	push "e1_mg001_witryna_po_snd_ksiazka"
	call clsave,bis
	cmp0
	je l9241
	cthis timfinito
l9241:
l9239:
	end method
	method HINT_CLICK
	push "e1_mg001_witryna_okladka_2v_clicked"
	call clsave,bis
	neg
	cmp0
	je l9243
	push "anokladka_2v"
	cthis showhint2v
	push "guiglass"
	cthis showhint2v
	jmp l9242
l9243:
	push "anpopexit"
	cthis showhint
l9242:
	end method
	end game

	game mg002_drzwi
	parent Banshee
	method init
	push "mg002_drzwi"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "pop_bkg.pyz 2"
	push "klamka_obszar.pyzH 3"
	push "ramka.pyz 4"
	push "klamka.pyzH 5"
	push "popexit.pyz 6"
	cthis imgs=
	cthis butpopexit
	push A
	push "bgrszumN 30"
	push "bgrogienN 15"
	push "opendoor 60"
	push "szufladaklik"
	cthis sfxs=
	push "sndnidaklamka"
	push "kinnat_c0d0_3a"
	cthis newsndfree
	call imgbkg,mg002_drzwi0
	push "e1_ad002_kswew_klamka_wlozona"
	call clsave,bis
	neg
	cmp0
	je l9247
	call anklamka_obszar,mg002_drzwi3
l9247:
	call anklamka,mg002_drzwi7
	call anklamka,mg002_drzwi10
	push "e1_ad002_kswew_klamka_wlozona"
	call clsave,bis
	cmp0
	je l9269
	call anklamka,show
l9269:
	cthis enabled_tutorial
	cmp0
	je l9271
	push "ma_klamka"
	call clsave,bis
	cmp0
	je l9273
	push "e1_T4gears_item_shown"
	call clsave,bis
	neg
	jmp l9275
l9273:
	push 0
	jmp l9275
l9274:
	push 1
l9275:
	cmp0
	je l9276
	push "T4gears_item"
	cthis ctutpos
	cthis show_tutorial
	push "anklamka_obszar"
	push "ld"
	cthis tutpoint
	push "klamka"
	cthis showtutitem
	push "e1_T4gears_item_shown"
	call clsave,bset
l9276:
l9271:
	cthis stdstart
	end method
	method mg002_drzwi0
	push "isbutin"
	push "mg002_drzwi1"
	cthis addmethod
	push "butclick"
	push "mg002_drzwi2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg002_drzwi1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpop_bkg,isin
	neg
	end method
	method mg002_drzwi2
	cthis advstdstate
	neg
	cmp0
	je l9245
	ret
l9245:
	cthis mend
	end method
	method mg002_drzwi3
	cthis Button_isinvis
	push "butmoveon"
	push "mg002_drzwi4"
	cthis addmethod
	push "butmoveoff"
	push "mg002_drzwi5"
	cthis addmethod
	push "butclick"
	push "mg002_drzwi6"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg002_drzwi4
	push "use"
	call advmouse,set
	cthis enabled_tutorial
	cmp0
	je l9249
	push "e1_T4gears_item_shown"
	call clsave,bis
	neg
	cmp0
	je l9251
	push "e1_t4gears_shown"
	call clsave,bgo
	jmp l9253
l9251:
	push 0
	jmp l9253
l9252:
	push 1
l9253:
	cmp0
	je l9254
	push "T4gears"
	cthis rtutpos
	cthis show_tutorial
l9254:
l9249:
	end method
	method mg002_drzwi5
	call advmouse,setstd
	end method
	method mg002_drzwi6
	cthis advstdstate
	neg
	cmp0
	jne l9257
	call guimov,moving
	cmp0
	je l9258
	call guimov,getmover
	push "anitem_klamka"
	cmpje
	jmp l9260
l9258:
	push 0
	jmp l9260
l9259:
	push 1
l9260:
	jmp l9261
l9256:
	push 0
	jmp l9261
l9257:
	push 1
l9261:
	cmp0
	je l9262
	ret
l9262:
	push "sndnidaklamka"
	cthis cbselfplay
	end method
	method mg002_drzwi7
	push "isbutin"
	push "mg002_drzwi8"
	cthis addmethod
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg002_drzwi9"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg002_drzwi8
	localint $1
	localint $2
	pop $2
	pop $1
	cthis advstdstate
	cmp0
	je l9263
	push $1
	push $2
	push 0
	push 0
	cthis isin
	cmp0
	je l9263
	call anklamka,isvisible
	jmp l9265
l9263:
	push 0
	jmp l9265
l9264:
	push 1
l9265:
	end method
	method mg002_drzwi9
	cthis advstdstate
	neg
	cmp0
	je l9267
	ret
l9267:
	call fxopendoor,play
	push "push"
	call anklamka,play
	cthis getname
	call butgame,removebut
	call advmouse,setstd
	end method
	method mg002_drzwi10
	push "onfinish"
	push "mg002_drzwi11"
	cthis addmethod
	end method
	method mg002_drzwi11
	cthis set_mg_finished
	push "e1_ad002_drzwi_otwarte"
	call clsave,bset
	cthis mend
	end method
	method showtutitem
	localstring $1
	pop $1
	cthis inventory_playing
	cmp0
	jne l9279
	cthis inventory_hidden
	jmp l9280
l9278:
	push 0
	jmp l9280
l9279:
	push 1
l9280:
	cmp0
	je l9281
	push $1
	call guinventory,sitemshow=
	cthis inventory_in
	jmp l9277
l9281:
	push 1
	call guinventory,blockout=
	push "null"
	call guinventory,sitemshow=
	localdef $2
	push $1
	cthis getanitem
	pop $2
	localint $3
	push $2
	spushs
	spop $a
	call [$a],getcx
	pop $3
	localint $4
	push $2
	spushs
	spop $a
	call [$a],getcy
	pop $4
	push $3
	push $4
	push "ld"
	cthis tutpointxy2
l9277:
	end method
	method USE_klamka
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call anklamka_obszar,isin
	cmp0
	je l9283
	cthis hide_tutorial
	push "klamka"
	cthis removefrompck
	call anklamka,show
	call fxszufladaklik,play
	push "anklamka_obszar"
	call butgame,removebut
	push "e1_ad002_kswew_klamka_wlozona"
	call clsave,bset
	jmp l9282
l9283:
	cthis advsetstdstate
	cthis item_gotopck
l9282:
	end method
	method mend
	push "ad002_kswew"
	push "gamead002_kswew0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "e1_ad002_kswew_klamka_wlozona"
	call clsave,bis
	neg
	cmp0
	je l9285
	push "taken_klamka"
	call clsave,bis
	jmp l9287
l9285:
	push 0
	jmp l9287
l9286:
	push 1
l9287:
	cmp0
	je l9288
	push "klamka"
	cthis showhintitem
	push "anklamka_obszar"
	cthis showhint
	push 2000
	cthis unblock_inventory
	jmp l9284
l9288:
	push "e1_ad002_kswew_klamka_wlozona"
	call clsave,bis
	cmp0
	je l9290
	push "anklamka"
	cthis showhint
	jmp l9289
l9290:
	push "anpopexit"
	cthis showhint
l9289:
l9284:
	end method
	end game

	game mg003_drzwi
	parent Banshee
	method init
	push "mg003_drzwi"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "keyhole.pyz 3"
	push "klamka_mask.pyzH 4"
	push "klamka.pyz 5"
	push "herb.pyzH 6"
	push "popup_ramka.pyz 7"
	push "popexit.pyz 8"
	push "popup2_bkg.pyzH 9"
	push "popup2_herb.pyzH 10"
	push "popup2_symbol_2v.pyzH 13"
	push "popup2_symbol_2v_anim.pyzH 14"
	push "popup2_ramka.pyzH 15"
	push "popup2_popexit.pyzH 16"
	push "zamek.pyzH 1"
	cthis imgs=
	cthis butpopexit
	push A
	push "skrzypienie_podlogiN 15"
	push "wiatr_w_jaskiniN 50"
	push "lockdoor1"
	push "opendoor 60"
	push "przekrecaklucz"
	push "hint2 60"
	cthis sfxs=
	call anpopup2_symbol_2v,anhideonsetframe
	push 1
	call anpopup2_symbol_2v_anim,setdrawmode
	push "anpopup2_symbol_shown"
	push "kinnat_c0d65j"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call anpopup2_symbol_shown,addmethod
	push "snd_closed"
	push "kinnat_c0d0_7"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_closed,addmethod
	push "snd_missing"
	push "kinnat_c0d0_7a"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_missing,addmethod
	push "snd_missing_place"
	push "kinnat_c0d0_7c"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_missing_place,addmethod
	call imgbkg,mg003_drzwi0
	new int,popup2_open
	call anpopup2_bkg,mg003_drzwi3
	push "butmoveon"
	push "mg003_drzwi8"
	call anpopexit,addmethod
	call anpopup2_popexit,mg003_drzwi9
	push "e1_mg003_drzwi_klucz_przekrecony"
	call clsave,bis
	neg
	cmp0
	je l9311
	call ankeyhole,mg003_drzwi13
l9311:
	call anherb,mg003_drzwi17
	call anklamka_mask,mg003_drzwi22
	call anklamka,mg003_drzwi25
	push "e1_mg003_drzwi_herb_inserted"
	call clsave,bis
	cmp0
	je l9348
	call anherb,show
l9348:
	push "e1_mg003_drzwi_klucz_inserted"
	call clsave,bis
	cmp0
	je l9350
	push 1
	push 1
	call ankeyhole,setframe
l9350:
	cthis stdstart
	end method
	method mg003_drzwi0
	push "isbutin"
	push "mg003_drzwi1"
	cthis addmethod
	push "butclick"
	push "mg003_drzwi2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg003_drzwi1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpopup_bkg,isin
	neg
	end method
	method mg003_drzwi2
	cthis advstdstate
	neg
	cmp0
	je l9292
	ret
l9292:
	cthis mend
	end method
	method mg003_drzwi3
	push "isbutin"
	push "mg003_drzwi4"
	cthis addmethod
	push "butmoveon"
	push "mg003_drzwi5"
	cthis addmethod
	push "butmoveoff"
	push "mg003_drzwi6"
	cthis addmethod
	push "butclick"
	push "mg003_drzwi7"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg003_drzwi4
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 1
	cthis isin
	cmp0
	je l9293
	push popup2_open
	jmp l9295
l9293:
	push 0
	jmp l9295
l9294:
	push 1
l9295:
	end method
	method mg003_drzwi5
	push "e1_mg003_drzwi_herb_inserted"
	call clsave,bis
	neg
	cmp0
	je l9297
	push "use"
	call advmouse,set
	jmp l9296
l9297:
	call advmouse,setstd
l9296:
	end method
	method mg003_drzwi6
	call advmouse,setstd
	end method
	method mg003_drzwi7
	push popup2_open
	neg
	cmp0
	je l9299
	ret
l9299:
	push "e1_mg003_drzwi_herb_inserted"
	call clsave,bis
	neg
	cmp0
	je l9301
	push "snd_missing_place"
	cthis cbplay
l9301:
	end method
	method mg003_drzwi8
	push popup2_open
	cmp0
	je l9303
	ret
l9303:
	call advmouse,setstd
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	end method
	method mg003_drzwi9
	cthis Button_isinalpha
	push "butmoveon"
	push "mg003_drzwi10"
	cthis addmethod
	push "butmoveoff"
	push "mg003_drzwi11"
	cthis addmethod
	push "butclick"
	push "mg003_drzwi12"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg003_drzwi10
	push popup2_open
	neg
	cmp0
	je l9305
	ret
l9305:
	call advmouse,setstd
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	end method
	method mg003_drzwi11
	push popup2_open
	neg
	cmp0
	je l9307
	ret
l9307:
	call advmouse,setstd
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	end method
	method mg003_drzwi12
	push popup2_open
	neg
	cmp0
	je l9309
	ret
l9309:
	push "null"
	cthis close_popup2
	end method
	method mg003_drzwi13
	cthis Button_isin
	push "butmoveon"
	push "mg003_drzwi14"
	cthis addmethod
	push "butmoveoff"
	push "mg003_drzwi15"
	cthis addmethod
	push "butclick"
	push "mg003_drzwi16"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg003_drzwi14
	push "e1_mg003_drzwi_klucz_inserted"
	call clsave,bis
	neg
	cmp0
	je l9313
	push "use"
	call advmouse,set
	jmp l9312
l9313:
	push "e1_mg003_drzwi_klucz_przekrecony"
	call clsave,bis
	neg
	cmp0
	je l9315
	push "take"
	call advmouse,set
	jmp l9314
l9315:
	call advmouse,setstd
l9314:
l9312:
	end method
	method mg003_drzwi15
	call advmouse,setstd
	end method
	method mg003_drzwi16
	push "e1_mg003_drzwi_klucz_inserted"
	call clsave,bis
	cmp0
	je l9317
	push "e1_mg003_drzwi_klucz_przekrecony"
	call clsave,bis
	neg
	jmp l9319
l9317:
	push 0
	jmp l9319
l9318:
	push 1
l9319:
	cmp0
	je l9320
	push "open"
	call ankeyhole,play
	call fxprzekrecaklucz,play
	push "ankeyhole"
	call butgame,removebut
	call advmouse,setstd
	push "e1_mg003_drzwi_klucz_przekrecony"
	call clsave,bset
l9320:
	end method
	method mg003_drzwi17
	push "isbutin"
	push "mg003_drzwi18"
	cthis addmethod
	push "butmoveon"
	push "mg003_drzwi19"
	cthis addmethod
	push "butmoveoff"
	push "mg003_drzwi20"
	cthis addmethod
	push "butclick"
	push "mg003_drzwi21"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg003_drzwi18
	localint $1
	localint $2
	pop $2
	pop $1
	cthis advstdstate
	cmp0
	je l9321
	push $1
	push $2
	push 0
	push 0
	cthis isin
	jmp l9323
l9321:
	push 0
	jmp l9323
l9322:
	push 1
l9323:
	end method
	method mg003_drzwi19
	push "loupe"
	call advmouse,set
	end method
	method mg003_drzwi20
	call advmouse,setstd
	end method
	method mg003_drzwi21
	cthis advstdstate
	neg
	cmp0
	jne l9326
	push popup2_open
	cmp0
	jne l9326
	push "e1_ad003_drzwi_otwarte"
	call clsave,bis
	jmp l9327
l9325:
	push 0
	jmp l9327
l9326:
	push 1
l9327:
	cmp0
	je l9328
	ret
l9328:
	cthis open_popup2
	end method
	method mg003_drzwi22
	push "isbutin"
	push "mg003_drzwi23"
	cthis addmethod
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg003_drzwi24"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg003_drzwi23
	localint $1
	localint $2
	pop $2
	pop $1
	cthis advstdstate
	cmp0
	je l9329
	push $1
	push $2
	push 0
	push 0
	cthis isin
	jmp l9331
l9329:
	push 0
	jmp l9331
l9330:
	push 1
l9331:
	end method
	method mg003_drzwi24
	cthis advstdstate
	neg
	cmp0
	jne l9334
	push popup2_open
	jmp l9335
l9333:
	push 0
	jmp l9335
l9334:
	push 1
l9335:
	cmp0
	je l9336
	ret
l9336:
	push "push"
	call anklamka,play
	call fxopendoor,play
	push "e1_mg003_drzwi_herb_inserted"
	call clsave,bis
	cmp0
	je l9338
	push "e1_mg003_drzwi_klucz_przekrecony"
	call clsave,bis
	jmp l9340
l9338:
	push 0
	jmp l9340
l9339:
	push 1
l9340:
	cmp0
	je l9341
	cthis set_mg_finished
	call advmouse,setstd
	push "e1_ad003_drzwi_otwarte"
	call clsave,bset
	push "anklamka"
	call butgame,removebut
l9341:
	end method
	method mg003_drzwi25
	push "onfinish"
	push "mg003_drzwi26"
	cthis addmethod
	end method
	method mg003_drzwi26
	push "e1_mg003_drzwi_herb_inserted"
	call clsave,bis
	cmp0
	je l9343
	push "e1_mg003_drzwi_klucz_przekrecony"
	call clsave,bis
	jmp l9345
l9343:
	push 0
	jmp l9345
l9344:
	push 1
l9345:
	cmp0
	je l9346
	cthis mend
	jmp l9342
l9346:
	push "snd_closed"
	cthis cbplay
l9342:
	end method
	method open_popup2
	push 1
	pop popup2_open
	push 300
	push "null"
	call anpopup2_bkg,anfadein
	push 300
	push "null"
	call anpopup2_ramka,anfadein
	push 300
	push "null"
	call anpopup2_popexit,anfadein
	push "e1_mg003_drzwi_herb_inserted"
	call clsave,bis
	cmp0
	je l9352
	push 300
	push "null"
	call anpopup2_herb,anfadein
l9352:
	push "e1_mg003_drzwi_herb_inserted"
	call clsave,bis
	cmp0
	je l9354
	push "anpopup2_symbol_2v"
	cthis gui_toloupe
	jmp l9353
l9354:
	push "snd_missing"
	cthis cbplay
l9353:
	end method
	method close_popup2
	push 300
	push "null"
	call anpopup2_bkg,anfadeout
	push 300
	push "null"
	call anpopup2_ramka,anfadeout
	push 300
	push "null"
	call anpopup2_popexit,anfadeout
	push "anpopup2_symbol_2v"
	cthis gui_removefromloupe
	push "e1_mg003_drzwi_herb_inserted"
	call clsave,bis
	cmp0
	je l9356
	push 300
	push "null"
	call anpopup2_herb,anfadeout
l9356:
	push 0
	pop popup2_open
	cthis advsetstdstate
	end method
	method USE_herb
	cthis advsetstdstate
	push popup2_open
	cmp0
	je l9358
	call mouse,getpos
	push 0
	push 0
	call anpopup2_bkg,isin
	jmp l9360
l9358:
	push 0
	jmp l9360
l9359:
	push 1
l9360:
	cmp0
	je l9361
	push "herb"
	cthis removefrompck
	push 800
	push "null"
	call anpopup2_herb,anfadein
	call anherb,show
	push 800
	push "efekt_fadout"
	call anpopup2_symbol_2v_anim,anfadein
	push "anpopup2_symbol_2v"
	cthis gui_toloupe
	push "e1_mg003_drzwi_herb_inserted"
	call clsave,bset
	call fxlockdoor1,play
	call fxhint2,play
	call advmouse,setstd
	jmp l9357
l9361:
	call mouse,getpos
	push 0
	push 0
	call anherb,isin
	cmp0
	je l9363
	push 1
	pop popup2_open
	call anpopup2_bkg,show
	call anpopup2_ramka,show
	push 300
	push "null"
	call anpopup2_popexit,anfadein
	push "herb"
	cthis removefrompck
	push 800
	push "null"
	call anpopup2_herb,anfadein
	call anherb,show
	push 800
	push "efekt_fadout"
	call anpopup2_symbol_2v_anim,anfadein
	push "anpopup2_symbol_2v"
	cthis gui_toloupe
	call fxlockdoor1,play
	call fxhint2,play
	push "e1_mg003_drzwi_herb_inserted"
	call clsave,bset
	jmp l9362
l9363:
	cthis advsetstdstate
	cthis item_gotopck
l9362:
l9357:
	end method
	method USE_klucz_biblioteka
	cthis advsetstdstate
	push popup2_open
	neg
	cmp0
	je l9365
	call mouse,getpos
	push 0
	push 0
	call ankeyhole,isin
	jmp l9367
l9365:
	push 0
	jmp l9367
l9366:
	push 1
l9367:
	cmp0
	je l9368
	push "klucz_biblioteka"
	cthis removefrompck
	push 800
	push "null"
	call ankeyhole,anfadein
	push 1
	push 1
	call ankeyhole,setframe
	call advmouse,setstd
	push "e1_mg003_drzwi_klucz_inserted"
	call clsave,bset
	jmp l9364
l9368:
	cthis advsetstdstate
	cthis item_gotopck
l9364:
	end method
	method efekt_fadout
	push 800
	push "mg003_drzwi27"
	call anpopup2_symbol_2v_anim,anfadeout
	end method
	method mg003_drzwi27
	push "anpopup2_symbol_shown"
	cthis cbplay
	end method
	method mend
	push "ad003_ksrod"
	push "gamead003_ksrod0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "e1_mg003_drzwi_herb_inserted"
	call clsave,bis
	neg
	cmp0
	je l9370
	push "taken_herb"
	call clsave,bis
	jmp l9372
l9370:
	push 0
	jmp l9372
l9371:
	push 1
l9372:
	cmp0
	je l9373
	push popup2_open
	cmp0
	je l9375
	push "herb"
	cthis showhintitem
	push "anpopup2_herb"
	cthis showhint
	jmp l9374
l9375:
	push "anherb"
	cthis showhint
	push "herb"
	cthis showhintitem
l9374:
	jmp l9369
l9373:
	push popup2_open
	neg
	cmp0
	je l9377
	push "e1_mg003_drzwi_klucz_inserted"
	call clsave,bis
	neg
	cmp0
	je l9377
	push "taken_klucz_biblioteka"
	call clsave,bis
	jmp l9379
l9377:
	push 0
	jmp l9379
l9378:
	push 1
l9379:
	cmp0
	je l9380
	push "klucz_biblioteka"
	cthis showhintitem
	push "anzamek"
	cthis showhint
	jmp l9376
l9380:
	push popup2_open
	neg
	cmp0
	je l9382
	push "e1_mg003_drzwi_klucz_inserted"
	call clsave,bis
	cmp0
	je l9382
	push "e1_mg003_drzwi_klucz_przekrecony"
	call clsave,bis
	neg
	jmp l9384
l9382:
	push 0
	jmp l9384
l9383:
	push 1
l9384:
	cmp0
	je l9385
	push "ankeyhole"
	cthis showhint
	jmp l9381
l9385:
	push popup2_open
	neg
	cmp0
	je l9387
	push "e1_mg003_drzwi_klucz_przekrecony"
	call clsave,bis
	cmp0
	je l9387
	push "e1_mg003_drzwi_herb_inserted"
	call clsave,bis
	jmp l9389
l9387:
	push 0
	jmp l9389
l9388:
	push 1
l9389:
	cmp0
	je l9390
	push "anklamka_mask"
	cthis showhint
	jmp l9386
l9390:
	push popup2_open
	cmp0
	je l9392
	push "anpopup2_popexit"
	cthis showhint
	jmp l9391
l9392:
	push "anpopexit"
	cthis showhint
l9391:
l9386:
l9381:
l9376:
l9369:
	end method
	end game

	game mg003_lustro
	parent Banshee
	method init
	push "mg003_lustro"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "anim.pyzH 3"
	push "popup_maska.pyz 10"
	push "popup_ramka.pyz 11"
	push "spinka.pyzH 12"
	push "popexit.pyz 13"
	cthis imgs=
	push "anspinka"
	cthis setasitemtopck
	cthis butpopexit
	push A
	push "skrzypienie_podlogiN 15"
	push "wiatr_w_jaskiniN 50"
	push "przetrzyj"
	push "founditem1 30"
	cthis sfxs=
	call anpopup_bkg,mg003_lustro0
	call imgbkg,mg003_lustro4
	push "onfinish"
	push "mg003_lustro6"
	call ananim,addmethod
	push "e1_mg003_lustro_szmata_used"
	call clsave,bis
	cmp0
	je l9410
	call ananim,show
	push "e1_mg003_lustro_szmata_used"
	call clsave,bis
	cmp0
	je l9412
	push "taken_spinka"
	call clsave,bis
	neg
	jmp l9414
l9412:
	push 0
	jmp l9414
l9413:
	push 1
l9414:
	cmp0
	je l9415
	push "spinka"
	push "anspinka"
	cthis popitem_gotocenterobj
l9415:
l9410:
	push "e1_mg003_lustro_szmata_used"
	call clsave,bis
	neg
	cmp0
	je l9417
	push "sndclean"
	push "kinnat_c0d0_4b"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call sndclean,addmethod
l9417:
	cthis stdstart
	end method
	method mg003_lustro0
	cthis Button_isin
	push "butmoveon"
	push "mg003_lustro1"
	cthis addmethod
	push "butmoveoff"
	push "mg003_lustro2"
	cthis addmethod
	push "butclick"
	push "mg003_lustro3"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg003_lustro1
	push "e1_mg003_lustro_szmata_used"
	call clsave,bis
	neg
	cmp0
	je l9394
	push "use"
	call advmouse,set
	jmp l9393
l9394:
	call advmouse,setstd
l9393:
	end method
	method mg003_lustro2
	call advmouse,setstd
	end method
	method mg003_lustro3
	cthis advstdstate
	neg
	cmp0
	jne l9397
	push "spinka"
	cthis isvisible_itempopup
	cmp0
	jne l9397
	push 1
	popax
	sub 0,$a
	call ananim,isplaying
	jmp l9398
l9396:
	push 0
	jmp l9398
l9397:
	push 1
l9398:
	cmp0
	je l9399
	ret
l9399:
	push "e1_mg003_lustro_szmata_used"
	call clsave,bis
	neg
	cmp0
	je l9401
	push "sndclean"
	cthis cbplay
l9401:
	end method
	method mg003_lustro4
	cthis Button_isinalpha
	push "butclick"
	push "mg003_lustro5"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg003_lustro5
	cthis advstdstate
	neg
	cmp0
	jne l9404
	push "spinka"
	cthis isvisible_itempopup
	cmp0
	jne l9404
	push 1
	popax
	sub 0,$a
	call ananim,isplaying
	jmp l9405
l9403:
	push 0
	jmp l9405
l9404:
	push 1
l9405:
	cmp0
	je l9406
	ret
l9406:
	cthis mend
	end method
	method mg003_lustro6
	push "spinka"
	cthis isvisible_itempopup
	neg
	cmp0
	je l9408
	cthis advsetstdstate
	push "spinka"
	push "anspinka"
	cthis popitem_gotocenterobj
l9408:
	end method
	method mend
	push "ad003_ksrod"
	push "gamead003_ksrod0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "taken_spinka"
	call clsave,bis
	neg
	cmp0
	je l9419
	push "taken_szmata"
	call clsave,bis
	jmp l9421
l9419:
	push 0
	jmp l9421
l9420:
	push 1
l9421:
	cmp0
	je l9422
	push "ananim"
	cthis showhint
	push "e1_mg003_lustro_szmata_used"
	call clsave,bis
	neg
	cmp0
	je l9424
	push "szmata"
	cthis showhintitem
l9424:
	jmp l9418
l9422:
	push "anpopexit"
	cthis showhint
l9418:
	end method
	method anspinka_INPCK
	push "spinka"
	cthis addtopck
	cthis set_mg_finished
	cthis timfinito
	end method
	method USE_szmata
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call ananim,isin
	cmp0
	je l9426
	push "e1_mg003_lustro_szmata_used"
	call clsave,bis
	neg
	jmp l9428
l9426:
	push 0
	jmp l9428
l9427:
	push 1
l9428:
	cmp0
	je l9429
	call advmouse,setstd
	push "szmata"
	cthis removefrompck
	push 1200
	push "mg003_lustro7"
	call ananim,anfadein
	push "e1_mg003_lustro_szmata_used"
	call clsave,bset
	call fxprzetrzyj,play
	jmp l9425
l9429:
	cthis advsetstdstate
	cthis item_gotopck
l9425:
	end method
	method mg003_lustro7
	push 1
	call ananim,play
	end method
	end game

	game mg002_witryna
	parent Banshee
	method init
	push "mg002_witryna"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "anim_koord.pyzH 3"
	push "klodka.pyz 4"
	push "ramka.pyz 20"
	push "popexit.pyz 21"
	cthis imgs=
	cthis butpopexit
	push "sndclosed"
	push "kinnat_c0d0_4a"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call sndclosed,addmethod
	push A
	push "bgrszumN 30"
	push "bgrogienN 15"
	cthis sfxs=
	call imgbkg,mg002_witryna0
	call anklodka,mg002_witryna3
	new Film,filmb
	push "mus"
	call filmb,musicclass=
	push "onfinish"
	push "mg002_witryna7"
	call filmb,addmethod
	push "scripts/cs002_klodka/"
	push "film"
	call filmb,load
	call filmb,showfirstframe
	push 5
	call filmb,setz
	call ananim_koord,getpx
	call ananim_koord,getpy
	call filmb,setpos
	call filmb,hide
	push "e1_mg002_witryna_spinka_used"
	call clsave,bis
	cmp0
	je l9447
	call filmb,play
l9447:
	cthis stdstart
	end method
	method mg002_witryna0
	push "isbutin"
	push "mg002_witryna1"
	cthis addmethod
	push "butclick"
	push "mg002_witryna2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg002_witryna1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpopup_bkg,isin
	neg
	end method
	method mg002_witryna2
	cthis advstdstate
	neg
	cmp0
	je l9431
	ret
l9431:
	cthis mend
	end method
	method mg002_witryna3
	cthis Button_isinalpha
	push "butmoveon"
	push "mg002_witryna4"
	cthis addmethod
	push "butmoveoff"
	push "mg002_witryna5"
	cthis addmethod
	push "butclick"
	push "mg002_witryna6"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg002_witryna4
	push "e1_mg002_witryna_spinka_used"
	call clsave,bis
	neg
	cmp0
	je l9433
	push "use"
	call advmouse,set
	jmp l9432
l9433:
	call advmouse,setstd
l9432:
	cthis enabled_tutorial
	cmp0
	je l9435
	push "e1_T4gears_item_shown"
	call clsave,bis
	neg
	cmp0
	je l9437
	push "e1_t4gears_shown"
	call clsave,bgo
	jmp l9439
l9437:
	push 0
	jmp l9439
l9438:
	push 1
l9439:
	cmp0
	je l9440
	push "T4gears"
	cthis rtutpos
	cthis show_tutorial
l9440:
l9435:
	end method
	method mg002_witryna5
	call advmouse,setstd
	end method
	method mg002_witryna6
	cthis advstdstate
	neg
	cmp0
	jne l9443
	push "e1_mg002_witryna_spinka_used"
	call clsave,bis
	jmp l9444
l9442:
	push 0
	jmp l9444
l9443:
	push 1
l9444:
	cmp0
	je l9445
	ret
l9445:
	push "sndclosed"
	cthis cbplay
	end method
	method mg002_witryna7
	cthis advsetstdstate
	cthis mend
	end method
	method USE_spinka
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call anklodka,isin
	cmp0
	je l9449
	push "e1_mg002_witryna_spinka_used"
	call clsave,bis
	neg
	jmp l9451
l9449:
	push 0
	jmp l9451
l9450:
	push 1
l9451:
	cmp0
	je l9452
	push "spinka"
	cthis removefrompck
	push "e1_mg002_witryna_spinka_used"
	call clsave,bset
	call filmb,play
	call advmouse,setstd
	jmp l9448
l9452:
	cthis advsetstdstate
	cthis item_gotopck
l9448:
	end method
	method HINT_CLICK
	push "taken_spinka"
	call clsave,bis
	cmp0
	je l9454
	push "e1_mg002_witryna_spinka_used"
	call clsave,bis
	neg
	jmp l9456
l9454:
	push 0
	jmp l9456
l9455:
	push 1
l9456:
	cmp0
	je l9457
	push "anpopup_bkg"
	cthis showhint
	push "spinka"
	cthis showhintitem
	jmp l9453
l9457:
	push "anpopexit"
	cthis showhint
l9453:
	end method
	method mend
	push "ad002a_kdoors"
	push "gamead002a_kdoors0"
	cthis stdexitdefadv
	end method
	end game

	game mg002_witryna_open
	parent Banshee
	method init
	push "mg002_witryna_open"
	clparent Banshee,init
	push "crying_loop -v 40 -l"
	call mus,playstr
	push A
	push "bkg.jpg "
	push "anim_coord.pyzH"
	push "popup_bkg.pyz 2"
	push "symbol2v.pyzH 5"
	push "ramka.pyzG 400"
	push "popexit.pyz 410"
	cthis imgs=
	cthis butpopexit
	cthis loadznakout
	new Film,filmb
	push "mus"
	call filmb,musicclass=
	push "scripts/cs002a_popup_ksiazka/"
	push "film"
	call filmb,load
	call ananim_coord,getpx
	call ananim_coord,getpy
	call filmb,setpos
	call filmb,showfirstframe
	push 300
	call filmb,setz
	call filmb,hide
	push "onfinish"
	push "mg002_witryna_open0"
	call filmb,addmethod
	push "e1_cs002a_popup_ksiazka_shown"
	call clsave,bis
	neg
	cmp0
	je l9459
	call anpopup_bkg,hide
	push "ansymbol2v"
	cthis gui_toloupe
	call ansymbol2v,anhideonsetframe
	call ansymbol2v,mg002_witryna_open1
	jmp l9458
l9459:
	call ansymbol2v,hide
l9458:
	call imgbkg,mg002_witryna_open5
	cthis stdstart
	end method
	method mg002_witryna_open0
	push "e1_ad002a_kdoors_cs002a_ksiazka_shown"
	call clsave,bset
	push "cs002a_ksiazka"
	push "-mg"
	push "HO01a_ksmala"
	cthis watch_film
	end method
	method mg002_witryna_open1
	push "isbutin"
	push "mg002_witryna_open2"
	cthis addmethod
	push "butclick"
	push "mg002_witryna_open3"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg002_witryna_open2
	localint $1
	localint $2
	pop $2
	pop $1
	cthis advstdstate
	cmp0
	je l9460
	push $1
	push $2
	push 0
	push 0
	cthis isin
	cmp0
	je l9460
	cthis loupe_visible
	jmp l9462
l9460:
	push 0
	jmp l9462
l9461:
	push 1
l9462:
	end method
	method mg002_witryna_open3
	push "e1_cs002a_popup_ksiazka_shown"
	call clsave,bis
	neg
	cmp0
	je l9464
	cthis hide
	push "ansymbol2v"
	cthis gui_removefromloupe
	push "e1_cs002a_popup_ksiazka_shown"
	call clsave,bset
	push "state_foutmus"
	cthis advsetstate
	push 1000
	call mus,fadeout
	push "timend"
	push 1000
	push "mg002_witryna_open4"
	cthis timplay
l9464:
	end method
	method mg002_witryna_open4
	call filmb,play
	end method
	method mg002_witryna_open5
	push "isbutin"
	push "mg002_witryna_open6"
	cthis addmethod
	push "butclick"
	push "mg002_witryna_open7"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg002_witryna_open6
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpopup_bkg,isin
	neg
	end method
	method mg002_witryna_open7
	cthis advstdstate
	neg
	cmp0
	je l9466
	ret
l9466:
	cthis mend
	end method
	method HINT_CLICK
	push "e1_cs002a_popup_ksiazka_shown"
	call clsave,bis
	neg
	cmp0
	je l9468
	push "ansymbol2v"
	cthis showhint2v
	push "guiglass"
	cthis showhint2v
	jmp l9467
l9468:
	push "anpopexit"
	cthis showhint
l9467:
	end method
	method mend
	push 1000
	call mus,fadeout
	push "ad002a_kdoors"
	push "gamead002a_kdoors0"
	cthis stdexitdefadv
	end method
	end game

	game mg003_ksiazki
	parent Banshee
	method init
	push "mg003_ksiazki"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "ksiazka.pyz 3"
	push "ramka.pyz 4"
	push "popexit.pyz 5"
	push "ksiazka_open.pyzH 6"
	push "klucz_biblioteka.pyzH 7"
	cthis imgs=
	push "anklucz_biblioteka"
	cthis setasitemtopck
	cthis butpopexit
	push A
	push "skrzypienie_podlogiN 15"
	push "wiatr_w_jaskiniN 50"
	push "book2"
	cthis sfxs=
	push "booksnd"
	push "kinnat_c0d65h"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call booksnd,addmethod
	call imgbkg,mg003_ksiazki0
	call anksiazka,mg003_ksiazki3
	push "e1_mg003_ksiazki_ksiazka_open"
	call clsave,bis
	cmp0
	je l9476
	call anksiazka_open,show
	call anklucz_biblioteka,show
	push "taken_klucz_biblioteka"
	call clsave,bis
	neg
	cmp0
	je l9478
	call anklucz_biblioteka,show
	jmp l9477
l9478:
	call anklucz_biblioteka,hide
l9477:
l9476:
	cthis stdstart
	end method
	method mg003_ksiazki0
	push "isbutin"
	push "mg003_ksiazki1"
	cthis addmethod
	push "butclick"
	push "mg003_ksiazki2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg003_ksiazki1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpopup_bkg,isin
	neg
	end method
	method mg003_ksiazki2
	cthis advstdstate
	neg
	cmp0
	je l9470
	ret
l9470:
	cthis mend
	end method
	method mg003_ksiazki3
	cthis Button_isin
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg003_ksiazki4"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg003_ksiazki4
	cthis advstdstate
	neg
	cmp0
	je l9472
	ret
l9472:
	push "e1_mg003_ksiazki_ksiazka_open"
	call clsave,bis
	neg
	cmp0
	je l9474
	push 300
	push "null"
	call anksiazka_open,anfadein
	push 300
	push "null"
	call anklucz_biblioteka,anfadein
	push "e1_mg003_ksiazki_ksiazka_open"
	call clsave,bset
	push "booksnd"
	cthis cbplay
	call fxbook2,play
	cthis getname
	call butgame,removebut
	call advmouse,setstd
l9474:
	end method
	method mend
	push "ad003_ksrod"
	push "gamead003_ksrod0"
	cthis stdexitdefadv
	end method
	method anklucz_biblioteka_TAKE
	call advmouse,setstd
	push "klucz_biblioteka"
	cthis popitem_gotocenter
	end method
	method anklucz_biblioteka_INPCK
	cthis set_mg_finished
	push "klucz_biblioteka"
	cthis addtopck
	cthis timfinito
	end method
	method HINT_CLICK
	push "e1_mg003_ksiazki_ksiazka_open"
	call clsave,bis
	neg
	cmp0
	je l9480
	push "anksiazka"
	cthis showhint
	jmp l9479
l9480:
	push "taken_klucz_biblioteka"
	call clsave,bis
	neg
	cmp0
	je l9482
	push "anklucz_biblioteka"
	cthis showhint
	jmp l9481
l9482:
	push "anpopexit"
	cthis showhint
l9481:
l9479:
	end method
	end game

	game mg004_ksiega
	parent Banshee
	method init
	new string,act_id
	push "null"
	pop act_id
	new int,act_posx
	push 1
	popax
	sub 0,$a
	pop act_posx
	new int,act_posy
	push 1
	popax
	sub 0,$a
	pop act_posy
	new int,can_skip_tut
	push 0
	pop can_skip_tut
	push "mg004_ksiega"
	clparent Banshee,init
	push "mg004_ksiega"
	cthis askopis
	call anaskopis,hide
	push "crying_loop.ogg -l -v 70"
	call mus,playstr
	push A
	push "book2"
	push "butmoveon3"
	cthis sfxs=
	push "e1_kspok_kawalki_uzyte"
	call clsave,bis
	neg
	cmp0
	je l9484
	push "snd_brak_kawalkow"
	push "kinnat_c0d69"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_brak_kawalkow,addmethod
l9484:
	push "e1_kspok_kawalki_zebrane"
	call clsave,bis
	cmp0
	je l9486
	push "e1_kspok_kawalki_uzyte"
	call clsave,bis
	neg
	jmp l9488
l9486:
	push 0
	jmp l9488
l9487:
	push 1
l9488:
	cmp0
	je l9489
	push "snd_brak_strony"
	push "kinnat_c0d0_5b"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_brak_strony,addmethod
	push "snd_brak_strony"
	cthis cbplay
l9489:
	push "timskip"
	push 500
	push "mg004_ksiega0"
	cthis timer=
	push "timnexttut"
	push 500
	push "mg004_ksiega1"
	cthis timer=
	push A
	push "bkg.jpg 0"
	push "popup_bkg.pyz 1"
	push "minigame_mask.pyzH 1"
	push "popexit.pyz 2"
	push "slot1.pyzH 3"
	push "slot2.pyzH 2"
	push "slot3.pyzH 3"
	push "slot4.pyzH 4"
	push "slot5.pyzH 5"
	push "1.pyz 6"
	push "2.pyz 7"
	push "3.pyz 8"
	push "4.pyz 9"
	push "5.pyz 5"
	cthis imgs=
	cthis butpopexit
	push igmoffsetx
	push iResX
	pop $b
	popax
	add $a,$b
	call anaskopis,getw
	pop $b
	popax
	sub $a,$b
	push igmoffsety
	call anaskopis,ansetbpos
	call imgbkg,mg004_ksiega2
	push "e1_kspok_kawalki_uzyte"
	call clsave,bis
	neg
	cmp0
	je l9495
	localint $1
	push 1
	pop $1
l9496:
	push $1
	push 6
	cmpjl
	cmp0
	je l9497
	jmp l9499
l9498:
	add $1,1
	pop $1
	jmp l9496
l9499:
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],hide
	jmp l9498
l9497:
	call anminigame_mask,mg004_ksiega5
	jmp l9494
l9495:
	call guihint,switchtoskip
	call anaskopis,show
l9494:
	push "e1_mg004_ksiega_1_inserted"
	call clsave,bis
	cmp0
	je l9507
	call anslot1,show
	call anslot1,butdisable
	call an1,hide
	jmp l9506
l9507:
	push "1"
	push 820
	push 502
	push 11
	cthis init_page
l9506:
	push "e1_mg004_ksiega_2_inserted"
	call clsave,bis
	cmp0
	je l9509
	call anslot2,show
	call anslot2,butdisable
	call an2,hide
	jmp l9508
l9509:
	push "2"
	push 780
	push 208
	push 12
	cthis init_page
l9508:
	push "e1_mg004_ksiega_3_inserted"
	call clsave,bis
	cmp0
	je l9511
	call anslot3,show
	call anslot3,butdisable
	call an3,hide
	jmp l9510
l9511:
	push "3"
	push 920
	push 500
	push 13
	cthis init_page
l9510:
	push "e1_mg004_ksiega_4_inserted"
	call clsave,bis
	cmp0
	je l9513
	call anslot4,show
	call anslot4,butdisable
	call an4,hide
	jmp l9512
l9513:
	push "4"
	push 980
	push 180
	push 14
	cthis init_page
l9512:
	push "e1_mg004_ksiega_5_inserted"
	call clsave,bis
	cmp0
	je l9515
	call anslot5,show
	call anslot5,butdisable
	call an5,hide
	jmp l9514
l9515:
	push "5"
	push 930
	push 350
	push 15
	cthis init_page
l9514:
	cthis stdstart
	end method
	method mg004_ksiega0
	push 1
	pop can_skip_tut
	end method
	method mg004_ksiega1
	cthis enabled_tutorial
	cmp0
	je l9491
	push "T7b"
	cthis ctutpos
	cthis show_tutorial
	push "globalhint"
	push "rd"
	cthis tutpoint
	push "tutorial7b_shown"
	call clsave,bset
	push 0
	pop can_skip_tut
	call timskip,play
l9491:
	end method
	method mg004_ksiega2
	push "isbutin"
	push "mg004_ksiega3"
	cthis addmethod
	push "butclick"
	push "mg004_ksiega4"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg004_ksiega3
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anminigame_mask,isin
	neg
	end method
	method mg004_ksiega4
	cthis advstdstate
	neg
	cmp0
	je l9493
	ret
l9493:
	cthis mend
	end method
	method mg004_ksiega5
	cthis Button_isinvis
	push "butmoveon"
	push "mg004_ksiega6"
	cthis addmethod
	push "butmoveoff"
	push "mg004_ksiega7"
	cthis addmethod
	push "butclick"
	push "mg004_ksiega8"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg004_ksiega6
	push "e1_kspok_kawalki_uzyte"
	call clsave,bis
	neg
	cmp0
	je l9501
	push "use"
	call advmouse,set
l9501:
	end method
	method mg004_ksiega7
	call advmouse,setstd
	end method
	method mg004_ksiega8
	cthis advstdstate
	neg
	cmp0
	je l9503
	ret
l9503:
	push "e1_kspok_kawalki_uzyte"
	call clsave,bis
	neg
	cmp0
	je l9505
	push "snd_brak_kawalkow"
	cthis cbplay
l9505:
	end method
	method init_page
	localstring $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	push $2
	push $3
	push $4
	spop $a
	call [$a],mg004_ksiega9
	end method
	method mg004_ksiega9
	localstring $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $2
	push $3
	cthis setpos
	push $4
	cthis setz
	push 1
	popax
	sub 0,$a
	push 4
	spushs
	spop $h
	call $h,rand
	cthis setframe
	push A
	push "name"
	push $1
	push "start_x"
	push $2
	push "start_y"
	push $3
	push "zet"
	push $4
	cthis vars2
	cthis Button_isinvisalpha
	push "butclick"
	push "mg004_ksiega10"
	cthis addmethod
	push "butrel"
	push "mg004_ksiega11"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg004_ksiega10
	cthis advstdstate
	neg
	cmp0
	jne l9518
	cthis is_mg_finished
	cmp0
	jne l9518
	cthis enabled_tutorial
	cmp0
	je l9519
	push "GAME_acttutorial"
	call clsave,get
	push "null"
	cmpjne
	jmp l9521
l9519:
	push 0
	jmp l9521
l9520:
	push 1
l9521:
	jmp l9522
l9517:
	push 0
	jmp l9522
l9518:
	push 1
l9522:
	cmp0
	je l9523
	ret
l9523:
	push "e1_kspok_kawalki_uzyte"
	call clsave,bis
	neg
	cmp0
	je l9525
	push "snd_brak_kawalkow"
	cthis cbplay
	ret
l9525:
	push act_id
	push "null"
	cmpje
	cmp0
	je l9527
	push "e1_mg004_ksiega_"
	cthis name
	pop $b
	popax
	add $a,$b
	push "_inserted"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	jmp l9529
l9527:
	push 0
	jmp l9529
l9528:
	push 1
l9529:
	cmp0
	je l9530
	cthis getname
	pop act_id
	call mouse,getpos
	cthis setpos
	push act_id
	spushs
	spop $a
	call [$a],getcx
	pop act_posx
	push act_id
	spushs
	spop $a
	call [$a],getcy
	pop act_posy
	push iSzkielkoPodZ
	push 2
	pop $b
	popax
	add $a,$b
	cthis setz
	call advmouse,setstd
	call fxbutmoveon3,play
	jmp l9526
l9530:
	push act_id
	cthis getname
	cmpje
	cmp0
	je l9532
	localint $1
	push act_posx
	pop $1
	localint $2
	push act_posy
	pop $2
	localint $3
	push act_id
	spushs
	spop $a
	call [$a],getcx
	pop $3
	localint $4
	push act_id
	spushs
	spop $a
	call [$a],getcy
	pop $4
	localint $5
	push $1
	push $3
	pop $b
	popax
	sub $a,$b
	pop $5
	localint $6
	push $2
	push $4
	pop $b
	popax
	sub $a,$b
	pop $6
	localint $7
	push $5
	push $5
	pop $b
	popax
	mul $a,$b
	push $6
	push $6
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	spushs
	spop $h
	call $h,sqrt
	pop $7
	localreal $8
	push 0.0
	spushs
	push $5
	push $6
	spop $h
	call $h,length
	pop $8
	push act_id
	spushs
	spop $a
	call [$a],getcx
	push igmappw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	cmpjl
	cmp0
	je l9534
	push act_id
	spushs
	cthis zet
	spop $a
	call [$a],setz
	localdef $9
	push "anslot"
	cthis name
	pop $b
	popax
	add $a,$b
	pop $9
	push $9
	spushs
	call mouse,getpos
	push 0
	push 1
	spop $a
	call [$a],isin
	cmp0
	je l9536
	cthis framenr
	push 0
	cmpje
	jmp l9538
l9536:
	push 0
	jmp l9538
l9537:
	push 1
l9538:
	cmp0
	je l9539
	push "null"
	pop act_id
	push $9
	spushs
	spop $a
	call [$a],show
	push $9
	spushs
	spop $a
	call [$a],butdisable
	call fxbook2,play
	push "e1_mg004_ksiega_"
	cthis name
	pop $b
	popax
	add $a,$b
	push "_inserted"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	cthis hide
	cthis check_won
	jmp l9535
l9539:
	call mouse,getpos
	push 0
	push 1
	call anminigame_mask,isin
	neg
	cmp0
	je l9541
	cthis zet
	cthis setz
	cthis start_x
	cthis start_y
	cthis setpos
	push "null"
	pop act_id
	cthis start_x
	cthis start_y
	cthis setpos
	jmp l9540
l9541:
	localint $10
	cthis framenr
	pop $10
	localint $11
	push 1
	popax
	sub 0,$a
	cthis nofframes
	pop $11
	add $10,1
	pop $10
	push $10
	push $11
	cmpjae
	cmp0
	je l9543
	push 0
	pop $10
l9543:
	push 1
	popax
	sub 0,$a
	push $10
	cthis setframe
	call mouse,getpos
	cthis setpos
	call fxbook2,play
	push iSzkielkoPodZ
	push 2
	pop $b
	popax
	add $a,$b
	cthis setz
l9540:
l9535:
	jmp l9533
l9534:
	call mouse,getpos
	push 0
	push 1
	call anpopup_bkg,isin
	neg
	cmp0
	je l9545
	cthis zet
	cthis setz
	cthis start_x
	cthis start_y
	cthis setpos
	push "null"
	pop act_id
	cthis start_x
	cthis start_y
	cthis setpos
	jmp l9544
l9545:
	localint $10
	cthis framenr
	pop $10
	localint $11
	push 1
	popax
	sub 0,$a
	cthis nofframes
	pop $11
	add $10,1
	pop $10
	push $10
	push $11
	cmpjae
	cmp0
	je l9547
	push 0
	pop $10
l9547:
	push 1
	popax
	sub 0,$a
	push $10
	cthis setframe
	call mouse,getpos
	cthis setpos
	call fxbook2,play
	push iSzkielkoPodZ
	push 2
	pop $b
	popax
	add $a,$b
	cthis setz
l9544:
l9533:
l9532:
l9526:
	call butgame,sort
	cthis advsetstdstate
	end method
	method mg004_ksiega11
	cthis advstdstate
	neg
	cmp0
	jne l9550
	cthis is_mg_finished
	cmp0
	jne l9550
	cthis enabled_tutorial
	cmp0
	je l9551
	push "GAME_acttutorial"
	call clsave,get
	push "null"
	cmpjne
	jmp l9553
l9551:
	push 0
	jmp l9553
l9552:
	push 1
l9553:
	jmp l9554
l9549:
	push 0
	jmp l9554
l9550:
	push 1
l9554:
	cmp0
	je l9555
	ret
l9555:
	push act_id
	cthis getname
	cmpje
	cmp0
	je l9557
	push act_id
	spushs
	spop $a
	call [$a],getcx
	push igmappw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	cmpjl
	cmp0
	je l9559
	push act_id
	spushs
	cthis zet
	spop $a
	call [$a],setz
	localdef $1
	push "anslot"
	cthis name
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	spushs
	call mouse,getpos
	push 0
	push 1
	spop $a
	call [$a],isin
	cmp0
	je l9561
	cthis framenr
	push 0
	cmpje
	jmp l9563
l9561:
	push 0
	jmp l9563
l9562:
	push 1
l9563:
	cmp0
	je l9564
	push "null"
	pop act_id
	push $1
	spushs
	spop $a
	call [$a],show
	push $1
	spushs
	spop $a
	call [$a],butdisable
	call fxbook2,play
	push "e1_mg004_ksiega_"
	cthis name
	pop $b
	popax
	add $a,$b
	push "_inserted"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	cthis hide
	cthis check_won
l9564:
l9559:
l9557:
	call butgame,sort
	cthis advsetstdstate
	end method
	method check_all_done
	localint $1
	push 1
	pop $1
l9565:
	push $1
	push 6
	cmpjl
	cmp0
	je l9566
	jmp l9568
l9567:
	add $1,1
	pop $1
	jmp l9565
l9568:
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],isvisible
	cmp0
	je l9570
	push 0
	ret
l9570:
	jmp l9567
l9566:
	push 1
	ret
	end method
	method check_won
	cthis check_all_done
	cmp0
	je l9572
	cthis set_mg_finished
	push "gotochapter1"
	pop sgmstate
	push 300
	call mus,fadeout
	push "timend"
	push 500
	push "start_film"
	cthis timplay
l9572:
	end method
	method start_film
	push "CutsceneBiblioteka"
	call gameapi,play
	end method
	method mouse_move
	push act_id
	push "null"
	cmpjne
	cmp0
	je l9574
	push act_id
	spushs
	call mouse,getpos
	spop $a
	call [$a],setpos
l9574:
	end method
	method mouse_rclick
	push act_id
	push "null"
	cmpjne
	cmp0
	je l9576
	push act_id
	spushs
	push act_id
	spushs
	spop $a
	call [$a],zet
	spop $a
	call [$a],setz
	push act_id
	spushs
	push act_id
	spushs
	spop $a
	call [$a],start_x
	push act_id
	spushs
	spop $a
	call [$a],start_y
	spop $a
	call [$a],setpos
	push "null"
	pop act_id
l9576:
	end method
	method go_to_next_location
	push "ad00_endintro"
	push "gamead00_endintro0"
	cthis stdexitadvadv
	end method
	method USE_kawalek_ksiazki_5
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call anminigame_mask,isin
	cmp0
	je l9578
	push "kawalek_ksiazki_5"
	cthis removefrompck
	localint $1
	push 1
	pop $1
l9579:
	push $1
	push 6
	cmpjl
	cmp0
	je l9580
	jmp l9582
l9581:
	add $1,1
	pop $1
	jmp l9579
l9582:
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],hide
	jmp l9581
l9580:
	push "time_show_parts"
	push 0
	push "mg004_ksiega12"
	cthis timplay
	call fxbook2,play
	call advmouse,setstd
	push "e1_kspok_kawalki_uzyte"
	call clsave,bset
	call guihint,switchtoskip
	cthis enabled_tutorial
	cmp0
	je l9588
	push "tutorial7a_shown"
	call clsave,bset
	push "T7a"
	cthis ctutpos
	cthis show_tutorial
	push "anaskopis"
	push "ru"
	cthis tutpoint
	push 0
	pop can_skip_tut
	call timskip,play
l9588:
	call anaskopis,show
	jmp l9577
l9578:
	cthis item_gotopck
l9577:
	end method
	method mg004_ksiega12
	localint $1
	push 1
	pop $1
l9583:
	push $1
	push 6
	cmpjl
	cmp0
	je l9584
	jmp l9586
l9585:
	add $1,1
	pop $1
	jmp l9583
l9586:
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 100
	push $1
	pop $b
	popax
	mul $a,$b
	push "null"
	spop $a
	call [$a],anfadein
	jmp l9585
l9584:
	end method
	method mouse_lclick
	push "GAME_acttutorial"
	call clsave,get
	push "null"
	cmpjne
	cmp0
	je l9590
	push can_skip_tut
	jmp l9592
l9590:
	push 0
	jmp l9592
l9591:
	push 1
l9592:
	cmp0
	je l9593
	push 0
	pop can_skip_tut
	push "GAME_acttutorial"
	call clsave,get
	push "T7a"
	cmpje
	cmp0
	je l9595
	cthis hide_tutorial
	call timnexttut,play
	jmp l9594
l9595:
	push "GAME_acttutorial"
	call clsave,get
	push "T7b"
	cmpje
	cmp0
	je l9597
	push "tutorial7a_shown"
	call clsave,bis
	jmp l9599
l9597:
	push 0
	jmp l9599
l9598:
	push 1
l9599:
	cmp0
	je l9600
	cthis hide_tutorial
l9600:
l9594:
l9593:
	end method
	method mend
	push 900
	call mus,fadeout
	push "ad004_kspok"
	push "gamead004_kspok0"
	cthis stdexitadvadv
	end method
	method SKIP_CLICK
	cthis advstdstate
	cmp0
	je l9602
	push act_id
	push "null"
	cmpjne
	cmp0
	je l9604
	push act_id
	spushs
	push act_id
	spushs
	spop $a
	call [$a],zet
	spop $a
	call [$a],setz
	push act_id
	spushs
	push act_id
	spushs
	spop $a
	call [$a],start_x
	push act_id
	spushs
	spop $a
	call [$a],start_y
	spop $a
	call [$a],setpos
	push "null"
	pop act_id
l9604:
	call an1,isvisible
	cmp0
	je l9606
	push 500
	push "null"
	call an1,anfadeout
l9606:
	call an2,isvisible
	cmp0
	je l9608
	push 500
	push "null"
	call an2,anfadeout
l9608:
	call an3,isvisible
	cmp0
	je l9610
	push 500
	push "null"
	call an3,anfadeout
l9610:
	call an4,isvisible
	cmp0
	je l9612
	push 500
	push "null"
	call an4,anfadeout
l9612:
	call an5,isvisible
	cmp0
	je l9614
	push 500
	push "null"
	call an5,anfadeout
l9614:
	call anslot1,isvisible
	neg
	cmp0
	je l9616
	push 500
	push "null"
	call anslot1,anfadein
l9616:
	call anslot2,isvisible
	neg
	cmp0
	je l9618
	push 500
	push "null"
	call anslot2,anfadein
l9618:
	call anslot3,isvisible
	neg
	cmp0
	je l9620
	push 500
	push "null"
	call anslot3,anfadein
l9620:
	call anslot4,isvisible
	neg
	cmp0
	je l9622
	push 500
	push "null"
	call anslot4,anfadein
l9622:
	call anslot5,isvisible
	neg
	cmp0
	je l9624
	push 500
	push "null"
	call anslot5,anfadein
l9624:
	cthis set_mg_finished
	push "gotochapter1"
	pop sgmstate
	push 300
	call mus,fadeout
	push "timend"
	push 500
	push "start_film"
	cthis timplay
	call guihint,switchtohint
l9602:
	end method
	method HINT_CLICK
	push "e1_kspok_kawalki_zebrane"
	call clsave,bis
	neg
	cmp0
	je l9626
	push "anpopexit"
	cthis showhint
	jmp l9625
l9626:
	push "e1_kspok_kawalki_uzyte"
	call clsave,bis
	neg
	cmp0
	je l9628
	push "kawalek_ksiazki_5"
	cthis showhintitem
	push "anminigame_mask"
	cthis showhint
	jmp l9627
l9628:
	push "e1_mg004_ksiega_1_inserted"
	call clsave,bis
	neg
	cmp0
	je l9630
	push "an1"
	cthis showhint
	push "anslot1"
	cthis showhint
	jmp l9629
l9630:
	push "e1_mg004_ksiega_2_inserted"
	call clsave,bis
	neg
	cmp0
	je l9632
	push "an2"
	cthis showhint
	push "anslot2"
	cthis showhint
	jmp l9631
l9632:
	push "e1_mg004_ksiega_3_inserted"
	call clsave,bis
	neg
	cmp0
	je l9634
	push "an3"
	cthis showhint
	push "anslot3"
	cthis showhint
	jmp l9633
l9634:
	push "e1_mg004_ksiega_4_inserted"
	call clsave,bis
	neg
	cmp0
	je l9636
	push "an4"
	cthis showhint
	push "anslot4"
	cthis showhint
	jmp l9635
l9636:
	push "e1_mg004_ksiega_5_inserted"
	call clsave,bis
	neg
	cmp0
	je l9638
	push "an5"
	cthis showhint
	push "anslot5"
	cthis showhint
l9638:
l9635:
l9633:
l9631:
l9629:
l9627:
l9625:
	end method
	end game

	game mg16_zegar
	parent Banshee
	method init
	push "mg16_zegar"
	clparent Banshee,init
	new int,popup2_open
	new int,rot_min
	push 0
	pop rot_min
	new int,rot_godz
	push 0
	pop rot_godz
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "tarcza_bkg.pyz 3"
	push "anim_cut.pyz 4"
	push "A_anim.pyz 5"
	push "B_anim.pyz 6"
	push "C_anim.pyz 7"
	push "D_anim.pyz 8"
	push "E_anim.pyz 9"
	push "srodek_odkrecany.pyz 10"
	push "sruba1.pyzH 11"
	push "sruba2.pyzH 12"
	push "sruba3.pyzH 13"
	push "sruba4.pyzH 14"
	push "wskaz_min.pyz 15"
	push "wskaz_godz.pyz 16"
	push "clock_center.pyzH 17"
	push "clock_open_odbicie.pyzH 18"
	push "czas_2w.pyzH 19"
	push "clock_ramka.pyz 20"
	push "zegar.pyzH 21"
	push "ramka.pyz 22"
	push "popexit.pyz 23"
	push "popup2_bkg.pyzH 24"
	push "popup2_anim_cut.pyzH 25"
	push "popup2_A_anim.pyzH 26"
	push "popup2_B_anim.pyzH 27"
	push "popup2_C_anim.pyHz 28"
	push "popup2_D_anim.pyzH 29"
	push "popup2_E_anim.pyzH 30"
	push "popup2_srodek_odkrecany.pyzH 31"
	push "popup2_sruba1.pyzH 32"
	push "popup2_sruba2.pyzH 33"
	push "popup2_sruba3.pyzH 34"
	push "popup2_sruba4.pyzH 35"
	push "popup2_wskaz_min.pyzH 36"
	push "popup2_wskaz_godz.pyzH 37"
	push "popup2_clock_center.pyzH 38"
	push "popup2_ramka.pyzH 39"
	push "popup2_popexit.pyzH 40"
	push "popup2_sruba1_mask.pyzH 36"
	push "popup2_sruba2_mask.pyzH 36"
	push "popup2_sruba3_mask.pyzH 36"
	push "popup2_sruba4_mask.pyzH 36"
	push "popup2_dzwiek.pyzH 41"
	push "cazki_anim.pyzH 42"
	push "srubokret_anim.pyzH 43"
	cthis imgs=
	cthis butpopexit
	push A
	push "zegarcykN 50"
	push "wiatr3N 10"
	push "szufladaklik"
	push "cyk"
	push "obcegi"
	push "sejf"
	push "odkrecanie"
	cthis sfxs=
	push 1000
	call mus,fadeout
	push "snd_sruba"
	push "kinnat_c2d2_81"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_sruba,addmethod
	push "snd_drucik"
	push "kinnat_c2d2_81a"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_drucik,addmethod
	call imgbkg,mg16_zegar0
	new filter,ftrot_min
	push "anpopup2_wskaz_min"
	call ftrot_min,link
	push 2
	call ftrot_min,setpivottype
	new filter,ftrot_min_small
	push "anwskaz_min"
	call ftrot_min_small,link
	push 2
	call ftrot_min_small,setpivottype
	new filter,ftrot_godz
	push "anpopup2_wskaz_godz"
	call ftrot_godz,link
	push 2
	call ftrot_godz,setpivottype
	new filter,ftrot_godz_small
	push "anwskaz_godz"
	call ftrot_godz_small,link
	push 2
	call ftrot_godz_small,setpivottype
	call anzegar,mg16_zegar3
	push "butmoveon"
	push "mg16_zegar8"
	call anpopexit,addmethod
	call anpopup2_popexit,mg16_zegar9
	push "e1_mg16_zegar_wskaz_min_removed"
	call clsave,bis
	neg
	cmp0
	je l9667
	call anpopup2_wskaz_min,mg16_zegar13
	jmp l9666
l9667:
	call anpopup2_wskaz_min,hide
	call anwskaz_min,hide
l9666:
	push "e1_mg16_zegar_wskaz_min_removed"
	call clsave,bis
	neg
	cmp0
	je l9679
	call anpopup2_wskaz_godz,mg16_zegar18
	jmp l9678
l9679:
	call anpopup2_wskaz_godz,hide
	call anwskaz_godz,hide
l9678:
	push "e1_mg16_zegar_clock_ramka_opened"
	call clsave,bis
	cmp0
	je l9691
	push 1
	call anclock_ramka,play
	call anclock_open_odbicie,show
l9691:
	call anclock_center,getcx
	call anclock_center,getcy
	call anwskaz_min,setpos
	call anclock_center,getcx
	call anclock_center,getcy
	call anwskaz_godz,setpos
	push "e1_mg16_zegar_zepsuty"
	call clsave,bis
	neg
	cmp0
	je l9693
	push 0
	call ananim_cut,play
	push 0
	call anA_anim,play
	push 0
	call anB_anim,play
	push 0
	call anC_anim,play
	push 0
	call anD_anim,play
	push 0
	call anE_anim,play
l9693:
	push "anczas_2w"
	cthis gui_toloupe
	call anczas_2w,anhideonsetframe
	push 0
	call anczas_2w,play
	push "onfinish"
	push "mg16_zegar23"
	call anpopup2_srodek_odkrecany,addmethod
	push "onendframe"
	push "mg16_zegar24"
	call anpopup2_srodek_odkrecany,addmethod
	push "onfinish"
	push "mg16_zegar25"
	call ansrubokret_anim,addmethod
	push "onfinish"
	push "mg16_zegar26"
	call ancazki_anim,addmethod
	call anpopup2_clock_center,getcx
	call anpopup2_clock_center,getcy
	call anpopup2_wskaz_min,setpos
	call anpopup2_clock_center,getcx
	call anpopup2_clock_center,getcy
	call anpopup2_wskaz_godz,setpos
	push "isbutin"
	push "mg16_zegar27"
	call anczas_2w,addmethod
	push "e1_mg16_zegar_sruba1_removed"
	call clsave,bis
	neg
	cmp0
	je l9708
	call ansruba1,show
	call anpopup2_sruba1_mask,mg16_zegar28
l9708:
	push "e1_mg16_zegar_sruba2_removed"
	call clsave,bis
	neg
	cmp0
	je l9733
	call ansruba2,show
	call anpopup2_sruba2_mask,mg16_zegar32
l9733:
	push "e1_mg16_zegar_sruba3_removed"
	call clsave,bis
	neg
	cmp0
	je l9758
	call ansruba3,show
	call anpopup2_sruba3_mask,mg16_zegar36
l9758:
	push "e1_mg16_zegar_sruba4_removed"
	call clsave,bis
	neg
	cmp0
	je l9783
	call ansruba4,show
	call anpopup2_sruba4_mask,mg16_zegar40
l9783:
	push "e1_mg16_zegar_zepsuty"
	call clsave,bis
	neg
	cmp0
	je l9808
	call anpopup2_anim_cut,mg16_zegar44
l9808:
	push "e1_mg16_zegar_srodek_odkrecony"
	call clsave,bis
	cmp0
	je l9829
	call ansrodek_odkrecany,hide
l9829:
	push "e1_mg16_zegar_dlg_intro_shown"
	call clsave,bis
	neg
	cmp0
	je l9831
	push "snd_intro"
	push "kinnat_c2d2_8a"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_intro,addmethod
l9831:
	cthis wskazowki_zdjete
	neg
	cmp0
	je l9833
	push "snd_pointers"
	push "kinnat_c2d2_8b"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_pointers,addmethod
l9833:
	push "snd_done"
	push "kinnat_c2d2_8c"
	cthis newsndfree
	push "onfinish"
	push "timfinito"
	call snd_done,addmethod
	cthis stdstart
	end method
	method mg16_zegar0
	push "isbutin"
	push "mg16_zegar1"
	cthis addmethod
	push "butclick"
	push "mg16_zegar2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg16_zegar1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpopup_bkg,isin
	neg
	cmp0
	je l9639
	push $1
	push $2
	push 1
	push 1
	call anpopup2_bkg,isin
	neg
	jmp l9641
l9639:
	push 0
	jmp l9641
l9640:
	push 1
l9641:
	end method
	method mg16_zegar2
	cthis advstdstate
	neg
	cmp0
	je l9643
	ret
l9643:
	cthis mend
	end method
	method mg16_zegar3
	push "isbutin"
	push "mg16_zegar4"
	cthis addmethod
	push "butmoveon"
	push "mg16_zegar5"
	cthis addmethod
	push "butmoveoff"
	push "mg16_zegar6"
	cthis addmethod
	push "butclick"
	push "mg16_zegar7"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg16_zegar4
	localint $1
	localint $2
	pop $2
	pop $1
	cthis advstdstate
	cmp0
	je l9644
	push $1
	push $2
	push 0
	push 0
	cthis isin
	jmp l9646
l9644:
	push 0
	jmp l9646
l9645:
	push 1
l9646:
	end method
	method mg16_zegar5
	push popup2_open
	neg
	cmp0
	je l9648
	push "e1_mg16_zegar_clock_ramka_opened"
	call clsave,bis
	cmp0
	je l9650
	push "loupe"
	call advmouse,set
	jmp l9649
l9650:
	push "take"
	call advmouse,set
l9649:
	jmp l9647
l9648:
	call advmouse,setstd
l9647:
	end method
	method mg16_zegar6
	call advmouse,setstd
	end method
	method mg16_zegar7
	cthis advstdstate
	neg
	cmp0
	jne l9653
	push popup2_open
	jmp l9654
l9652:
	push 0
	jmp l9654
l9653:
	push 1
l9654:
	cmp0
	je l9655
	ret
l9655:
	call advmouse,setbut
	push "e1_mg16_zegar_clock_ramka_opened"
	call clsave,bis
	neg
	cmp0
	je l9657
	push "e1_mg16_zegar_clock_ramka_opened"
	call clsave,bset
	push 1
	call anclock_ramka,play
	push 300
	push "null"
	call anclock_open_odbicie,anfadein
	call fxcyk,play
l9657:
	cthis open_popup2
	call advmouse,setstd
	end method
	method mg16_zegar8
	push popup2_open
	cmp0
	je l9659
	ret
l9659:
	call advmouse,setstd
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	end method
	method mg16_zegar9
	cthis Button_isinalpha
	push "butmoveon"
	push "mg16_zegar10"
	cthis addmethod
	push "butmoveoff"
	push "mg16_zegar11"
	cthis addmethod
	push "butclick"
	push "mg16_zegar12"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg16_zegar10
	push popup2_open
	neg
	cmp0
	je l9661
	ret
l9661:
	call advmouse,setstd
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	end method
	method mg16_zegar11
	push popup2_open
	neg
	cmp0
	je l9663
	ret
l9663:
	call advmouse,setstd
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	end method
	method mg16_zegar12
	push popup2_open
	neg
	cmp0
	je l9665
	ret
l9665:
	push "null"
	cthis close_popup2
	end method
	method mg16_zegar13
	cthis Button_isinalpha
	push "butmoveon"
	push "mg16_zegar14"
	cthis addmethod
	push "butmoveoff"
	push "mg16_zegar15"
	cthis addmethod
	push "onfinish"
	push "mg16_zegar16"
	cthis addmethod
	push "butclick"
	push "mg16_zegar17"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg16_zegar14
	push popup2_open
	neg
	cmp0
	je l9669
	ret
l9669:
	push "take"
	call advmouse,set
	end method
	method mg16_zegar15
	push popup2_open
	neg
	cmp0
	je l9671
	ret
l9671:
	call advmouse,setstd
	end method
	method mg16_zegar16
	push "e1_mg16_zegar_wskaz_min_removed"
	call clsave,bis
	cmp0
	je l9673
	cthis hide
l9673:
	end method
	method mg16_zegar17
	push popup2_open
	neg
	cmp0
	je l9675
	ret
l9675:
	push "e1_mg16_zegar_time_set"
	call clsave,bis
	cmp0
	je l9677
	push 1
	cthis play
	cthis getname
	call butgame,removebut
	push "e1_mg16_zegar_wskaz_min_removed"
	call clsave,bset
	call advmouse,setstd
	call fxszufladaklik,play
	jmp l9676
l9677:
	push 30
	cthis rotate_min
l9676:
	end method
	method mg16_zegar18
	cthis Button_isinalpha
	push "butmoveon"
	push "mg16_zegar19"
	cthis addmethod
	push "butmoveoff"
	push "mg16_zegar20"
	cthis addmethod
	push "onfinish"
	push "mg16_zegar21"
	cthis addmethod
	push "butclick"
	push "mg16_zegar22"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg16_zegar19
	push popup2_open
	neg
	cmp0
	je l9681
	ret
l9681:
	push "take"
	call advmouse,set
	end method
	method mg16_zegar20
	push popup2_open
	neg
	cmp0
	je l9683
	ret
l9683:
	call advmouse,setstd
	end method
	method mg16_zegar21
	push "e1_mg16_zegar_wskaz_godz_removed"
	call clsave,bis
	cmp0
	je l9685
	cthis hide
l9685:
	end method
	method mg16_zegar22
	push popup2_open
	neg
	cmp0
	je l9687
	ret
l9687:
	push "e1_mg16_zegar_time_set"
	call clsave,bis
	cmp0
	je l9689
	push 1
	cthis play
	call anwskaz_godz,hide
	cthis getname
	call butgame,removebut
	push "e1_mg16_zegar_wskaz_godz_removed"
	call clsave,bset
	call advmouse,setstd
	call fxszufladaklik,play
	jmp l9688
l9689:
	push 30
	cthis rotate_godz
l9688:
	end method
	method mg16_zegar23
	push 200
	push "null"
	cthis anfadeout
	call ansrodek_odkrecany,hide
	end method
	method mg16_zegar24
	push 25
	popax
	sub 0,$a
	push 20
	popax
	sub 0,$a
	cthis move
	end method
	method mg16_zegar25
	cthis hide
	cthis odkrecanie_completed
	cmp0
	je l9695
	call fxsejf,play
	push 1
	call anpopup2_srodek_odkrecany,play
	push "srubokret"
	cthis removefrompck
	push "e1_mg16_zegar_srodek_odkrecony"
	call clsave,bset
	cthis advsetstdstate
	jmp l9694
l9695:
	call anitem_srubokret,show
	cthis advsetstdstate
l9694:
	push "e1_mg16_zegar_sruba1_removed"
	call clsave,bis
	cmp0
	je l9697
	call anpopup2_sruba1,hide
	call ansruba1,hide
l9697:
	push "e1_mg16_zegar_sruba2_removed"
	call clsave,bis
	cmp0
	je l9699
	call anpopup2_sruba2,hide
	call ansruba2,hide
l9699:
	push "e1_mg16_zegar_sruba3_removed"
	call clsave,bis
	cmp0
	je l9701
	call anpopup2_sruba3,hide
	call ansruba3,hide
l9701:
	push "e1_mg16_zegar_sruba4_removed"
	call clsave,bis
	cmp0
	je l9703
	call anpopup2_sruba4,hide
	call ansruba4,hide
l9703:
	end method
	method mg16_zegar26
	push "stop"
	call ananim_cut,play
	push 0
	call anA_anim,stop
	push 0
	call anB_anim,stop
	push 0
	call anC_anim,stop
	push 0
	call anD_anim,stop
	push 0
	call anE_anim,stop
	push "stop"
	call anpopup2_anim_cut,play
	push 0
	call anpopup2_anim_cut,stop
	push 0
	call anpopup2_A_anim,stop
	push 0
	call anpopup2_B_anim,stop
	push 0
	call anpopup2_C_anim,stop
	push 0
	call anpopup2_D_anim,stop
	push 0
	call anpopup2_E_anim,stop
	cthis advsetstdstate
	push 200
	push "null"
	cthis anfadeout
	push "snd_done"
	cthis cbplay
	end method
	method mg16_zegar27
	localint $1
	localint $2
	pop $2
	pop $1
	cthis advstdstate
	cmp0
	je l9704
	push $1
	push $2
	push 0
	push 0
	cthis isin
	cmp0
	je l9704
	cthis loupe_visible
	jmp l9706
l9704:
	push 0
	jmp l9706
l9705:
	push 1
l9706:
	end method
	method mg16_zegar28
	cthis Button_isinvis
	push "butmoveon"
	push "mg16_zegar29"
	cthis addmethod
	push "butmoveoff"
	push "mg16_zegar30"
	cthis addmethod
	push "butclick"
	push "mg16_zegar31"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg16_zegar29
	cthis advstdstate
	neg
	cmp0
	jne l9711
	cthis wskazowki_zdjete
	neg
	jmp l9712
l9710:
	push 0
	jmp l9712
l9711:
	push 1
l9712:
	cmp0
	je l9713
	push sgmstate
	push "getitem"
	cmpjne
	jmp l9715
l9713:
	push 0
	jmp l9715
l9714:
	push 1
l9715:
	cmp0
	je l9716
	ret
l9716:
	push "e1_mg16_zegar_sruba1_removed"
	call clsave,bis
	neg
	cmp0
	je l9718
	push popup2_open
	jmp l9720
l9718:
	push 0
	jmp l9720
l9719:
	push 1
l9720:
	cmp0
	je l9721
	push "use"
	call advmouse,set
	jmp l9717
l9721:
	call advmouse,setstd
l9717:
	end method
	method mg16_zegar30
	call advmouse,setstd
	end method
	method mg16_zegar31
	cthis advstdstate
	neg
	cmp0
	jne l9724
	cthis wskazowki_zdjete
	neg
	jmp l9725
l9723:
	push 0
	jmp l9725
l9724:
	push 1
l9725:
	cmp0
	je l9726
	ret
l9726:
	push "e1_mg16_zegar_sruba1_removed"
	call clsave,bis
	neg
	cmp0
	je l9728
	push popup2_open
	jmp l9730
l9728:
	push 0
	jmp l9730
l9729:
	push 1
l9730:
	cmp0
	je l9731
	push "snd_sruba"
	cthis cbplay
l9731:
	end method
	method mg16_zegar32
	cthis Button_isinvis
	push "butmoveon"
	push "mg16_zegar33"
	cthis addmethod
	push "butmoveoff"
	push "mg16_zegar34"
	cthis addmethod
	push "butclick"
	push "mg16_zegar35"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg16_zegar33
	cthis advstdstate
	neg
	cmp0
	jne l9736
	cthis wskazowki_zdjete
	neg
	jmp l9737
l9735:
	push 0
	jmp l9737
l9736:
	push 1
l9737:
	cmp0
	je l9738
	push sgmstate
	push "getitem"
	cmpjne
	jmp l9740
l9738:
	push 0
	jmp l9740
l9739:
	push 1
l9740:
	cmp0
	je l9741
	ret
l9741:
	push "e1_mg16_zegar_sruba2_removed"
	call clsave,bis
	neg
	cmp0
	je l9743
	push popup2_open
	jmp l9745
l9743:
	push 0
	jmp l9745
l9744:
	push 1
l9745:
	cmp0
	je l9746
	push "use"
	call advmouse,set
	jmp l9742
l9746:
	call advmouse,setstd
l9742:
	end method
	method mg16_zegar34
	call advmouse,setstd
	end method
	method mg16_zegar35
	cthis advstdstate
	neg
	cmp0
	jne l9749
	cthis wskazowki_zdjete
	neg
	jmp l9750
l9748:
	push 0
	jmp l9750
l9749:
	push 1
l9750:
	cmp0
	je l9751
	ret
l9751:
	push "e1_mg16_zegar_sruba2_removed"
	call clsave,bis
	neg
	cmp0
	je l9753
	push popup2_open
	jmp l9755
l9753:
	push 0
	jmp l9755
l9754:
	push 1
l9755:
	cmp0
	je l9756
	push "snd_sruba"
	cthis cbplay
l9756:
	end method
	method mg16_zegar36
	cthis Button_isinvis
	push "butmoveon"
	push "mg16_zegar37"
	cthis addmethod
	push "butmoveoff"
	push "mg16_zegar38"
	cthis addmethod
	push "butclick"
	push "mg16_zegar39"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg16_zegar37
	cthis advstdstate
	neg
	cmp0
	jne l9761
	cthis wskazowki_zdjete
	neg
	jmp l9762
l9760:
	push 0
	jmp l9762
l9761:
	push 1
l9762:
	cmp0
	je l9763
	push sgmstate
	push "getitem"
	cmpjne
	jmp l9765
l9763:
	push 0
	jmp l9765
l9764:
	push 1
l9765:
	cmp0
	je l9766
	ret
l9766:
	push "e1_mg16_zegar_sruba3_removed"
	call clsave,bis
	neg
	cmp0
	je l9768
	push popup2_open
	jmp l9770
l9768:
	push 0
	jmp l9770
l9769:
	push 1
l9770:
	cmp0
	je l9771
	push "use"
	call advmouse,set
	jmp l9767
l9771:
	call advmouse,setstd
l9767:
	end method
	method mg16_zegar38
	call advmouse,setstd
	end method
	method mg16_zegar39
	cthis advstdstate
	neg
	cmp0
	jne l9774
	cthis wskazowki_zdjete
	neg
	jmp l9775
l9773:
	push 0
	jmp l9775
l9774:
	push 1
l9775:
	cmp0
	je l9776
	ret
l9776:
	push "e1_mg16_zegar_sruba3_removed"
	call clsave,bis
	neg
	cmp0
	je l9778
	push popup2_open
	jmp l9780
l9778:
	push 0
	jmp l9780
l9779:
	push 1
l9780:
	cmp0
	je l9781
	push "snd_sruba"
	cthis cbplay
l9781:
	end method
	method mg16_zegar40
	cthis Button_isinvis
	push "butmoveon"
	push "mg16_zegar41"
	cthis addmethod
	push "butmoveoff"
	push "mg16_zegar42"
	cthis addmethod
	push "butclick"
	push "mg16_zegar43"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg16_zegar41
	cthis advstdstate
	neg
	cmp0
	jne l9786
	cthis wskazowki_zdjete
	neg
	jmp l9787
l9785:
	push 0
	jmp l9787
l9786:
	push 1
l9787:
	cmp0
	je l9788
	push sgmstate
	push "getitem"
	cmpjne
	jmp l9790
l9788:
	push 0
	jmp l9790
l9789:
	push 1
l9790:
	cmp0
	je l9791
	ret
l9791:
	push "e1_mg16_zegar_sruba3_removed"
	call clsave,bis
	neg
	cmp0
	je l9793
	push popup2_open
	jmp l9795
l9793:
	push 0
	jmp l9795
l9794:
	push 1
l9795:
	cmp0
	je l9796
	push "use"
	call advmouse,set
	jmp l9792
l9796:
	call advmouse,setstd
l9792:
	end method
	method mg16_zegar42
	call advmouse,setstd
	end method
	method mg16_zegar43
	cthis advstdstate
	neg
	cmp0
	jne l9799
	cthis wskazowki_zdjete
	neg
	jmp l9800
l9798:
	push 0
	jmp l9800
l9799:
	push 1
l9800:
	cmp0
	je l9801
	ret
l9801:
	push "e1_mg16_zegar_sruba4_removed"
	call clsave,bis
	neg
	cmp0
	je l9803
	push popup2_open
	jmp l9805
l9803:
	push 0
	jmp l9805
l9804:
	push 1
l9805:
	cmp0
	je l9806
	push "snd_sruba"
	cthis cbplay
l9806:
	end method
	method mg16_zegar44
	push "isbutin"
	push "mg16_zegar45"
	cthis addmethod
	push "butmoveon"
	push "mg16_zegar46"
	cthis addmethod
	push "butmoveoff"
	push "mg16_zegar47"
	cthis addmethod
	push "butclick"
	push "mg16_zegar48"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg16_zegar45
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 1
	cthis isin
	cmp0
	je l9809
	push popup2_open
	cmp0
	je l9809
	push "e1_mg16_zegar_zepsuty"
	call clsave,bis
	neg
	jmp l9811
l9809:
	push 0
	jmp l9811
l9810:
	push 1
l9811:
	end method
	method mg16_zegar46
	push popup2_open
	neg
	cmp0
	jne l9814
	push "e1_mg16_zegar_srodek_odkrecony"
	call clsave,bis
	neg
	jmp l9815
l9813:
	push 0
	jmp l9815
l9814:
	push 1
l9815:
	cmp0
	je l9816
	ret
l9816:
	push "e1_mg16_zegar_zepsuty"
	call clsave,bis
	neg
	cmp0
	je l9818
	push "use"
	call advmouse,set
	jmp l9817
l9818:
	call advmouse,setstd
l9817:
	end method
	method mg16_zegar47
	cthis advstdstate
	neg
	cmp0
	je l9820
	ret
l9820:
	call advmouse,setstd
	end method
	method mg16_zegar48
	cthis advstdstate
	neg
	cmp0
	jne l9823
	push "e1_mg16_zegar_srodek_odkrecony"
	call clsave,bis
	neg
	jmp l9824
l9822:
	push 0
	jmp l9824
l9823:
	push 1
l9824:
	cmp0
	je l9825
	ret
l9825:
	push "e1_mg16_zegar_zepsuty"
	call clsave,bis
	neg
	cmp0
	je l9827
	push "snd_drucik"
	cthis cbplay
l9827:
	end method
	method rotate_min
	localint $1
	pop $1
	push $1
	popax
	add rot_min,$a
	pop rot_min
	call rot_min,abs
	push 360
	cmpje
	cmp0
	je l9835
	push 0
	pop rot_min
l9835:
	push $1
	popax
	sub 0,$a
	call ftrot_min,rotate
	push $1
	popax
	sub 0,$a
	call ftrot_min_small,rotate
	cthis check_min_set
	cmp0
	je l9837
	push 0
	call anpopup2_wskaz_min,play
	push "e1_mg16_zegar_wskaz_min_set"
	call clsave,bset
	push "e1_mg16_zegar_wskaz_godz_set"
	call clsave,bis
	cmp0
	je l9839
	push "e1_mg16_zegar_time_set"
	call clsave,bset
	push "anpopup2_wskaz_godz"
	call butgame,add
	jmp l9838
l9839:
	push "anpopup2_wskaz_min"
	call butgame,removebut
	call advmouse,setstd
l9838:
l9837:
	call fxszufladaklik,play
	end method
	method rotate_godz
	localint $1
	pop $1
	push $1
	popax
	add rot_godz,$a
	pop rot_godz
	call rot_godz,abs
	push 360
	cmpje
	cmp0
	je l9841
	push 0
	pop rot_godz
l9841:
	push $1
	popax
	sub 0,$a
	call ftrot_godz,rotate
	push $1
	popax
	sub 0,$a
	call ftrot_godz_small,rotate
	cthis check_godz_set
	cmp0
	je l9843
	push 0
	call anpopup2_wskaz_godz,play
	push "e1_mg16_zegar_wskaz_godz_set"
	call clsave,bset
	push "e1_mg16_zegar_wskaz_min_set"
	call clsave,bis
	cmp0
	je l9845
	push "e1_mg16_zegar_time_set"
	call clsave,bset
	push "anpopup2_wskaz_min"
	call butgame,add
	jmp l9844
l9845:
	push "anpopup2_wskaz_godz"
	call butgame,removebut
	call advmouse,setstd
l9844:
l9843:
	call fxszufladaklik,play
	end method
	method open_popup2
	push "e1_mg16_zegar_dlg_intro_shown"
	call clsave,bis
	neg
	cmp0
	je l9847
	push "snd_intro"
	cthis cbplay
	push "e1_mg16_zegar_dlg_intro_shown"
	call clsave,bset
l9847:
	push 1
	pop popup2_open
	call anpopup2_bkg,show
	call anpopup2_ramka,show
	call anpopup2_popexit,show
	call anpopup2_anim_cut,show
	call anpopup2_A_anim,show
	call anpopup2_B_anim,show
	call anpopup2_C_anim,show
	call anpopup2_D_anim,show
	call anpopup2_E_anim,show
	push "e1_mg16_zegar_zepsuty"
	call clsave,bis
	neg
	cmp0
	je l9849
	push 0
	call anpopup2_anim_cut,play
	push 0
	call anpopup2_A_anim,play
	push 0
	call anpopup2_B_anim,play
	push 0
	call anpopup2_C_anim,play
	push 0
	call anpopup2_D_anim,play
	push 0
	call anpopup2_E_anim,play
	jmp l9848
l9849:
	push 1
	call anpopup2_anim_cut,play
l9848:
	push "e1_mg16_zegar_srodek_odkrecony"
	call clsave,bis
	neg
	cmp0
	je l9851
	call anpopup2_srodek_odkrecany,show
l9851:
	push "e1_mg16_zegar_sruba1_removed"
	call clsave,bis
	neg
	cmp0
	je l9853
	call anpopup2_sruba1,show
l9853:
	push "e1_mg16_zegar_sruba2_removed"
	call clsave,bis
	neg
	cmp0
	je l9855
	call anpopup2_sruba2,show
l9855:
	push "e1_mg16_zegar_sruba3_removed"
	call clsave,bis
	neg
	cmp0
	je l9857
	call anpopup2_sruba3,show
l9857:
	push "e1_mg16_zegar_sruba4_removed"
	call clsave,bis
	neg
	cmp0
	je l9859
	call anpopup2_sruba4,show
l9859:
	push "e1_mg16_zegar_wskaz_min_removed"
	call clsave,bis
	neg
	cmp0
	je l9861
	call anpopup2_wskaz_min,show
l9861:
	push "e1_mg16_zegar_wskaz_godz_removed"
	call clsave,bis
	neg
	cmp0
	je l9863
	call anpopup2_wskaz_godz,show
l9863:
	push "e1_mg16_zegar_srodek_odkrecony"
	call clsave,bis
	cmp0
	je l9865
	push "e1_mg16_zegar_zepsuty"
	call clsave,bis
	neg
	jmp l9867
l9865:
	push 0
	jmp l9867
l9866:
	push 1
l9867:
	cmp0
	je l9868
	push "anpopup2_dzwiek"
	cthis gui_toloupe
	call anpopup2_dzwiek,anhideonsetframe
	push 0
	call anpopup2_dzwiek,play
l9868:
	end method
	method check_godz_set
	push rot_godz
	push 30
	cmpje
	cmp0
	je l9870
	push 1
	ret
l9870:
	push 0
	ret
	end method
	method check_min_set
	push rot_min
	push 180
	cmpje
	cmp0
	je l9872
	push 1
	ret
l9872:
	push 0
	ret
	end method
	method close_popup2
	push 0
	pop popup2_open
	call anpopup2_bkg,hide
	call anpopup2_ramka,hide
	call anpopup2_popexit,hide
	push 0
	call anpopup2_anim_cut,stop
	call anpopup2_anim_cut,hide
	push 0
	call anpopup2_A_anim,stop
	call anpopup2_A_anim,hide
	push 0
	call anpopup2_B_anim,stop
	call anpopup2_B_anim,hide
	push 0
	call anpopup2_C_anim,stop
	call anpopup2_C_anim,hide
	push 0
	call anpopup2_D_anim,stop
	call anpopup2_D_anim,hide
	push 0
	call anpopup2_E_anim,stop
	call anpopup2_E_anim,hide
	call anpopup2_srodek_odkrecany,hide
	push "e1_mg16_zegar_sruba1_odkrecona"
	call clsave,bis
	neg
	cmp0
	je l9874
	call anpopup2_sruba1,hide
l9874:
	push "e1_mg16_zegar_sruba2_odkrecona"
	call clsave,bis
	neg
	cmp0
	je l9876
	call anpopup2_sruba2,hide
l9876:
	push "e1_mg16_zegar_sruba3_odkrecona"
	call clsave,bis
	neg
	cmp0
	je l9878
	call anpopup2_sruba3,hide
l9878:
	push "e1_mg16_zegar_sruba4_odkrecona"
	call clsave,bis
	neg
	cmp0
	je l9880
	call anpopup2_sruba4,hide
l9880:
	call anpopup2_wskaz_min,hide
	call anpopup2_wskaz_godz,hide
	push "anpopup2_dzwiek"
	cthis gui_removefromloupe
	cthis advsetstdstate
	end method
	method USE_srubokret
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call anpopup2_sruba1_mask,isin
	cmp0
	je l9882
	push "e1_mg16_zegar_sruba1_removed"
	call clsave,bis
	neg
	jmp l9884
l9882:
	push 0
	jmp l9884
l9883:
	push 1
l9884:
	cmp0
	je l9885
	cthis wskazowki_zdjete
	neg
	cmp0
	je l9887
	push "snd_pointers"
	cthis cbplay
	cthis item_gotopck
	jmp l9886
l9887:
	push "e1_mg16_zegar_sruba1_removed"
	call clsave,bset
	call anitem_srubokret,hide
	call anpopup2_sruba1,getcx
	call anpopup2_sruba1,getcy
	call ansrubokret_anim,setpos
	push 0
	call ansrubokret_anim,play
	push 800
	push "null"
	call anpopup2_sruba1,anfadeout
	push "anpopup2_sruba1_mask"
	cthis removebut
	cthis checktouchpad
	neg
	cmp0
	je l9889
	push "getitem"
	cthis advsetstate
	push "anitem_srubokret"
	call guimov,setmoved
	jmp l9888
l9889:
	cthis item_gotopck
l9888:
	call advmouse,setstd
	cthis odkrecanie_completed
	cmp0
	je l9891
	cthis after_odkrecanie
	jmp l9890
l9891:
	call fxodkrecanie,play
l9890:
l9886:
	jmp l9881
l9885:
	call mouse,getpos
	push 0
	push 0
	call anpopup2_sruba2_mask,isin
	cmp0
	je l9893
	push "e1_mg16_zegar_sruba2_removed"
	call clsave,bis
	neg
	jmp l9895
l9893:
	push 0
	jmp l9895
l9894:
	push 1
l9895:
	cmp0
	je l9896
	cthis wskazowki_zdjete
	neg
	cmp0
	je l9898
	push "snd_pointers"
	cthis cbplay
	cthis item_gotopck
	jmp l9897
l9898:
	push "e1_mg16_zegar_sruba2_removed"
	call clsave,bset
	call anitem_srubokret,hide
	call anpopup2_sruba2,getcx
	call anpopup2_sruba2,getcy
	call ansrubokret_anim,setpos
	push 0
	call ansrubokret_anim,play
	push 800
	push "null"
	call anpopup2_sruba2,anfadeout
	push "anpopup2_sruba2_mask"
	cthis removebut
	cthis checktouchpad
	neg
	cmp0
	je l9900
	push "getitem"
	cthis advsetstate
	push "anitem_srubokret"
	call guimov,setmoved
	jmp l9899
l9900:
	cthis item_gotopck
l9899:
	call advmouse,setstd
	cthis odkrecanie_completed
	cmp0
	je l9902
	cthis after_odkrecanie
	jmp l9901
l9902:
	call fxodkrecanie,play
l9901:
l9897:
	jmp l9892
l9896:
	call mouse,getpos
	push 0
	push 0
	call anpopup2_sruba3_mask,isin
	cmp0
	je l9904
	push "e1_mg16_zegar_sruba3_removed"
	call clsave,bis
	neg
	jmp l9906
l9904:
	push 0
	jmp l9906
l9905:
	push 1
l9906:
	cmp0
	je l9907
	cthis wskazowki_zdjete
	neg
	cmp0
	je l9909
	push "snd_pointers"
	cthis cbplay
	cthis item_gotopck
	jmp l9908
l9909:
	push "e1_mg16_zegar_sruba3_removed"
	call clsave,bset
	call anitem_srubokret,hide
	call anpopup2_sruba3,getcx
	call anpopup2_sruba3,getcy
	call ansrubokret_anim,setpos
	push 0
	call ansrubokret_anim,play
	push 800
	push "null"
	call anpopup2_sruba3,anfadeout
	push "anpopup2_sruba3_mask"
	cthis removebut
	cthis checktouchpad
	neg
	cmp0
	je l9911
	push "getitem"
	cthis advsetstate
	push "anitem_srubokret"
	call guimov,setmoved
	jmp l9910
l9911:
	cthis item_gotopck
l9910:
	call advmouse,setstd
	cthis odkrecanie_completed
	cmp0
	je l9913
	cthis after_odkrecanie
	jmp l9912
l9913:
	call fxodkrecanie,play
l9912:
l9908:
	jmp l9903
l9907:
	call mouse,getpos
	push 0
	push 0
	call anpopup2_sruba4_mask,isin
	cmp0
	je l9915
	push "e1_mg16_zegar_sruba4_removed"
	call clsave,bis
	neg
	jmp l9917
l9915:
	push 0
	jmp l9917
l9916:
	push 1
l9917:
	cmp0
	je l9918
	cthis wskazowki_zdjete
	neg
	cmp0
	je l9920
	push "snd_pointers"
	cthis cbplay
	cthis item_gotopck
	jmp l9919
l9920:
	push "e1_mg16_zegar_sruba4_removed"
	call clsave,bset
	call anitem_srubokret,hide
	call anpopup2_sruba4,getcx
	call anpopup2_sruba4,getcy
	call ansrubokret_anim,setpos
	push 0
	call ansrubokret_anim,play
	push 800
	push "null"
	call anpopup2_sruba4,anfadeout
	push "anpopup2_sruba4_mask"
	cthis removebut
	cthis checktouchpad
	neg
	cmp0
	je l9922
	push "getitem"
	cthis advsetstate
	push "anitem_srubokret"
	call guimov,setmoved
	jmp l9921
l9922:
	cthis item_gotopck
l9921:
	call advmouse,setstd
	cthis odkrecanie_completed
	cmp0
	je l9924
	cthis after_odkrecanie
	jmp l9923
l9924:
	call fxodkrecanie,play
l9923:
l9919:
	jmp l9914
l9918:
	cthis item_gotopck
l9914:
l9903:
l9892:
l9881:
	end method
	method odkrecanie_completed
	push "e1_mg16_zegar_sruba1_removed"
	call clsave,bis
	cmp0
	je l9926
	push "e1_mg16_zegar_sruba2_removed"
	call clsave,bis
	cmp0
	je l9926
	push "e1_mg16_zegar_sruba3_removed"
	call clsave,bis
	cmp0
	je l9926
	push "e1_mg16_zegar_sruba4_removed"
	call clsave,bis
	jmp l9928
l9926:
	push 0
	jmp l9928
l9927:
	push 1
l9928:
	cmp0
	je l9929
	push 1
	ret
	jmp l9925
l9929:
	push 0
	ret
l9925:
	end method
	method wskazowki_zdjete
	push "e1_mg16_zegar_wskaz_godz_removed"
	call clsave,bis
	cmp0
	je l9931
	push "e1_mg16_zegar_wskaz_min_removed"
	call clsave,bis
	jmp l9933
l9931:
	push 0
	jmp l9933
l9932:
	push 1
l9933:
	cmp0
	je l9934
	push 1
	ret
	jmp l9930
l9934:
	push 0
	ret
l9930:
	end method
	method after_odkrecanie
	push "e1_mg16_zegar_srodek_odkrecony"
	call clsave,bset
	cthis advsetstdstate
	push "srubokret"
	cthis removefrompck
	call guimov,free
	push "anpopup2_dzwiek"
	cthis gui_toloupe
	call anpopup2_dzwiek,anhideonsetframe
	push 0
	call anpopup2_dzwiek,play
	call advmouse,setstd
	end method
	method USE_cazki
	cthis advsetstdstate
	call mouse,getpos
	push 1
	push 0
	call anpopup2_anim_cut,isin
	cmp0
	je l9936
	push "e1_mg16_zegar_srodek_odkrecony"
	call clsave,bis
	jmp l9938
l9936:
	push 0
	jmp l9938
l9937:
	push 1
l9938:
	cmp0
	je l9939
	push "e1_mg16_zegar_zepsuty"
	call clsave,bset
	push 0
	call fxzegarcyk,stop
	push "cazki"
	cthis removefrompck
	push 0
	call ancazki_anim,play
	call fxobcegi,play
	call advmouse,setstd
	cthis set_mg_finished
	jmp l9935
l9939:
	cthis item_gotopck
l9935:
	end method
	method mend
	push "ad16_ogrodyzamkowe"
	push "gamead16_ogrodyzamkowe0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "ma_srubokret"
	call clsave,bis
	cmp0
	jne l9942
	push "ma_cazki"
	call clsave,bis
	jmp l9943
l9941:
	push 0
	jmp l9943
l9942:
	push 1
l9943:
	cmp0
	je l9944
	push popup2_open
	neg
	jmp l9946
l9944:
	push 0
	jmp l9946
l9945:
	push 1
l9946:
	cmp0
	je l9947
	push "anzegar"
	cthis showhint
	jmp l9940
l9947:
	push popup2_open
	cmp0
	je l9949
	push "e1_mg16_zegar_wskaz_godz_set"
	call clsave,bis
	neg
	cmp0
	je l9951
	push "anpopup2_wskaz_godz"
	cthis showhint
	jmp l9950
l9951:
	push "e1_mg16_zegar_wskaz_min_set"
	call clsave,bis
	neg
	cmp0
	je l9953
	push "anpopup2_wskaz_min"
	cthis showhint
	jmp l9952
l9953:
	push "e1_mg16_zegar_wskaz_godz_removed"
	call clsave,bis
	neg
	cmp0
	je l9955
	push "anpopup2_wskaz_godz"
	cthis showhint
	jmp l9954
l9955:
	push "e1_mg16_zegar_wskaz_min_removed"
	call clsave,bis
	neg
	cmp0
	je l9957
	push "anpopup2_wskaz_min"
	cthis showhint
	jmp l9956
l9957:
	push "ma_srubokret"
	call clsave,bis
	cmp0
	je l9959
	push "e1_mg16_zegar_sruba1_removed"
	call clsave,bis
	neg
	jmp l9961
l9959:
	push 0
	jmp l9961
l9960:
	push 1
l9961:
	cmp0
	je l9962
	push "anpopup2_sruba1"
	cthis showhint
	push "srubokret"
	cthis showhintitem
	jmp l9958
l9962:
	push "ma_srubokret"
	call clsave,bis
	cmp0
	je l9964
	push "e1_mg16_zegar_sruba2_removed"
	call clsave,bis
	neg
	jmp l9966
l9964:
	push 0
	jmp l9966
l9965:
	push 1
l9966:
	cmp0
	je l9967
	push "anpopup2_sruba2"
	cthis showhint
	push "srubokret"
	cthis showhintitem
	jmp l9963
l9967:
	push "ma_srubokret"
	call clsave,bis
	cmp0
	je l9969
	push "e1_mg16_zegar_sruba3_removed"
	call clsave,bis
	neg
	jmp l9971
l9969:
	push 0
	jmp l9971
l9970:
	push 1
l9971:
	cmp0
	je l9972
	push "anpopup2_sruba3"
	cthis showhint
	push "srubokret"
	cthis showhintitem
	jmp l9968
l9972:
	push "ma_srubokret"
	call clsave,bis
	cmp0
	je l9974
	push "e1_mg16_zegar_sruba4_removed"
	call clsave,bis
	neg
	jmp l9976
l9974:
	push 0
	jmp l9976
l9975:
	push 1
l9976:
	cmp0
	je l9977
	push "anpopup2_sruba4"
	cthis showhint
	push "srubokret"
	cthis showhintitem
	jmp l9973
l9977:
	push "e1_mg16_zegar_srodek_odkrecony"
	call clsave,bis
	cmp0
	je l9979
	push "ma_cazki"
	call clsave,bis
	cmp0
	je l9981
	push "anpopup2_anim_cut"
	cthis showhint
	push "cazki"
	cthis showhintitem
	jmp l9980
l9981:
	push "anpopup2_popexit"
	cthis showhint
l9980:
	jmp l9978
l9979:
	push "anpopup2_popexit"
	cthis showhint
l9978:
l9973:
l9968:
l9963:
l9958:
l9956:
l9954:
l9952:
l9950:
	jmp l9948
l9949:
	push "anpopexit"
	cthis showhint
l9948:
l9940:
	end method
	end game

	game mg18_lew
	parent Banshee
	method init
	push "mg18_lew"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "lew.pyzH 3"
	push "lew_mruzy.pyzH 6"
	push "lew_glowa.pyzH 7"
	push "lew_je.pyzH 8"
	push "lew_spi.pyzH 9"
	push "medalion.pyzH 10"
	push "medalion_anim.pyzH 11"
	push "anim_poswiata.pyzH 10"
	push "anim_stars.pyzH 11"
	push "lew_ogien.pyzH 12"
	push "nalewanie.pyzH 12"
	push "maska_popup.pyz 14"
	push "ramka.pyz 30"
	push "szkielko_bkg.pyzH 30"
	push "popexit.pyz 32"
	cthis imgs=
	push A
	push "bgrszumN 40"
	push "wiatr3N 40"
	push "gargulec_ogien 40"
	push "diamenty"
	push "showdemon"
	push "blyskotkiN 15"
	cthis sfxs=
	cthis butpopexit
	new Film,filmb
	push "mus"
	call filmb,musicclass=
	push "onfinish"
	push "mg18_lew0"
	call filmb,addmethod
	push "scripts/cs18_szkielko/"
	push "film"
	call filmb,load
	call filmb,showfirstframe
	push 50
	call filmb,setz
	call anszkielko_bkg,getpx
	push 80
	pop $b
	popax
	sub $a,$b
	call anszkielko_bkg,getpy
	call filmb,setpos
	call filmb,hide
	push "snd_note"
	push "kinnat_c2d2_8f"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_note,addmethod
	call imgbkg,mg18_lew1
	push "e1_ad18_szklarnia_all_inserted"
	call clsave,bis
	neg
	cmp0
	je l9985
	push 1
	call anlew_ogien,setdrawmode
	push 0
	call anlew_ogien,play
l9985:
	push "e1_ad18_szklarnia_medalion_wziety"
	call clsave,bis
	neg
	cmp0
	je l9987
	call anmedalion,show
	push 0
	call anmedalion_anim,play
	call anmedalion,mg18_lew4
l9987:
	push "e1_ad18_szklarnia_all_inserted"
	call clsave,bis
	cmp0
	je l10004
	push "e1_mg18_lew_winogrona_uzyte"
	call clsave,bis
	cmp0
	je l10006
	push 0
	call anlew_spi,play
	jmp l10005
l10006:
	push "e1_ad18_szklarnia_bylo_mruganie"
	call clsave,bis
	neg
	cmp0
	je l10008
	push 0
	call anlew_mruzy,play
	push "e1_ad18_szklarnia_bylo_mruganie"
	call clsave,bset
	jmp l10007
l10008:
	push 1
	call anlew_mruzy,play
l10007:
l10005:
	push 0
	call ananim_poswiata,play
	push 0
	call ananim_stars,play
	push "e1_mg18_lew_winogrona_uzyte"
	call clsave,bis
	neg
	cmp0
	je l10010
	call anlew_glowa,mg18_lew9
l10010:
	push "onfinish"
	push "mg18_lew13"
	call anlew_je,addmethod
	jmp l10003
l10004:
	push 1
	call fxblyskotki,stop
l10003:
	cthis stdstart
	end method
	method mg18_lew0
	cthis timfinito
	end method
	method mg18_lew1
	push "isbutin"
	push "mg18_lew2"
	cthis addmethod
	push "butclick"
	push "mg18_lew3"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg18_lew2
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpopup_bkg,isin
	neg
	end method
	method mg18_lew3
	cthis advstdstate
	neg
	cmp0
	je l9983
	ret
l9983:
	cthis mend
	end method
	method mg18_lew4
	push "isbutin"
	push "mg18_lew5"
	cthis addmethod
	push "butmoveon"
	push "mg18_lew6"
	cthis addmethod
	push "butmoveoff"
	push "mg18_lew7"
	cthis addmethod
	push "butclick"
	push "mg18_lew8"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg18_lew5
	localint $1
	localint $2
	pop $2
	pop $1
	cthis advstdstate
	cmp0
	je l9988
	push $1
	push $2
	push 1
	push 1
	cthis isin
	jmp l9990
l9988:
	push 0
	jmp l9990
l9989:
	push 1
l9990:
	end method
	method mg18_lew6
	push "e1_ad18_szklarnia_medalion_wziety"
	call clsave,bis
	neg
	cmp0
	je l9992
	push "e1_mg18_lew_winogrona_uzyte"
	call clsave,bis
	jmp l9994
l9992:
	push 0
	jmp l9994
l9993:
	push 1
l9994:
	cmp0
	je l9995
	push "take"
	call advmouse,set
l9995:
	end method
	method mg18_lew7
	call advmouse,setstd
	end method
	method mg18_lew8
	cthis advstdstate
	neg
	cmp0
	je l9997
	ret
l9997:
	push "e1_ad18_szklarnia_medalion_wziety"
	call clsave,bis
	neg
	cmp0
	je l9999
	push "e1_mg18_lew_winogrona_uzyte"
	call clsave,bis
	jmp l10001
l9999:
	push 0
	jmp l10001
l10000:
	push 1
l10001:
	cmp0
	je l10002
	push 400
	push "null"
	call anszkielko_bkg,anfadein
	call advmouse,setstd
	call filmb,play
	push "e1_ad18_szklarnia_medalion_wziety"
	call clsave,bset
	push "e1_ad18_szklarnia_lew_schowany"
	call clsave,bset
	cthis hide
l10002:
	end method
	method mg18_lew9
	cthis Button_isinvis
	push "butmoveon"
	push "mg18_lew10"
	cthis addmethod
	push "butmoveoff"
	push "mg18_lew11"
	cthis addmethod
	push "butclick"
	push "mg18_lew12"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg18_lew10
	push "e1_mg18_lew_winogrona_uzyte"
	call clsave,bis
	neg
	cmp0
	je l10012
	push "e1_ad18_szklarnia_all_inserted"
	call clsave,bis
	jmp l10014
l10012:
	push 0
	jmp l10014
l10013:
	push 1
l10014:
	cmp0
	je l10015
	push "use"
	call advmouse,set
	jmp l10011
l10015:
	call advmouse,setstd
l10011:
	end method
	method mg18_lew11
	call advmouse,setstd
	end method
	method mg18_lew12
	cthis advstdstate
	neg
	cmp0
	je l10017
	ret
l10017:
	push "e1_mg18_lew_winogrona_uzyte"
	call clsave,bis
	neg
	cmp0
	je l10019
	push "e1_ad18_szklarnia_all_inserted"
	call clsave,bis
	jmp l10021
l10019:
	push 0
	jmp l10021
l10020:
	push 1
l10021:
	cmp0
	je l10022
	push "snd_note"
	cthis cbplay
l10022:
	end method
	method mg18_lew13
	push 0
	call anlew_spi,play
	end method
	method USE_winogrona
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call anlew_glowa,isin
	cmp0
	je l10024
	push "e1_ad18_szklarnia_all_inserted"
	call clsave,bis
	jmp l10026
l10024:
	push 0
	jmp l10026
l10025:
	push 1
l10026:
	cmp0
	je l10027
	push "winogrona"
	cthis removefrompck
	push 0
	call annalewanie,play
	push 0
	call anlew_je,play
	push 0
	call anlew_ogien,stop
	call anlew_ogien,hide
	push "e1_mg18_lew_winogrona_uzyte"
	call clsave,bset
	call advmouse,setstd
	jmp l10023
l10027:
	cthis item_gotopck
l10023:
	end method
	method mend
	push "ad18_szklarnia"
	push "gamead18_szklarnia0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "taken_winogrona"
	call clsave,bis
	cmp0
	je l10029
	push "e1_mg18_lew_winogrona_uzyte"
	call clsave,bis
	neg
	jmp l10031
l10029:
	push 0
	jmp l10031
l10030:
	push 1
l10031:
	cmp0
	je l10032
	push "anlew_glowa"
	cthis showhint
	push "winogrona"
	cthis showhintitem
	jmp l10028
l10032:
	push "e1_mg18_lew_winogrona_uzyte"
	call clsave,bis
	cmp0
	je l10034
	push "e1_ad18_szklarnia_medalion_wziety"
	call clsave,bis
	neg
	jmp l10036
l10034:
	push 0
	jmp l10036
l10035:
	push 1
l10036:
	cmp0
	je l10037
	push "anmedalion"
	cthis showhint
	jmp l10033
l10037:
	push "anpopexit"
	cthis showhint
l10033:
l10028:
	end method
	end game

	game mg19_klodka
	parent Banshee
	method init
	push "mg19_klodka"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "belka_l.pyz 3"
	push "belka_p.pyz 4"
	push "ramka.pyz 5"
	push "palak.pyz 5"
	push "klodka.pyz 6"
	push "oczko.pyz 7"
	push "keyhole.pyzH 8"
	push "klucz.pyzH 9"
	push "popexit.pyz 32"
	cthis imgs=
	push A
	push "bgrlas2N 10"
	push "bgrwiatrN 10"
	push "przekrecaklucz"
	push "opendoor 60"
	push "szufladaklik"
	cthis sfxs=
	cthis butpopexit
	call anramka,getpx
	push 30
	pop $b
	popax
	add $a,$b
	call anramka,getpy
	call anramka,getex
	push 30
	pop $b
	popax
	sub $a,$b
	call anramka,getey
	call anbelka_l,clip
	call anramka,getpx
	push 30
	pop $b
	popax
	add $a,$b
	call anramka,getpy
	call anramka,getex
	push 30
	pop $b
	popax
	sub $a,$b
	call anramka,getey
	call anbelka_p,clip
	call anramka,getpx
	push 30
	pop $b
	popax
	add $a,$b
	call anramka,getpy
	call anramka,getex
	push 30
	pop $b
	popax
	sub $a,$b
	call anramka,getey
	call anoczko,clip
	call imgbkg,mg19_klodka0
	push "e1_mg19_klodka_klucz_inserted"
	call clsave,bis
	neg
	cmp0
	je l10041
	push "snd_intro"
	push "kinnat_c2d2_10c"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_intro,addmethod
l10041:
	push "e1_mg19_klodka_klucz_inserted"
	call clsave,bis
	neg
	cmp0
	je l10043
	call ankeyhole,mg19_klodka3
	jmp l10042
l10043:
	call anklucz,show
l10042:
	call anpalak,mg19_klodka8
	call anklucz,mg19_klodka10
	call anbelka_p,mg19_klodka13
	push "e1_mg19_klodka_otwarta"
	call clsave,bis
	cmp0
	je l10072
	call anklodka,hide
	call anpalak,hide
	call anklucz,hide
l10072:
	cthis stdstart
	end method
	method mg19_klodka0
	push "isbutin"
	push "mg19_klodka1"
	cthis addmethod
	push "butclick"
	push "mg19_klodka2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg19_klodka1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpopup_bkg,isin
	neg
	end method
	method mg19_klodka2
	cthis advstdstate
	neg
	cmp0
	je l10039
	ret
l10039:
	cthis mend
	end method
	method mg19_klodka3
	push "isbutin"
	push "mg19_klodka4"
	cthis addmethod
	push "butmoveon"
	push "mg19_klodka5"
	cthis addmethod
	push "butmoveoff"
	push "mg19_klodka6"
	cthis addmethod
	push "butclick"
	push "mg19_klodka7"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg19_klodka4
	localint $1
	localint $2
	pop $2
	pop $1
	cthis advstdstate
	cmp0
	je l10044
	push $1
	push $2
	push 0
	push 0
	cthis isin
	jmp l10046
l10044:
	push 0
	jmp l10046
l10045:
	push 1
l10046:
	end method
	method mg19_klodka5
	push "e1_mg19_klodka_klucz_inserted"
	call clsave,bis
	neg
	cmp0
	je l10048
	push "use"
	call advmouse,set
l10048:
	end method
	method mg19_klodka6
	call advmouse,setstd
	end method
	method mg19_klodka7
	cthis advstdstate
	neg
	cmp0
	je l10050
	ret
l10050:
	push "e1_mg19_klodka_klucz_inserted"
	call clsave,bis
	neg
	cmp0
	je l10052
	push "snd_intro"
	cthis cbplay
l10052:
	end method
	method mg19_klodka8
	push "onfinish"
	push "mg19_klodka9"
	cthis addmethod
	end method
	method mg19_klodka9
	push "e1_mg19_klodka_klucz_inserted"
	call clsave,bis
	cmp0
	je l10054
	push "timklodkaout"
	push 500
	push "klodka_out"
	cthis timplay
	push "e1_ad003_drzwi_otwarte"
	call clsave,bset
l10054:
	end method
	method mg19_klodka10
	push "isbutin"
	push "mg19_klodka11"
	cthis addmethod
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg19_klodka12"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg19_klodka11
	localint $1
	localint $2
	pop $2
	pop $1
	cthis advstdstate
	cmp0
	je l10055
	push $1
	push $2
	push 0
	push 0
	cthis isin
	cmp0
	je l10055
	push "e1_mg19_klodka_klucz_inserted"
	call clsave,bis
	cmp0
	je l10055
	push "e1_mg19_klodka_otwarta"
	call clsave,bis
	neg
	jmp l10057
l10055:
	push 0
	jmp l10057
l10056:
	push 1
l10057:
	end method
	method mg19_klodka12
	cthis advstdstate
	neg
	cmp0
	jne l10060
	push "e1_mg19_klodka_otwarta"
	call clsave,bis
	jmp l10061
l10059:
	push 0
	jmp l10061
l10060:
	push 1
l10061:
	cmp0
	je l10062
	ret
l10062:
	push "0"
	call anklucz,play
	push "open"
	call anpalak,play
	call fxprzekrecaklucz,play
	push "e1_mg19_klodka_otwarta"
	call clsave,bset
	end method
	method mg19_klodka13
	push "isbutin"
	push "mg19_klodka14"
	cthis addmethod
	cthis Button_moveonms
	cthis Button_moveoffms
	push "onfinish"
	push "mg19_klodka15"
	cthis addmethod
	push "butclick"
	push "mg19_klodka16"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg19_klodka14
	localint $1
	localint $2
	pop $2
	pop $1
	cthis advstdstate
	cmp0
	je l10063
	push $1
	push $2
	push 0
	push 0
	cthis isin
	cmp0
	je l10063
	push "e1_mg19_klodka_otwarta"
	call clsave,bis
	cmp0
	je l10063
	push "e1_mg19_belka_zabrana"
	call clsave,bis
	neg
	jmp l10065
l10063:
	push 0
	jmp l10065
l10064:
	push 1
l10065:
	end method
	method mg19_klodka15
	cthis timfinito
	end method
	method mg19_klodka16
	cthis advstdstate
	neg
	cmp0
	jne l10068
	push "e1_mg19_belka_zabrana"
	call clsave,bis
	jmp l10069
l10067:
	push 0
	jmp l10069
l10068:
	push 1
l10069:
	cmp0
	je l10070
	ret
l10070:
	push "open"
	call anbelka_p,play
	push "open"
	call anbelka_l,play
	push "open"
	call anoczko,play
	cthis set_mg_finished
	push "e1_mg19_belka_zabrana"
	call clsave,bset
	call fxopendoor,play
	end method
	method klodka_out
	push 800
	push "null"
	call anklucz,anfadeout
	push 800
	push "null"
	call anklodka,anfadeout
	push 800
	push "null"
	call anpalak,anfadeout
	end method
	method USE_klucz_czaszka
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call ankeyhole,isin
	cmp0
	je l10074
	push "klucz_czaszka"
	cthis removefrompck
	push 800
	push "null"
	call anklucz,anfadein
	push "ankeyhole"
	call butgame,removebut
	push "e1_mg19_klodka_klucz_inserted"
	call clsave,bset
	call advmouse,setstd
	call fxszufladaklik,play
	jmp l10073
l10074:
	cthis advsetstdstate
	cthis item_gotopck
l10073:
	end method
	method mend
	push "ad19_szopa"
	push "gamead19_szopa0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "e1_mg19_klodka_klucz_inserted"
	call clsave,bis
	neg
	cmp0
	je l10076
	push "ma_klucz_czaszka"
	call clsave,bis
	cmp0
	je l10078
	push "klucz_czaszka"
	cthis showhintitem
	push "ankeyhole"
	cthis showhint
	jmp l10077
l10078:
	push "anpopexit"
	cthis showhint
l10077:
	jmp l10075
l10076:
	push "e1_mg19_klodka_otwarta"
	call clsave,bis
	neg
	cmp0
	je l10080
	push "anklucz"
	cthis showhint
	jmp l10079
l10080:
	push "e1_mg19_belka_zabrana"
	call clsave,bis
	neg
	cmp0
	je l10082
	push "anbelka_l"
	cthis showhint
	jmp l10081
l10082:
	push "anpopexit"
	cthis showhint
l10081:
l10079:
l10075:
	end method
	end game

	game mg19_kapliczka
	parent Banshee
	method init
	push "mg19_kapliczka"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "ramka.pyz 3"
	push "oczy.pyzH 4"
	push "szczeka_open.pyzH 5"
	push "rubin_1.pyzH 6"
	push "rubin_2.pyzH 7"
	push "klucz_czaszka.pyzH 8"
	push "pnacze.pyz 9"
	push "popexit.pyz 32"
	cthis imgs=
	push "anklucz_czaszka"
	cthis setasitemtopck
	cthis butpopexit
	push A
	push "bgrlas2N 10"
	push "bgrwiatrN 10"
	push "swist1"
	push "blink"
	push "szczeka"
	cthis sfxs=
	call imgbkg,mg19_kapliczka0
	push "snd_intro"
	push "kinnat_c2d2_10b"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_intro,addmethod
	push "snd_intro2"
	push "kinnat_c2d2_10d"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_intro2,addmethod
	new int,cut_phase
	push 0
	pop cut_phase
	push "e1_mg19_kapliczka_rubin_1_inserted"
	call clsave,bis
	neg
	cmp0
	je l10086
	push "e1_mg19_kapliczka_rubin_2_inserted"
	call clsave,bis
	neg
	jmp l10088
l10086:
	push 0
	jmp l10088
l10087:
	push 1
l10088:
	cmp0
	je l10089
	call anoczy,mg19_kapliczka3
l10089:
	push "e1_mg19_kapliczka_pnacza_out"
	call clsave,bis
	neg
	cmp0
	je l10104
	push "e1_mg19_kapliczka_cut_phase"
	call clsave,get
	cmp0
	je l10106
	push "e1_mg19_kapliczka_cut_phase"
	call clsave,get
	pop cut_phase
	jmp l10105
l10106:
	push 0
	pop cut_phase
l10105:
	call anpnacze,mg19_kapliczka8
	push cut_phase
	call anpnacze,play
	jmp l10103
l10104:
	call anpnacze,hide
l10103:
	call imgbkg,mg19_kapliczka12
	push "e1_mg19_kapliczka_rubin_1_inserted"
	call clsave,bis
	cmp0
	je l10114
	call anrubin_1,show
l10114:
	push "e1_mg19_kapliczka_rubin_2_inserted"
	call clsave,bis
	cmp0
	je l10116
	call anrubin_2,show
l10116:
	push "e1_mg19_kapliczka_czaszka_open"
	call clsave,bis
	cmp0
	je l10118
	call anszczeka_open,show
	push "taken_klucz_czaszka"
	call clsave,bis
	neg
	cmp0
	je l10120
	call anklucz_czaszka,show
l10120:
l10118:
	cthis stdstart
	end method
	method mg19_kapliczka0
	push "isbutin"
	push "mg19_kapliczka1"
	cthis addmethod
	push "butclick"
	push "mg19_kapliczka2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg19_kapliczka1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpopup_bkg,isin
	neg
	end method
	method mg19_kapliczka2
	cthis advstdstate
	neg
	cmp0
	je l10084
	ret
l10084:
	cthis mend
	end method
	method mg19_kapliczka3
	push "isbutin"
	push "mg19_kapliczka4"
	cthis addmethod
	push "butmoveon"
	push "mg19_kapliczka5"
	cthis addmethod
	push "butmoveoff"
	push "mg19_kapliczka6"
	cthis addmethod
	push "butclick"
	push "mg19_kapliczka7"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg19_kapliczka4
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	cmp0
	je l10090
	push "e1_mg19_kapliczka_pnacza_out"
	call clsave,bis
	jmp l10092
l10090:
	push 0
	jmp l10092
l10091:
	push 1
l10092:
	end method
	method mg19_kapliczka5
	push "e1_mg19_kapliczka_rubin_1_inserted"
	call clsave,bis
	neg
	cmp0
	jne l10095
	push "e1_mg19_kapliczka_rubin_2_inserted"
	call clsave,bis
	neg
	jmp l10096
l10094:
	push 0
	jmp l10096
l10095:
	push 1
l10096:
	cmp0
	je l10097
	push "use"
	call advmouse,set
l10097:
	end method
	method mg19_kapliczka6
	call advmouse,setstd
	end method
	method mg19_kapliczka7
	cthis advstdstate
	neg
	cmp0
	jne l10100
	push sgmstate
	push "getitem"
	cmpje
	jmp l10101
l10099:
	push 0
	jmp l10101
l10100:
	push 1
l10101:
	cmp0
	je l10102
	ret
l10102:
	push "snd_intro2"
	cthis cbplay
	end method
	method mg19_kapliczka8
	cthis Button_isinvis
	push "butmoveon"
	push "mg19_kapliczka9"
	cthis addmethod
	push "butmoveoff"
	push "mg19_kapliczka10"
	cthis addmethod
	push "butclick"
	push "mg19_kapliczka11"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg19_kapliczka9
	push "e1_mg19_kapliczka_pnacza_out"
	call clsave,bis
	neg
	cmp0
	je l10108
	push "use"
	call advmouse,set
l10108:
	end method
	method mg19_kapliczka10
	call advmouse,setstd
	end method
	method mg19_kapliczka11
	push "e1_mg19_kapliczka_pnacza_out"
	call clsave,bis
	neg
	cmp0
	je l10110
	push "snd_intro"
	cthis cbplay
l10110:
	end method
	method mg19_kapliczka12
	push "isbutin"
	push "mg19_kapliczka13"
	cthis addmethod
	push "butclick"
	push "mg19_kapliczka14"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg19_kapliczka13
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 1
	call anpopup_bkg,isin
	neg
	end method
	method mg19_kapliczka14
	cthis advstdstate
	neg
	cmp0
	je l10112
	ret
l10112:
	cthis mend
	end method
	method anklucz_czaszka_TAKE
	cthis set_mg_finished
	push "klucz_czaszka"
	cthis popitem_gotocenter
	end method
	method anklucz_czaszka_INPCK
	push "klucz_czaszka"
	cthis addtopck
	cthis timfinito
	end method
	method USE_rubin_1
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call anoczy,isin
	cmp0
	je l10122
	push "e1_mg19_kapliczka_pnacza_out"
	call clsave,bis
	jmp l10124
l10122:
	push 0
	jmp l10124
l10123:
	push 1
l10124:
	cmp0
	je l10125
	push "rubin_1"
	cthis removefrompck
	push 800
	push "null"
	call anrubin_1,anfadein
	push "e1_mg19_kapliczka_rubin_1_inserted"
	call clsave,bset
	call fxblink,play
	cthis check_all_done
	cmp0
	je l10127
	push "e1_mg19_kapliczka_czaszka_open"
	call clsave,bset
	call advmouse,setstd
	push "anoczy"
	call butgame,removebut
	push "timend"
	push 800
	push "open_skull"
	cthis timplay
l10127:
	jmp l10121
l10125:
	cthis item_gotopck
l10121:
	end method
	method USE_rubin_2
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call anoczy,isin
	cmp0
	je l10129
	push "e1_mg19_kapliczka_pnacza_out"
	call clsave,bis
	jmp l10131
l10129:
	push 0
	jmp l10131
l10130:
	push 1
l10131:
	cmp0
	je l10132
	push "rubin_2"
	cthis removefrompck
	push 800
	push "null"
	call anrubin_2,anfadein
	push "e1_mg19_kapliczka_rubin_2_inserted"
	call clsave,bset
	call fxblink,play
	cthis check_all_done
	cmp0
	je l10134
	push "e1_mg19_kapliczka_czaszka_open"
	call clsave,bset
	call advmouse,setstd
	push "anoczy"
	call butgame,removebut
	push "timopen"
	push 800
	push "open_skull"
	cthis timplay
l10134:
	jmp l10128
l10132:
	cthis item_gotopck
l10128:
	end method
	method USE_rekawica
	cthis advsetstdstate
	call mouse,getpos
	push 1
	push 0
	call anpnacze,isin
	cmp0
	je l10136
	push cut_phase
	push 2
	cmpjl
	cmp0
	je l10138
	push cut_phase
	push 1
	pop $b
	popax
	add $a,$b
	pop cut_phase
	push "e1_mg19_kapliczka_cut_phase"
	push cut_phase
	call clsave,set
	push "anpnacze"
	push "fake_anpnacze"
	push cut_phase
	pop $b
	popax
	add $a,$b
	cthis copyanima
	push "fake_anpnacze"
	push cut_phase
	pop $b
	popax
	add $a,$b
	spushs
	push 300
	push "null"
	spop $a
	call [$a],anfadeout
	push cut_phase
	call anpnacze,play
	push "cut"
	call anitem_rekawica,play
	cthis checktouchpad
	neg
	cmp0
	je l10140
	push "anitem_rekawica"
	call guimov,setmoved
	jmp l10139
l10140:
	cthis item_gotopck
l10139:
	call fxswist1,play
	jmp l10137
l10138:
	push "anitem_rekawica"
	push "fake_anitem_rekawica"
	cthis copyanima
	push "cut"
	call fake_anitem_rekawica,play
	push 300
	push "null"
	call fake_anitem_rekawica,anfadeout
	call anpnacze,hide
	push "anpnacze"
	call butgame,removebut
	push "rekawica"
	cthis removefrompck
	push "e1_mg19_kapliczka_pnacza_out"
	call clsave,bset
	call fxswist1,play
l10137:
	jmp l10135
l10136:
	cthis item_gotopck
l10135:
	end method
	method check_all_done
	push "e1_mg19_kapliczka_rubin_1_inserted"
	call clsave,bis
	cmp0
	je l10142
	push "e1_mg19_kapliczka_rubin_2_inserted"
	call clsave,bis
	jmp l10144
l10142:
	push 0
	jmp l10144
l10143:
	push 1
l10144:
	cmp0
	je l10145
	push 1
	ret
	jmp l10141
l10145:
	push 0
	ret
l10141:
	end method
	method open_skull
	call fxszczeka,play
	push 200
	push "null"
	call anszczeka_open,anfadein
	push "timshow"
	push 300
	push "mg19_kapliczka15"
	cthis timplay
	end method
	method mg19_kapliczka15
	push 500
	push "null"
	call anklucz_czaszka,anfadein
	end method
	method mend
	push "ad19_szopa"
	push "gamead19_szopa0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "taken_rekawica"
	call clsave,bis
	cmp0
	je l10147
	push "e1_mg19_kapliczka_pnacza_out"
	call clsave,bis
	neg
	jmp l10149
l10147:
	push 0
	jmp l10149
l10148:
	push 1
l10149:
	cmp0
	je l10150
	push "anpnacze"
	cthis showhint
	push "rekawica"
	cthis showhintitem
	jmp l10146
l10150:
	push "taken_rubin_1"
	call clsave,bis
	cmp0
	je l10152
	push "e1_mg19_kapliczka_rubin_1_inserted"
	call clsave,bis
	neg
	jmp l10154
l10152:
	push 0
	jmp l10154
l10153:
	push 1
l10154:
	cmp0
	je l10155
	push "anrubin_1"
	cthis showhint
	push "rubin_1"
	cthis showhintitem
	jmp l10151
l10155:
	push "taken_rubin_2"
	call clsave,bis
	cmp0
	je l10157
	push "e1_mg19_kapliczka_rubin_2_inserted"
	call clsave,bis
	neg
	jmp l10159
l10157:
	push 0
	jmp l10159
l10158:
	push 1
l10159:
	cmp0
	je l10160
	push "anrubin_2"
	cthis showhint
	push "rubin_2"
	cthis showhintitem
	jmp l10156
l10160:
	push "e1_mg19_kapliczka_czaszka_open"
	call clsave,bis
	cmp0
	je l10162
	push "taken_klucz_czaszka"
	call clsave,bis
	neg
	jmp l10164
l10162:
	push 0
	jmp l10164
l10163:
	push 1
l10164:
	cmp0
	je l10165
	push "anklucz_czaszka"
	cthis showhint
	jmp l10161
l10165:
	push "anpopexit"
	cthis showhint
l10161:
l10156:
l10151:
l10146:
	end method
	end game

	game ho19intro
	parent Banshee
	method init
	push "ho19_intro"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "ogien.pyzH 2"
	push "torch.pyzH 3"
	push "pochodnia_mask.pyzH 4"
	cthis imgs=
	push A
	push "bgrszumN 10"
	push "bgrlas2N 5"
	push "las5N 5"
	push "openhead"
	cthis sfxs=
	push "e1_ad19_szopa_swiatlo_zgaszone"
	call clsave,bset
	push "snd_intro"
	push "kinnat_c2d2_10a"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_intro,addmethod
	push 1
	call anogien,setdrawmode
	new ImgRect,recexit
	call recexit,ho19intro0
	push "e1_ad19_szopa_swiatlo_zapalone"
	call clsave,bis
	neg
	cmp0
	je l10169
	call anpochodnia_mask,ho19intro3
l10169:
	cthis stdstart
	end method
	method ho19intro0
	cthis Button_isin
	cthis Button_moveoffms
	push "butmoveon"
	push "ho19intro1"
	cthis addmethod
	push 0
	push 0.8
	push igmapph
	pop $b
	popax
	mul $a,$b
	push igmappw
	push igmapph
	cthis setrect
	push 300
	cthis setz
	push "butclick"
	push "ho19intro2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method ho19intro1
	push "godd"
	call advmouse,set
	end method
	method ho19intro2
	cthis advstdstate
	neg
	cmp0
	je l10167
	ret
l10167:
	push "ad19_szopa"
	push "gamead19_szopa0"
	cthis stdexitdefadv
	end method
	method ho19intro3
	push "isbutin"
	push "ho19intro4"
	cthis addmethod
	push "butmoveon"
	push "ho19intro5"
	cthis addmethod
	push "butmoveoff"
	push "ho19intro6"
	cthis addmethod
	push "butclick"
	push "ho19intro7"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method ho19intro4
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 1
	cthis isin
	end method
	method ho19intro5
	push "use"
	call advmouse,set
	end method
	method ho19intro6
	call advmouse,setstd
	end method
	method ho19intro7
	cthis advstdstate
	neg
	cmp0
	je l10171
	ret
l10171:
	push "e1_ad19_szopa_swiatlo_zapalone"
	call clsave,bis
	neg
	cmp0
	je l10173
	push "snd_intro"
	cthis cbplay
l10173:
	end method
	method USE_pochodnia_ogien
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call anpochodnia_mask,isin
	cmp0
	je l10175
	push 0
	call anogien,play
	call fxopenhead,play
	push 700
	push "ho19intro8"
	call antorch,anfadein
	push "e1_ad19_szopa_swiatlo_zapalone"
	call clsave,bset
	push "pochodnia_ogien"
	cthis removefrompck
	push "anpochodnia_mask"
	call butgame,removebut
	call advmouse,setstd
	jmp l10174
l10175:
	cthis item_gotopck
l10174:
	end method
	method ho19intro8
	push "HO19_Szopa"
	cthis stdexit
	end method
	method mend
	push "ad19_szopa"
	push "gamead19_szopa0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "ma_pochodnia_ogien"
	call clsave,bis
	cmp0
	je l10177
	push "e1_ad19_szopa_swiatlo_zapalone"
	call clsave,bis
	neg
	jmp l10179
l10177:
	push 0
	jmp l10179
l10178:
	push 1
l10179:
	cmp0
	je l10180
	push "anpochodnia_mask"
	cthis showhint
	push "pochodnia_ogien"
	cthis showhintitem
	jmp l10176
l10180:
	push "recexit"
	cthis showhint
l10176:
	end method
	end game

	game mg20_drzwi
	parent Banshee
	method init
	new string,act_id
	push "null"
	pop act_id
	new int,act_slotanim
	push 1
	pop act_slotanim
	push "mg20_drzwi"
	clparent Banshee,init
	push A
	push "bkg.jpg 0"
	push "slot1.pyzH 1"
	push "slot2.pyzH 2"
	push "slot3.pyzH 3"
	push "slot4.pyzH 4"
	push "slot5.pyzH 5"
	push "slot6.pyz 6"
	push "1.pyzH 7"
	push "2.pyzH 8"
	push "3.pyzH 9"
	push "4.pyzH 10"
	push "5.pyzH 11"
	push "6.pyzH 12"
	push "zaslepka.pyzH 13"
	push "zaslepka_glow.pyzH 14"
	push "door_open.pyzH 14"
	cthis imgs=
	push A
	push "bgrsala2N 30"
	push "magical"
	push "click"
	push "szczeka"
	cthis sfxs=
	new ImgRect,recexit
	call recexit,mg20_drzwi0
	push 1000
	call mus,fadeout
	push "snd_krzyz"
	push "kinnat_c3d3_1a"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_krzyz,addmethod
	push "e1_drzwi_krzyze_uzyte"
	call clsave,bis
	neg
	cmp0
	je l10187
	push "snd_brakkrzyzy"
	push "kinnat_c3d3_1"
	cthis newsndfree
	push "onfinish"
	push "mg20_drzwi4"
	call snd_brakkrzyzy,addmethod
l10187:
	call imgbkg,mg20_drzwi5
	push "e1_mg20_zaslepka_removed"
	call clsave,bis
	neg
	cmp0
	je l10196
	call anzaslepka,show
	call anzaslepka,mg20_drzwi9
l10196:
	call anslot1,mg20_drzwi13
	call anslot2,mg20_drzwi18
	call anslot3,mg20_drzwi23
	call anslot4,mg20_drzwi28
	call anslot5,mg20_drzwi33
	call anslot6,mg20_drzwi38
	push "e1_mg20_drzwi_1_inserted"
	call clsave,bis
	cmp0
	je l10228
	call anslot1,show
	push 2
	push 0
	call anslot1,setframe
	call an1,hide
	jmp l10227
l10228:
	push "1"
	push 1
	push 1
	cthis init_cross
l10227:
	push "e1_mg20_drzwi_2_inserted"
	call clsave,bis
	cmp0
	je l10230
	call anslot2,show
	push 2
	push 0
	call anslot2,setframe
	call an2,hide
	jmp l10229
l10230:
	push "2"
	push 1
	push 1
	cthis init_cross
l10229:
	push "e1_mg20_drzwi_3_inserted"
	call clsave,bis
	cmp0
	je l10232
	call anslot3,show
	push 2
	push 0
	call anslot3,setframe
	call an3,hide
	jmp l10231
l10232:
	push "3"
	push 1
	push 1
	cthis init_cross
l10231:
	push "e1_mg20_drzwi_4_inserted"
	call clsave,bis
	cmp0
	je l10234
	call anslot4,show
	push 2
	push 0
	call anslot4,setframe
	call an4,hide
	jmp l10233
l10234:
	push "4"
	push 1
	push 1
	cthis init_cross
l10233:
	push "e1_mg20_drzwi_5_inserted"
	call clsave,bis
	cmp0
	je l10236
	call anslot5,show
	push 2
	push 0
	call anslot5,setframe
	call an5,hide
	jmp l10235
l10236:
	push "5"
	push 1
	push 1
	cthis init_cross
l10235:
	push "e1_mg20_drzwi_6_inserted"
	call clsave,bis
	cmp0
	je l10238
	push 2
	push 0
	call anslot6,setframe
	call an5,hide
	jmp l10237
l10238:
	push "6"
	push 1
	push 1
	cthis init_cross
l10237:
	push "e1_drzwi_krzyze_uzyte"
	call clsave,bis
	cmp0
	je l10240
	push "e1_mg20_pierwsza_faza"
	call clsave,bis
	neg
	cmp0
	je l10242
	cthis find_next_slot
l10242:
l10240:
	cthis stdstart
	end method
	method mg20_drzwi0
	cthis Button_isin
	push "isbutin"
	push "mg20_drzwi1"
	cthis addmethod
	cthis Button_moveoffms
	push "butmoveon"
	push "mg20_drzwi2"
	cthis addmethod
	push 0
	push 0.9
	push igmapph
	pop $b
	popax
	mul $a,$b
	push igmappw
	push igmapph
	cthis setrect
	push 300
	cthis setz
	cthis getname
	call butgame,add
	push "butclick"
	push "mg20_drzwi3"
	cthis addmethod
	end method
	method mg20_drzwi1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	cmp0
	je l10181
	push act_id
	push "null"
	cmpje
	jmp l10183
l10181:
	push 0
	jmp l10183
l10182:
	push 1
l10183:
	end method
	method mg20_drzwi2
	push "godd"
	call advmouse,set
	end method
	method mg20_drzwi3
	cthis advstdstate
	neg
	cmp0
	je l10185
	ret
l10185:
	cthis mend
	end method
	method mg20_drzwi4
	cthis advsetstdstate
	end method
	method mg20_drzwi5
	cthis Button_isinvisalpha
	push "butmoveon"
	push "mg20_drzwi6"
	cthis addmethod
	push "butmoveoff"
	push "mg20_drzwi7"
	cthis addmethod
	push "butclick"
	push "mg20_drzwi8"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg20_drzwi6
	push "e1_drzwi_krzyze_uzyte"
	call clsave,bis
	neg
	cmp0
	je l10189
	push "use"
	call advmouse,set
l10189:
	end method
	method mg20_drzwi7
	call advmouse,setstd
	end method
	method mg20_drzwi8
	cthis advstdstate
	neg
	cmp0
	jne l10192
	push "e1_drzwi_krzyze_uzyte"
	call clsave,bis
	jmp l10193
l10191:
	push 0
	jmp l10193
l10192:
	push 1
l10193:
	cmp0
	je l10194
	ret
l10194:
	push "snd_brakkrzyzy"
	cthis cbplay
	end method
	method mg20_drzwi9
	cthis Button_isinvisalpha
	push "butmoveon"
	push "mg20_drzwi10"
	cthis addmethod
	push "butmoveoff"
	push "mg20_drzwi11"
	cthis addmethod
	push "butclick"
	push "mg20_drzwi12"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg20_drzwi10
	push "e1_mg20_pierwsza_faza"
	call clsave,bis
	cmp0
	je l10198
	push "take"
	call advmouse,set
	jmp l10197
l10198:
	call advmouse,setstd
l10197:
	end method
	method mg20_drzwi11
	call advmouse,setstd
	end method
	method mg20_drzwi12
	cthis advstdstate
	neg
	cmp0
	jne l10201
	push "e1_mg20_pierwsza_faza"
	call clsave,bis
	neg
	cmp0
	jne l10201
	push "e1_mg20_zaslepka_removed"
	call clsave,bis
	jmp l10202
l10200:
	push 0
	jmp l10202
l10201:
	push 1
l10202:
	cmp0
	je l10203
	ret
l10203:
	cthis getname
	call butgame,removebut
	push 500
	push "null"
	cthis anfadeout
	push "e1_mg20_zaslepka_removed"
	call clsave,bset
	call advmouse,setstd
	call fxszczeka,play
	end method
	method mg20_drzwi13
	push "isbutin"
	push "mg20_drzwi14"
	cthis addmethod
	push "butmoveon"
	push "mg20_drzwi15"
	cthis addmethod
	push "butmoveoff"
	push "mg20_drzwi16"
	cthis addmethod
	push A
	push "occupied"
	push 0
	push "obj_id"
	push "null"
	cthis vars2
	push "onfinish"
	push "mg20_drzwi17"
	cthis addmethod
	end method
	method mg20_drzwi14
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	end method
	method mg20_drzwi15
	push "use"
	call advmouse,set
	end method
	method mg20_drzwi16
	call advmouse,setstd
	end method
	method mg20_drzwi17
	push "e1_mg20_pierwsza_faza"
	call clsave,bis
	cmp0
	je l10205
	ret
l10205:
	push "e1_mg20_drzwi_1_inserted"
	call clsave,bis
	neg
	cmp0
	je l10207
	push 1500
	push "find_next_slot"
	cthis anfadeout
	jmp l10206
l10207:
	cthis find_next_slot
l10206:
	end method
	method mg20_drzwi18
	push "isbutin"
	push "mg20_drzwi19"
	cthis addmethod
	push "butmoveon"
	push "mg20_drzwi20"
	cthis addmethod
	push "butmoveoff"
	push "mg20_drzwi21"
	cthis addmethod
	push A
	push "occupied"
	push 0
	push "obj_id"
	push "null"
	cthis vars2
	push "onfinish"
	push "mg20_drzwi22"
	cthis addmethod
	end method
	method mg20_drzwi19
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	end method
	method mg20_drzwi20
	push "use"
	call advmouse,set
	end method
	method mg20_drzwi21
	call advmouse,setstd
	end method
	method mg20_drzwi22
	push "e1_mg20_pierwsza_faza"
	call clsave,bis
	cmp0
	je l10209
	ret
l10209:
	push "e1_mg20_drzwi_2_inserted"
	call clsave,bis
	neg
	cmp0
	je l10211
	push 1500
	push "find_next_slot"
	cthis anfadeout
	jmp l10210
l10211:
	cthis find_next_slot
l10210:
	end method
	method mg20_drzwi23
	push "isbutin"
	push "mg20_drzwi24"
	cthis addmethod
	push "butmoveon"
	push "mg20_drzwi25"
	cthis addmethod
	push "butmoveoff"
	push "mg20_drzwi26"
	cthis addmethod
	push A
	push "occupied"
	push 0
	push "obj_id"
	push "null"
	cthis vars2
	push "onfinish"
	push "mg20_drzwi27"
	cthis addmethod
	end method
	method mg20_drzwi24
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	end method
	method mg20_drzwi25
	push "use"
	call advmouse,set
	end method
	method mg20_drzwi26
	call advmouse,setstd
	end method
	method mg20_drzwi27
	push "e1_mg20_pierwsza_faza"
	call clsave,bis
	cmp0
	je l10213
	ret
l10213:
	push "e1_mg20_drzwi_3_inserted"
	call clsave,bis
	neg
	cmp0
	je l10215
	push 1500
	push "find_next_slot"
	cthis anfadeout
	jmp l10214
l10215:
	cthis find_next_slot
l10214:
	end method
	method mg20_drzwi28
	push "isbutin"
	push "mg20_drzwi29"
	cthis addmethod
	push "butmoveon"
	push "mg20_drzwi30"
	cthis addmethod
	push "butmoveoff"
	push "mg20_drzwi31"
	cthis addmethod
	push A
	push "occupied"
	push 0
	push "obj_id"
	push "null"
	cthis vars2
	push "onfinish"
	push "mg20_drzwi32"
	cthis addmethod
	end method
	method mg20_drzwi29
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	end method
	method mg20_drzwi30
	push "use"
	call advmouse,set
	end method
	method mg20_drzwi31
	call advmouse,setstd
	end method
	method mg20_drzwi32
	push "e1_mg20_pierwsza_faza"
	call clsave,bis
	cmp0
	je l10217
	ret
l10217:
	push "e1_mg20_drzwi_4_inserted"
	call clsave,bis
	neg
	cmp0
	je l10219
	push 1500
	push "find_next_slot"
	cthis anfadeout
	jmp l10218
l10219:
	cthis find_next_slot
l10218:
	end method
	method mg20_drzwi33
	push "isbutin"
	push "mg20_drzwi34"
	cthis addmethod
	push "butmoveon"
	push "mg20_drzwi35"
	cthis addmethod
	push "butmoveoff"
	push "mg20_drzwi36"
	cthis addmethod
	push A
	push "occupied"
	push 0
	push "obj_id"
	push "null"
	cthis vars2
	push "onfinish"
	push "mg20_drzwi37"
	cthis addmethod
	end method
	method mg20_drzwi34
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	end method
	method mg20_drzwi35
	push "use"
	call advmouse,set
	end method
	method mg20_drzwi36
	call advmouse,setstd
	end method
	method mg20_drzwi37
	push "e1_mg20_pierwsza_faza"
	call clsave,bis
	cmp0
	je l10221
	ret
l10221:
	push "e1_mg20_drzwi_5_inserted"
	call clsave,bis
	neg
	cmp0
	je l10223
	push 1500
	push "find_next_slot"
	cthis anfadeout
	jmp l10222
l10223:
	cthis find_next_slot
l10222:
	end method
	method mg20_drzwi38
	push "isbutin"
	push "mg20_drzwi39"
	cthis addmethod
	push "butmoveon"
	push "mg20_drzwi40"
	cthis addmethod
	push "butmoveoff"
	push "mg20_drzwi41"
	cthis addmethod
	push A
	push "occupied"
	push 0
	push "obj_id"
	push "null"
	cthis vars2
	end method
	method mg20_drzwi39
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	cmp0
	je l10224
	push "e1_mg20_zaslepka_removed"
	call clsave,bis
	jmp l10226
l10224:
	push 0
	jmp l10226
l10225:
	push 1
l10226:
	end method
	method mg20_drzwi40
	push "use"
	call advmouse,set
	end method
	method mg20_drzwi41
	call advmouse,setstd
	end method
	method USE_krzyz_6
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call imgbkg,isin
	cmp0
	je l10244
	push "krzyz_6"
	cthis removefrompck
	push "imgbkg"
	call butgame,removebut
	push "e1_drzwi_krzyze_uzyte"
	call clsave,bset
	call fxclick,play
	push "tim1"
	push 150
	push "mg20_drzwi42"
	cthis timplay
	push "tim2"
	push 200
	push "mg20_drzwi44"
	cthis timplay
	push "tim3"
	push 250
	push "mg20_drzwi46"
	cthis timplay
	push "tim4"
	push 300
	push "mg20_drzwi48"
	cthis timplay
	push "tim5"
	push 350
	push "mg20_drzwi50"
	cthis timplay
	push "tim6"
	push 350
	push "mg20_drzwi52"
	cthis timplay
	jmp l10243
l10244:
	cthis item_gotopck
l10243:
	end method
	method mg20_drzwi42
	push "an1"
	spushs
	push 100
	push "mg20_drzwi43"
	spop $a
	call [$a],anfadein
	end method
	method mg20_drzwi43
	call fxclick,play
	end method
	method mg20_drzwi44
	push "an2"
	spushs
	push 100
	push "mg20_drzwi45"
	spop $a
	call [$a],anfadein
	end method
	method mg20_drzwi45
	call fxclick,play
	end method
	method mg20_drzwi46
	push "an3"
	spushs
	push 100
	push "mg20_drzwi47"
	spop $a
	call [$a],anfadein
	end method
	method mg20_drzwi47
	call fxclick,play
	end method
	method mg20_drzwi48
	push "an4"
	spushs
	push 100
	push "mg20_drzwi49"
	spop $a
	call [$a],anfadein
	end method
	method mg20_drzwi49
	call fxclick,play
	end method
	method mg20_drzwi50
	push "an5"
	spushs
	push 100
	push "mg20_drzwi51"
	spop $a
	call [$a],anfadein
	end method
	method mg20_drzwi51
	call fxclick,play
	end method
	method mg20_drzwi52
	push "an6"
	spushs
	push 100
	push "anim_slot"
	spop $a
	call [$a],anfadein
	end method
	method init_cross
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	push $2
	push $3
	spop $a
	call [$a],mg20_drzwi53
	end method
	method mg20_drzwi53
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push A
	push "name"
	push $1
	push "start_x"
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getposx
	push "start_y"
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getposy
	cthis vars2
	push "e1_drzwi_krzyze_uzyte"
	call clsave,bis
	cmp0
	je l10246
	push "e1_mg20_drzwi_"
	cthis name
	pop $b
	popax
	add $a,$b
	push "_inserted"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	jmp l10248
l10246:
	push 0
	jmp l10248
l10247:
	push 1
l10248:
	cmp0
	je l10249
	cthis show
l10249:
	push "isbutin"
	push "mg20_drzwi54"
	cthis addmethod
	push "butmoveon"
	push "mg20_drzwi55"
	cthis addmethod
	push "butmoveoff"
	push "mg20_drzwi56"
	cthis addmethod
	push "butclick"
	push "mg20_drzwi57"
	cthis addmethod
	push "butrel"
	push "mg20_drzwi58"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg20_drzwi54
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	cmp0
	je l10250
	push "e1_drzwi_krzyze_uzyte"
	call clsave,bis
	cmp0
	je l10250
	push "e1_mg20_drzwi_"
	cthis name
	pop $b
	popax
	add $a,$b
	push "_inserted"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	jmp l10252
l10250:
	push 0
	jmp l10252
l10251:
	push 1
l10252:
	end method
	method mg20_drzwi55
	push "take"
	call advmouse,set
	push 1
	cthis play
	end method
	method mg20_drzwi56
	call advmouse,setstd
	push 0
	cthis play
	end method
	method mg20_drzwi57
	cthis advstdstate
	neg
	cmp0
	jne l10255
	cthis is_mg_finished
	cmp0
	jne l10255
	push "e1_mg20_drzwi_"
	cthis name
	pop $b
	popax
	add $a,$b
	push "_inserted"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	jmp l10256
l10254:
	push 0
	jmp l10256
l10255:
	push 1
l10256:
	cmp0
	je l10257
	ret
l10257:
	push act_id
	push "null"
	cmpje
	cmp0
	je l10259
	cthis getname
	pop act_id
	push 300
	cthis setz
	push 2
	cthis play
	call mouse,getpos
	cthis setpos
	call advmouse,setstd
	call fxclick,play
	jmp l10258
l10259:
	push act_id
	cthis getname
	cmpje
	cmp0
	je l10261
	localdef $1
	push "anslot"
	cthis name
	pop $b
	popax
	add $a,$b
	pop $1
	push act_id
	push "an6"
	cmpje
	cmp0
	je l10263
	push "e1_mg20_zaslepka_removed"
	call clsave,bis
	neg
	cmp0
	je l10263
	push $1
	push "anslot6"
	cmpje
	jmp l10265
l10263:
	push 0
	jmp l10265
l10264:
	push 1
l10265:
	cmp0
	je l10266
	push "null"
	pop act_id
	push 0
	cthis play
	cthis start_x
	cthis start_y
	cthis setpos
	push 2
	cthis setz
	call advmouse,setstd
	call fxclick,play
	ret
l10266:
	push $1
	spushs
	call mouse,getpos
	push 1
	push 1
	spop $a
	call [$a],isin
	cmp0
	je l10268
	push $1
	spushs
	push 2
	spop $a
	call [$a],play
	push $1
	spushs
	spop $a
	call [$a],butdisable
	cthis getname
	call butgame,removebut
	push $1
	spushs
	push 100
	push "null"
	spop $a
	call [$a],anfadein
	push "e1_mg20_drzwi_"
	cthis name
	pop $b
	popax
	add $a,$b
	push "_inserted"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	cthis hide
	cthis check_won
	cthis check_finish
	call fxszczeka,play
	jmp l10267
l10268:
	push "e1_mg20_drzwi_"
	cthis name
	pop $b
	popax
	add $a,$b
	push "_inserted"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l10270
	push 0
	cthis play
	cthis start_x
	cthis start_y
	cthis setpos
	push 2
	cthis setz
	call fxclick,play
l10270:
l10267:
	push "null"
	pop act_id
	call advmouse,setstd
l10261:
l10258:
	call butgame,sort
	cthis advsetstdstate
	end method
	method mg20_drzwi58
	cthis butclick
	end method
	method check_all_done
	localint $1
	push 1
	pop $1
l10271:
	push $1
	push 6
	cmpjl
	cmp0
	je l10272
	jmp l10274
l10273:
	add $1,1
	pop $1
	jmp l10271
l10274:
	push "anslot"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	push 2
	cmpjne
	cmp0
	je l10276
	push 0
	ret
l10276:
	jmp l10273
l10272:
	push 1
	ret
	end method
	method check_won
	cthis check_all_done
	cmp0
	je l10278
	push "e1_mg20_pierwsza_faza"
	call clsave,bis
	neg
	cmp0
	je l10280
	push 1500
	push "mg20_drzwi59"
	call anzaslepka_glow,anfadein
	push "e1_mg20_pierwsza_faza"
	call clsave,bset
l10280:
l10278:
	end method
	method mg20_drzwi59
	cthis advsetstdstate
	push "snd_krzyz"
	cthis cbplay
	push 1500
	push "null"
	call anzaslepka_glow,anfadeout
	end method
	method check_finish
	push "e1_mg20_drzwi_6_inserted"
	call clsave,bis
	cmp0
	je l10282
	call fxmagical,play
	cthis set_mg_finished
	push 2500
	push "mg20_drzwi60"
	call andoor_open,anfadein
l10282:
	end method
	method mg20_drzwi60
	cthis timfinito
	end method
	method anim_slot
	push "e1_mg20_drzwi_"
	push act_slotanim
	pop $b
	popax
	add $a,$b
	push "_inserted"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l10284
	push "anslot"
	push act_slotanim
	pop $b
	popax
	add $a,$b
	spushs
	push 1500
	push "mg20_drzwi61"
	spop $a
	call [$a],anfadein
	jmp l10283
l10284:
	cthis find_next_slot
l10283:
	end method
	method mg20_drzwi61
	push "anslot"
	push act_slotanim
	pop $b
	popax
	add $a,$b
	spushs
	push 0
	spop $a
	call [$a],play
	end method
	method find_next_slot
	push act_slotanim
	push 5
	cmpjl
	cmp0
	je l10286
	add act_slotanim,1
	pop act_slotanim
	jmp l10285
l10286:
	push 1
	pop act_slotanim
l10285:
	cthis anim_slot
	end method
	method mouse_move
	push act_id
	push "null"
	cmpjne
	cmp0
	je l10288
	push act_id
	spushs
	call mouse,getpos
	spop $a
	call [$a],setpos
	push act_id
	spushs
	push 2
	spop $a
	call [$a],play
l10288:
	end method
	method mend
	cthis is_mg_finished
	cmp0
	je l10290
	push "ad21_holglowny"
	push "gamead21_holglowny0"
	cthis stdexitdefadv
	jmp l10289
l10290:
	push "ad20_zamekdrzewo"
	push "gamead20_zamekdrzewo0"
	cthis stdexitdefadv
l10289:
	end method
	method HINT_CLICK
	push "ma_krzyz_6"
	call clsave,bis
	cmp0
	je l10292
	push "e1_drzwi_krzyze_uzyte"
	call clsave,bis
	neg
	jmp l10294
l10292:
	push 0
	jmp l10294
l10293:
	push 1
l10294:
	cmp0
	je l10295
	push "imgbkg"
	cthis showhint
	push "krzyz_6"
	cthis showhintitem
	jmp l10291
l10295:
	push "e1_drzwi_krzyze_uzyte"
	call clsave,bis
	push "e1_mg20_pierwsza_faza"
	call clsave,bis
	neg
	pop $b
	popax
	and $a,$b
	cmp0
	je l10297
	push "anslot"
	push act_slotanim
	pop $b
	popax
	add $a,$b
	cthis showhint
	push "an"
	push act_slotanim
	pop $b
	popax
	add $a,$b
	cthis showhint
	jmp l10296
l10297:
	push "e1_mg20_pierwsza_faza"
	call clsave,bis
	cmp0
	je l10299
	push "e1_mg20_zaslepka_removed"
	call clsave,bis
	cmp0
	je l10301
	push "an6"
	cthis showhint
l10301:
	push "anzaslepka"
	cthis showhint
	jmp l10298
l10299:
	push "recexit"
	cthis showhint
l10298:
l10296:
l10291:
	end method
	end game

	game mg21_duch
	parent Banshee
	method init
	push "mg21_duch"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "glow.pyz 3"
	push "hair.pyz 4"
	push "rece.pyz 5"
	push "body.pyz 6"
	push "lips.pyz 7"
	push "eyes.pyz 8"
	push "maska_duch.pyz 9"
	push "szkielko.pyz 10"
	push "szkielko_anim.pyz 11"
	push "szkielko_rosnie.pyzH 12"
	push "ramka.pyz 16"
	push "popexit.pyz 17"
	push "receptura.pyzH 18"
	cthis imgs=
	cthis butpopexit
	push A
	push "bgrszumN 40"
	push "wiatr3N 40"
	push "book2"
	push "blyskotkiN 15"
	push "magic1"
	push "diamenty"
	push "magical"
	cthis sfxs=
	call imgbkg,mg21_duch0
	push 1000
	call mus,fadeout
	push 0
	call anrece,play
	push 0
	call aneyes,play
	push 1
	call anszkielko_anim,setdrawmode
	push 0
	call anszkielko_anim,play
	call anszkielko_anim,anopacityframe
	call anhair,anopacityframe
	push 0
	call anhair,play
	call anglow,anopacityframe
	push 0
	call anglow,play
	push "snd_szkielko"
	push "duch_drzewa_c3d3_3"
	cthis newsndfree
	push "onfinish"
	push "mg21_duch3"
	call snd_szkielko,addmethod
	push "snd_kubek_oddany"
	push "duch_drzewa_c3d3_22"
	cthis newsndfree
	push "onfinish"
	push "mg21_duch4"
	call snd_kubek_oddany,addmethod
	push "snd_kubek_oddany2"
	push "duch_drzewa_c3d3_22_1"
	cthis newsndfree
	push "onfinish"
	push "mg21_duch5"
	call snd_kubek_oddany2,addmethod
	push "onfinish"
	push "mg21_duch6"
	call anszkielko_rosnie,addmethod
	call anreceptura,mg21_duch8
	call anszkielko,mg21_duch12
	push "ma_kubek_z_wywarem"
	call clsave,bis
	cmp0
	je l10324
	call anbody,mg21_duch17
l10324:
	cthis stdstart
	push save_prefix
	push "intro_spoken"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l10326
	push "mg21_duch21"
	call ccs,enter
l10326:
	push save_prefix
	push "intro_spoken"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l10328
	push "snd_intro"
	push "duch_drzewa_c3d3_2"
	cthis newsndfree
	push "onfinish"
	push "mg21_duch22"
	call snd_intro,addmethod
	push save_prefix
	push "intro_spoken"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	push 0
	call anlips,play
	push 180
	push 255
	push 0
	call subtitle,setcolor
	push "snd_intro"
	cthis cbplay
	call subtitle,restorecolor
	push "n020"
	cthis stdpiorko
l10328:
	end method
	method mg21_duch0
	push "isbutin"
	push "mg21_duch1"
	cthis addmethod
	push "butclick"
	push "mg21_duch2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg21_duch1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpopup_bkg,isin
	neg
	cmp0
	je l10302
	push $1
	push $2
	push 0
	push 0
	call anreceptura,isin
	neg
	jmp l10304
l10302:
	push 0
	jmp l10304
l10303:
	push 1
l10304:
	end method
	method mg21_duch2
	cthis advstdstate
	neg
	cmp0
	je l10306
	ret
l10306:
	cthis mend
	end method
	method mg21_duch3
	cthis advsetstdstate
	push 0
	call anlips,stop
	call subtitle,restorecolor
	end method
	method mg21_duch4
	push 180
	push 255
	push 0
	call subtitle,setcolor
	push "snd_kubek_oddany2"
	cthis cbplay
	call subtitle,restorecolor
	end method
	method mg21_duch5
	cthis advsetstdstate
	push 0
	call anlips,stop
	push 0
	call anszkielko_rosnie,play
	call subtitle,restorecolor
	end method
	method mg21_duch6
	push "e1_mg21_duch_kubek_oddany"
	call clsave,bset
	push 500
	push "mg21_duch7"
	cthis anfadeout
	end method
	method mg21_duch7
	cthis timfinito
	end method
	method mg21_duch8
	cthis Button_isin
	push "butmoveon"
	push "mg21_duch9"
	cthis addmethod
	push "butmoveoff"
	push "mg21_duch10"
	cthis addmethod
	push "butclick"
	push "mg21_duch11"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg21_duch9
	push "take"
	call advmouse,set
	end method
	method mg21_duch10
	call advmouse,setstd
	end method
	method mg21_duch11
	cthis advstdstate
	neg
	cmp0
	je l10308
	ret
l10308:
	push 500
	push "null"
	cthis anfadeout
	push "e1_mg21_duch_recepta_wzieta"
	call clsave,bis
	neg
	cmp0
	je l10310
	push "e1_mg21_duch_recepta_wzieta"
	call clsave,bset
l10310:
	cthis getname
	call butgame,removebut
	call fxbook2,play
	call advmouse,setstd
	end method
	method mg21_duch12
	push "isbutin"
	push "mg21_duch13"
	cthis addmethod
	push "butmoveon"
	push "mg21_duch14"
	cthis addmethod
	push "butmoveoff"
	push "mg21_duch15"
	cthis addmethod
	push "butclick"
	push "mg21_duch16"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg21_duch13
	localdef $1
	localdef $2
	pop $2
	pop $1
	cthis advstdstate
	cmp0
	je l10311
	push $1
	push $2
	push 0
	push 0
	cthis isin
	jmp l10313
l10311:
	push 0
	jmp l10313
l10312:
	push 1
l10313:
	end method
	method mg21_duch14
	push "take"
	call advmouse,set
	end method
	method mg21_duch15
	call advmouse,setstd
	end method
	method mg21_duch16
	cthis advstdstate
	neg
	cmp0
	je l10315
	ret
l10315:
	push "e1_mg21_duch_recepta_wzieta"
	call clsave,bis
	neg
	cmp0
	je l10317
	push 300
	push "null"
	call anreceptura,anfadein
	push "e1_mg21_duch_recepta_wzieta"
	call clsave,bset
	push 0
	call anlips,play
	push 180
	push 255
	push 0
	call subtitle,setcolor
	push "snd_szkielko"
	cthis cbplay
	call subtitle,restorecolor
	call advmouse,setstd
	jmp l10316
l10317:
	push "e1_mg21_duch_recepta_wzieta"
	call clsave,bis
	cmp0
	je l10319
	push "e1_mg21_duch_kubek_oddany"
	call clsave,bis
	neg
	jmp l10321
l10319:
	push 0
	jmp l10321
l10320:
	push 1
l10321:
	cmp0
	je l10322
	push 0
	call anlips,play
	push 180
	push 255
	push 0
	call subtitle,setcolor
	push "snd_szkielko"
	cthis cbplay
	call subtitle,restorecolor
l10322:
l10316:
	end method
	method mg21_duch17
	push "isbutin"
	push "mg21_duch18"
	cthis addmethod
	push "butmoveon"
	push "mg21_duch19"
	cthis addmethod
	push "butmoveoff"
	push "mg21_duch20"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg21_duch18
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	end method
	method mg21_duch19
	push "use"
	call advmouse,set
	end method
	method mg21_duch20
	call advmouse,setstd
	end method
	method mg21_duch21
	push "duch_gada"
	cthis advsetstate
	end method
	method mg21_duch22
	cthis advsetstdstate
	push 0
	call anlips,stop
	push "e1_mg21_duch_recepta_wzieta"
	call clsave,bis
	neg
	cmp0
	je l10330
	push 300
	push "null"
	call anreceptura,anfadein
l10330:
	end method
	method mend
	push "ad21_holglowny"
	push "gamead21_holglowny0"
	cthis stdexitdefadv
	end method
	method USE_kubek_z_wywarem
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call anbody,isin
	cmp0
	je l10332
	push "kubek_z_wywarem"
	cthis removefrompck
	push 0
	call anlips,play
	push 180
	push 255
	push 0
	call subtitle,setcolor
	push "snd_kubek_oddany"
	cthis cbplay
	call subtitle,restorecolor
	call anszkielko,hide
	call anszkielko_anim,anhide
	call anszkielko,butdisable
	call advmouse,setstd
	cthis set_mg_finished
	push "e1_mg21_duch_kubek_oddany"
	call clsave,bset
	push "anbody"
	call butgame,removebut
l10332:
	end method
	method HINT_CLICK
	push "ma_kubek_z_wywarem"
	call clsave,bis
	cmp0
	je l10334
	push "anszkielko"
	cthis showhint
	push "kubek_z_wywarem"
	cthis showhintitem
	jmp l10333
l10334:
	push "e1_mg21_duch_recepta_wzieta"
	call clsave,bis
	neg
	cmp0
	jne l10337
	call anreceptura,isvisible
	jmp l10338
l10336:
	push 0
	jmp l10338
l10337:
	push 1
l10338:
	cmp0
	je l10339
	push "anreceptura"
	cthis showhint
	jmp l10335
l10339:
	push "anpopexit"
	cthis showhint
l10335:
l10333:
	end method
	end game

	game mg21_pien
	parent Banshee
	method init
	push "mg21_pien"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "pien_light.pyz 3"
	push "zebatka2.pyzH 4"
	push "popexit.pyz 45"
	push "ramka.pyz 42"
	cthis imgs=
	cthis butpopexit
	cthis butpopexitisinramka
	push "takenan_anzebatka2"
	call clsave,bis
	neg
	cmp0
	je l10341
	push "anzebatka2"
	cthis gui_toloupe
	push "anzebatka2"
	cthis setasitemtopck
	call anzebatka2,mg21_pien0
l10341:
	cthis stdstart
	end method
	method mg21_pien0
	push "isbutin"
	push "mg21_pien1"
	cthis addmethod
	end method
	method mg21_pien1
	localint $1
	localint $2
	pop $2
	pop $1
	cthis advstdstate
	cmp0
	je l10342
	push $1
	push $2
	push 0
	push 0
	cthis isin
	cmp0
	je l10342
	cthis loupe_visible
	jmp l10344
l10342:
	push 0
	jmp l10344
l10343:
	push 1
l10344:
	end method
	method anzebatka2_TAKE
	push 500
	push "null"
	call anpien_light,anfadeout
	push "anzebatka2"
	cthis gui_removefromloupe
	call anzebatka2,show
	push "zebatka"
	cthis stackitem_topck
	cthis set_mg_finished
	end method
	method anzebatka2_INPCK
	push "zebatka"
	cthis additemtostack
	cthis timfinito
	end method
	method mend
	push "ad21_holglowny"
	push "gamead21_holglowny0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "takenan_anzebatka2"
	call clsave,bis
	neg
	cmp0
	je l10346
	push "anzebatka2"
	cthis showhint2v
	push "guiglass"
	cthis showhint2v
	jmp l10345
l10346:
	push "anpopexit"
	cthis showhint
l10345:
	end method
	end game

	game mg22_palenisko
	parent Banshee
	method init
	push "mg22_palenisko"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "fire.pyz 3"
	push "woda.pyzH 4"
	push "fluid.pyzH 5"
	push "ziarna.pyzH 6"
	push "frog_leg.pyzH 7"
	push "mikstura.pyzH 8"
	push "ramka.pyz 9"
	push "popexit.pyz 10"
	push "receptura.pyzH 11"
	push "water_done.pyzH 12"
	push "fluid_done.pyzH 13"
	push "ziarna_done.pyzH 14"
	push "frog_leg_done.pyzH 15"
	push "arat.pyzH 17"
	push "ron.pyzH 18"
	push "arat_glow.pyzH 19"
	push "ron_glow.pyzH 20"
	push "zaklecie_done.pyzH 21"
	push "spell_btn.pyzH 23"
	push "kociolek_mask.pyzH 22"
	push "kubek_pusty.pyz 23"
	push "kubek_z_wywarem.pyzH 24"
	push "nalewanie.pyzH 25"
	cthis imgs=
	cthis butpopexit
	push "ankubek_z_wywarem"
	cthis setasitemtopck
	call ankubek_z_wywarem,butdisable
	push A
	push "bgrszumN 30"
	push "bgrogienN 60"
	push "wlewa1"
	cthis sfxs=
	push 0
	call anfire,play
	push "noitemsnd"
	push "kinnat_c3d3_21a"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call noitemsnd,addmethod
	push "pushspellsnd"
	push "kinnat_c3d3_21b"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call pushspellsnd,addmethod
	push "findrestspellsnd"
	push "kinnat_c3d3_21c"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call findrestspellsnd,addmethod
	push "spellsnd"
	push "kinnat_c3d3_21d"
	cthis newsndfree
	push "onfinish"
	push "mg22_palenisko0"
	call spellsnd,addmethod
	push "skladniki_snd"
	push "kinnat_c3d3_5b"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call skladniki_snd,addmethod
	call imgbkg,mg22_palenisko1
	push "onfinish"
	push "mg22_palenisko4"
	call annalewanie,addmethod
	call ankubek_pusty,mg22_palenisko6
	call ankociolek_mask,mg22_palenisko10
	call anspell_btn,mg22_palenisko14
	push "e1_mg21_duch_recepta_wzieta"
	call clsave,bis
	cmp0
	je l10380
	call anreceptura,show
	push "e1_mg22_palenisko_woda_dodana"
	call clsave,bis
	cmp0
	je l10382
	call anwater_done,show
	call anwoda,show
l10382:
	push "e1_mg22_palenisko_fluid_dodany"
	call clsave,bis
	cmp0
	je l10384
	call anfluid_done,show
	call anfluid,show
l10384:
	push "e1_mg22_palenisko_ziarna_dodane"
	call clsave,bis
	cmp0
	je l10386
	call anziarna_done,show
	call anziarna,show
l10386:
	push "e1_mg22_palenisko_frog_leg_dodana"
	call clsave,bis
	cmp0
	je l10388
	call anfrog_leg_done,show
	call anfrog_leg,show
l10388:
	push "e1_mg22_palenisko_mikstura_zrobiona"
	call clsave,bis
	cmp0
	je l10390
	call anmikstura,show
	push "e1_mg22_palenisko_kubek_nalany"
	call clsave,bis
	cmp0
	je l10392
	push "taken_kubek_z_wywarem"
	call clsave,bis
	neg
	jmp l10394
l10392:
	push 0
	jmp l10394
l10393:
	push 1
l10394:
	cmp0
	je l10395
	call ankubek_z_wywarem,show
	call ankubek_z_wywarem,butenable
l10395:
l10390:
	push "e1_mg22_palenisko_after_intro"
	call clsave,bis
	neg
	cmp0
	je l10397
	push "snd_intro"
	push "kinnat_c3d3_5a"
	cthis newsndfree
	push "onfinish"
	push "mg22_palenisko18"
	call snd_intro,addmethod
	push "snd_intro"
	cthis cbplay
	push "e1_mg22_palenisko_after_intro"
	call clsave,bset
l10397:
	push "e1_mg25_lustro_finished"
	call clsave,bis
	cmp0
	je l10399
	push "e1_mg28_luneta_finished"
	call clsave,bis
	neg
	jmp l10401
l10399:
	push 0
	jmp l10401
l10400:
	push 1
l10401:
	cmp0
	je l10402
	call anarat,show
	jmp l10398
l10402:
	push "e1_mg28_luneta_finished"
	call clsave,bis
	cmp0
	je l10404
	push "e1_mg25_lustro_finished"
	call clsave,bis
	neg
	jmp l10406
l10404:
	push 0
	jmp l10406
l10405:
	push 1
l10406:
	cmp0
	je l10407
	call anron,show
	jmp l10403
l10407:
	push "e1_mg25_lustro_finished"
	call clsave,bis
	cmp0
	je l10409
	push "e1_mg28_luneta_finished"
	call clsave,bis
	jmp l10411
l10409:
	push 0
	jmp l10411
l10410:
	push 1
l10411:
	cmp0
	je l10412
	call anzaklecie_done,show
	push "e1_mg22_palenisko_frog_leg_dodana"
	call clsave,bis
	cmp0
	je l10414
	call anspell_btn,show
	jmp l10413
l10414:
	call anarat,show
	call anron,show
l10413:
l10412:
l10403:
l10398:
l10380:
	cthis stdstart
	end method
	method mg22_palenisko0
	push 800
	push "null"
	call anmikstura,anfadein
	cthis advsetstdstate
	end method
	method mg22_palenisko1
	push "isbutin"
	push "mg22_palenisko2"
	cthis addmethod
	push "butclick"
	push "mg22_palenisko3"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg22_palenisko2
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpopup_bkg,isin
	neg
	end method
	method mg22_palenisko3
	cthis advstdstate
	neg
	cmp0
	je l10348
	ret
l10348:
	cthis mend
	end method
	method mg22_palenisko4
	push 500
	push "null"
	cthis anfadeout
	push 800
	push "mg22_palenisko5"
	call ankubek_z_wywarem,anfadein
	end method
	method mg22_palenisko5
	call ankubek_z_wywarem,butenable
	end method
	method mg22_palenisko6
	cthis Button_isinvis
	push "butmoveon"
	push "mg22_palenisko7"
	cthis addmethod
	push "butmoveoff"
	push "mg22_palenisko8"
	cthis addmethod
	push "butclick"
	push "mg22_palenisko9"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg22_palenisko7
	cthis advstdstate
	neg
	cmp0
	jne l10351
	push "e1_mg22_palenisko_mikstura_zrobiona"
	call clsave,bis
	neg
	jmp l10352
l10350:
	push 0
	jmp l10352
l10351:
	push 1
l10352:
	cmp0
	je l10353
	ret
l10353:
	push "take"
	call advmouse,set
	end method
	method mg22_palenisko8
	call advmouse,setstd
	end method
	method mg22_palenisko9
	cthis advstdstate
	neg
	cmp0
	je l10355
	ret
l10355:
	push "e1_mg22_palenisko_mikstura_zrobiona"
	call clsave,bis
	cmp0
	je l10357
	push "e1_mg22_palenisko_kubek_nalany"
	call clsave,bis
	neg
	jmp l10359
l10357:
	push 0
	jmp l10359
l10358:
	push 1
l10359:
	cmp0
	je l10360
	call advmouse,setstd
	push 500
	push "null"
	cthis anfadeout
	push 0
	call annalewanie,play
	push "e1_mg22_palenisko_kubek_nalany"
	call clsave,bis
	cthis getname
	call butgame,removebut
l10360:
	end method
	method mg22_palenisko10
	cthis Button_isinvis
	push "butmoveon"
	push "mg22_palenisko11"
	cthis addmethod
	push "butmoveoff"
	push "mg22_palenisko12"
	cthis addmethod
	push "butclick"
	push "mg22_palenisko13"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg22_palenisko11
	push "e1_mg22_palenisko_frog_leg_dodana"
	call clsave,bis
	neg
	cmp0
	je l10362
	push "use"
	call advmouse,set
l10362:
	end method
	method mg22_palenisko12
	call advmouse,setstd
	end method
	method mg22_palenisko13
	cthis advstdstate
	neg
	cmp0
	je l10364
	ret
l10364:
	push "e1_mg22_palenisko_frog_leg_dodana"
	call clsave,bis
	neg
	cmp0
	je l10366
	push "skladniki_snd"
	cthis cbplay
l10366:
	end method
	method mg22_palenisko14
	cthis Button_isinvis
	push "butmoveon"
	push "mg22_palenisko15"
	cthis addmethod
	push "butmoveoff"
	push "mg22_palenisko16"
	cthis addmethod
	push "butclick"
	push "mg22_palenisko17"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg22_palenisko15
	push "e1_mg22_palenisko_mikstura_zrobiona"
	call clsave,bis
	neg
	cmp0
	je l10368
	push "e1_mg22_palenisko_frog_leg_dodana"
	call clsave,bis
	cmp0
	je l10368
	push "e1_mg28_luneta_finished"
	call clsave,bis
	cmp0
	je l10368
	push "e1_mg25_lustro_finished"
	call clsave,bis
	jmp l10370
l10368:
	push 0
	jmp l10370
l10369:
	push 1
l10370:
	cmp0
	je l10371
	push "take"
	call advmouse,set
	jmp l10367
l10371:
	call advmouse,setstd
l10367:
	end method
	method mg22_palenisko16
	call advmouse,setstd
	end method
	method mg22_palenisko17
	cthis advstdstate
	neg
	cmp0
	je l10373
	ret
l10373:
	push "e1_mg22_palenisko_mikstura_zrobiona"
	call clsave,bis
	neg
	cmp0
	je l10375
	push "e1_mg22_palenisko_frog_leg_dodana"
	call clsave,bis
	cmp0
	je l10375
	push "e1_mg28_luneta_finished"
	call clsave,bis
	cmp0
	je l10375
	push "e1_mg25_lustro_finished"
	call clsave,bis
	jmp l10377
l10375:
	push 0
	jmp l10377
l10376:
	push 1
l10377:
	cmp0
	je l10378
	call advmouse,setstd
	push "spellsnd"
	cthis cbplay
	push "e1_mg22_palenisko_mikstura_zrobiona"
	call clsave,bset
l10378:
	end method
	method mg22_palenisko18
	cthis advsetstdstate
	end method
	method ankubek_z_wywarem_INPCK
	push "kubek_z_wywarem"
	cthis addtopck
	cthis set_mg_finished
	cthis timfinito
	end method
	method USE_rondel_z_woda
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call ankociolek_mask,isin
	cmp0
	je l10416
	push "e1_mg21_duch_recepta_wzieta"
	call clsave,bis
	cmp0
	je l10418
	call fxwlewa1,play
	push "rondel_z_woda"
	cthis removefrompck
	push 500
	push "null"
	call anwater_done,anfadein
	push 500
	push "null"
	call anwoda,anfadein
	push "e1_mg22_palenisko_woda_dodana"
	call clsave,bset
	jmp l10417
l10418:
	cthis item_gotopck
l10417:
	jmp l10415
l10416:
	cthis item_gotopck
l10415:
	end method
	method USE_zloty_plyn
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call ankociolek_mask,isin
	cmp0
	je l10420
	push "e1_mg21_duch_recepta_wzieta"
	call clsave,bis
	cmp0
	je l10422
	push "e1_mg22_palenisko_woda_dodana"
	call clsave,bis
	cmp0
	je l10424
	call fxwlewa1,play
	push "zloty_plyn"
	cthis removefrompck
	push 500
	push "null"
	call anfluid_done,anfadein
	push 500
	push "null"
	call anfluid,anfadein
	push "e1_mg22_palenisko_fluid_dodany"
	call clsave,bset
	jmp l10423
l10424:
	cthis item_gotopck
	push "noitemsnd"
	cthis cbplay
l10423:
	jmp l10421
l10422:
	cthis item_gotopck
l10421:
	jmp l10419
l10420:
	cthis item_gotopck
l10419:
	end method
	method USE_magiczne_nasiona
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call ankociolek_mask,isin
	cmp0
	je l10426
	push "e1_mg21_duch_recepta_wzieta"
	call clsave,bis
	cmp0
	je l10428
	push "e1_mg22_palenisko_fluid_dodany"
	call clsave,bis
	cmp0
	je l10430
	call fxwlewa1,play
	push "magiczne_nasiona"
	cthis removefrompck
	push 500
	push "null"
	call anziarna_done,anfadein
	push 500
	push "null"
	call anziarna,anfadein
	push "e1_mg22_palenisko_ziarna_dodane"
	call clsave,bset
	jmp l10429
l10430:
	cthis item_gotopck
	push "noitemsnd"
	cthis cbplay
l10429:
	jmp l10427
l10428:
	cthis item_gotopck
l10427:
	jmp l10425
l10426:
	cthis item_gotopck
l10425:
	end method
	method USE_noga_zaby
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call ankociolek_mask,isin
	cmp0
	je l10432
	push "e1_mg21_duch_recepta_wzieta"
	call clsave,bis
	cmp0
	je l10434
	push "e1_mg22_palenisko_ziarna_dodane"
	call clsave,bis
	cmp0
	je l10436
	call fxwlewa1,play
	push "noga_zaby"
	cthis removefrompck
	push 500
	push "null"
	call anfrog_leg_done,anfadein
	push 500
	push "null"
	call anfrog_leg,anfadein
	push "e1_mg22_palenisko_frog_leg_dodana"
	call clsave,bset
	call advmouse,setstd
	push "e1_mg25_lustro_finished"
	call clsave,bis
	cmp0
	je l10438
	push "e1_mg28_luneta_finished"
	call clsave,bis
	jmp l10440
l10438:
	push 0
	jmp l10440
l10439:
	push 1
l10440:
	cmp0
	je l10441
	push "pushspellsnd"
	cthis cbplay
	push 800
	push "null"
	call anspell_btn,anfadein
	jmp l10437
l10441:
	push "findrestspellsnd"
	cthis cbplay
l10437:
	jmp l10435
l10436:
	cthis item_gotopck
	push "noitemsnd"
	cthis cbplay
l10435:
	jmp l10433
l10434:
	cthis item_gotopck
l10433:
	jmp l10431
l10432:
	cthis item_gotopck
l10431:
	end method
	method mend
	push "ad22_kuchnia"
	push "gamead22_kuchnia0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "e1_mg21_duch_recepta_wzieta"
	call clsave,bis
	neg
	cmp0
	je l10443
	push "anpopexit"
	cthis showhint
	ret
l10443:
	push "ma_rondel_z_woda"
	call clsave,bis
	cmp0
	je l10445
	push "rondel_z_woda"
	cthis showhintitem
	push "ankociolek_mask"
	cthis showhint
	jmp l10444
l10445:
	push "e1_mg22_palenisko_woda_dodana"
	call clsave,bis
	cmp0
	je l10447
	push "ma_zloty_plyn"
	call clsave,bis
	jmp l10449
l10447:
	push 0
	jmp l10449
l10448:
	push 1
l10449:
	cmp0
	je l10450
	push "zloty_plyn"
	cthis showhintitem
	push "ankociolek_mask"
	cthis showhint
	jmp l10446
l10450:
	push "e1_mg22_palenisko_fluid_dodany"
	call clsave,bis
	cmp0
	je l10452
	push "ma_magiczne_nasiona"
	call clsave,bis
	jmp l10454
l10452:
	push 0
	jmp l10454
l10453:
	push 1
l10454:
	cmp0
	je l10455
	push "magiczne_nasiona"
	cthis showhintitem
	push "ankociolek_mask"
	cthis showhint
	jmp l10451
l10455:
	push "e1_mg22_palenisko_ziarna_dodane"
	call clsave,bis
	cmp0
	je l10457
	push "ma_noga_zaby"
	call clsave,bis
	jmp l10459
l10457:
	push 0
	jmp l10459
l10458:
	push 1
l10459:
	cmp0
	je l10460
	push "noga_zaby"
	cthis showhintitem
	push "ankociolek_mask"
	cthis showhint
	jmp l10456
l10460:
	push "e1_mg22_palenisko_frog_leg_dodana"
	call clsave,bis
	cmp0
	je l10462
	push "e1_mg25_lustro_finished"
	call clsave,bis
	cmp0
	je l10462
	push "e1_mg28_luneta_finished"
	call clsave,bis
	cmp0
	je l10462
	push "e1_mg22_palenisko_mikstura_zrobiona"
	call clsave,bis
	neg
	jmp l10464
l10462:
	push 0
	jmp l10464
l10463:
	push 1
l10464:
	cmp0
	je l10465
	push "anspell_btn"
	cthis showhint
	jmp l10461
l10465:
	push "e1_mg22_palenisko_mikstura_zrobiona"
	call clsave,bis
	cmp0
	je l10467
	push "taken_kubek_z_wywarem"
	call clsave,bis
	neg
	jmp l10469
l10467:
	push 0
	jmp l10469
l10468:
	push 1
l10469:
	cmp0
	je l10470
	push "ankubek_z_wywarem"
	cthis showhint
	jmp l10466
l10470:
	push "anpopexit"
	cthis showhint
l10466:
l10461:
l10456:
l10451:
l10446:
l10444:
	end method
	end game

	game mg22_klapa
	parent Banshee
	method init
	push "mg22_klapa"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "klapa_open.pyzH 3"
	push "ramie.pyz 4"
	push "klodka.pyz 5"
	push "oczko.pyz 6"
	push "klucz.pyzH 7"
	push "ramka.pyz 19"
	push "popexit.pyz 20"
	cthis imgs=
	push A
	push "bgrszumN 30"
	push "przekrecaklucz"
	push "szufladaklik"
	cthis sfxs=
	cthis butpopexit
	call imgbkg,mg22_klapa0
	push "e1_mg22_klapa_klucz_inserted"
	call clsave,bis
	neg
	cmp0
	je l10474
	call anklodka,mg22_klapa3
	jmp l10473
l10474:
	call anklucz,show
l10473:
	call anklucz,mg22_klapa8
	push "e1_mg22_klapa_klucz_inserted"
	call clsave,bis
	neg
	cmp0
	je l10487
	push "snd_brak_klucza"
	push "kinnat_c3d3_5"
	cthis newsndfree
	push "onfinish"
	push "mg22_klapa12"
	call snd_brak_klucza,addmethod
l10487:
	cthis stdstart
	end method
	method mg22_klapa0
	push "isbutin"
	push "mg22_klapa1"
	cthis addmethod
	push "butclick"
	push "mg22_klapa2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg22_klapa1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpopup_bkg,isin
	neg
	end method
	method mg22_klapa2
	cthis advstdstate
	neg
	cmp0
	je l10472
	ret
l10472:
	cthis mend
	end method
	method mg22_klapa3
	push "isbutin"
	push "mg22_klapa4"
	cthis addmethod
	push "butmoveon"
	push "mg22_klapa5"
	cthis addmethod
	push "butmoveoff"
	push "mg22_klapa6"
	cthis addmethod
	push "butclick"
	push "mg22_klapa7"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg22_klapa4
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	end method
	method mg22_klapa5
	push "e1_mg22_klapa_klucz_inserted"
	call clsave,bis
	neg
	cmp0
	je l10476
	push "use"
	call advmouse,set
l10476:
	end method
	method mg22_klapa6
	call advmouse,setstd
	end method
	method mg22_klapa7
	cthis advstdstate
	neg
	cmp0
	je l10478
	ret
l10478:
	push "e1_mg22_klapa_klucz_inserted"
	call clsave,bis
	neg
	cmp0
	je l10480
	push "snd_brak_klucza"
	cthis cbplay
l10480:
	end method
	method mg22_klapa8
	push "isbutin"
	push "mg22_klapa9"
	cthis addmethod
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg22_klapa10"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg22_klapa9
	localint $1
	localint $2
	pop $2
	pop $1
	cthis advstdstate
	cmp0
	je l10481
	push $1
	push $2
	push 0
	push 0
	cthis isin
	cmp0
	je l10481
	push "e1_mg22_klapa_klucz_inserted"
	call clsave,bis
	jmp l10483
l10481:
	push 0
	jmp l10483
l10482:
	push 1
l10483:
	end method
	method mg22_klapa10
	cthis advstdstate
	neg
	cmp0
	je l10485
	ret
l10485:
	push "1"
	call anklucz,play
	call fxprzekrecaklucz,play
	push "1"
	call anramie,play
	push "e1_mg22_klapa_otwarta"
	call clsave,bset
	cthis getname
	call butgame,removebut
	cthis set_mg_finished
	call advmouse,setstd
	push "time_start"
	push 600
	push "mg22_klapa11"
	cthis timplay
	end method
	method mg22_klapa11
	push 1600
	push "timfinito"
	call anklapa_open,anfadein
	end method
	method mg22_klapa12
	cthis advsetstdstate
	end method
	method USE_klucz_klodka
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call anklodka,isin
	cmp0
	je l10489
	push "klucz_klodka"
	cthis removefrompck
	push 800
	push "null"
	call anklucz,anfadein
	push "anklodka"
	call butgame,removebut
	push "e1_mg22_klapa_klucz_inserted"
	call clsave,bset
	call fxszufladaklik,play
	call advmouse,setstd
	jmp l10488
l10489:
	cthis advsetstdstate
	cthis item_gotopck
l10488:
	end method
	method mend
	push "ad22_kuchnia"
	push "gamead22_kuchnia0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "taken_klucz_klodka"
	call clsave,bis
	cmp0
	je l10491
	push "e1_mg22_klapa_klucz_inserted"
	call clsave,bis
	neg
	cmp0
	je l10493
	push "klucz_klodka"
	cthis showhintitem
l10493:
	push "anklodka"
	cthis showhint
	jmp l10490
l10491:
	push "anpopexit"
	cthis showhint
l10490:
	end method
	end game

	game mg23_zebatki
	parent Banshee
	method init
	push "mg23_zebatki"
	clparent Banshee,init
	new string,act_id
	push "null"
	pop act_id
	push A
	push "bkg.jpg 1"
	push "2_slot.pyzH 2"
	push "3_slot.pyzH 3"
	push "4_slot.pyzH 4"
	push "5_slot.pyzH 5"
	push "7_slot.pyzH 6"
	push "8_slot.pyzH 7"
	push "9_slot.pyzH 7"
	push "10_slot.pyzH 7"
	push "2.pyzH 8"
	push "3.pyzH 9"
	push "4.pyzH 10"
	push "5.pyzH 11"
	push "7.pyzH 6"
	push "8.pyzH 12"
	push "9.pyzH 12"
	push "10.pyzH 12"
	push "2_put.pyzH 13"
	push "3_put.pyzH 14"
	push "4_put.pyzH 15"
	push "5_put.pyzH 16"
	push "7_put.pyzH 17"
	push "8_put.pyzH 18"
	push "9_put.pyzH 18"
	push "10_put.pyzH 19"
	push "wajcha.pyz 20"
	cthis imgs=
	push A
	push "bgrsala2N 30"
	push "click"
	push "szczeka"
	cthis sfxs=
	call imgbkg,mg23_zebatki0
	new ImgRect,recexit
	call recexit,mg23_zebatki4
	push "mg23"
	cthis askopis
	call anaskopis,hide
	call an2_slot,mg23_zebatki7
	call an3_slot,mg23_zebatki10
	call an4_slot,mg23_zebatki13
	call an5_slot,mg23_zebatki16
	call an7_slot,mg23_zebatki19
	call an8_slot,mg23_zebatki22
	call an9_slot,mg23_zebatki25
	call an10_slot,mg23_zebatki28
	push "snd_all_ready"
	push "kinnat_c3d3_6b"
	cthis newsndfree
	push "onfinish"
	push "mg23_zebatki31"
	call snd_all_ready,addmethod
	push "e1_drzwi_zebatki_uzyte"
	call clsave,bis
	cmp0
	je l10547
	call an2,show
	call an3,show
	call an4,show
	call an5,show
	call an7,show
	call an8,show
	jmp l10546
l10547:
	push "snd_brakzebatek"
	push "kinnat_c3d3_6"
	cthis newsndfree
	push "onfinish"
	push "mg23_zebatki32"
	call snd_brakzebatek,addmethod
	push "ma_zebatka_6"
	call clsave,bis
	cmp0
	je l10549
	push "e1_drzwi_zebatki_uzyte"
	call clsave,bis
	neg
	jmp l10551
l10549:
	push 0
	jmp l10551
l10550:
	push 1
l10551:
	cmp0
	je l10552
	push "snd_all_ready"
	cthis cbplay
l10552:
	push "snd_brakzebatek2"
	push "kinnat_c3d3_6d"
	cthis newsndfree
	push "onfinish"
	push "mg23_zebatki33"
	call snd_brakzebatek2,addmethod
l10546:
	push "snd_elementy_nieulozone"
	push "kinnat_c3d3_6a"
	cthis newsndfree
	push "onfinish"
	push "mg23_zebatki34"
	call snd_elementy_nieulozone,addmethod
	push "e1_mg23_zebatki_2_inserted"
	call clsave,bis
	cmp0
	je l10554
	call an2_put,show
	call an2,hide
	jmp l10553
l10554:
	push "2"
	push 1
	push 1
	cthis init_cogs
l10553:
	push "e1_mg23_zebatki_3_inserted"
	call clsave,bis
	cmp0
	je l10556
	call an3_put,show
	call an3,hide
	jmp l10555
l10556:
	push "3"
	push 1
	push 1
	cthis init_cogs
l10555:
	push "e1_mg23_zebatki_4_inserted"
	call clsave,bis
	cmp0
	je l10558
	call an4_put,show
	call an4,hide
	jmp l10557
l10558:
	push "4"
	push 1
	push 1
	cthis init_cogs
l10557:
	push "e1_mg23_zebatki_5_inserted"
	call clsave,bis
	cmp0
	je l10560
	call an5_put,show
	call an5,hide
	jmp l10559
l10560:
	push "5"
	push 1
	push 1
	cthis init_cogs
l10559:
	push "e1_mg23_zebatki_7_inserted"
	call clsave,bis
	cmp0
	je l10562
	call an7_put,show
	call an7,hide
	jmp l10561
l10562:
	push "7"
	push 1
	push 1
	cthis init_cogs
l10561:
	push "e1_mg23_zebatki_8_inserted"
	call clsave,bis
	cmp0
	je l10564
	call an8_put,show
	call an8,hide
	jmp l10563
l10564:
	push "8"
	push 1
	push 1
	cthis init_cogs
l10563:
	push "e1_mg23_zebatki_9_inserted"
	call clsave,bis
	cmp0
	je l10566
	call an9_put,show
	call an9,hide
	jmp l10565
l10566:
	push "9"
	push 1
	push 1
	cthis init_cogs
	call an9,show
l10565:
	push "e1_mg23_zebatki_10_inserted"
	call clsave,bis
	cmp0
	je l10568
	call an10_put,show
	call an10,hide
	jmp l10567
l10568:
	push "10"
	push 1
	push 1
	cthis init_cogs
	call an10,show
l10567:
	call anwajcha,mg23_zebatki35
	new Film,filmb
	push "mus"
	call filmb,musicclass=
	push "onfinish"
	push "mg23_zebatki39"
	call filmb,addmethod
	push "scripts/cs23_mechanizm/"
	push "film"
	call filmb,load
	call filmb,showfirstframe
	push 200
	call filmb,setz
	push 0
	push 0
	call filmb,setpos
	call filmb,hide
	push "e1_drzwi_zebatki_uzyte"
	call clsave,bis
	cmp0
	je l10578
	call guihint,switchtoskip
	call anaskopis,show
l10578:
	push "e1_drzwi_notatka_dodana"
	call clsave,bis
	neg
	cmp0
	je l10580
	push "n021"
	cthis stdpiorko
	push "e1_drzwi_notatka_dodana"
	call clsave,bset
l10580:
	cthis stdstart
	end method
	method mg23_zebatki0
	cthis Button_isinvisalpha
	push "butmoveon"
	push "mg23_zebatki1"
	cthis addmethod
	push "butmoveoff"
	push "mg23_zebatki2"
	cthis addmethod
	push "butclick"
	push "mg23_zebatki3"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg23_zebatki1
	push "e1_drzwi_zebatki_uzyte"
	call clsave,bis
	neg
	cmp0
	je l10495
	push "use"
	call advmouse,set
l10495:
	end method
	method mg23_zebatki2
	call advmouse,setstd
	end method
	method mg23_zebatki3
	cthis advstdstate
	neg
	cmp0
	jne l10498
	push "e1_drzwi_zebatki_uzyte"
	call clsave,bis
	jmp l10499
l10497:
	push 0
	jmp l10499
l10498:
	push 1
l10499:
	cmp0
	je l10500
	ret
l10500:
	push "snd_brakzebatek2"
	cthis cbplay
	end method
	method mg23_zebatki4
	cthis Button_isin
	cthis Button_moveoffms
	push "butmoveon"
	push "mg23_zebatki5"
	cthis addmethod
	push 0
	push 0.8
	push igmapph
	pop $b
	popax
	mul $a,$b
	push igmappw
	push igmapph
	cthis setrect
	push 1
	cthis setz
	cthis getname
	call butgame,add
	push "butclick"
	push "mg23_zebatki6"
	cthis addmethod
	end method
	method mg23_zebatki5
	push "godd"
	call advmouse,set
	end method
	method mg23_zebatki6
	cthis advstdstate
	neg
	cmp0
	jne l10503
	push act_id
	push "null"
	cmpjne
	jmp l10504
l10502:
	push 0
	jmp l10504
l10503:
	push 1
l10504:
	cmp0
	je l10505
	ret
l10505:
	cthis mend
	end method
	method mg23_zebatki7
	cthis Button_isinvis
	push "butmoveon"
	push "mg23_zebatki8"
	cthis addmethod
	push "butmoveoff"
	push "mg23_zebatki9"
	cthis addmethod
	push A
	push "occupied"
	push 0
	push "obj_id"
	push "null"
	cthis vars2
	cthis getname
	call butgame,add
	end method
	method mg23_zebatki8
	cthis advstdstate
	neg
	cmp0
	jne l10508
	push "e1_mg23_zebatki_2_inserted"
	call clsave,bis
	jmp l10509
l10507:
	push 0
	jmp l10509
l10508:
	push 1
l10509:
	cmp0
	je l10510
	ret
l10510:
	push "use"
	call advmouse,set
	end method
	method mg23_zebatki9
	call advmouse,setstd
	end method
	method mg23_zebatki10
	cthis Button_isinvis
	push "butmoveon"
	push "mg23_zebatki11"
	cthis addmethod
	push "butmoveoff"
	push "mg23_zebatki12"
	cthis addmethod
	push A
	push "occupied"
	push 0
	push "obj_id"
	push "null"
	cthis vars2
	cthis getname
	call butgame,add
	end method
	method mg23_zebatki11
	cthis advstdstate
	neg
	cmp0
	jne l10513
	push "e1_mg23_zebatki_3_inserted"
	call clsave,bis
	jmp l10514
l10512:
	push 0
	jmp l10514
l10513:
	push 1
l10514:
	cmp0
	je l10515
	ret
l10515:
	push "use"
	call advmouse,set
	end method
	method mg23_zebatki12
	call advmouse,setstd
	end method
	method mg23_zebatki13
	cthis Button_isinvis
	push "butmoveon"
	push "mg23_zebatki14"
	cthis addmethod
	push "butmoveoff"
	push "mg23_zebatki15"
	cthis addmethod
	push A
	push "occupied"
	push 0
	push "obj_id"
	push "null"
	cthis vars2
	cthis getname
	call butgame,add
	end method
	method mg23_zebatki14
	cthis advstdstate
	neg
	cmp0
	jne l10518
	push "e1_mg23_zebatki_4_inserted"
	call clsave,bis
	jmp l10519
l10517:
	push 0
	jmp l10519
l10518:
	push 1
l10519:
	cmp0
	je l10520
	ret
l10520:
	push "use"
	call advmouse,set
	end method
	method mg23_zebatki15
	call advmouse,setstd
	end method
	method mg23_zebatki16
	cthis Button_isinvis
	push "butmoveon"
	push "mg23_zebatki17"
	cthis addmethod
	push "butmoveoff"
	push "mg23_zebatki18"
	cthis addmethod
	push A
	push "occupied"
	push 0
	push "obj_id"
	push "null"
	cthis vars2
	cthis getname
	call butgame,add
	end method
	method mg23_zebatki17
	cthis advstdstate
	neg
	cmp0
	jne l10523
	push "e1_mg23_zebatki_5_inserted"
	call clsave,bis
	jmp l10524
l10522:
	push 0
	jmp l10524
l10523:
	push 1
l10524:
	cmp0
	je l10525
	ret
l10525:
	push "use"
	call advmouse,set
	end method
	method mg23_zebatki18
	call advmouse,setstd
	end method
	method mg23_zebatki19
	cthis Button_isinvis
	push "butmoveon"
	push "mg23_zebatki20"
	cthis addmethod
	push "butmoveoff"
	push "mg23_zebatki21"
	cthis addmethod
	push A
	push "occupied"
	push 0
	push "obj_id"
	push "null"
	cthis vars2
	cthis getname
	call butgame,add
	end method
	method mg23_zebatki20
	cthis advstdstate
	neg
	cmp0
	jne l10528
	push "e1_mg23_zebatki_7_inserted"
	call clsave,bis
	jmp l10529
l10527:
	push 0
	jmp l10529
l10528:
	push 1
l10529:
	cmp0
	je l10530
	ret
l10530:
	push "use"
	call advmouse,set
	end method
	method mg23_zebatki21
	call advmouse,setstd
	end method
	method mg23_zebatki22
	cthis Button_isinvis
	push "butmoveon"
	push "mg23_zebatki23"
	cthis addmethod
	push "butmoveoff"
	push "mg23_zebatki24"
	cthis addmethod
	push A
	push "occupied"
	push 0
	push "obj_id"
	push "null"
	cthis vars2
	cthis getname
	call butgame,add
	end method
	method mg23_zebatki23
	cthis advstdstate
	neg
	cmp0
	jne l10533
	push "e1_mg23_zebatki_8_inserted"
	call clsave,bis
	jmp l10534
l10532:
	push 0
	jmp l10534
l10533:
	push 1
l10534:
	cmp0
	je l10535
	ret
l10535:
	push "use"
	call advmouse,set
	end method
	method mg23_zebatki24
	call advmouse,setstd
	end method
	method mg23_zebatki25
	cthis Button_isinvis
	push "butmoveon"
	push "mg23_zebatki26"
	cthis addmethod
	push "butmoveoff"
	push "mg23_zebatki27"
	cthis addmethod
	push A
	push "occupied"
	push 0
	push "obj_id"
	push "null"
	cthis vars2
	cthis getname
	call butgame,add
	end method
	method mg23_zebatki26
	cthis advstdstate
	neg
	cmp0
	jne l10538
	push "e1_mg23_zebatki_9_inserted"
	call clsave,bis
	cmp0
	jne l10538
	push "e1_mg23_zebatki_2_inserted"
	call clsave,bis
	neg
	jmp l10539
l10537:
	push 0
	jmp l10539
l10538:
	push 1
l10539:
	cmp0
	je l10540
	ret
l10540:
	push "use"
	call advmouse,set
	end method
	method mg23_zebatki27
	call advmouse,setstd
	end method
	method mg23_zebatki28
	cthis Button_isinvis
	push "butmoveon"
	push "mg23_zebatki29"
	cthis addmethod
	push "butmoveoff"
	push "mg23_zebatki30"
	cthis addmethod
	push A
	push "occupied"
	push 0
	push "obj_id"
	push "null"
	cthis vars2
	cthis getname
	call butgame,add
	end method
	method mg23_zebatki29
	cthis advstdstate
	neg
	cmp0
	jne l10543
	push "e1_mg23_zebatki_10_inserted"
	call clsave,bis
	cmp0
	jne l10543
	push "e1_mg23_zebatki_7_inserted"
	call clsave,bis
	neg
	jmp l10544
l10542:
	push 0
	jmp l10544
l10543:
	push 1
l10544:
	cmp0
	je l10545
	ret
l10545:
	push "use"
	call advmouse,set
	end method
	method mg23_zebatki30
	call advmouse,setstd
	end method
	method mg23_zebatki31
	cthis advsetstdstate
	end method
	method mg23_zebatki32
	cthis advsetstdstate
	end method
	method mg23_zebatki33
	cthis advsetstdstate
	end method
	method mg23_zebatki34
	cthis advsetstdstate
	end method
	method mg23_zebatki35
	cthis Button_isinvisalpha
	push "butmoveon"
	push "mg23_zebatki36"
	cthis addmethod
	push "butmoveoff"
	push "mg23_zebatki37"
	cthis addmethod
	push "butclick"
	push "mg23_zebatki38"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg23_zebatki36
	cthis advstdstate
	neg
	cmp0
	je l10570
	ret
l10570:
	push "take"
	call advmouse,set
	end method
	method mg23_zebatki37
	call advmouse,setstd
	end method
	method mg23_zebatki38
	cthis advstdstate
	neg
	cmp0
	je l10572
	ret
l10572:
	push "e1_drzwi_zebatki_uzyte"
	call clsave,bis
	neg
	cmp0
	je l10574
	push "snd_brakzebatek"
	cthis cbplay
	jmp l10573
l10574:
	cthis all_cogs_inserted
	cmp0
	je l10576
	push "anwajcha"
	call butgame,removebut
	cthis set_mg_finished
	call advmouse,setstd
	call filmb,play
	jmp l10575
l10576:
	push "snd_elementy_nieulozone"
	cthis cbplay
l10575:
l10573:
	end method
	method mg23_zebatki39
	cthis hide
	cthis mend
	end method
	method init_cogs
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	push $2
	push $3
	spop $a
	call [$a],mg23_zebatki40
	end method
	method mg23_zebatki40
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push A
	push "name"
	push $1
	push "start_x"
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getposx
	push "start_y"
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getposy
	cthis vars2
	push "isbutin"
	push "mg23_zebatki41"
	cthis addmethod
	push "butmoveon"
	push "mg23_zebatki42"
	cthis addmethod
	push "butmoveoff"
	push "mg23_zebatki43"
	cthis addmethod
	push "butclick"
	push "mg23_zebatki44"
	cthis addmethod
	push "butrel"
	push "mg23_zebatki45"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg23_zebatki41
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	cmp0
	je l10581
	push "e1_drzwi_zebatki_uzyte"
	call clsave,bis
	jmp l10583
l10581:
	push 0
	jmp l10583
l10582:
	push 1
l10583:
	end method
	method mg23_zebatki42
	cthis advstdstate
	neg
	cmp0
	jne l10586
	push act_id
	push "null"
	cmpjne
	jmp l10587
l10585:
	push 0
	jmp l10587
l10586:
	push 1
l10587:
	cmp0
	je l10588
	ret
l10588:
	push "take"
	call advmouse,set
	push 1
	cthis play
	end method
	method mg23_zebatki43
	call advmouse,setstd
	push 0
	cthis play
	end method
	method mg23_zebatki44
	cthis advstdstate
	neg
	cmp0
	jne l10591
	cthis is_mg_finished
	jmp l10592
l10590:
	push 0
	jmp l10592
l10591:
	push 1
l10592:
	cmp0
	je l10593
	ret
l10593:
	push act_id
	push "null"
	cmpje
	cmp0
	je l10595
	cthis getname
	pop act_id
	call fxclick,play
	push 300
	cthis setz
	push 2
	cthis play
	call mouse,getpos
	cthis setpos
	call advmouse,setstd
	jmp l10594
l10595:
	push act_id
	cthis getname
	cmpje
	cmp0
	je l10597
	localdef $1
	push "an"
	cthis name
	pop $b
	popax
	add $a,$b
	push "_slot"
	pop $b
	popax
	add $a,$b
	pop $1
	localdef $2
	push "empt"
	pop $2
	localdef $3
	push name
	pop $3
	cthis getname
	push "an4"
	cmpje
	cmp0
	je l10599
	push "an8_slot"
	pop $2
	push "8"
	pop $3
	jmp l10598
l10599:
	cthis getname
	push "an8"
	cmpje
	cmp0
	je l10601
	push "an4_slot"
	pop $2
	push "4"
	pop $3
	jmp l10600
l10601:
	cthis getname
	push "an9"
	cmpje
	cmp0
	je l10603
	push "an9_slot"
	pop $2
	push "9"
	pop $3
	jmp l10602
l10603:
	cthis getname
	push "an10"
	cmpje
	cmp0
	je l10605
	push "an10_slot"
	pop $2
	push "10"
	pop $3
	jmp l10604
l10605:
	push $1
	pop $2
	cthis name
	pop $3
l10604:
l10602:
l10600:
l10598:
	push $1
	spushs
	call mouse,getpos
	push 0
	push 1
	spop $a
	call [$a],isin
	cmp0
	je l10607
	push "e1_mg23_zebatki_"
	cthis name
	pop $b
	popax
	add $a,$b
	push "_inserted"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l10609
	cthis name
	push "9"
	cmpje
	cmp0
	jne l10612
	cthis name
	push "10"
	cmpje
	jmp l10613
l10611:
	push 0
	jmp l10613
l10612:
	push 1
l10613:
	cmp0
	je l10614
	push $1
	push "an10_slot"
	cmpje
	cmp0
	je l10616
	push "e1_mg23_zebatki_7_inserted"
	call clsave,bis
	neg
	jmp l10618
l10616:
	push 0
	jmp l10618
l10617:
	push 1
l10618:
	cmp0
	jne l10620
	push $1
	push "an9_slot"
	cmpje
	cmp0
	je l10621
	push "e1_mg23_zebatki_2_inserted"
	call clsave,bis
	neg
	jmp l10623
l10621:
	push 0
	jmp l10623
l10622:
	push 1
l10623:
	jmp l10624
l10619:
	push 0
	jmp l10624
l10620:
	push 1
l10624:
	cmp0
	je l10625
	push 0
	cthis play
	cthis start_x
	cthis start_y
	cthis setpos
	call fxclick,play
	push 2
	cthis setz
	push "null"
	pop act_id
	call advmouse,setstd
	call butgame,sort
	cthis advsetstdstate
	ret
l10625:
l10614:
	push "an"
	cthis name
	pop $b
	popax
	add $a,$b
	push "_put"
	pop $b
	popax
	add $a,$b
	spushs
	push 100
	push "null"
	spop $a
	call [$a],anfadein
	cthis name
	push "9"
	cmpje
	cmp0
	jne l10628
	cthis name
	push "10"
	cmpje
	jmp l10629
l10627:
	push 0
	jmp l10629
l10628:
	push 1
l10629:
	cmp0
	je l10630
	call fxclick,play
	jmp l10626
l10630:
	call fxszczeka,play
l10626:
	push "e1_mg23_zebatki_"
	cthis name
	pop $b
	popax
	add $a,$b
	push "_inserted"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	call advmouse,setstd
	cthis hide
	cthis check_won
	cthis check_finish
	cthis getname
	call butgame,removebut
	jmp l10608
l10609:
	push 0
	cthis play
	cthis start_x
	cthis start_y
	cthis setpos
	call fxclick,play
	push 2
	cthis setz
l10608:
	jmp l10606
l10607:
	push $2
	spushs
	call mouse,getpos
	push 0
	push 1
	spop $a
	call [$a],isin
	cmp0
	je l10632
	push "e1_mg23_zebatki_"
	push $3
	pop $b
	popax
	add $a,$b
	push "_inserted"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l10634
	push "an"
	push $3
	pop $b
	popax
	add $a,$b
	push "_put"
	pop $b
	popax
	add $a,$b
	spushs
	push 100
	push "null"
	spop $a
	call [$a],anfadein
	call fxclick,play
	push "e1_mg23_zebatki_"
	push $3
	pop $b
	popax
	add $a,$b
	push "_inserted"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	call advmouse,setstd
	cthis hide
	cthis check_won
	cthis check_finish
	cthis getname
	call butgame,removebut
	jmp l10633
l10634:
	push 0
	cthis play
	cthis start_x
	cthis start_y
	cthis setpos
	call fxclick,play
	push 2
	cthis setz
l10633:
	jmp l10631
l10632:
	push 0
	cthis play
	cthis start_x
	cthis start_y
	cthis setpos
	call fxclick,play
	push 2
	cthis setz
l10631:
l10606:
	push "null"
	pop act_id
	call advmouse,setstd
l10597:
l10594:
	call butgame,sort
	cthis advsetstdstate
	end method
	method mg23_zebatki45
	cthis butclick
	end method
	method all_cogs_inserted
	push "e1_mg23_zebatki_2_inserted"
	call clsave,bis
	neg
	cmp0
	je l10636
	push 0
	ret
l10636:
	push "e1_mg23_zebatki_3_inserted"
	call clsave,bis
	neg
	cmp0
	je l10638
	push 0
	ret
l10638:
	push "e1_mg23_zebatki_4_inserted"
	call clsave,bis
	neg
	cmp0
	je l10640
	push 0
	ret
l10640:
	push "e1_mg23_zebatki_5_inserted"
	call clsave,bis
	neg
	cmp0
	je l10642
	push 0
	ret
l10642:
	push "e1_mg23_zebatki_7_inserted"
	call clsave,bis
	neg
	cmp0
	je l10644
	push 0
	ret
l10644:
	push "e1_mg23_zebatki_8_inserted"
	call clsave,bis
	neg
	cmp0
	je l10646
	push 0
	ret
l10646:
	push "e1_mg23_zebatki_9_inserted"
	call clsave,bis
	neg
	cmp0
	je l10648
	push 0
	ret
l10648:
	push "e1_mg23_zebatki_10_inserted"
	call clsave,bis
	neg
	cmp0
	je l10650
	push 0
	ret
l10650:
	push 1
	ret
	end method
	method USE_zebatka_6
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call imgbkg,isin
	cmp0
	je l10652
	push "zebatka_6"
	cthis removefrompck
	push "imgbkg"
	call butgame,removebut
	push "e1_drzwi_zebatki_uzyte"
	call clsave,bset
	push "tim1"
	push 150
	push "mg23_zebatki46"
	cthis timplay
	push "tim2"
	push 300
	push "mg23_zebatki47"
	cthis timplay
	push "tim3"
	push 450
	push "mg23_zebatki48"
	cthis timplay
	push "tim4"
	push 500
	push "mg23_zebatki49"
	cthis timplay
	push "tim5"
	push 750
	push "mg23_zebatki50"
	cthis timplay
	push "tim6"
	push 900
	push "mg23_zebatki51"
	cthis timplay
	call advmouse,setstd
	call guihint,switchtoskip
	call anaskopis,show
	jmp l10651
l10652:
	cthis item_gotopck
l10651:
	end method
	method mg23_zebatki46
	push "an2"
	spushs
	push 400
	push "null"
	spop $a
	call [$a],anfadein
	end method
	method mg23_zebatki47
	push "an3"
	spushs
	push 400
	push "null"
	spop $a
	call [$a],anfadein
	end method
	method mg23_zebatki48
	push "an4"
	spushs
	push 400
	push "null"
	spop $a
	call [$a],anfadein
	end method
	method mg23_zebatki49
	push "an5"
	spushs
	push 400
	push "null"
	spop $a
	call [$a],anfadein
	end method
	method mg23_zebatki50
	push "an7"
	spushs
	push 400
	push "null"
	spop $a
	call [$a],anfadein
	end method
	method mg23_zebatki51
	push "an8"
	spushs
	push 400
	push "null"
	spop $a
	call [$a],anfadein
	end method
	method mouse_move
	push act_id
	push "null"
	cmpjne
	cmp0
	je l10654
	push act_id
	spushs
	call mouse,getpos
	spop $a
	call [$a],setpos
	push act_id
	spushs
	push 2
	spop $a
	call [$a],play
l10654:
	end method
	method mend
	push "ad23_spizarnia"
	push "gamead23_spizarnia0"
	cthis stdexitdefadv
	end method
	method SKIP_CLICK
	cthis advstdstate
	cmp0
	je l10656
	push 500
	push "null"
	call an2_put,anfadein
	push 500
	push "null"
	call an3_put,anfadein
	push 500
	push "null"
	call an4_put,anfadein
	push 500
	push "null"
	call an5_put,anfadein
	push 500
	push "null"
	call an7_put,anfadein
	push 500
	push "null"
	call an8_put,anfadein
	push 500
	push "null"
	call an9_put,anfadein
	push 500
	push "null"
	call an10_put,anfadein
	push "e1_mg23_zebatki_2_inserted"
	call clsave,bset
	push "e1_mg23_zebatki_3_inserted"
	call clsave,bset
	push "e1_mg23_zebatki_4_inserted"
	call clsave,bset
	push "e1_mg23_zebatki_5_inserted"
	call clsave,bset
	push "e1_mg23_zebatki_7_inserted"
	call clsave,bset
	push "e1_mg23_zebatki_8_inserted"
	call clsave,bset
	push "e1_mg23_zebatki_9_inserted"
	call clsave,bset
	push "e1_mg23_zebatki_10_inserted"
	call clsave,bset
	push 500
	push "null"
	call an2,anfadeout
	push 500
	push "null"
	call an3,anfadeout
	push 500
	push "null"
	call an4,anfadeout
	push 500
	push "null"
	call an5,anfadeout
	push 500
	push "null"
	call an7,anfadeout
	push 500
	push "null"
	call an8,anfadeout
	push 500
	push "null"
	call an9,anfadeout
	push 500
	push "null"
	call an10,anfadeout
	push "an2"
	call butgame,removebut
	push "an3"
	call butgame,removebut
	push "an4"
	call butgame,removebut
	push "an5"
	call butgame,removebut
	push "an7"
	call butgame,removebut
	push "an8"
	call butgame,removebut
	push "an9"
	call butgame,removebut
	push "an10"
	call butgame,removebut
	call guihint,switchtohint
l10656:
	end method
	method HINT_CLICK
	push "ma_zebatka_6"
	call clsave,bis
	cmp0
	je l10658
	push "zebatka_6"
	cthis showhintitem
	push "imgbkg"
	cthis showhint
	jmp l10657
l10658:
	push "e1_drzwi_zebatki_uzyte"
	call clsave,bis
	cmp0
	je l10660
	push "e1_mg23_zebatki_2_inserted"
	call clsave,bis
	neg
	cmp0
	je l10662
	push "an2"
	cthis showhint
	push "an2_slot"
	cthis showhint
	jmp l10661
l10662:
	push "e1_mg23_zebatki_3_inserted"
	call clsave,bis
	neg
	cmp0
	je l10664
	push "an3"
	cthis showhint
	push "an3_slot"
	cthis showhint
	jmp l10663
l10664:
	push "e1_mg23_zebatki_4_inserted"
	call clsave,bis
	neg
	cmp0
	je l10666
	push "an4"
	cthis showhint
	push "an4_slot"
	cthis showhint
	jmp l10665
l10666:
	push "e1_mg23_zebatki_5_inserted"
	call clsave,bis
	neg
	cmp0
	je l10668
	push "an5"
	cthis showhint
	push "an5_slot"
	cthis showhint
	jmp l10667
l10668:
	push "e1_mg23_zebatki_7_inserted"
	call clsave,bis
	neg
	cmp0
	je l10670
	push "an7"
	cthis showhint
	push "an7_slot"
	cthis showhint
	jmp l10669
l10670:
	push "e1_mg23_zebatki_8_inserted"
	call clsave,bis
	neg
	cmp0
	je l10672
	push "an8"
	cthis showhint
	push "an8_slot"
	cthis showhint
	jmp l10671
l10672:
	push "e1_mg23_zebatki_9_inserted"
	call clsave,bis
	neg
	cmp0
	je l10674
	push "an9"
	cthis showhint
	push "an9_slot"
	cthis showhint
	jmp l10673
l10674:
	push "e1_mg23_zebatki_10_inserted"
	call clsave,bis
	neg
	cmp0
	je l10676
	push "an10"
	cthis showhint
	push "an10_slot"
	cthis showhint
	jmp l10675
l10676:
	push "anwajcha"
	cthis showhint
l10675:
l10673:
l10671:
l10669:
l10667:
l10665:
l10663:
l10661:
	jmp l10659
l10660:
	push "recexit"
	cthis showhint
l10659:
l10657:
	end method
	end game

	game mg24_drzwi_sypialnia
	parent Banshee
	method init
	push "mg24_drzwi_sypialnia"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "drzewo_slot.pyzH 3"
	push "drzewo.pyzH 4"
	push "door_open.pyzH 5"
	push "ramka.pyz 22"
	push "popexit.pyz 23"
	cthis imgs=
	push A
	push "bgrwiatrN 10"
	push "noc2N 20"
	push "openhead"
	push "magical"
	cthis sfxs=
	cthis butpopexit
	cthis butpopexitisinramka
	push "e1_mg24_drzwi_sypialnia_tree_in"
	call clsave,bis
	cmp0
	je l10678
	call andrzewo,show
	jmp l10677
l10678:
	call andrzewo_slot,mg24_drzwi_sypialnia0
l10677:
	push "e1_mg24_drzwi_sypialnia_tree_in"
	call clsave,bis
	neg
	cmp0
	je l10687
	push "snd_emblemat"
	push "kinnat_c3d3_13c"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_emblemat,addmethod
l10687:
	cthis stdstart
	end method
	method mg24_drzwi_sypialnia0
	push "isbutin"
	push "mg24_drzwi_sypialnia1"
	cthis addmethod
	push "butmoveon"
	push "mg24_drzwi_sypialnia2"
	cthis addmethod
	push "butmoveoff"
	push "mg24_drzwi_sypialnia3"
	cthis addmethod
	push "butclick"
	push "mg24_drzwi_sypialnia4"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg24_drzwi_sypialnia1
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	end method
	method mg24_drzwi_sypialnia2
	push "e1_mg24_drzwi_sypialnia_tree_in"
	call clsave,bis
	neg
	cmp0
	je l10680
	push "use"
	call advmouse,set
	jmp l10679
l10680:
	call advmouse,setstd
l10679:
	end method
	method mg24_drzwi_sypialnia3
	call advmouse,setstd
	end method
	method mg24_drzwi_sypialnia4
	cthis advstdstate
	neg
	cmp0
	jne l10683
	push "e1_mg24_drzwi_sypialnia_tree_in"
	call clsave,bis
	jmp l10684
l10682:
	push 0
	jmp l10684
l10683:
	push 1
l10684:
	cmp0
	je l10685
	ret
l10685:
	push "snd_emblemat"
	cthis cbplay
	end method
	method USE_tree
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call andrzewo_slot,isin
	cmp0
	je l10689
	call fxmagical,play
	push "tree"
	cthis removefrompck
	cthis set_mg_finished
	push 700
	push "mg24_drzwi_sypialnia5"
	call andrzewo,anfadein
	push "e1_mg24_drzwi_sypialnia_tree_in"
	call clsave,bset
	call advmouse,setstd
	push "andrzewo_slot"
	call butgame,removebut
	jmp l10688
l10689:
	cthis item_gotopck
l10688:
	end method
	method mg24_drzwi_sypialnia5
	call andrzewo_slot,hide
	call fxopenhead,play
	push 500
	push "timfinito"
	call andoor_open,anfadein
	end method
	method mend
	push "ad24_schody"
	push "gamead24_schody0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "ma_tree"
	call clsave,bis
	neg
	cmp0
	je l10691
	push "anpopexit"
	cthis showhint
	jmp l10690
l10691:
	push "andrzewo_slot"
	cthis showhint
	push "tree"
	cthis showhintitem
l10690:
	end method
	end game

	game mg24_drzwi_lazienka
	parent Banshee
	method init
	push "mg24_drzwi_lazienka"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "aniolek.pyzH 3"
	push "open.pyzH 5"
	push "gwizdek.pyzH 6"
	push "muzyka.pyzH 7"
	push "ramka.pyz 22"
	push "popexit.pyz 23"
	cthis imgs=
	push A
	push "bgrwiatrN 10"
	push "fletN 20"
	push "noc2N 20"
	push "openhead"
	push "flet3"
	cthis sfxs=
	cthis butpopexit
	cthis butpopexitisinramka
	push "onfinish"
	push "mg24_drzwi_lazienka0"
	call anmuzyka,addmethod
	push "e1_mg24_drzwi_lazienka_gwizdek_in"
	call clsave,bis
	cmp0
	je l10693
	call drzewo,show
	jmp l10692
l10693:
	call ananiolek,mg24_drzwi_lazienka2
l10692:
	push "e1_mg24_drzwi_lazienka_after_intro"
	call clsave,bis
	neg
	cmp0
	je l10702
	push "snd_intro"
	push "kinnat_c3d3_13a"
	cthis newsndfree
	push "onfinish"
	push "mg24_drzwi_lazienka7"
	call snd_intro,addmethod
	push "snd_intro"
	cthis cbplay
	push "e1_mg24_drzwi_lazienka_after_intro"
	call clsave,bset
l10702:
	push "e1_mg24_drzwi_lazienka_gwizdek_in"
	call clsave,bis
	neg
	cmp0
	je l10704
	push "snd_gwizdek"
	push "kinnat_c3d3_13d"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_gwizdek,addmethod
l10704:
	cthis stdstart
	end method
	method mg24_drzwi_lazienka0
	call advmouse,setstd
	cthis hide
	cthis advsetstdstate
	call fxopenhead,play
	push 1200
	push "mg24_drzwi_lazienka1"
	call anopen,anfadein
	end method
	method mg24_drzwi_lazienka1
	push "timend"
	push 800
	push "timfinito"
	cthis timplay
	end method
	method mg24_drzwi_lazienka2
	push "isbutin"
	push "mg24_drzwi_lazienka3"
	cthis addmethod
	push "butmoveon"
	push "mg24_drzwi_lazienka4"
	cthis addmethod
	push "butmoveoff"
	push "mg24_drzwi_lazienka5"
	cthis addmethod
	push "butclick"
	push "mg24_drzwi_lazienka6"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg24_drzwi_lazienka3
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	end method
	method mg24_drzwi_lazienka4
	push "e1_mg24_drzwi_lazienka_gwizdek_in"
	call clsave,bis
	neg
	cmp0
	je l10695
	push "use"
	call advmouse,set
	jmp l10694
l10695:
	call advmouse,setstd
l10694:
	end method
	method mg24_drzwi_lazienka5
	call advmouse,setstd
	end method
	method mg24_drzwi_lazienka6
	cthis advstdstate
	neg
	cmp0
	jne l10698
	push "e1_mg24_drzwi_lazienka_gwizdek_in"
	call clsave,bis
	jmp l10699
l10697:
	push 0
	jmp l10699
l10698:
	push 1
l10699:
	cmp0
	je l10700
	ret
l10700:
	push "snd_gwizdek"
	cthis cbplay
	end method
	method mg24_drzwi_lazienka7
	cthis advsetstdstate
	end method
	method USE_gwizdek
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call ananiolek,isin
	cmp0
	je l10706
	call fxflet3,play
	push "gwizdek"
	cthis removefrompck
	cthis set_mg_finished
	push 500
	push "mg24_drzwi_lazienka8"
	call angwizdek,anfadein
	push "e1_mg24_drzwi_lazienka_gwizdek_in"
	call clsave,bset
	call advmouse,setstd
	jmp l10705
l10706:
	cthis item_gotopck
l10705:
	end method
	method mg24_drzwi_lazienka8
	push 0
	call anmuzyka,play
	end method
	method mend
	push "ad24_schody"
	push "gamead24_schody0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "ma_gwizdek"
	call clsave,bis
	cmp0
	je l10708
	push "ananiolek"
	cthis showhint
	push "gwizdek"
	cthis showhintitem
	jmp l10707
l10708:
	push "anpopexit"
	cthis showhint
l10707:
	end method
	end game

	game mg25_lustro
	parent Banshee
	method init
	push "mg25_lustro"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "lustro_cale_first.pyzH 4"
	push "lips.pyzH 7"
	push "mirror_part_1.pyzH 8"
	push "mirror_part_2.pyzH 9"
	push "mirror_part_3.pyzH 10"
	push "mirror_part_4.pyzH 11"
	push "mirror_part_5.pyzH 12"
	push "lustro_cale.pyzH  13"
	push "kinnat.pyzH 14"
	push "lustro_duch.pyzH 15"
	push "barghest.pyzH 17"
	push "arat.pyzH 18"
	push "ramka.pyz 22"
	push "popexit.pyz 23"
	cthis imgs=
	cthis butpopexit
	cthis butpopexitisinramka
	push A
	push "bgrwiatrN 20"
	push "noc2N 20"
	push "magical"
	push "monsterskeleton 60"
	push "a6"
	push "szybka 80"
	push "podswietl"
	cthis sfxs=
	push "e1_mg25_lustro_anmirror_part_1_inserted"
	call clsave,bis
	neg
	cmp0
	je l10710
	call anmirror_part_1,mg25_lustro0
	jmp l10709
l10710:
	push "e1_mg25_lustro_szklo_scalone"
	call clsave,bis
	neg
	cmp0
	je l10725
	call anmirror_part_1,show
l10725:
l10709:
	push "e1_mg25_lustro_anmirror_part_2_inserted"
	call clsave,bis
	neg
	cmp0
	je l10727
	call anmirror_part_2,mg25_lustro5
	jmp l10726
l10727:
	push "e1_mg25_lustro_szklo_scalone"
	call clsave,bis
	neg
	cmp0
	je l10742
	call anmirror_part_2,show
l10742:
l10726:
	push "e1_mg25_lustro_anmirror_part_3_inserted"
	call clsave,bis
	neg
	cmp0
	je l10744
	call anmirror_part_3,mg25_lustro10
	jmp l10743
l10744:
	push "e1_mg25_lustro_szklo_scalone"
	call clsave,bis
	neg
	cmp0
	je l10759
	call anmirror_part_3,show
l10759:
l10743:
	push "e1_mg25_lustro_anmirror_part_4_inserted"
	call clsave,bis
	neg
	cmp0
	je l10761
	call anmirror_part_4,mg25_lustro15
	jmp l10760
l10761:
	push "e1_mg25_lustro_szklo_scalone"
	call clsave,bis
	neg
	cmp0
	je l10776
	call anmirror_part_4,show
l10776:
l10760:
	push "e1_mg25_lustro_anmirror_part_5_inserted"
	call clsave,bis
	neg
	cmp0
	je l10778
	call anmirror_part_5,mg25_lustro20
	jmp l10777
l10778:
	push "e1_mg25_lustro_szklo_scalone"
	call clsave,bis
	neg
	cmp0
	je l10793
	call anmirror_part_5,show
l10793:
l10777:
	push "e1_mg25_lustro_after_intro"
	call clsave,bis
	neg
	cmp0
	je l10795
	call anlustro_cale_first,show
	call ankinnat,show
	push "snd_intro"
	push "lustro_c3d3_12"
	cthis newsndfree
	call fxmagical,play
	push "onfinish"
	push "mg25_lustro25"
	call snd_intro,addmethod
	push 1000
	push "mg25_lustro26"
	call anlustro_duch,anfadein
	push "snd_intro2"
	push "kinnat_c3d3_12a"
	cthis newsndfree
	push "onfinish"
	push "mg25_lustro28"
	call snd_intro2,addmethod
l10795:
	push "snd_final"
	push "kinnat_c3d3_12b"
	cthis newsndfree
	push "onfinish"
	push "mg25_lustro29"
	call snd_final,addmethod
	push "onfinish"
	push "mg25_lustro30"
	call anbarghest,addmethod
	push "e1_mg25_lustro_szklo_scalone"
	call clsave,bis
	cmp0
	je l10797
	call anlustro_cale,show
	call ankinnat,show
l10797:
	push "snd_mirror_click"
	push "kinnat_c3d3_12c"
	cthis newsndfree
	push "onfinish"
	push "mg25_lustro32"
	call snd_mirror_click,addmethod
	cthis stdstart
	end method
	method mg25_lustro0
	push "isbutin"
	push "mg25_lustro1"
	cthis addmethod
	push "butmoveon"
	push "mg25_lustro2"
	cthis addmethod
	push "butmoveoff"
	push "mg25_lustro3"
	cthis addmethod
	push "butclick"
	push "mg25_lustro4"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg25_lustro1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	end method
	method mg25_lustro2
	push "e1_mg25_lustro_anmirror_part_1_inserted"
	call clsave,bis
	cmp0
	jne l10713
	push "e1_mg25_lustro_after_intro"
	call clsave,bis
	neg
	jmp l10714
l10712:
	push 0
	jmp l10714
l10713:
	push 1
l10714:
	cmp0
	je l10715
	ret
l10715:
	push "use"
	call advmouse,set
	end method
	method mg25_lustro3
	call advmouse,setstd
	end method
	method mg25_lustro4
	push "e1_mg25_lustro_after_intro"
	call clsave,bis
	neg
	cmp0
	jne l10718
	push "e1_mg25_lustro_anmirror_part_1_inserted"
	call clsave,bis
	cmp0
	jne l10718
	call guimov,moving
	cmp0
	je l10719
	call guimov,getmover
	push "anitem_mirror_part_1"
	cmpje
	jmp l10721
l10719:
	push 0
	jmp l10721
l10720:
	push 1
l10721:
	jmp l10722
l10717:
	push 0
	jmp l10722
l10718:
	push 1
l10722:
	cmp0
	je l10723
	ret
l10723:
	push "snd_mirror_click"
	cthis cbplay
	end method
	method mg25_lustro5
	push "isbutin"
	push "mg25_lustro6"
	cthis addmethod
	push "butmoveon"
	push "mg25_lustro7"
	cthis addmethod
	push "butmoveoff"
	push "mg25_lustro8"
	cthis addmethod
	push "butclick"
	push "mg25_lustro9"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg25_lustro6
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	end method
	method mg25_lustro7
	push "e1_mg25_lustro_anmirror_part_2_inserted"
	call clsave,bis
	cmp0
	jne l10730
	push "e1_mg25_lustro_after_intro"
	call clsave,bis
	neg
	jmp l10731
l10729:
	push 0
	jmp l10731
l10730:
	push 1
l10731:
	cmp0
	je l10732
	ret
l10732:
	push "use"
	call advmouse,set
	end method
	method mg25_lustro8
	call advmouse,setstd
	end method
	method mg25_lustro9
	push "e1_mg25_lustro_after_intro"
	call clsave,bis
	neg
	cmp0
	jne l10735
	push "e1_mg25_lustro_anmirror_part_2_inserted"
	call clsave,bis
	cmp0
	jne l10735
	call guimov,moving
	cmp0
	je l10736
	call guimov,getmover
	push "anitem_mirror_part_2"
	cmpje
	jmp l10738
l10736:
	push 0
	jmp l10738
l10737:
	push 1
l10738:
	jmp l10739
l10734:
	push 0
	jmp l10739
l10735:
	push 1
l10739:
	cmp0
	je l10740
	ret
l10740:
	push "snd_mirror_click"
	cthis cbplay
	end method
	method mg25_lustro10
	push "isbutin"
	push "mg25_lustro11"
	cthis addmethod
	push "butmoveon"
	push "mg25_lustro12"
	cthis addmethod
	push "butmoveoff"
	push "mg25_lustro13"
	cthis addmethod
	push "butclick"
	push "mg25_lustro14"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg25_lustro11
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	end method
	method mg25_lustro12
	push "e1_mg25_lustro_anmirror_part_3_inserted"
	call clsave,bis
	cmp0
	jne l10747
	push "e1_mg25_lustro_after_intro"
	call clsave,bis
	neg
	jmp l10748
l10746:
	push 0
	jmp l10748
l10747:
	push 1
l10748:
	cmp0
	je l10749
	ret
l10749:
	push "use"
	call advmouse,set
	end method
	method mg25_lustro13
	call advmouse,setstd
	end method
	method mg25_lustro14
	push "e1_mg25_lustro_after_intro"
	call clsave,bis
	neg
	cmp0
	jne l10752
	push "e1_mg25_lustro_anmirror_part_3_inserted"
	call clsave,bis
	cmp0
	jne l10752
	call guimov,moving
	cmp0
	je l10753
	call guimov,getmover
	push "anitem_mirror_part_3"
	cmpje
	jmp l10755
l10753:
	push 0
	jmp l10755
l10754:
	push 1
l10755:
	jmp l10756
l10751:
	push 0
	jmp l10756
l10752:
	push 1
l10756:
	cmp0
	je l10757
	ret
l10757:
	push "snd_mirror_click"
	cthis cbplay
	end method
	method mg25_lustro15
	push "isbutin"
	push "mg25_lustro16"
	cthis addmethod
	push "butmoveon"
	push "mg25_lustro17"
	cthis addmethod
	push "butmoveoff"
	push "mg25_lustro18"
	cthis addmethod
	push "butclick"
	push "mg25_lustro19"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg25_lustro16
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	end method
	method mg25_lustro17
	push "e1_mg25_lustro_anmirror_part_4_inserted"
	call clsave,bis
	cmp0
	jne l10764
	push "e1_mg25_lustro_after_intro"
	call clsave,bis
	neg
	jmp l10765
l10763:
	push 0
	jmp l10765
l10764:
	push 1
l10765:
	cmp0
	je l10766
	ret
l10766:
	push "use"
	call advmouse,set
	end method
	method mg25_lustro18
	call advmouse,setstd
	end method
	method mg25_lustro19
	push "e1_mg25_lustro_after_intro"
	call clsave,bis
	neg
	cmp0
	jne l10769
	push "e1_mg25_lustro_anmirror_part_4_inserted"
	call clsave,bis
	cmp0
	jne l10769
	call guimov,moving
	cmp0
	je l10770
	call guimov,getmover
	push "anitem_mirror_part_4"
	cmpje
	jmp l10772
l10770:
	push 0
	jmp l10772
l10771:
	push 1
l10772:
	jmp l10773
l10768:
	push 0
	jmp l10773
l10769:
	push 1
l10773:
	cmp0
	je l10774
	ret
l10774:
	push "snd_mirror_click"
	cthis cbplay
	end method
	method mg25_lustro20
	push "isbutin"
	push "mg25_lustro21"
	cthis addmethod
	push "butmoveon"
	push "mg25_lustro22"
	cthis addmethod
	push "butmoveoff"
	push "mg25_lustro23"
	cthis addmethod
	push "butclick"
	push "mg25_lustro24"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg25_lustro21
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	end method
	method mg25_lustro22
	push "e1_mg25_lustro_anmirror_part_5_inserted"
	call clsave,bis
	cmp0
	jne l10781
	push "e1_mg25_lustro_after_intro"
	call clsave,bis
	neg
	jmp l10782
l10780:
	push 0
	jmp l10782
l10781:
	push 1
l10782:
	cmp0
	je l10783
	ret
l10783:
	push "use"
	call advmouse,set
	end method
	method mg25_lustro23
	call advmouse,setstd
	end method
	method mg25_lustro24
	push "e1_mg25_lustro_after_intro"
	call clsave,bis
	neg
	cmp0
	jne l10786
	push "e1_mg25_lustro_anmirror_part_5_inserted"
	call clsave,bis
	cmp0
	jne l10786
	call guimov,moving
	cmp0
	je l10787
	call guimov,getmover
	push "anitem_mirror_part_5"
	cmpje
	jmp l10789
l10787:
	push 0
	jmp l10789
l10788:
	push 1
l10789:
	jmp l10790
l10785:
	push 0
	jmp l10790
l10786:
	push 1
l10790:
	cmp0
	je l10791
	ret
l10791:
	push "snd_mirror_click"
	cthis cbplay
	end method
	method mg25_lustro25
	push 0
	call anlips,stop
	call anlips,hide
	call ankinnat,hide
	call anlustro_cale_first,hide
	push 0
	call anbarghest,play
	call fxmonsterskeleton,play
	push "state_talk"
	cthis advsetstate
	end method
	method mg25_lustro26
	push 0
	call anlips,play
	push "timsnd_intro"
	push 1500
	push "mg25_lustro27"
	cthis timplay
	push "state_talk"
	cthis advsetstate
	end method
	method mg25_lustro27
	push "snd_intro"
	cthis cbplay
	end method
	method mg25_lustro28
	cthis advsetstdstate
	push "e1_mg25_lustro_after_intro"
	call clsave,bset
	call butgame,refresh
	end method
	method mg25_lustro29
	cthis advsetstdstate
	push 1500
	push "null"
	call anarat,anfadeout
	cthis timfinito
	end method
	method mg25_lustro30
	call anbarghest,hide
	call anlustro_cale,hide
	call anlustro_duch,hide
	push "timsnd_intro2"
	push 2000
	push "mg25_lustro31"
	cthis timplay
	end method
	method mg25_lustro31
	push "snd_intro2"
	cthis cbplay
	end method
	method mg25_lustro32
	cthis advsetstdstate
	end method
	method mouse_lclick
	push sgmstate
	push "state_talk"
	cmpje
	cmp0
	je l10799
	push 1
	cthis cactsndstop
l10799:
	end method
	method USE_mirror_part_1
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call anmirror_part_1,isin
	cmp0
	je l10801
	push "mirror_part_1"
	cthis removefrompck
	call fxszybka,play
	push 500
	push "null"
	call anmirror_part_1,anfadein
	push "e1_mg25_lustro_anmirror_part_1_inserted"
	call clsave,bset
	call advmouse,setstd
	cthis check_all_inserted
	jmp l10800
l10801:
	cthis item_gotopck
l10800:
	end method
	method USE_mirror_part_2
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call anmirror_part_2,isin
	cmp0
	je l10803
	push "mirror_part_2"
	cthis removefrompck
	call fxszybka,play
	push 500
	push "null"
	call anmirror_part_2,anfadein
	push "e1_mg25_lustro_anmirror_part_2_inserted"
	call clsave,bset
	call advmouse,setstd
	cthis check_all_inserted
	jmp l10802
l10803:
	cthis item_gotopck
l10802:
	end method
	method USE_mirror_part_3
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call anmirror_part_3,isin
	cmp0
	je l10805
	push "mirror_part_3"
	cthis removefrompck
	call fxszybka,play
	push 500
	push "null"
	call anmirror_part_3,anfadein
	push "e1_mg25_lustro_anmirror_part_3_inserted"
	call clsave,bset
	call advmouse,setstd
	cthis check_all_inserted
	jmp l10804
l10805:
	cthis item_gotopck
l10804:
	end method
	method USE_mirror_part_4
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call anmirror_part_4,isin
	cmp0
	je l10807
	push "mirror_part_4"
	cthis removefrompck
	call fxszybka,play
	push 500
	push "null"
	call anmirror_part_4,anfadein
	push "e1_mg25_lustro_anmirror_part_4_inserted"
	call clsave,bset
	call advmouse,setstd
	cthis check_all_inserted
	jmp l10806
l10807:
	cthis item_gotopck
l10806:
	end method
	method USE_mirror_part_5
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call anmirror_part_5,isin
	cmp0
	je l10809
	push "mirror_part_5"
	cthis removefrompck
	call fxszybka,play
	push 500
	push "null"
	call anmirror_part_5,anfadein
	push "e1_mg25_lustro_anmirror_part_5_inserted"
	call clsave,bset
	call advmouse,setstd
	cthis check_all_inserted
	jmp l10808
l10809:
	cthis item_gotopck
l10808:
	end method
	method check_all_inserted
	push "e1_mg25_lustro_anmirror_part_1_inserted"
	call clsave,bis
	neg
	cmp0
	je l10811
	ret
	jmp l10810
l10811:
	push "e1_mg25_lustro_anmirror_part_2_inserted"
	call clsave,bis
	neg
	cmp0
	je l10813
	ret
	jmp l10812
l10813:
	push "e1_mg25_lustro_anmirror_part_3_inserted"
	call clsave,bis
	neg
	cmp0
	je l10815
	ret
	jmp l10814
l10815:
	push "e1_mg25_lustro_anmirror_part_4_inserted"
	call clsave,bis
	neg
	cmp0
	je l10817
	ret
	jmp l10816
l10817:
	push "e1_mg25_lustro_anmirror_part_5_inserted"
	call clsave,bis
	neg
	cmp0
	je l10819
	ret
	jmp l10818
l10819:
	push 800
	push "null"
	call anlustro_cale,anfadein
	call fxpodswietl,play
	cthis set_mg_finished
	push 800
	push "mg25_lustro33"
	call anlustro_duch,anfadein
	push "e1_mg25_lustro_szklo_scalone"
	call clsave,bset
l10818:
l10816:
l10814:
l10812:
l10810:
	end method
	method mg25_lustro33
	push 1500
	push "mg25_lustro34"
	call anarat,anfadein
	end method
	method mg25_lustro34
	push 1500
	push "mg25_lustro35"
	call ankinnat,anfadein
	end method
	method mg25_lustro35
	push 1000
	push "mg25_lustro36"
	call anlustro_duch,anfadeout
	end method
	method mg25_lustro36
	push "snd_final"
	cthis cbplay
	end method
	method mend
	push "ad25a_lustro"
	push "gamead25a_lustro0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "ma_mirror_part_1"
	call clsave,bis
	cmp0
	je l10821
	push "mirror_part_1"
	cthis showhintitem
	push "anmirror_part_1"
	cthis showhint
	jmp l10820
l10821:
	push "ma_mirror_part_2"
	call clsave,bis
	cmp0
	je l10823
	push "mirror_part_2"
	cthis showhintitem
	push "anmirror_part_2"
	cthis showhint
	jmp l10822
l10823:
	push "ma_mirror_part_3"
	call clsave,bis
	cmp0
	je l10825
	push "mirror_part_3"
	cthis showhintitem
	push "anmirror_part_3"
	cthis showhint
	jmp l10824
l10825:
	push "ma_mirror_part_4"
	call clsave,bis
	cmp0
	je l10827
	push "mirror_part_4"
	cthis showhintitem
	push "anmirror_part_4"
	cthis showhint
	jmp l10826
l10827:
	push "ma_mirror_part_5"
	call clsave,bis
	cmp0
	je l10829
	push "mirror_part_5"
	cthis showhintitem
	push "anmirror_part_5"
	cthis showhint
	jmp l10828
l10829:
	push "anpopexit"
	cthis showhint
l10828:
l10826:
l10824:
l10822:
l10820:
	end method
	end game

	game mg27zloty_plyn
	parent Banshee
	method init
	push "mg27_zloty_plyn"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "nalewanie.pyz 3"
	push "zloty_plynH.pyz 4"
	push "gold.pyz 4"
	push "ramka.pyz 22"
	push "popexit.pyz 23"
	cthis imgs=
	push A
	push "bgrwiatrN 30"
	push "las_wodaN 20"
	push "skrzypienie3N 20"
	push "openhead"
	push "magic1 15"
	push "wlewa1"
	cthis sfxs=
	cthis butpopexit
	cthis butpopexitisinramka
	push "anzloty_plyn"
	cthis setasitemtopck
	push "noitemsnd"
	push "kinnat_c3d3_14"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call noitemsnd,addmethod
	push 1
	call angold,setdrawmode
	push 0
	call angold,play
	call annalewanie,mg27zloty_plyn0
	cthis stdstart
	end method
	method mg27zloty_plyn0
	push "isbutin"
	push "mg27zloty_plyn1"
	cthis addmethod
	push "butmoveon"
	push "mg27zloty_plyn2"
	cthis addmethod
	push "butmoveoff"
	push "mg27zloty_plyn3"
	cthis addmethod
	push "butclick"
	push "mg27zloty_plyn4"
	cthis addmethod
	push "onfinish"
	push "mg27zloty_plyn5"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg27zloty_plyn1
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 1
	cthis isin
	end method
	method mg27zloty_plyn2
	push "e1_mg27_chochla_used"
	call clsave,bis
	neg
	cmp0
	je l10831
	push "use"
	call advmouse,set
	jmp l10830
l10831:
	call advmouse,setstd
l10830:
	end method
	method mg27zloty_plyn3
	call advmouse,setstd
	end method
	method mg27zloty_plyn4
	cthis advstdstate
	neg
	cmp0
	je l10833
	ret
l10833:
	push "noitemsnd"
	cthis cbplay
	end method
	method mg27zloty_plyn5
	push "zloty_plyn"
	push "anzloty_plyn"
	cthis popitem_gotocenterobj
	end method
	method USE_chochla
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call annalewanie,isin
	cmp0
	je l10835
	call advmouse,setstd
	push "annalewanie"
	call butgame,removebut
	push 300
	push "mg27zloty_plyn6"
	call angold,anfadeout
	push "chochla"
	cthis removefrompck
	push "zloty_plyn"
	cthis saveitemtopck
	push 0
	call annalewanie,play
	push "e1_mg27_chochla_used"
	call clsave,bset
	cthis set_mg_finished
	jmp l10834
l10835:
	cthis item_gotopck
l10834:
	end method
	method mg27zloty_plyn6
	push 1
	call angold,stop
	end method
	method anzloty_plyn_INPCK
	push "zloty_plyn"
	cthis addtopck
	cthis timfinito
	end method
	method mend
	push "ad27_lazienka"
	push "gamead27_lazienka0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "ma_chochla"
	call clsave,bis
	cmp0
	je l10837
	push "annalewanie"
	cthis showhint
	push "chochla"
	cthis showhintitem
	jmp l10836
l10837:
	push "anpopexit"
	cthis showhint
l10836:
	end method
	end game

	game mg28_luneta
	parent Banshee
	method init
	push "mg28_luneta"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "luneta_base.pyz 3"
	push "focus_raczka.pyz 4"
	push "luneta_nad.pyz 5"
	push "obiektyw.pyzH 6"
	push "pokretlo_zoom.pyzH 7"
	push "zoom.pyzH 8"
	push "focus.pyzH 9"
	push "blik.pyzH 10"
	push "fragment_3.pyzH 10"
	push "przepis.pyzH 12"
	push "water.pyzH 13"
	push "fluid.pyzH 14"
	push "seeds.pyzH 15"
	push "frog_leg.pyzH 16"
	push "arat.pyzH 17"
	push "arat_glow.pyzH 18"
	push "ron.pyzH 19"
	push "ron_glow.pyzH 20"
	push "ramka.pyz 22"
	push "popexit.pyz 23"
	cthis imgs=
	push A
	push " bgrwiatr2N 30"
	push "las_nocN 10"
	push "przekladnia1"
	push "szufladaklik"
	cthis sfxs=
	cthis butpopexit
	cthis butpopexitisinramka
	new int,focus_raczka_move_backward
	push 1
	pop focus_raczka_move_backward
	new int,act_focus
	push 20
	pop act_focus
	new int,act_zoom
	push 0
	pop act_zoom
	new int,zoom_raczka_move_forward
	push 1
	pop zoom_raczka_move_forward
	push "mg28"
	cthis askopis
	call anaskopis,hide
	call anpopexit,getcx
	call anaskopis,getw
	pop $b
	popax
	add $a,$b
	call anpopexit,getcy
	call anaskopis,geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call anaskopis,ansetbpos
	cthis check_all_inserted
	neg
	cmp0
	je l10839
	push "snd_obiektyw"
	push "kinnat_c3d3_18"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_obiektyw,addmethod
	jmp l10838
l10839:
	call guihint,switchtoskip
	call anaskopis,show
l10838:
	push "e1_mg28_zoom_set"
	call clsave,bis
	neg
	cmp0
	je l10841
	push "snd_focus"
	push "kinnat_c3d3_20"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_focus,addmethod
	push "snd_almost_zoom"
	push "kinnat_c3d3_19"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_almost_zoom,addmethod
	jmp l10840
l10841:
	call anfocus,show
l10840:
	push "e1_mg28_focus_set"
	call clsave,bis
	neg
	cmp0
	je l10843
	push "snd_zoom_final"
	push "kinnat_c3d3_21"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_zoom_final,addmethod
l10843:
	push "snd_braki"
	push "kinnat_c3d3_17a"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_braki,addmethod
	push "tim_check_focus"
	push 500
	push "mg28_luneta0"
	cthis timer=
	push "tim_check_almost_zoom"
	push 500
	push "mg28_luneta1"
	cthis timer=
	push "tim_check_zoom"
	push 500
	push "mg28_luneta2"
	cthis timer=
	call anobiektyw,mg28_luneta3
	call anprzepis,mg28_luneta8
	call anblik,mg28_luneta13
	call anfocus_raczka,mg28_luneta15
	call anpokretlo_zoom,mg28_luneta20
	call anfragment_3,mg28_luneta25
	call anblik,mg28_luneta30
	push "e1_mg28_luneta_obiektyw_used"
	call clsave,bis
	cmp0
	je l10914
	call anobiektyw,show
l10914:
	push "e1_mg28_luneta_pokretlo_zoom_used"
	call clsave,bis
	cmp0
	je l10916
	call anpokretlo_zoom,show
l10916:
	push "e1_mg28_luneta_fragment_3_used"
	call clsave,bis
	cmp0
	je l10918
	call anfragment_3,show
	push "e1_mg28_luneta_obiektyw_used"
	call clsave,bis
	cmp0
	je l10920
	call anzoom,show
l10920:
l10918:
	cthis stdstart
	end method
	method mg28_luneta0
	push act_focus
	push 9
	cmpje
	cmp0
	je l10845
	push "e1_mg28_focus_set"
	call clsave,bset
	push "blik"
	cthis advsetstate
	push 0
	call anblik,play
	cthis set_mg_finished
	push "snd_zoom_final"
	cthis cbplay
	cthis show_przepis
l10845:
	end method
	method mg28_luneta1
	push act_zoom
	push 14
	cmpjl
	cmp0
	je l10847
	push "snd_almost_zoom"
	cthis cbplay
l10847:
	end method
	method mg28_luneta2
	push act_zoom
	push 14
	cmpje
	cmp0
	je l10849
	push "e1_mg28_zoom_set"
	call clsave,bset
	push 1500
	push "null"
	call anfocus,anfadein
	push "snd_focus"
	cthis cbplay
	call advmouse,setstd
l10849:
	end method
	method mg28_luneta3
	push "isbutin"
	push "mg28_luneta4"
	cthis addmethod
	push "butmoveon"
	push "mg28_luneta5"
	cthis addmethod
	push "butmoveoff"
	push "mg28_luneta6"
	cthis addmethod
	push "butclick"
	push "mg28_luneta7"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg28_luneta4
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 1
	cthis isin
	end method
	method mg28_luneta5
	push "e1_mg28_luneta_obiektyw_used"
	call clsave,bis
	neg
	cmp0
	je l10851
	push "use"
	call advmouse,set
	jmp l10850
l10851:
	call advmouse,setstd
l10850:
	end method
	method mg28_luneta6
	call advmouse,setstd
	end method
	method mg28_luneta7
	cthis advstdstate
	neg
	cmp0
	jne l10854
	push "e1_mg28_luneta_obiektyw_used"
	call clsave,bis
	jmp l10855
l10853:
	push 0
	jmp l10855
l10854:
	push 1
l10855:
	cmp0
	je l10856
	ret
l10856:
	push "snd_braki"
	cthis cbplay
	end method
	method mg28_luneta8
	push "isbutin"
	push "mg28_luneta9"
	cthis addmethod
	push "butmoveon"
	push "mg28_luneta10"
	cthis addmethod
	push "butmoveoff"
	push "mg28_luneta11"
	cthis addmethod
	push "butclick"
	push "mg28_luneta12"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg28_luneta9
	localint $1
	localint $2
	pop $2
	pop $1
	cthis advstdstate
	cmp0
	je l10857
	push $1
	push $2
	push 1
	push 1
	cthis isin
	jmp l10859
l10857:
	push 0
	jmp l10859
l10858:
	push 1
l10859:
	end method
	method mg28_luneta10
	cthis is_mg_finished
	cmp0
	je l10861
	push "take"
	call advmouse,set
	jmp l10860
l10861:
	call advmouse,setstd
l10860:
	end method
	method mg28_luneta11
	call advmouse,setstd
	end method
	method mg28_luneta12
	cthis hide_przepis
	cthis timfinito
	end method
	method mg28_luneta13
	push "onfinish"
	push "mg28_luneta14"
	cthis addmethod
	end method
	method mg28_luneta14
	cthis advsetstdstate
	cthis hide
	end method
	method mg28_luneta15
	push 1
	popax
	sub 0,$a
	push 19
	cthis setframe
	push 1
	popax
	sub 0,$a
	push 19
	call anfocus,setframe
	push "isbutin"
	push "mg28_luneta16"
	cthis addmethod
	push "butmoveon"
	push "mg28_luneta17"
	cthis addmethod
	push "butmoveoff"
	push "mg28_luneta18"
	cthis addmethod
	push "butclick"
	push "mg28_luneta19"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg28_luneta16
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	cmp0
	je l10862
	push "e1_mg28_zoom_set"
	call clsave,bis
	jmp l10864
l10862:
	push 0
	jmp l10864
l10863:
	push 1
l10864:
	end method
	method mg28_luneta17
	push "e1_mg28_focus_set"
	call clsave,bis
	neg
	cmp0
	je l10866
	push "take"
	call advmouse,set
l10866:
	end method
	method mg28_luneta18
	call advmouse,setstd
	end method
	method mg28_luneta19
	cthis advstdstate
	neg
	cmp0
	jne l10869
	push "e1_mg28_focus_set"
	call clsave,bis
	cmp0
	jne l10869
	cthis check_all_inserted
	neg
	cmp0
	jne l10869
	push "e1_mg28_zoom_set"
	call clsave,bis
	neg
	jmp l10870
l10868:
	push 0
	jmp l10870
l10869:
	push 1
l10870:
	cmp0
	je l10871
	ret
l10871:
	push focus_raczka_move_backward
	cmp0
	je l10873
	sub act_focus,1
	pop act_focus
	push act_focus
	push 0
	cmpjle
	cmp0
	je l10875
	push 0
	pop act_focus
	push 0
	pop focus_raczka_move_backward
l10875:
	jmp l10872
l10873:
	add act_focus,1
	pop act_focus
	push act_focus
	push 19
	cmpjae
	cmp0
	je l10877
	push 19
	pop act_focus
	push 1
	pop focus_raczka_move_backward
l10877:
l10872:
	push act_focus
	push 9
	cmpje
	cmp0
	je l10879
	call tim_check_focus,play
l10879:
	push 1
	popax
	sub 0,$a
	push act_focus
	cthis setframe
	push 1
	popax
	sub 0,$a
	push act_focus
	call anfocus,setframe
	call fxprzekladnia1,play
	end method
	method mg28_luneta20
	push 1
	popax
	sub 0,$a
	push act_zoom
	cthis setframe
	push 1
	popax
	sub 0,$a
	push act_zoom
	call anzoom,setframe
	push "isbutin"
	push "mg28_luneta21"
	cthis addmethod
	push "butmoveon"
	push "mg28_luneta22"
	cthis addmethod
	push "butmoveoff"
	push "mg28_luneta23"
	cthis addmethod
	push "butclick"
	push "mg28_luneta24"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg28_luneta21
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	cmp0
	je l10880
	push "e1_mg28_zoom_set"
	call clsave,bis
	neg
	jmp l10882
l10880:
	push 0
	jmp l10882
l10881:
	push 1
l10882:
	end method
	method mg28_luneta22
	push "e1_mg28_zoom_set"
	call clsave,bis
	cmp0
	je l10884
	call advmouse,setstd
	jmp l10883
l10884:
	push "e1_mg28_luneta_pokretlo_zoom_used"
	call clsave,bis
	cmp0
	je l10886
	push "e1_mg28_zoom_set"
	call clsave,bis
	neg
	cmp0
	je l10888
	push "take"
	call advmouse,set
	jmp l10887
l10888:
	call advmouse,setstd
l10887:
	jmp l10885
l10886:
	push "use"
	call advmouse,set
l10885:
l10883:
	end method
	method mg28_luneta23
	call advmouse,setstd
	end method
	method mg28_luneta24
	push "e1_mg28_luneta_pokretlo_zoom_used"
	call clsave,bis
	neg
	cmp0
	je l10890
	push "snd_braki"
	cthis cbplay
	ret
l10890:
	cthis advstdstate
	neg
	cmp0
	jne l10893
	push "e1_mg28_zoom_set"
	call clsave,bis
	cmp0
	jne l10893
	cthis check_all_inserted
	neg
	jmp l10894
l10892:
	push 0
	jmp l10894
l10893:
	push 1
l10894:
	cmp0
	je l10895
	ret
l10895:
	push zoom_raczka_move_forward
	cmp0
	je l10897
	add act_zoom,1
	pop act_zoom
	push act_zoom
	push 14
	cmpjae
	cmp0
	je l10899
	push 14
	pop act_zoom
	push 0
	pop zoom_raczka_move_forward
l10899:
	jmp l10896
l10897:
	sub act_zoom,1
	pop act_zoom
	push act_zoom
	push 0
	cmpjle
	cmp0
	je l10901
	push 0
	pop act_zoom
	push 1
	pop zoom_raczka_move_forward
l10901:
l10896:
	push act_zoom
	push 14
	cmpjl
	cmp0
	je l10903
	call tim_check_almost_zoom,play
	jmp l10902
l10903:
	push act_zoom
	push 14
	cmpje
	cmp0
	je l10905
	call tim_check_zoom,play
l10905:
l10902:
	push 1
	popax
	sub 0,$a
	push act_zoom
	cthis setframe
	push 1
	popax
	sub 0,$a
	push act_zoom
	call anzoom,setframe
	call fxprzekladnia1,play
	end method
	method mg28_luneta25
	push "isbutin"
	push "mg28_luneta26"
	cthis addmethod
	push "butmoveon"
	push "mg28_luneta27"
	cthis addmethod
	push "butmoveoff"
	push "mg28_luneta28"
	cthis addmethod
	push "butclick"
	push "mg28_luneta29"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg28_luneta26
	localint $1
	localint $2
	pop $2
	pop $1
	cthis advstdstate
	cmp0
	je l10906
	push $1
	push $2
	push 0
	push 1
	cthis isin
	jmp l10908
l10906:
	push 0
	jmp l10908
l10907:
	push 1
l10908:
	end method
	method mg28_luneta27
	push "e1_mg28_luneta_fragment_3_used"
	call clsave,bis
	neg
	cmp0
	je l10910
	push "use"
	call advmouse,set
	jmp l10909
l10910:
	call advmouse,setstd
l10909:
	end method
	method mg28_luneta28
	call advmouse,setstd
	end method
	method mg28_luneta29
	push "e1_mg28_luneta_fragment_3_used"
	call clsave,bis
	neg
	cmp0
	je l10912
	push "snd_braki"
	cthis cbplay
	ret
l10912:
	end method
	method mg28_luneta30
	push "onfinish"
	push "mg28_luneta31"
	cthis addmethod
	end method
	method mg28_luneta31
	cthis advsetstdstate
	cthis hide
	end method
	method mend
	push "ad28_balkon"
	push "gamead28_balkon0"
	cthis stdexitdefadv
	end method
	method USE_fragment_lunety1
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call anobiektyw,isin
	cmp0
	je l10922
	push 500
	push "null"
	call anobiektyw,anfadein
	push "e1_mg28_luneta_fragment_3_used"
	call clsave,bis
	cmp0
	je l10924
	push 500
	push "null"
	call anzoom,anfadein
l10924:
	push "fragment_lunety1"
	cthis removefrompck
	call fxszufladaklik,play
	push "e1_mg28_luneta_obiektyw_used"
	call clsave,bset
	cthis check_all_inserted
	cmp0
	je l10926
	push "snd_obiektyw"
	cthis cbplay
	call guihint,switchtoskip
	call anaskopis,show
l10926:
	jmp l10921
l10922:
	cthis item_gotopck
l10921:
	end method
	method USE_fragment_lunety2
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call anpokretlo_zoom,isin
	cmp0
	je l10928
	push 500
	push "null"
	call anpokretlo_zoom,anfadein
	push "fragment_lunety2"
	cthis removefrompck
	call fxszufladaklik,play
	push "e1_mg28_luneta_pokretlo_zoom_used"
	call clsave,bset
	cthis check_all_inserted
	cmp0
	je l10930
	push "snd_obiektyw"
	cthis cbplay
	call guihint,switchtoskip
	call anaskopis,show
l10930:
	jmp l10927
l10928:
	cthis item_gotopck
l10927:
	end method
	method USE_fragment_lunety3
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call anfragment_3,isin
	cmp0
	je l10932
	push 500
	push "null"
	call anfragment_3,anfadein
	push "fragment_lunety3"
	cthis removefrompck
	call fxszufladaklik,play
	push "e1_mg28_luneta_obiektyw_used"
	call clsave,bis
	cmp0
	je l10934
	push 500
	push "null"
	call anzoom,anfadein
l10934:
	push "e1_mg28_luneta_fragment_3_used"
	call clsave,bset
	cthis check_all_inserted
	cmp0
	je l10936
	push "snd_obiektyw"
	cthis cbplay
	call guihint,switchtoskip
	call anaskopis,show
l10936:
	jmp l10931
l10932:
	cthis item_gotopck
l10931:
	end method
	method check_all_inserted
	push "e1_mg28_luneta_obiektyw_used"
	call clsave,bis
	cmp0
	je l10938
	push "e1_mg28_luneta_pokretlo_zoom_used"
	call clsave,bis
	cmp0
	je l10938
	push "e1_mg28_luneta_fragment_3_used"
	call clsave,bis
	jmp l10940
l10938:
	push 0
	jmp l10940
l10939:
	push 1
l10940:
	cmp0
	je l10941
	push 1
	ret
	jmp l10937
l10941:
	push 0
	ret
l10937:
	end method
	method show_przepis
	push 800
	push "null"
	call anprzepis,anfadein
	push "e1_mg22_palenisko_woda_dodana"
	call clsave,bis
	cmp0
	je l10943
	push 800
	push "null"
	call anwater,anfadein
l10943:
	push "e1_mg22_palenisko_fluid_dodany"
	call clsave,bis
	cmp0
	je l10945
	push 800
	push "null"
	call anfluid,anfadein
l10945:
	push "e1_mg22_palenisko_ziarna_dodane"
	call clsave,bis
	cmp0
	je l10947
	push 800
	push "null"
	call anseeds,anfadein
l10947:
	push "e1_mg22_palenisko_frog_leg_dodana"
	call clsave,bis
	cmp0
	je l10949
	push 800
	push "null"
	call anfrog_leg,anfadein
l10949:
	push "e1_mg25_lustro_finished"
	call clsave,bis
	cmp0
	je l10951
	push 800
	push "null"
	call anarat,anfadein
l10951:
	push 800
	push "null"
	call anron,anfadein
	push 1500
	push "mg28_luneta32"
	call anron_glow,anfadein
	end method
	method mg28_luneta32
	push 1500
	push "null"
	call anron_glow,anfadeout
	end method
	method hide_przepis
	call advmouse,setstd
	push 800
	push "null"
	call anprzepis,anfadeout
	push "e1_mg22_palenisko_woda_dodana"
	call clsave,bis
	cmp0
	je l10953
	push 800
	push "null"
	call anwater,anfadeout
l10953:
	push "e1_mg22_palenisko_fluid_dodany"
	call clsave,bis
	cmp0
	je l10955
	push 800
	push "null"
	call anfluid,anfadeout
l10955:
	push "e1_mg22_palenisko_ziarna_dodane"
	call clsave,bis
	cmp0
	je l10957
	push 800
	push "null"
	call anseeds,anfadeout
l10957:
	push "e1_mg22_palenisko_frog_leg_dodana"
	call clsave,bis
	cmp0
	je l10959
	push 800
	push "null"
	call anfrog_leg,anfadeout
l10959:
	push "e1_mg25_lustro_finished"
	call clsave,bis
	cmp0
	je l10961
	push 800
	push "null"
	call anarat,anfadeout
l10961:
	push 800
	push "null"
	call anron,anfadeout
	end method
	method SKIP_CLICK
	cthis advstdstate
	cmp0
	je l10963
	push "e1_mg28_focus_set"
	call clsave,bset
	push "e1_mg28_zoom_set"
	call clsave,bis
	push "blik"
	cthis advsetstate
	cthis set_mg_finished
	push "snd_zoom_final"
	cthis cbplay
	call advmouse,setstd
	call guihint,switchtohint
	push 1
	popax
	sub 0,$a
	push 9
	call anfocus,setframe
	push 800
	push "mg28_luneta33"
	call anfocus,anfadein
l10963:
	end method
	method mg28_luneta33
	push 0
	call anblik,play
	cthis show_przepis
	end method
	method HINT_CLICK
	push "ma_fragment_lunety1"
	call clsave,bis
	cmp0
	je l10965
	push "anobiektyw"
	cthis showhint
	push "fragment_lunety1"
	cthis showhintitem
	jmp l10964
l10965:
	push "ma_fragment_lunety2"
	call clsave,bis
	cmp0
	je l10967
	push "anpokretlo_zoom"
	cthis showhint
	push "fragment_lunety2"
	cthis showhintitem
	jmp l10966
l10967:
	push "ma_fragment_lunety3"
	call clsave,bis
	cmp0
	je l10969
	push "anfragment_3"
	cthis showhint
	push "fragment_lunety3"
	cthis showhintitem
	jmp l10968
l10969:
	cthis check_all_inserted
	cmp0
	je l10971
	push "e1_mg28_zoom_set"
	call clsave,bis
	neg
	jmp l10973
l10971:
	push 0
	jmp l10973
l10972:
	push 1
l10973:
	cmp0
	je l10974
	push "anpokretlo_zoom"
	cthis showhint
	jmp l10970
l10974:
	cthis check_all_inserted
	cmp0
	je l10976
	push "e1_mg28_focus_set"
	call clsave,bis
	neg
	jmp l10978
l10976:
	push 0
	jmp l10978
l10977:
	push 1
l10978:
	cmp0
	je l10979
	push "anfocus_raczka"
	cthis showhint
	jmp l10975
l10979:
	push "anpopexit"
	cthis showhint
l10975:
l10970:
l10968:
l10966:
l10964:
	end method
	end game

	game mg29_straznik
	parent Banshee
	method init
	push "mg29_straznik"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "straznik.pyz 4"
	push "straznik_spi.pyzH 6"
	push "wine_bottle.pyzH 7"
	push "babelki.pyzH 8"
	push "przepis.pyzH 15"
	push "ramka.pyz 16"
	push "popexit.pyz 17"
	cthis imgs=
	push A
	push "bgrsala2N 50"
	push "gulniecie"
	cthis sfxs=
	cthis butpopexit
	push "take_bottle_snd"
	push "kinnat_c3d3_24a"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call take_bottle_snd,addmethod
	push "bad_wine_snd"
	push "kinnat_c3d3_25"
	cthis newsndfree
	push "onfinish"
	push "mg29_straznik0"
	call bad_wine_snd,addmethod
	push "wine_first_snd"
	push "kinnat_c3d3_24c"
	cthis newsndfree
	push "onfinish"
	push "mg29_straznik1"
	call wine_first_snd,addmethod
	push "good_wine_snd"
	push "kinnat_c3d3_25e"
	cthis newsndfree
	push "onfinish"
	push "mg29_straznik2"
	call good_wine_snd,addmethod
	new int,przepis_show
	push 0
	pop przepis_show
	call imgbkg,mg29_straznik3
	call anprzepis,mg29_straznik6
	call anstraznik,mg29_straznik10
	push "taken_wine_bottle"
	call clsave,bis
	neg
	cmp0
	je l10989
	call anwine_bottle,show
	push "anwine_bottle"
	cthis setasitemtopck
l10989:
	push save_prefix
	push "intro_spoken"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l10991
	push "snd_intro"
	push "kinnat_c3d3_24b"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_intro,addmethod
	push "snd_intro"
	cthis cbplay
	push save_prefix
	push "intro_spoken"
	pop $b
	popax
	add $a,$b
	call clsave,bset
l10991:
	cthis stdstart
	end method
	method mg29_straznik0
	cthis advsetstdstate
	end method
	method mg29_straznik1
	cthis advsetstdstate
	end method
	method mg29_straznik2
	cthis advsetstdstate
	end method
	method mg29_straznik3
	push "isbutin"
	push "mg29_straznik4"
	cthis addmethod
	push "butclick"
	push "mg29_straznik5"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg29_straznik4
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpopup_bkg,isin
	neg
	end method
	method mg29_straznik5
	cthis advstdstate
	neg
	cmp0
	je l10981
	ret
l10981:
	cthis mend
	end method
	method mg29_straznik6
	cthis Button_isin
	push "butmoveon"
	push "mg29_straznik7"
	cthis addmethod
	push "butmoveoff"
	push "mg29_straznik8"
	cthis addmethod
	push "butclick"
	push "mg29_straznik9"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg29_straznik7
	push "take"
	call advmouse,set
	end method
	method mg29_straznik8
	call advmouse,setstd
	end method
	method mg29_straznik9
	cthis advstdstate
	neg
	cmp0
	je l10983
	ret
l10983:
	cthis hide
	push "wine_bottle"
	push "anwine_bottle"
	cthis popitem_gotocenterobj
	push "n023"
	cthis stdpiorko
	end method
	method mg29_straznik10
	cthis Button_isin
	push "butmoveon"
	push "mg29_straznik11"
	cthis addmethod
	push "butmoveoff"
	push "mg29_straznik12"
	cthis addmethod
	push "butclick"
	push "mg29_straznik13"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg29_straznik11
	push "taken_wine_bottle"
	call clsave,bis
	cmp0
	je l10985
	push "use"
	call advmouse,set
l10985:
	end method
	method mg29_straznik12
	call advmouse,setstd
	end method
	method mg29_straznik13
	cthis advstdstate
	neg
	cmp0
	je l10987
	ret
l10987:
	push "wine_first_snd"
	cthis cbplay
	end method
	method anwine_bottle_TAKE
	cthis advsetstdstate
	push "taken_wine_bottle"
	call clsave,bis
	neg
	cmp0
	je l10993
	push przepis_show
	neg
	jmp l10995
l10993:
	push 0
	jmp l10995
l10994:
	push 1
l10995:
	cmp0
	je l10996
	cthis hide
	push 500
	push "null"
	call anprzepis,anfadein
	push 1
	pop przepis_show
	push "anwine_bottle"
	call butgame,removebut
l10996:
	end method
	method anwine_bottle_INPCK
	push "wine_bottle"
	cthis addtopck
	push "take_bottle_snd"
	cthis cbplay
	push "ob13"
	cthis show_objective
	end method
	method good_wine
	push "e1_mg29_beczka_1"
	call clsave,get
	push 3
	cmpjne
	cmp0
	je l10998
	push 0
	ret
	jmp l10997
l10998:
	push "e1_mg29_beczka_2"
	call clsave,get
	push 2
	cmpjne
	cmp0
	je l11000
	push 0
	ret
	jmp l10999
l11000:
	push "e1_mg29_beczka_3"
	call clsave,get
	push 2
	cmpjne
	cmp0
	je l11002
	push 0
	ret
l11002:
l10999:
l10997:
	push 1
	ret
	end method
	method mend
	push "ad29_winiarnia"
	push "gamead29_winiarnia0"
	cthis stdexitdefadv
	end method
	method USE_wine_bottle
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call anstraznik,isin
	cmp0
	je l11004
	cthis good_wine
	cmp0
	je l11006
	push 1000
	push "mg29_straznik14"
	call anwine_bottle,anfadein
	push "wine_bottle"
	cthis removefrompck
	push "anstraznik"
	call butgame,removebut
	push "ob13"
	cthis objective_done
	call advmouse,setstd
	cthis set_mg_finished
	push "good_wine_snd"
	cthis cbplay
	jmp l11005
l11006:
	cthis item_gotopck
	push "bad_wine_snd"
	cthis cbplay
l11005:
	jmp l11003
l11004:
	cthis item_gotopck
l11003:
	end method
	method mg29_straznik14
	call fxgulniecie,play
	push 400
	push "mg29_straznik15"
	call anstraznik,anfadeout
	push 800
	push "null"
	call anstraznik_spi,anfadein
	push 800
	push "mg29_straznik16"
	call anwine_bottle,anfadeout
	end method
	method mg29_straznik15
	push 0
	call anbabelki,play
	end method
	method mg29_straznik16
	cthis timfinito
	end method
	method HINT_CLICK
	push "taken_wine_bottle"
	call clsave,bis
	neg
	cmp0
	je l11008
	push "anwine_bottle"
	cthis showhint
	jmp l11007
l11008:
	push "ma_wine_bottle"
	call clsave,bis
	cmp0
	je l11010
	cthis good_wine
	jmp l11012
l11010:
	push 0
	jmp l11012
l11011:
	push 1
l11012:
	cmp0
	je l11013
	push "anwine_bottle"
	cthis showhint
	push "wine_bottle"
	cthis showhintitem
	jmp l11009
l11013:
	push "anpopexit"
	cthis showhint
l11009:
l11007:
	end method
	end game

	game mg29_beczka1
	parent Banshee
	method init
	push "mg29_beczka1"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "kurek.pyz 3"
	push "table.pyzH 4"
	push "kropla.pyzH 5"
	push "wine_bottle.pyzH 6"
	push "przepis.pyzH 16"
	push "licznik1.pyzH 17"
	push "licznik2.pyzH 17"
	push "licznik3.pyzH 17"
	push "reset.pyzH 17"
	push "popexit.pyz 27"
	cthis imgs=
	cthis butpopexit
	push A
	push "bgrsala2N 30"
	push "openwindow"
	push "kropla1"
	cthis sfxs=
	push "anwine_bottle"
	cthis setasitemtopck
	push 0
	cthis bottle_level
	call anwine_bottle,setframe
	new int,beczka_index
	push 1
	pop beczka_index
	push "no_bottle_snd"
	push "kinnat_c3d3_24"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call no_bottle_snd,addmethod
	call imgbkg,mg29_beczka10
	call ankurek,mg29_beczka13
	call antable,mg29_beczka18
	call anreset,mg29_beczka112
	push "e1_mg29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "_bottle_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l11029
	call anwine_bottle,show
	push "antable"
	call butgame,removebut
	cthis show_przepis
l11029:
	cthis stdstart
	end method
	method mg29_beczka10
	push "isbutin"
	push "mg29_beczka11"
	cthis addmethod
	push "butclick"
	push "mg29_beczka12"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg29_beczka11
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpopup_bkg,isin
	neg
	end method
	method mg29_beczka12
	cthis advstdstate
	neg
	cmp0
	je l11015
	ret
l11015:
	cthis mend
	end method
	method mg29_beczka13
	cthis Button_isinvis
	push "butmoveon"
	push "mg29_beczka14"
	cthis addmethod
	push "butmoveoff"
	push "mg29_beczka15"
	cthis addmethod
	push "butclick"
	push "mg29_beczka16"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg29_beczka14
	push "take"
	call advmouse,set
	end method
	method mg29_beczka15
	call advmouse,setstd
	end method
	method mg29_beczka16
	cthis advstdstate
	neg
	cmp0
	je l11017
	ret
l11017:
	push "e1_mg29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "_bottle_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l11019
	push "no_bottle_snd"
	cthis cbplay
	jmp l11018
l11019:
	cthis butelka_niepelna
	cmp0
	je l11021
	push 0
	cthis play
	call fxopenwindow,play
	push 100
	push "mg29_beczka17"
	call ankropla,anfadein
	localint $1
	push "e1_mg29_beczka_"
	push beczka_index
	pop $b
	popax
	add $a,$b
	call clsave,get
	pop $1
	push 1
	popax
	add $1,$a
	pop $1
	push "e1_mg29_beczka_"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push $1
	call clsave,set
	localint $2
	push $1
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
	push "anlicznik"
	push beczka_index
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	push $2
	spop $a
	call [$a],setframe
	push "anlicznik"
	push beczka_index
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],show
	push 0
	cthis bottle_level
	call anwine_bottle,setframe
l11021:
l11018:
	end method
	method mg29_beczka17
	push 100
	push "null"
	call ankropla,anfadeout
	call fxkropla1,play
	end method
	method mg29_beczka18
	cthis Button_isinvis
	push "butmoveon"
	push "mg29_beczka19"
	cthis addmethod
	push "butmoveoff"
	push "mg29_beczka110"
	cthis addmethod
	push "butclick"
	push "mg29_beczka111"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg29_beczka19
	push "e1_mg29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "_bottle_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l11023
	push "use"
	call advmouse,set
l11023:
	end method
	method mg29_beczka110
	call advmouse,setstd
	end method
	method mg29_beczka111
	cthis advstdstate
	neg
	cmp0
	je l11025
	ret
l11025:
	end method
	method mg29_beczka112
	cthis Button_isinvis
	push "butmoveon"
	push "mg29_beczka113"
	cthis addmethod
	push "butmoveoff"
	push "mg29_beczka114"
	cthis addmethod
	push "butclick"
	push "mg29_beczka115"
	cthis addmethod
	cthis getname
	call butgame,add
	cthis butdisable
	end method
	method mg29_beczka113
	push "take"
	call advmouse,set
	end method
	method mg29_beczka114
	call advmouse,setstd
	end method
	method mg29_beczka115
	cthis advstdstate
	neg
	cmp0
	je l11027
	ret
l11027:
	cthis reset_bottle
	end method
	method mend
	push "ad29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "gamead29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "0"
	pop $b
	popax
	add $a,$b
	cthis stdexitdefadv
	end method
	method anwine_bottle_TAKE
	push "wine_bottle"
	cthis item_takecenter
	push "e1_mg29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "_bottle_on"
	pop $b
	popax
	add $a,$b
	push 0
	call clsave,set
	push "antable"
	call butgame,addbut
	cthis hide_przepis
	end method
	method anwine_bottle_INPCK
	push "wine_bottle"
	cthis addtopck
	end method
	method reset_bottle
	push 3
	call anwine_bottle,setdelay
	push "reset"
	cthis bottle_level
	pop $b
	popax
	add $a,$b
	call anwine_bottle,play
	push 1
	call anwine_bottle,setdelay
	push "e1_mg29_beczka_1"
	push 0
	call clsave,set
	push "e1_mg29_beczka_2"
	push 0
	call clsave,set
	push "e1_mg29_beczka_3"
	push 0
	call clsave,set
	push "e1_mg29_beczka_4"
	push 0
	call clsave,set
	call anlicznik1,hide
	call anlicznik2,hide
	call anlicznik3,hide
	end method
	method butelka_niepelna
	cthis bottle_level
	push 7
	cmpjl
	cmp0
	je l11031
	push 1
	ret
	jmp l11030
l11031:
	push 0
	ret
l11030:
	end method
	method bottle_level
	localint $1
	push "e1_mg29_beczka_1"
	call clsave,get
	pop $1
	localint $2
	push "e1_mg29_beczka_2"
	call clsave,get
	pop $2
	localint $3
	push "e1_mg29_beczka_3"
	call clsave,get
	pop $3
	localint $4
	push "e1_mg29_beczka_4"
	call clsave,get
	pop $4
	push $1
	push $2
	pop $b
	popax
	add $a,$b
	push $3
	pop $b
	popax
	add $a,$b
	push $4
	pop $b
	popax
	add $a,$b
	ret
	end method
	method show_przepis
	push 200
	push "null"
	call anprzepis,anfadein
	push 200
	push "null"
	call anreset,anfadein
	call anreset,butenable
	localint $1
	push "e1_mg29_beczka_1"
	call clsave,get
	pop $1
	push $1
	push 0
	cmpja
	cmp0
	je l11033
	localint $2
	push $1
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
	push 1
	popax
	sub 0,$a
	push $2
	call anlicznik1,setframe
	push 200
	push "null"
	call anlicznik1,anfadein
l11033:
	localint $3
	push "e1_mg29_beczka_2"
	call clsave,get
	pop $3
	push $3
	push 0
	cmpja
	cmp0
	je l11035
	localint $2
	push $3
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
	push 1
	popax
	sub 0,$a
	push $2
	call anlicznik2,setframe
	push 200
	push "null"
	call anlicznik2,anfadein
l11035:
	localint $4
	push "e1_mg29_beczka_3"
	call clsave,get
	pop $4
	push $4
	push 0
	cmpja
	cmp0
	je l11037
	localint $2
	push $4
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
	push 1
	popax
	sub 0,$a
	push $2
	call anlicznik3,setframe
	push 200
	push "null"
	call anlicznik3,anfadein
l11037:
	end method
	method hide_przepis
	push 200
	push "null"
	call anprzepis,anfadeout
	call anreset,hide
	call anreset,butdisable
	push "anlicznik1"
	spushs
	spop $a
	call [$a],isvisible
	cmp0
	je l11039
	push "anlicznik1"
	spushs
	spop $a
	call [$a],hide
l11039:
	push "anlicznik2"
	spushs
	spop $a
	call [$a],isvisible
	cmp0
	je l11041
	push "anlicznik2"
	spushs
	spop $a
	call [$a],hide
l11041:
	push "anlicznik3"
	spushs
	spop $a
	call [$a],isvisible
	cmp0
	je l11043
	push "anlicznik3"
	spushs
	spop $a
	call [$a],hide
l11043:
	end method
	method USE_wine_bottle
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call antable,isin
	cmp0
	je l11045
	push "wine_bottle"
	push 1
	cthis _removefrompck
	push 0
	cthis bottle_level
	call anwine_bottle,setframe
	push "init"
	call anwine_bottle,styperoto=
	push 0
	push 0
	call anwine_bottle,setpos
	push 500
	push "null"
	call anwine_bottle,anfadein
	push "e1_mg29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "_bottle_on"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	call advmouse,setstd
	push "antable"
	call butgame,removebut
	cthis show_przepis
	jmp l11044
l11045:
	cthis item_gotopck
l11044:
	end method
	method HINT_CLICK
	localint $1
	push "e1_mg29_beczka_"
	push beczka_index
	pop $b
	popax
	add $a,$b
	call clsave,get
	pop $1
	push "e1_mg29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "_bottle_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l11047
	push $1
	push 3
	cmpjl
	cmp0
	je l11047
	cthis butelka_niepelna
	jmp l11049
l11047:
	push 0
	jmp l11049
l11048:
	push 1
l11049:
	cmp0
	je l11050
	push "ankurek"
	cthis showhint
	jmp l11046
l11050:
	push "e1_mg29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "_bottle_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l11052
	push $1
	push 3
	cmpja
	jmp l11054
l11052:
	push 0
	jmp l11054
l11053:
	push 1
l11054:
	cmp0
	je l11055
	push "anreset"
	cthis showhint
	jmp l11051
l11055:
	push "e1_mg29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "_bottle_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l11057
	push $1
	push 3
	cmpjl
	cmp0
	je l11057
	cthis bottle_level
	push 7
	cmpjae
	jmp l11059
l11057:
	push 0
	jmp l11059
l11058:
	push 1
l11059:
	cmp0
	je l11060
	push "anreset"
	cthis showhint
	jmp l11056
l11060:
	push "e1_mg29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "_bottle_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l11062
	push $1
	push 32
	cmpje
	jmp l11064
l11062:
	push 0
	jmp l11064
l11063:
	push 1
l11064:
	cmp0
	je l11065
	push "antable"
	cthis showhint
	jmp l11061
l11065:
	push "ma_wine_bottle"
	call clsave,bis
	cmp0
	je l11067
	push $1
	push 3
	cmpjne
	jmp l11069
l11067:
	push 0
	jmp l11069
l11068:
	push 1
l11069:
	cmp0
	je l11070
	push "antable"
	cthis showhint
	push "wine_bottle"
	cthis showhintitem
	jmp l11066
l11070:
	push "anpopexit"
	cthis showhint
l11066:
l11061:
l11056:
l11051:
l11046:
	end method
	end game

	game mg29_beczka2
	parent Banshee
	method init
	push "mg29_beczka2"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "kurek.pyz 3"
	push "table.pyzH 4"
	push "kropla.pyzH 5"
	push "wine_bottle.pyzH 6"
	push "przepis.pyzH 16"
	push "licznik1.pyzH 17"
	push "licznik2.pyzH 17"
	push "licznik3.pyzH 17"
	push "reset.pyzH 17"
	push "popexit.pyz 27"
	cthis imgs=
	cthis butpopexit
	push A
	push "bgrsala2N 30"
	push "openwindow"
	push "kropla1"
	cthis sfxs=
	push "anwine_bottle"
	cthis setasitemtopck
	push 0
	cthis bottle_level
	call anwine_bottle,setframe
	new int,beczka_index
	push 2
	pop beczka_index
	push "no_bottle_snd"
	push "kinnat_c3d3_24"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call no_bottle_snd,addmethod
	call imgbkg,mg29_beczka20
	call ankurek,mg29_beczka23
	call antable,mg29_beczka28
	call anreset,mg29_beczka212
	push "e1_mg29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "_bottle_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l11086
	call anwine_bottle,show
	push "antable"
	call butgame,removebut
	cthis show_przepis
l11086:
	cthis stdstart
	end method
	method mg29_beczka20
	push "isbutin"
	push "mg29_beczka21"
	cthis addmethod
	push "butclick"
	push "mg29_beczka22"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg29_beczka21
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpopup_bkg,isin
	neg
	end method
	method mg29_beczka22
	cthis advstdstate
	neg
	cmp0
	je l11072
	ret
l11072:
	cthis mend
	end method
	method mg29_beczka23
	cthis Button_isinvis
	push "butmoveon"
	push "mg29_beczka24"
	cthis addmethod
	push "butmoveoff"
	push "mg29_beczka25"
	cthis addmethod
	push "butclick"
	push "mg29_beczka26"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg29_beczka24
	push "take"
	call advmouse,set
	end method
	method mg29_beczka25
	call advmouse,setstd
	end method
	method mg29_beczka26
	cthis advstdstate
	neg
	cmp0
	je l11074
	ret
l11074:
	push "e1_mg29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "_bottle_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l11076
	push "no_bottle_snd"
	cthis cbplay
	jmp l11075
l11076:
	cthis butelka_niepelna
	cmp0
	je l11078
	push 0
	cthis play
	call fxopenwindow,play
	push 100
	push "mg29_beczka27"
	call ankropla,anfadein
	localint $1
	push "e1_mg29_beczka_"
	push beczka_index
	pop $b
	popax
	add $a,$b
	call clsave,get
	pop $1
	push 1
	popax
	add $1,$a
	pop $1
	push "e1_mg29_beczka_"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push $1
	call clsave,set
	localint $2
	push $1
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
	push "anlicznik"
	push beczka_index
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	push $2
	spop $a
	call [$a],setframe
	push "anlicznik"
	push beczka_index
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],show
	push 0
	cthis bottle_level
	call anwine_bottle,setframe
l11078:
l11075:
	end method
	method mg29_beczka27
	push 100
	push "null"
	call ankropla,anfadeout
	call fxkropla1,play
	end method
	method mg29_beczka28
	cthis Button_isinvis
	push "butmoveon"
	push "mg29_beczka29"
	cthis addmethod
	push "butmoveoff"
	push "mg29_beczka210"
	cthis addmethod
	push "butclick"
	push "mg29_beczka211"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg29_beczka29
	push "e1_mg29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "_bottle_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l11080
	push "use"
	call advmouse,set
l11080:
	end method
	method mg29_beczka210
	call advmouse,setstd
	end method
	method mg29_beczka211
	cthis advstdstate
	neg
	cmp0
	je l11082
	ret
l11082:
	end method
	method mg29_beczka212
	cthis Button_isinvis
	push "butmoveon"
	push "mg29_beczka213"
	cthis addmethod
	push "butmoveoff"
	push "mg29_beczka214"
	cthis addmethod
	push "butclick"
	push "mg29_beczka215"
	cthis addmethod
	cthis getname
	call butgame,add
	cthis butdisable
	end method
	method mg29_beczka213
	push "take"
	call advmouse,set
	end method
	method mg29_beczka214
	call advmouse,setstd
	end method
	method mg29_beczka215
	cthis advstdstate
	neg
	cmp0
	je l11084
	ret
l11084:
	cthis reset_bottle
	end method
	method mend
	push "ad29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "gamead29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "0"
	pop $b
	popax
	add $a,$b
	cthis stdexitdefadv
	end method
	method anwine_bottle_TAKE
	push "wine_bottle"
	cthis item_takecenter
	push "e1_mg29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "_bottle_on"
	pop $b
	popax
	add $a,$b
	push 0
	call clsave,set
	push "antable"
	call butgame,addbut
	cthis hide_przepis
	end method
	method anwine_bottle_INPCK
	push "wine_bottle"
	cthis addtopck
	end method
	method reset_bottle
	push 3
	call anwine_bottle,setdelay
	push "reset"
	cthis bottle_level
	pop $b
	popax
	add $a,$b
	call anwine_bottle,play
	push 1
	call anwine_bottle,setdelay
	push "e1_mg29_beczka_1"
	push 0
	call clsave,set
	push "e1_mg29_beczka_2"
	push 0
	call clsave,set
	push "e1_mg29_beczka_3"
	push 0
	call clsave,set
	push "e1_mg29_beczka_4"
	push 0
	call clsave,set
	call anlicznik1,hide
	call anlicznik2,hide
	call anlicznik3,hide
	end method
	method butelka_niepelna
	cthis bottle_level
	push 7
	cmpjl
	cmp0
	je l11088
	push 1
	ret
	jmp l11087
l11088:
	push 0
	ret
l11087:
	end method
	method bottle_level
	localint $1
	push "e1_mg29_beczka_1"
	call clsave,get
	pop $1
	localint $2
	push "e1_mg29_beczka_2"
	call clsave,get
	pop $2
	localint $3
	push "e1_mg29_beczka_3"
	call clsave,get
	pop $3
	localint $4
	push "e1_mg29_beczka_4"
	call clsave,get
	pop $4
	push $1
	push $2
	pop $b
	popax
	add $a,$b
	push $3
	pop $b
	popax
	add $a,$b
	push $4
	pop $b
	popax
	add $a,$b
	ret
	end method
	method show_przepis
	push 200
	push "null"
	call anprzepis,anfadein
	push 200
	push "null"
	call anreset,anfadein
	call anreset,butenable
	localint $1
	push "e1_mg29_beczka_1"
	call clsave,get
	pop $1
	push $1
	push 0
	cmpja
	cmp0
	je l11090
	localint $2
	push $1
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
	push 1
	popax
	sub 0,$a
	push $2
	call anlicznik1,setframe
	push 200
	push "null"
	call anlicznik1,anfadein
l11090:
	localint $3
	push "e1_mg29_beczka_2"
	call clsave,get
	pop $3
	push $3
	push 0
	cmpja
	cmp0
	je l11092
	localint $2
	push $3
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
	push 1
	popax
	sub 0,$a
	push $2
	call anlicznik2,setframe
	push 200
	push "null"
	call anlicznik2,anfadein
l11092:
	localint $4
	push "e1_mg29_beczka_3"
	call clsave,get
	pop $4
	push $4
	push 0
	cmpja
	cmp0
	je l11094
	localint $2
	push $4
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
	push 1
	popax
	sub 0,$a
	push $2
	call anlicznik3,setframe
	push 200
	push "null"
	call anlicznik3,anfadein
l11094:
	end method
	method hide_przepis
	push 200
	push "null"
	call anprzepis,anfadeout
	call anreset,hide
	call anreset,butdisable
	push "anlicznik1"
	spushs
	spop $a
	call [$a],isvisible
	cmp0
	je l11096
	push "anlicznik1"
	spushs
	spop $a
	call [$a],hide
l11096:
	push "anlicznik2"
	spushs
	spop $a
	call [$a],isvisible
	cmp0
	je l11098
	push "anlicznik2"
	spushs
	spop $a
	call [$a],hide
l11098:
	push "anlicznik3"
	spushs
	spop $a
	call [$a],isvisible
	cmp0
	je l11100
	push "anlicznik3"
	spushs
	spop $a
	call [$a],hide
l11100:
	end method
	method USE_wine_bottle
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call antable,isin
	cmp0
	je l11102
	push "wine_bottle"
	push 1
	cthis _removefrompck
	push 0
	cthis bottle_level
	call anwine_bottle,setframe
	push "init"
	call anwine_bottle,styperoto=
	push 0
	push 0
	call anwine_bottle,setpos
	push 500
	push "null"
	call anwine_bottle,anfadein
	push "e1_mg29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "_bottle_on"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	call advmouse,setstd
	push "antable"
	call butgame,removebut
	cthis show_przepis
	jmp l11101
l11102:
	cthis item_gotopck
l11101:
	end method
	method HINT_CLICK
	localint $1
	push "e1_mg29_beczka_"
	push beczka_index
	pop $b
	popax
	add $a,$b
	call clsave,get
	pop $1
	push "e1_mg29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "_bottle_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l11104
	push $1
	push 2
	cmpjl
	cmp0
	je l11104
	cthis butelka_niepelna
	jmp l11106
l11104:
	push 0
	jmp l11106
l11105:
	push 1
l11106:
	cmp0
	je l11107
	push "ankurek"
	cthis showhint
	jmp l11103
l11107:
	push "e1_mg29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "_bottle_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l11109
	push $1
	push 2
	cmpja
	jmp l11111
l11109:
	push 0
	jmp l11111
l11110:
	push 1
l11111:
	cmp0
	je l11112
	push "anreset"
	cthis showhint
	jmp l11108
l11112:
	push "e1_mg29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "_bottle_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l11114
	push $1
	push 2
	cmpjl
	cmp0
	je l11114
	cthis bottle_level
	push 7
	cmpjae
	jmp l11116
l11114:
	push 0
	jmp l11116
l11115:
	push 1
l11116:
	cmp0
	je l11117
	push "anreset"
	cthis showhint
	jmp l11113
l11117:
	push "e1_mg29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "_bottle_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l11119
	push $1
	push 2
	cmpje
	jmp l11121
l11119:
	push 0
	jmp l11121
l11120:
	push 1
l11121:
	cmp0
	je l11122
	push "antable"
	cthis showhint
	jmp l11118
l11122:
	push "ma_wine_bottle"
	call clsave,bis
	cmp0
	je l11124
	push $1
	push 2
	cmpjne
	jmp l11126
l11124:
	push 0
	jmp l11126
l11125:
	push 1
l11126:
	cmp0
	je l11127
	push "antable"
	cthis showhint
	push "wine_bottle"
	cthis showhintitem
	jmp l11123
l11127:
	push "anpopexit"
	cthis showhint
l11123:
l11118:
l11113:
l11108:
l11103:
	end method
	end game

	game mg29_beczka3
	parent Banshee
	method init
	push "mg29_beczka3"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "kurek.pyz 3"
	push "table.pyzH 4"
	push "kropla.pyzH 5"
	push "wine_bottle.pyzH 6"
	push "przepis.pyzH 16"
	push "licznik1.pyzH 17"
	push "licznik2.pyzH 17"
	push "licznik3.pyzH 17"
	push "reset.pyzH 17"
	push "popexit.pyz 27"
	cthis imgs=
	cthis butpopexit
	push A
	push "bgrsala2N 30"
	push "openwindow"
	push "kropla1"
	cthis sfxs=
	push "anwine_bottle"
	cthis setasitemtopck
	push 0
	cthis bottle_level
	call anwine_bottle,setframe
	new int,beczka_index
	push 3
	pop beczka_index
	push "no_bottle_snd"
	push "kinnat_c3d3_24"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call no_bottle_snd,addmethod
	call imgbkg,mg29_beczka30
	call ankurek,mg29_beczka33
	call antable,mg29_beczka38
	call anreset,mg29_beczka312
	push "e1_mg29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "_bottle_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l11143
	call anwine_bottle,show
	push "antable"
	call butgame,removebut
	cthis show_przepis
l11143:
	cthis stdstart
	end method
	method mg29_beczka30
	push "isbutin"
	push "mg29_beczka31"
	cthis addmethod
	push "butclick"
	push "mg29_beczka32"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg29_beczka31
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpopup_bkg,isin
	neg
	end method
	method mg29_beczka32
	cthis advstdstate
	neg
	cmp0
	je l11129
	ret
l11129:
	cthis mend
	end method
	method mg29_beczka33
	cthis Button_isinvis
	push "butmoveon"
	push "mg29_beczka34"
	cthis addmethod
	push "butmoveoff"
	push "mg29_beczka35"
	cthis addmethod
	push "butclick"
	push "mg29_beczka36"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg29_beczka34
	push "take"
	call advmouse,set
	end method
	method mg29_beczka35
	call advmouse,setstd
	end method
	method mg29_beczka36
	cthis advstdstate
	neg
	cmp0
	je l11131
	ret
l11131:
	push "e1_mg29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "_bottle_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l11133
	push "no_bottle_snd"
	cthis cbplay
	jmp l11132
l11133:
	cthis butelka_niepelna
	cmp0
	je l11135
	push 0
	cthis play
	call fxopenwindow,play
	push 100
	push "mg29_beczka37"
	call ankropla,anfadein
	localint $1
	push "e1_mg29_beczka_"
	push beczka_index
	pop $b
	popax
	add $a,$b
	call clsave,get
	pop $1
	push 1
	popax
	add $1,$a
	pop $1
	push "e1_mg29_beczka_"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push $1
	call clsave,set
	localint $2
	push $1
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
	push "anlicznik"
	push beczka_index
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	push $2
	spop $a
	call [$a],setframe
	push "anlicznik"
	push beczka_index
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],show
	push 0
	cthis bottle_level
	call anwine_bottle,setframe
l11135:
l11132:
	end method
	method mg29_beczka37
	push 100
	push "null"
	call ankropla,anfadeout
	call fxkropla1,play
	end method
	method mg29_beczka38
	cthis Button_isinvis
	push "butmoveon"
	push "mg29_beczka39"
	cthis addmethod
	push "butmoveoff"
	push "mg29_beczka310"
	cthis addmethod
	push "butclick"
	push "mg29_beczka311"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg29_beczka39
	push "e1_mg29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "_bottle_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l11137
	push "use"
	call advmouse,set
l11137:
	end method
	method mg29_beczka310
	call advmouse,setstd
	end method
	method mg29_beczka311
	cthis advstdstate
	neg
	cmp0
	je l11139
	ret
l11139:
	end method
	method mg29_beczka312
	cthis Button_isinvis
	push "butmoveon"
	push "mg29_beczka313"
	cthis addmethod
	push "butmoveoff"
	push "mg29_beczka314"
	cthis addmethod
	push "butclick"
	push "mg29_beczka315"
	cthis addmethod
	cthis getname
	call butgame,add
	cthis butdisable
	end method
	method mg29_beczka313
	push "take"
	call advmouse,set
	end method
	method mg29_beczka314
	call advmouse,setstd
	end method
	method mg29_beczka315
	cthis advstdstate
	neg
	cmp0
	je l11141
	ret
l11141:
	cthis reset_bottle
	end method
	method mend
	push "ad29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "gamead29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "0"
	pop $b
	popax
	add $a,$b
	cthis stdexitdefadv
	end method
	method anwine_bottle_TAKE
	push "wine_bottle"
	cthis item_takecenter
	push "e1_mg29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "_bottle_on"
	pop $b
	popax
	add $a,$b
	push 0
	call clsave,set
	push "antable"
	call butgame,addbut
	cthis hide_przepis
	end method
	method anwine_bottle_INPCK
	push "wine_bottle"
	cthis addtopck
	end method
	method reset_bottle
	push 3
	call anwine_bottle,setdelay
	push "reset"
	cthis bottle_level
	pop $b
	popax
	add $a,$b
	call anwine_bottle,play
	push 1
	call anwine_bottle,setdelay
	push "e1_mg29_beczka_1"
	push 0
	call clsave,set
	push "e1_mg29_beczka_2"
	push 0
	call clsave,set
	push "e1_mg29_beczka_3"
	push 0
	call clsave,set
	push "e1_mg29_beczka_4"
	push 0
	call clsave,set
	call anlicznik1,hide
	call anlicznik2,hide
	call anlicznik3,hide
	end method
	method butelka_niepelna
	cthis bottle_level
	push 7
	cmpjl
	cmp0
	je l11145
	push 1
	ret
	jmp l11144
l11145:
	push 0
	ret
l11144:
	end method
	method bottle_level
	localint $1
	push "e1_mg29_beczka_1"
	call clsave,get
	pop $1
	localint $2
	push "e1_mg29_beczka_2"
	call clsave,get
	pop $2
	localint $3
	push "e1_mg29_beczka_3"
	call clsave,get
	pop $3
	localint $4
	push "e1_mg29_beczka_4"
	call clsave,get
	pop $4
	push $1
	push $2
	pop $b
	popax
	add $a,$b
	push $3
	pop $b
	popax
	add $a,$b
	push $4
	pop $b
	popax
	add $a,$b
	ret
	end method
	method show_przepis
	push 200
	push "null"
	call anprzepis,anfadein
	push 200
	push "null"
	call anreset,anfadein
	call anreset,butenable
	localint $1
	push "e1_mg29_beczka_1"
	call clsave,get
	pop $1
	push $1
	push 0
	cmpja
	cmp0
	je l11147
	localint $2
	push $1
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
	push 1
	popax
	sub 0,$a
	push $2
	call anlicznik1,setframe
	push 200
	push "null"
	call anlicznik1,anfadein
l11147:
	localint $3
	push "e1_mg29_beczka_2"
	call clsave,get
	pop $3
	push $3
	push 0
	cmpja
	cmp0
	je l11149
	localint $2
	push $3
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
	push 1
	popax
	sub 0,$a
	push $2
	call anlicznik2,setframe
	push 200
	push "null"
	call anlicznik2,anfadein
l11149:
	localint $4
	push "e1_mg29_beczka_3"
	call clsave,get
	pop $4
	push $4
	push 0
	cmpja
	cmp0
	je l11151
	localint $2
	push $4
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
	push 1
	popax
	sub 0,$a
	push $2
	call anlicznik3,setframe
	push 200
	push "null"
	call anlicznik3,anfadein
l11151:
	end method
	method hide_przepis
	push 200
	push "null"
	call anprzepis,anfadeout
	call anreset,hide
	call anreset,butdisable
	push "anlicznik1"
	spushs
	spop $a
	call [$a],isvisible
	cmp0
	je l11153
	push "anlicznik1"
	spushs
	spop $a
	call [$a],hide
l11153:
	push "anlicznik2"
	spushs
	spop $a
	call [$a],isvisible
	cmp0
	je l11155
	push "anlicznik2"
	spushs
	spop $a
	call [$a],hide
l11155:
	push "anlicznik3"
	spushs
	spop $a
	call [$a],isvisible
	cmp0
	je l11157
	push "anlicznik3"
	spushs
	spop $a
	call [$a],hide
l11157:
	end method
	method USE_wine_bottle
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call antable,isin
	cmp0
	je l11159
	push "wine_bottle"
	push 1
	cthis _removefrompck
	push 0
	cthis bottle_level
	call anwine_bottle,setframe
	push "init"
	call anwine_bottle,styperoto=
	push 0
	push 0
	call anwine_bottle,setpos
	push 500
	push "null"
	call anwine_bottle,anfadein
	push "e1_mg29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "_bottle_on"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	call advmouse,setstd
	push "antable"
	call butgame,removebut
	cthis show_przepis
	jmp l11158
l11159:
	cthis item_gotopck
l11158:
	end method
	method HINT_CLICK
	localint $1
	push "e1_mg29_beczka_"
	push beczka_index
	pop $b
	popax
	add $a,$b
	call clsave,get
	pop $1
	push "e1_mg29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "_bottle_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l11161
	push $1
	push 2
	cmpjl
	cmp0
	je l11161
	cthis butelka_niepelna
	jmp l11163
l11161:
	push 0
	jmp l11163
l11162:
	push 1
l11163:
	cmp0
	je l11164
	push "ankurek"
	cthis showhint
	jmp l11160
l11164:
	push "e1_mg29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "_bottle_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l11166
	push $1
	push 2
	cmpja
	jmp l11168
l11166:
	push 0
	jmp l11168
l11167:
	push 1
l11168:
	cmp0
	je l11169
	push "anreset"
	cthis showhint
	jmp l11165
l11169:
	push "e1_mg29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "_bottle_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l11171
	push $1
	push 2
	cmpjl
	cmp0
	je l11171
	cthis bottle_level
	push 7
	cmpjae
	jmp l11173
l11171:
	push 0
	jmp l11173
l11172:
	push 1
l11173:
	cmp0
	je l11174
	push "anreset"
	cthis showhint
	jmp l11170
l11174:
	push "e1_mg29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "_bottle_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l11176
	push $1
	push 2
	cmpje
	jmp l11178
l11176:
	push 0
	jmp l11178
l11177:
	push 1
l11178:
	cmp0
	je l11179
	push "antable"
	cthis showhint
	jmp l11175
l11179:
	push "ma_wine_bottle"
	call clsave,bis
	cmp0
	je l11181
	push $1
	push 2
	cmpjne
	jmp l11183
l11181:
	push 0
	jmp l11183
l11182:
	push 1
l11183:
	cmp0
	je l11184
	push "antable"
	cthis showhint
	push "wine_bottle"
	cthis showhintitem
	jmp l11180
l11184:
	push "anpopexit"
	cthis showhint
l11180:
l11175:
l11170:
l11165:
l11160:
	end method
	end game

	game mg29_beczka4
	parent Banshee
	method init
	push "mg29_beczka4"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "kurek.pyz 3"
	push "table.pyzH 4"
	push "kropla.pyzH 5"
	push "wine_bottle.pyzH 6"
	push "przepis.pyzH 16"
	push "licznik1.pyzH 17"
	push "licznik2.pyzH 17"
	push "licznik3.pyzH 17"
	push "reset.pyzH 17"
	push "popexit.pyz 27"
	cthis imgs=
	cthis butpopexit
	push A
	push "bgrsala2N 30"
	push "openwindow"
	push "kropla1"
	cthis sfxs=
	push "anwine_bottle"
	cthis setasitemtopck
	push 0
	cthis bottle_level
	call anwine_bottle,setframe
	new int,beczka_index
	push 4
	pop beczka_index
	push "no_bottle_snd"
	push "kinnat_c3d3_24"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call no_bottle_snd,addmethod
	call imgbkg,mg29_beczka40
	call ankurek,mg29_beczka43
	call antable,mg29_beczka48
	call anreset,mg29_beczka412
	push "e1_mg29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "_bottle_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l11200
	call anwine_bottle,show
	push "antable"
	call butgame,removebut
	cthis show_przepis
l11200:
	cthis stdstart
	end method
	method mg29_beczka40
	push "isbutin"
	push "mg29_beczka41"
	cthis addmethod
	push "butclick"
	push "mg29_beczka42"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg29_beczka41
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpopup_bkg,isin
	neg
	end method
	method mg29_beczka42
	cthis advstdstate
	neg
	cmp0
	je l11186
	ret
l11186:
	cthis mend
	end method
	method mg29_beczka43
	cthis Button_isinvis
	push "butmoveon"
	push "mg29_beczka44"
	cthis addmethod
	push "butmoveoff"
	push "mg29_beczka45"
	cthis addmethod
	push "butclick"
	push "mg29_beczka46"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg29_beczka44
	push "take"
	call advmouse,set
	end method
	method mg29_beczka45
	call advmouse,setstd
	end method
	method mg29_beczka46
	cthis advstdstate
	neg
	cmp0
	je l11188
	ret
l11188:
	push "e1_mg29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "_bottle_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l11190
	push "no_bottle_snd"
	cthis cbplay
	jmp l11189
l11190:
	cthis butelka_niepelna
	cmp0
	je l11192
	push 0
	cthis play
	call fxopenwindow,play
	push 100
	push "mg29_beczka47"
	call ankropla,anfadein
	localint $1
	push "e1_mg29_beczka_"
	push beczka_index
	pop $b
	popax
	add $a,$b
	call clsave,get
	pop $1
	push 1
	popax
	add $1,$a
	pop $1
	push "e1_mg29_beczka_"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push $1
	call clsave,set
	localint $2
	push $1
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
	push 0
	cthis bottle_level
	call anwine_bottle,setframe
l11192:
l11189:
	end method
	method mg29_beczka47
	push 100
	push "null"
	call ankropla,anfadeout
	call fxkropla1,play
	end method
	method mg29_beczka48
	cthis Button_isinvis
	push "butmoveon"
	push "mg29_beczka49"
	cthis addmethod
	push "butmoveoff"
	push "mg29_beczka410"
	cthis addmethod
	push "butclick"
	push "mg29_beczka411"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg29_beczka49
	push "e1_mg29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "_bottle_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l11194
	push "use"
	call advmouse,set
l11194:
	end method
	method mg29_beczka410
	call advmouse,setstd
	end method
	method mg29_beczka411
	cthis advstdstate
	neg
	cmp0
	je l11196
	ret
l11196:
	end method
	method mg29_beczka412
	cthis Button_isinvis
	push "butmoveon"
	push "mg29_beczka413"
	cthis addmethod
	push "butmoveoff"
	push "mg29_beczka414"
	cthis addmethod
	push "butclick"
	push "mg29_beczka415"
	cthis addmethod
	cthis getname
	call butgame,add
	cthis butdisable
	end method
	method mg29_beczka413
	push "take"
	call advmouse,set
	end method
	method mg29_beczka414
	call advmouse,setstd
	end method
	method mg29_beczka415
	cthis advstdstate
	neg
	cmp0
	je l11198
	ret
l11198:
	cthis reset_bottle
	end method
	method mend
	push "ad29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "gamead29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "0"
	pop $b
	popax
	add $a,$b
	cthis stdexitdefadv
	end method
	method anwine_bottle_TAKE
	push "wine_bottle"
	cthis item_takecenter
	push "e1_mg29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "_bottle_on"
	pop $b
	popax
	add $a,$b
	push 0
	call clsave,set
	push "antable"
	call butgame,addbut
	cthis hide_przepis
	end method
	method anwine_bottle_INPCK
	push "wine_bottle"
	cthis addtopck
	end method
	method reset_bottle
	push 3
	call anwine_bottle,setdelay
	push "reset"
	cthis bottle_level
	pop $b
	popax
	add $a,$b
	call anwine_bottle,play
	push 1
	call anwine_bottle,setdelay
	push "e1_mg29_beczka_1"
	push 0
	call clsave,set
	push "e1_mg29_beczka_2"
	push 0
	call clsave,set
	push "e1_mg29_beczka_3"
	push 0
	call clsave,set
	push "e1_mg29_beczka_4"
	push 0
	call clsave,set
	call anlicznik1,hide
	call anlicznik2,hide
	call anlicznik3,hide
	end method
	method butelka_niepelna
	cthis bottle_level
	push 7
	cmpjl
	cmp0
	je l11202
	push 1
	ret
	jmp l11201
l11202:
	push 0
	ret
l11201:
	end method
	method bottle_level
	localint $1
	push "e1_mg29_beczka_1"
	call clsave,get
	pop $1
	localint $2
	push "e1_mg29_beczka_2"
	call clsave,get
	pop $2
	localint $3
	push "e1_mg29_beczka_3"
	call clsave,get
	pop $3
	localint $4
	push "e1_mg29_beczka_4"
	call clsave,get
	pop $4
	push $1
	push $2
	pop $b
	popax
	add $a,$b
	push $3
	pop $b
	popax
	add $a,$b
	push $4
	pop $b
	popax
	add $a,$b
	ret
	end method
	method show_przepis
	push 200
	push "null"
	call anprzepis,anfadein
	push 200
	push "null"
	call anreset,anfadein
	call anreset,butenable
	localint $1
	push "e1_mg29_beczka_1"
	call clsave,get
	pop $1
	push $1
	push 0
	cmpja
	cmp0
	je l11204
	localint $2
	push $1
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
	push 1
	popax
	sub 0,$a
	push $2
	call anlicznik1,setframe
	push 200
	push "null"
	call anlicznik1,anfadein
l11204:
	localint $3
	push "e1_mg29_beczka_2"
	call clsave,get
	pop $3
	push $3
	push 0
	cmpja
	cmp0
	je l11206
	localint $2
	push $3
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
	push 1
	popax
	sub 0,$a
	push $2
	call anlicznik2,setframe
	push 200
	push "null"
	call anlicznik2,anfadein
l11206:
	localint $4
	push "e1_mg29_beczka_3"
	call clsave,get
	pop $4
	push $4
	push 0
	cmpja
	cmp0
	je l11208
	localint $2
	push $4
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
	push 1
	popax
	sub 0,$a
	push $2
	call anlicznik3,setframe
	push 200
	push "null"
	call anlicznik3,anfadein
l11208:
	end method
	method hide_przepis
	push 200
	push "null"
	call anprzepis,anfadeout
	call anreset,hide
	call anreset,butdisable
	push "anlicznik1"
	spushs
	spop $a
	call [$a],isvisible
	cmp0
	je l11210
	push "anlicznik1"
	spushs
	spop $a
	call [$a],hide
l11210:
	push "anlicznik2"
	spushs
	spop $a
	call [$a],isvisible
	cmp0
	je l11212
	push "anlicznik2"
	spushs
	spop $a
	call [$a],hide
l11212:
	push "anlicznik3"
	spushs
	spop $a
	call [$a],isvisible
	cmp0
	je l11214
	push "anlicznik3"
	spushs
	spop $a
	call [$a],hide
l11214:
	end method
	method USE_wine_bottle
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call antable,isin
	cmp0
	je l11216
	push "wine_bottle"
	push 1
	cthis _removefrompck
	push 0
	cthis bottle_level
	call anwine_bottle,setframe
	push "init"
	call anwine_bottle,styperoto=
	push 0
	push 0
	call anwine_bottle,setpos
	push 500
	push "null"
	call anwine_bottle,anfadein
	push "e1_mg29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "_bottle_on"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	call advmouse,setstd
	push "antable"
	call butgame,removebut
	cthis show_przepis
	jmp l11215
l11216:
	cthis item_gotopck
l11215:
	end method
	method HINT_CLICK
	push "e1_mg29_beczka"
	push beczka_index
	pop $b
	popax
	add $a,$b
	push "_bottle_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l11218
	push "antable"
	cthis showhint
	jmp l11217
l11218:
	push "anpopexit"
	cthis showhint
l11217:
	end method
	end game

	game mg33_skrzynia
	parent Banshee
	method init
	new string,act_id
	push "null"
	pop act_id
	new int,act_posx
	push 1
	popax
	sub 0,$a
	pop act_posx
	new int,act_posy
	push 1
	popax
	sub 0,$a
	pop act_posy
	push "mg33_skrzynia"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "mechanizm2v.pyzH 3"
	push "slot1_dziurka.pyzH 4"
	push "slot2.pyzH 5"
	push "slot3.pyzH 6"
	push "slot4.pyzH 7"
	push "key_slot.pyzH 8"
	push "klucz_wlozony.pyzH 9"
	push "element1_dziurka.pyzH 30"
	push "kawalek2.pyzH 30"
	push "kawalek3.pyzH 30"
	push "kawalek4.pyzH 30"
	push "open_anim.pyzH 31"
	push "lampa1.pyzH 32"
	push "maska_lampa.pyzH 32"
	push "ramka.pyz 35"
	push "popexit.pyz 36"
	cthis imgs=
	push "e1_mg33_skrzynia_skrzynia_otwarta"
	call clsave,bis
	neg
	cmp0
	je l11220
	push "anmechanizm2v"
	cthis gui_toloupe
l11220:
	push A
	push "bgrpodziemia3N 70"
	push "zawiasy"
	push "openhead"
	push "popitem"
	cthis sfxs=
	push "taken_lampa1"
	call clsave,bis
	neg
	cmp0
	je l11222
	push "anlampa1"
	cthis setasitemtopck
	push 1
	call anlampa1,disable=
	push "e1_mg33_skrzynia_skrzynia_otwarta"
	call clsave,bis
	cmp0
	je l11224
	push 0
	push 10
	call anopen_anim,setframe
	call anopen_anim,show
	call anlampa1,show
	push 0
	call anlampa1,disable=
l11224:
l11222:
	push "snd_need_all_fragments"
	push "kinnat_c4d4_10"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_need_all_fragments,addmethod
	push "snd_key_not_yet"
	push "kinnat_c4d4_10a"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_key_not_yet,addmethod
	push "snd_need_key"
	push "kinnat_c4d4_10b"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_need_key,addmethod
	call anpopup_bkg,mg33_skrzynia0
	call imgbkg,mg33_skrzynia2
	cthis butpopexit
	push "e1_mg33_skrzynia_key_inserted"
	call clsave,bis
	neg
	cmp0
	je l11235
	call ankey_slot,mg33_skrzynia4
l11235:
	call anopen_anim,mg33_skrzynia8
	call anklucz_wlozony,mg33_skrzynia10
	push "e1_mg33_skrzynia_slot1_occupied"
	call clsave,bis
	neg
	cmp0
	je l11268
	call anslot1_dziurka,mg33_skrzynia15
	call anelement1_dziurka,mg33_skrzynia19
	jmp l11267
l11268:
	call anslot1_dziurka,show
l11267:
	push "e1_mg33_skrzynia_slot2_occupied"
	call clsave,bis
	neg
	cmp0
	je l11325
	call anslot2,mg33_skrzynia24
	jmp l11324
l11325:
	call anslot2,show
l11324:
	push "e1_mg33_skrzynia_slot3_occupied"
	call clsave,bis
	neg
	cmp0
	je l11340
	call anslot3,mg33_skrzynia28
	jmp l11339
l11340:
	call anslot3,show
l11339:
	push "e1_mg33_skrzynia_slot4_occupied"
	call clsave,bis
	neg
	cmp0
	je l11355
	call anslot4,mg33_skrzynia32
	jmp l11354
l11355:
	call anslot4,show
l11354:
	push "e1_mg33_skrzynia_kawalek2_used"
	call clsave,bis
	neg
	cmp0
	je l11370
	call ankawalek2,mg33_skrzynia36
l11370:
	push "e1_mg33_skrzynia_kawalek3_used"
	call clsave,bis
	neg
	cmp0
	je l11431
	call ankawalek3,mg33_skrzynia41
l11431:
	push "e1_mg33_skrzynia_kawalek4_used"
	call clsave,bis
	neg
	cmp0
	je l11492
	call ankawalek4,mg33_skrzynia46
l11492:
	cthis stdstart
	end method
	method mg33_skrzynia0
	cthis Button_isin
	push "butclick"
	push "mg33_skrzynia1"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg33_skrzynia1
	cthis advstdstate
	neg
	cmp0
	je l11226
	ret
l11226:
	push "e1_mg33_skrzynia_metalowa_czesc1_used"
	call clsave,bis
	neg
	cmp0
	jne l11229
	push "e1_mg33_skrzynia_metalowa_czesc2_used"
	call clsave,bis
	neg
	jmp l11230
l11228:
	push 0
	jmp l11230
l11229:
	push 1
l11230:
	cmp0
	je l11231
	push "snd_need_all_fragments"
	cthis cbplay
l11231:
	end method
	method mg33_skrzynia2
	cthis Button_isinalpha
	push "butclick"
	push "mg33_skrzynia3"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg33_skrzynia3
	cthis advstdstate
	neg
	cmp0
	je l11233
	ret
l11233:
	cthis mend
	end method
	method mg33_skrzynia4
	cthis Button_isinvis
	push "butmoveon"
	push "mg33_skrzynia5"
	cthis addmethod
	push "butmoveoff"
	push "mg33_skrzynia6"
	cthis addmethod
	push "butclick"
	push "mg33_skrzynia7"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg33_skrzynia5
	cthis advstdstate
	neg
	cmp0
	je l11237
	push sgmstate
	push "getitem"
	cmpjne
	jmp l11239
l11237:
	push 0
	jmp l11239
l11238:
	push 1
l11239:
	cmp0
	jne l11241
	push "e1_mg33_skrzynia_key_inserted"
	call clsave,bis
	jmp l11242
l11240:
	push 0
	jmp l11242
l11241:
	push 1
l11242:
	cmp0
	je l11243
	ret
l11243:
	cthis all_inserted
	cmp0
	je l11245
	push "use"
	call advmouse,set
	jmp l11244
l11245:
	call advmouse,setstd
l11244:
	end method
	method mg33_skrzynia6
	call advmouse,setstd
	end method
	method mg33_skrzynia7
	cthis advstdstate
	neg
	cmp0
	je l11247
	ret
l11247:
	cthis all_inserted
	cmp0
	je l11249
	push "e1_mg33_skrzynia_key_inserted"
	call clsave,bis
	neg
	jmp l11251
l11249:
	push 0
	jmp l11251
l11250:
	push 1
l11251:
	cmp0
	je l11252
	push "snd_need_key"
	cthis cbplay
l11252:
	end method
	method mg33_skrzynia8
	push "onfinish"
	push "mg33_skrzynia9"
	cthis addmethod
	end method
	method mg33_skrzynia9
	push 0
	call anlampa1,disable=
	push 500
	push "null"
	call anlampa1,anfadein
	cthis advsetstdstate
	end method
	method mg33_skrzynia10
	push "e1_mg33_skrzynia_key_inserted"
	call clsave,bis
	cmp0
	je l11254
	cthis show
l11254:
	cthis Button_isin
	push "butmoveon"
	push "mg33_skrzynia11"
	cthis addmethod
	push "onfinish"
	push "mg33_skrzynia12"
	cthis addmethod
	push "butmoveoff"
	push "mg33_skrzynia13"
	cthis addmethod
	push "butclick"
	push "mg33_skrzynia14"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg33_skrzynia11
	cthis advstdstate
	neg
	cmp0
	jne l11257
	push "e1_mg33_skrzynia_key_inserted"
	call clsave,bis
	neg
	cmp0
	jne l11257
	push "e1_mg33_skrzynia_skrzynia_otwarta"
	call clsave,bis
	jmp l11258
l11256:
	push 0
	jmp l11258
l11257:
	push 1
l11258:
	cmp0
	je l11259
	ret
l11259:
	push "take"
	call advmouse,set
	end method
	method mg33_skrzynia12
	push 0
	call anopen_anim,play
	call fxopenhead,play
	end method
	method mg33_skrzynia13
	call advmouse,setstd
	end method
	method mg33_skrzynia14
	cthis advstdstate
	neg
	cmp0
	jne l11262
	cthis is_mg_finished
	jmp l11263
l11261:
	push 0
	jmp l11263
l11262:
	push 1
l11263:
	cmp0
	je l11264
	ret
l11264:
	push "e1_mg33_skrzynia_skrzynia_otwarta"
	call clsave,bis
	neg
	cmp0
	je l11266
	push "e1_mg33_skrzynia_skrzynia_otwarta"
	call clsave,bset
	call fxzawiasy,play
	push 0
	cthis play
	push "anmechanizm2v"
	cthis gui_removefromloupe
	call advmouse,setstd
l11266:
	end method
	method mg33_skrzynia15
	cthis Button_isin
	push "butmoveon"
	push "mg33_skrzynia16"
	cthis addmethod
	push "butmoveoff"
	push "mg33_skrzynia17"
	cthis addmethod
	push "butclick"
	push "mg33_skrzynia18"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg33_skrzynia16
	push "use"
	call advmouse,set
	end method
	method mg33_skrzynia17
	call advmouse,setstd
	end method
	method mg33_skrzynia18
	cthis advstdstate
	neg
	cmp0
	jne l11271
	cthis is_mg_finished
	jmp l11272
l11270:
	push 0
	jmp l11272
l11271:
	push 1
l11272:
	cmp0
	je l11273
	ret
l11273:
	push "e1_mg33_skrzynia_metalowa_czesc1_used"
	call clsave,bis
	neg
	cmp0
	jne l11276
	push "e1_mg33_skrzynia_metalowa_czesc2_used"
	call clsave,bis
	neg
	jmp l11277
l11275:
	push 0
	jmp l11277
l11276:
	push 1
l11277:
	cmp0
	je l11278
	push act_id
	push "null"
	cmpje
	jmp l11280
l11278:
	push 0
	jmp l11280
l11279:
	push 1
l11280:
	cmp0
	je l11281
	push "snd_need_all_fragments"
	cthis cbplay
l11281:
	end method
	method mg33_skrzynia19
	push "e1_mg33_skrzynia_metalowa_czesc1_used"
	call clsave,bis
	cmp0
	je l11283
	cthis show
l11283:
	cthis Button_isinvis
	push "butmoveon"
	push "mg33_skrzynia20"
	cthis addmethod
	push "butmoveoff"
	push "mg33_skrzynia21"
	cthis addmethod
	push "butclick"
	push "mg33_skrzynia22"
	cthis addmethod
	push "butrel"
	push "mg33_skrzynia23"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg33_skrzynia20
	cthis advstdstate
	neg
	cmp0
	jne l11286
	push "e1_mg33_skrzynia_slot1_occupied"
	call clsave,bis
	jmp l11287
l11285:
	push 0
	jmp l11287
l11286:
	push 1
l11287:
	cmp0
	je l11288
	ret
l11288:
	push "take"
	call advmouse,set
	end method
	method mg33_skrzynia21
	call advmouse,setstd
	end method
	method mg33_skrzynia22
	cthis advstdstate
	neg
	cmp0
	jne l11291
	cthis is_mg_finished
	jmp l11292
l11290:
	push 0
	jmp l11292
l11291:
	push 1
l11292:
	cmp0
	je l11293
	ret
l11293:
	push act_id
	push "null"
	cmpje
	cmp0
	je l11295
	push "e1_mg33_skrzynia_slot1_occupied"
	call clsave,bis
	neg
	jmp l11297
l11295:
	push 0
	jmp l11297
l11296:
	push 1
l11297:
	cmp0
	je l11298
	cthis getname
	pop act_id
	push act_id
	spushs
	spop $a
	call [$a],getcx
	pop act_posx
	push act_id
	spushs
	spop $a
	call [$a],getcy
	pop act_posy
	push iSzkielkoPodZ
	push 2
	pop $b
	popax
	add $a,$b
	cthis setz
	push 1
	push 0
	cthis setframe
	call mouse,getpos
	cthis setpos
	call advmouse,setstd
	jmp l11294
l11298:
	push act_id
	cthis getname
	cmpje
	cmp0
	je l11300
	call mouse,getpos
	push 0
	push 1
	call anslot1_dziurka,isin
	cmp0
	je l11302
	push act_id
	spushs
	spop $a
	call [$a],framenr
	push 3
	cmpje
	jmp l11304
l11302:
	push 0
	jmp l11304
l11303:
	push 1
l11304:
	cmp0
	je l11305
	cthis hide
	push "null"
	pop act_id
	push 500
	push "null"
	call anslot1_dziurka,anfadein
	push "anslot1_dziurka"
	call butgame,removebut
	push act_id
	call butgame,removebut
	push "e1_mg33_skrzynia_slot1_occupied"
	call clsave,bset
	call advmouse,setstd
	jmp l11301
l11305:
	call mouse,getpos
	push 0
	push 1
	call anpopup_bkg,isin
	neg
	cmp0
	je l11307
	push act_id
	spushs
	push 0
	push 0
	spop $a
	call [$a],setframe
	push act_id
	spushs
	push 0
	push 0
	spop $a
	call [$a],setpos
	push act_id
	spushs
	push 4
	spop $a
	call [$a],setz
	push "null"
	pop act_id
	jmp l11306
l11307:
	localint $1
	cthis framenr
	pop $1
	localint $2
	push 1
	popax
	sub 0,$a
	cthis nofframes
	pop $2
	add $1,1
	pop $1
	push $1
	push $2
	cmpjae
	cmp0
	je l11309
	push 0
	pop $1
l11309:
	push act_id
	spushs
	push 1
	push $1
	spop $a
	call [$a],setframe
l11306:
l11301:
l11300:
l11294:
	call fxpopitem,play
	end method
	method mg33_skrzynia23
	cthis advstdstate
	neg
	cmp0
	jne l11312
	cthis is_mg_finished
	jmp l11313
l11311:
	push 0
	jmp l11313
l11312:
	push 1
l11313:
	cmp0
	je l11314
	ret
l11314:
	push act_id
	cthis getname
	cmpje
	cmp0
	je l11316
	call mouse,getpos
	push 0
	push 1
	call anslot1_dziurka,isin
	cmp0
	je l11318
	push act_id
	spushs
	spop $a
	call [$a],framenr
	push 3
	cmpje
	jmp l11320
l11318:
	push 0
	jmp l11320
l11319:
	push 1
l11320:
	cmp0
	je l11321
	cthis hide
	push "null"
	pop act_id
	push 500
	push "null"
	call anslot1_dziurka,anfadein
	push "anslot1_dziurka"
	call butgame,removebut
	push act_id
	call butgame,removebut
	push "e1_mg33_skrzynia_slot1_occupied"
	call clsave,bset
	call advmouse,setstd
	jmp l11317
l11321:
	call mouse,getpos
	push 0
	push 1
	call anpopup_bkg,isin
	neg
	cmp0
	je l11323
	push act_id
	spushs
	push 0
	push 0
	spop $a
	call [$a],setframe
	push act_id
	spushs
	push 0
	push 0
	spop $a
	call [$a],setpos
	push act_id
	spushs
	push 4
	spop $a
	call [$a],setz
	push "null"
	pop act_id
l11323:
l11317:
l11316:
	call fxpopitem,play
	end method
	method mg33_skrzynia24
	cthis Button_isinvis
	push "butmoveon"
	push "mg33_skrzynia25"
	cthis addmethod
	push "butmoveoff"
	push "mg33_skrzynia26"
	cthis addmethod
	push "butclick"
	push "mg33_skrzynia27"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg33_skrzynia25
	push "use"
	call advmouse,set
	end method
	method mg33_skrzynia26
	call advmouse,setstd
	end method
	method mg33_skrzynia27
	cthis advstdstate
	neg
	cmp0
	jne l11328
	cthis is_mg_finished
	jmp l11329
l11327:
	push 0
	jmp l11329
l11328:
	push 1
l11329:
	cmp0
	je l11330
	ret
l11330:
	push "e1_mg33_skrzynia_metalowa_czesc1_used"
	call clsave,bis
	neg
	cmp0
	jne l11333
	push "e1_mg33_skrzynia_metalowa_czesc2_used"
	call clsave,bis
	neg
	jmp l11334
l11332:
	push 0
	jmp l11334
l11333:
	push 1
l11334:
	cmp0
	je l11335
	push act_id
	push "null"
	cmpje
	jmp l11337
l11335:
	push 0
	jmp l11337
l11336:
	push 1
l11337:
	cmp0
	je l11338
	push "snd_need_all_fragments"
	cthis cbplay
l11338:
	end method
	method mg33_skrzynia28
	cthis Button_isinvis
	push "butmoveon"
	push "mg33_skrzynia29"
	cthis addmethod
	push "butmoveoff"
	push "mg33_skrzynia30"
	cthis addmethod
	push "butclick"
	push "mg33_skrzynia31"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg33_skrzynia29
	push "use"
	call advmouse,set
	end method
	method mg33_skrzynia30
	call advmouse,setstd
	end method
	method mg33_skrzynia31
	cthis advstdstate
	neg
	cmp0
	jne l11343
	cthis is_mg_finished
	jmp l11344
l11342:
	push 0
	jmp l11344
l11343:
	push 1
l11344:
	cmp0
	je l11345
	ret
l11345:
	push "e1_mg33_skrzynia_metalowa_czesc1_used"
	call clsave,bis
	neg
	cmp0
	jne l11348
	push "e1_mg33_skrzynia_metalowa_czesc2_used"
	call clsave,bis
	neg
	jmp l11349
l11347:
	push 0
	jmp l11349
l11348:
	push 1
l11349:
	cmp0
	je l11350
	push act_id
	push "null"
	cmpje
	jmp l11352
l11350:
	push 0
	jmp l11352
l11351:
	push 1
l11352:
	cmp0
	je l11353
	push "snd_need_all_fragments"
	cthis cbplay
l11353:
	end method
	method mg33_skrzynia32
	cthis Button_isinvis
	push "butmoveon"
	push "mg33_skrzynia33"
	cthis addmethod
	push "butmoveoff"
	push "mg33_skrzynia34"
	cthis addmethod
	push "butclick"
	push "mg33_skrzynia35"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg33_skrzynia33
	push "use"
	call advmouse,set
	end method
	method mg33_skrzynia34
	call advmouse,setstd
	end method
	method mg33_skrzynia35
	cthis advstdstate
	neg
	cmp0
	jne l11358
	cthis is_mg_finished
	jmp l11359
l11357:
	push 0
	jmp l11359
l11358:
	push 1
l11359:
	cmp0
	je l11360
	ret
l11360:
	push "e1_mg33_skrzynia_metalowa_czesc1_used"
	call clsave,bis
	neg
	cmp0
	jne l11363
	push "e1_mg33_skrzynia_metalowa_czesc2_used"
	call clsave,bis
	neg
	jmp l11364
l11362:
	push 0
	jmp l11364
l11363:
	push 1
l11364:
	cmp0
	je l11365
	push act_id
	push "null"
	cmpje
	jmp l11367
l11365:
	push 0
	jmp l11367
l11366:
	push 1
l11367:
	cmp0
	je l11368
	push "snd_need_all_fragments"
	cthis cbplay
l11368:
	end method
	method mg33_skrzynia36
	cthis show
	cthis Button_isin
	push "butmoveon"
	push "mg33_skrzynia37"
	cthis addmethod
	push "butmoveoff"
	push "mg33_skrzynia38"
	cthis addmethod
	push "butclick"
	push "mg33_skrzynia39"
	cthis addmethod
	push "butrel"
	push "mg33_skrzynia40"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg33_skrzynia37
	cthis advstdstate
	neg
	cmp0
	jne l11373
	push "e1_mg33_skrzynia_skrzynia_otwarta"
	call clsave,bis
	jmp l11374
l11372:
	push 0
	jmp l11374
l11373:
	push 1
l11374:
	cmp0
	je l11375
	ret
l11375:
	push "take"
	call advmouse,set
	end method
	method mg33_skrzynia38
	call advmouse,setstd
	end method
	method mg33_skrzynia39
	cthis advstdstate
	neg
	cmp0
	jne l11378
	cthis is_mg_finished
	jmp l11379
l11377:
	push 0
	jmp l11379
l11378:
	push 1
l11379:
	cmp0
	je l11380
	ret
l11380:
	push act_id
	push "null"
	cmpje
	cmp0
	je l11382
	cthis getname
	pop act_id
	push act_id
	spushs
	spop $a
	call [$a],getcx
	pop act_posx
	push act_id
	spushs
	spop $a
	call [$a],getcy
	pop act_posy
	push iSzkielkoPodZ
	push 2
	pop $b
	popax
	add $a,$b
	cthis setz
	push 1
	push 0
	cthis setframe
	call mouse,getpos
	cthis setpos
	call advmouse,setstd
	jmp l11381
l11382:
	push act_id
	cthis getname
	cmpje
	cmp0
	je l11384
	call mouse,getpos
	push 0
	push 1
	call anslot2,isin
	cmp0
	je l11386
	push act_id
	spushs
	spop $a
	call [$a],framenr
	push 0
	cmpje
	cmp0
	je l11386
	push "e1_mg33_skrzynia_slot2_occupied"
	call clsave,bis
	neg
	jmp l11388
l11386:
	push 0
	jmp l11388
l11387:
	push 1
l11388:
	cmp0
	je l11389
	cthis hide
	push "null"
	pop act_id
	push 500
	push "null"
	call anslot2,anfadein
	push "anslot2"
	call butgame,removebut
	push act_id
	call butgame,removebut
	push "e1_mg33_skrzynia_slot2_occupied"
	call clsave,bset
	push "e1_mg33_skrzynia_kawalek2_used"
	call clsave,bset
	jmp l11385
l11389:
	call mouse,getpos
	push 0
	push 1
	call anslot3,isin
	cmp0
	je l11391
	push act_id
	spushs
	spop $a
	call [$a],framenr
	push 1
	cmpje
	cmp0
	je l11391
	push "e1_mg33_skrzynia_slot3_occupied"
	call clsave,bis
	neg
	jmp l11393
l11391:
	push 0
	jmp l11393
l11392:
	push 1
l11393:
	cmp0
	je l11394
	cthis hide
	push "null"
	pop act_id
	push 500
	push "null"
	call anslot3,anfadein
	push "anslot3"
	call butgame,removebut
	push act_id
	call butgame,removebut
	push "e1_mg33_skrzynia_slot3_occupied"
	call clsave,bset
	push "e1_mg33_skrzynia_kawalek2_used"
	call clsave,bset
	jmp l11390
l11394:
	call mouse,getpos
	push 0
	push 1
	call anslot4,isin
	cmp0
	je l11396
	push act_id
	spushs
	spop $a
	call [$a],framenr
	push 2
	cmpje
	cmp0
	je l11396
	push "e1_mg33_skrzynia_slot4_occupied"
	call clsave,bis
	neg
	jmp l11398
l11396:
	push 0
	jmp l11398
l11397:
	push 1
l11398:
	cmp0
	je l11399
	cthis hide
	push "null"
	pop act_id
	push 500
	push "null"
	call anslot4,anfadein
	push "anslot4"
	call butgame,removebut
	push act_id
	call butgame,removebut
	push "e1_mg33_skrzynia_slot4_occupied"
	call clsave,bset
	push "e1_mg33_skrzynia_kawalek2_used"
	call clsave,bset
	jmp l11395
l11399:
	call mouse,getpos
	push 0
	push 1
	call anpopup_bkg,isin
	neg
	cmp0
	je l11401
	push act_id
	spushs
	push 0
	push 0
	spop $a
	call [$a],setframe
	push act_id
	spushs
	push 0
	push 0
	spop $a
	call [$a],setpos
	push act_id
	spushs
	push 4
	spop $a
	call [$a],setz
	push "null"
	pop act_id
	jmp l11400
l11401:
	localint $1
	cthis framenr
	pop $1
	localint $2
	push 1
	popax
	sub 0,$a
	cthis nofframes
	pop $2
	add $1,1
	pop $1
	push $1
	push $2
	cmpjae
	cmp0
	je l11403
	push 0
	pop $1
l11403:
	push act_id
	spushs
	push 1
	push $1
	spop $a
	call [$a],setframe
l11400:
l11395:
l11390:
l11385:
l11384:
l11381:
	call fxpopitem,play
	end method
	method mg33_skrzynia40
	cthis advstdstate
	neg
	cmp0
	jne l11406
	cthis is_mg_finished
	jmp l11407
l11405:
	push 0
	jmp l11407
l11406:
	push 1
l11407:
	cmp0
	je l11408
	ret
l11408:
	push act_id
	cthis getname
	cmpje
	cmp0
	je l11410
	call mouse,getpos
	push 0
	push 1
	call anslot2,isin
	cmp0
	je l11412
	push act_id
	spushs
	spop $a
	call [$a],framenr
	push 0
	cmpje
	cmp0
	je l11412
	push "e1_mg33_skrzynia_slot2_occupied"
	call clsave,bis
	neg
	jmp l11414
l11412:
	push 0
	jmp l11414
l11413:
	push 1
l11414:
	cmp0
	je l11415
	cthis hide
	push "null"
	pop act_id
	push 500
	push "null"
	call anslot2,anfadein
	push "anslot2"
	call butgame,removebut
	push act_id
	call butgame,removebut
	push "e1_mg33_skrzynia_slot2_occupied"
	call clsave,bset
	push "e1_mg33_skrzynia_kawalek2_used"
	call clsave,bset
	jmp l11411
l11415:
	call mouse,getpos
	push 0
	push 1
	call anslot3,isin
	cmp0
	je l11417
	push act_id
	spushs
	spop $a
	call [$a],framenr
	push 1
	cmpje
	cmp0
	je l11417
	push "e1_mg33_skrzynia_slot3_occupied"
	call clsave,bis
	neg
	jmp l11419
l11417:
	push 0
	jmp l11419
l11418:
	push 1
l11419:
	cmp0
	je l11420
	cthis hide
	push "null"
	pop act_id
	push 500
	push "null"
	call anslot3,anfadein
	push "anslot3"
	call butgame,removebut
	push act_id
	call butgame,removebut
	push "e1_mg33_skrzynia_slot3_occupied"
	call clsave,bset
	push "e1_mg33_skrzynia_kawalek2_used"
	call clsave,bset
	jmp l11416
l11420:
	call mouse,getpos
	push 0
	push 1
	call anslot4,isin
	cmp0
	je l11422
	push act_id
	spushs
	spop $a
	call [$a],framenr
	push 2
	cmpje
	cmp0
	je l11422
	push "e1_mg33_skrzynia_slot4_occupied"
	call clsave,bis
	neg
	jmp l11424
l11422:
	push 0
	jmp l11424
l11423:
	push 1
l11424:
	cmp0
	je l11425
	cthis hide
	push "null"
	pop act_id
	push 500
	push "null"
	call anslot4,anfadein
	push "anslot4"
	call butgame,removebut
	push act_id
	call butgame,removebut
	push "e1_mg33_skrzynia_slot4_occupied"
	call clsave,bset
	push "e1_mg33_skrzynia_kawalek2_used"
	call clsave,bset
	jmp l11421
l11425:
	call mouse,getpos
	push 0
	push 1
	call anpopup_bkg,isin
	neg
	cmp0
	je l11427
	push act_id
	spushs
	push 0
	push 0
	spop $a
	call [$a],setframe
	push act_id
	spushs
	push 0
	push 0
	spop $a
	call [$a],setpos
	push act_id
	spushs
	push 4
	spop $a
	call [$a],setz
	push "null"
	pop act_id
	jmp l11426
l11427:
	localint $1
	cthis framenr
	pop $1
	localint $2
	push 1
	popax
	sub 0,$a
	cthis nofframes
	pop $2
	add $1,1
	pop $1
	push $1
	push $2
	cmpjae
	cmp0
	je l11429
	push 0
	pop $1
l11429:
	push act_id
	spushs
	push 1
	push $1
	spop $a
	call [$a],setframe
l11426:
l11421:
l11416:
l11411:
l11410:
	call fxpopitem,play
	end method
	method mg33_skrzynia41
	push "e1_mg33_skrzynia_metalowa_czesc2_used"
	call clsave,bis
	cmp0
	je l11433
	cthis show
l11433:
	cthis Button_isin
	push "butmoveon"
	push "mg33_skrzynia42"
	cthis addmethod
	push "butmoveoff"
	push "mg33_skrzynia43"
	cthis addmethod
	push "butclick"
	push "mg33_skrzynia44"
	cthis addmethod
	push "butrel"
	push "mg33_skrzynia45"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg33_skrzynia42
	cthis advstdstate
	neg
	cmp0
	jne l11436
	push "e1_mg33_skrzynia_skrzynia_otwarta"
	call clsave,bis
	jmp l11437
l11435:
	push 0
	jmp l11437
l11436:
	push 1
l11437:
	cmp0
	je l11438
	ret
l11438:
	push "take"
	call advmouse,set
	end method
	method mg33_skrzynia43
	call advmouse,setstd
	end method
	method mg33_skrzynia44
	cthis advstdstate
	neg
	cmp0
	jne l11441
	cthis is_mg_finished
	jmp l11442
l11440:
	push 0
	jmp l11442
l11441:
	push 1
l11442:
	cmp0
	je l11443
	ret
l11443:
	push act_id
	push "null"
	cmpje
	cmp0
	je l11445
	cthis getname
	pop act_id
	push act_id
	spushs
	spop $a
	call [$a],getcx
	pop act_posx
	push act_id
	spushs
	spop $a
	call [$a],getcy
	pop act_posy
	push iSzkielkoPodZ
	push 2
	pop $b
	popax
	add $a,$b
	cthis setz
	push 1
	push 0
	cthis setframe
	call mouse,getpos
	cthis setpos
	call advmouse,setstd
	jmp l11444
l11445:
	push act_id
	cthis getname
	cmpje
	cmp0
	je l11447
	call mouse,getpos
	push 0
	push 1
	call anslot2,isin
	cmp0
	je l11449
	push act_id
	spushs
	spop $a
	call [$a],framenr
	push 0
	cmpje
	cmp0
	je l11449
	push "e1_mg33_skrzynia_slot2_occupied"
	call clsave,bis
	neg
	jmp l11451
l11449:
	push 0
	jmp l11451
l11450:
	push 1
l11451:
	cmp0
	je l11452
	cthis hide
	push "null"
	pop act_id
	push 500
	push "null"
	call anslot2,anfadein
	push "anslot3"
	call butgame,removebut
	push act_id
	call butgame,removebut
	push "e1_mg33_skrzynia_slot2_occupied"
	call clsave,bset
	push "e1_mg33_skrzynia_kawalek3_used"
	call clsave,bset
	jmp l11448
l11452:
	call mouse,getpos
	push 0
	push 1
	call anslot3,isin
	cmp0
	je l11454
	push act_id
	spushs
	spop $a
	call [$a],framenr
	push 1
	cmpje
	cmp0
	je l11454
	push "e1_mg33_skrzynia_slot3_occupied"
	call clsave,bis
	neg
	jmp l11456
l11454:
	push 0
	jmp l11456
l11455:
	push 1
l11456:
	cmp0
	je l11457
	cthis hide
	push "null"
	pop act_id
	push 500
	push "null"
	call anslot3,anfadein
	push "anslot3"
	call butgame,removebut
	push act_id
	call butgame,removebut
	push "e1_mg33_skrzynia_slot3_occupied"
	call clsave,bset
	push "e1_mg33_skrzynia_kawalek3_used"
	call clsave,bset
	jmp l11453
l11457:
	call mouse,getpos
	push 0
	push 1
	call anslot4,isin
	cmp0
	je l11459
	push act_id
	spushs
	spop $a
	call [$a],framenr
	push 2
	cmpje
	cmp0
	je l11459
	push "e1_mg33_skrzynia_slot4_occupied"
	call clsave,bis
	neg
	jmp l11461
l11459:
	push 0
	jmp l11461
l11460:
	push 1
l11461:
	cmp0
	je l11462
	cthis hide
	push "null"
	pop act_id
	push 500
	push "null"
	call anslot4,anfadein
	push "anslot4"
	call butgame,removebut
	push act_id
	call butgame,removebut
	push "e1_mg33_skrzynia_slot4_occupied"
	call clsave,bset
	push "e1_mg33_skrzynia_kawalek3_used"
	call clsave,bset
	jmp l11458
l11462:
	call mouse,getpos
	push 0
	push 1
	call anpopup_bkg,isin
	neg
	cmp0
	je l11464
	push act_id
	spushs
	push 0
	push 0
	spop $a
	call [$a],setframe
	push act_id
	spushs
	push 0
	push 0
	spop $a
	call [$a],setpos
	push act_id
	spushs
	push 4
	spop $a
	call [$a],setz
	push "null"
	pop act_id
	jmp l11463
l11464:
	localint $1
	cthis framenr
	pop $1
	localint $2
	push 1
	popax
	sub 0,$a
	cthis nofframes
	pop $2
	add $1,1
	pop $1
	push $1
	push $2
	cmpjae
	cmp0
	je l11466
	push 0
	pop $1
l11466:
	push act_id
	spushs
	push 1
	push $1
	spop $a
	call [$a],setframe
l11463:
l11458:
l11453:
l11448:
l11447:
l11444:
	call fxpopitem,play
	end method
	method mg33_skrzynia45
	cthis advstdstate
	neg
	cmp0
	jne l11469
	cthis is_mg_finished
	jmp l11470
l11468:
	push 0
	jmp l11470
l11469:
	push 1
l11470:
	cmp0
	je l11471
	ret
l11471:
	push act_id
	cthis getname
	cmpje
	cmp0
	je l11473
	call mouse,getpos
	push 0
	push 1
	call anslot2,isin
	cmp0
	je l11475
	push act_id
	spushs
	spop $a
	call [$a],framenr
	push 0
	cmpje
	cmp0
	je l11475
	push "e1_mg33_skrzynia_slot2_occupied"
	call clsave,bis
	neg
	jmp l11477
l11475:
	push 0
	jmp l11477
l11476:
	push 1
l11477:
	cmp0
	je l11478
	cthis hide
	push "null"
	pop act_id
	push 500
	push "null"
	call anslot2,anfadein
	push "anslot3"
	call butgame,removebut
	push act_id
	call butgame,removebut
	push "e1_mg33_skrzynia_slot2_occupied"
	call clsave,bset
	push "e1_mg33_skrzynia_kawalek3_used"
	call clsave,bset
	jmp l11474
l11478:
	call mouse,getpos
	push 0
	push 1
	call anslot3,isin
	cmp0
	je l11480
	push act_id
	spushs
	spop $a
	call [$a],framenr
	push 1
	cmpje
	cmp0
	je l11480
	push "e1_mg33_skrzynia_slot3_occupied"
	call clsave,bis
	neg
	jmp l11482
l11480:
	push 0
	jmp l11482
l11481:
	push 1
l11482:
	cmp0
	je l11483
	cthis hide
	push "null"
	pop act_id
	push 500
	push "null"
	call anslot3,anfadein
	push "anslot3"
	call butgame,removebut
	push act_id
	call butgame,removebut
	push "e1_mg33_skrzynia_slot3_occupied"
	call clsave,bset
	push "e1_mg33_skrzynia_kawalek3_used"
	call clsave,bset
	jmp l11479
l11483:
	call mouse,getpos
	push 0
	push 1
	call anslot4,isin
	cmp0
	je l11485
	push act_id
	spushs
	spop $a
	call [$a],framenr
	push 2
	cmpje
	cmp0
	je l11485
	push "e1_mg33_skrzynia_slot4_occupied"
	call clsave,bis
	neg
	jmp l11487
l11485:
	push 0
	jmp l11487
l11486:
	push 1
l11487:
	cmp0
	je l11488
	cthis hide
	push "null"
	pop act_id
	push 500
	push "null"
	call anslot4,anfadein
	push "anslot4"
	call butgame,removebut
	push act_id
	call butgame,removebut
	push "e1_mg33_skrzynia_slot4_occupied"
	call clsave,bset
	push "e1_mg33_skrzynia_kawalek3_used"
	call clsave,bset
	jmp l11484
l11488:
	call mouse,getpos
	push 0
	push 1
	call anpopup_bkg,isin
	neg
	cmp0
	je l11490
	push act_id
	spushs
	push 0
	push 0
	spop $a
	call [$a],setframe
	push act_id
	spushs
	push 0
	push 0
	spop $a
	call [$a],setpos
	push act_id
	spushs
	push 4
	spop $a
	call [$a],setz
	push "null"
	pop act_id
l11490:
l11484:
l11479:
l11474:
l11473:
	call fxpopitem,play
	end method
	method mg33_skrzynia46
	cthis show
	cthis Button_isin
	push "butmoveon"
	push "mg33_skrzynia47"
	cthis addmethod
	push "butmoveoff"
	push "mg33_skrzynia48"
	cthis addmethod
	push "butclick"
	push "mg33_skrzynia49"
	cthis addmethod
	push "butrel"
	push "mg33_skrzynia50"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg33_skrzynia47
	cthis advstdstate
	neg
	cmp0
	jne l11495
	push "e1_mg33_skrzynia_skrzynia_otwarta"
	call clsave,bis
	jmp l11496
l11494:
	push 0
	jmp l11496
l11495:
	push 1
l11496:
	cmp0
	je l11497
	ret
l11497:
	push "take"
	call advmouse,set
	end method
	method mg33_skrzynia48
	call advmouse,setstd
	end method
	method mg33_skrzynia49
	cthis advstdstate
	neg
	cmp0
	jne l11500
	cthis is_mg_finished
	jmp l11501
l11499:
	push 0
	jmp l11501
l11500:
	push 1
l11501:
	cmp0
	je l11502
	ret
l11502:
	push act_id
	push "null"
	cmpje
	cmp0
	je l11504
	cthis getname
	pop act_id
	push act_id
	spushs
	spop $a
	call [$a],getcx
	pop act_posx
	push act_id
	spushs
	spop $a
	call [$a],getcy
	pop act_posy
	push iSzkielkoPodZ
	push 2
	pop $b
	popax
	add $a,$b
	cthis setz
	push 1
	push 0
	cthis setframe
	call mouse,getpos
	cthis setpos
	call advmouse,setstd
	jmp l11503
l11504:
	push act_id
	cthis getname
	cmpje
	cmp0
	je l11506
	call mouse,getpos
	push 0
	push 1
	call anslot2,isin
	cmp0
	je l11508
	push act_id
	spushs
	spop $a
	call [$a],framenr
	push 0
	cmpje
	cmp0
	je l11508
	push "e1_mg33_skrzynia_slot2_occupied"
	call clsave,bis
	neg
	jmp l11510
l11508:
	push 0
	jmp l11510
l11509:
	push 1
l11510:
	cmp0
	je l11511
	cthis hide
	push "null"
	pop act_id
	push 500
	push "null"
	call anslot2,anfadein
	push "anslot2"
	call butgame,removebut
	push act_id
	call butgame,removebut
	push "e1_mg33_skrzynia_slot2_occupied"
	call clsave,bset
	push "e1_mg33_skrzynia_kawalek4_used"
	call clsave,bset
	jmp l11507
l11511:
	call mouse,getpos
	push 0
	push 1
	call anslot3,isin
	cmp0
	je l11513
	push act_id
	spushs
	spop $a
	call [$a],framenr
	push 1
	cmpje
	cmp0
	je l11513
	push "e1_mg33_skrzynia_slot3_occupied"
	call clsave,bis
	neg
	jmp l11515
l11513:
	push 0
	jmp l11515
l11514:
	push 1
l11515:
	cmp0
	je l11516
	cthis hide
	push "null"
	pop act_id
	push 500
	push "null"
	call anslot3,anfadein
	push "anslot3"
	call butgame,removebut
	push act_id
	call butgame,removebut
	push "e1_mg33_skrzynia_slot3_occupied"
	call clsave,bset
	push "e1_mg33_skrzynia_kawalek4_used"
	call clsave,bset
	jmp l11512
l11516:
	call mouse,getpos
	push 0
	push 1
	call anslot4,isin
	cmp0
	je l11518
	push act_id
	spushs
	spop $a
	call [$a],framenr
	push 2
	cmpje
	cmp0
	je l11518
	push "e1_mg33_skrzynia_slot4_occupied"
	call clsave,bis
	neg
	jmp l11520
l11518:
	push 0
	jmp l11520
l11519:
	push 1
l11520:
	cmp0
	je l11521
	cthis hide
	push "null"
	pop act_id
	push 500
	push "null"
	call anslot4,anfadein
	push "anslot4"
	call butgame,removebut
	push act_id
	call butgame,removebut
	push "e1_mg33_skrzynia_slot4_occupied"
	call clsave,bset
	push "e1_mg33_skrzynia_kawalek4_used"
	call clsave,bset
	jmp l11517
l11521:
	call mouse,getpos
	push 0
	push 1
	call anpopup_bkg,isin
	neg
	cmp0
	je l11523
	push act_id
	spushs
	push 0
	push 0
	spop $a
	call [$a],setframe
	push act_id
	spushs
	push 0
	push 0
	spop $a
	call [$a],setpos
	push act_id
	spushs
	push 4
	spop $a
	call [$a],setz
	push "null"
	pop act_id
	jmp l11522
l11523:
	localint $1
	cthis framenr
	pop $1
	localint $2
	push 1
	popax
	sub 0,$a
	cthis nofframes
	pop $2
	push $1
	push $2
	cmpjl
	cmp0
	je l11525
	add $1,1
	pop $1
	jmp l11524
l11525:
	push 0
	pop $1
l11524:
	push act_id
	spushs
	push 1
	push $1
	spop $a
	call [$a],setframe
l11522:
l11517:
l11512:
l11507:
l11506:
l11503:
	call fxpopitem,play
	end method
	method mg33_skrzynia50
	cthis advstdstate
	neg
	cmp0
	jne l11528
	cthis is_mg_finished
	jmp l11529
l11527:
	push 0
	jmp l11529
l11528:
	push 1
l11529:
	cmp0
	je l11530
	ret
l11530:
	push act_id
	cthis getname
	cmpje
	cmp0
	je l11532
	call mouse,getpos
	push 0
	push 1
	call anslot2,isin
	cmp0
	je l11534
	push act_id
	spushs
	spop $a
	call [$a],framenr
	push 0
	cmpje
	cmp0
	je l11534
	push "e1_mg33_skrzynia_slot2_occupied"
	call clsave,bis
	neg
	jmp l11536
l11534:
	push 0
	jmp l11536
l11535:
	push 1
l11536:
	cmp0
	je l11537
	cthis hide
	push "null"
	pop act_id
	push 500
	push "null"
	call anslot2,anfadein
	push "anslot2"
	call butgame,removebut
	push act_id
	call butgame,removebut
	push "e1_mg33_skrzynia_slot2_occupied"
	call clsave,bset
	push "e1_mg33_skrzynia_kawalek4_used"
	call clsave,bset
	jmp l11533
l11537:
	call mouse,getpos
	push 0
	push 1
	call anslot3,isin
	cmp0
	je l11539
	push act_id
	spushs
	spop $a
	call [$a],framenr
	push 1
	cmpje
	cmp0
	je l11539
	push "e1_mg33_skrzynia_slot3_occupied"
	call clsave,bis
	neg
	jmp l11541
l11539:
	push 0
	jmp l11541
l11540:
	push 1
l11541:
	cmp0
	je l11542
	cthis hide
	push "null"
	pop act_id
	push 500
	push "null"
	call anslot3,anfadein
	push "anslot3"
	call butgame,removebut
	push act_id
	call butgame,removebut
	push "e1_mg33_skrzynia_slot3_occupied"
	call clsave,bset
	push "e1_mg33_skrzynia_kawalek4_used"
	call clsave,bset
	jmp l11538
l11542:
	call mouse,getpos
	push 0
	push 1
	call anslot4,isin
	cmp0
	je l11544
	push act_id
	spushs
	spop $a
	call [$a],framenr
	push 2
	cmpje
	cmp0
	je l11544
	push "e1_mg33_skrzynia_slot4_occupied"
	call clsave,bis
	neg
	jmp l11546
l11544:
	push 0
	jmp l11546
l11545:
	push 1
l11546:
	cmp0
	je l11547
	cthis hide
	push "null"
	pop act_id
	push 500
	push "null"
	call anslot4,anfadein
	push "anslot4"
	call butgame,removebut
	push act_id
	call butgame,removebut
	push "e1_mg33_skrzynia_slot4_occupied"
	call clsave,bset
	push "e1_mg33_skrzynia_kawalek4_used"
	call clsave,bset
	jmp l11543
l11547:
	call mouse,getpos
	push 0
	push 1
	call anpopup_bkg,isin
	neg
	cmp0
	je l11549
	push act_id
	spushs
	push 0
	push 0
	spop $a
	call [$a],setframe
	push act_id
	spushs
	push 0
	push 0
	spop $a
	call [$a],setpos
	push act_id
	spushs
	push 4
	spop $a
	call [$a],setz
	push "null"
	pop act_id
l11549:
l11543:
l11538:
l11533:
l11532:
	call fxpopitem,play
	end method
	method all_inserted
	push "e1_mg33_skrzynia_slot1_occupied"
	call clsave,bis
	cmp0
	je l11551
	push "e1_mg33_skrzynia_slot2_occupied"
	call clsave,bis
	cmp0
	je l11551
	push "e1_mg33_skrzynia_slot3_occupied"
	call clsave,bis
	cmp0
	je l11551
	push "e1_mg33_skrzynia_slot4_occupied"
	call clsave,bis
	jmp l11553
l11551:
	push 0
	jmp l11553
l11552:
	push 1
l11553:
	cmp0
	je l11554
	push 1
	ret
	jmp l11550
l11554:
	push 0
	ret
l11550:
	end method
	method mouse_move
	push act_id
	push "null"
	cmpjne
	cmp0
	je l11556
	push act_id
	spushs
	call mouse,getpos
	spop $a
	call [$a],setpos
l11556:
	end method
	method USE_metalowa_czesc1
	cthis advsetstdstate
	call mouse,getpos
	push 1
	push 1
	call anpopup_bkg,isin
	cmp0
	je l11558
	push "metalowa_czesc1"
	cthis removefrompck
	push "e1_mg33_skrzynia_metalowa_czesc1_used"
	call clsave,bset
	push 500
	push "null"
	call anelement1_dziurka,anfadein
	call advmouse,setstd
	call fxpopitem,play
	jmp l11557
l11558:
	cthis item_gotopck
l11557:
	end method
	method USE_metalowa_czesc2
	cthis advsetstdstate
	call mouse,getpos
	push 1
	push 1
	call anpopup_bkg,isin
	cmp0
	je l11560
	push "metalowa_czesc2"
	cthis removefrompck
	push "e1_mg33_skrzynia_metalowa_czesc2_used"
	call clsave,bset
	push 500
	push "null"
	call ankawalek3,anfadein
	call advmouse,setstd
	call fxpopitem,play
	jmp l11559
l11560:
	cthis item_gotopck
l11559:
	end method
	method USE_klucz_skrzynia
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call ankey_slot,isin
	cmp0
	je l11562
	cthis all_inserted
	jmp l11564
l11562:
	push 0
	jmp l11564
l11563:
	push 1
l11564:
	cmp0
	je l11565
	push "klucz_skrzynia"
	cthis removefrompck
	push "e1_mg33_skrzynia_key_inserted"
	call clsave,bset
	push 500
	push "null"
	call anklucz_wlozony,anfadein
	push "take"
	call advmouse,set
	push "ankey_slot"
	call butgame,removebut
	call fxpopitem,play
	jmp l11561
l11565:
	cthis item_gotopck
	push "snd_key_not_yet"
	cthis cbplay
l11561:
	end method
	method anlampa1_TAKE
	call anmaska_lampa,show
	push "lampa1"
	cthis popitem_gotocenter
	cthis set_mg_finished
	end method
	method anlampa1_INPCK
	push "lampa1"
	cthis addtopck
	cthis timfinito
	end method
	method HINT_CLICK
	push "ma_metalowa_czesc1"
	call clsave,bis
	cmp0
	je l11567
	push "anpopup_bkg"
	cthis showhint
	push "metalowa_czesc1"
	cthis showhintitem
	jmp l11566
l11567:
	push "ma_metalowa_czesc2"
	call clsave,bis
	cmp0
	je l11569
	push "anpopup_bkg"
	cthis showhint
	push "metalowa_czesc2"
	cthis showhintitem
	jmp l11568
l11569:
	push "e1_mg33_skrzynia_metalowa_czesc1_used"
	call clsave,bis
	cmp0
	je l11571
	push "e1_mg33_skrzynia_metalowa_czesc2_used"
	call clsave,bis
	cmp0
	je l11571
	cthis all_inserted
	neg
	jmp l11573
l11571:
	push 0
	jmp l11573
l11572:
	push 1
l11573:
	cmp0
	je l11574
	push "e1_mg33_skrzynia_slot1_occupied"
	call clsave,bis
	neg
	cmp0
	je l11576
	push "anelement1_dziurka"
	cthis showhint
	push "anslot1_dziurka"
	cthis showhint
	jmp l11575
l11576:
	push "e1_mg33_skrzynia_slot2_occupied"
	call clsave,bis
	neg
	cmp0
	je l11578
	push "anslot2"
	cthis showhint
	push "ankawalek2"
	cthis showhint
	jmp l11577
l11578:
	push "e1_mg33_skrzynia_slot3_occupied"
	call clsave,bis
	neg
	cmp0
	je l11580
	push "anslot3"
	cthis showhint
	push "ankawalek3"
	cthis showhint
	jmp l11579
l11580:
	push "e1_mg33_skrzynia_slot4_occupied"
	call clsave,bis
	neg
	cmp0
	je l11582
	push "anslot4"
	cthis showhint
	push "ankawalek4"
	cthis showhint
l11582:
l11579:
l11577:
l11575:
	jmp l11570
l11574:
	cthis all_inserted
	cmp0
	je l11584
	push "ma_klucz_skrzynia"
	call clsave,bis
	jmp l11586
l11584:
	push 0
	jmp l11586
l11585:
	push 1
l11586:
	cmp0
	je l11587
	push "ankey_slot"
	cthis showhint
	push "klucz_skrzynia"
	cthis showhintitem
	jmp l11583
l11587:
	push "e1_mg33_skrzynia_key_inserted"
	call clsave,bis
	cmp0
	je l11589
	push "e1_mg33_skrzynia_skrzynia_otwarta"
	call clsave,bis
	neg
	jmp l11591
l11589:
	push 0
	jmp l11591
l11590:
	push 1
l11591:
	cmp0
	je l11592
	push "anklucz_wlozony"
	cthis showhint
	jmp l11588
l11592:
	push "e1_mg33_skrzynia_skrzynia_otwarta"
	call clsave,bis
	cmp0
	je l11594
	push "taken_lampa1"
	call clsave,bis
	neg
	jmp l11596
l11594:
	push 0
	jmp l11596
l11595:
	push 1
l11596:
	cmp0
	je l11597
	push "anlampa1"
	cthis showhint
	jmp l11593
l11597:
	push "anpopexit"
	cthis showhint
l11593:
l11588:
l11583:
l11570:
l11568:
l11566:
	end method
	method mend
	push "ad33_ukrytypokoj"
	push "gamead33_ukrytypokoj0"
	cthis stdexitdefadv
	end method
	end game

	game mg33_magiczna_kula
	parent Banshee
	method init
	push "mg33_magiczna_kula"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "kula.pyzH 3"
	push "woda1.pyzH 4"
	push "woda2.pyzH 5"
	push "woda3.pyzH 5"
	push "korek.pyzH 5"
	push "piorun1.pyzH 6"
	push "piorun2.pyz 6"
	push "piorun3.pyzH 7"
	push "piorun4.pyzH 8"
	push "piorun5.pyzH 8"
	push "lampa2.pyzH 8"
	push "pusta_kula.pyzH 9"
	push "cut_anim.pyzH 10"
	push "ramka.pyz 34"
	push "popexit.pyz 36"
	cthis imgs=
	push "e1_mg33_magiczna_kula_korek_inserted"
	call clsave,bis
	neg
	cmp0
	je l11599
	push A
	push "bgrpodziemia3N 70"
	push "niebieska_kulaN 60"
	push "korek_butelka"
	push "szklo_ciencie"
	cthis sfxs=
	jmp l11598
l11599:
	push A
	push "bgrpodziemia3N 70"
	push "szklo_ciencie"
	cthis sfxs=
l11598:
	push "snd_kula_pioruny"
	push "kinnat_c4d4_9"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_kula_pioruny,addmethod
	push "snd_kula"
	push "kinnat_c4d4_16"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_kula,addmethod
	push "taken_lampa2"
	call clsave,bis
	neg
	cmp0
	je l11601
	push "anlampa2"
	cthis setasitemtopck
	push 1
	call anlampa2,disable=
	push "e1_mg33_magiczna_kula_kula_wycieta"
	call clsave,bis
	cmp0
	je l11603
	call anlampa2,show
	push 0
	call anlampa2,disable=
l11603:
l11601:
	push "e1_mg33_magiczna_kula_korek_inserted"
	call clsave,bis
	neg
	cmp0
	je l11605
	push 0
	call anwoda1,play
	push 0
	call anwoda2,play
	push 1
	call anpiorun1,setdrawmode
	push 1
	call anpiorun2,setdrawmode
	push 0
	call anpiorun2,play
	push 1
	call anpiorun3,setdrawmode
	push 1
	call anpiorun4,setdrawmode
	push 0
	call anpiorun4,play
	push 1
	call anpiorun5,setdrawmode
	push 0
	call anpiorun5,play
	call anwoda3,anopacityframe
	push 0
	call anwoda3,play
l11605:
	call ancut_anim,mg33_magiczna_kula0
	call ankula,mg33_magiczna_kula2
	call ankorek,mg33_magiczna_kula9
	call anpopup_bkg,mg33_magiczna_kula12
	call imgbkg,mg33_magiczna_kula13
	cthis butpopexit
	push save_prefix
	push "intro_spoken"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l11615
	push "snd_intro"
	push "kinnat_c4d4_9a"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_intro,addmethod
	push "snd_intro"
	cthis cbplay
	push save_prefix
	push "intro_spoken"
	pop $b
	popax
	add $a,$b
	call clsave,bset
l11615:
	cthis stdstart
	end method
	method mg33_magiczna_kula0
	push "onfinish"
	push "mg33_magiczna_kula1"
	cthis addmethod
	end method
	method mg33_magiczna_kula1
	cthis hide
	end method
	method mg33_magiczna_kula2
	cthis Button_isinvis
	push "butmoveon"
	push "mg33_magiczna_kula3"
	cthis addmethod
	push "butmoveoff"
	push "mg33_magiczna_kula4"
	cthis addmethod
	push "butclick"
	push "mg33_magiczna_kula5"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg33_magiczna_kula3
	push "e1_mg33_magiczna_kula_kula_wycieta"
	call clsave,bis
	neg
	cmp0
	je l11607
	push "use"
	call advmouse,set
l11607:
	end method
	method mg33_magiczna_kula4
	call advmouse,setstd
	end method
	method mg33_magiczna_kula5
	cthis advstdstate
	neg
	cmp0
	je l11609
	ret
l11609:
	push "e1_mg33_magiczna_kula_korek_inserted"
	call clsave,bis
	neg
	cmp0
	je l11611
	push 10
	push "mg33_magiczna_kula6"
	call anpiorun3,anfadein
	push "snd_kula_pioruny"
	cthis cbplay
	jmp l11610
l11611:
	push "snd_kula"
	cthis cbplay
l11610:
	end method
	method mg33_magiczna_kula6
	push 200
	push "mg33_magiczna_kula7"
	call anpiorun3,anfadeout
	end method
	method mg33_magiczna_kula7
	push 10
	push "mg33_magiczna_kula8"
	call anpiorun1,anfadein
	end method
	method mg33_magiczna_kula8
	push 700
	push "null"
	call anpiorun1,anfadeout
	end method
	method mg33_magiczna_kula9
	cthis Button_isinvis
	push "butmoveon"
	push "mg33_magiczna_kula10"
	cthis addmethod
	push "butmoveoff"
	push "mg33_magiczna_kula11"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg33_magiczna_kula10
	push "use"
	call advmouse,set
	end method
	method mg33_magiczna_kula11
	call advmouse,setstd
	end method
	method mg33_magiczna_kula12
	cthis Button_isinalpha
	cthis getname
	call butgame,add
	end method
	method mg33_magiczna_kula13
	cthis Button_isinalpha
	push "butclick"
	push "mg33_magiczna_kula14"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg33_magiczna_kula14
	cthis advstdstate
	neg
	cmp0
	je l11613
	ret
l11613:
	cthis mend
	end method
	method stop_water
	push 0
	call anpiorun2,stop
	push 500
	push "null"
	call anpiorun2,anfadeout
	push 0
	call anpiorun3,stop
	push 500
	push "null"
	call anpiorun3,anfadeout
	push 0
	call anpiorun4,stop
	push 500
	push "null"
	call anpiorun4,anfadeout
	push 0
	call anpiorun5,stop
	push 500
	push "null"
	call anpiorun5,anfadeout
	push 0
	call anwoda1,stop
	push 800
	push "null"
	call anwoda1,anfadeout
	push 0
	call anwoda2,stop
	push 800
	push "null"
	call anwoda2,anfadeout
	push 0
	call anwoda3,stop
	push 800
	push "null"
	call anwoda3,anfadeout
	end method
	method USE_korek
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call ankorek,isin
	cmp0
	je l11617
	push "korek"
	cthis removefrompck
	call fxkorek_butelka,play
	push 200
	push "mg33_magiczna_kula15"
	call ankorek,anfadein
	push "e1_mg33_magiczna_kula_korek_inserted"
	call clsave,bset
	jmp l11616
l11617:
	cthis item_gotopck
l11616:
	end method
	method mg33_magiczna_kula15
	push 0
	call fxniebieska_kula,stop
	cthis stop_water
	end method
	method anlampa2_TAKE
	push 100
	push "null"
	call anpusta_kula,anfadein
	push "lampa2"
	cthis popitem_gotocenter
	cthis set_mg_finished
	end method
	method anlampa2_INPCK
	push "lampa2"
	cthis addtopck
	cthis timfinito
	end method
	method USE_noz_do_szkla
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call ankula,isin
	cmp0
	je l11619
	push "e1_mg33_magiczna_kula_korek_inserted"
	call clsave,bis
	jmp l11621
l11619:
	push 0
	jmp l11621
l11620:
	push 1
l11621:
	cmp0
	je l11622
	push "noz_do_szkla"
	cthis removefrompck
	push 0
	call ancut_anim,play
	push 500
	push "null"
	call anlampa2,anfadein
	push 0
	call anlampa2,disable=
	call fxszklo_ciencie,play
	push "e1_mg33_magiczna_kula_kula_wycieta"
	call clsave,bset
	call advmouse,setstd
	jmp l11618
l11622:
	cthis item_gotopck
l11618:
	end method
	method HINT_CLICK
	push "ma_korek"
	call clsave,bis
	cmp0
	je l11624
	push "ankorek"
	cthis showhint
	push "korek"
	cthis showhintitem
	jmp l11623
l11624:
	push "ma_noz_do_szkla"
	call clsave,bis
	cmp0
	je l11626
	push "ankula"
	cthis showhint
	push "noz_do_szkla"
	cthis showhintitem
	jmp l11625
l11626:
	push "ma_noz_do_szkla"
	call clsave,bis
	cmp0
	je l11628
	push "ankula"
	cthis showhint
	push "noz_do_szkla"
	cthis showhintitem
	jmp l11627
l11628:
	push "e1_mg33_magiczna_kula_kula_wycieta"
	call clsave,bis
	cmp0
	je l11630
	push "taken_lampa2"
	call clsave,bis
	neg
	jmp l11632
l11630:
	push 0
	jmp l11632
l11631:
	push 1
l11632:
	cmp0
	je l11633
	push "anlampa2"
	cthis showhint
	jmp l11629
l11633:
	push "anpopexit"
	cthis showhint
l11629:
l11627:
l11625:
l11623:
	end method
	method mend
	push "ad33_ukrytypokoj"
	push "gamead33_ukrytypokoj0"
	cthis stdexitdefadv
	end method
	end game

	game mg31_szkielet
	parent Banshee
	method init
	push "mg31_szkielet"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "noz_za_zebrami.pyzH 3"
	push "pogrzebacz_anim.pyzH 4"
	push "noz_do_szkla.pyzH 5"
	push "ramka.pyz 34"
	push "popexit.pyz 36"
	cthis imgs=
	push A
	push "bgrsala2N 70"
	push "fireN 5"
	cthis sfxs=
	push "annoz_do_szkla"
	cthis setasitemtopck
	push "e1_mg31_szkielet_pogrzebacz_uzyty"
	call clsave,bis
	neg
	cmp0
	je l11635
	call annoz_za_zebrami,show
	push "snd_cant_reach"
	push "kinnat_c4d4_12"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_cant_reach,addmethod
	call annoz_za_zebrami,mg31_szkielet0
	jmp l11634
l11635:
	push "taken_noz_do_szkla"
	call clsave,bis
	neg
	cmp0
	je l11641
	call anpogrzebacz_anim,show
	push 0
	push 14
	call anpogrzebacz_anim,setframe
	call annoz_do_szkla,show
l11641:
l11634:
	call anpogrzebacz_anim,mg31_szkielet4
	call anpopup_bkg,mg31_szkielet6
	call imgbkg,mg31_szkielet7
	cthis butpopexit
	cthis stdstart
	end method
	method mg31_szkielet0
	cthis Button_isinvis
	push "butmoveon"
	push "mg31_szkielet1"
	cthis addmethod
	push "butmoveoff"
	push "mg31_szkielet2"
	cthis addmethod
	push "butclick"
	push "mg31_szkielet3"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg31_szkielet1
	push "e1_mg31_szkielet_noz_clicked"
	call clsave,bis
	neg
	cmp0
	je l11637
	push "take"
	call advmouse,set
	jmp l11636
l11637:
	push "use"
	call advmouse,set
l11636:
	end method
	method mg31_szkielet2
	call advmouse,setstd
	end method
	method mg31_szkielet3
	cthis advstdstate
	neg
	cmp0
	je l11639
	ret
l11639:
	push "e1_mg31_szkielet_noz_clicked"
	call clsave,bset
	push "snd_cant_reach"
	cthis cbplay
	end method
	method mg31_szkielet4
	push "onfinish"
	push "mg31_szkielet5"
	cthis addmethod
	end method
	method mg31_szkielet5
	call annoz_do_szkla,show
	cthis advsetstdstate
	end method
	method mg31_szkielet6
	cthis Button_isinalpha
	cthis getname
	call butgame,add
	end method
	method mg31_szkielet7
	cthis Button_isinalpha
	push "butclick"
	push "mg31_szkielet8"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg31_szkielet8
	cthis advstdstate
	neg
	cmp0
	je l11643
	ret
l11643:
	cthis mend
	end method
	method annoz_do_szkla_TAKE
	call anpogrzebacz_anim,hide
	push "noz_do_szkla"
	cthis popitem_gotocenter
	cthis set_mg_finished
	end method
	method annoz_do_szkla_INPCK
	push "noz_do_szkla"
	cthis addtopck
	cthis timfinito
	end method
	method USE_pogrzebacz
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call annoz_za_zebrami,isin
	cmp0
	je l11645
	push "pogrzebacz"
	cthis removefrompck
	push "e1_mg31_szkielet_pogrzebacz_uzyty"
	call clsave,bset
	push 0
	call anpogrzebacz_anim,play
	call annoz_za_zebrami,hide
	push "annoz_za_zebrami"
	call butgame,removebut
	call advmouse,setstd
	jmp l11644
l11645:
	cthis item_gotopck
l11644:
	end method
	method HINT_CLICK
	push "ma_pogrzebacz"
	call clsave,bis
	cmp0
	je l11647
	push "pogrzebacz"
	cthis showhintitem
	push "annoz_za_zebrami"
	cthis showhint
	jmp l11646
l11647:
	push "e1_mg31_szkielet_pogrzebacz_uzyty"
	call clsave,bis
	cmp0
	je l11649
	push "taken_noz_do_szkla"
	call clsave,bis
	neg
	jmp l11651
l11649:
	push 0
	jmp l11651
l11650:
	push 1
l11651:
	cmp0
	je l11652
	push "annoz_do_szkla"
	cthis showhint
	jmp l11648
l11652:
	push "anpopexit"
	cthis showhint
l11648:
l11646:
	end method
	method mend
	push "ad31_salatortur"
	push "gamead31_salatortur0"
	cthis stdexitdefadv
	end method
	end game

	game mg31_wneka
	parent Banshee
	method init
	new int,popup2_open
	push "mg31_wneka"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "wneka.pyzH 3"
	push "bkg_light.pyzH 4"
	push "krata_open.pyzH 5"
	push "swieca.pyzH 6"
	push "swieca_plomien.pyzH 7"
	push "klodka.pyzH 8"
	push "ramka.pyz 14"
	push "popexit.pyz 16"
	push "talizman.pyzH 17"
	push "klodka_popup.pyzH 18"
	push "klodka_popup_popexit.pyzH 21"
	push "pokretlo1.pyzH 22"
	push "pokretlo2.pyzH 23"
	push "pokretlo3.pyzH 24"
	push "klodka_open.pyzH 25"
	push "klodka_popup_ramka.pyzH 26"
	cthis imgs=
	push A
	push "bgrsala2N 40"
	push "fireN 10"
	push "lockdoor1"
	push "cyk"
	push "obcegi"
	push "zawiasy 10"
	cthis sfxs=
	push "snd_dark"
	push "kinnat_c4d4_13"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_dark,addmethod
	cthis butpopexit
	push "mg_31"
	cthis askopis
	call anaskopis,hide
	call anpopexit,getcx
	call anaskopis,getw
	pop $b
	popax
	add $a,$b
	call anpopexit,getcy
	call anaskopis,geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call anaskopis,ansetbpos
	push "snd_nocode"
	push "kinnat_c4d4_14"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_nocode,addmethod
	push "snd_works"
	push "kinnat_c4d4_22"
	cthis newsndfree
	push "onfinish"
	push "mg31_wneka0"
	call snd_works,addmethod
	push "taken_talizman"
	call clsave,bis
	neg
	cmp0
	je l11656
	push "antalizman"
	cthis setasitemtopck
	push 1
	call antalizman,disable=
	push "e1_mg31_wneka_klodka_open"
	call clsave,bis
	cmp0
	je l11658
	call antalizman,show
	push 0
	call antalizman,disable=
l11658:
l11656:
	call anpopup_bkg,mg31_wneka1
	push "e1_mg31_wneka_klodka_open"
	call clsave,bis
	neg
	cmp0
	je l11662
	call anpokretlo1,mg31_wneka3
	call anpokretlo2,mg31_wneka7
	call anpokretlo3,mg31_wneka11
l11662:
	call imgbkg,mg31_wneka15
	push "e1_mg31_wneka_swieca_on"
	call clsave,bis
	neg
	cmp0
	je l11700
	call anwneka,mg31_wneka17
	jmp l11699
l11700:
	push "e1_mg31_wneka_klodka_otwarta"
	call clsave,bis
	neg
	cmp0
	je l11709
	call anbkg_light,show
l11709:
	call answieca,show
	push 0
	call answieca_plomien,play
l11699:
	push "e1_mg31_wneka_klodka_open"
	call clsave,bis
	neg
	cmp0
	je l11711
	call anklodka,mg31_wneka21
	jmp l11710
l11711:
	call ankrata_open,show
l11710:
	call anklodka_popup_popexit,mg31_wneka25
	cthis set_random_code
	cthis stdstart
	end method
	method mg31_wneka0
	push popup2_open
	cmp0
	je l11654
	cthis close_popup2
l11654:
	cthis advsetstdstate
	end method
	method mg31_wneka1
	cthis Button_isinalpha
	push "butclick"
	push "mg31_wneka2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg31_wneka2
	push popup2_open
	cmp0
	je l11660
	cthis close_popup2
l11660:
	end method
	method mg31_wneka3
	cthis Button_isinvis
	push "butmoveon"
	push "mg31_wneka4"
	cthis addmethod
	push "butmoveoff"
	push "mg31_wneka5"
	cthis addmethod
	push "butclick"
	push "mg31_wneka6"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg31_wneka4
	push popup2_open
	cmp0
	je l11664
	push "take"
	call advmouse,set
l11664:
	end method
	method mg31_wneka5
	call advmouse,setstd
	end method
	method mg31_wneka6
	push popup2_open
	neg
	cmp0
	je l11666
	ret
l11666:
	push "e1_add32_pracowania_kartka_z_kodem_shown"
	call clsave,bis
	neg
	cmp0
	je l11668
	push "snd_nocode"
	cthis cbplay
	jmp l11667
l11668:
	localint $1
	cthis framenr
	pop $1
	localint $2
	push 1
	popax
	sub 0,$a
	cthis nofframes
	pop $2
	add $1,1
	pop $1
	push $1
	push $2
	push 1
	pop $b
	popax
	sub $a,$b
	cmpja
	cmp0
	je l11670
	push 0
	pop $1
l11670:
	push 0
	push $1
	cthis setframe
	call fxcyk,play
	cthis check_szyfr
	cmp0
	je l11672
	cthis set_klodka_open
l11672:
l11667:
	end method
	method mg31_wneka7
	cthis Button_isinvis
	push "butmoveon"
	push "mg31_wneka8"
	cthis addmethod
	push "butmoveoff"
	push "mg31_wneka9"
	cthis addmethod
	push "butclick"
	push "mg31_wneka10"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg31_wneka8
	push popup2_open
	cmp0
	je l11674
	push "take"
	call advmouse,set
l11674:
	end method
	method mg31_wneka9
	call advmouse,setstd
	end method
	method mg31_wneka10
	push popup2_open
	neg
	cmp0
	je l11676
	ret
l11676:
	push popup2_open
	neg
	cmp0
	je l11678
	ret
l11678:
	push "e1_add32_pracowania_kartka_z_kodem_shown"
	call clsave,bis
	neg
	cmp0
	je l11680
	push "snd_nocode"
	cthis cbplay
	jmp l11679
l11680:
	localint $1
	cthis framenr
	pop $1
	localint $2
	push 1
	popax
	sub 0,$a
	cthis nofframes
	pop $2
	add $1,1
	pop $1
	push $1
	push $2
	push 1
	pop $b
	popax
	sub $a,$b
	cmpja
	cmp0
	je l11682
	push 0
	pop $1
l11682:
	push 0
	push $1
	cthis setframe
	call fxcyk,play
	cthis check_szyfr
	cmp0
	je l11684
	cthis set_klodka_open
l11684:
l11679:
	end method
	method mg31_wneka11
	cthis Button_isinvis
	push "butmoveon"
	push "mg31_wneka12"
	cthis addmethod
	push "butmoveoff"
	push "mg31_wneka13"
	cthis addmethod
	push "butclick"
	push "mg31_wneka14"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg31_wneka12
	push popup2_open
	cmp0
	je l11686
	push "take"
	call advmouse,set
l11686:
	end method
	method mg31_wneka13
	call advmouse,setstd
	end method
	method mg31_wneka14
	push popup2_open
	neg
	cmp0
	je l11688
	ret
l11688:
	push "e1_add32_pracowania_kartka_z_kodem_shown"
	call clsave,bis
	neg
	cmp0
	je l11690
	push "snd_nocode"
	cthis cbplay
	jmp l11689
l11690:
	localint $1
	cthis framenr
	pop $1
	localint $2
	push 1
	popax
	sub 0,$a
	cthis nofframes
	pop $2
	add $1,1
	pop $1
	push $1
	push $2
	push 1
	pop $b
	popax
	sub $a,$b
	cmpja
	cmp0
	je l11692
	push 0
	pop $1
l11692:
	push 0
	push $1
	cthis setframe
	call fxcyk,play
	cthis check_szyfr
	cmp0
	je l11694
	cthis set_klodka_open
l11694:
l11689:
	end method
	method mg31_wneka15
	cthis Button_isinalpha
	push "butclick"
	push "mg31_wneka16"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg31_wneka16
	cthis advstdstate
	neg
	cmp0
	je l11696
	ret
l11696:
	push popup2_open
	cmp0
	je l11698
	cthis close_popup2
	jmp l11697
l11698:
	cthis mend
l11697:
	end method
	method mg31_wneka17
	cthis Button_isinvis
	push "butmoveon"
	push "mg31_wneka18"
	cthis addmethod
	push "butmoveoff"
	push "mg31_wneka19"
	cthis addmethod
	push "butclick"
	push "mg31_wneka20"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg31_wneka18
	push "e1_mg31_wneka_swieca_on"
	call clsave,bis
	neg
	cmp0
	je l11702
	push "use"
	call advmouse,set
l11702:
	end method
	method mg31_wneka19
	call advmouse,setstd
	end method
	method mg31_wneka20
	cthis advstdstate
	neg
	cmp0
	jne l11705
	push "e1_mg31_wneka_swieca_on"
	call clsave,bis
	jmp l11706
l11704:
	push 0
	jmp l11706
l11705:
	push 1
l11706:
	cmp0
	je l11707
	ret
l11707:
	push "snd_dark"
	cthis cbplay
	end method
	method mg31_wneka21
	cthis Button_isinvis
	push "butmoveon"
	push "mg31_wneka22"
	cthis addmethod
	push "butmoveoff"
	push "mg31_wneka23"
	cthis addmethod
	push "butclick"
	push "mg31_wneka24"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg31_wneka22
	cthis advstdstate
	neg
	cmp0
	jne l11714
	push popup2_open
	jmp l11715
l11713:
	push 0
	jmp l11715
l11714:
	push 1
l11715:
	cmp0
	je l11716
	ret
l11716:
	push "e1_mg31_wneka_swieca_on"
	call clsave,bis
	cmp0
	je l11718
	push "e1_mg31_wneka_klodka_open"
	call clsave,bis
	neg
	jmp l11720
l11718:
	push 0
	jmp l11720
l11719:
	push 1
l11720:
	cmp0
	je l11721
	push "loupe"
	call advmouse,set
	jmp l11717
l11721:
	push "e1_mg31_wneka_swieca_on"
	call clsave,bis
	neg
	cmp0
	je l11723
	push "use"
	call advmouse,set
	jmp l11722
l11723:
	call advmouse,setstd
l11722:
l11717:
	end method
	method mg31_wneka23
	cthis advstdstate
	neg
	cmp0
	je l11725
	ret
l11725:
	call advmouse,setstd
	end method
	method mg31_wneka24
	cthis advstdstate
	neg
	cmp0
	jne l11728
	push popup2_open
	jmp l11729
l11727:
	push 0
	jmp l11729
l11728:
	push 1
l11729:
	cmp0
	je l11730
	ret
l11730:
	push "e1_mg31_wneka_swieca_on"
	call clsave,bis
	neg
	cmp0
	je l11732
	push "snd_dark"
	cthis cbplay
	jmp l11731
l11732:
	push popup2_open
	neg
	cmp0
	je l11734
	cthis open_popup2
l11734:
l11731:
	end method
	method mg31_wneka25
	cthis Button_isinalpha
	push "butmoveon"
	push "mg31_wneka26"
	cthis addmethod
	push "butmoveoff"
	push "mg31_wneka27"
	cthis addmethod
	push "butclick"
	push "mg31_wneka28"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg31_wneka26
	push popup2_open
	neg
	cmp0
	je l11736
	ret
l11736:
	call advmouse,setstd
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	end method
	method mg31_wneka27
	push popup2_open
	neg
	cmp0
	je l11738
	ret
l11738:
	call advmouse,setstd
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	end method
	method mg31_wneka28
	push popup2_open
	neg
	cmp0
	je l11740
	ret
l11740:
	push "null"
	cthis close_popup2
	end method
	method USE_swieca
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call anwneka,isin
	cmp0
	je l11742
	push "swieca"
	cthis removefrompck
	call fxobcegi,play
	push "e1_mg31_wneka_swieca_on"
	call clsave,bset
	push 400
	push "null"
	call anbkg_light,anfadein
	push 100
	push "null"
	call answieca,anfadein
	push 0
	call answieca_plomien,play
	call advmouse,setstd
	jmp l11741
l11742:
	cthis item_gotopck
l11741:
	end method
	method open_popup2
	push "e1_add32_pracowania_kartka_z_kodem_shown"
	call clsave,bis
	cmp0
	je l11744
	call guihint,switchtoskip
	call anaskopis,show
l11744:
	call advmouse,setstd
	push 1
	pop popup2_open
	call anklodka_popup,show
	call anklodka_popup_ramka,show
	call anklodka_popup_popexit,show
	call anpokretlo1,show
	call anpokretlo2,show
	call anpokretlo3,show
	end method
	method close_popup2
	push "e1_add32_pracowania_kartka_z_kodem_shown"
	call clsave,bis
	cmp0
	je l11746
	call guihint,switchtohint
	call anaskopis,hide
l11746:
	call advmouse,setstd
	push 0
	pop popup2_open
	call anklodka_popup,hide
	call anklodka_popup_ramka,hide
	call anklodka_popup_popexit,hide
	call anpokretlo1,hide
	call anpokretlo2,hide
	call anpokretlo3,hide
	push "e1_mg31_wneka_klodka_open"
	call clsave,bis
	cmp0
	je l11748
	call anklodka_open,hide
	push 0
	call antalizman,disable=
l11748:
	end method
	method check_szyfr
	call anpokretlo1,framenr
	push 0
	cmpjne
	cmp0
	je l11750
	push 0
	ret
	jmp l11749
l11750:
	call anpokretlo2,framenr
	push 0
	cmpjne
	cmp0
	je l11752
	push 0
	ret
	jmp l11751
l11752:
	call anpokretlo3,framenr
	push 0
	cmpjne
	cmp0
	je l11754
	push 0
	ret
l11754:
l11751:
l11749:
	push 1
	ret
	end method
	method set_klodka_open
	call anaskopis,hide
	push 300
	push "null"
	call anklodka_open,anfadein
	push 200
	push "null"
	call ankrata_open,anfadein
	push "e1_mg31_wneka_klodka_open"
	call clsave,bset
	push "anpokretlo1"
	call butgame,removebut
	push "anpokretlo2"
	call butgame,removebut
	push "anpokretlo3"
	call butgame,removebut
	push "anklodka"
	call butgame,removebut
	push 300
	push "mg31_wneka29"
	call antalizman,anfadein
	call fxlockdoor1,play
	call fxzawiasy,play
	call advmouse,setstd
	end method
	method mg31_wneka29
	push "snd_works"
	cthis cbplay
	end method
	method set_random_code
	push 1
	popax
	sub 0,$a
	push 5
	spushs
	spop $h
	call $h,rand
	call anpokretlo1,setframe
	push 1
	popax
	sub 0,$a
	push 3
	call anpokretlo2,setframe
	push 1
	popax
	sub 0,$a
	push 2
	call anpokretlo3,setframe
	end method
	method antalizman_TAKE
	push 100
	push "null"
	call antalizman,anfadein
	push "talizman"
	cthis popitem_gotocenter
	cthis set_mg_finished
	end method
	method antalizman_INPCK
	push "talizman"
	cthis addtopck
	cthis timfinito
	end method
	method SKIP_CLICK
	cthis advstdstate
	cmp0
	je l11756
	push "e1_add32_pracowania_kartka_z_kodem_shown"
	call clsave,bis
	cmp0
	je l11758
	cthis set_klodka_open
	call guihint,switchtohint
l11758:
l11756:
	end method
	method HINT_CLICK
	push "ma_swieca"
	call clsave,bis
	cmp0
	je l11760
	push "swieca"
	cthis showhintitem
	push "anwneka"
	cthis showhint
	jmp l11759
l11760:
	push popup2_open
	neg
	cmp0
	je l11762
	push "e1_add32_pracowania_kartka_z_kodem_shown"
	call clsave,bis
	jmp l11764
l11762:
	push 0
	jmp l11764
l11763:
	push 1
l11764:
	cmp0
	je l11765
	push "anklodka"
	cthis showhint
	jmp l11761
l11765:
	push popup2_open
	cmp0
	je l11767
	push "e1_add32_pracowania_kartka_z_kodem_shown"
	call clsave,bis
	neg
	cmp0
	je l11769
	push "anklodka_popup_popexit"
	cthis showhint
	jmp l11768
l11769:
	call anpokretlo1,framenr
	push 0
	cmpjne
	cmp0
	je l11771
	push "anpokretlo1"
	cthis showhint
	jmp l11770
l11771:
	call anpokretlo2,framenr
	push 0
	cmpjne
	cmp0
	je l11773
	push "anpokretlo2"
	cthis showhint
	jmp l11772
l11773:
	call anpokretlo3,framenr
	push 0
	cmpjne
	cmp0
	je l11775
	push "anpokretlo3"
	cthis showhint
	jmp l11774
l11775:
	push "e1_mg31_wneka_klodka_open"
	call clsave,bis
	cmp0
	je l11777
	push "antalizman"
	cthis showhint
	jmp l11776
l11777:
	push "anklodka_popup_popexit"
	cthis showhint
l11776:
l11774:
l11772:
l11770:
l11768:
	jmp l11766
l11767:
	push "anpopexit"
	cthis showhint
l11766:
l11761:
l11759:
	end method
	method mend
	push "ad31_salatortur"
	push "gamead31_salatortur0"
	cthis stdexitdefadv
	end method
	end game

	game mg32_stol
	parent Banshee
	method init
	new string,act_id
	push "null"
	pop act_id
	push "mg32_stol"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "stojak.pyzH 3"
	push "lejek.pyzH 4"
	push "niebiesko_zielony.pyzH 5"
	push "zielony.pyzH 6"
	push "zielono_czerwony.pyzH 6"
	push "czerwony.pyzH 6"
	push "niebiesko_zielony_nalewanie.pyzH 7"
	push "zielony_nalewanie.pyzH 7"
	push "zielono_czerwony_nalewanie.pyzH 7"
	push "czerwony_nalewanie.pyzH 7"
	push "kran.pyz 7"
	push "czerwony_wlany.pyzH 8"
	push "zielono_czerwony_wlany.pyzH 9"
	push "zielony_wlany.pyzH 10"
	push "niebiesko_zielony_wlany.pyzH 11"
	push "eliksir_podgrzany.pyzH 12"
	push "buteleczka.pyzH 14"
	push "fire.pyzH 14"
	push "eliksir_zycia.pyzH 15"
	push "tuby_efekt.pyzH 16"
	push "elixir_glow.pyzH 17"
	push "babelki1.pyzH 18"
	push "babelki2.pyzH 18"
	push "babelki3.pyzH 18"
	push "ramka.pyz 15"
	push "przepis.pyzH 16"
	push "popexit.pyz 17"
	cthis imgs=
	push A
	push "bgrpodziemia3N 30"
	push "fireN 10"
	push "wlewa"
	push "laboratorium"
	push "magical"
	push "click"
	push "openwindow 20"
	cthis sfxs=
	call anfire,anopacityframe
	call antuby_efekt,anopacityframe
	call anbabelki1,anopacityframe
	call anbabelki2,anopacityframe
	call anbabelki3,anopacityframe
	cthis butpopexit
	cthis butpopexitisinramka
	push "zielono_czerwony"
	cthis init_anim_onfinish
	push "czerwony"
	cthis init_anim_onfinish
	push "niebiesko_zielony"
	cthis init_anim_onfinish
	push "zielony"
	cthis init_anim_onfinish
	push "e1_mg32_stol_buteleczka_stoi"
	call clsave,bis
	cmp0
	je l11779
	push "taken_eliksir_zycia"
	call clsave,bis
	neg
	jmp l11781
l11779:
	push 0
	jmp l11781
l11780:
	push 1
l11781:
	cmp0
	je l11782
	call anbuteleczka,show
l11782:
	push "e1_mg32_stol_ogien_zapalony"
	call clsave,bis
	neg
	cmp0
	je l11784
	push 0
	call fxlaboratorium,stop
	call anfire,mg32_stol0
	jmp l11783
l11784:
	push 0
	call anfire,play
	call aneliksir_podgrzany,show
	push 0
	call antuby_efekt,play
	push 0
	call anbabelki1,play
	push 0
	call anbabelki2,play
	push 0
	call anbabelki3,play
	call fxlaboratorium,playloop
l11783:
	push "e1_mg32_stol_wszystko_wlane"
	call clsave,bis
	neg
	cmp0
	je l11790
	push "snd_zla_butelka"
	push "kinnat_c4d4_50"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_zla_butelka,addmethod
	call anlejek,mg32_stol5
l11790:
	push "snd_brak_przepisu"
	push "kinnat_c4d4_50b"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_brak_przepisu,addmethod
	push "e1_mg32_stol_buteleczka_nalana"
	call clsave,bis
	neg
	cmp0
	je l11798
	push "snd_podgrzac"
	push "kinnat_c4d4_50a"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_podgrzac,addmethod
	call ankran,mg32_stol11
l11798:
	push "taken_eliksir_zycia"
	call clsave,bis
	neg
	cmp0
	je l11807
	push "aneliksir_zycia"
	cthis setasitemtopck
	call aneliksir_zycia,show
	push "e1_mg32_stol_buteleczka_nalana"
	call clsave,bis
	neg
	cmp0
	je l11809
	call aneliksir_zycia,butdisable
	call aneliksir_zycia,hide
l11809:
l11807:
	push "niebiesko_zielony"
	cthis init_buteleczka
	push "zielony"
	cthis init_buteleczka
	push "zielono_czerwony"
	cthis init_buteleczka
	push "czerwony"
	cthis init_buteleczka
	push "e1_mg44_wiadro_instrukcja_eliksir_wzieta"
	call clsave,bis
	cmp0
	je l11811
	call anprzepis,show
l11811:
	cthis stdstart
	end method
	method mg32_stol0
	push "isbutin"
	push "mg32_stol1"
	cthis addmethod
	push "butmoveon"
	push "mg32_stol2"
	cthis addmethod
	push "butmoveoff"
	push "mg32_stol3"
	cthis addmethod
	push "butclick"
	push "mg32_stol4"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg32_stol1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	end method
	method mg32_stol2
	push "take"
	call advmouse,set
	end method
	method mg32_stol3
	call advmouse,setstd
	end method
	method mg32_stol4
	cthis advstdstate
	neg
	cmp0
	je l11786
	ret
l11786:
	push "e1_mg32_stol_wszystko_wlane"
	call clsave,bis
	cmp0
	je l11788
	push "e1_mg32_stol_ogien_zapalony"
	call clsave,bset
	push 0
	cthis play
	call advmouse,setstd
	cthis getname
	call butgame,removebut
	push 500
	push "null"
	call aneliksir_podgrzany,anfadein
	push 0
	call antuby_efekt,play
	push 0
	call anbabelki1,play
	push 0
	call anbabelki2,play
	push 0
	call anbabelki3,play
	call fxlaboratorium,playloop
l11788:
	end method
	method mg32_stol5
	push "isbutin"
	push "mg32_stol6"
	cthis addmethod
	push "butmoveon"
	push "mg32_stol7"
	cthis addmethod
	push "butmoveoff"
	push "mg32_stol8"
	cthis addmethod
	push "butclick"
	push "mg32_stol9"
	cthis addmethod
	push "butrel"
	push "mg32_stol10"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg32_stol6
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	end method
	method mg32_stol7
	push "use"
	call advmouse,set
	end method
	method mg32_stol8
	call advmouse,setstd
	end method
	method mg32_stol9
	cthis advstdstate
	neg
	cmp0
	je l11792
	ret
l11792:
	push act_id
	push "null"
	cmpje
	cmp0
	je l11794
	ret
l11794:
	push "e1_mg44_wiadro_instrukcja_eliksir_wzieta"
	call clsave,bis
	neg
	cmp0
	je l11796
	push "snd_brak_przepisu"
	cthis cbplay
	push act_id
	cthis move_back_id
	jmp l11795
l11796:
	push act_id
	cthis check_elixir
l11795:
	call advmouse,setstd
	end method
	method mg32_stol10
	cthis butclick
	end method
	method mg32_stol11
	push "isbutin"
	push "mg32_stol12"
	cthis addmethod
	push "butmoveon"
	push "mg32_stol13"
	cthis addmethod
	push "butmoveoff"
	push "mg32_stol14"
	cthis addmethod
	push "butclick"
	push "mg32_stol15"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg32_stol12
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	end method
	method mg32_stol13
	push "take"
	call advmouse,set
	end method
	method mg32_stol14
	call advmouse,setstd
	end method
	method mg32_stol15
	cthis advstdstate
	neg
	cmp0
	je l11800
	ret
l11800:
	push "e1_mg32_stol_ogien_zapalony"
	call clsave,bis
	cmp0
	je l11802
	push "e1_mg32_stol_buteleczka_stoi"
	call clsave,bis
	jmp l11804
l11802:
	push 0
	jmp l11804
l11803:
	push 1
l11804:
	cmp0
	je l11805
	push "e1_mg32_stol_buteleczka_nalana"
	call clsave,bset
	cthis getname
	call butgame,removebut
	push 1
	cthis play
	call fxopenwindow,play
	call fxmagical,play
	call advmouse,setstd
	push 500
	push "null"
	call aneliksir_zycia,anfadein
	call aneliksir_zycia,butenable
	push 1000
	push "mg32_stol16"
	call anelixir_glow,anfadein
l11805:
	end method
	method mg32_stol16
	push 1000
	push "null"
	call anelixir_glow,anfadeout
	end method
	method USE_eliksir_czerwony
	push "czerwony"
	cthis use_eliksir
	end method
	method USE_eliksir_zielono_czerwony
	push "zielono_czerwony"
	cthis use_eliksir
	end method
	method USE_eliksir_niebiesko_zielony
	push "niebiesko_zielony"
	cthis use_eliksir
	end method
	method USE_eliksir_zielony
	push "zielony"
	cthis use_eliksir
	end method
	method USE_buteleczka
	cthis advsetstdstate
	push "e1_mg32_stol_buteleczka_stoi"
	call clsave,bset
	push 500
	push "null"
	call anbuteleczka,anfadein
	push "buteleczka"
	cthis removefrompck
	end method
	method aneliksir_zycia_TAKE
	call anbuteleczka,hide
	cthis set_mg_finished
	push "eliksir_zycia"
	cthis popitem_gotocenter
	end method
	method aneliksir_zycia_INPCK
	push "eliksir_zycia"
	cthis addtopck
	cthis timfinito
	end method
	method check_elixir
	localstring $1
	pop $1
	push $1
	push "anniebiesko_zielony"
	cmpje
	cmp0
	je l11813
	push "e1_mg32_stol_zielony_nalany"
	call clsave,bis
	cmp0
	je l11815
	push "niebiesko_zielony"
	cthis click_on_lejek
	push "e1_mg32_stol_wszystko_wlane"
	call clsave,bset
	push "anlejek"
	call butgame,removebut
	push "anniebiesko_zielony"
	call butgame,removebut
	jmp l11814
l11815:
	push "snd_zla_butelka"
	cthis cbplay
	push "niebiesko_zielony"
	cthis move_back
l11814:
	jmp l11812
l11813:
	push $1
	push "anzielony"
	cmpje
	cmp0
	je l11817
	push "e1_mg32_stol_zielono_czerwony_nalany"
	call clsave,bis
	cmp0
	je l11819
	push "zielony"
	cthis click_on_lejek
	push "anzielony"
	call butgame,removebut
	jmp l11818
l11819:
	push "snd_zla_butelka"
	cthis cbplay
	push "zielony"
	cthis move_back
l11818:
	jmp l11816
l11817:
	push $1
	push "anzielono_czerwony"
	cmpje
	cmp0
	je l11821
	push "e1_mg32_stol_czerwony_nalany"
	call clsave,bis
	cmp0
	je l11823
	push "zielono_czerwony"
	cthis click_on_lejek
	push "anzielono_czerwony"
	call butgame,removebut
	jmp l11822
l11823:
	push "snd_zla_butelka"
	cthis cbplay
	push "zielono_czerwony"
	cthis move_back
l11822:
	jmp l11820
l11821:
	push $1
	push "anczerwony"
	cmpje
	cmp0
	je l11825
	push "czerwony"
	cthis click_on_lejek
	push "anczerwony"
	call butgame,removebut
l11825:
l11820:
l11816:
l11812:
	end method
	method use_eliksir
	localstring $1
	pop $1
	cthis advsetstdstate
	push "e1_mg44_wiadro_instrukcja_eliksir_wzieta"
	call clsave,bis
	neg
	cmp0
	je l11827
	push "snd_brak_przepisu"
	cthis cbplay
	push "e1_mg32_stol_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_uzyty"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	push "eliksir_"
	push $1
	pop $b
	popax
	add $a,$b
	cthis removefrompck
	push $1
	cthis move_back
	jmp l11826
l11827:
	push "e1_mg32_stol_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_uzyty"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	push $1
	cthis init_buteleczka
	call mouse,getpos
	push 0
	push 0
	call anlejek,isin
	cmp0
	je l11829
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	cthis check_elixir
	jmp l11828
l11829:
	push $1
	cthis move_back
l11828:
	push "eliksir_"
	push $1
	pop $b
	popax
	add $a,$b
	cthis removefrompck
l11826:
	end method
	method click_on_lejek
	localstring $1
	pop $1
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	push "_nalewanie"
	pop $b
	popax
	add $a,$b
	spushs
	push 0
	spop $a
	call [$a],play
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],hide
	push "e1_mg32_stol_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_nalany"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	call butgame,removebut
	push "null"
	pop act_id
	end method
	method move_back
	localstring $1
	pop $1
	push "e1_mg32_stol_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_uzyty"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	push $1
	cthis init_buteleczka
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 5
	spop $a
	call [$a],setz
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 0
	spop $a
	call [$a],play
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 0
	push 0
	spop $a
	call [$a],setpos
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 500
	push "null"
	spop $a
	call [$a],anfadein
	push "null"
	pop act_id
	call fxclick,play
	end method
	method move_back_id
	localstring $1
	pop $1
	push $1
	spushs
	push 5
	spop $a
	call [$a],setz
	push $1
	spushs
	push 0
	spop $a
	call [$a],play
	push $1
	spushs
	push 0
	push 0
	spop $a
	call [$a],setpos
	push $1
	spushs
	push 500
	push "null"
	spop $a
	call [$a],anfadein
	push "null"
	pop act_id
	call fxclick,play
	end method
	method init_anim_onfinish
	localstring $1
	pop $1
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	push "_nalewanie"
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	spop $a
	call [$a],mg32_stol17
	end method
	method mg32_stol17
	localstring $1
	pop $1
	push A
	push "name"
	push $1
	cthis vars2
	push "onfinish"
	push "mg32_stol18"
	cthis addmethod
	end method
	method mg32_stol18
	cthis hide
	push "an"
	cthis name
	pop $b
	popax
	add $a,$b
	spushs
	push 5
	spop $a
	call [$a],setz
	push "an"
	cthis name
	pop $b
	popax
	add $a,$b
	spushs
	push 0
	push 0
	spop $a
	call [$a],setpos
	push "an"
	cthis name
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	spop $a
	call [$a],play
	push "an"
	cthis name
	pop $b
	popax
	add $a,$b
	spushs
	push 500
	push "null"
	spop $a
	call [$a],anfadein
	push "an"
	cthis name
	pop $b
	popax
	add $a,$b
	push "_wlany"
	pop $b
	popax
	add $a,$b
	spushs
	push 500
	push "null"
	spop $a
	call [$a],anfadein
	push "e1_mg32_stol_wszystko_wlane"
	call clsave,bis
	cmp0
	je l11831
	push "snd_podgrzac"
	cthis cbplay
l11831:
	end method
	method init_buteleczka
	localstring $1
	pop $1
	push "e1_mg32_stol_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_uzyty"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l11833
	ret
l11833:
	push "e1_mg32_stol_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_nalany"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l11835
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],mg32_stol19
	jmp l11834
l11835:
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	spop $a
	call [$a],play
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	push "_wlany"
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],show
l11834:
	end method
	method mg32_stol19
	cthis show
	push "isbutin"
	push "mg32_stol20"
	cthis addmethod
	push "butmoveon"
	push "mg32_stol21"
	cthis addmethod
	push "butmoveoff"
	push "mg32_stol22"
	cthis addmethod
	push "butclick"
	push "mg32_stol23"
	cthis addmethod
	push "butrel"
	push "mg32_stol24"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg32_stol20
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	cmp0
	je l11836
	call mouse,getpos
	push 0
	push 0
	call anlejek,isin
	neg
	jmp l11838
l11836:
	push 0
	jmp l11838
l11837:
	push 1
l11838:
	end method
	method mg32_stol21
	push "take"
	call advmouse,set
	end method
	method mg32_stol22
	call advmouse,setstd
	end method
	method mg32_stol23
	cthis advstdstate
	neg
	cmp0
	je l11840
	ret
l11840:
	push act_id
	push "null"
	cmpje
	cmp0
	je l11842
	cthis getname
	pop act_id
	push 500
	cthis setz
	push 2
	cthis play
	call mouse,getpos
	cthis setpos
	call fxclick,play
	jmp l11841
l11842:
	push act_id
	cthis getname
	cmpje
	cmp0
	je l11844
	push "null"
	pop act_id
	push 5
	cthis setz
	push 0
	cthis play
	push 0
	push 0
	cthis setpos
	call fxclick,play
l11844:
l11841:
	end method
	method mg32_stol24
	cthis butclick
	end method
	method mouse_move
	push act_id
	push "null"
	cmpjne
	cmp0
	je l11846
	push act_id
	spushs
	call mouse,getpos
	spop $a
	call [$a],setpos
	push act_id
	spushs
	push 2
	spop $a
	call [$a],play
l11846:
	end method
	method HINT_CLICK
	push "e1_mg44_wiadro_instrukcja_eliksir_wzieta"
	call clsave,bis
	neg
	cmp0
	je l11848
	push "anpopexit"
	cthis showhint
	ret
l11848:
	push "e1_mg32_stol_czerwony_nalany"
	call clsave,bis
	neg
	cmp0
	je l11850
	push "ma_eliksir_czerwony"
	call clsave,bis
	cmp0
	je l11852
	push "eliksir_czerwony"
	cthis showhintitem
	push "anlejek"
	cthis showhint
	jmp l11851
l11852:
	push "e1_mg32_stol_czerwony_uzyty"
	call clsave,bis
	cmp0
	je l11854
	push "anlejek"
	cthis showhint
	push "anczerwony"
	cthis showhint
	jmp l11853
l11854:
	push "anpopexit"
	cthis showhint
l11853:
l11851:
	jmp l11849
l11850:
	push "e1_mg32_stol_czerwony_nalany"
	call clsave,bis
	cmp0
	je l11856
	push "e1_mg32_stol_zielono_czerwony_nalany"
	call clsave,bis
	neg
	jmp l11858
l11856:
	push 0
	jmp l11858
l11857:
	push 1
l11858:
	cmp0
	je l11859
	push "ma_eliksir_zielono_czerwony"
	call clsave,bis
	cmp0
	je l11861
	push "eliksir_zielono_czerwony"
	cthis showhintitem
	push "anlejek"
	cthis showhint
	jmp l11860
l11861:
	push "e1_mg32_stol_zielono_czerwony_uzyty"
	call clsave,bis
	cmp0
	je l11863
	push "anlejek"
	cthis showhint
	push "anzielono_czerwony"
	cthis showhint
	jmp l11862
l11863:
	push "anpopexit"
	cthis showhint
l11862:
l11860:
	jmp l11855
l11859:
	push "e1_mg32_stol_zielono_czerwony_nalany"
	call clsave,bis
	cmp0
	je l11865
	push "e1_mg32_stol_zielony_nalany"
	call clsave,bis
	neg
	jmp l11867
l11865:
	push 0
	jmp l11867
l11866:
	push 1
l11867:
	cmp0
	je l11868
	push "ma_eliksir_zielony"
	call clsave,bis
	cmp0
	je l11870
	push "eliksir_zielony"
	cthis showhintitem
	push "anlejek"
	cthis showhint
	jmp l11869
l11870:
	push "e1_mg32_stol_zielony_uzyty"
	call clsave,bis
	cmp0
	je l11872
	push "anlejek"
	cthis showhint
	push "anzielony"
	cthis showhint
	jmp l11871
l11872:
	push "anpopexit"
	cthis showhint
l11871:
l11869:
	jmp l11864
l11868:
	push "e1_mg32_stol_zielony_nalany"
	call clsave,bis
	cmp0
	je l11874
	push "e1_mg32_stol_niebiesko_zielony_nalany"
	call clsave,bis
	neg
	jmp l11876
l11874:
	push 0
	jmp l11876
l11875:
	push 1
l11876:
	cmp0
	je l11877
	push "ma_eliksir_niebiesko_zielony"
	call clsave,bis
	cmp0
	je l11879
	push "eliksir_niebiesko_zielony"
	cthis showhintitem
	push "anlejek"
	cthis showhint
	jmp l11878
l11879:
	push "e1_mg32_stol_niebiesko_zielony_uzyty"
	call clsave,bis
	cmp0
	je l11881
	push "anlejek"
	cthis showhint
	push "anniebiesko_zielony"
	cthis showhint
	jmp l11880
l11881:
	push "anpopexit"
	cthis showhint
l11880:
l11878:
	jmp l11873
l11877:
	push "e1_mg32_stol_niebiesko_zielony_nalany"
	call clsave,bis
	cmp0
	je l11883
	push "e1_mg32_stol_ogien_zapalony"
	call clsave,bis
	neg
	jmp l11885
l11883:
	push 0
	jmp l11885
l11884:
	push 1
l11885:
	cmp0
	je l11886
	push "anfire"
	cthis showhint
	jmp l11882
l11886:
	push "ma_buteleczka"
	call clsave,bis
	cmp0
	je l11888
	push "e1_mg32_stol_buteleczka_stoi"
	call clsave,bis
	neg
	jmp l11890
l11888:
	push 0
	jmp l11890
l11889:
	push 1
l11890:
	cmp0
	je l11891
	push "buteleczka"
	cthis showhintitem
	push "anbuteleczka"
	cthis showhint
	jmp l11887
l11891:
	push "e1_mg32_stol_buteleczka_stoi"
	call clsave,bis
	cmp0
	je l11893
	push "e1_mg32_stol_buteleczka_nalana"
	call clsave,bis
	neg
	jmp l11895
l11893:
	push 0
	jmp l11895
l11894:
	push 1
l11895:
	cmp0
	je l11896
	push "ankran"
	cthis showhint
	jmp l11892
l11896:
	push "e1_mg32_stol_buteleczka_nalana"
	call clsave,bis
	cmp0
	je l11898
	push "taken_eliksir_zycia"
	call clsave,bis
	neg
	jmp l11900
l11898:
	push 0
	jmp l11900
l11899:
	push 1
l11900:
	cmp0
	je l11901
	push "aneliksir_zycia"
	cthis showhint
	jmp l11897
l11901:
	push "anpopexit"
	cthis showhint
l11897:
l11892:
l11887:
l11882:
l11873:
l11864:
l11855:
l11849:
	end method
	method mend
	push "ad32_pracownia"
	push "gamead32_pracownia0"
	cthis stdexitdefadv
	end method
	end game

	game mg40_kosz
	parent Banshee
	method init
	push "mg40_kosz"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "kwadrat_1.pyzH 3"
	push "popexit.pyz 45"
	push "ramka.pyz 42"
	cthis imgs=
	push A
	push "bgrmorze3N 10"
	cthis sfxs=
	cthis butpopexit
	cthis butpopexitisinramka
	push "takenan_ankwadrat_1"
	call clsave,bis
	neg
	cmp0
	je l11903
	call ankwadrat_1,show
	push "ankwadrat_1"
	cthis setasitemtopck
l11903:
	cthis stdstart
	end method
	method ankwadrat_1_TAKE
	push "kwadrat"
	cthis stackitem_topck
	cthis set_mg_finished
	end method
	method ankwadrat_1_INPCK
	push "kwadrat"
	cthis additemtostack
	cthis timfinito
	end method
	method mend
	push "ad40_pomost"
	push "gamead40_pomost0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "takenan_ankwadrat_1"
	call clsave,bis
	neg
	cmp0
	je l11905
	push "ankwadrat_1"
	cthis showhint
	jmp l11904
l11905:
	push "anpopexit"
	cthis showhint
l11904:
	end method
	end game

	game mg40_okno
	parent Banshee
	method init
	push "mg40_okno"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "okno_otwarte.pyzH 3"
	push "popexit.pyz 45"
	push "ramka.pyz 42"
	cthis imgs=
	push A
	push "bgrmorze3N 10"
	push "openwindow"
	cthis sfxs=
	cthis butpopexit
	cthis butpopexitisinramka
	push "e1_mg40_okno_otwarte"
	call clsave,bis
	neg
	cmp0
	je l11907
	push "okno_snd"
	push "kinnat_c4d4_29"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call okno_snd,addmethod
l11907:
	call anokno_otwarte,mg40_okno0
	push save_prefix
	push "intro_spoken"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l11923
	push "snd_intro"
	push "kinnat_c4d4_29b"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_intro,addmethod
	push "snd_intro"
	cthis cbplay
	push save_prefix
	push "intro_spoken"
	pop $b
	popax
	add $a,$b
	call clsave,bset
l11923:
	cthis stdstart
	end method
	method mg40_okno0
	push "e1_mg40_okno_otwarte"
	call clsave,bis
	cmp0
	je l11909
	cthis show
l11909:
	cthis Button_isinvis
	push "butmoveon"
	push "mg40_okno1"
	cthis addmethod
	push "butmoveoff"
	push "mg40_okno2"
	cthis addmethod
	push "butclick"
	push "mg40_okno3"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg40_okno1
	cthis advstdstate
	neg
	cmp0
	je l11911
	push sgmstate
	push "getitem"
	cmpjne
	jmp l11913
l11911:
	push 0
	jmp l11913
l11912:
	push 1
l11913:
	cmp0
	jne l11915
	push "e1_mg40_okno_otwarte"
	call clsave,bis
	jmp l11916
l11914:
	push 0
	jmp l11916
l11915:
	push 1
l11916:
	cmp0
	je l11917
	ret
l11917:
	push "use"
	call advmouse,set
	end method
	method mg40_okno2
	call advmouse,setstd
	end method
	method mg40_okno3
	cthis advstdstate
	neg
	cmp0
	je l11919
	ret
l11919:
	push "e1_mg40_okno_otwarte"
	call clsave,bis
	neg
	cmp0
	je l11921
	push "okno_snd"
	cthis cbplay
l11921:
	end method
	method USE_lom
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call anokno_otwarte,isin
	cmp0
	je l11925
	call fxopenwindow,play
	push "lom"
	cthis removefrompck
	push "anokno_otwarte"
	call butgame,removebut
	push "e1_mg40_okno_otwarte"
	call clsave,bset
	call advmouse,setstd
	cthis set_mg_finished
	push 500
	push "timfinito"
	call anokno_otwarte,anfadein
	jmp l11924
l11925:
	cthis item_gotopck
l11924:
	end method
	method mend
	push "ad40_pomost"
	push "gamead40_pomost0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "ma_lom"
	call clsave,bis
	cmp0
	je l11927
	push "lom"
	cthis showhintitem
	push "anokno_otwarte"
	cthis showhint
	jmp l11926
l11927:
	push "anpopexit"
	cthis showhint
l11926:
	end method
	end game

	game mg41_armata
	parent Banshee
	method init
	push "mg41_armata"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "kwadrat_2.pyzH 3"
	push "popexit.pyz 45"
	push "ramka.pyz 42"
	cthis imgs=
	push A
	push "bgrmorze3N 10"
	cthis sfxs=
	cthis butpopexit
	cthis butpopexitisinramka
	push "takenan_ankwadrat_2"
	call clsave,bis
	neg
	cmp0
	je l11929
	push "ankwadrat_2"
	cthis setasitemtopck
	push "ankwadrat_2"
	cthis gui_toloupe
	call ankwadrat_2,mg41_armata0
l11929:
	cthis stdstart
	end method
	method mg41_armata0
	push "isbutin"
	push "mg41_armata1"
	cthis addmethod
	end method
	method mg41_armata1
	localint $1
	localint $2
	pop $2
	pop $1
	cthis advstdstate
	cmp0
	je l11930
	push $1
	push $2
	push 0
	push 0
	cthis isin
	cmp0
	je l11930
	cthis loupe_visible
	jmp l11932
l11930:
	push 0
	jmp l11932
l11931:
	push 1
l11932:
	end method
	method ankwadrat_2_TAKE
	push "ankwadrat_2"
	cthis gui_removefromloupe
	call ankwadrat_2,show
	push "kwadrat"
	cthis stackitem_topck
	cthis set_mg_finished
	end method
	method ankwadrat_2_INPCK
	push "kwadrat"
	cthis additemtostack
	cthis timfinito
	end method
	method mend
	push "ad41_statek"
	push "gamead41_statek0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "takenan_ankwadrat_2"
	call clsave,bis
	neg
	cmp0
	je l11934
	push "ankwadrat_2"
	cthis showhint2v
	push "guiglass"
	cthis showhint2v
	jmp l11933
l11934:
	push "anpopexit"
	cthis showhint
l11933:
	end method
	end game

	game mg41_trup
	parent Banshee
	method init
	push "mg41_trup"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "szczeka_anim.pyz 3"
	push "trup.pyzH 4"
	push "gwiazda.pyz 5"
	push "trup_swiatlo.pyzH 6"
	push "opaska.pyzH 7"
	push "kapelusz.pyzH 8"
	push "popexit.pyz 45"
	push "ramka.pyz 42"
	cthis imgs=
	push A
	push "bgrmorze3N 10"
	cthis sfxs=
	cthis butpopexit
	cthis butpopexitisinramka
	push "e1_mg41_trup_kapelusz_in"
	call clsave,bis
	cmp0
	je l11936
	call ankapelusz,show
l11936:
	push "e1_mg41_trup_opaska_in"
	call clsave,bis
	cmp0
	je l11938
	call anopaska,show
l11938:
	push "taken_gwiazda"
	call clsave,bis
	neg
	cmp0
	je l11940
	call angwiazda,show
	push "angwiazda"
	cthis setasitemtopck
	push "snd_cant_take"
	push "trup_c4d4_30"
	cthis newsndfree
	push "onfinish"
	push "mg41_trup0"
	call snd_cant_take,addmethod
	push "snd_all_done"
	push "trup_c4d4_35"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_all_done,addmethod
l11940:
	push "e1_mg41_trup_gwiazda_dostepna"
	call clsave,bis
	neg
	cmp0
	je l11942
	call antrup,mg41_trup1
l11942:
	cthis stdstart
	end method
	method mg41_trup0
	cthis advsetstdstate
	push 0
	call anszczeka_anim,play
	push 1000
	push "null"
	call antrup_swiatlo,anfadeout
	end method
	method mg41_trup1
	push "isbutin"
	push "mg41_trup2"
	cthis addmethod
	push "butmoveon"
	push "mg41_trup3"
	cthis addmethod
	push "butmoveoff"
	push "mg41_trup4"
	cthis addmethod
	push "butclick"
	push "mg41_trup5"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg41_trup2
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 1
	cthis isin
	end method
	method mg41_trup3
	cthis advstdstate
	neg
	cmp0
	je l11944
	push sgmstate
	push "getitem"
	cmpjne
	jmp l11946
l11944:
	push 0
	jmp l11946
l11945:
	push 1
l11946:
	cmp0
	jne l11948
	push "e1_mg41_trup_gwiazda_dostepna"
	call clsave,bis
	jmp l11949
l11947:
	push 0
	jmp l11949
l11948:
	push 1
l11949:
	cmp0
	je l11950
	ret
l11950:
	push "use"
	call advmouse,set
	end method
	method mg41_trup4
	call advmouse,setstd
	end method
	method mg41_trup5
	cthis advstdstate
	neg
	cmp0
	je l11952
	ret
l11952:
	end method
	method USE_kapelusz_pirata
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call antrup,isin
	cmp0
	je l11954
	push "kapelusz_pirata"
	cthis removefrompck
	push 500
	push "null"
	call ankapelusz,anfadein
	push "e1_mg41_trup_kapelusz_in"
	call clsave,bset
	push 1000
	push "mg41_trup6"
	call antrup_swiatlo,anfadein
	push "e1_mg41_trup_opaska_in"
	call clsave,bis
	cmp0
	je l11956
	push "e1_mg41_trup_gwiazda_dostepna"
	call clsave,bset
	push "antrup"
	call butgame,removebut
	push "snd_all_done"
	cthis cbplay
l11956:
	call advmouse,setstd
	jmp l11953
l11954:
	cthis item_gotopck
l11953:
	end method
	method mg41_trup6
	push 1000
	push "null"
	call antrup_swiatlo,anfadeout
	end method
	method USE_opaska
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call antrup,isin
	cmp0
	je l11958
	push "opaska"
	cthis removefrompck
	push 500
	push "null"
	call anopaska,anfadein
	push "e1_mg41_trup_opaska_in"
	call clsave,bset
	push 1000
	push "mg41_trup7"
	call antrup_swiatlo,anfadein
	push "e1_mg41_trup_kapelusz_in"
	call clsave,bis
	cmp0
	je l11960
	push "e1_mg41_trup_gwiazda_dostepna"
	call clsave,bset
	push "antrup"
	call butgame,removebut
	push "snd_all_done"
	cthis cbplay
l11960:
	call advmouse,setstd
	jmp l11957
l11958:
	cthis item_gotopck
l11957:
	end method
	method mg41_trup7
	push 1000
	push "null"
	call antrup_swiatlo,anfadeout
	end method
	method angwiazda_TAKE
	push "e1_mg41_trup_gwiazda_dostepna"
	call clsave,bis
	neg
	cmp0
	je l11962
	push "snd_cant_take"
	cthis cbplay
	push 2000
	push "null"
	call antrup_swiatlo,anfadein
	push "talk"
	call anszczeka_anim,play
	push "e1_mg41_trup_gwiazda_piorko"
	call clsave,bis
	neg
	cmp0
	je l11964
	push "n031"
	cthis stdpiorko
	push "e1_mg41_trup_gwiazda_piorko"
	call clsave,bset
l11964:
	jmp l11961
l11962:
	push "gwiazda"
	cthis popitem_gotocenter
	cthis set_mg_finished
l11961:
	end method
	method angwiazda_INPCK
	push "gwiazda"
	cthis addtopck
	cthis timfinito
	end method
	method mend
	push "ad41_statek"
	push "gamead41_statek0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "ma_opaska"
	call clsave,bis
	cmp0
	je l11966
	push "opaska"
	cthis showhintitem
	push "antrup_swiatlo"
	cthis showhint
	jmp l11965
l11966:
	push "ma_kapelusz_pirata"
	call clsave,bis
	cmp0
	je l11968
	push "kapelusz_pirata"
	cthis showhintitem
	push "antrup_swiatlo"
	cthis showhint
	jmp l11967
l11968:
	push "e1_mg41_trup_gwiazda_dostepna"
	call clsave,bis
	cmp0
	je l11970
	push "angwiazda"
	cthis showhint
	jmp l11969
l11970:
	push "anpopexit"
	cthis showhint
l11969:
l11967:
l11965:
	end method
	end game

	game mg41_skrzynia
	parent Banshee
	method init
	push "mg41_skrzynia"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "gwiazda.pyzH 3"
	push "ramka.pyz 7"
	push "popexit.pyz 8"
	push "zamek_mask.pyzH 9"
	push "popup2_bkg.pyzH 10"
	push "popup2_krysztaly_start.pyzH 11"
	push "krysztal1.pyzH 12"
	push "krysztal2.pyzH 12"
	push "krysztal3.pyzH 12"
	push "krysztal4.pyzH 12"
	push "krysztal5.pyzH 12"
	push "krysztal6.pyzH 12"
	push "krysztal7.pyzH 12"
	push "krysztal8.pyzH 12"
	push "krysztal9.pyzH 12"
	push "krysztal10.pyzH 12"
	push "krysztal11.pyzH 12"
	push "krysztal12.pyzH 12"
	push "popup2_top_mask.pyzH 29"
	push "popup2_star.pyzH 30"
	push "final_anim1.pyzH 31"
	push "final_anim2.pyzH 32"
	push "final_star.pyzH 32"
	push "skrzynia_otwarta.pyzH 33"
	push "eliksir_zielony_anim.pyzH 34"
	push "eliksir_zielony.pyzH 35"
	push "lom.pyzH 36"
	push "popup2_gwiazda_kolor.pyzH 50"
	push "blik_anim.pyzH 51"
	push "popup2_pajeczyna.pyzH 52"
	push "popup2_ramka.pyzH 53"
	push "popup2_popexit.pyzH 54"
	cthis imgs=
	push A
	push "bgrmorze3N 10"
	push "bgrszumN 10"
	push "openwindow"
	push "lokacja006_kropla1 20"
	push "podswietl"
	push "wzsun2"
	cthis sfxs=
	cthis butpopexit
	push "mg41"
	cthis askopis
	call anaskopis,hide
	call anpopexit,getcx
	call anaskopis,getw
	pop $b
	popax
	add $a,$b
	call anpopexit,getcy
	call anaskopis,geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call anaskopis,ansetbpos
	call aneliksir_zielony_anim,anopacityframe
	new int,g_selected
	push 1
	popax
	sub 0,$a
	pop g_selected
	new int,popup2_open
	call imgbkg,mg41_skrzynia0
	call anpopup2_popexit,mg41_skrzynia3
	push "onfinish"
	push "mg41_skrzynia7"
	call anfinal_anim1,addmethod
	push "e1_mg41_skrzynia_otwarta"
	call clsave,bis
	neg
	cmp0
	je l11980
	call anzamek_mask,mg41_skrzynia8
l11980:
	push "ma_gwiazda"
	call clsave,bis
	neg
	cmp0
	je l11989
	push "e1_mg41_skrzynia_star_in"
	call clsave,bis
	neg
	jmp l11991
l11989:
	push 0
	jmp l11991
l11990:
	push 1
l11991:
	cmp0
	je l11992
	push "snd_brak_gwiazdy"
	push "kinnat_c4d4_36"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_brak_gwiazdy,addmethod
	push "snd_brak_gwiazdy"
	cthis cbplay
l11992:
	push "e1_mg41_skrzynia_star_in"
	call clsave,bis
	neg
	cmp0
	je l11994
	call anpopup2_star,mg41_skrzynia13
	jmp l11993
l11994:
	call angwiazda,show
l11993:
	push "e1_mg41_skrzynia_otwarta"
	call clsave,bis
	cmp0
	je l12005
	call anskrzynia_otwarta,show
l12005:
	push "taken_lom"
	call clsave,bis
	neg
	cmp0
	je l12007
	push "anlom"
	cthis setasitemtopck
	call anlom,show
	push "e1_mg41_skrzynia_otwarta"
	call clsave,bis
	neg
	cmp0
	je l12009
	call anlom,butdisable
	call anlom,hide
l12009:
l12007:
	push "taken_eliksir_zielony"
	call clsave,bis
	neg
	cmp0
	je l12011
	push "aneliksir_zielony"
	cthis setasitemtopck
	call aneliksir_zielony,show
	push "e1_mg41_skrzynia_otwarta"
	call clsave,bis
	neg
	cmp0
	je l12013
	call aneliksir_zielony,butdisable
	call aneliksir_zielony,hide
	jmp l12012
l12013:
	push 0
	call aneliksir_zielony_anim,play
l12012:
l12011:
	cthis stdstart
	end method
	method mg41_skrzynia0
	push "isbutin"
	push "mg41_skrzynia1"
	cthis addmethod
	push "butclick"
	push "mg41_skrzynia2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg41_skrzynia1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpopup_bkg,isin
	neg
	end method
	method mg41_skrzynia2
	cthis advstdstate
	neg
	cmp0
	je l11972
	ret
l11972:
	cthis mend
	end method
	method mg41_skrzynia3
	cthis Button_isinalpha
	push "butmoveon"
	push "mg41_skrzynia4"
	cthis addmethod
	push "butmoveoff"
	push "mg41_skrzynia5"
	cthis addmethod
	push "butclick"
	push "mg41_skrzynia6"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg41_skrzynia4
	push popup2_open
	neg
	cmp0
	je l11974
	ret
l11974:
	call advmouse,setstd
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	end method
	method mg41_skrzynia5
	push popup2_open
	neg
	cmp0
	je l11976
	ret
l11976:
	call advmouse,setstd
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	end method
	method mg41_skrzynia6
	push popup2_open
	neg
	cmp0
	je l11978
	ret
l11978:
	cthis close_popup2
	end method
	method mg41_skrzynia7
	push 0
	call anfinal_anim2,play
	end method
	method mg41_skrzynia8
	push "isbutin"
	push "mg41_skrzynia9"
	cthis addmethod
	push "butmoveon"
	push "mg41_skrzynia10"
	cthis addmethod
	push "butmoveoff"
	push "mg41_skrzynia11"
	cthis addmethod
	push "butclick"
	push "mg41_skrzynia12"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg41_skrzynia9
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	end method
	method mg41_skrzynia10
	push popup2_open
	neg
	cmp0
	je l11982
	push "loupe"
	call advmouse,set
	jmp l11981
l11982:
	call advmouse,setstd
l11981:
	end method
	method mg41_skrzynia11
	call advmouse,setstd
	end method
	method mg41_skrzynia12
	cthis advstdstate
	neg
	cmp0
	jne l11985
	push popup2_open
	jmp l11986
l11984:
	push 0
	jmp l11986
l11985:
	push 1
l11986:
	cmp0
	je l11987
	ret
l11987:
	cthis open_popup2
	call advmouse,setstd
	end method
	method mg41_skrzynia13
	push "isbutin"
	push "mg41_skrzynia14"
	cthis addmethod
	push "butmoveon"
	push "mg41_skrzynia15"
	cthis addmethod
	push "butmoveoff"
	push "mg41_skrzynia16"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg41_skrzynia14
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	cmp0
	je l11995
	push popup2_open
	jmp l11997
l11995:
	push 0
	jmp l11997
l11996:
	push 1
l11997:
	end method
	method mg41_skrzynia15
	push popup2_open
	neg
	cmp0
	je l11999
	ret
l11999:
	call advmouse,setbut
	push "e1_mg41_skrzynia_star_in"
	call clsave,bis
	neg
	cmp0
	je l12001
	push "use"
	call advmouse,set
	jmp l12000
l12001:
	call advmouse,setstd
l12000:
	end method
	method mg41_skrzynia16
	push popup2_open
	neg
	cmp0
	je l12003
	ret
l12003:
	call advmouse,setstd
	end method
	method mend
	push "ad41_statek"
	push "gamead41_statek0"
	cthis stdexitdefadv
	end method
	method aneliksir_zielony_TAKE
	push 1
	call aneliksir_zielony_anim,stop
	call aneliksir_zielony_anim,hide
	call aneliksir_zielony_anim,butdisable
	push "eliksir_zielony"
	cthis popitem_gotocenter
	end method
	method aneliksir_zielony_INPCK
	push "eliksir_zielony"
	cthis addtopck
	push "taken_lom"
	call clsave,bis
	cmp0
	je l12015
	cthis set_mg_finished
	cthis timfinito
l12015:
	end method
	method anlom_TAKE
	push "lom"
	cthis popitem_gotocenter
	end method
	method anlom_INPCK
	push "lom"
	cthis addtopck
	push "taken_eliksir_zielony"
	call clsave,bis
	cmp0
	je l12017
	cthis set_mg_finished
	cthis timfinito
l12017:
	end method
	method open_popup2
	call fxwzsun2,play
	call anpopup2_bkg,show
	call anpopup2_ramka,show
	call anpopup2_popexit,show
	call anpopup2_top_mask,show
	push "e1_mg41_skrzynia_star_in"
	call clsave,bis
	neg
	cmp0
	je l12019
	call anpopup2_krysztaly_start,show
	jmp l12018
l12019:
	push "null"
	cthis show_crystals
l12018:
	call anpopup2_pajeczyna,show
	push "e1_mg41_skrzynia_star_in"
	call clsave,bis
	cmp0
	je l12021
	call anpopup2_star,show
	call anpopup2_gwiazda_kolor,show
	push 0
	call anblik_anim,play
	call guihint,switchtoskip
	call anaskopis,show
l12021:
	call anpopup2_pajeczyna,show
	push 1
	pop popup2_open
	end method
	method close_popup2
	call fxwzsun2,play
	push 0
	pop popup2_open
	call anpopup2_bkg,hide
	call anpopup2_ramka,hide
	call anpopup2_popexit,hide
	call anpopup2_top_mask,hide
	push "e1_mg41_skrzynia_star_in"
	call clsave,bis
	neg
	cmp0
	je l12023
	call anpopup2_krysztaly_start,hide
l12023:
	call anpopup2_pajeczyna,hide
	push "e1_mg41_skrzynia_star_in"
	call clsave,bis
	cmp0
	je l12025
	call anpopup2_star,hide
	call anpopup2_gwiazda_kolor,hide
	push 0
	call anblik_anim,stop
	call anblik_anim,hide
	cthis hide_crystals
	call guihint,switchtohint
	call anaskopis,hide
l12025:
	cthis advsetstdstate
	end method
	method init_crystal
	localint $1
	localint $2
	pop $2
	pop $1
	push "ankrysztal"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	push $2
	spop $a
	call [$a],mg41_skrzynia17
	end method
	method mg41_skrzynia17
	localint $1
	localint $2
	pop $2
	pop $1
	push 1
	popax
	sub 0,$a
	push $2
	cthis setframe
	push A
	push "id"
	push $1
	push "color"
	push $2
	cthis vars2
	push "isbutin"
	push "mg41_skrzynia18"
	cthis addmethod
	push "butmoveon"
	push "mg41_skrzynia19"
	cthis addmethod
	push "butmoveoff"
	push "mg41_skrzynia20"
	cthis addmethod
	push "butclick"
	push "mg41_skrzynia21"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg41_skrzynia18
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	cmp0
	je l12026
	push popup2_open
	cmp0
	je l12026
	push "e1_mg41_skrzynia_otwarta"
	call clsave,bis
	neg
	jmp l12028
l12026:
	push 0
	jmp l12028
l12027:
	push 1
l12028:
	end method
	method mg41_skrzynia19
	push "e1_mg41_skrzynia_otwarta"
	call clsave,bis
	cmp0
	je l12030
	ret
l12030:
	push "take"
	call advmouse,set
	end method
	method mg41_skrzynia20
	call advmouse,setstd
	end method
	method mg41_skrzynia21
	cthis advstdstate
	neg
	cmp0
	jne l12033
	push popup2_open
	neg
	jmp l12034
l12032:
	push 0
	jmp l12034
l12033:
	push 1
l12034:
	cmp0
	je l12035
	ret
l12035:
	push g_selected
	push 0
	cmpjl
	cmp0
	je l12037
	push 1
	popax
	sub 0,$a
	cthis color
	push 1
	pop $b
	popax
	add $a,$b
	cthis setframe
	call fxlokacja006_kropla1,play
	cthis id
	pop g_selected
	jmp l12036
l12037:
	push g_selected
	cthis id
	cmpjne
	cmp0
	je l12039
	localint $1
	push "ankrysztal"
	push g_selected
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],color
	pop $1
	push "ankrysztal"
	push g_selected
	pop $b
	popax
	add $a,$b
	spushs
	cthis color
	spop $a
	call [$a],color=
	push $1
	cthis color=
	push 1
	popax
	sub 0,$a
	cthis color
	cthis setframe
	push "ankrysztal"
	push g_selected
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	push "ankrysztal"
	push g_selected
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],color
	spop $a
	call [$a],setframe
	push 1
	popax
	sub 0,$a
	pop g_selected
	call fxlokacja006_kropla1,play
	cthis check_won
	cmp0
	je l12041
	push "e1_mg41_skrzynia_otwarta"
	call clsave,bset
	push "anzamek_mask"
	call butgame,removebut
	cthis show_won
l12041:
	jmp l12038
l12039:
	push 1
	popax
	sub 0,$a
	cthis color
	cthis setframe
	push 1
	popax
	sub 0,$a
	pop g_selected
	call fxlokacja006_kropla1,play
l12038:
l12036:
	end method
	method init_crystals
	push 1
	push 0
	cthis init_crystal
	push 2
	push 2
	cthis init_crystal
	push 3
	push 4
	cthis init_crystal
	push 4
	push 6
	cthis init_crystal
	push 5
	push 0
	cthis init_crystal
	push 6
	push 2
	cthis init_crystal
	push 7
	push 4
	cthis init_crystal
	push 8
	push 6
	cthis init_crystal
	push 9
	push 0
	cthis init_crystal
	push 10
	push 2
	cthis init_crystal
	push 11
	push 4
	cthis init_crystal
	push 12
	push 6
	cthis init_crystal
	end method
	method check_won
	localint $1
	push 1
	pop $1
l12042:
	push $1
	push 3
	cmpjle
	cmp0
	je l12043
	jmp l12045
l12044:
	add $1,1
	pop $1
	jmp l12042
l12045:
	push "ankrysztal"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],color
	push 0
	cmpjne
	cmp0
	je l12047
	push 0
	ret
l12047:
	jmp l12044
l12043:
	localint $1
	push 4
	pop $1
l12048:
	push $1
	push 6
	cmpjle
	cmp0
	je l12049
	jmp l12051
l12050:
	add $1,1
	pop $1
	jmp l12048
l12051:
	push "ankrysztal"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],color
	push 2
	cmpjne
	cmp0
	je l12053
	push 0
	ret
l12053:
	jmp l12050
l12049:
	localint $1
	push 7
	pop $1
l12054:
	push $1
	push 9
	cmpjle
	cmp0
	je l12055
	jmp l12057
l12056:
	add $1,1
	pop $1
	jmp l12054
l12057:
	push "ankrysztal"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],color
	push 6
	cmpjne
	cmp0
	je l12059
	push 0
	ret
l12059:
	jmp l12056
l12055:
	localint $1
	push 10
	pop $1
l12060:
	push $1
	push 12
	cmpjle
	cmp0
	je l12061
	jmp l12063
l12062:
	add $1,1
	pop $1
	jmp l12060
l12063:
	push "ankrysztal"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],color
	push 4
	cmpjne
	cmp0
	je l12065
	push 0
	ret
l12065:
	jmp l12062
l12061:
	push 1
	ret
	end method
	method USE_gwiazda
	cthis advsetstdstate
	push popup2_open
	cmp0
	je l12067
	call mouse,getpos
	push 0
	push 1
	call anpopup2_star,isin
	jmp l12069
l12067:
	push 0
	jmp l12069
l12068:
	push 1
l12069:
	cmp0
	je l12070
	push "gwiazda"
	cthis removefrompck
	push 200
	push "null"
	call anpopup2_star,anfadein
	push 800
	push "null"
	call anpopup2_gwiazda_kolor,anfadein
	call angwiazda,show
	call advmouse,setstd
	push 0
	call anblik_anim,play
	push 200
	push "null"
	call anpopup2_krysztaly_start,anfadeout
	push 1
	cthis show_crystals
	push "e1_mg41_skrzynia_star_in"
	call clsave,bset
	call guihint,switchtoskip
	call anaskopis,show
	call fxlokacja006_kropla1,play
	jmp l12066
l12070:
	cthis item_gotopck
l12066:
	end method
	method show_won
	call fxpodswietl,play
	push 0
	call anfinal_anim1,play
	push 3000
	push "mg41_skrzynia22"
	call anfinal_star,anfadein
	end method
	method mg41_skrzynia22
	cthis close_popup2
	call anfinal_anim1,hide
	call anfinal_anim2,hide
	call anfinal_star,hide
	call fxopenwindow,play
	push 500
	push "null"
	call anskrzynia_otwarta,anfadein
	call anlom,butenable
	push 500
	push "null"
	call anlom,anfadein
	call aneliksir_zielony,butenable
	push 500
	push "null"
	call aneliksir_zielony,anfadein
	push 0
	call aneliksir_zielony_anim,play
	cthis butrefresh
	end method
	method show_crystals
	localint $1
	pop $1
	localint $2
	push 1
	pop $2
l12071:
	push $2
	push 12
	cmpjle
	cmp0
	je l12072
	jmp l12074
l12073:
	add $2,1
	pop $2
	jmp l12071
l12074:
	push $1
	cmp0
	je l12076
	push "ankrysztal"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push 400
	push "null"
	spop $a
	call [$a],anfadein
	jmp l12075
l12076:
	push "ankrysztal"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],show
l12075:
	jmp l12073
l12072:
	cthis init_crystals
	end method
	method hide_crystals
	localint $1
	push 1
	pop $1
l12077:
	push $1
	push 12
	cmpjle
	cmp0
	je l12078
	jmp l12080
l12079:
	add $1,1
	pop $1
	jmp l12077
l12080:
	push "ankrysztal"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],hide
	jmp l12079
l12078:
	end method
	method SKIP_CLICK
	cthis advstdstate
	cmp0
	je l12082
	push "e1_mg41_skrzynia_star_in"
	call clsave,bis
	cmp0
	je l12084
	push "e1_mg41_skrzynia_otwarta"
	call clsave,bset
	push "anzamek_mask"
	call butgame,removebut
	cthis show_won
	call guihint,switchtohint
l12084:
l12082:
	end method
	method HINT_CLICK
	push "ma_gwiazda"
	call clsave,bis
	cmp0
	je l12086
	push popup2_open
	cmp0
	je l12088
	push "anpopup2_star"
	cthis showhint
	push "gwiazda"
	cthis showhintitem
	jmp l12087
l12088:
	push "anzamek_mask"
	cthis showhint
l12087:
	jmp l12085
l12086:
	push "e1_mg41_skrzynia_star_in"
	call clsave,bis
	cmp0
	je l12090
	push popup2_open
	neg
	push "e1_mg41_skrzynia_otwarta"
	call clsave,bis
	neg
	pop $b
	popax
	and $a,$b
	jmp l12092
l12090:
	push 0
	jmp l12092
l12091:
	push 1
l12092:
	cmp0
	je l12093
	push "anzamek_mask"
	cthis showhint
	jmp l12089
l12093:
	push "e1_mg41_skrzynia_otwarta"
	call clsave,bis
	push "taken_lom"
	call clsave,bis
	neg
	pop $b
	popax
	and $a,$b
	cmp0
	je l12095
	push "anlom"
	cthis showhint
	jmp l12094
l12095:
	push "e1_mg41_skrzynia_otwarta"
	call clsave,bis
	push "taken_eliksir_zielony"
	call clsave,bis
	neg
	pop $b
	popax
	and $a,$b
	cmp0
	je l12097
	push "aneliksir_zielony"
	cthis showhint
	jmp l12096
l12097:
	push "anpopexit"
	cthis showhint
l12096:
l12094:
l12089:
l12085:
	end method
	end game

	game mg42_krata
	parent Banshee
	method init
	push "mg42_krata"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "lancuch1.pyzH 3"
	push "lancuch2.pyzH 4"
	push "lancuch3.pyzH 5"
	push "popup2_mask.pyzH 6"
	push "szekla1.pyzH 6"
	push "szekla2.pyzH 6"
	push "ramka.pyz 7"
	push "popexit.pyz 8"
	push "popup2_bkg.pyzH 9"
	push "popup2_ramka.pyzH 14"
	push "popup2_popexit.pyzH 15"
	push "popup2_lancuch.pyzH 11"
	push "szekla_obszar.pyzH 12"
	push "popup2_szekla.pyzH 12"
	push "popup2_szekla2_anim.pyzH 13"
	cthis imgs=
	cthis butpopexit
	push A
	push "bgrmorze3N 10"
	push "sruba"
	push "lancuch"
	push "klodkago"
	cthis sfxs=
	new int,popup2_open
	call imgbkg,mg42_krata0
	call anpopup2_popexit,mg42_krata3
	call anpopup2_mask,mg42_krata7
	call anszekla_obszar,mg42_krata12
	push "snd_zla_czesc"
	push "kinnat_c4d4_33"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_zla_czesc,addmethod
	push "snd_szekla"
	push "kinnat_c4d4_33a"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_szekla,addmethod
	push "e1_mg42_krata_lancuch1_clicked"
	call clsave,bis
	neg
	cmp0
	je l12130
	push "snd_lancuch"
	push "kinnat_c4d4_32"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_lancuch,addmethod
	call anlancuch1,mg42_krata17
	jmp l12129
l12130:
	call anlancuch3,show
l12129:
	push "e1_mg42_krata_lancuch2_clicked"
	call clsave,bis
	cmp0
	je l12142
	call anlancuch3,show
l12142:
	push "onfinish"
	push "mg42_krata23"
	call anpopup2_szekla2_anim,addmethod
	cthis stdstart
	end method
	method mg42_krata0
	push "isbutin"
	push "mg42_krata1"
	cthis addmethod
	push "butclick"
	push "mg42_krata2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg42_krata1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpopup_bkg,isin
	neg
	end method
	method mg42_krata2
	cthis advstdstate
	neg
	cmp0
	je l12099
	ret
l12099:
	cthis mend
	end method
	method mg42_krata3
	cthis Button_isinalpha
	push "butmoveon"
	push "mg42_krata4"
	cthis addmethod
	push "butmoveoff"
	push "mg42_krata5"
	cthis addmethod
	push "butclick"
	push "mg42_krata6"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg42_krata4
	push popup2_open
	neg
	cmp0
	je l12101
	ret
l12101:
	call advmouse,setstd
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	end method
	method mg42_krata5
	push popup2_open
	neg
	cmp0
	je l12103
	ret
l12103:
	call advmouse,setstd
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	end method
	method mg42_krata6
	push popup2_open
	neg
	cmp0
	je l12105
	ret
l12105:
	push "null"
	cthis close_popup2
	end method
	method mg42_krata7
	push "isbutin"
	push "mg42_krata8"
	cthis addmethod
	push "butmoveon"
	push "mg42_krata9"
	cthis addmethod
	push "butmoveoff"
	push "mg42_krata10"
	cthis addmethod
	push "butclick"
	push "mg42_krata11"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg42_krata8
	localint $1
	localint $2
	pop $2
	pop $1
	cthis advstdstate
	cmp0
	je l12106
	push $1
	push $2
	push 0
	push 0
	cthis isin
	jmp l12108
l12106:
	push 0
	jmp l12108
l12107:
	push 1
l12108:
	end method
	method mg42_krata9
	push popup2_open
	neg
	cmp0
	je l12110
	push "loupe"
	call advmouse,set
	jmp l12109
l12110:
	call advmouse,setstd
l12109:
	end method
	method mg42_krata10
	call advmouse,setstd
	end method
	method mg42_krata11
	cthis advstdstate
	neg
	cmp0
	jne l12113
	push popup2_open
	jmp l12114
l12112:
	push 0
	jmp l12114
l12113:
	push 1
l12114:
	cmp0
	je l12115
	ret
l12115:
	cthis open_popup2
	call advmouse,setstd
	end method
	method mg42_krata12
	push "isbutin"
	push "mg42_krata13"
	cthis addmethod
	push "butmoveon"
	push "mg42_krata14"
	cthis addmethod
	push "butmoveoff"
	push "mg42_krata15"
	cthis addmethod
	push "butclick"
	push "mg42_krata16"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg42_krata13
	localint $1
	localint $2
	pop $2
	pop $1
	cthis advstdstate
	cmp0
	jne l12117
	push sgmstate
	push "getitem"
	cmpje
	jmp l12118
l12116:
	push 0
	jmp l12118
l12117:
	push 1
l12118:
	cmp0
	je l12119
	push $1
	push $2
	push 0
	push 0
	cthis isin
	cmp0
	je l12119
	push popup2_open
	jmp l12121
l12119:
	push 0
	jmp l12121
l12120:
	push 1
l12121:
	end method
	method mg42_krata14
	push popup2_open
	cmp0
	je l12123
	push "use"
	call advmouse,set
	jmp l12122
l12123:
	call advmouse,setstd
l12122:
	end method
	method mg42_krata15
	call advmouse,setstd
	end method
	method mg42_krata16
	cthis advstdstate
	neg
	cmp0
	jne l12126
	push popup2_open
	jmp l12127
l12125:
	push 0
	jmp l12127
l12126:
	push 1
l12127:
	cmp0
	je l12128
	ret
l12128:
	call advmouse,setstd
	end method
	method mg42_krata17
	cthis show
	cthis Button_isinalpha
	push "butmoveon"
	push "mg42_krata18"
	cthis addmethod
	push "butmoveoff"
	push "mg42_krata19"
	cthis addmethod
	push "butclick"
	push "mg42_krata20"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg42_krata18
	cthis advstdstate
	neg
	cmp0
	je l12132
	ret
l12132:
	push "e1_mg42_krata_lancuch1_clicked"
	call clsave,bis
	neg
	cmp0
	je l12134
	push "take"
	call advmouse,set
l12134:
	end method
	method mg42_krata19
	cthis advstdstate
	neg
	cmp0
	je l12136
	ret
l12136:
	call advmouse,setstd
	end method
	method mg42_krata20
	cthis advstdstate
	neg
	cmp0
	je l12138
	ret
l12138:
	push "e1_mg42_krata_lancuch1_clicked"
	call clsave,bset
	push 300
	push "null"
	cthis anfadeout
	call fxlancuch,play
	push 300
	push "mg42_krata21"
	call anlancuch2,anfadein
	call advmouse,setstd
	end method
	method mg42_krata21
	push 300
	push "null"
	call anlancuch2,anfadeout
	push 300
	push "mg42_krata22"
	call anlancuch3,anfadein
	end method
	method mg42_krata22
	push "snd_lancuch"
	cthis cbplay
	push popup2_open
	cmp0
	je l12140
	push 300
	push "null"
	call anpopup2_lancuch,anfadein
l12140:
	end method
	method mg42_krata23
	cthis timfinito
	end method
	method mend
	push "ad42_poklad"
	push "gamead42_poklad0"
	cthis stdexitdefadv
	end method
	method open_popup2
	call anpopup2_bkg,show
	call anpopup2_ramka,show
	call anpopup2_popexit,show
	push "e1_mg42_krata_lancuch1_clicked"
	call clsave,bis
	cmp0
	je l12144
	call anpopup2_lancuch,show
l12144:
	push "e1_mg42_krata_szekla_inserted"
	call clsave,bis
	cmp0
	je l12146
	call anpopup2_szekla,show
l12146:
	push 1
	pop popup2_open
	end method
	method close_popup2
	push 0
	pop popup2_open
	call anpopup2_bkg,hide
	call anpopup2_ramka,hide
	call anpopup2_popexit,hide
	push "e1_mg42_krata_lancuch1_clicked"
	call clsave,bis
	cmp0
	je l12148
	call anpopup2_lancuch,hide
l12148:
	push "e1_mg42_krata_szekla_inserted"
	call clsave,bis
	cmp0
	je l12150
	call anpopup2_szekla,hide
l12150:
	push "e1_mg42_krata_szekla_inserted"
	call clsave,bis
	cmp0
	je l12152
	call anpopup2_szekla,hide
l12152:
	push "e1_mg42_krata_szekla_completed"
	call clsave,bis
	cmp0
	je l12154
	call anpopup2_szekla2_anim,hide
l12154:
	cthis advsetstdstate
	end method
	method USE_szekla1
	cthis advsetstdstate
	push popup2_open
	cmp0
	je l12156
	call mouse,getpos
	push 0
	push 1
	call anszekla_obszar,isin
	cmp0
	je l12156
	push "e1_mg42_krata_lancuch1_clicked"
	call clsave,bis
	jmp l12158
l12156:
	push 0
	jmp l12158
l12157:
	push 1
l12158:
	cmp0
	je l12159
	call fxklodkago,play
	push "szekla1"
	cthis removefrompck
	push 500
	push "null"
	call anpopup2_szekla,anfadein
	call advmouse,setstd
	call anszekla1,show
	push "e1_mg42_krata_szekla_inserted"
	call clsave,bset
	jmp l12155
l12159:
	cthis item_gotopck
l12155:
	end method
	method USE_szekla2
	cthis advsetstdstate
	push popup2_open
	cmp0
	je l12161
	call mouse,getpos
	push 0
	push 1
	call anszekla_obszar,isin
	cmp0
	je l12161
	push "e1_mg42_krata_szekla_inserted"
	call clsave,bis
	jmp l12163
l12161:
	push 0
	jmp l12163
l12162:
	push 1
l12163:
	cmp0
	je l12164
	call fxsruba,play
	push "szekla2"
	cthis removefrompck
	push 0
	call anpopup2_szekla2_anim,play
	call advmouse,setstd
	call anszekla2,show
	push "e1_mg42_krata_szekla_completed"
	call clsave,bset
	push "snd_szekla"
	cthis cbplay
	cthis set_mg_finished
	jmp l12160
l12164:
	push popup2_open
	cmp0
	je l12166
	push "e1_mg42_krata_lancuch1_clicked"
	call clsave,bis
	cmp0
	je l12166
	push "e1_mg42_krata_szekla_inserted"
	call clsave,bis
	neg
	jmp l12168
l12166:
	push 0
	jmp l12168
l12167:
	push 1
l12168:
	cmp0
	je l12169
	push "snd_zla_czesc"
	cthis cbplay
l12169:
	cthis item_gotopck
l12160:
	end method
	method HINT_CLICK
	push "e1_mg42_krata_lancuch1_clicked"
	call clsave,bis
	neg
	cmp0
	je l12171
	push "anlancuch1"
	cthis showhint
	jmp l12170
l12171:
	push "ma_szekla1"
	call clsave,bis
	cmp0
	je l12173
	push popup2_open
	neg
	jmp l12175
l12173:
	push 0
	jmp l12175
l12174:
	push 1
l12175:
	cmp0
	je l12176
	push "anpopup2_mask"
	cthis showhint
	jmp l12172
l12176:
	push "ma_szekla2"
	call clsave,bis
	cmp0
	je l12178
	push popup2_open
	neg
	jmp l12180
l12178:
	push 0
	jmp l12180
l12179:
	push 1
l12180:
	cmp0
	je l12181
	push "anpopup2_mask"
	cthis showhint
	jmp l12177
l12181:
	push "ma_szekla1"
	call clsave,bis
	cmp0
	je l12183
	push popup2_open
	jmp l12185
l12183:
	push 0
	jmp l12185
l12184:
	push 1
l12185:
	cmp0
	je l12186
	push "szekla1"
	cthis showhintitem
	push "anszekla_obszar"
	cthis showhint
	jmp l12182
l12186:
	push "ma_szekla2"
	call clsave,bis
	cmp0
	je l12188
	push popup2_open
	jmp l12190
l12188:
	push 0
	jmp l12190
l12189:
	push 1
l12190:
	cmp0
	je l12191
	push "szekla2"
	cthis showhintitem
	push "anszekla_obszar"
	cthis showhint
	jmp l12187
l12191:
	push "anpopexit"
	cthis showhint
l12187:
l12182:
l12177:
l12172:
l12170:
	end method
	end game

	game mg43_klapa
	parent Banshee
	method init
	push "mg43_klapa"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "maszyna_mask.pyzH 3"
	push "maszyna_broken.pyz 4"
	push "maszyna_move.pyzH 5"
	push "popup_mask.pyz 6"
	push "ramka.pyz 7"
	push "popexit.pyz 8"
	cthis imgs=
	cthis butpopexit
	cthis butpopexitisinramka
	push A
	push "bgrsala2N 10"
	push "skrzypienie_podlogiN 10"
	push "openwindow"
	push "opendoor"
	cthis sfxs=
	push "onfinish"
	push "mg43_klapa0"
	call anmaszyna_move,addmethod
	push "e1_mg43_klapa_kolko_zalozone"
	call clsave,bis
	cmp0
	je l12193
	call anmaszyna_broken,hide
	call anmaszyna_move,show
l12193:
	push "snd_cantmove"
	push "kinnat_c4d4_37"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_cantmove,addmethod
	push "snd_can_move"
	push "kinnat_c4d4_37c"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_can_move,addmethod
	call anmaszyna_mask,mg43_klapa1
	cthis stdstart
	end method
	method mg43_klapa0
	cthis timfinito
	end method
	method mg43_klapa1
	push "isbutin"
	push "mg43_klapa2"
	cthis addmethod
	push "butmoveon"
	push "mg43_klapa3"
	cthis addmethod
	push "butmoveoff"
	push "mg43_klapa4"
	cthis addmethod
	push "butclick"
	push "mg43_klapa5"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg43_klapa2
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	end method
	method mg43_klapa3
	cthis advstdstate
	neg
	cmp0
	je l12195
	push sgmstate
	push "getitem"
	cmpjne
	jmp l12197
l12195:
	push 0
	jmp l12197
l12196:
	push 1
l12197:
	cmp0
	jne l12199
	push "e1_mg43_klapa_maszyna_ruszona"
	call clsave,bis
	jmp l12200
l12198:
	push 0
	jmp l12200
l12199:
	push 1
l12200:
	cmp0
	je l12201
	ret
l12201:
	push "e1_mg43_klapa_maszyna_ruszona"
	call clsave,bis
	neg
	cmp0
	je l12203
	push "e1_mg43_klapa_kolko_zalozone"
	call clsave,bis
	neg
	cmp0
	je l12205
	push "use"
	call advmouse,set
	jmp l12204
l12205:
	push "take"
	call advmouse,set
l12204:
l12203:
	end method
	method mg43_klapa4
	cthis advstdstate
	neg
	cmp0
	je l12207
	ret
l12207:
	call advmouse,setstd
	end method
	method mg43_klapa5
	cthis advstdstate
	neg
	cmp0
	jne l12210
	push "e1_mg43_klapa_maszyna_ruszona"
	call clsave,bis
	jmp l12211
l12209:
	push 0
	jmp l12211
l12210:
	push 1
l12211:
	cmp0
	je l12212
	ret
l12212:
	push "e1_mg43_klapa_kolko_zalozone"
	call clsave,bis
	cmp0
	je l12214
	cthis hide
	call fxopendoor,play
	call fxopenwindow,play
	push 1
	call anmaszyna_move,play
	call anmaszyna_broken,hide
	call advmouse,setstd
	cthis getname
	call butgame,removebut
	cthis set_mg_finished
	jmp l12213
l12214:
	push "snd_cantmove"
	cthis cbplay
l12213:
	end method
	method mend
	push "ad43_pokoj"
	push "gamead43_pokoj0"
	cthis stdexitdefadv
	end method
	method USE_kolko
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call anmaszyna_mask,isin
	cmp0
	je l12216
	call fxopenwindow,play
	push "kolko"
	cthis removefrompck
	push "e1_mg43_klapa_kolko_zalozone"
	call clsave,bset
	push 200
	push "null"
	call anmaszyna_broken,anfadeout
	push 200
	push "null"
	call anmaszyna_move,anfadein
	push "take"
	call advmouse,set
	push "snd_can_move"
	cthis cbplay
	jmp l12215
l12216:
	cthis item_gotopck
l12215:
	end method
	method HINT_CLICK
	push "ma_kolko"
	call clsave,bis
	cmp0
	je l12218
	push "kolko"
	cthis showhintitem
	push "anmaszyna_mask"
	cthis showhint
	jmp l12217
l12218:
	push "e1_mg43_klapa_kolko_zalozone"
	call clsave,bis
	cmp0
	je l12220
	push "anmaszyna_mask"
	cthis showhint
	jmp l12219
l12220:
	push "anpopexit"
	cthis showhint
l12219:
l12217:
	end method
	end game

	game mg43_klodka
	parent Banshee
	method init
	push "mg43_klodka"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "lancuch.pyz 3"
	push "klodka_close.pyz 4"
	push "klodka_open.pyzH 6"
	push "skobel.pyz 7"
	push "oliwienie.pyzH 8"
	push "klucz_open.pyz 9"
	push "oliwiarka.pyzH 10"
	push "oliwiarka_push.pyzH 11"
	push "ramka.pyz 12"
	push "popexit.pyz 13"
	cthis imgs=
	cthis butpopexit
	cthis butpopexitisinramka
	push A
	push "bgrsala2N 10"
	push "skrzypienie_podlogiN 10"
	push "oil"
	push "odklucza2"
	push "szufladaklik"
	cthis sfxs=
	push "snd_cantopen"
	push "kinnat_c4d4_37a"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_cantopen,addmethod
	push "snd_naoliwione"
	push "kinnat_c4d4_37b"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_naoliwione,addmethod
	push "e1_mg43_klodka_otwarta"
	call clsave,bis
	neg
	cmp0
	je l12222
	call anklucz_open,mg43_klodka0
l12222:
	call anklodka_open,mg43_klodka5
	push "onfinish"
	push "mg43_klodka9"
	call anoliwienie,addmethod
	push "e1_mg43_klodka_otwarta"
	call clsave,bis
	cmp0
	je l12235
	call anklodka_close,hide
	call anklodka_open,show
	call anoliwienie,hide
	call anklucz_open,hide
l12235:
	push "e1_mg43_klodka_naoliwiona"
	call clsave,bis
	cmp0
	je l12237
	push "e1_mg43_klodka_otwarta"
	call clsave,bis
	neg
	jmp l12239
l12237:
	push 0
	jmp l12239
l12238:
	push 1
l12239:
	cmp0
	je l12240
	push 0
	push 7
	call anoliwienie,setframe
	call anoliwienie,show
l12240:
	cthis stdstart
	end method
	method mg43_klodka0
	cthis Button_isin
	push "butmoveon"
	push "mg43_klodka1"
	cthis addmethod
	push "butmoveoff"
	push "mg43_klodka2"
	cthis addmethod
	push "butclick"
	push "mg43_klodka3"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg43_klodka1
	push "e1_mg43_klodka_naoliwiona"
	call clsave,bis
	neg
	cmp0
	je l12224
	push "use"
	call advmouse,set
	jmp l12223
l12224:
	push "take"
	call advmouse,set
l12223:
	end method
	method mg43_klodka2
	call advmouse,setstd
	end method
	method mg43_klodka3
	cthis advstdstate
	neg
	cmp0
	je l12226
	ret
l12226:
	push "e1_mg43_klodka_naoliwiona"
	call clsave,bis
	cmp0
	je l12228
	call advmouse,setstd
	cthis getname
	call butgame,removebut
	push 0
	cthis play
	push "e1_mg43_klodka_otwarta"
	call clsave,bset
	call fxodklucza2,play
	jmp l12227
l12228:
	push "snd_cantopen"
	cthis cbplay
l12227:
	push "onfinish"
	push "mg43_klodka4"
	cthis addmethod
	end method
	method mg43_klodka4
	push 500
	push "null"
	call anklodka_close,anfadeout
	push 500
	push "null"
	call anklodka_open,anfadein
	push 500
	push "null"
	call anoliwienie,anfadeout
	cthis hide
	end method
	method mg43_klodka5
	cthis Button_isin
	push "butmoveon"
	push "mg43_klodka6"
	cthis addmethod
	push "butmoveoff"
	push "mg43_klodka7"
	cthis addmethod
	push "butclick"
	push "mg43_klodka8"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg43_klodka6
	push "take"
	call advmouse,set
	end method
	method mg43_klodka7
	call advmouse,setstd
	end method
	method mg43_klodka8
	cthis advstdstate
	neg
	cmp0
	jne l12231
	push "e1_mg43_klodka_naoliwiona"
	call clsave,bis
	neg
	jmp l12232
l12230:
	push 0
	jmp l12232
l12231:
	push 1
l12232:
	cmp0
	je l12233
	ret
l12233:
	call advmouse,setstd
	push "n033"
	cthis stdpiorko
	cthis set_mg_finished
	push 1
	call anklodka_open,play
	push 1000
	push "timfinito"
	call anlancuch,anfadeout
	push 1000
	push "null"
	call anklodka_open,anfadeout
	call fxszufladaklik,play
	cthis getname
	call butgame,removebut
	end method
	method mg43_klodka9
	push 500
	push "null"
	call anoliwiarka,anfadeout
	push 500
	push "null"
	call anoliwiarka_push,anfadeout
	cthis advsetstdstate
	push "snd_naoliwione"
	cthis cbplay
	end method
	method mend
	push "ad43_pokoj"
	push "gamead43_pokoj0"
	cthis stdexitdefadv
	end method
	method USE_oliwiarka
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call anklucz_open,isin
	cmp0
	je l12242
	push "e1_mg43_klodka_naoliwiona"
	call clsave,bset
	push "oliwiarka"
	cthis removefrompck
	push 800
	push "mg43_klodka10"
	call anoliwiarka,anfadein
	call fxoil,play
	push "take"
	call advmouse,set
	jmp l12241
l12242:
	cthis item_gotopck
l12241:
	end method
	method mg43_klodka10
	push 800
	push "mg43_klodka11"
	call anoliwiarka_push,anfadein
	end method
	method mg43_klodka11
	push 0
	call anoliwienie,play
	end method
	method HINT_CLICK
	push "ma_oliwiarka"
	call clsave,bis
	cmp0
	je l12244
	push "oliwiarka"
	cthis showhintitem
	push "anklucz_open"
	cthis showhint
	jmp l12243
l12244:
	push "e1_mg43_klodka_naoliwiona"
	call clsave,bis
	cmp0
	je l12246
	push "anklucz_open"
	cthis showhint
	jmp l12245
l12246:
	push "e1_mg43_klodka_otwarta"
	call clsave,bis
	cmp0
	je l12248
	push "anklodka_open"
	cthis showhint
	jmp l12247
l12248:
	push "anpopexit"
	cthis showhint
l12247:
l12245:
l12243:
	end method
	end game

	game mg43_lustro
	parent Banshee
	method init
	push "mg43_lustro"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "kinnat.pyz 3"
	push "maska_lustro.pyz 5"
	push "zakladanie.pyz 6"
	push "ramka.pyz 7"
	push "popexit.pyz 8"
	cthis imgs=
	push A
	push "bgrsala2N 10"
	push "skrzypienie_podlogiN 10"
	push "helmet"
	cthis sfxs=
	cthis butpopexit
	cthis butpopexitisinramka
	push 800
	push "null"
	call ankinnat,anfadein
	push "onfinish"
	push "mg43_lustro0"
	call anzakladanie,addmethod
	call ankinnat,mg43_lustro1
	push save_prefix
	push "intro_spoken"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l12265
	push "snd_intro"
	push "kinnat_c4d4_39"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_intro,addmethod
	push "snd_intro"
	cthis cbplay
	push save_prefix
	push "intro_spoken"
	pop $b
	popax
	add $a,$b
	call clsave,bset
l12265:
	push "snd_need_helmet"
	push "kinnat_c4d4_42"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_need_helmet,addmethod
	push "snd_final"
	push "kinnat_c4d4_42a"
	cthis newsndfree
	push "onfinish"
	push "timfinito"
	call snd_final,addmethod
	cthis stdstart
	end method
	method mg43_lustro0
	push "snd_final"
	cthis cbplay
	end method
	method mg43_lustro1
	cthis show
	cthis Button_isinvis
	push "butmoveon"
	push "mg43_lustro2"
	cthis addmethod
	push "butmoveoff"
	push "mg43_lustro3"
	cthis addmethod
	push "butclick"
	push "mg43_lustro4"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg43_lustro2
	cthis advstdstate
	neg
	cmp0
	je l12250
	push sgmstate
	push "getitem"
	cmpjne
	jmp l12252
l12250:
	push 0
	jmp l12252
l12251:
	push 1
l12252:
	cmp0
	jne l12254
	push "e1_mg43_lustro_helm_zalozony"
	call clsave,bis
	jmp l12255
l12253:
	push 0
	jmp l12255
l12254:
	push 1
l12255:
	cmp0
	je l12256
	ret
l12256:
	push "e1_mg43_lustro_helm_zalozony"
	call clsave,bis
	neg
	cmp0
	je l12258
	push "use"
	call advmouse,set
l12258:
	end method
	method mg43_lustro3
	call advmouse,setstd
	end method
	method mg43_lustro4
	cthis advstdstate
	neg
	cmp0
	jne l12261
	push "e1_mg43_lustro_helm_zalozony"
	call clsave,bis
	jmp l12262
l12260:
	push 0
	jmp l12262
l12261:
	push 1
l12262:
	cmp0
	je l12263
	ret
l12263:
	push "snd_need_helmet"
	cthis cbplay
	end method
	method mend
	push "ad43_pokoj"
	push "gamead43_pokoj0"
	cthis stdexitdefadv
	end method
	method USE_helm
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call ankinnat,isin
	cmp0
	je l12267
	call fxhelmet,play
	push "helm"
	cthis removefrompck
	push "e1_mg43_lustro_helm_zalozony"
	call clsave,bset
	cthis set_mg_finished
	push 0
	call anzakladanie,play
	call advmouse,setstd
	push "ankinnat"
	call butgame,removebut
	jmp l12266
l12267:
	cthis item_gotopck
l12266:
	end method
	method HINT_CLICK
	push "ma_helm"
	call clsave,bis
	cmp0
	je l12269
	push "helm"
	cthis showhintitem
	push "ankinnat"
	cthis showhint
	jmp l12268
l12269:
	push "anpopexit"
	cthis showhint
l12268:
	end method
	end game

	game mg43_poduszki
	parent Banshee
	method init
	push "mg43_poduszki"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "eliksir_niebiesko_zielony.pyzH 3"
	push "eliksir_shine.pyzH 4"
	push "poduszka1.pyzH 5"
	push "poduszka1_moved.pyzH 6"
	push "poduszka2.pyzH 7"
	push "poduszka2_moved.pyzH 8"
	push "zaslona.pyzH 9"
	push "zaslona_moved.pyzH 10"
	push "ramka.pyz 17"
	push "popexit.pyz 18"
	cthis imgs=
	cthis butpopexit
	cthis butpopexitisinramka
	push A
	push "bgrsala2N 10"
	push "skrzypienie_podlogiN 10"
	push "ubranie 30"
	push "hofound 40"
	cthis sfxs=
	push "taken_eliksir_niebiesko_zielony"
	call clsave,bis
	neg
	cmp0
	je l12271
	call aneliksir_shine,anopacityframe
	push "aneliksir_niebiesko_zielony"
	cthis setasitemtopck
	call aneliksir_niebiesko_zielony,butdisable
l12271:
	push save_prefix
	push "intro_spoken"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l12273
	push "snd_intro"
	push "kinnat_c4d4_38b"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_intro,addmethod
l12273:
	push "e1_mg43_poduszki_poduszka1_moved"
	call clsave,bis
	neg
	cmp0
	je l12275
	call anpoduszka1,mg43_poduszki0
	jmp l12274
l12275:
	call anpoduszka1_moved,show
l12274:
	push "e1_mg43_poduszki_poduszka2_moved"
	call clsave,bis
	neg
	cmp0
	je l12293
	call anpoduszka2,mg43_poduszki4
	jmp l12292
l12293:
	call anpoduszka2_moved,show
l12292:
	push "e1_mg43_poduszki_zaslona_moved"
	call clsave,bis
	neg
	cmp0
	je l12311
	call anzaslona,mg43_poduszki8
	jmp l12310
l12311:
	call anzaslona_moved,show
l12310:
	cthis is_all_moved
	cmp0
	je l12329
	cthis enable_eliksir
l12329:
	cthis stdstart
	end method
	method mg43_poduszki0
	cthis show
	cthis Button_isinvis
	push "butmoveon"
	push "mg43_poduszki1"
	cthis addmethod
	push "butmoveoff"
	push "mg43_poduszki2"
	cthis addmethod
	push "butclick"
	push "mg43_poduszki3"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg43_poduszki1
	cthis advstdstate
	neg
	cmp0
	jne l12278
	push "e1_mg43_poduszki_poduszka1_moved"
	call clsave,bis
	jmp l12279
l12277:
	push 0
	jmp l12279
l12278:
	push 1
l12279:
	cmp0
	je l12280
	ret
l12280:
	push "e1_mg43_poduszki_poduszka1_moved"
	call clsave,bis
	neg
	cmp0
	je l12282
	push "take"
	call advmouse,set
l12282:
	end method
	method mg43_poduszki2
	call advmouse,setstd
	end method
	method mg43_poduszki3
	cthis advstdstate
	neg
	cmp0
	jne l12285
	push "e1_mg43_poduszki_poduszka1_moved"
	call clsave,bis
	jmp l12286
l12284:
	push 0
	jmp l12286
l12285:
	push 1
l12286:
	cmp0
	je l12287
	ret
l12287:
	push "e1_mg43_poduszki_poduszka1_moved"
	call clsave,bset
	push 500
	push "null"
	cthis anfadeout
	push 500
	push "null"
	call anpoduszka1_moved,anfadein
	cthis getname
	call butgame,removebut
	call fxubranie,play
	push save_prefix
	push "intro_spoken"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l12289
	push "snd_intro"
	cthis cbplay
	push save_prefix
	push "intro_spoken"
	pop $b
	popax
	add $a,$b
	call clsave,bset
l12289:
	cthis is_all_moved
	cmp0
	je l12291
	cthis enable_eliksir
l12291:
	end method
	method mg43_poduszki4
	cthis show
	cthis Button_isinvis
	push "butmoveon"
	push "mg43_poduszki5"
	cthis addmethod
	push "butmoveoff"
	push "mg43_poduszki6"
	cthis addmethod
	push "butclick"
	push "mg43_poduszki7"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg43_poduszki5
	cthis advstdstate
	neg
	cmp0
	jne l12296
	push "e1_mg43_poduszki_poduszka2_moved"
	call clsave,bis
	jmp l12297
l12295:
	push 0
	jmp l12297
l12296:
	push 1
l12297:
	cmp0
	je l12298
	ret
l12298:
	push "e1_mg43_poduszki_poduszka2_moved"
	call clsave,bis
	neg
	cmp0
	je l12300
	push "take"
	call advmouse,set
l12300:
	end method
	method mg43_poduszki6
	call advmouse,setstd
	end method
	method mg43_poduszki7
	cthis advstdstate
	neg
	cmp0
	jne l12303
	push "e1_mg43_poduszki_poduszka2_moved"
	call clsave,bis
	jmp l12304
l12302:
	push 0
	jmp l12304
l12303:
	push 1
l12304:
	cmp0
	je l12305
	ret
l12305:
	push "e1_mg43_poduszki_poduszka2_moved"
	call clsave,bset
	push 500
	push "null"
	cthis anfadeout
	push 500
	push "null"
	call anpoduszka2_moved,anfadein
	cthis getname
	call butgame,removebut
	call fxubranie,play
	push save_prefix
	push "intro_spoken"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l12307
	push "snd_intro"
	cthis cbplay
	push save_prefix
	push "intro_spoken"
	pop $b
	popax
	add $a,$b
	call clsave,bset
l12307:
	cthis is_all_moved
	cmp0
	je l12309
	cthis enable_eliksir
l12309:
	end method
	method mg43_poduszki8
	cthis show
	cthis Button_isinvis
	push "butmoveon"
	push "mg43_poduszki9"
	cthis addmethod
	push "butmoveoff"
	push "mg43_poduszki10"
	cthis addmethod
	push "butclick"
	push "mg43_poduszki11"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg43_poduszki9
	cthis advstdstate
	neg
	cmp0
	jne l12314
	push "e1_mg43_poduszki_zaslona_moved"
	call clsave,bis
	jmp l12315
l12313:
	push 0
	jmp l12315
l12314:
	push 1
l12315:
	cmp0
	je l12316
	ret
l12316:
	push "e1_mg43_poduszki_zaslona_moved"
	call clsave,bis
	neg
	cmp0
	je l12318
	push "take"
	call advmouse,set
l12318:
	end method
	method mg43_poduszki10
	call advmouse,setstd
	end method
	method mg43_poduszki11
	cthis advstdstate
	neg
	cmp0
	jne l12321
	push "e1_mg43_poduszki_zaslona_moved"
	call clsave,bis
	jmp l12322
l12320:
	push 0
	jmp l12322
l12321:
	push 1
l12322:
	cmp0
	je l12323
	ret
l12323:
	push "e1_mg43_poduszki_zaslona_moved"
	call clsave,bset
	push 500
	push "null"
	cthis anfadeout
	push 500
	push "null"
	call anzaslona_moved,anfadein
	cthis getname
	call butgame,removebut
	call fxubranie,play
	push save_prefix
	push "intro_spoken"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l12325
	push "snd_intro"
	cthis cbplay
	push save_prefix
	push "intro_spoken"
	pop $b
	popax
	add $a,$b
	call clsave,bset
l12325:
	cthis is_all_moved
	cmp0
	je l12327
	cthis enable_eliksir
l12327:
	end method
	method is_all_moved
	push "e1_mg43_poduszki_poduszka1_moved"
	call clsave,bis
	cmp0
	je l12330
	push "e1_mg43_poduszki_poduszka2_moved"
	call clsave,bis
	cmp0
	je l12330
	push "e1_mg43_poduszki_zaslona_moved"
	call clsave,bis
	jmp l12332
l12330:
	push 0
	jmp l12332
l12331:
	push 1
l12332:
	ret
	end method
	method enable_eliksir
	push 0
	call aneliksir_shine,play
	call aneliksir_niebiesko_zielony,show
	call aneliksir_niebiesko_zielony,butenable
	push "e1_mg43_poduszki_enable_eliksir"
	call clsave,bset
	call fxhofound,play
	end method
	method aneliksir_niebiesko_zielony_TAKE
	push 1
	call aneliksir_shine,stop
	call aneliksir_shine,hide
	cthis set_mg_finished
	push "eliksir_niebiesko_zielony"
	cthis popitem_gotocenter
	end method
	method aneliksir_niebiesko_zielony_INPCK
	push "eliksir_niebiesko_zielony"
	cthis addtopck
	cthis timfinito
	end method
	method mend
	push "ad43_pokoj"
	push "gamead43_pokoj0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "taken_eliksir_niebiesko_zielony"
	call clsave,bis
	neg
	cmp0
	je l12334
	push "aneliksir_niebiesko_zielony"
	cthis showhint
	jmp l12333
l12334:
	push "anpopexit"
	cthis showhint
l12333:
	end method
	end game

	game mg43_skrzyneczka
	parent Banshee
	method init
	push "mg43_skrzyneczka"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "sztylet.pyzH 3"
	push "ramka.pyz 7"
	push "popexit.pyz 8"
	cthis imgs=
	cthis butpopexit
	cthis butpopexitisinramka
	push A
	push "bgrsala2N 10"
	push "skrzypienie_podlogiN 10"
	cthis sfxs=
	push "taken_sztylet"
	call clsave,bis
	neg
	cmp0
	je l12336
	push "ansztylet"
	cthis setasitemtopck
	call ansztylet,show
l12336:
	cthis stdstart
	end method
	method ansztylet_TAKE
	cthis set_mg_finished
	push "sztylet"
	cthis popitem_gotocenter
	end method
	method ansztylet_INPCK
	push "sztylet"
	cthis addtopck
	cthis timfinito
	end method
	method mend
	push "ad43_pokoj"
	push "gamead43_pokoj0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "taken_sztylet"
	call clsave,bis
	neg
	cmp0
	je l12338
	push "ansztylet"
	cthis showhint
	jmp l12337
l12338:
	push "anpopexit"
	cthis showhint
l12337:
	end method
	end game

	game mg44_wiadro
	parent Banshee
	method init
	push "mg44_wiadro"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "kwadrat_3.pyzH 3"
	push "instrukcja_eliksir.pyzH 4"
	push "popexit.pyz 45"
	push "ramka.pyz 42"
	push "instrukcja_eliksir_big.pyzH 45"
	cthis imgs=
	cthis butpopexit
	cthis butpopexitisinramka
	push A
	push "bgrszumN 10"
	push "bgrwiatrN 10"
	push "skrzypienie_podlogiN 10"
	push "book2"
	push "clickoblok"
	cthis sfxs=
	push "takenan_ankwadrat_3"
	call clsave,bis
	neg
	cmp0
	je l12340
	push "ankwadrat_3"
	cthis setasitemtopck
	call ankwadrat_3,show
l12340:
	push "e1_mg44_wiadro_instrukcja_eliksir_wzieta"
	call clsave,bis
	neg
	cmp0
	je l12342
	push "snd_recepta"
	push "kinnat_c4d4_38"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_recepta,addmethod
l12342:
	push "e1_mg44_wiadro_instrukcja_eliksir_wzieta"
	call clsave,bis
	neg
	cmp0
	je l12344
	call aninstrukcja_eliksir,mg44_wiadro0
l12344:
	call aninstrukcja_eliksir_big,mg44_wiadro5
	cthis stdstart
	end method
	method mg44_wiadro0
	cthis Button_isin
	cthis show
	push "butmoveon"
	push "mg44_wiadro1"
	cthis addmethod
	push "butmoveoff"
	push "mg44_wiadro2"
	cthis addmethod
	push "butclick"
	push "mg44_wiadro3"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg44_wiadro1
	push "take"
	call advmouse,set
	end method
	method mg44_wiadro2
	call advmouse,setstd
	end method
	method mg44_wiadro3
	cthis advstdstate
	neg
	cmp0
	je l12346
	ret
l12346:
	cthis getname
	call butgame,removebut
	cthis hide
	call fxbook2,play
	push 800
	push "mg44_wiadro4"
	call aninstrukcja_eliksir_big,anfadein
	call advmouse,setstd
	end method
	method mg44_wiadro4
	push "snd_recepta"
	cthis cbplay
	end method
	method mg44_wiadro5
	cthis Button_isin
	push "butmoveon"
	push "mg44_wiadro6"
	cthis addmethod
	push "butmoveoff"
	push "mg44_wiadro7"
	cthis addmethod
	push "butclick"
	push "mg44_wiadro8"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg44_wiadro6
	push "take"
	call advmouse,set
	end method
	method mg44_wiadro7
	call advmouse,setstd
	end method
	method mg44_wiadro8
	cthis advstdstate
	neg
	cmp0
	je l12348
	ret
l12348:
	push 500
	push "null"
	cthis anfadeout
	cthis getname
	call butgame,removebut
	push "e1_mg44_wiadro_instrukcja_eliksir_wzieta"
	call clsave,bset
	push "n030"
	cthis stdpiorko
	call advmouse,setstd
	call fxclickoblok,play
	push "takenan_ankwadrat_3"
	call clsave,bis
	cmp0
	je l12350
	cthis set_mg_finished
	cthis timfinito
l12350:
	end method
	method ankwadrat_3_TAKE
	push "kwadrat"
	cthis stackitem_topck
	push "e1_mg44_wiadro_instrukcja_eliksir_wzieta"
	call clsave,bis
	cmp0
	je l12352
	cthis set_mg_finished
l12352:
	end method
	method ankwadrat_3_INPCK
	push "kwadrat"
	cthis additemtostack
	push "e1_mg44_wiadro_instrukcja_eliksir_wzieta"
	call clsave,bis
	cmp0
	je l12354
	cthis timfinito
l12354:
	end method
	method mend
	push "ad44_strych"
	push "gamead44_strych0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "takenan_ankwadrat_3"
	call clsave,bis
	neg
	cmp0
	je l12356
	push "ankwadrat_3"
	cthis showhint
	jmp l12355
l12356:
	push "e1_mg44_wiadro_instrukcja_eliksir_wzieta"
	call clsave,bis
	neg
	cmp0
	je l12358
	push "aninstrukcja_eliksir"
	cthis showhint
	jmp l12357
l12358:
	push "anpopexit"
	cthis showhint
l12357:
l12355:
	end method
	end game

	game mg44_mis
	parent Banshee
	method init
	push "mg44_mis"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "misio_mask.pyzH 3"
	push "misio_rozpruty.pyzH 4"
	push "eliksir_czerwony.pyzH 5"
	push "szew_anim.pyzH 6"
	push "ciecie_anim.pyzH 7"
	push "popexit.pyz 45"
	push "ramka.pyz 42"
	cthis imgs=
	cthis butpopexit
	cthis butpopexitisinramka
	push A
	push "bgrszumN 10"
	push "bgrwiatrN 10"
	push "skrzypienie_podlogiN 10"
	push "noz"
	push "hofound 40"
	cthis sfxs=
	push "onfinish"
	push "mg44_mis0"
	call anciecie_anim,addmethod
	push "snd_intro"
	push "kinnat_c4d4_40"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_intro,addmethod
	push "taken_eliksir_czerwony"
	call clsave,bis
	neg
	cmp0
	je l12360
	push "aneliksir_czerwony"
	cthis setasitemtopck
	call aneliksir_czerwony,show
	push "e1_mg44_mis_rozpruty"
	call clsave,bis
	neg
	cmp0
	je l12362
	call aneliksir_czerwony,butdisable
	call aneliksir_czerwony,hide
l12362:
l12360:
	push "e1_mg44_mis_rozpruty"
	call clsave,bis
	neg
	cmp0
	je l12364
	call anmisio_mask,mg44_mis1
l12364:
	push "e1_mg44_mis_rozpruty"
	call clsave,bis
	cmp0
	je l12381
	call anmisio_rozpruty,show
	jmp l12380
l12381:
	call anszew_anim,anopacityframe
	push 0
	call anszew_anim,play
	push "use"
	call advmouse,set
l12380:
	cthis stdstart
	end method
	method mg44_mis0
	push 500
	push "null"
	call anciecie_anim,anfadeout
	call anmisio_rozpruty,show
	call aneliksir_czerwony,butenable
	end method
	method mg44_mis1
	push "isbutin"
	push "mg44_mis2"
	cthis addmethod
	push "butmoveon"
	push "mg44_mis3"
	cthis addmethod
	push "butmoveoff"
	push "mg44_mis4"
	cthis addmethod
	push "butclick"
	push "mg44_mis5"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg44_mis2
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 1
	cthis isin
	cmp0
	je l12365
	push "e1_mg44_mis_rozpruty"
	call clsave,bis
	neg
	jmp l12367
l12365:
	push 0
	jmp l12367
l12366:
	push 1
l12367:
	end method
	method mg44_mis3
	cthis advstdstate
	neg
	cmp0
	je l12369
	push sgmstate
	push "getitem"
	cmpjne
	jmp l12371
l12369:
	push 0
	jmp l12371
l12370:
	push 1
l12371:
	cmp0
	jne l12373
	push "e1_mg44_mis_rozpruty"
	call clsave,bis
	jmp l12374
l12372:
	push 0
	jmp l12374
l12373:
	push 1
l12374:
	cmp0
	je l12375
	ret
l12375:
	push "use"
	call advmouse,set
	end method
	method mg44_mis4
	call advmouse,setstd
	end method
	method mg44_mis5
	cthis advstdstate
	neg
	cmp0
	je l12377
	ret
l12377:
	push "e1_mg44_mis_rozpruty"
	call clsave,bis
	neg
	cmp0
	je l12379
	push "snd_intro"
	cthis cbplay
l12379:
	end method
	method mend
	push "ad44_strych"
	push "gamead44_strych0"
	cthis stdexitdefadv
	end method
	method aneliksir_czerwony_TAKE
	cthis set_mg_finished
	push "eliksir_czerwony"
	cthis popitem_gotocenter
	end method
	method aneliksir_czerwony_INPCK
	push "eliksir_czerwony"
	cthis addtopck
	cthis timfinito
	end method
	method USE_sztylet
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call anmisio_mask,isin
	cmp0
	je l12383
	push "e1_mg44_mis_rozpruty"
	call clsave,bis
	neg
	jmp l12385
l12383:
	push 0
	jmp l12385
l12384:
	push 1
l12385:
	cmp0
	je l12386
	push "sztylet"
	cthis removefrompck
	push 0
	call anciecie_anim,play
	push "e1_mg44_mis_rozpruty"
	call clsave,bset
	push 1
	call anszew_anim,stop
	call anszew_anim,hide
	push 1500
	push "mg44_mis6"
	call aneliksir_czerwony,anfadein
	call advmouse,setstd
	jmp l12382
l12386:
	cthis item_gotopck
l12382:
	end method
	method mg44_mis6
	call fxhofound,play
	end method
	method HINT_CLICK
	push "ma_sztylet"
	call clsave,bis
	cmp0
	je l12388
	push "anmisio_mask"
	cthis showhint
	push "sztylet"
	cthis showhintitem
	jmp l12387
l12388:
	push "e1_mg44_mis_rozpruty"
	call clsave,bis
	cmp0
	je l12390
	push "aneliksir_czerwony"
	cthis showhint
	jmp l12389
l12390:
	push "anpopexit"
	cthis showhint
l12389:
l12387:
	end method
	end game

	game mg46_koralowce
	parent Banshee
	method init
	push "mg46_koralowce"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "kwadrat_4.pyzH 3"
	push "bable2.pyz 4"
	push "koralowiec.pyz 5"
	push "bable.pyz 6"
	push "popexit.pyz 45"
	push "ramka.pyz 42"
	cthis imgs=
	push A
	push "bgrpodwodaN 30"
	cthis sfxs=
	cthis butpopexit
	cthis butpopexitisinramka
	push 0
	call ankoralowiec,play
	push 0
	call anbable,play
	push 0
	call anbable2,play
	push "snd_intro2"
	push "kinnat_c4d4_43a"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_intro2,addmethod
	push "takenan_ankwadrat_4"
	call clsave,bis
	neg
	cmp0
	je l12392
	push "ankwadrat_4"
	cthis setasitemtopck
	call ankwadrat_4,show
	push "isbutin"
	push "mg46_koralowce0"
	call ankwadrat_4,addmethod
l12392:
	call imgbkg,mg46_koralowce1
	cthis stdstart
	end method
	method mg46_koralowce0
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	cmp0
	je l12393
	push $1
	push $2
	push 1
	push 1
	call ankoralowiec,isin
	neg
	jmp l12395
l12393:
	push 0
	jmp l12395
l12394:
	push 1
l12395:
	end method
	method mg46_koralowce1
	push "isbutin"
	push "mg46_koralowce2"
	cthis addmethod
	push "butclick"
	push "mg46_koralowce3"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg46_koralowce2
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	end method
	method mg46_koralowce3
	cthis advstdstate
	neg
	cmp0
	je l12397
	ret
l12397:
	push "takenan_ankwadrat_4"
	call clsave,bis
	neg
	cmp0
	je l12399
	push "snd_intro2"
	cthis cbplay
l12399:
	end method
	method ankwadrat_4_TAKE
	push "kwadrat"
	cthis stackitem_topck
	cthis set_mg_finished
	end method
	method ankwadrat_4_INPCK
	push "kwadrat"
	cthis additemtostack
	cthis timfinito
	end method
	method mend
	push "ad46_podwodna"
	push "gamead46_podwodna0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "taken_kwadrat_4"
	call clsave,bis
	neg
	cmp0
	je l12401
	push "ankwadrat_4"
	cthis showhint
	jmp l12400
l12401:
	push "anpopexit"
	cthis showhint
l12400:
	end method
	end game

	game mg46_koralowiec
	parent Banshee
	method init
	push "mg46_koralowiec"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "swiecaca_galazka.pyzH 3"
	push "popexit.pyz 45"
	push "ramka.pyz 42"
	cthis imgs=
	cthis butpopexit
	cthis butpopexitisinramka
	push A
	push "bgrpodwodaN 30"
	cthis sfxs=
	push "taken_swiecaca_galazka"
	call clsave,bis
	neg
	cmp0
	je l12403
	push "answiecaca_galazka"
	cthis setasitemtopck
	call answiecaca_galazka,show
l12403:
	cthis stdstart
	end method
	method answiecaca_galazka_TAKE
	cthis set_mg_finished
	push "swiecaca_galazka"
	cthis popitem_gotocenter
	end method
	method answiecaca_galazka_INPCK
	push "swiecaca_galazka"
	cthis addtopck
	cthis timfinito
	end method
	method mend
	push "ad46_podwodna"
	push "gamead46_podwodna0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "taken_swiecaca_galazka"
	call clsave,bis
	neg
	cmp0
	je l12405
	push "answiecaca_galazka"
	cthis showhint
	jmp l12404
l12405:
	push "anpopexit"
	cthis showhint
l12404:
	end method
	end game

	game mg46_murena
	parent Banshee
	method init
	push "mg46_murena"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "drabinka.pyzH 3"
	push "murena_anim.pyz 4"
	push "bable.pyz 5"
	push "bable2.pyz 6"
	push "siec.pyzH 7"
	push "popexit.pyz 45"
	push "ramka.pyz 42"
	cthis imgs=
	cthis butpopexit
	cthis butpopexitisinramka
	push A
	push "bgrpodwodaN 30"
	push "murena 20"
	push "zamach1 10"
	cthis sfxs=
	push "e1_mg46_murena_murena_w_sieci"
	call clsave,bis
	cmp0
	je l12407
	call ansiec,show
	jmp l12406
l12407:
	push 0
	call anmurena_anim,play
l12406:
	push 0
	call anbable,play
	push 0
	call anbable2,play
	push "snd_murena"
	push "kinnat_c4d4_45"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_murena,addmethod
	push "snd_siec"
	push "kinnat_c4d4_45a"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_siec,addmethod
	push "taken_drabinka"
	call clsave,bis
	neg
	cmp0
	je l12409
	push "andrabinka"
	cthis setasitemtopck
	call andrabinka,show
	push "isbutin"
	push "mg46_murena0"
	call andrabinka,addmethod
l12409:
	call anmurena_anim,mg46_murena1
	cthis stdstart
	end method
	method mg46_murena0
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	cmp0
	je l12410
	push $1
	push $2
	push 1
	push 1
	call anmurena_anim,isin
	neg
	jmp l12412
l12410:
	push 0
	jmp l12412
l12411:
	push 1
l12412:
	end method
	method mg46_murena1
	cthis Button_isinvis
	push "butmoveon"
	push "mg46_murena2"
	cthis addmethod
	push "butmoveoff"
	push "mg46_murena3"
	cthis addmethod
	push "butclick"
	push "mg46_murena4"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg46_murena2
	push "e1_mg46_murena_murena_w_sieci"
	call clsave,bis
	neg
	cmp0
	je l12414
	push "use"
	call advmouse,set
l12414:
	end method
	method mg46_murena3
	call advmouse,setstd
	end method
	method mg46_murena4
	cthis advstdstate
	neg
	cmp0
	je l12416
	ret
l12416:
	push "e1_mg46_murena_murena_w_sieci"
	call clsave,bis
	neg
	cmp0
	je l12418
	call fxmurena,play
	push "snd_murena"
	cthis cbplay
l12418:
	end method
	method andrabinka_TAKE
	push "e1_mg46_murena_murena_w_sieci"
	call clsave,bis
	cmp0
	je l12420
	cthis set_mg_finished
	push "drabinka"
	cthis popitem_gotocenter
	jmp l12419
l12420:
	push "snd_murena"
	cthis cbplay
l12419:
	end method
	method andrabinka_INPCK
	push "drabinka"
	cthis addtopck
	cthis timfinito
	end method
	method USE_siec
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call anmurena_anim,isin
	cmp0
	je l12422
	push "siec"
	cthis removefrompck
	push "e1_mg46_murena_murena_w_sieci"
	call clsave,bset
	call fxzamach1,play
	push 0
	call anmurena_anim,stop
	call advmouse,setstd
	push 500
	push "null"
	call ansiec,anfadein
	push "anmurena_anim"
	call butgame,removebut
	push "snd_siec"
	cthis cbplay
	jmp l12421
l12422:
	cthis item_gotopck
l12421:
	end method
	method mend
	push "ad46_podwodna"
	push "gamead46_podwodna0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "ma_siec"
	call clsave,bis
	cmp0
	je l12424
	push "anmurena_anim"
	cthis showhint
	push "siec"
	cthis showhintitem
	jmp l12423
l12424:
	push "e1_mg46_murena_murena_w_sieci"
	call clsave,bis
	cmp0
	je l12426
	push "andrabinka"
	cthis showhint
	jmp l12425
l12426:
	push "anpopexit"
	cthis showhint
l12425:
l12423:
	end method
	end game

	game mg47_oczy
	parent Banshee
	method init
	push "mg47_oczy"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "bkg_zapalony.pyzH 3"
	push "oczy.pyzH 4"
	push "oczy_obszar.pyzH 5"
	push "rybki_anim.pyzH 6"
	push "buteleczka.pyzH 7"
	push "popexit.pyz 45"
	push "ramka.pyz 42"
	cthis imgs=
	cthis butpopexit
	cthis butpopexitisinramka
	push A
	push "bgrpodwodaN 40"
	push "ryby 30"
	push "shine 20"
	cthis sfxs=
	push "e1_mg47_oczy_galazka_uzyta"
	call clsave,bis
	neg
	cmp0
	je l12428
	push "tim1"
	push 150
	push "mg47_oczy0"
	cthis timplay
	call anoczy,anopacityframe
	push "snd_dark"
	push "kinnat_c4d4_48"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_dark,addmethod
l12428:
	push "taken_buteleczka"
	call clsave,bis
	neg
	cmp0
	je l12430
	push "anbuteleczka"
	cthis setasitemtopck
	call anbuteleczka,show
	push "e1_mg47_oczy_galazka_uzyta"
	call clsave,bis
	neg
	cmp0
	je l12432
	call anbuteleczka,butdisable
	call anbuteleczka,hide
l12432:
l12430:
	push "snd_rybki"
	push "kinnat_c4d4_48a"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call snd_rybki,addmethod
	push "onfinish"
	push "mg47_oczy1"
	call anrybki_anim,addmethod
	push "e1_mg47_oczy_galazka_uzyta"
	call clsave,bis
	neg
	cmp0
	je l12434
	call anoczy_obszar,mg47_oczy2
	jmp l12433
l12434:
	call anpopup_bkg,hide
	call anbkg_zapalony,show
l12433:
	cthis stdstart
	end method
	method mg47_oczy0
	push 0
	call anoczy,play
	end method
	method mg47_oczy1
	cthis hide
	call anpopup_bkg,hide
	call anbkg_zapalony,show
	call anbuteleczka,butenable
	push "snd_rybki"
	cthis cbplay
	end method
	method mg47_oczy2
	push "isbutin"
	push "mg47_oczy3"
	cthis addmethod
	push "butmoveon"
	push "mg47_oczy4"
	cthis addmethod
	push "butmoveoff"
	push "mg47_oczy5"
	cthis addmethod
	push "butclick"
	push "mg47_oczy6"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg47_oczy3
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 1
	cthis isin
	cmp0
	je l12435
	push "e1_mg47_oczy_galazka_uzyta"
	call clsave,bis
	neg
	jmp l12437
l12435:
	push 0
	jmp l12437
l12436:
	push 1
l12437:
	end method
	method mg47_oczy4
	push "e1_mg47_oczy_galazka_uzyta"
	call clsave,bis
	cmp0
	je l12439
	ret
l12439:
	push "use"
	call advmouse,set
	end method
	method mg47_oczy5
	call advmouse,setstd
	end method
	method mg47_oczy6
	cthis advstdstate
	neg
	cmp0
	je l12441
	ret
l12441:
	push "e1_mg47_oczy_galazka_uzyta"
	call clsave,bis
	neg
	cmp0
	je l12443
	push "snd_dark"
	cthis cbplay
l12443:
	end method
	method mend
	push "ad47_szafa"
	push "gamead47_szafa0"
	cthis stdexitdefadv
	end method
	method USE_swiecaca_galazka
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call anoczy_obszar,isin
	cmp0
	je l12445
	push "e1_mg47_oczy_galazka_uzyta"
	call clsave,bis
	neg
	jmp l12447
l12445:
	push 0
	jmp l12447
l12446:
	push 1
l12447:
	cmp0
	je l12448
	push "swiecaca_galazka"
	cthis removefrompck
	push 0
	call anrybki_anim,play
	push 500
	push "null"
	call anrybki_anim,anfadein
	push "e1_mg47_oczy_galazka_uzyta"
	call clsave,bset
	push 1
	call anoczy,stop
	call anoczy,hide
	call fxshine,play
	push 100
	push "null"
	call anbuteleczka,anfadein
	call advmouse,setstd
	jmp l12444
l12448:
	cthis item_gotopck
l12444:
	end method
	method anbuteleczka_TAKE
	cthis set_mg_finished
	push "buteleczka"
	cthis popitem_gotocenter
	end method
	method anbuteleczka_INPCK
	push "buteleczka"
	cthis addtopck
	cthis timfinito
	end method
	method HINT_CLICK
	push "ma_swiecaca_galazka"
	call clsave,bis
	cmp0
	je l12450
	push "anoczy_obszar"
	cthis showhint
	push "swiecaca_galazka"
	cthis showhintitem
	jmp l12449
l12450:
	push "e1_mg47_oczy_galazka_uzyta"
	call clsave,bis
	cmp0
	je l12452
	push "anbuteleczka"
	cthis showhint
	jmp l12451
l12452:
	push "anpopexit"
	cthis showhint
l12451:
l12449:
	end method
	end game

	game mg47_szafa
	parent Banshee
	method init
	new vector,tab
	push "e1_mg47_szafa_kawalki_ulozone"
	call clsave,bis
	cmp0
	je l12454
	push "begin"
	push 0
	push 1
	push 2
	push 5
	push 4
	push 3
	call tab,beginadd
	jmp l12453
l12454:
	push "begin"
	push 1
	push 0
	push 2
	push 5
	push 4
	push 3
	call tab,beginadd
l12453:
	push "mg47_szafa"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "ulozenie2v.pyzH 3"
	push "galka.pyz 4"
	push "brakujacy_kawalek.pyzH 5"
	push "galka_maska.pyz 6"
	push "slot_0.pyzH 6"
	push "slot_1.pyzH 7"
	push "slot_2.pyzH 8"
	push "slot_3.pyzH 9"
	push "slot_4.pyzH 10"
	push "slot_5.pyzH 11"
	push "rect_0.pyzH 7"
	push "rect_1.pyz 8"
	push "rect_2.pyz 9"
	push "rect_3.pyz 10"
	push "rect_4.pyz 11"
	push "rect_5.pyz 12"
	push "ulozone.pyzH 13"
	push "ulozone_blik.pyzH 14"
	push "wnetrze.pyzH 15"
	push "eliksir_zielono_czerwony.pyzH 16"
	push "door_open.pyzH 17"
	push "babel1.pyz 43"
	push "babel2.pyz 43"
	push "woda.pyz 44"
	push "ramka.pyz 45"
	push "popexit.pyz 46"
	cthis imgs=
	push A
	push "bgrpodwodaN 40"
	push "butclick2 80"
	push "opendoor2 50"
	push "magical"
	push "hofound 40"
	cthis sfxs=
	cthis butpopexit
	cthis butpopexitisinramka
	push 0
	call anwoda,play
	push 0
	call anbabel1,play
	push 0
	call anbabel2,play
	push "mg47"
	cthis askopis
	call anaskopis,hide
	call anpopexit,getcx
	call anaskopis,getw
	pop $b
	popax
	add $a,$b
	call anpopexit,getcy
	call anaskopis,geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call anaskopis,ansetbpos
	cthis init_game
	push "e1_mg47_szafa_kawalki_uzyte"
	call clsave,bis
	neg
	cmp0
	je l12456
	call anrect_1,hide
	call anrect_2,hide
	call anrect_3,hide
	call anrect_4,hide
l12456:
	call anbrakujacy_kawalek,mg47_szafa0
	push "onfinish"
	push "mg47_szafa6"
	call andoor_open,addmethod
	push "e1_mg47_szafa_drzwi_otwarte"
	call clsave,bis
	neg
	cmp0
	je l12460
	call angalka,mg47_szafa8
l12460:
	push "e1_mg47_szafa_kawalki_ulozone"
	call clsave,bis
	cmp0
	je l12472
	push "e1_mg47_szafa_klamka_odblokowana"
	call clsave,bis
	neg
	jmp l12474
l12472:
	push 0
	jmp l12474
l12473:
	push 1
l12474:
	cmp0
	je l12475
	push 0
	call anbrakujacy_kawalek,play
	call anbrakujacy_kawalek,butenable
	jmp l12471
l12475:
	call anbrakujacy_kawalek,butdisable
l12471:
	push "e1_mg47_szafa_klamka_odblokowana"
	call clsave,bis
	cmp0
	je l12477
	push "e1_mg47_szafa_drzwi_otwarte"
	call clsave,bis
	neg
	jmp l12479
l12477:
	push 0
	jmp l12479
l12478:
	push 1
l12479:
	cmp0
	je l12480
	call anulozone,show
l12480:
	push "taken_eliksir_zielono_czerwony"
	call clsave,bis
	neg
	cmp0
	je l12482
	push "aneliksir_zielono_czerwony"
	cthis setasitemtopck
	push "e1_mg47_szafa_drzwi_otwarte"
	call clsave,bis
	cmp0
	je l12484
	call aneliksir_zielono_czerwony,show
	jmp l12483
l12484:
	call aneliksir_zielono_czerwony,butdisable
l12483:
l12482:
	push "e1_mg47_szafa_drzwi_otwarte"
	call clsave,bis
	cmp0
	je l12486
	call anwnetrze,show
	jmp l12485
l12486:
	push "anulozenie2v"
	cthis gui_toloupe
l12485:
	push "e1_mg47_szafa_kawalki_uzyte"
	call clsave,bis
	cmp0
	je l12488
	push "e1_mg47_szafa_kawalki_ulozone"
	call clsave,bis
	neg
	jmp l12490
l12488:
	push 0
	jmp l12490
l12489:
	push 1
l12490:
	cmp0
	je l12491
	call guihint,switchtoskip
	call anaskopis,show
l12491:
	cthis stdstart
	end method
	method mg47_szafa0
	push "isbutin"
	push "mg47_szafa1"
	cthis addmethod
	push "butmoveon"
	push "mg47_szafa2"
	cthis addmethod
	push "butmoveoff"
	push "mg47_szafa3"
	cthis addmethod
	push "butclick"
	push "mg47_szafa4"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg47_szafa1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	end method
	method mg47_szafa2
	push "take"
	call advmouse,set
	end method
	method mg47_szafa3
	call advmouse,setstd
	end method
	method mg47_szafa4
	cthis advstdstate
	neg
	cmp0
	je l12458
	ret
l12458:
	call fxmagical,play
	cthis getname
	call butgame,removebut
	push 500
	push "null"
	cthis anfadeout
	push 500
	push "mg47_szafa5"
	call anulozone,anfadein
	push "e1_mg47_szafa_klamka_odblokowana"
	call clsave,bset
	call advmouse,setstd
	end method
	method mg47_szafa5
	push 0
	call anulozone_blik,play
	end method
	method mg47_szafa6
	push 300
	push "mg47_szafa7"
	cthis anfadeout
	end method
	method mg47_szafa7
	call fxhofound,play
	end method
	method mg47_szafa8
	push "isbutin"
	push "mg47_szafa9"
	cthis addmethod
	push "butmoveon"
	push "mg47_szafa10"
	cthis addmethod
	push "butmoveoff"
	push "mg47_szafa11"
	cthis addmethod
	push "butclick"
	push "mg47_szafa12"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg47_szafa9
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 0
	cthis isin
	end method
	method mg47_szafa10
	cthis advstdstate
	neg
	cmp0
	jne l12463
	push "e1_mg47_szafa_klamka_odblokowana"
	call clsave,bis
	neg
	cmp0
	jne l12463
	push "e1_mg47_szafa_drzwi_otwarte"
	call clsave,bis
	jmp l12464
l12462:
	push 0
	jmp l12464
l12463:
	push 1
l12464:
	cmp0
	je l12465
	ret
l12465:
	push "take"
	call advmouse,set
	end method
	method mg47_szafa11
	call advmouse,setstd
	end method
	method mg47_szafa12
	cthis advstdstate
	neg
	cmp0
	jne l12468
	push "e1_mg47_szafa_kawalki_ulozone"
	call clsave,bis
	neg
	jmp l12469
l12467:
	push 0
	jmp l12469
l12468:
	push 1
l12469:
	cmp0
	je l12470
	ret
l12470:
	cthis getname
	call butgame,removebut
	call anwnetrze,show
	call aneliksir_zielono_czerwony,show
	call aneliksir_zielono_czerwony,butenable
	call fxopendoor2,play
	push 0
	call andoor_open,play
	push "e1_mg47_szafa_drzwi_otwarte"
	call clsave,bset
	push "anulozenie2v"
	cthis gui_removefromloupe
	call anulozenie2v,hide
	call advmouse,setstd
	end method
	method aneliksir_zielono_czerwony_TAKE
	cthis set_mg_finished
	push "eliksir_zielono_czerwony"
	cthis popitem_gotocenter
	end method
	method aneliksir_zielono_czerwony_INPCK
	push "eliksir_zielono_czerwony"
	cthis addtopck
	cthis timfinito
	end method
	method mend
	push "ad47_szafa"
	push "gamead47_szafa0"
	cthis stdexitdefadv
	end method
	method init_game
	localint $1
	push 0
	pop $1
l12492:
	push $1
	push 6
	cmpjl
	cmp0
	je l12493
	jmp l12495
l12494:
	add $1,1
	pop $1
	jmp l12492
l12495:
	localint $2
	push $1
	call tab,get
	pop $2
	push $1
	push $2
	cthis init_slot
	push $2
	push $1
	cthis init_rect
	jmp l12494
l12493:
	end method
	method init_slot
	localint $1
	localint $2
	pop $2
	pop $1
	push "anslot_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	push $2
	spop $a
	call [$a],mg47_szafa13
	end method
	method mg47_szafa13
	localint $1
	localint $2
	pop $2
	pop $1
	push A
	push "index"
	push $1
	push "id"
	push $2
	cthis vars2
	end method
	method init_rect
	localint $1
	localint $2
	pop $2
	pop $1
	push "anrect_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	push $2
	spop $a
	call [$a],mg47_szafa14
	end method
	method mg47_szafa14
	localint $1
	localint $2
	pop $2
	pop $1
	push A
	push "id"
	push $1
	push "index"
	push $2
	cthis vars2
	push "anslot_"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getpx
	push "anslot_"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getpy
	cthis ansetbpos
	push "isbutin"
	push "mg47_szafa15"
	cthis addmethod
	push "butmoveon"
	push "mg47_szafa16"
	cthis addmethod
	push "butmoveoff"
	push "mg47_szafa17"
	cthis addmethod
	push "butclick"
	push "mg47_szafa18"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg47_szafa15
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 1
	cthis isin
	end method
	method mg47_szafa16
	push "e1_mg47_szafa_kawalki_ulozone"
	call clsave,bis
	cmp0
	je l12497
	ret
l12497:
	push "e1_mg47_szafa_kawalki_uzyte"
	call clsave,bis
	neg
	cmp0
	je l12499
	push "use"
	call advmouse,set
	jmp l12498
l12499:
	push "take"
	call advmouse,set
l12498:
	end method
	method mg47_szafa17
	call advmouse,setstd
	end method
	method mg47_szafa18
	cthis advstdstate
	neg
	cmp0
	jne l12502
	push "e1_mg47_szafa_kawalki_uzyte"
	call clsave,bis
	neg
	cmp0
	jne l12502
	push "e1_mg47_szafa_kawalki_ulozone"
	call clsave,bis
	jmp l12503
l12501:
	push 0
	jmp l12503
l12502:
	push 1
l12503:
	cmp0
	je l12504
	ret
l12504:
	cthis index
	cthis can_move_left
	cmp0
	je l12506
	cthis index
	cthis id
	cthis move_left
	jmp l12505
l12506:
	cthis index
	cthis can_move_right
	cmp0
	je l12508
	cthis index
	cthis id
	cthis move_right
	jmp l12507
l12508:
	cthis index
	cthis can_move_up
	cmp0
	je l12510
	cthis index
	cthis id
	cthis move_up
	jmp l12509
l12510:
	cthis index
	cthis can_move_down
	cmp0
	je l12512
	cthis index
	cthis id
	cthis move_down
l12512:
l12509:
l12507:
l12505:
	end method
	method can_move_left
	localint $1
	pop $1
	push $1
	push 0
	cmpjne
	cmp0
	je l12514
	push $1
	push 2
	cmpjne
	cmp0
	je l12514
	push $1
	push 4
	cmpjne
	jmp l12516
l12514:
	push 0
	jmp l12516
l12515:
	push 1
l12516:
	cmp0
	je l12517
	localint $2
	push $1
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
	push "anslot_"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],id
	push 0
	cmpje
	cmp0
	je l12519
	push 1
	ret
l12519:
l12517:
	push 0
	ret
	end method
	method can_move_right
	localint $1
	pop $1
	push $1
	push 1
	cmpjne
	cmp0
	je l12521
	push $1
	push 3
	cmpjne
	cmp0
	je l12521
	push $1
	push 5
	cmpjne
	jmp l12523
l12521:
	push 0
	jmp l12523
l12522:
	push 1
l12523:
	cmp0
	je l12524
	localint $2
	push $1
	push 1
	pop $b
	popax
	add $a,$b
	pop $2
	push "anslot_"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],id
	push 0
	cmpje
	cmp0
	je l12526
	push 1
	ret
l12526:
l12524:
	push 0
	ret
	end method
	method can_move_up
	localint $1
	pop $1
	push $1
	push 0
	cmpjne
	cmp0
	je l12528
	push $1
	push 1
	cmpjne
	jmp l12530
l12528:
	push 0
	jmp l12530
l12529:
	push 1
l12530:
	cmp0
	je l12531
	localint $2
	push $1
	push 2
	pop $b
	popax
	sub $a,$b
	pop $2
	push "anslot_"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],id
	push 0
	cmpje
	cmp0
	je l12533
	push 1
	ret
l12533:
l12531:
	push 0
	ret
	end method
	method can_move_down
	localint $1
	pop $1
	push $1
	push 4
	cmpjne
	cmp0
	je l12535
	push $1
	push 5
	cmpjne
	jmp l12537
l12535:
	push 0
	jmp l12537
l12536:
	push 1
l12537:
	cmp0
	je l12538
	localint $2
	push $1
	push 2
	pop $b
	popax
	add $a,$b
	pop $2
	push "anslot_"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],id
	push 0
	cmpje
	cmp0
	je l12540
	push 1
	ret
l12540:
l12538:
	push 0
	ret
	end method
	method move_left
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	popax
	sub 0,$a
	cthis move_rect
	end method
	method move_right
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	cthis move_rect
	end method
	method move_up
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push 2
	popax
	sub 0,$a
	cthis move_rect
	end method
	method move_down
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push 2
	cthis move_rect
	end method
	method move_rect
	localint $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	localint $4
	push $1
	push $3
	pop $b
	popax
	add $a,$b
	pop $4
	push "anrect_"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push "anslot_"
	push $4
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getpx
	push "anslot_"
	push $4
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getpy
	spop $a
	call [$a],ansetbpos
	push "anslot_"
	push $4
	pop $b
	popax
	add $a,$b
	spushs
	push $2
	spop $a
	call [$a],id=
	push "anrect_"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push $4
	spop $a
	call [$a],index=
	push "anslot_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 0
	spop $a
	call [$a],id=
	push "anslot_"
	push $4
	pop $b
	popax
	add $a,$b
	spushs
	push $2
	spop $a
	call [$a],id=
	call fxbutclick2,play
	cthis check_won
	cmp0
	je l12542
	push "e1_mg47_szafa_kawalki_ulozone"
	call clsave,bset
	call advmouse,setstd
	push 0
	call anbrakujacy_kawalek,play
	push 500
	push "mg47_szafa19"
	call anbrakujacy_kawalek,anfadein
	call fxmagical,play
l12542:
	end method
	method mg47_szafa19
	call anbrakujacy_kawalek,butenable
	end method
	method check_won
	localint $1
	push 1
	pop $1
l12543:
	push $1
	push 6
	cmpjl
	cmp0
	je l12544
	jmp l12546
l12545:
	add $1,1
	pop $1
	jmp l12543
l12546:
	push "anrect_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],id
	push "anrect_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],index
	cmpjne
	cmp0
	je l12548
	push 0
	ret
l12548:
	jmp l12545
l12544:
	push 1
	ret
	end method
	method USE_kwadrat_4
	cthis advsetstdstate
	push "e1_mg47_szafa_kawalki_uzyte"
	call clsave,bset
	call anrect_1,show
	call anrect_2,show
	call anrect_3,show
	call anrect_4,show
	push "kwadrat_4"
	cthis removefrompck
	call guihint,switchtoskip
	call anaskopis,show
	call advmouse,setstd
	call fxbutclick2,play
	end method
	method SKIP_CLICK
	cthis advstdstate
	cmp0
	je l12550
	push "e1_mg47_szafa_kawalki_ulozone"
	call clsave,bset
	localint $1
	push 0
	pop $1
l12551:
	push $1
	push 6
	cmpjl
	cmp0
	je l12552
	jmp l12554
l12553:
	add $1,1
	pop $1
	jmp l12551
l12554:
	push "anrect_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push "anslot_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getpx
	push "anslot_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getpy
	spop $a
	call [$a],ansetbpos
	jmp l12553
l12552:
	call advmouse,setstd
	push 0
	call anbrakujacy_kawalek,play
	push 500
	push "mg47_szafa20"
	call anbrakujacy_kawalek,anfadein
	call guihint,switchtohint
l12550:
	end method
	method mg47_szafa20
	call anbrakujacy_kawalek,butenable
	end method
	method HINT_CLICK
	push "ma_kwadrat_4"
	call clsave,bis
	cmp0
	je l12556
	push "anulozone"
	cthis showhint
	push "kwadrat_4"
	cthis showhintitem
	jmp l12555
l12556:
	push "e1_mg47_szafa_kawalki_ulozone"
	call clsave,bis
	cmp0
	je l12558
	push "e1_mg47_szafa_klamka_odblokowana"
	call clsave,bis
	neg
	jmp l12560
l12558:
	push 0
	jmp l12560
l12559:
	push 1
l12560:
	cmp0
	je l12561
	push "anbrakujacy_kawalek"
	cthis showhint
	jmp l12557
l12561:
	push "e1_mg47_szafa_klamka_odblokowana"
	call clsave,bis
	cmp0
	je l12563
	push "e1_mg47_szafa_drzwi_otwarte"
	call clsave,bis
	neg
	jmp l12565
l12563:
	push 0
	jmp l12565
l12564:
	push 1
l12565:
	cmp0
	je l12566
	push "angalka"
	cthis showhint
	jmp l12562
l12566:
	push "e1_mg47_szafa_drzwi_otwarte"
	call clsave,bis
	cmp0
	je l12568
	push "taken_eliksir_zielono_czerwony"
	call clsave,bis
	neg
	jmp l12570
l12568:
	push 0
	jmp l12570
l12569:
	push 1
l12570:
	cmp0
	je l12571
	push "aneliksir_zielono_czerwony"
	cthis showhint
	jmp l12567
l12571:
	push "anpopexit"
	cthis showhint
l12567:
l12562:
l12557:
l12555:
	end method
	end game

	game mgProfiles
	parent StdGame
	method init
	push "mg_profiles"
	clparent StdGame,init
	cthis checktouchpad
	cmp0
	je l12573
	push A
	push "bkg_pad.jpg 1"
	push "pien.pyz 2"
	push "ok_button.pyz 3"
	push "slot1.pyz 3"
	push "slot2.pyz 3"
	push "slot3.pyz 3"
	push "slot4.pyz 3"
	push "slot5.pyz 3"
	push "but1.pyz 4"
	push "but2.pyz 4"
	push "but3.pyz 4"
	push "but4.pyz 4"
	push "but5.pyz 4"
	push "ask_enter_bkg.pyzH 15"
	push "askokbtn.pyzH 16"
	push "askcancelbtn.pyzH 16"
	push "ask_del_bkg.pyzH 15"
	push "askdelete.pyzH 16"
	push "askno.pyzH 16"
	push "input.pyzH 2"
	cthis imgs=
	jmp l12572
l12573:
	push A
	push "bkg.jpg 1"
	push "pien.pyz 2"
	push "ok_button.pyz 3"
	push "slot1.pyz 3"
	push "slot2.pyz 3"
	push "slot3.pyz 3"
	push "slot4.pyz 3"
	push "slot5.pyz 3"
	push "but1.pyz 4"
	push "but2.pyz 4"
	push "but3.pyz 4"
	push "but4.pyz 4"
	push "but5.pyz 4"
	push "ask_enter_bkg.pyzH 15"
	push "askokbtn.pyzH 16"
	push "askcancelbtn.pyzH 16"
	push "ask_del_bkg.pyzH 15"
	push "askdelete.pyzH 16"
	push "askno.pyzH 16"
	push "input.pyzH 2"
	cthis imgs=
l12572:
	new img,img_enter_name
	new img,img_delete_name
	new font,fntprnom
	push "bookfont:"
	call dbconf,dbget
	push 40
	call fntprnom,load
	push "fntprnom"
	push 40
	push 255
	push 255
	push 255
	push "a0 "
	push 9
	new ConTextTyper,input
	push "aninput"
	spushs
	spop $a
	call [$a],getcx
	push "aninput"
	spushs
	spop $a
	call [$a],getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push "aninput"
	spushs
	spop $a
	call [$a],getcy
	push "aninput"
	spushs
	spop $a
	call [$a],geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call input,setpos
	push 30
	call input,setz
	new int,p_znak
	push 1
	pop p_znak
	push "newplayer"
	call dbgame,dbget
	call input,txtset
	call input,hide
	call input,disable
	new int,slot_selected
	push 0
	pop slot_selected
	new int,slot_selected_tmp
	push 0
	pop slot_selected_tmp
	new int,bFullScreen
	push 0
	pop bFullScreen
	push 1
	call clsmen,saveonset=
	push "currentprofile"
	call clsmen,has
	cmp0
	je l12575
	push "currentprofile"
	call clsmen,get
	pop slot_selected
	push "fullscreen"
	call clsmen,get
	pop bFullScreen
l12575:
	new font,fntprofile
	push "menufont:"
	call dbconf,dbget
	push 40
	call fntprofile,load
	call anok_button,mgProfiles0
	localint $1
	push 1
	pop $1
l12581:
	push $1
	push 6
	cmpjl
	cmp0
	je l12582
	jmp l12584
l12583:
	add $1,1
	pop $1
	jmp l12581
l12584:
	push "anbut"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	spop $a
	call [$a],mgProfiles5
	push "anslot"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	spop $a
	call [$a],mgProfiles10
	push "txtslot"
	push $1
	pop $b
	popax
	add $a,$b
	push "empty"
	push "fntprofile"
	push 240
	push 109
	push 13
	cthis newtext
	push "txtslot"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 5
	spop $a
	call [$a],setz
	push $1
	cthis hasprofile
	cmp0
	je l12593
	push "txtslot"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push "profilename_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsmen,get
	spop $a
	call [$a],txtset
	push "txtslot"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],show
	push "txtslot"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push "anslot"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getcx
	push "txtslot"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push 15
	pop $b
	popax
	sub $a,$b
	push "anslot"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getcy
	push "txtslot"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push 5
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	jmp l12592
l12593:
	push "txtslot"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],hide
l12592:
	jmp l12583
l12582:
	push slot_selected
	push 0
	cmpja
	cmp0
	je l12595
	cthis monly_profile
	cmp0
	je l12597
	push "anbut"
	push slot_selected
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],hide
l12597:
	push "anslot"
	push slot_selected
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	push 1
	spop $a
	call [$a],setframe
l12595:
	push "mgProfiles13"
	call ccs,enter
	new gmimgvec,grenter_name
	push A
	push "anask_enter_bkg"
	push "anaskokbtn"
	push "anaskcancelbtn"
	push "input"
	call grenter_name,addlist
	new gmimgvec,grdelete
	push A
	push "anask_del_bkg"
	push "anaskdelete"
	push "anaskno"
	call grdelete,addlist
	call anaskokbtn,Button_isinalpha
	call anaskokbtn,Button_moveon_std
	call anaskokbtn,Button_moveoff
	push "butclick"
	push "mgProfiles14"
	call anaskokbtn,addmethod
	push "anaskokbtn"
	call butgame,add
	call anaskcancelbtn,Button_isinalpha
	call anaskcancelbtn,Button_moveoff
	call anaskcancelbtn,Button_moveon_std
	push "butclick"
	push "mgProfiles16"
	call anaskcancelbtn,addmethod
	push "anaskcancelbtn"
	call butgame,add
	call anaskdelete,Button_isinalpha
	call anaskdelete,Button_moveon_std
	call anaskdelete,Button_moveoff
	push "butclick"
	push "mgProfiles18"
	call anaskdelete,addmethod
	push "anaskdelete"
	call butgame,add
	call anaskno,Button_isinalpha
	call anaskno,Button_moveoff
	call anaskno,Button_moveon_std
	push "butclick"
	push "mgProfiles20"
	call anaskno,addmethod
	push "anaskno"
	call butgame,add
	end method
	method mgProfiles0
	push "isbutin"
	push "mgProfiles1"
	cthis addmethod
	push "butmoveon"
	push "mgProfiles2"
	cthis addmethod
	push "butmoveoff"
	push "mgProfiles3"
	cthis addmethod
	push "butclick"
	push "mgProfiles4"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mgProfiles1
	localdef $1
	localdef $2
	pop $2
	pop $1
	cthis advstdstate
	cmp0
	je l12576
	push $1
	push $2
	push 1
	push 1
	cthis isin
	jmp l12578
l12576:
	push 0
	jmp l12578
l12577:
	push 1
l12578:
	end method
	method mgProfiles2
	cthis advstdstate
	cmp0
	je l12580
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
l12580:
	end method
	method mgProfiles3
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	call advmouse,setstd
	end method
	method mgProfiles4
	push "currentprofile"
	push slot_selected
	call clsmen,set
	cthis mend
	end method
	method mgProfiles5
	localint $1
	pop $1
	push "myid"
	push $1
	cthis var2
	push "isbutin"
	push "mgProfiles6"
	cthis addmethod
	push "butmoveon"
	push "mgProfiles7"
	cthis addmethod
	push "butmoveoff"
	push "mgProfiles8"
	cthis addmethod
	push "butclick"
	push "mgProfiles9"
	cthis addmethod
	cthis myid
	cthis hasprofile
	cmp0
	je l12591
	push "anbut"
	cthis myid
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	push 2
	spop $a
	call [$a],setframe
l12591:
	cthis getname
	call butgame,add
	end method
	method mgProfiles6
	localdef $1
	localdef $2
	pop $2
	pop $1
	cthis advstdstate
	cmp0
	je l12585
	push $1
	push $2
	push 1
	push 1
	cthis isin
	jmp l12587
l12585:
	push 0
	jmp l12587
l12586:
	push 1
l12587:
	end method
	method mgProfiles7
	cthis advstdstate
	cmp0
	je l12589
	cthis myid
	cthis but_over
l12589:
	end method
	method mgProfiles8
	cthis myid
	cthis but_off
	call advmouse,setstd
	end method
	method mgProfiles9
	cthis myid
	cthis but_clicked
	end method
	method mgProfiles10
	localint $1
	pop $1
	push "myid"
	push $1
	cthis var2
	cthis Button_isinalpha
	push "butmoveoff"
	push "mgProfiles11"
	cthis addmethod
	push "butclick"
	push "mgProfiles12"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mgProfiles11
	call advmouse,setstd
	end method
	method mgProfiles12
	cthis myid
	cthis slot_clicked
	end method
	method mgProfiles13
	call ccs,buildblack
	cthis advsetstdstate
	push "engine"
	call mus,smixer=
	push "ck1_loop.ogg -v 40 -l"
	call mus,playstr
	end method
	method mgProfiles14
	push 1
	cthis refresh_slots
	push slot_selected_tmp
	pop slot_selected
	push "anslot"
	push slot_selected_tmp
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	push 1
	spop $a
	call [$a],setframe
	push "profilename_"
	push slot_selected_tmp
	pop $b
	popax
	add $a,$b
	call input,get
	call clsmen,set
	push "currentprofile"
	push slot_selected_tmp
	call clsmen,set
	push "difficulty_"
	push slot_selected_tmp
	pop $b
	popax
	add $a,$b
	push 1
	call clsmen,set
	push "GAME_diflevel"
	push 1
	call clsave,set
	push "txtslot"
	push slot_selected_tmp
	pop $b
	popax
	add $a,$b
	spushs
	push "profilename_"
	push slot_selected_tmp
	pop $b
	popax
	add $a,$b
	call clsmen,get
	spop $a
	call [$a],txtset
	push "txtslot"
	push slot_selected_tmp
	pop $b
	popax
	add $a,$b
	spushs
	push "anslot"
	push slot_selected_tmp
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getcx
	push "txtslot"
	push slot_selected_tmp
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push 15
	pop $b
	popax
	sub $a,$b
	push "anslot"
	push slot_selected_tmp
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getcy
	push "txtslot"
	push slot_selected_tmp
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push 5
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	push "txtslot"
	push slot_selected_tmp
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],show
	push "anbut"
	push slot_selected_tmp
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	push 2
	spop $a
	call [$a],setframe
	cthis hide_enter_name
	call keyboard,hide
	push 300
	push 1
	popax
	sub 0,$a
	push 1
	popax
	sub 0,$a
	push "mgProfiles15"
	call img_enter_name,anzoomfadeinout
	end method
	method mgProfiles15
	cthis advsetstdstate
	end method
	method mgProfiles16
	cthis hide_enter_name
	push 200
	push 1
	popax
	sub 0,$a
	push 1
	popax
	sub 0,$a
	push "mgProfiles17"
	call img_enter_name,anzoomfadeinout
	end method
	method mgProfiles17
	cthis advsetstdstate
	end method
	method mgProfiles18
	push "profilename_"
	push slot_selected_tmp
	pop $b
	popax
	add $a,$b
	call clsmen,remove
	push "difficulty_"
	push slot_selected_tmp
	pop $b
	popax
	add $a,$b
	call clsmen,remove
	push "profile_"
	push slot_selected_tmp
	pop $b
	popax
	add $a,$b
	push "_started_game"
	pop $b
	popax
	add $a,$b
	push 0
	call clsmen,set
	push "txtslot"
	push slot_selected_tmp
	pop $b
	popax
	add $a,$b
	spushs
	push ""
	spop $a
	call [$a],txtset
	push "txtslot"
	push slot_selected_tmp
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],hide
	push "anbut"
	push slot_selected_tmp
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	push 0
	spop $a
	call [$a],setframe
	cthis mfirstprofile
	pop slot_selected
	push "currentprofile"
	push slot_selected
	call clsmen,set
	push 0
	cthis refresh_slots
	push slot_selected
	push 0
	cmpja
	cmp0
	je l12599
	push "anslot"
	push slot_selected
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	push 1
	spop $a
	call [$a],setframe
	cthis monly_profile
	cmp0
	je l12601
	push "anbut"
	push slot_selected
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],hide
l12601:
l12599:
	cthis hide_ask_delete
	push 200
	push 1
	popax
	sub 0,$a
	push 1
	popax
	sub 0,$a
	push "mgProfiles19"
	call img_delete_name,anzoomfadeinout
	end method
	method mgProfiles19
	cthis advsetstdstate
	cthis hide
	end method
	method mgProfiles20
	push slot_selected
	spushs
	spop $h
	call $h,print
	push "currentprofile"
	push slot_selected
	call clsmen,set
	push "anslot"
	push slot_selected
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	push 1
	spop $a
	call [$a],setframe
	cthis monly_profile
	cmp0
	je l12603
	push "anbut"
	push slot_selected
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],hide
l12603:
	cthis hide_ask_delete
	push 200
	push 1
	popax
	sub 0,$a
	push 1
	popax
	sub 0,$a
	push "mgProfiles21"
	call img_delete_name,anzoomfadeinout
	end method
	method mgProfiles21
	cthis advsetstdstate
	cthis hide
	end method
	method hasprofile
	localint $1
	pop $1
	push "profilename_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsmen,has
	end method
	method but_over
	localint $1
	pop $1
	push $1
	push slot_selected
	cmpje
	cmp0
	je l12605
	cthis monly_profile
	jmp l12607
l12605:
	push 0
	jmp l12607
l12606:
	push 1
l12607:
	cmp0
	je l12608
	ret
l12608:
	push $1
	cthis hasprofile
	cmp0
	je l12610
	push "anbut"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	push 3
	spop $a
	call [$a],setframe
	jmp l12609
l12610:
	push "anbut"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	push 1
	spop $a
	call [$a],setframe
l12609:
	end method
	method but_off
	localint $1
	pop $1
	push $1
	cthis hasprofile
	cmp0
	je l12612
	push "anbut"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	push 2
	spop $a
	call [$a],setframe
	jmp l12611
l12612:
	push "anbut"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	push 0
	spop $a
	call [$a],setframe
l12611:
	end method
	method but_clicked
	localint $1
	pop $1
	push "profilename_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsmen,has
	cmp0
	je l12614
	cthis monly_profile
	cmp0
	je l12616
	ret
l12616:
	push $1
	pop slot_selected_tmp
	cthis show_ask_delete
	jmp l12613
l12614:
	push $1
	pop slot_selected_tmp
	cthis show_enter_name
l12613:
	end method
	method slot_clicked
	localint $1
	pop $1
	push $1
	cthis hasprofile
	cmp0
	je l12618
	push "profilename_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsmen,get
	jmp l12620
l12618:
	push 0
	jmp l12620
l12619:
	push 1
l12620:
	cmp0
	je l12621
	push $1
	pop slot_selected
	push 0
	cthis refresh_slots
	push "anslot"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	push 1
	spop $a
	call [$a],setframe
l12621:
	end method
	method mfirstprofile
	localint $1
	push 1
	pop $1
l12622:
	push $1
	push 6
	cmpjl
	cmp0
	je l12623
	jmp l12625
l12624:
	add $1,1
	pop $1
	jmp l12622
l12625:
	push $1
	cthis hasprofile
	cmp0
	je l12627
	push "profilename_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsmen,get
	jmp l12629
l12627:
	push 0
	jmp l12629
l12628:
	push 1
l12629:
	cmp0
	je l12630
	push $1
	ret
l12630:
	jmp l12624
l12623:
	end method
	method monly_profile
	localint $1
	push 0
	pop $1
	localint $2
	push 1
	pop $2
l12631:
	push $2
	push 6
	cmpjl
	cmp0
	je l12632
	jmp l12634
l12633:
	add $2,1
	pop $2
	jmp l12631
l12634:
	push $2
	cthis hasprofile
	cmp0
	je l12636
	add $1,1
	pop $1
l12636:
	jmp l12633
l12632:
	push $1
	push 1
	cmpje
	cmp0
	je l12638
	push 1
	ret
	jmp l12637
l12638:
	push 0
	ret
l12637:
	end method
	method refresh_slots
	localint $1
	pop $1
	localint $2
	push 1
	pop $2
l12639:
	push $2
	push 6
	cmpjl
	cmp0
	je l12640
	jmp l12642
l12641:
	add $2,1
	pop $2
	jmp l12639
l12642:
	cthis monly_profile
	neg
	cmp0
	jne l12645
	push $1
	jmp l12646
l12644:
	push 0
	jmp l12646
l12645:
	push 1
l12646:
	cmp0
	je l12647
	push "anbut"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],show
l12647:
	push "anslot"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	push 0
	spop $a
	call [$a],setframe
	jmp l12641
l12640:
	end method
	method input_ontype
	push p_znak
	cmp0
	je l12649
	localdef $1
	push 0
	call input,get
	pop $1
	push ""
	call input,txtset
	push 0
	pop p_znak
l12649:
	end method
	method input_onenter
	cthis enable
	cthis mcheckname
	end method
	method input_ontyped
	cthis mcheckname
	end method
	method mcheckname
	localdef $1
	call input,get
	pop $1
	call $1,clear
	call $1,length
	push 0
	cmpja
	cmp0
	je l12650
	push $1
	cthis check_duplicate
	neg
	jmp l12652
l12650:
	push 0
	jmp l12652
l12651:
	push 1
l12652:
	cmp0
	je l12654
	call anaskokbtn,show
	jmp l12653
l12654:
	call anaskokbtn,hide
l12653:
	end method
	method check_duplicate
	localstring $1
	pop $1
	localint $2
	push 1
	pop $2
l12655:
	push $2
	push 6
	cmpjl
	cmp0
	je l12656
	jmp l12658
l12657:
	add $2,1
	pop $2
	jmp l12655
l12658:
	push "profilename_"
	push $2
	pop $b
	popax
	add $a,$b
	call clsmen,get
	push $1
	cmpje
	cmp0
	je l12660
	push 1
	ret
l12660:
	jmp l12657
l12656:
	push 0
	ret
	end method
	method hide_enter_name
	call grenter_name,hide
	call input,disable
	cthis advsetstdstate
	end method
	method buildimg_enter_name
	push A
	push "anask_enter_bkg"
	push "anaskokbtn"
	push "anaskcancelbtn"
	call img_enter_name,imgbuildfromlist
	end method
	method show_enter_name
	push 1
	pop p_znak
	cthis buildimg_enter_name
	cthis hide_enter_name
	push "state_popup"
	pop sgmstate
	push 200
	push 1
	push 1
	push "mgProfiles22"
	call img_enter_name,anzoomfadeinout
	end method
	method mgProfiles22
	localstring $1
	push "newplayer"
	call dbgame,dbget
	pop $1
	push $1
	call input,txtset
	call input,enable
	push "aninput"
	spushs
	spop $a
	call [$a],getpx
	push "aninput"
	spushs
	spop $a
	call [$a],getpy
	push "aninput"
	spushs
	spop $a
	call [$a],getw
	push "aninput"
	spushs
	spop $a
	call [$a],geth
	call keyboard,show
	call grenter_name,show
	push $1
	cthis check_duplicate
	neg
	cmp0
	je l12662
	call anaskokbtn,show
	jmp l12661
l12662:
	call anaskokbtn,hide
l12661:
	end method
	method hide_ask_delete
	call grdelete,hide
	cthis advsetstdstate
	end method
	method buildimg_ask_delete
	push A
	push "anask_del_bkg"
	push "anaskdelete"
	push "anaskno"
	call img_delete_name,imgbuildfromlist
	end method
	method show_ask_delete
	cthis buildimg_ask_delete
	cthis hide_ask_delete
	push "state_popup"
	pop sgmstate
	push 200
	push 1
	push 1
	push "mgProfiles23"
	call img_delete_name,anzoomfadeinout
	end method
	method mgProfiles23
	call grdelete,show
	end method
	method mend
	call ccs,buildfromscreen
	push "MainMenu"
	call gameapi,play
	end method
	end game

	game mgCreateProfile
	parent StdGame
	method init
	push "mg_createprofile"
	clparent StdGame,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "ok_button.pyz 3"
	push "cancel_button.pyz 3"
	push "input.pyzH 2"
	cthis imgs=
	cthis butpopexit
	new int,p_znak
	push 1
	pop p_znak
	new font,fntprnom
	push "bookfont:"
	call dbconf,dbget
	push 40
	call fntprnom,load
	push 1
	call clsmen,saveonset=
	new int,iProfilId
	push 1
	pop iProfilId
	push "fntprnom"
	push 40
	push 255
	push 255
	push 255
	push "a0 "
	push 9
	new ConTextTyper,input
	push "aninput"
	spushs
	spop $a
	call [$a],getcx
	push "aninput"
	spushs
	spop $a
	call [$a],getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push "aninput"
	spushs
	spop $a
	call [$a],getcy
	push "aninput"
	spushs
	spop $a
	call [$a],geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call input,setpos
	push 30
	call input,setz
	push "newplayer"
	call dbgame,dbget
	call input,txtset
	call input,show
	call input,enable
	call anok_button,mgCreateProfile0
	call ancancel_button,mgCreateProfile5
	push "engine"
	call mus,smixer=
	push "intro.ogg -v 80 -l"
	call mus,playstr
	call ccs,buildblack
	push "mgCreateProfile10"
	call ccs,enter
	end method
	method mgCreateProfile0
	push "isbutin"
	push "mgCreateProfile1"
	cthis addmethod
	push "butmoveon"
	push "mgCreateProfile2"
	cthis addmethod
	push "butmoveoff"
	push "mgCreateProfile3"
	cthis addmethod
	push "butclick"
	push "mgCreateProfile4"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mgCreateProfile1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 1
	cthis isin
	end method
	method mgCreateProfile2
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	call advmouse,setstd
	end method
	method mgCreateProfile3
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	call advmouse,setstd
	end method
	method mgCreateProfile4
	cthis isvisible
	neg
	cmp0
	je l12664
	ret
l12664:
	push "currentprofile"
	push iProfilId
	call clsmen,set
	push "profilename_"
	push iProfilId
	pop $b
	popax
	add $a,$b
	call input,get
	call clsmen,set
	cthis setstdprofile
	cthis mend
	end method
	method mgCreateProfile5
	push "isbutin"
	push "mgCreateProfile6"
	cthis addmethod
	push "butmoveon"
	push "mgCreateProfile7"
	cthis addmethod
	push "butmoveoff"
	push "mgCreateProfile8"
	cthis addmethod
	push "butclick"
	push "mgCreateProfile9"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mgCreateProfile6
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 1
	cthis isin
	end method
	method mgCreateProfile7
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	call advmouse,setstd
	end method
	method mgCreateProfile8
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	call advmouse,setstd
	end method
	method mgCreateProfile9
	push "currentprofile"
	push iProfilId
	call clsmen,set
	push "profilename_"
	push iProfilId
	pop $b
	popax
	add $a,$b
	push "newplayer"
	call dbgame,dbget
	call clsmen,set
	cthis setstdprofile
	cthis mend
	end method
	method mgCreateProfile10
	cthis advsetstdstate
	push "aninput"
	spushs
	spop $a
	call [$a],getpx
	push "aninput"
	spushs
	spop $a
	call [$a],getpy
	push "aninput"
	spushs
	spop $a
	call [$a],getw
	push "aninput"
	spushs
	spop $a
	call [$a],geth
	call keyboard,show
	end method
	method input_ontype
	push p_znak
	cmp0
	je l12666
	localdef $1
	push 0
	call input,get
	pop $1
	push ""
	call input,txtset
	push 0
	pop p_znak
l12666:
	end method
	method input_ontyped
	cthis mcheckname
	end method
	method input_onenter
	cthis enable
	cthis mcheckname
	end method
	method mcheckname
	localdef $1
	call input,get
	pop $1
	call $1,clear
	call $1,length
	push 0
	cmpja
	cmp0
	je l12668
	call anok_button,show
	jmp l12667
l12668:
	call anok_button,hide
l12667:
	end method
	method setstdprofile
	push "difficulty_"
	push iProfilId
	pop $b
	popax
	add $a,$b
	push 1
	call clsmen,set
	push "fullscreen"
	push 1
	call clsmen,set
	push "sound_volume"
	push 50
	call clsmen,set
	push "voice_volume"
	push 50
	call clsmen,set
	push "music_volume"
	push 50
	call clsmen,set
	push "GAME_diflevel"
	push 1
	call clsave,set
	end method
	method mend
	call keyboard,hide
	push 300
	call mus,fadeout
	push "mgCreateProfile11"
	call ccs,close
	end method
	method mgCreateProfile11
	push "MainMenu"
	call gameapi,play
	end method
	end game

	game mgGamemodes
	parent StdGame
	method init
	push "mg_gamemodes"
	clparent StdGame,init
	push A
	push "bkg.jpg 1"
	push "button1.pyz 2"
	push "button2.pyz 2"
	push "button3.pyz 2"
	push "play.pyz 3"
	push "back.pyz 3"
	push "opis1.pyzH  22"
	push "opis2.pyzH 22"
	push "opis3.pyzH 22"
	cthis imgs=
	new int,iProfilId
	push 1
	pop iProfilId
	new int,difficulty
	push 1
	pop difficulty
	push "currentprofile"
	call clsmen,has
	cmp0
	je l12670
	push "currentprofile"
	call clsmen,get
	pop iProfilId
	push "difficulty_"
	push iProfilId
	pop $b
	popax
	add $a,$b
	call clsmen,get
	cmp0
	je l12672
	push "difficulty_"
	push iProfilId
	pop $b
	popax
	add $a,$b
	call clsmen,get
	pop difficulty
l12672:
	push "anbutton"
	push difficulty
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	push 1
	spop $a
	call [$a],setframe
l12670:
	push 1
	call clsmen,saveonset=
	call anbutton1,Button_isinalpha
	push "butmoveon"
	push "mgGamemodes0"
	call anbutton1,addmethod
	push "butmoveoff"
	push "mgGamemodes1"
	call anbutton1,addmethod
	push "butclick"
	push "mgGamemodes2"
	call anbutton1,addmethod
	push "anbutton1"
	call butgame,add
	call anbutton2,Button_isinalpha
	push "butmoveon"
	push "mgGamemodes3"
	call anbutton2,addmethod
	push "butmoveoff"
	push "mgGamemodes4"
	call anbutton2,addmethod
	push "butclick"
	push "mgGamemodes5"
	call anbutton2,addmethod
	push "anbutton2"
	call butgame,add
	call anbutton3,Button_isinalpha
	push "butmoveon"
	push "mgGamemodes6"
	call anbutton3,addmethod
	push "butmoveoff"
	push "mgGamemodes7"
	call anbutton3,addmethod
	push "butclick"
	push "mgGamemodes8"
	call anbutton3,addmethod
	push "anbutton3"
	call butgame,add
	call anplay,Button_isinalpha
	call anplay,Button_moveoff
	call anplay,Button_moveon_std
	push "butclick"
	push "mgGamemodes9"
	call anplay,addmethod
	push "anplay"
	call butgame,add
	call anback,Button_isinalpha
	call anback,Button_moveoff
	call anback,Button_moveon_std
	push "butclick"
	push "mgGamemodes11"
	call anback,addmethod
	push "anback"
	call butgame,add
	new font,fnthogui
	push "hoguifont:"
	call dbconf,dbget
	push 18
	call fnthogui,load
	push "txtpage"
	push ""
	push "fnthogui"
	push 220
	cthis grey
	cthis newtext
	push "txtpage_black"
	push ""
	push "fnthogui"
	cthis black
	cthis newtext
	push 1
	cthis create_description
	push 2
	cthis create_description
	push 3
	cthis create_description
	push "mgGamemodes12"
	call ccs,enter
	end method
	method mgGamemodes0
	call advmouse,setstd
	end method
	method mgGamemodes1
	call advmouse,setstd
	end method
	method mgGamemodes2
	cthis clear_selection
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	push 1
	pop difficulty
	end method
	method mgGamemodes3
	call advmouse,setstd
	end method
	method mgGamemodes4
	call advmouse,setstd
	end method
	method mgGamemodes5
	cthis clear_selection
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	push 2
	pop difficulty
	end method
	method mgGamemodes6
	call advmouse,setstd
	end method
	method mgGamemodes7
	call advmouse,setstd
	end method
	method mgGamemodes8
	cthis clear_selection
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	push 3
	pop difficulty
	end method
	method mgGamemodes9
	push "mgGamemodes10"
	call ccs,close
	end method
	method mgGamemodes10
	cthis getsavename
	clparent BanGui,free_save
	push "GAME_enabled_tutorial"
	call clsave,bset
	push "profile_"
	push iProfilId
	pop $b
	popax
	add $a,$b
	push "_started_game"
	pop $b
	popax
	add $a,$b
	push 1
	call clsmen,set
	push "difficulty_"
	push iProfilId
	pop $b
	popax
	add $a,$b
	push difficulty
	call clsmen,set
	push "GAME_diflevel"
	push difficulty
	call clsave,set
	push 1
	pop PrzygodaMode
	push "epizod"
	push "e1Start"
	call clsave,set
	cthis checktouchpad
	cmp0
	je l12674
	push "sys_touchpad"
	call clsave,bset
l12674:
	push "IntroGame"
	call gameapi,play
	end method
	method mgGamemodes11
	cthis mend
	end method
	method mgGamemodes12
	push "engine"
	call mus,smixer=
	push "ck1_loop.ogg -v 40 -l"
	call mus,playstr
	end method
	method create_description
	localint $1
	pop $1
	push "img"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	spop $e
	new img,[$e]
	call [$e],mgGamemodes13
	push "img2"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	spop $e
	new img,[$e]
	call [$e],mgGamemodes14
	end method
	method mgGamemodes13
	localint $1
	pop $1
	push "anopis"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getw
	push 1
	pop $b
	popax
	add $a,$b
	push "anopis"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],geth
	push 1
	pop $b
	popax
	add $a,$b
	cthis transparent
	cthis create
	push "mode"
	push $1
	pop $b
	popax
	add $a,$b
	call dbgame,dbget
	push "anopis"
	push $1
	pop $b
	popax
	add $a,$b
	push "txtpage_black"
	call fnthogui,getsize
	push 4
	pop $b
	popax
	add $a,$b
	push 1
	cthis imgfittxt
	push 10
	cthis setz
	push "anopis"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getpx
	push 1
	pop $b
	popax
	add $a,$b
	push "anopis"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getpy
	push 2
	pop $b
	popax
	add $a,$b
	cthis setpos
	end method
	method mgGamemodes14
	localint $1
	pop $1
	push "anopis"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getw
	push 1
	pop $b
	popax
	add $a,$b
	push "anopis"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],geth
	push 1
	pop $b
	popax
	add $a,$b
	cthis transparent
	cthis create
	push "mode"
	push $1
	pop $b
	popax
	add $a,$b
	call dbgame,dbget
	push "anopis"
	push $1
	pop $b
	popax
	add $a,$b
	push "txtpage"
	call fnthogui,getsize
	push 4
	pop $b
	popax
	add $a,$b
	push 1
	cthis imgfittxt
	push 11
	cthis setz
	push "anopis"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getpx
	push "anopis"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getpy
	cthis setpos
	end method
	method clear_selection
	push 1
	popax
	sub 0,$a
	push 0
	call anbutton1,setframe
	push 1
	popax
	sub 0,$a
	push 0
	call anbutton2,setframe
	push 1
	popax
	sub 0,$a
	push 0
	call anbutton3,setframe
	end method
	method mend
	call ccs,buildfromscreen
	push "MainMenu"
	call gameapi,play
	end method
	end game

	game mgOptions
	parent StdGame
	method init
	push "mg_options"
	clparent StdGame,init
	cthis checktouchpad
	cmp0
	je l12676
	push A
	push "bkg_pad.jpg 1"
	push "baza_pad.pyz 2"
	push "ok_pad.pyz 6"
	push "volume.pyz 108"
	push "volume_zakres.pyzH 4"
	push "music.pyz 108"
	push "music_zakres.pyzH 4"
	push "voice.pyz 108"
	push "voice_zakres_pad.pyzH 4"
	cthis imgs=
	jmp l12675
l12676:
	push A
	push "bkg.jpg 1"
	push "baza.pyz 2"
	push "fullscreen.pyz 4"
	push "fullscreen_check.pyzH 5"
	push "cursor.pyz 5"
	push "cursor_checkH.pyz 6"
	push "ok.pyz 6"
	push "volume.pyz 108"
	push "volume_zakres.pyzH 4"
	push "music.pyz 108"
	push "music_zakres.pyzH 4"
	push "voice.pyz 108"
	push "voice_zakres.pyzH 4"
	cthis imgs=
l12675:
	push "engine"
	call mus,smixer=
	push "ck1_loop.ogg -v 40 -l"
	call mus,playstr
	cthis checktouchpad
	neg
	cmp0
	je l12678
	new int,bFullScreen
	push 1
	pop bFullScreen
	new int,bStandardCursor
	push 1
	pop bStandardCursor
	push "currentprofile"
	call clsmen,has
	cmp0
	je l12680
	push "fullscreen"
	call clsmen,get
	pop bFullScreen
	push "system_cursor"
	call clsmen,get
	pop bStandardCursor
	push bFullScreen
	cmp0
	je l12682
	call anfullscreen_check,show
	jmp l12681
l12682:
	call anfullscreen_check,hide
l12681:
	push bStandardCursor
	cmp0
	je l12684
	call ancursor_check,show
	jmp l12683
l12684:
	call ancursor_check,hide
l12683:
l12680:
l12678:
	push 1
	call clsmen,saveonset=
	cthis checktouchpad
	cmp0
	je l12686
	call anok_pad,Button_isinalpha
	call anok_pad,Button_moveoff
	call anok_pad,Button_moveon_std
	push "butclick"
	push "mgOptions0"
	call anok_pad,addmethod
	push "anok_pad"
	call butgame,add
	jmp l12685
l12686:
	call anok,Button_isinalpha
	call anok,Button_moveoff
	call anok,Button_moveon_std
	push "butclick"
	push "mgOptions1"
	call anok,addmethod
	push "anok"
	call butgame,add
l12685:
	cthis checktouchpad
	neg
	cmp0
	je l12688
	call anfullscreen,Button_isinalpha
	call anfullscreen,Button_moveoff
	call anfullscreen,Button_moveon_std
	push "butclick"
	push "mgOptions2"
	call anfullscreen,addmethod
	push "anfullscreen"
	call butgame,add
	call ancursor,Button_isinalpha
	call ancursor,Button_moveoff
	call ancursor,Button_moveon_std
	push "butclick"
	push "mgOptions3"
	call ancursor,addmethod
	push "ancursor"
	call butgame,add
l12688:
	call anvolume,mgOptions4
	call anmusic,mgOptions6
	call anvoice,mgOptions8
	end method
	method mgOptions0
	cthis mend
	end method
	method mgOptions1
	cthis mend
	end method
	method mgOptions2
	cthis changefullscreen
	end method
	method mgOptions3
	push bStandardCursor
	neg
	pop bStandardCursor
	push bStandardCursor
	cmp0
	je l12690
	cthis mshowsysmouse
	jmp l12689
l12690:
	cthis mshowsoftmouse
l12689:
	push "system_cursor"
	push bStandardCursor
	call clsmen,set
	end method
	method mgOptions4
	localdef $1
	push 50
	pop $1
	localdef $2
	call anvolume_zakres,getpx
	push $1
	pop $b
	popax
	add $a,$b
	pop $2
	localdef $3
	call anvolume_zakres,getex
	push $1
	pop $b
	popax
	sub $a,$b
	pop $3
	push A
	push "ypos"
	call anvolume_zakres,getcy
	push "xpos"
	push $2
	push "expos"
	push $3
	cthis vars2
	cthis Button_isin
	cthis Button_moveoff
	cthis Button_moveon_std
	push "butmoving"
	push "mgOptions5"
	cthis addmethod
	push "sound_volume"
	call clsmen,get
	spushs
	spop $h
	call $h,to_r
	push 100.0
	pop $b
	popax
	div $a,$b
	psax
	cthis suwakpos
	cthis getname
	call butgame,add
	end method
	method mgOptions5
	localdef $1
	call mouse,getpx
	pop $1
	push $1
	push xpos
	cmpjle
	cmp0
	je l12692
	push xpos
	push ypos
	cthis ansetcpos
	jmp l12691
l12692:
	push $1
	push expos
	cmpjae
	cmp0
	je l12694
	push expos
	push ypos
	cthis ansetcpos
	jmp l12693
l12694:
	push $1
	push ypos
	cthis ansetcpos
l12693:
l12691:
	localreal $2
	localreal $3
	push expos
	cthis getcx
	pop $b
	popax
	sub $a,$b
	pop $2
	push expos
	push xpos
	pop $b
	popax
	sub $a,$b
	pop $3
	push "sound_volume"
	push 1.0
	push $2
	push $3
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push 100.0
	pop $b
	popax
	mul $a,$b
	call clsmen,set
	cthis wczytajglosnosc
	call mus,updatevolume
	end method
	method mgOptions6
	localdef $1
	push 50
	pop $1
	localdef $2
	call anmusic_zakres,getpx
	push $1
	pop $b
	popax
	add $a,$b
	pop $2
	localdef $3
	call anmusic_zakres,getex
	push $1
	pop $b
	popax
	sub $a,$b
	pop $3
	push A
	push "ypos"
	call anmusic_zakres,getcy
	push "xpos"
	push $2
	push "expos"
	push $3
	cthis vars2
	cthis Button_isin
	cthis Button_moveoff
	cthis Button_moveon_std
	push "butmoving"
	push "mgOptions7"
	cthis addmethod
	push "music_volume"
	call clsmen,get
	spushs
	spop $h
	call $h,to_r
	push 100.0
	pop $b
	popax
	div $a,$b
	psax
	cthis suwakpos
	cthis getname
	call butgame,add
	end method
	method mgOptions7
	localdef $1
	call mouse,getpx
	pop $1
	push $1
	push xpos
	cmpjle
	cmp0
	je l12696
	push xpos
	push ypos
	cthis ansetcpos
	jmp l12695
l12696:
	push $1
	push expos
	cmpjae
	cmp0
	je l12698
	push expos
	push ypos
	cthis ansetcpos
	jmp l12697
l12698:
	push $1
	push ypos
	cthis ansetcpos
l12697:
l12695:
	localreal $2
	localreal $3
	push expos
	cthis getcx
	pop $b
	popax
	sub $a,$b
	pop $2
	push expos
	push xpos
	pop $b
	popax
	sub $a,$b
	pop $3
	push "music_volume"
	push 1.0
	push $2
	push $3
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push 100.0
	pop $b
	popax
	mul $a,$b
	call clsmen,set
	cthis wczytajglosnosc
	call mus,updatevolume
	end method
	method mgOptions8
	localdef $1
	push 50
	pop $1
	cthis checktouchpad
	cmp0
	je l12700
	localdef $2
	call anvoice_zakres_pad,getpx
	push $1
	pop $b
	popax
	add $a,$b
	pop $2
	localdef $3
	call anvoice_zakres_pad,getex
	push $1
	pop $b
	popax
	sub $a,$b
	pop $3
	push A
	push "ypos"
	call anvoice_zakres_pad,getcy
	push "xpos"
	push $2
	push "expos"
	push $3
	cthis vars2
	jmp l12699
l12700:
	localdef $2
	call anvoice_zakres,getpx
	push $1
	pop $b
	popax
	add $a,$b
	pop $2
	localdef $3
	call anvoice_zakres,getex
	push $1
	pop $b
	popax
	sub $a,$b
	pop $3
	push A
	push "ypos"
	call anvoice_zakres,getcy
	push "xpos"
	push $2
	push "expos"
	push $3
	cthis vars2
l12699:
	cthis Button_isin
	cthis Button_moveoff
	cthis Button_moveon_std
	push "butmoving"
	push "mgOptions9"
	cthis addmethod
	push "voice_volume"
	call clsmen,get
	spushs
	spop $h
	call $h,to_r
	push 100.0
	pop $b
	popax
	div $a,$b
	psax
	cthis suwakpos
	cthis getname
	call butgame,add
	end method
	method mgOptions9
	localdef $1
	call mouse,getpx
	pop $1
	push $1
	push xpos
	cmpjle
	cmp0
	je l12702
	push xpos
	push ypos
	cthis ansetcpos
	jmp l12701
l12702:
	push $1
	push expos
	cmpjae
	cmp0
	je l12704
	push expos
	push ypos
	cthis ansetcpos
	jmp l12703
l12704:
	push $1
	push ypos
	cthis ansetcpos
l12703:
l12701:
	localreal $2
	localreal $3
	push expos
	cthis getcx
	pop $b
	popax
	sub $a,$b
	pop $2
	push expos
	push xpos
	pop $b
	popax
	sub $a,$b
	pop $3
	push "voice_volume"
	push 1.0
	push $2
	push $3
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push 100.0
	pop $b
	popax
	mul $a,$b
	call clsmen,set
	cthis wczytajglosnosc
	call mus,updatevolume
	end method
	method changefullscreen
	clparent classadv,changefullscreen
	push "fullscreen"
	call clsmen,get
	pop bFullScreen
	push bFullScreen
	cmp0
	je l12706
	call anfullscreen_check,show
	jmp l12705
l12706:
	call anfullscreen_check,hide
l12705:
	end method
	method mshowsysmouse
	push 1
	pop bsystem_cursor
	localint $1
	call mouse,getpx
	pop $1
	localint $2
	call mouse,getpy
	pop $2
	call mouse,hide
	call mouse,showsys
	call ancursor_check,show
	call engine,refresh
	call engine,redraw
	end method
	method mshowsoftmouse
	push 0
	pop bsystem_cursor
	localint $1
	localint $2
	call mouse,getsyspos
	pop $2
	pop $1
	call mouse,hidesys
	call mouse,show
	push $1
	push $2
	call mouse,setpos
	call ancursor_check,hide
	call engine,refresh
	push $1
	push 1
	pop $b
	popax
	add $a,$b
	push $2
	push 1
	pop $b
	popax
	add $a,$b
	call mouse,setpos
	call engine,redraw
	end method
	method suwakpos
	localreal $1
	pop $1
	push xpos
	push $1
	push expos
	push xpos
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	push ypos
	cthis ansetcpos
	end method
	method mend
	call ccs,buildfromscreen
	push "MainMenu"
	call gameapi,play
	end method
	end game

	game mg_ingame_menu
	parent StdGame
	method init
	push "mg_ingame_menu"
	clparent StdGame,init
	cthis checktouchpad
	cmp0
	je l12708
	push A
	push "bkg.jpg 1"
	push "base_pad.pyz 2"
	push "audio_pad.pyz 4"
	push "continue.pyz 6"
	push "mainmenu.pyz 7"
	push "difficulty_pad.pyz 8"
	push "askerbg.pyzH 100"
	push "askerno.pyzH 105"
	push "askerquit.pyzH 105"
	push "difficulty_main.pyzH 106"
	push "difficulty_ok.pyzH 107"
	push "hardbtn.pyzH 108"
	push "normalbtn.pyzH 108"
	push "casualbtn.pyzH 109"
	push "audio_base.pyzH 106"
	push "audio_ok.pyzH 107"
	push "volume.pyzH 108"
	push "volume_zakres.pyzH 4"
	push "music.pyzH 108"
	push "music_zakres.pyzH 4"
	push "voice.pyzH 108"
	push "voice_zakres.pyzH 4"
	cthis imgs=
	jmp l12707
l12708:
	push A
	push "bkg.jpg 1"
	push "base.pyz 2"
	push "fullscreen.pyz 4"
	push "audio.pyz 4"
	push "fullscreen_check.pyzH 5"
	push "continue.pyz 6"
	push "mainmenu.pyz 7"
	push "difficulty.pyz 8"
	push "askerbg.pyzH 100"
	push "askerno.pyzH 105"
	push "askerquit.pyzH 105"
	push "difficulty_main.pyzH 106"
	push "difficulty_ok.pyzH 107"
	push "hardbtn.pyzH 108"
	push "normalbtn.pyzH 108"
	push "casualbtn.pyzH 109"
	push "audio_base.pyzH 106"
	push "audio_ok.pyzH 107"
	push "volume.pyzH 108"
	push "volume_zakres.pyzH 4"
	push "music.pyzH 108"
	push "music_zakres.pyzH 4"
	push "voice.pyzH 108"
	push "voice_zakres.pyzH 4"
	cthis imgs=
l12707:
	push "engine"
	call mus,smixer=
	push "ck1_loop.ogg -v 40 -l"
	call mus,playstr
	new int,iProfilId
	push 1
	pop iProfilId
	new int,bFullScreen
	push 1
	pop bFullScreen
	new int,difficulty
	push 1
	pop difficulty
	push "currentprofile"
	call clsmen,has
	cmp0
	je l12710
	push "currentprofile"
	call clsmen,get
	pop iProfilId
	cthis checktouchpad
	neg
	cmp0
	je l12712
	push "fullscreen"
	call clsmen,get
	pop bFullScreen
	push bFullScreen
	cmp0
	je l12714
	call anfullscreen_check,show
	jmp l12713
l12714:
	call anfullscreen_check,hide
l12713:
l12712:
	push "difficulty_"
	push iProfilId
	pop $b
	popax
	add $a,$b
	call clsmen,get
	cmp0
	je l12716
	push "difficulty_"
	push iProfilId
	pop $b
	popax
	add $a,$b
	call clsmen,get
	pop difficulty
l12716:
l12710:
	push 1
	call clsmen,saveonset=
	call ancontinue,Button_isin
	call ancontinue,Button_moveoff
	call ancontinue,Button_moveon_std
	push "butclick"
	push "mg_ingame_menu0"
	call ancontinue,addmethod
	push "ancontinue"
	call butgame,add
	cthis checktouchpad
	cmp0
	je l12718
	call andifficulty_pad,Button_isin
	call andifficulty_pad,Button_moveoff
	call andifficulty_pad,Button_moveon_std
	push "butclick"
	push "mg_ingame_menu1"
	call andifficulty_pad,addmethod
	push "andifficulty_pad"
	call butgame,add
	call anaudio_pad,Button_isin
	call anaudio_pad,Button_moveoff
	call anaudio_pad,Button_moveon_std
	push "butclick"
	push "mg_ingame_menu2"
	call anaudio_pad,addmethod
	push "anaudio_pad"
	call butgame,add
	jmp l12717
l12718:
	call andifficulty,Button_isin
	call andifficulty,Button_moveoff
	call andifficulty,Button_moveon_std
	push "butclick"
	push "mg_ingame_menu3"
	call andifficulty,addmethod
	push "andifficulty"
	call butgame,add
	call anaudio,Button_isin
	call anaudio,Button_moveoff
	call anaudio,Button_moveon_std
	push "butclick"
	push "mg_ingame_menu4"
	call anaudio,addmethod
	push "anaudio"
	call butgame,add
l12717:
	call anmainmenu,Button_isin
	call anmainmenu,Button_moveoff
	call anmainmenu,Button_moveon_std
	push "butclick"
	push "mg_ingame_menu5"
	call anmainmenu,addmethod
	push "anmainmenu"
	call butgame,add
	cthis checktouchpad
	neg
	cmp0
	je l12720
	call anfullscreen,Button_isin
	call anfullscreen,Button_moveoff
	call anfullscreen,Button_moveon_std
	push "butclick"
	push "changefullscreen"
	call anfullscreen,addmethod
	push "anfullscreen"
	call butgame,add
l12720:
	call anvolume,mg_ingame_menu6
	call anmusic,mg_ingame_menu8
	call anvoice,mg_ingame_menu10
	new img,imgexit
	new img,imgmodes
	new img,imgaudio
	call anaskerno,Button_isinalpha
	call anaskerno,Button_moveon_std
	call anaskerno,Button_moveoff
	push "butclick"
	push "mg_ingame_menu12"
	call anaskerno,addmethod
	push "anaskerno"
	call butgame,add
	call anaskerquit,Button_isinalpha
	call anaskerquit,Button_moveoff
	call anaskerquit,Button_moveon_std
	push "butclick"
	push "mg_ingame_menu14"
	call anaskerquit,addmethod
	push "anaskerquit"
	call butgame,add
	new gmimgvec,grbase
	cthis checktouchpad
	cmp0
	je l12738
	push A
	push "anbase_pad"
	push "ancontinue"
	push "anmainmenu"
	push "andifficulty_pad"
	push "anaudio_pad"
	call grbase,addlist
	jmp l12737
l12738:
	push A
	push "anbase"
	push "ancontinue"
	push "anmainmenu"
	push "anfullscreen"
	push "andifficulty"
	push "anaudio"
	call grbase,addlist
l12737:
	new gmimgvec,grasker
	push A
	push "anaskerbg"
	push "anaskerno"
	push "anaskerquit"
	call grasker,addlist
	new gmimgvec,grmodes
	push A
	push "andifficulty_main"
	push "andifficulty_ok"
	push "anhardbtn"
	push "annormalbtn"
	push "ancasualbtn"
	call grmodes,addlist
	new gmimgvec,graudio
	push A
	push "anaudio_base"
	push "anaudio_ok"
	push "anvolume"
	push "anmusic"
	push "anvoice"
	call graudio,addlist
	call andifficulty_ok,Button_isinalpha
	call andifficulty_ok,Button_moveoff
	call andifficulty_ok,Button_moveon_std
	push "butclick"
	push "mg_ingame_menu15"
	call andifficulty_ok,addmethod
	push "andifficulty_ok"
	call butgame,add
	call anhardbtn,Button_isinalpha
	push "butclick"
	push "mg_ingame_menu17"
	call anhardbtn,addmethod
	push "anhardbtn"
	call butgame,add
	call annormalbtn,Button_isinalpha
	push "butclick"
	push "mg_ingame_menu18"
	call annormalbtn,addmethod
	push "annormalbtn"
	call butgame,add
	call ancasualbtn,Button_isinalpha
	push "butclick"
	push "mg_ingame_menu19"
	call ancasualbtn,addmethod
	push "ancasualbtn"
	call butgame,add
	call anaudio_ok,Button_isinalpha
	call anaudio_ok,Button_moveoff
	call anaudio_ok,Button_moveon_std
	push "butclick"
	push "mg_ingame_menu20"
	call anaudio_ok,addmethod
	push "anaudio_ok"
	call butgame,add
	end method
	method mg_ingame_menu0
	cthis continue_game
	end method
	method mg_ingame_menu1
	cthis modes
	end method
	method mg_ingame_menu2
	cthis audio
	end method
	method mg_ingame_menu3
	cthis modes
	end method
	method mg_ingame_menu4
	cthis audio
	end method
	method mg_ingame_menu5
	cthis askexit
	end method
	method mg_ingame_menu6
	localdef $1
	push 50
	pop $1
	localdef $2
	call anvolume_zakres,getpx
	push $1
	pop $b
	popax
	add $a,$b
	pop $2
	localdef $3
	call anvolume_zakres,getex
	push $1
	pop $b
	popax
	sub $a,$b
	pop $3
	push A
	push "ypos"
	call anvolume_zakres,getcy
	push "xpos"
	push $2
	push "expos"
	push $3
	cthis vars2
	cthis Button_isin
	cthis Button_moveoff
	cthis Button_moveon_std
	push "butmoving"
	push "mg_ingame_menu7"
	cthis addmethod
	push "sound_volume"
	call clsmen,get
	spushs
	spop $h
	call $h,to_r
	push 100.0
	pop $b
	popax
	div $a,$b
	psax
	cthis suwakpos
	cthis getname
	call butgame,add
	end method
	method mg_ingame_menu7
	localdef $1
	call mouse,getpx
	pop $1
	push $1
	push xpos
	cmpjle
	cmp0
	je l12722
	push xpos
	push ypos
	cthis ansetcpos
	jmp l12721
l12722:
	push $1
	push expos
	cmpjae
	cmp0
	je l12724
	push expos
	push ypos
	cthis ansetcpos
	jmp l12723
l12724:
	push $1
	push ypos
	cthis ansetcpos
l12723:
l12721:
	localreal $2
	localreal $3
	push expos
	cthis getcx
	pop $b
	popax
	sub $a,$b
	pop $2
	push expos
	push xpos
	pop $b
	popax
	sub $a,$b
	pop $3
	push "sound_volume"
	push 1.0
	push $2
	push $3
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push 100.0
	pop $b
	popax
	mul $a,$b
	call clsmen,set
	cthis wczytajglosnosc
	call mus,updatevolume
	end method
	method mg_ingame_menu8
	localdef $1
	push 50
	pop $1
	localdef $2
	call anmusic_zakres,getpx
	push $1
	pop $b
	popax
	add $a,$b
	pop $2
	localdef $3
	call anmusic_zakres,getex
	push $1
	pop $b
	popax
	sub $a,$b
	pop $3
	push A
	push "ypos"
	call anmusic_zakres,getcy
	push "xpos"
	push $2
	push "expos"
	push $3
	cthis vars2
	cthis Button_isin
	cthis Button_moveoff
	cthis Button_moveon_std
	push "butmoving"
	push "mg_ingame_menu9"
	cthis addmethod
	push "music_volume"
	call clsmen,get
	spushs
	spop $h
	call $h,to_r
	push 100.0
	pop $b
	popax
	div $a,$b
	psax
	cthis suwakpos
	cthis getname
	call butgame,add
	end method
	method mg_ingame_menu9
	localdef $1
	call mouse,getpx
	pop $1
	push $1
	push xpos
	cmpjle
	cmp0
	je l12726
	push xpos
	push ypos
	cthis ansetcpos
	jmp l12725
l12726:
	push $1
	push expos
	cmpjae
	cmp0
	je l12728
	push expos
	push ypos
	cthis ansetcpos
	jmp l12727
l12728:
	push $1
	push ypos
	cthis ansetcpos
l12727:
l12725:
	localreal $2
	localreal $3
	push expos
	cthis getcx
	pop $b
	popax
	sub $a,$b
	pop $2
	push expos
	push xpos
	pop $b
	popax
	sub $a,$b
	pop $3
	push "music_volume"
	push 1.0
	push $2
	push $3
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push 100.0
	pop $b
	popax
	mul $a,$b
	call clsmen,set
	cthis wczytajglosnosc
	call mus,updatevolume
	end method
	method mg_ingame_menu10
	localdef $1
	push 50
	pop $1
	localdef $2
	call anvoice_zakres,getpx
	push $1
	pop $b
	popax
	add $a,$b
	pop $2
	localdef $3
	call anvoice_zakres,getex
	push $1
	pop $b
	popax
	sub $a,$b
	pop $3
	push A
	push "ypos"
	call anvoice_zakres,getcy
	push "xpos"
	push $2
	push "expos"
	push $3
	cthis vars2
	cthis Button_isin
	cthis Button_moveoff
	cthis Button_moveon_std
	push "butmoving"
	push "mg_ingame_menu11"
	cthis addmethod
	push "voice_volume"
	call clsmen,get
	spushs
	spop $h
	call $h,to_r
	push 100.0
	pop $b
	popax
	div $a,$b
	psax
	cthis suwakpos
	cthis getname
	call butgame,add
	end method
	method mg_ingame_menu11
	localdef $1
	call mouse,getpx
	pop $1
	push $1
	push xpos
	cmpjle
	cmp0
	je l12730
	push xpos
	push ypos
	cthis ansetcpos
	jmp l12729
l12730:
	push $1
	push expos
	cmpjae
	cmp0
	je l12732
	push expos
	push ypos
	cthis ansetcpos
	jmp l12731
l12732:
	push $1
	push ypos
	cthis ansetcpos
l12731:
l12729:
	localreal $2
	localreal $3
	push expos
	cthis getcx
	pop $b
	popax
	sub $a,$b
	pop $2
	push expos
	push xpos
	pop $b
	popax
	sub $a,$b
	pop $3
	push "voice_volume"
	push 1.0
	push $2
	push $3
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push 100.0
	pop $b
	popax
	mul $a,$b
	call clsmen,set
	cthis wczytajglosnosc
	call mus,updatevolume
	end method
	method mg_ingame_menu12
	push sgmstate
	push "state_askexit"
	cmpje
	cmp0
	je l12734
	cthis buildimgexit
	cthis hideasker
	push 200
	push 1
	popax
	sub 0,$a
	push 1
	popax
	sub 0,$a
	push "mg_ingame_menu13"
	call imgexit,anzoomfadeinout
l12734:
	end method
	method mg_ingame_menu13
	cthis advsetstdstate
	cthis hide
	end method
	method mg_ingame_menu14
	push sgmstate
	push "state_askexit"
	cmpje
	cmp0
	je l12736
	cthis tomainmenu
l12736:
	end method
	method mg_ingame_menu15
	push sgmstate
	push "state_modes"
	cmpje
	cmp0
	je l12740
	cthis buildimgmodes
	cthis hidemodes
	push "difficulty_"
	push iProfilId
	pop $b
	popax
	add $a,$b
	push difficulty
	call clsmen,set
	push "GAME_diflevel"
	push difficulty
	call clsave,set
	push 200
	push 1
	popax
	sub 0,$a
	push 1
	popax
	sub 0,$a
	push "mg_ingame_menu16"
	call imgmodes,anzoomfadeinout
l12740:
	end method
	method mg_ingame_menu16
	cthis advsetstdstate
	cthis hide
	end method
	method mg_ingame_menu17
	cthis clear_selection
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	push 3
	pop difficulty
	end method
	method mg_ingame_menu18
	cthis clear_selection
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	push 2
	pop difficulty
	end method
	method mg_ingame_menu19
	cthis clear_selection
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	push 1
	pop difficulty
	end method
	method mg_ingame_menu20
	push sgmstate
	push "state_audio"
	cmpje
	cmp0
	je l12742
	cthis buildimgaudio
	cthis hideaudio
	push 200
	push 1
	popax
	sub 0,$a
	push 1
	popax
	sub 0,$a
	push "mg_ingame_menu21"
	call imgaudio,anzoomfadeinout
l12742:
	end method
	method mg_ingame_menu21
	cthis advsetstdstate
	cthis hide
	end method
	method hideasker
	call grasker,hide
	call grbase,show
	end method
	method buildimgexit
	push A
	push "anaskerbg"
	push "anaskerno"
	push "anaskerquit"
	call imgexit,imgbuildfromlist
	end method
	method askexit
	cthis buildimgexit
	cthis hideasker
	push 200
	push 1
	push 1
	push "mg_ingame_menu22"
	call imgexit,anzoomfadeinout
	end method
	method mg_ingame_menu22
	push "state_askexit"
	pop sgmstate
	cthis hide
	call grbase,hide
	call grasker,show
	end method
	method hidemodes
	call grmodes,hide
	call grbase,show
	end method
	method buildimgmodes
	push A
	push "andifficulty_main"
	push "andifficulty_ok"
	push "anhardbtn"
	push "annormalbtn"
	push "ancasualbtn"
	call imgmodes,imgbuildfromlist
	push difficulty
	push 1
	cmpje
	cmp0
	je l12744
	push 1
	popax
	sub 0,$a
	push 1
	call ancasualbtn,setframe
	jmp l12743
l12744:
	push difficulty
	push 2
	cmpje
	cmp0
	je l12746
	push 1
	popax
	sub 0,$a
	push 1
	call annormalbtn,setframe
	jmp l12745
l12746:
	push 1
	popax
	sub 0,$a
	push 1
	call anhardbtn,setframe
l12745:
l12743:
	end method
	method modes
	cthis buildimgmodes
	cthis hidemodes
	push 200
	push 1
	push 1
	push "mg_ingame_menu23"
	call imgmodes,anzoomfadeinout
	end method
	method mg_ingame_menu23
	push "state_modes"
	pop sgmstate
	cthis hide
	call grbase,hide
	call grmodes,show
	end method
	method hideaudio
	call graudio,hide
	call grbase,show
	end method
	method buildimgaudio
	push A
	push "anaudio_base"
	push "anaudio_ok"
	push "anvolume"
	push "anmusic"
	push "anvoice"
	call imgaudio,imgbuildfromlist
	end method
	method audio
	cthis buildimgaudio
	cthis hideaudio
	push 200
	push 1
	push 1
	push "mg_ingame_menu24"
	call imgaudio,anzoomfadeinout
	end method
	method mg_ingame_menu24
	push "state_audio"
	pop sgmstate
	cthis hide
	call grbase,hide
	call graudio,show
	end method
	method clear_selection
	push 1
	popax
	sub 0,$a
	push 0
	call anhardbtn,setframe
	push 1
	popax
	sub 0,$a
	push 0
	call annormalbtn,setframe
	push 1
	popax
	sub 0,$a
	push 0
	call ancasualbtn,setframe
	end method
	method suwakpos
	localreal $1
	pop $1
	push xpos
	push $1
	push expos
	push xpos
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	push ypos
	cthis ansetcpos
	end method
	method tomainmenu
	call ccs,buildfromscreen
	push "mg_ingame_menu25"
	call ccs,close
	end method
	method mg_ingame_menu25
	push "MainMenu"
	call gameapi,play
	end method
	method continue_game
	push "state_continuegame"
	pop sgmstate
	push 800
	call mus,fadeout
	push "mg_ingame_menu26"
	call ccs,close
	end method
	method mg_ingame_menu26
	push 1
	pop PrzygodaMode
	cthis getsavename
	clparent BanGui,_load_game
	end method
	method changefullscreen
	clparent classadv,changefullscreen
	push "fullscreen"
	call clsmen,get
	pop bFullScreen
	push bFullScreen
	cmp0
	je l12748
	call anfullscreen_check,show
	jmp l12747
l12748:
	call anfullscreen_check,hide
l12747:
	end method
	end game

