; Dominik Dagiel   ix 2005

	new db,dbconf
	push "configs/config.beh"
	call dbconf,loadscript
	push "enginedebug:"
	call dbconf,dbgetint
	call engine,setdebugstate
	new int,igmdebug
	push "igmdebug:"
	call dbconf,dbgetint
	pop igmdebug
	new int,igmpcdebug
	push "igmpcdebug:"
	call dbconf,dbgetint
	pop igmpcdebug
	new int,igmexportan
	push "igmexportan:"
	call dbconf,dbgetint
	pop igmexportan
	new int,igmimportan
	push "igmimportan:"
	call dbconf,dbgetint
	pop igmimportan
	new int,igmdelay
	call engine,getloopdelay
	pop igmdelay
	new int,igmwinlocal
	push "igmwinlocal:"
	call dbconf,dbgetint
	pop igmwinlocal
	new int,igmmac
	push "igmmac:"
	call dbconf,dbgetint
	pop igmmac
	new int,igmipad
	push "igmipad:"
	call dbconf,dbgetint
	pop igmipad
	new int,igmiphone
	push "igmiphone:"
	call dbconf,dbgetint
	pop igmiphone
	new int,igmandroid
	push "igmandroid:"
	call dbconf,dbgetint
	pop igmandroid
	new string,sgmdeveloper
	push "sgmdeveloper:"
	call dbconf,dbget
	pop sgmdeveloper
	new string,sgmproject
	push "sgmproject:"
	call dbconf,dbget
	pop sgmproject
	push igmdebug
	cmp0
	je l2
	push igmipad
	cmp0
	jne l5
	push igmmac
	cmp0
	jne l5
	push igmiphone
	cmp0
	jne l5
	push igmandroid
	jmp l6
l4:
	push 0
	jmp l6
l5:
	push 1
l6:
	jmp l7
l2:
	push 0
	jmp l7
l3:
	push 1
l7:
	cmp0
	je l8
	push "getsavepath"
	push "global0"
	call engine,addmethod
l8:
	method global0
	push "saves/"
	end method
	method checktouchpad
	push igmipad
	cmp0
	jne l10
	push igmiphone
	cmp0
	jne l10
	push igmandroid
	jmp l11
l9:
	push 0
	jmp l11
l10:
	push 1
l11:
	cmp0
	je l12
	push igmpcdebug
	push 0
	cmpje
	jmp l14
l12:
	push 0
	jmp l14
l13:
	push 1
l14:
	end method
	new int,igmappw
	new int,igmapph
	call engine,getappsize
	pop igmapph
	pop igmappw
	new int,igmoffsetx
	new int,igmoffsety
	call engine,getscreenoffset
	pop igmoffsety
	pop igmoffsetx
	new int,iResX
	new int,iResY
	call engine,getscreensize
	pop iResY
	pop iResX
	new real,rgmscalex
	new real,rgmscaley
	call engine,getscreenscale
	pop rgmscaley
	pop rgmscalex
	method getappcenter
	push igmappw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push igmapph
	push 2
	pop $b
	popax
	div $a,$b
	psax
	ret
	end method
	method edgeex
	push iResX
	push igmoffsetx
	pop $b
	popax
	add $a,$b
	end method
	method edgeey
	push iResY
	push igmoffsety
	pop $b
	popax
	add $a,$b
	end method
	method getwinpath
	localstring $1
	pop $1
	localstring $2
	push "appdata"
	call engine,getspecialpath
	pop $2
	push $2
	push "null"
	cmpjne
	cmp0
	je l16
	push $2
	push "/"
	pop $b
	popax
	add $a,$b
	push sgmdeveloper
	pop $b
	popax
	add $a,$b
	push "/"
	pop $b
	popax
	add $a,$b
	push sgmproject
	pop $b
	popax
	add $a,$b
	push "/"
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	add $a,$b
	jmp l15
l16:
	push $1
l15:
	end method
	method getsavepath
	push igmipad
	cmp0
	jne l19
	push igmmac
	jmp l20
l18:
	push 0
	jmp l20
l19:
	push 1
l20:
	cmp0
	je l21
	call engine,getsavepath
	jmp l17
l21:
	push igmwinlocal
	cmp0
	je l23
	push "saves/"
	cthis getwinpath
	jmp l22
l23:
	push "saves/"
l22:
l17:
	end method
	method buildsavedir
	push igmwinlocal
	cmp0
	je l25
	push igmipad
	neg
	cmp0
	je l25
	push igmmac
	neg
	jmp l27
l25:
	push 0
	jmp l27
l26:
	push 1
l27:
	cmp0
	je l28
	localstring $1
	push "appdata"
	call engine,getspecialpath
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l30
	push "/"
	push sgmdeveloper
	pop $b
	popax
	add $a,$b
	popax
	add $1,$a
	pop $1
	localint $2
	push $1
	call engine,mkdir
	pop $2
	push 0
	pop $2
	push $2
	push 0
	cmpje
	cmp0
	jne l33
	push $2
	push 1
	cmpje
	jmp l34
l32:
	push 0
	jmp l34
l33:
	push 1
l34:
	cmp0
	je l35
	push "/"
	push sgmproject
	pop $b
	popax
	add $a,$b
	popax
	add $1,$a
	pop $1
	push $1
	call engine,mkdir
	pop $2
	push 0
	pop $2
	push $2
	push 0
	cmpje
	cmp0
	jne l38
	push $2
	push 1
	cmpje
	jmp l39
l37:
	push 0
	jmp l39
l38:
	push 1
l39:
	cmp0
	je l40
	push "/saves"
	popax
	add $1,$a
	pop $1
	push $1
	call engine,mkdir
	popax
l40:
l35:
l30:
l28:
	end method
	cthis buildsavedir
	new string,A
	push "!!!"
	pop A
	new real,PI
	push 3.14159265358979323846
	pop PI
	new int,BYTE0
	push "0"
	spushs
	push 0
	spop $h
	call $h,getbyte
	pop BYTE0
	new int,BYTE9
	push "9"
	spushs
	push 0
	spop $h
	call $h,getbyte
	pop BYTE9
	new int,BYTEa
	push "a"
	spushs
	push 0
	spop $h
	call $h,getbyte
	pop BYTEa
	new int,BYTEz
	push "z"
	spushs
	push 0
	spop $h
	call $h,getbyte
	pop BYTEz
	new int,BYTEA
	push "A"
	spushs
	push 0
	spop $h
	call $h,getbyte
	pop BYTEA
	new int,BYTEZ
	push "Z"
	spushs
	push 0
	spop $h
	call $h,getbyte
	pop BYTEZ
	new int,BYTE_
	push "_"
	spushs
	push 0
	spop $h
	call $h,getbyte
	pop BYTE_
	new int,BYTESPACE
	push " "
	spushs
	push 0
	spop $h
	call $h,getbyte
	pop BYTESPACE
	method empty_func
	end method
	method varget
	localstring $1
	pop $1
	push $1
	popax
	mov $a,[$a]
	psax
	end method
	method varset
	localstring $1
	localdef $2
	pop $2
	pop $1
	push $1
	spushs
	push $2
	spop $b
	popax
	mov [$b],$a
	end method
	method varnew
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	push $2
	spushs
	spop $e
	spop $d
	new [$d],[$e]
	end method
	method varnewif
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $2
	cthis hasvar
	neg
	cmp0
	je l42
	push $1
	push $2
	cthis varnew
l42:
	end method
	method vardelif
	localstring $1
	pop $1
	push $1
	cthis hasvar
	cmp0
	je l44
	push $1
	cthis vardel
l44:
	end method
	method vardel
	localstring $1
	pop $1
	push $1
	spushs
	spop $d
	delete [$d]
	end method
	method reader
	localstring $1
	pop $1
	push "def"
	push $1
	cthis varnewif
	push $1
	push "global1"
	cthis addmethod
	end method
	method global1
	cthis methodname
	popax
	mov $a,[$a]
	psax
	end method
	method writer
	localstring $1
	pop $1
	push "def"
	push $1
	cthis varnewif
	push $1
	push "="
	pop $b
	popax
	add $a,$b
	push "global2"
	cthis addmethod
	end method
	method global2
	localdef $1
	pop $1
	cthis methodname
	spushs
	push 1
	spop $a
	call $a,strsube
	spushs
	push $1
	spop $b
	popax
	mov [$b],$a
	end method
	method var
	localstring $1
	pop $1
	push $1
	cthis reader
	push $1
	cthis writer
	end method
	method var2
	localstring $1
	localdef $2
	pop $2
	pop $1
	push $1
	cthis var
	push $1
	spushs
	push $2
	spop $b
	popax
	mov [$b],$a
	end method
	method withlist
	localstring $1
	pop $1
	localdef $2
	pop $2
l45:
	push A
	push $2
	cmpjne
	cmp0
	je l46
	push $1
	spushs
	push $2
	spop $d
	cthis [$d]
	localdef $2
	pop $2
	jmp l45
l46:
	end method
	method withlist2
	localstring $1
	pop $1
	localdef $2
	pop $2
l47:
	push A
	push $2
	cmpjne
	cmp0
	je l48
	localdef $3
	pop $3
	push $1
	spushs
	push $3
	push $2
	spop $d
	cthis [$d]
	localdef $2
	pop $2
	jmp l47
l48:
	end method
	method vars
	push "var"
	cthis withlist
	end method
	method vars2
	push "var2"
	cthis withlist2
	end method
	method builder_func
	localstring $1
	pop $1
	cthis getbuildername
	spushs
	cthis getbuildername
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	end method
	method callfun
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $2
	push "null"
	cmpjne
	cmp0
	je l50
	push $1
	push "null"
	cmpje
	cmp0
	je l52
	push $2
	spushs
	spop $d
	cthis [$d]
	jmp l51
l52:
	push $1
	spushs
	push $2
	spushs
	spop $d
	spop $a
	call [$a],[$d]
l51:
l50:
	end method
	method add_callfun
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	call gameapi,getgamename
	spushs
	push $1
	push $2
	push $3
	spop $a
	call [$a],global3
	end method
	method global3
	localdef $1
	localdef $2
	localdef $3
	pop $3
	pop $2
	pop $1
	localdef $4
	push $1
	push "_callfun_"
	pop $b
	popax
	add $a,$b
	pop $4
	push A
	push $4
	push "sob"
	pop $b
	popax
	add $a,$b
	push $2
	push $4
	push "sfun"
	pop $b
	popax
	add $a,$b
	push $3
	cthis vars2
	push $4
	push "global4"
	cthis addmethod
	push $4
	end method
	method global4
	localdef $1
	cthis methodname
	pop $1
	push $1
	push "sob"
	pop $b
	popax
	add $a,$b
	popax
	mov $a,[$a]
	psax
	push $1
	push "sfun"
	pop $b
	popax
	add $a,$b
	popax
	mov $a,[$a]
	psax
	cthis callfun
	end method
	method fullname_callfun
	localstring $1
	localstring $2
	pop $2
	pop $1
	cthis getfullname
	push $1
	push $2
	cthis add_callfun
	end method
	method dprint
	localstring $1
	pop $1
	localint $2
	call engine,getstack
	pop $2
	push "stack="
	push $2
	pop $b
	popax
	add $a,$b
	push " : "
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $h
	call $h,print
	end method
	method in
	localint $1
	push 0
	pop $1
	localdef $2
	cthis get
	pop $2
	localdef $3
	pop $3
l53:
	push A
	push $3
	cmpjne
	cmp0
	je l54
	push $1
	neg
	cmp0
	je l56
	push $2
	push $3
	cmpje
	pop $1
l56:
	localdef $3
	pop $3
	jmp l53
l54:
	push $1
	end method
	method with
	localstring $1
	pop $1
	localstring $2
	pop $2
l57:
	push $2
	push A
	cmpjne
	cmp0
	je l58
	push $2
	spushs
	push $1
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	pop $2
	jmp l57
l58:
	end method
	method copycall
	localstring $1
	localstring $2
	pop $2
	pop $1
	localstring $3
	push "__call"
	push $1
	pop $b
	popax
	add $a,$b
	pop $3
	push $3
	spushs
	spop $e
	new string,[$e]
	push $3
	spushs
	push $2
	spop $b
	popax
	mov [$b],$a
	push $1
	push "global5"
	cthis addmethod
	end method
	method global5
	localstring $1
	cthis methodname
	pop $1
	push "__call"
	push $1
	pop $b
	popax
	add $a,$b
	popax
	mov $a,[$a]
	psax
	spushs
	push $1
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	end method
	method copycalls
	localstring $1
	pop $1
	localstring $2
	pop $2
l59:
	push $2
	push A
	cmpjne
	cmp0
	je l60
	push $2
	push $1
	cthis copycall
	pop $2
	jmp l59
l60:
	end method
	method mresize
	cthis gettype
	push "_pack"
	pop $b
	popax
	add $a,$b
	spushs
	cthis getname
	spop $a
	 clparent [$a],resizemethods
	end method
	method times
	localstring $1
	pop $1
	push 0
	cthis get
	push 1
	pop $b
	popax
	sub $a,$b
	push $1
	cthis for_plus
	end method
	method upto
	localint $1
	localstring $2
	pop $2
	pop $1
	cthis get
	push $1
	push $2
	cthis for_plus
	end method
	method downto
	localint $1
	localstring $2
	pop $2
	pop $1
	cthis get
	push $1
	push $2
	cthis for_minus
	end method
	method for_plus
	localint $1
	localint $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $2
	push $1
	pop $b
	popax
	sub $a,$b
	push 0
	cmpjle
	cmp0
	je l62
	ret
l62:
l63:
	push $1
	push $2
	cmpjle
	cmp0
	je l64
	jmp l66
l65:
	add $1,1
	pop $1
	jmp l63
l66:
	push $3
	spushs
	push $1
	spop $d
	cthis [$d]
	jmp l65
l64:
	end method
	method for_minus
	localint $1
	localint $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	pop $b
	popax
	sub $a,$b
	push 0
	cmpjle
	cmp0
	je l68
	ret
l68:
l69:
	push $1
	push $2
	cmpjae
	cmp0
	je l70
	jmp l72
l71:
	sub $1,1
	pop $1
	jmp l69
l72:
	push $3
	spushs
	push $1
	spop $d
	cthis [$d]
	jmp l71
l70:
	end method
	method double_for
	localint $1
	localint $2
	localstring $3
	pop $3
	pop $2
	pop $1
	localint $4
	localint $5
	push 0
	pop $5
l73:
	push $5
	push $1
	cmpjl
	cmp0
	je l74
	jmp l76
l75:
	add $5,1
	pop $5
	jmp l73
l76:
	push 0
	pop $4
l77:
	push $4
	push $2
	cmpjl
	cmp0
	je l78
	jmp l80
l79:
	add $4,1
	pop $4
	jmp l77
l80:
	push $3
	spushs
	push $5
	push $4
	spop $d
	cthis [$d]
	jmp l79
l78:
	jmp l75
l74:
	end method
	class classobjcounter
	method init
	localstring $1
	pop $1
	new string,_sprefix
	push $1
	pop _sprefix
	new int,_iile
	push 0
	pop _iile
	push "limit"
	push 0
	cthis var2
	end method
	method get
	push limit
	push 0
	cmpja
	cmp0
	je l82
	push _iile
	push limit
	pop $b
	popax
	div $a,$b
	push $d
	push 1
	pop $b
	popax
	add $a,$b
	pop _iile
	jmp l81
l82:
	add _iile,1
	pop _iile
l81:
	push _sprefix
	push _iile
	push 1
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	add $a,$b
	ret
	end method
	method size
	push _iile
	end method
	method getid
	localint $1
	pop $1
	push _sprefix
	push _iile
	push 1
	pop $b
	popax
	sub $a,$b
	push $1
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	add $a,$b
	end method
	end class

	class classsignals
	method init
	end method
	method stdfinish
	localstring $1
	pop $1
	push $1
	spushs
	push "onfinish"
	push "classsignals0"
	spop $a
	call [$a],addmethod
	end method
	method classsignals0
	cthis getname
	push "_FINISH"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method stdstart
	localstring $1
	pop $1
	push $1
	spushs
	push "onstart"
	push "classsignals1"
	spop $a
	call [$a],addmethod
	end method
	method classsignals1
	cthis getname
	push "_START"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method stdsigs
	localstring $1
	pop $1
	push $1
	cthis stdstart
	push $1
	cthis stdfinish
	end method
	method buildanima
	localstring $1
	pop $1
	push $1
	cthis stdsigs
	push $1
	spushs
	push "onendframe"
	push "classsignals2"
	spop $a
	call [$a],addmethod
	end method
	method classsignals2
	cthis getname
	push "_ENDFRAME"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method buildsnd
	localstring $1
	pop $1
	push $1
	cthis stdsigs
	end method
	method buildtimer
	localstring $1
	pop $1
	push $1
	cthis stdsigs
	push $1
	spushs
	push "ontick"
	push "classsignals3"
	spop $a
	call [$a],addmethod
	end method
	method classsignals3
	cthis getname
	push "_TICK"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method buildbut
	localstring $1
	pop $1
	push $1
	spushs
	push "onclick"
	push "classsignals4"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "onrel"
	push "classsignals5"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "onmoveon"
	push "classsignals6"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "onmoveoff"
	push "classsignals7"
	spop $a
	call [$a],addmethod
	end method
	method classsignals4
	cthis getname
	push "_CLICK"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method classsignals5
	cthis getname
	push "_REL"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method classsignals6
	cthis getname
	push "_MOVEON"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method classsignals7
	cthis getname
	push "_MOVEOFF"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	end class

	class classlocker
	method init
	new int,_block
	push 1
	pop _block
	end method
	method lock
	push 1
	pop _block
	end method
	method unlock
	push 0
	pop _block
	end method
	method setlock
	localint $1
	pop $1
	push $1
	pop _block
	end method
	method getlock
	push _block
	ret
	end method
	method unlocked
	push _block
	push 0
	cmpje
	end method
	method setaslocker
	localstring $1
	pop $1
	push $1
	spushs
	push "buildlocker"
	push "classlocker0"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	spop $a
	call [$a],buildlocker
	push $1
	spushs
	push "lock"
	push "lock"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "unlock"
	push "unlock"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setlock"
	push "setlock"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "getlock"
	push "getlock"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "unlocked"
	push "unlocked"
	spop $a
	call [$a],addmethod
	end method
	method classlocker0
	new int,_block
	push 1
	pop _block
	end method
	end class

	module classdbreader
	method init
	new db,dbl
	end method
	method readdb
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
	localint $3
	call dbl,getrowsno
	pop $3
l83:
	push $2
	push $3
	cmpjl
	cmp0
	je l84
	push $1
	spushs
	push $2
	spop $d
	cthis [$d]
	add $2,1
	pop $2
	jmp l83
l84:
	end method
	method readrow
	localstring $1
	localstring $2
	pop $2
	pop $1
	localint $3
	push $1
	call dbl,findbyrow
	pop $3
	push $3
	push 0
	cmpjae
	cmp0
	je l86
	push $2
	spushs
	push $3
	spop $d
	cthis [$d]
l86:
	end method
	end module

	class collection
	method init
	localstring $1
	pop $1
	new string,stype
	push $1
	pop stype
	end method
	method type
	push stype
	ret
	end method
	end class

	class array
	parent collection
	method init
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	clparent collection,init
	new int,idim
	push $2
	pop idim
	new int,isize
	push $3
	pop isize
	new vector,vec
	push $1
	call vec,type
	push $2
	push 0
	cmpjle
	cmp0
	jne l89
	push $3
	push 0
	cmpjle
	jmp l90
l88:
	push 0
	jmp l90
l89:
	push 1
l90:
	cmp0
	je l91
	ret
l91:
	push $2
	call $3,pow
	push 0
	call vec,resize
	end method
	method getid
	localint $1
	push 0
	pop $1
	localint $2
	push idim
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
l92:
	push $2
	push 0
	cmpja
	cmp0
	je l93
	popax
	add $1,$a
	pop $1
	push isize
	popax
	mul $1,$a
	pop $1
	sub $2,1
	pop $2
	jmp l92
l93:
	push $1
	pop $b
	popax
	add $a,$b
	ret
	end method
	method get
	cthis getid
	call vec,get
	ret
	end method
	method set
	localdef $1
	pop $1
	cthis getid
	push $1
	call vec,set
	end method
	method getsize
	push isize
	ret
	end method
	method getdim
	push idim
	ret
	end method
	end class

	class stack
	parent collection
	method init
	localstring $1
	pop $1
	push $1
	clparent collection,init
	new vector,vec
	push $1
	call vec,type
	push $1
	spushs
	spop $d
	new [$d],var
	end method
	method push
	localstring $1
	pop $1
	push $1
	call vec,add
	end method
	method top
	call vec,last
	ret
	end method
	method pop
	cthis top
	pop var
	call vec,size
	push 1
	pop $b
	popax
	sub $a,$b
	call vec,removeat
	push var
	ret
	end method
	method free
	call vec,free
	end method
	end class

	class map
	parent collection
	method init
	localstring $1
	pop $1
	push $1
	clparent collection,init
	new int,isize
	push 0
	pop isize
	end method
	method set
	localstring $1
	localdef $2
	pop $2
	pop $1
	push "v"
	push $1
	pop $b
	popax
	add $a,$b
	cthis hasvar
	neg
	cmp0
	je l95
	push $1
	cthis add
l95:
	push "v"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push $2
	spop $a
	call [$a],set
	end method
	method add
	localstring $1
	pop $1
	push stype
	spushs
	push "v"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $e
	spop $d
	new [$d],[$e]
	end method
	method get
	localstring $1
	pop $1
	push "v"
	push $1
	pop $b
	popax
	add $a,$b
	popax
	mov $a,[$a]
	psax
	ret
	end method
	method remove
	localstring $1
	pop $1
	push "v"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	delete [$d]
	end method
	method contains
	localstring $1
	pop $1
	push "v"
	push $1
	pop $b
	popax
	add $a,$b
	cthis hasvar
	ret
	end method
	end class

	class map2
	parent collection
	method init
	localstring $1
	pop $1
	push $1
	clparent collection,init
	new vector,vn
	push "string"
	call vn,type
	new vector,vec
	push $1
	call vec,type
	end method
	method add
	localstring $1
	localdef $2
	pop $2
	pop $1
	push $1
	call vn,add
	push $2
	call vec,add
	end method
	method set
	localstring $1
	localdef $2
	pop $2
	pop $1
	push $1
	call vn,find
	push $2
	call vec,set
	end method
	method contains
	localstring $1
	pop $1
	push $1
	call vn,contains
	ret
	end method
	method get
	localstring $1
	pop $1
	push $1
	call vn,find
	call vec,get
	ret
	end method
	method remove
	localstring $1
	pop $1
	localint $2
	push $1
	call vn,find
	pop $2
	push $2
	push 0
	cmpjae
	cmp0
	je l97
	push $2
	call vec,removeat
	push $2
	call vn,removeat
l97:
	end method
	method free
	call vn,free
	call vec,free
	end method
	method print
	call vec,print
	call vn,print
	end method
	end class

	class classgamemusic
	parent classdbreader
	method init
	clparent classdbreader,init
	new string,smuspath
	push ""
	pop smuspath
	new string,sbgrpath
	push ""
	pop sbgrpath
	new snd,_sndbgr
	push "onfinish"
	push "_stdsndloop"
	call _sndbgr,addmethod
	end method
	method reset
	call engine,islocalmusic
	cmp0
	je l99
	call gameapi,stopmusic
l99:
	cthis stopbgr
	end method
	method _stdsndloop
	cthis play
	end method
	method load
	localstring $1
	pop $1
	push $1
	call dbl,loadscript
	end method
	method musicpath
	localstring $1
	pop $1
	push $1
	pop smuspath
	end method
	method sndbgrpath
	localstring $1
	pop $1
	push $1
	pop sbgrpath
	end method
	method _play
	localint $1
	pop $1
	localint $2
	localint $3
	localint $4
	localstring $5
	localstring $6
	push 1
	pop $2
	push $1
	call dbl,getcolsno
	pop $3
l100:
	push $2
	push $3
	cmpjl
	cmp0
	je l101
	push $1
	push $2
	call dbl,get
	pop $5
	add $2,1
	pop $2
	push $5
	push "music"
	cmpje
	cmp0
	je l103
	push smuspath
	push $1
	push $2
	call dbl,get
	pop $b
	popax
	add $a,$b
	pop $6
	push $6
	call engine,fileexist
	neg
	cmp0
	je l105
	push sbgrpath
	push $1
	push $2
	call dbl,get
	pop $b
	popax
	add $a,$b
	pop $6
l105:
	add $2,1
	pop $2
	push $2
	push $3
	cmpjl
	cmp0
	je l107
	push $1
	push $2
	call dbl,get
	push "vol"
	cmpje
	cmp0
	je l109
	add $2,1
	pop $2
	push $1
	push $2
	call dbl,get
	call gameapi,setmusicvol
	add $2,1
	pop $2
l109:
	jmp l106
l107:
	push 100
	call gameapi,setmusicvol
l106:
	push $6
	call gameapi,playmusic
	jmp l102
l103:
	push $5
	push "bgr"
	cmpje
	cmp0
	je l111
	push sbgrpath
	push $1
	push $2
	call dbl,get
	pop $b
	popax
	add $a,$b
	call _sndbgr,load
	add $2,1
	pop $2
	push $2
	push $3
	cmpjl
	cmp0
	je l113
	push $1
	push $2
	call dbl,get
	push "vol"
	cmpje
	cmp0
	je l115
	add $2,1
	pop $2
	push $1
	push $2
	call dbl,get
	call _sndbgr,setvol
	add $2,1
	pop $2
l115:
	jmp l112
l113:
	push 100
	call _sndbgr,setvol
l112:
	cthis playbgr
	jmp l110
l111:
	add $2,1
	pop $2
l110:
l102:
	jmp l100
l101:
	end method
	method play
	cthis reset
	call gameapi,getgamename
	push "_play"
	cthis readrow
	end method
	method playbgr
	call _sndbgr,play
	end method
	method stopbgr
	push 0
	call _sndbgr,stop
	end method
	end class

	class Music
	method init
	new vector,vmus
	push "string"
	call vmus,type
	new int,ilastid
	push A
	push "musicvolume"
	push 100
	push "smixer"
	push "gameapi"
	cthis vars2
	end method
	method playdb
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	call vmus,free
l116:
	push $3
	push $1
	spushs
	push $2
	spop $a
	call [$a],getcolsno
	cmpjl
	cmp0
	je l117
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	call vmus,add
	add $3,1
	pop $3
	jmp l116
l117:
	push 0
	pop ilastid
	cthis play
	end method
	method playvec
	localstring $1
	localint $2
	pop $2
	pop $1
	call vmus,free
l118:
	push $2
	push $1
	spushs
	spop $a
	call [$a],size
	cmpjl
	cmp0
	je l119
	push $1
	spushs
	push $2
	spop $a
	call [$a],get
	call vmus,add
	add $2,1
	pop $2
	jmp l118
l119:
	push 0
	pop ilastid
	cthis play
	end method
	method playstr
	localstring $1
	pop $1
	push $1
	push " "
	call vmus,vecbuildfromstring
	push 0
	pop ilastid
	cthis play
	end method
	method play
	push ilastid
	call vmus,size
	cmpjae
	cmp0
	je l121
	ret
l121:
	localstring $1
	push MUSICPATH
	push ilastid
	call vmus,get
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	call engine,fileexist
	neg
	cmp0
	je l123
	push SFXPATH
	push ilastid
	call vmus,get
	pop $b
	popax
	add $a,$b
	pop $1
l123:
	add ilastid,1
	pop ilastid
	localint $2
	push 0
	pop $2
	localint $3
	push 0
	pop $3
	localint $4
	push 0
	pop $4
	localint $5
	push musicvolume
	pop $5
	localint $6
	push ilastid
	pop $6
l124:
	push $6
	call vmus,size
	cmpjl
	cmp0
	je l125
	jmp l127
l126:
	add $6,1
	pop $6
	jmp l124
l127:
	localdef $7
	push $6
	call vmus,get
	pop $7
	push $7
	spushs
	push "-l"
	cmpst
	jne l129
	spop $a
	push 1
	pop $2
	jmp l128
l129:
	push "-v"
	cmpst
	jne l130
	spop $a
	add $6,1
	pop $6
	push $6
	call vmus,get
	pop $5
	push $5
	push musicvolume
	pop $b
	popax
	mul $a,$b
	push 100
	pop $b
	popax
	div $a,$b
	psax
	pop $5
	jmp l128
l130:
	push "-fin"
	cmpst
	jne l131
	spop $a
	add $6,1
	pop $6
	push $6
	call vmus,get
	pop $3
	jmp l128
l131:
	push "-fout"
	cmpst
	jne l132
	spop $a
	add $6,1
	pop $6
	push $6
	call vmus,get
	pop $4
	jmp l128
l132:
	push "-p"
	cmpst
	jne l133
	spop $a
	jmp l128
l133:
	spop $a
	push $6
	pop ilastid
	call vmus,size
	pop $6
l128:
	jmp l126
l125:
	push smixer
	spushs
	push $5
	spop $a
	call [$a],setmusicvol
	push $2
	cmp0
	je l135
	call vmus,size
	pop ilastid
	push smixer
	push "engine"
	cmpje
	cmp0
	je l137
	call engine,ismusicplaying
	cmp0
	je l137
	call engine,getactmusic
	push $1
	cmpje
	jmp l139
l137:
	push 0
	jmp l139
l138:
	push 1
l139:
	cmp0
	je l140
	jmp l136
l140:
	push smixer
	spushs
	push $1
	spop $a
	call [$a],playmusic
l136:
	ret
l135:
	push smixer
	spushs
	push $1
	spop $a
	call [$a],loadmusic
	push $3
	cmp0
	je l142
	push smixer
	spushs
	push $3
	spop $a
	call [$a],fadeinmusic
	jmp l141
l142:
	push smixer
	spushs
	spop $a
	call [$a],startmusic
l141:
	push $4
	cmp0
	je l144
	push smixer
	spushs
	push $4
	spop $a
	call [$a],fadeoutmusic
l144:
	end method
	method fadeout
	localint $1
	pop $1
	push smixer
	spushs
	spop $a
	call [$a],ismusicplaying
	cmp0
	je l146
	push smixer
	spushs
	push $1
	spop $a
	call [$a],fadeoutmusic
	call vmus,size
	pop ilastid
l146:
	end method
	method isplaying
	push smixer
	spushs
	spop $a
	call [$a],ismusicplaying
	end method
	method getactmusic
	call engine,getactmusic
	end method
	method stop
	push smixer
	spushs
	push 0
	spop $a
	call [$a],endmusic
	end method
	end class

	new int,igmstate
	new string,sgmstate
	method printstate
	push "sgmstate = "
	push sgmstate
	pop $b
	popax
	add $a,$b
	push " ,  igmstate = "
	pop $b
	popax
	add $a,$b
	push igmstate
	pop $b
	popax
	add $a,$b
	spushs
	spop $h
	call $h,print
	end method
	new int,igmdemo
	push "igmdemo:"
	call dbconf,dbgetint
	pop igmdemo
	new int,igmbegin
	push 1
	pop igmbegin
	new int,igmsoundson
	push "igmsoundson:"
	call dbconf,dbgetint
	pop igmsoundson
	new string,sgmfontfile
	push "sgmfontfile:"
	call dbconf,dbget
	pop sgmfontfile
	new string,sgmfontmono
	push "sgmfontmono:"
	call dbconf,dbget
	pop sgmfontmono
	new string,sgmfontmonobold
	push "sgmfontmonobold:"
	call dbconf,dbget
	pop sgmfontmonobold
	new string,sgmfontbold
	push "sgmfontbold:"
	call dbconf,dbget
	pop sgmfontbold
	new string,sgmfontitalic
	push "sgmfontitalic:"
	call dbconf,dbget
	pop sgmfontitalic
	new string,SFXPATH
	push "sfxpath:"
	call dbconf,dbget
	pop SFXPATH
	new string,BGRPATH
	push "sndbgrpath:"
	call dbconf,dbget
	pop BGRPATH
	new string,MUSICPATH
	push "musicpath:"
	call dbconf,dbget
	pop MUSICPATH
	new string,LANG
	push "lang:"
	call dbconf,dbget
	pop LANG
	new string,LANGDIR
	push "lang/"
	push LANG
	pop $b
	popax
	add $a,$b
	push "/"
	pop $b
	popax
	add $a,$b
	pop LANGDIR
	new string,SNDPATH
	push "sounds/"
	pop SNDPATH
	push LANG
	push "pl"
	cmpje
	cmp0
	je l148
	push ""
	pop LANG
l148:
	call LANG,length
	push 0
	cmpja
	cmp0
	je l150
	push LANG
	push "/"
	pop $b
	popax
	add $a,$b
	popax
	add SNDPATH,$a
	pop SNDPATH
l150:
	class newvars
	method init
	new string,_sclpath
	push ""
	pop _sclpath
	new string,_sclwavpath
	push ""
	pop _sclwavpath
	end method
	method _checkfont
	localstring $1
	localint $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push "null"
	cmpje
	cmp0
	je l152
	push sgmfontfile
	pop $1
l152:
	push ".ttf"
	call $1,contains
	cmp0
	je l154
	push $3
	spushs
	spop $e
	new font,[$e]
	push $3
	spushs
	push $1
	push $2
	spop $a
	call [$a],load
	push $3
	pop $1
l154:
	push $1
	end method
	method checkfont
	localstring $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push "_fnt"
	cthis _checkfont
	end method
	method begingame
	push igmbegin
	neg
	pop igmbegin
	push igmbegin
	neg
	end method
	method newarray
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $3
	push 0
	cmpjle
	cmp0
	je l156
	ret
l156:
	sub $3,1
	pop $3
l157:
	push $3
	push 0
	cmpjae
	cmp0
	je l158
	push $1
	spushs
	push $2
	push $3
	pop $b
	popax
	add $a,$b
	spushs
	spop $e
	spop $d
	new [$d],[$e]
	sub $3,1
	pop $3
	jmp l157
l158:
	end method
	method setgraphpath
	localstring $1
	pop $1
	push $1
	pop _sclpath
	push $1
	call engine,setpath
	end method
	method setwavpath
	localstring $1
	pop $1
	push $1
	pop _sclwavpath
	end method
	method getgraphpath
	push _sclpath
	end method
	method getsndpath
	push _sclwavpath
	end method
	method getpath
	localstring $1
	pop $1
	push 0
	push 1
	call $1,getb
	push "$"
	cmpje
	cmp0
	je l160
	push 1
	call $1,strsubb
	jmp l159
l160:
	cthis getgraphpath
	push $1
	pop $b
	popax
	add $a,$b
l159:
	end method
	method newanima
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new anima,[$e]
	localdef $4
	push $2
	cthis getpath
	pop $4
	push $1
	spushs
	push $4
	spop $a
	call [$a],load
	push igmdebug
	cmp0
	je l162
	push igmexportan
	cmp0
	je l164
	push $1
	spushs
	push "debug/"
	push 0
	call $4,length
	push "/"
	call $4,strgeteto
	spushs
	spop $h
	call $h,length
	pop $b
	popax
	sub $a,$b
	call $4,getb
	pop $b
	popax
	add $a,$b
	push "/"
	call $4,strgeteto
	spushs
	push ".pyz"
	spop $h
	call $h,strsubes
	pop $b
	popax
	add $a,$b
	push "/"
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],saveimages
	jmp l163
l164:
	push igmimportan
	cmp0
	je l166
	push "debug/"
	push ".pyz"
	call $4,strsubes
	pop $b
	popax
	add $a,$b
	push "/"
	pop $b
	popax
	add $a,$b
	pop $4
	push $4
	push "0.png"
	pop $b
	popax
	add $a,$b
	call engine,fileexist
	cmp0
	je l168
	push $1
	spushs
	push $4
	spop $a
	call [$a],loadimages
l168:
l166:
l163:
l162:
	push $1
	spushs
	push $3
	spop $a
	call [$a],setz
	end method
	method newstdanima
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	cthis newanima
	push $1
	cthis stdanaction
	end method
	method copyanimaactz
	localstring $1
	localstring $2
	localstring $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	cthis copyanimaact
	push $2
	spushs
	push $4
	spop $a
	call [$a],setz
	end method
	method copyanimaact
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	cthis copyanima
	push $2
	spushs
	push $3
	push 0
	spop $a
	call [$a],setframe
	end method
	method copyanima
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $2
	spushs
	spop $e
	new anima,[$e]
	push $2
	spushs
	push $1
	spop $a
	call [$a],copy
	end method
	method copyanimas
	localstring $1
	localstring $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $4
	push 0
	cmpjl
	cmp0
	je l170
	ret
l170:
	localint $5
	push 0
	pop $5
l171:
	push $5
	push $4
	cmpjl
	cmp0
	je l172
	jmp l174
l173:
	add $5,1
	pop $5
	jmp l171
l174:
	push $1
	push $2
	push $3
	push $5
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	add $a,$b
	cthis copyanima
	jmp l173
l172:
	end method
	method newanimas
	localstring $1
	localstring $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $4
	push 0
	cmpjl
	cmp0
	je l176
	ret
l176:
	push $1
	push "0"
	pop $b
	popax
	add $a,$b
	push $2
	push $3
	cthis newanima
	push $1
	push "0"
	pop $b
	popax
	add $a,$b
	push $1
	push 1
	push $4
	push 1
	pop $b
	popax
	sub $a,$b
	cthis copyanimas
	end method
	method newanframesgr
	localstring $1
	localstring $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	localint $5
	push $1
	spushs
	push $3
	spop $a
	call [$a],nofframes
	pop $5
	push $1
	push $2
	push 0
	push $5
	cthis copyanimas
	localint $6
	push 0
	pop $6
l177:
	push $6
	push $5
	cmpjl
	cmp0
	je l178
	jmp l180
l179:
	add $6,1
	pop $6
	jmp l177
l180:
	push $2
	push $6
	pop $b
	popax
	add $a,$b
	spushs
	push $3
	push $6
	spop $a
	call [$a],setframe
	push $4
	push "null"
	cmpjne
	cmp0
	je l182
	push $4
	spushs
	push $2
	push $6
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],add
l182:
	jmp l179
l178:
	push $5
	ret
	end method
	method newanframes
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push "null"
	cthis newanframesgr
	ret
	end method
	method newcanvas
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	localint $7
	localint $8
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new img,[$e]
	push $1
	spushs
	push $2
	push $3
	push $4
	push $5
	push $6
	push $7
	spop $a
	call [$a],create
	push $1
	spushs
	push $8
	spop $a
	call [$a],setz
	end method
	method newimg
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new img,[$e]
	push $1
	spushs
	push $2
	cthis getpath
	spop $a
	call [$a],load
	push $1
	spushs
	push $3
	spop $a
	call [$a],setz
	end method
	method copyimg
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $2
	spushs
	spop $e
	new img,[$e]
	push $2
	spushs
	push $1
	spop $a
	call [$a],copy
	end method
	method playmusic
	localstring $1
	pop $1
	push MUSICPATH
	push $1
	pop $b
	popax
	add $a,$b
	call gameapi,playmusic
	end method
	method snewsnd
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	cthis newsnd
	push $1
	spushs
	push "onfinish"
	push "__std_finish"
	spop $a
	call [$a],addmethod
	end method
	method _newsnd
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new snd,[$e]
	push "."
	call $2,contains
	neg
	cmp0
	je l184
	push ".wav"
	popax
	add $2,$a
	pop $2
l184:
	push $2
	call engine,fileexist
	neg
	cmp0
	je l186
	push "wav"
	call $2,strsubes
	push "ogg"
	pop $b
	popax
	add $a,$b
	pop $2
l186:
	push $3
	cmp0
	je l188
	push $1
	spushs
	push 0
	push 1
	spop $a
	call [$a],setstartstopflag
l188:
	push $1
	spushs
	push $2
	spop $a
	call [$a],load
	push igmsubtitle
	cmp0
	je l190
	push $1
	push $2
	call subtitle,register
l190:
	end method
	method newsfx
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push SFXPATH
	push $2
	pop $b
	popax
	add $a,$b
	push 0
	cthis _newsnd
	end method
	method newbgr
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push BGRPATH
	push $2
	pop $b
	popax
	add $a,$b
	push 0
	cthis _newsnd
	end method
	method newbgrloop
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	cthis newbgr
	push $1
	cthis sndplayloop
	end method
	method newsnd
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	cthis getsndpath
	push $2
	pop $b
	popax
	add $a,$b
	push 0
	cthis _newsnd
	end method
	method newsndfree
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	cthis getsndpath
	push $2
	pop $b
	popax
	add $a,$b
	push 1
	cthis _newsnd
	end method
	method newsndloop
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	cthis newsnd
	push $1
	cthis looponfinish1
	end method
	method looponfinish1
	localstring $1
	pop $1
	push $1
	spushs
	push "onfinish"
	push "_stdsndloop"
	spop $a
	call [$a],addmethod
	end method
	method sndplayloop
	localstring $1
	pop $1
	push $1
	cthis looponfinish1
	push $1
	spushs
	spop $a
	call [$a],play
	end method
	method newsnds
	localstring $1
	localint $2
	localstring $3
	localint $4
	localint $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	localstring $6
	localint $7
	push $5
	push $4
	pop $b
	popax
	sub $a,$b
	push 1
	pop $b
	popax
	add $a,$b
	pop $7
	localint $8
	push 0
	pop $8
l191:
	push $8
	push $7
	cmpjl
	cmp0
	je l192
	jmp l194
l193:
	add $8,1
	pop $8
	jmp l191
l194:
	push $1
	push $2
	push $8
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	add $a,$b
	pop $6
	push $6
	spushs
	spop $e
	new snd,[$e]
	push $6
	spushs
	cthis getsndpath
	push $3
	pop $b
	popax
	add $a,$b
	push $4
	push $8
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	add $a,$b
	push ".wav"
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],load
	jmp l193
l192:
	end method
	method newtimer
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new timer,[$e]
	push $1
	spushs
	push $3
	spop $a
	call [$a],settick
	push $1
	spushs
	push $2
	spop $a
	call [$a],delay
	end method
	method newtimercycle
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new timer,[$e]
	push $1
	spushs
	push $3
	spop $a
	call [$a],settick
	push $1
	spushs
	push $2
	spop $a
	call [$a],setcycle
	end method
	method stdanaction
	localstring $1
	pop $1
	localstring $2
	push $1
	spushs
	spop $a
	call [$a],actionname
	pop $2
	push "L"
	call $2,contains
	cmp0
	je l196
	push $1
	cthis looponfinish
	jmp l195
l196:
	push "H"
	call $2,contains
	cmp0
	je l198
	push $1
	cthis hideonfinish
l198:
l195:
	push "P"
	call $2,contains
	cmp0
	je l200
	push $1
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],play
l200:
	end method
	method newanactionsgr
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	localint $4
	push $1
	spushs
	spop $a
	call [$a],nofactions
	pop $4
	push $1
	push $2
	push 0
	push $4
	cthis copyanimas
	localstring $5
	localint $6
	push 0
	pop $6
l201:
	push $6
	push $4
	cmpjl
	cmp0
	je l202
	jmp l204
l203:
	add $6,1
	pop $6
	jmp l201
l204:
	push $2
	push $6
	pop $b
	popax
	add $a,$b
	pop $5
	push $5
	spushs
	push $6
	push 0
	spop $a
	call [$a],setframe
	push $5
	cthis stdanaction
	push $3
	push "null"
	cmpjne
	cmp0
	je l206
	push $3
	spushs
	push $5
	spop $a
	call [$a],add
l206:
	jmp l203
l202:
	push $4
	end method
	method newanactions
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push "null"
	cthis newanactionsgr
	end method
	method newanfrbyactgr
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	localint $4
	push $1
	spushs
	spop $a
	call [$a],nofactions
	pop $4
	localint $5
	push 0
	pop $5
l207:
	push $5
	push $4
	cmpjl
	cmp0
	je l208
	jmp l210
l209:
	add $5,1
	pop $5
	jmp l207
l210:
	push $1
	push $2
	push $5
	pop $b
	popax
	add $a,$b
	push "_"
	pop $b
	popax
	add $a,$b
	push $5
	push $3
	cthis newanframesgr
	popax
	jmp l209
l208:
	push $4
	end method
	method newanfrbyact
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push "null"
	cthis newanfrbyactgr
	end method
	method loadanfrbyact
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	localstring $4
	push "_"
	push $1
	pop $b
	popax
	add $a,$b
	pop $4
	push $4
	push $2
	push $3
	cthis newanima
	localint $5
	push $4
	push $1
	cthis newanfrbyact
	pop $5
	push $4
	spushs
	spop $a
	call [$a],hide
	push $5
	ret
	end method
	method loadanactions
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	localstring $4
	push "_"
	push $1
	pop $b
	popax
	add $a,$b
	pop $4
	push $4
	push $2
	push $3
	cthis newanima
	localint $5
	push $4
	push $1
	cthis newanactions
	pop $5
	push $4
	spushs
	spop $a
	call [$a],hide
	push $5
	ret
	end method
	method loadanframes
	localstring $1
	localstring $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	localstring $5
	push "_"
	push $1
	pop $b
	popax
	add $a,$b
	pop $5
	push $5
	push $2
	push $4
	cthis newanima
	localint $6
	push $5
	push $1
	push $3
	cthis newanframes
	pop $6
	push $5
	spushs
	spop $a
	call [$a],hide
	push $6
	ret
	end method
	method newbutimg
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new button,[$e]
	push $1
	spushs
	push $2
	push $3
	push $4
	spop $a
	call [$a],set
	push $1
	spushs
	push $5
	spop $a
	call [$a],setmouse
	end method
	method newbutan
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new button,[$e]
	push $1
	spushs
	push $2
	push $3
	push $4
	spop $a
	call [$a],setan
	push $1
	spushs
	push $5
	spop $a
	call [$a],setmouse
	end method
	method newdb
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new db,[$e]
	push $1
	spushs
	push $2
	cthis getpath
	spop $a
	call [$a],load
	end method
	method newdbscript
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new db,[$e]
	push $1
	spushs
	push $2
	cthis getpath
	spop $a
	call [$a],loadscritp
	end method
	method vargmset
	localstring $1
	localdef $2
	pop $2
	pop $1
	localstring $3
	call gameapi,getgamename
	pop $3
	push $3
	spushs
	push $1
	spop $a
	call [$a],hasvar
	neg
	cmp0
	je l212
	push $3
	spushs
	call $2,gettype
	push $1
	spop $a
	call [$a],varnew
l212:
	push $1
	spushs
	push $2
	spop $b
	popax
	mov [$b],$a
	end method
	end class

	class classadvmouse
	method init
	new anima,anmsc
	end method
	method load
	localstring $1
	pop $1
	push $1
	call anmsc,load
	push "onendframe"
	push "setnextframe"
	call anmsc,addmethod
	push "onsetframe"
	push "classadvmouse0"
	call anmsc,addmethod
	call anmsc,hide
	end method
	method classadvmouse0
	cthis hide
	end method
	method stdload
	push igmdebug
	neg
	cmp0
	je l214
	cthis checktouchpad
	jmp l216
l214:
	push 0
	jmp l216
l215:
	push 1
l216:
	cmp0
	je l217
	push "scripts/common/kursorypad.pyz"
	cthis load
	jmp l213
l217:
	push "scripts/common/cursors.pyz"
	cthis load
l213:
	end method
	method setnextframe
	call anmsc,ansetnextfr
	push "anmsc"
	call mouse,setcursor
	end method
	method set
	localstring $1
	pop $1
	push $1
	call anmsc,isplaying
	neg
	cmp0
	je l219
	push $1
	call anmsc,play
l219:
	push "anmsc"
	call mouse,setcursor
	end method
	method setstd
	push "normal"
	cthis set
	end method
	method setactive
	push "active"
	cthis set
	end method
	method setact
	push "active"
	cthis set
	end method
	method setbut
	push "active"
	cthis set
	end method
	method setexit
	push "exit"
	cthis set
	end method
	method setwait
	push "wait"
	cthis set
	end method
	method get
	call anmsc,actionname
	end method
	method lodx
	call anmsc,lodx
	end method
	method lody
	call anmsc,lody
	end method
	end class

	new classadvmouse,advmouse
	call advmouse,stdload
	module clsurf
	method init
	end method
	method isin
	localint $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $3
	cmpjae
	cmp0
	je l220
	push $1
	push $5
	cmpjle
	cmp0
	je l220
	push $2
	push $4
	cmpjae
	cmp0
	je l220
	push $2
	push $6
	cmpjle
	jmp l222
l220:
	push 0
	jmp l222
l221:
	push 1
l222:
	end method
	method isin2
	localint $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $3
	cmpjae
	cmp0
	je l223
	push $1
	push $3
	push $5
	pop $b
	popax
	add $a,$b
	cmpjl
	cmp0
	je l223
	push $2
	push $4
	cmpjae
	cmp0
	je l223
	push $2
	push $4
	push $6
	pop $b
	popax
	add $a,$b
	cmpjl
	jmp l225
l223:
	push 0
	jmp l225
l224:
	push 1
l225:
	end method
	method inscreen
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push $3
	pop $b
	popax
	sub $a,$b
	push 0
	push $4
	pop $b
	popax
	sub $a,$b
	push 800
	push $3
	pop $b
	popax
	add $a,$b
	push 600
	push $4
	pop $b
	popax
	add $a,$b
	cthis isin
	end method
	method insurf
	localint $1
	localint $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	spushs
	spop $a
	call [$a],getpx
	push $3
	spushs
	spop $a
	call [$a],getpy
	push $3
	spushs
	spop $a
	call [$a],getex
	push 1
	pop $b
	popax
	sub $a,$b
	push $3
	spushs
	spop $a
	call [$a],getey
	push 1
	pop $b
	popax
	sub $a,$b
	cthis isin
	end method
	method issurfin
	localint $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	localint $7
	localint $8
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $5
	push $6
	push $7
	push $8
	cthis isin
	cmp0
	jne l227
	push $3
	push $2
	push $5
	push $6
	push $7
	push $8
	cthis isin
	cmp0
	jne l227
	push $1
	push $4
	push $5
	push $6
	push $7
	push $8
	cthis isin
	cmp0
	jne l227
	push $3
	push $4
	push $5
	push $6
	push $7
	push $8
	cthis isin
	cmp0
	jne l227
	push $1
	push $5
	cmpjl
	cmp0
	je l228
	push $3
	push $7
	cmpja
	cmp0
	je l228
	push $2
	push $6
	cmpjl
	cmp0
	je l228
	push $4
	push $8
	cmpja
	jmp l230
l228:
	push 0
	jmp l230
l229:
	push 1
l230:
	jmp l231
l226:
	push 0
	jmp l231
l227:
	push 1
l231:
	end method
	method commonsurface
	localint $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	localint $7
	localint $8
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	push $5
	push $6
	push $7
	push $8
	cthis issurfin
	cmp0
	jne l233
	push $5
	push $6
	push $7
	push $8
	push $1
	push $2
	push $3
	push $4
	cthis issurfin
	jmp l234
l232:
	push 0
	jmp l234
l233:
	push 1
l234:
	end method
	method commonimgs
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getpx
	push $1
	spushs
	spop $a
	call [$a],getpy
	push $1
	spushs
	spop $a
	call [$a],getex
	push 1
	pop $b
	popax
	sub $a,$b
	push $1
	spushs
	spop $a
	call [$a],getey
	push 1
	pop $b
	popax
	sub $a,$b
	push $2
	spushs
	spop $a
	call [$a],getpx
	push $2
	spushs
	spop $a
	call [$a],getpy
	push $2
	spushs
	spop $a
	call [$a],getex
	push 1
	pop $b
	popax
	sub $a,$b
	push $2
	spushs
	spop $a
	call [$a],getey
	push 1
	pop $b
	popax
	sub $a,$b
	cthis commonsurface
	end method
	method surfwithinsurf
	localint $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	localint $7
	localint $8
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $5
	push $6
	push $7
	push $8
	cthis isin
	cmp0
	je l235
	push $3
	push $2
	push $5
	push $6
	push $7
	push $8
	cthis isin
	cmp0
	je l235
	push $1
	push $4
	push $5
	push $6
	push $7
	push $8
	cthis isin
	cmp0
	je l235
	push $3
	push $4
	push $5
	push $6
	push $7
	push $8
	cthis isin
	jmp l237
l235:
	push 0
	jmp l237
l236:
	push 1
l237:
	end method
	method imgwithinimg
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getpx
	push $1
	spushs
	spop $a
	call [$a],getpy
	push $1
	spushs
	spop $a
	call [$a],getex
	push 1
	pop $b
	popax
	sub $a,$b
	push $1
	spushs
	spop $a
	call [$a],getey
	push 1
	pop $b
	popax
	sub $a,$b
	push $2
	spushs
	spop $a
	call [$a],getpx
	push $2
	spushs
	spop $a
	call [$a],getpy
	push $2
	spushs
	spop $a
	call [$a],getex
	push 1
	pop $b
	popax
	sub $a,$b
	push $2
	spushs
	spop $a
	call [$a],getey
	push 1
	pop $b
	popax
	sub $a,$b
	cthis surfwithinsurf
	end method
	end module

	module cllen
	method init
	new int,il1
	new int,ilx
	new int,ily
	end method
	method ilenx
	push ilx
	ret
	end method
	method ileny
	push ily
	ret
	end method
	method ilen4
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	pop $b
	popax
	sub $a,$b
	spushs
	spop $h
	call $h,abs
	ret
	end method
	method ilen3
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getcx
	push $1
	spushs
	spop $a
	call [$a],getcy
	push $2
	spushs
	spop $a
	call [$a],getcx
	push $2
	spushs
	spop $a
	call [$a],getcy
	cthis ilen
	ret
	end method
	method ilen5
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getpx
	push $1
	spushs
	spop $a
	call [$a],getpy
	push $2
	spushs
	spop $a
	call [$a],getpx
	push $2
	spushs
	spop $a
	call [$a],getpy
	cthis ilen
	ret
	end method
	method ilen2
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getcx
	push $1
	spushs
	spop $a
	call [$a],getcy
	push $2
	push $3
	cthis ilen
	ret
	end method
	method ilen
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $3
	pop $b
	popax
	sub $a,$b
	pop ilx
	push $2
	push $4
	pop $b
	popax
	sub $a,$b
	pop ily
	push ilx
	push ily
	call il1,length
	ret
	end method
	method iclenx
	localstring $1
	localint $2
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getcx
	push $2
	pop $b
	popax
	sub $a,$b
	ret
	end method
	method iclenx2
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getcx
	push $2
	spushs
	spop $a
	call [$a],getcx
	pop $b
	popax
	sub $a,$b
	ret
	end method
	method icleny
	localstring $1
	localint $2
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getcy
	push $2
	pop $b
	popax
	sub $a,$b
	ret
	end method
	method icleny2
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getcy
	push $2
	spushs
	spop $a
	call [$a],getcy
	pop $b
	popax
	sub $a,$b
	ret
	end method
	method isbetween2
	localstring $1
	localstring $2
	localint $3
	localint $4
	localint $5
	localint $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	spushs
	spop $a
	call [$a],getcx
	push $2
	spushs
	spop $a
	call [$a],getcy
	push $3
	push $4
	push $5
	push $6
	cthis isbetween
	ret
	end method
	method isbetween
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	localint $7
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	cthis ilen
	pop il1
	push ilx
	push $4
	cmpjae
	cmp0
	je l238
	push ilx
	push $6
	cmpjle
	cmp0
	je l238
	push ily
	push $5
	cmpjae
	cmp0
	je l238
	push ily
	push $7
	cmpjle
	jmp l240
l238:
	push 0
	jmp l240
l239:
	push 1
l240:
	ret
	end method
	method ilodlen
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],lodx
	push $1
	spushs
	spop $a
	call [$a],lody
	push $2
	spushs
	spop $a
	call [$a],lodx
	push $2
	spushs
	spop $a
	call [$a],lody
	cthis ilen
	end method
	method iposlen
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getpos
	push $2
	spushs
	spop $a
	call [$a],getpos
	cthis ilen
	end method
	end module

	class classansearcher
	method init
	end method
	method _findnotr
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	localint $6
	push $1
	spushs
	spop $a
	call [$a],getex
	pop $6
	localint $7
	push $1
	spushs
	spop $a
	call [$a],getey
	pop $7
l241:
	push $2
	push $6
	cmpjne
	cmp0
	je l242
	push $3
	push $7
	cmpjne
	jmp l244
l242:
	push 0
	jmp l244
l243:
	push 1
l244:
	cmp0
	je l245
	push $1
	spushs
	push $2
	push $3
	push 0
	push 1
	spop $a
	call [$a],isin
	cmp0
	je l247
	push $2
	push $3
	ret
l247:
	push $4
	popax
	add $2,$a
	pop $2
	push $5
	popax
	add $3,$a
	pop $3
	jmp l241
l245:
	push 1
	popax
	sub 0,$a
	push 1
	popax
	sub 0,$a
	ret
	end method
	method firstnotrx1y
	localstring $1
	pop $1
	push $1
	push $1
	spushs
	spop $a
	call [$a],getpx
	push $1
	spushs
	spop $a
	call [$a],getpy
	push 1
	push 0
	cthis _findnotr
	ret
	end method
	method firstnotrexy1
	localstring $1
	pop $1
	push $1
	push $1
	spushs
	spop $a
	call [$a],getex
	push 1
	pop $b
	popax
	sub $a,$b
	push $1
	spushs
	spop $a
	call [$a],getpy
	push 0
	push 1
	cthis _findnotr
	ret
	end method
	method firstnotrxy1
	localstring $1
	pop $1
	push $1
	push $1
	spushs
	spop $a
	call [$a],getpx
	push $1
	spushs
	spop $a
	call [$a],getpy
	push 0
	push 1
	cthis _findnotr
	ret
	end method
	method firstnotrx1ey
	localstring $1
	pop $1
	push $1
	push $1
	spushs
	spop $a
	call [$a],getpx
	push $1
	spushs
	spop $a
	call [$a],getey
	push 1
	pop $b
	popax
	sub $a,$b
	push 1
	push 0
	cthis _findnotr
	ret
	end method
	end class

	class signal_pack
	method init
	end method
	method addsignals
	localstring $1
	pop $1
	push $1
	spushs
	push "operator<"
	push "signal_pack0"
	spop $a
	call [$a],addmethod
	end method
	method signal_pack0
	localstring $1
	pop $1
	push "onfinish"
	push $1
	cthis addmethod
	end method
	end class

	class ImagePos
	method init
	end method
	method getex
	cthis getpx
	cthis getw
	pop $b
	popax
	add $a,$b
	end method
	method getey
	cthis getpy
	cthis geth
	pop $b
	popax
	add $a,$b
	end method
	method getcx
	cthis getpx
	cthis getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	end method
	method getcy
	cthis getpy
	cthis geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	end method
	method setpos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	cthis getpx
	pop $b
	popax
	sub $a,$b
	push $2
	cthis getpy
	pop $b
	popax
	sub $a,$b
	cthis move
	end method
	end class

	class ImageVisible
	method init
	new int,_isvisible
	push 1
	pop _isvisible
	end method
	method isvisible
	push _isvisible
	end method
	method show
	push 1
	pop _isvisible
	end method
	method hide
	push 0
	pop _isvisible
	end method
	end class

	class Image
	method init
	end method
	method resizemethods
	localstring $1
	pop $1
	push $1
	spushs
	push A
	push "getz"
	push 0
	push "getpx"
	push 0
	push "getpy"
	push 0
	push "getw"
	push 0
	push "geth"
	push 0
	push "isvisible"
	push 0
	spop $a
	call [$a],vars2
	push $1
	spushs
	push "show"
	push "Image0"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "hide"
	push "Image1"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setz"
	push "Image2"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setpos"
	push "Image3"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "move"
	push "Image4"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "getex"
	push "Image5"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "getey"
	push "Image6"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "getcx"
	push "Image7"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "getcy"
	push "Image8"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "isin"
	push "Image9"
	spop $a
	call [$a],addmethod
	end method
	method Image0
	push 1
	pop isvisible
	end method
	method Image1
	push 0
	pop isvisible
	end method
	method Image2
	localint $1
	pop $1
	push $1
	pop getz
	end method
	method Image3
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	pop getpx
	push $2
	pop getpy
	end method
	method Image4
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	popax
	add getpx,$a
	pop getpx
	push $2
	popax
	add getpy,$a
	pop getpy
	end method
	method Image5
	push getpx
	push getw
	pop $b
	popax
	add $a,$b
	end method
	method Image6
	push getpy
	push geth
	pop $b
	popax
	add $a,$b
	end method
	method Image7
	push getpx
	push getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	end method
	method Image8
	push getpy
	push geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	end method
	method Image9
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $4
	neg
	cmp0
	je l249
	push $3
	neg
	cmp0
	jne l252
	push $3
	cmp0
	je l253
	push isvisible
	jmp l255
l253:
	push 0
	jmp l255
l254:
	push 1
l255:
	jmp l256
l251:
	push 0
	jmp l256
l252:
	push 1
l256:
	cmp0
	je l257
	push $1
	push getpx
	cmpjae
	cmp0
	je l258
	push $1
	cthis getex
	cmpjl
	cmp0
	je l258
	push $2
	push getpy
	cmpjae
	cmp0
	je l258
	push $2
	cthis getey
	cmpjl
	jmp l260
l258:
	push 0
	jmp l260
l259:
	push 1
l260:
	jmp l250
l257:
	push 0
l250:
	jmp l248
l249:
	push 0
l248:
	end method
	end class

	class anima_pack
	parent signal_pack
	method init
	end method
	method resizemethods
	localstring $1
	pop $1
	push $1
	spushs
	push "_clanbuildpomvars"
	push "anima_pack0"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	spop $a
	call [$a],_clanbuildpomvars
	push $1
	spushs
	push "setbpos"
	push "anima_pack1"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "saverelpos"
	push "anima_pack2"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setrelpos"
	push "anima_pack3"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "mssaverelpos"
	push "anima_pack4"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "mssetrelpos"
	push "anima_pack5"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "rplay"
	push "anima_pack6"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setcpos"
	push "anima_pack7"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "operator="
	push "anima_pack8"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "operator=="
	push "anima_pack9"
	spop $a
	call [$a],addmethod
	push $1
	cthis addsignals
	end method
	method anima_pack0
	new int,_ixp
	new int,_iyp
	end method
	method anima_pack1
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	cthis lodx
	pop $b
	popax
	sub $a,$b
	push $2
	cthis lody
	pop $b
	popax
	sub $a,$b
	cthis setpos
	end method
	method anima_pack2
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	cthis getpx
	pop $b
	popax
	sub $a,$b
	pop _ixp
	push $2
	cthis getpy
	pop $b
	popax
	sub $a,$b
	pop _iyp
	end method
	method anima_pack3
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push _ixp
	pop $b
	popax
	sub $a,$b
	push $2
	push _iyp
	pop $b
	popax
	sub $a,$b
	cthis setbpos
	end method
	method anima_pack4
	call mouse,getpos
	cthis saverelpos
	end method
	method anima_pack5
	call mouse,getpos
	cthis setrelpos
	end method
	method anima_pack6
	localstring $1
	pop $1
	push $1
	cthis isplaying
	neg
	cmp0
	je l262
	push $1
	cthis play
l262:
	end method
	method anima_pack7
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	cthis getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push $2
	cthis geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	cthis setbpos
	end method
	method anima_pack8
	localstring $1
	pop $1
	push $1
	cthis copy
	end method
	method anima_pack9
	localstring $1
	pop $1
	cthis actionnr
	push $1
	spushs
	spop $a
	call [$a],actionnr
	cmpje
	cmp0
	je l263
	cthis framenr
	push $1
	spushs
	spop $a
	call [$a],framenr
	cmpje
	jmp l265
l263:
	push 0
	jmp l265
l264:
	push 1
l265:
	end method
	end class

	class timer_pack
	parent signal_pack
	method init
	end method
	method resizemethods
	localstring $1
	pop $1
	push $1
	cthis addsignals
	end method
	end class

	class vector_pack
	method init
	end method
	method each
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l266:
	push $2
	cthis size
	cmpjl
	cmp0
	je l267
	jmp l269
l268:
	add $2,1
	pop $2
	jmp l266
l269:
	push $1
	spushs
	push $2
	cthis get
	spop $d
	cthis [$d]
	jmp l268
l267:
	end method
	method resizemethods
	localstring $1
	pop $1
	push $1
	spushs
	push "each"
	push "each"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "operator-"
	push "vector_pack0"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "operator+"
	push "vector_pack1"
	spop $a
	call [$a],addmethod
	end method
	method vector_pack0
	localdef $1
	pop $1
	push $1
	cthis remove
	cthis getname
	end method
	method vector_pack1
	localdef $1
	pop $1
	push $1
	cthis add
	cthis getname
	end method
	end class

	method new_object
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	push $2
	spushs
	spop $e
	spop $d
	new [$d],[$e]
	push $1
	push "_pack"
	pop $b
	popax
	add $a,$b
	spushs
	push $2
	spop $a
	 clparent [$a],resizemethods
	end method
	method new_anima
	localstring $1
	pop $1
	push "anima"
	push $1
	cthis new_object
	end method
	method new_vector
	localstring $1
	pop $1
	push "vector"
	push $1
	cthis new_object
	end method
	class classanfilter
	method init
	end method
	method buildanfilter
	new filter,ft
	cthis getname
	call ft,link
	push 1
	call ft,setpivottype
	end method
	method build
	localstring $1
	pop $1
	push $1
	spushs
	push "buildanfilter"
	push "buildanfilter"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	spop $a
	call [$a],buildanfilter
	push $1
	spushs
	push "setopacity"
	push "classanfilter0"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setzoom"
	push "classanfilter1"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setangle"
	push "classanfilter2"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "getangle"
	push "classanfilter3"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "rotate"
	push "classanfilter4"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setpivottype"
	push "classanfilter5"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "unlink"
	push "classanfilter6"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "link"
	push "classanfilter7"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "blend"
	push "classanfilter8"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "mask"
	push "classanfilter9"
	spop $a
	call [$a],addmethod
	end method
	method classanfilter0
	localint $1
	pop $1
	push $1
	call ft,setopacity
	end method
	method classanfilter1
	localreal $1
	pop $1
	push $1
	call ft,setzoom
	end method
	method classanfilter2
	localreal $1
	pop $1
	push $1
	call ft,setangle
	end method
	method classanfilter3
	call ft,getangle
	ret
	end method
	method classanfilter4
	localreal $1
	pop $1
	push $1
	call ft,rotate
	end method
	method classanfilter5
	localint $1
	pop $1
	push $1
	call ft,setpivottype
	end method
	method classanfilter6
	call ft,unlink
	end method
	method classanfilter7
	cthis getname
	call ft,link
	end method
	method classanfilter8
	localstring $1
	pop $1
	push $1
	call ft,blend
	end method
	method classanfilter9
	localstring $1
	pop $1
	push $1
	call ft,mask
	end method
	end class

	class classancounter
	method init
	new int,iile
	new int,id
	new string,_san
	new vector,_vs
	new int,_pos
	end method
	method set
	localstring $1
	localint $2
	pop $2
	pop $1
	push $1
	pop _san
	push $2
	pop iile
	push 0
	pop id
	call $1,length
	pop _pos
	push $2
	push 0
	call _vs,resize
	end method
	method get
	localstring $1
	push _san
	push id
	pop $b
	popax
	add $a,$b
	pop $1
	push id
	push 1
	pop $b
	popax
	add $a,$b
	push iile
	pop $b
	popax
	div $a,$b
	push $d
	pop id
	push $1
	ret
	end method
	method getf
	localint $1
	push 0
	pop $1
l270:
	push $1
	push iile
	cmpjl
	cmp0
	je l271
	jmp l273
l272:
	add $1,1
	pop $1
	jmp l270
l273:
	push $1
	call _vs,get
	neg
	cmp0
	je l275
	push $1
	push 1
	call _vs,set
	push _san
	push $1
	pop $b
	popax
	add $a,$b
	ret
l275:
	jmp l272
l271:
	push "null"
	ret
	end method
	method retf
	localstring $1
	pop $1
	push _san
	call $1,strsubbs
	push 0
	call _vs,set
	end method
	method isfree
	localint $1
	pop $1
	push $1
	call _vs,get
	ret
	end method
	method getile
	push iile
	ret
	end method
	method allfree
	call _vs,vecsum
	push 0
	cmpje
	end method
	end class

	class gmobjvec
	method init
	new vector,lsim
	push "string"
	call lsim,type
	end method
	method operator=
	localstring $1
	pop $1
	push $1
	call engine,varexist
	cmp0
	je l277
	push $1
	spushs
	spop $a
	call [$a],gettype
	spushs
	push "vector"
	cmpst
	jne l279
	spop $a
	push $1
	cthis copy
	jmp l278
l279:
	push "gmobjvec"
	cmpst
	jne l280
	spop $a
	push $1
	cthis copy
	jmp l278
l280:
	push "gmimgvec"
	cmpst
	jne l281
	spop $a
	push $1
	cthis copy
	jmp l278
l281:
	spop $a
	cthis free
	push $1
	cthis add
l278:
	jmp l276
l277:
	cthis free
	push $1
	cthis add
l276:
	end method
	method save
	localstring $1
	pop $1
	push $1
	call lsim,save
	end method
	method load
	localstring $1
	pop $1
	push $1
	call lsim,load
	end method
	method operator+
	localstring $1
	pop $1
	push $1
	cthis add
	cthis getname
	end method
	method operator-
	localstring $1
	pop $1
	push $1
	cthis remove
	cthis getname
	end method
	method removegr
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l282:
	push $2
	push $1
	spushs
	spop $a
	call [$a],size
	cmpjl
	cmp0
	je l283
	jmp l285
l284:
	add $2,1
	pop $2
	jmp l282
l285:
	push $1
	spushs
	push $2
	spop $a
	call [$a],get
	cthis remove
	jmp l284
l283:
	end method
	method addtogr
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l286:
	push $2
	cthis size
	cmpjl
	cmp0
	je l287
	jmp l289
l288:
	add $2,1
	pop $2
	jmp l286
l289:
	push $1
	spushs
	push $2
	cthis get
	spop $a
	call [$a],add
	jmp l288
l287:
	end method
	method addgr
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l290:
	push $2
	push $1
	spushs
	spop $a
	call [$a],size
	cmpjl
	cmp0
	je l291
	jmp l293
l292:
	add $2,1
	pop $2
	jmp l290
l293:
	push $1
	spushs
	push $2
	spop $a
	call [$a],get
	cthis add
	jmp l292
l291:
	end method
	method addgroups
	push "addgr"
	cthis withlist
	end method
	method copy
	localstring $1
	pop $1
	cthis free
	push $1
	cthis addgr
	end method
	method free
	call lsim,free
	end method
	method size
	call lsim,size
	end method
	method empty
	cthis size
	push 0
	cmpje
	end method
	method hash
	call lsim,hash
	end method
	method first
	push 0
	call lsim,get
	end method
	method last
	call lsim,size
	push 1
	pop $b
	popax
	sub $a,$b
	call lsim,get
	end method
	method print
	push ""
	call engine,print
	push "------ type("
	cthis gettype
	pop $b
	popax
	add $a,$b
	push ") "
	pop $b
	popax
	add $a,$b
	cthis getname
	pop $b
	popax
	add $a,$b
	push " ------"
	pop $b
	popax
	add $a,$b
	call engine,print
	call lsim,print
	push "------ end ------"
	call engine,print
	push ""
	call engine,print
	end method
	method get
	localint $1
	pop $1
	push $1
	call lsim,get
	end method
	method set
	localint $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	call lsim,set
	end method
	method add
	localstring $1
	pop $1
	push $1
	call lsim,add
	end method
	method additer
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
l294:
	push $3
	push 0
	cmpja
	cmp0
	je l295
	push $1
	push $2
	pop $b
	popax
	add $a,$b
	cthis add
	add $2,1
	pop $2
	sub $3,1
	pop $3
	jmp l294
l295:
	end method
	method buildarray
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	call gameapi,getgamename
	spushs
	push $1
	push $2
	push $3
	spop $a
	call [$a],newarray
	push $2
	push 0
	push $3
	cthis additer
	end method
	method deleteall
	localint $1
	push 0
	pop $1
l296:
	push $1
	cthis size
	cmpjl
	cmp0
	je l297
	jmp l299
l298:
	add $1,1
	pop $1
	jmp l296
l299:
	push $1
	cthis get
	spushs
	spop $d
	delete [$d]
	jmp l298
l297:
	end method
	method deleteallgm
	localdef $1
	call gameapi,getgamename
	pop $1
	localint $2
	push 0
	pop $2
l300:
	push $2
	cthis size
	cmpjl
	cmp0
	je l301
	jmp l303
l302:
	add $2,1
	pop $2
	jmp l300
l303:
	push $1
	spushs
	push $2
	cthis get
	spop $a
	call [$a],vardel
	jmp l302
l301:
	end method
	method deleteallgmobj
	localdef $1
	call gameapi,getgamename
	pop $1
	localint $2
	push 0
	pop $2
l304:
	push $2
	cthis size
	cmpjl
	cmp0
	je l305
	jmp l307
l306:
	add $2,1
	pop $2
	jmp l304
l307:
	push $1
	spushs
	push $2
	cthis get
	spop $a
	call [$a],deletegmobj
	jmp l306
l305:
	end method
	method lockall
	push "lock"
	cthis eval
	end method
	method unlockall
	push "unlock"
	cthis eval
	end method
	method addbegin
	localstring $1
	pop $1
	push $1
	call lsim,addbegin
	end method
	method swap
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call lsim,swap
	end method
	method addonce
	localstring $1
	pop $1
	push $1
	call lsim,contains
	neg
	cmp0
	je l309
	push $1
	call lsim,add
l309:
	end method
	method sepadd
	localstring $1
	pop $1
	localstring $2
	pop $2
l310:
	push $2
	push $1
	cmpjne
	cmp0
	je l311
	push $2
	cthis addbegin
	pop $2
	jmp l310
l311:
	end method
	method addlist
	push A
	cthis sepadd
	end method
	method removelist
	push "remove"
	cthis withlist
	end method
	method insertat
	localstring $1
	localint $2
	pop $2
	pop $1
	localdef $3
	cthis size
	pop $3
	push $2
	push 0
	cmpjle
	cmp0
	je l313
	push $1
	cthis addbegin
	jmp l312
l313:
	push $2
	push $3
	cmpjae
	cmp0
	je l315
	push $1
	cthis add
	jmp l314
l315:
	push "null"
	cthis add
	localdef $4
	push $3
	pop $4
l316:
	push $4
	push $2
	cmpja
	cmp0
	je l317
	jmp l319
l318:
	sub $4,1
	pop $4
	jmp l316
l319:
	push $4
	push $4
	push 1
	pop $b
	popax
	sub $a,$b
	cthis get
	cthis set
	jmp l318
l317:
	push $2
	push $1
	cthis set
l314:
l312:
	end method
	method remove
	localstring $1
	pop $1
	push $1
	call lsim,remove
	end method
	method removeat
	localint $1
	pop $1
	push $1
	call lsim,removeat
	end method
	method removefirst
	push 0
	call lsim,removeat
	end method
	method removelast
	cthis size
	push 1
	pop $b
	popax
	sub $a,$b
	call lsim,removeat
	end method
	method removealloccurs
	localstring $1
	pop $1
l320:
	push $1
	cthis contains
	cmp0
	je l321
	push $1
	cthis remove
	jmp l320
l321:
	end method
	method removeif
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l322:
	push $2
	cthis size
	cmpjl
	cmp0
	je l323
	jmp l325
l324:
	add $2,1
	pop $2
	jmp l322
l325:
	push $2
	cthis get
	spushs
	push $1
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	cmp0
	je l327
	push $2
	cthis removeat
l327:
	jmp l324
l323:
	end method
	method find
	localstring $1
	pop $1
	push $1
	call lsim,find
	end method
	method contains
	localstring $1
	pop $1
	push $1
	call lsim,contains
	end method
	method addgroup
	localstring $1
	localint $2
	pop $2
	pop $1
	push $1
	push 0
	push $2
	push 1
	pop $b
	popax
	sub $a,$b
	cthis addgroup2
	end method
	method addgroup2
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
l328:
	push $2
	push $3
	cmpjle
	cmp0
	je l329
	push $1
	push $2
	pop $b
	popax
	add $a,$b
	cthis add
	add $2,1
	pop $2
	jmp l328
l329:
	end method
	method rand
	localint $1
	cthis size
	pop $1
	push $1
	push 0
	cmpja
	cmp0
	je l331
	call $1,rand
	cthis get
	jmp l330
l331:
	push "null"
l330:
	end method
	method randdiff
	localstring $1
	pop $1
	localint $2
	cthis size
	pop $2
	push $2
	push 0
	cmpja
	cmp0
	je l333
	localint $3
	call $2,rand
	pop $3
	localint $4
	push $3
	pop $4
l334:
	push $3
	cthis get
	push $1
	cmpje
	cmp0
	je l335
	push $3
	push 1
	pop $b
	popax
	add $a,$b
	push $2
	pop $b
	popax
	div $a,$b
	push $d
	pop $3
	push $3
	push $4
	cmpje
	cmp0
	je l337
	push "null"
	ret
l337:
	jmp l334
l335:
	push $3
	cthis get
	ret
l333:
	push "null"
	end method
	method buildfullvars
	push "gmobjvec0"
	cthis each
	end method
	method gmobjvec0
	localdef $1
	pop $1
	cthis buildfullname
	end method
	method buildvars
	push "gmobjvec1"
	cthis each
	end method
	method gmobjvec1
	localdef $1
	pop $1
	cthis getname
	cthis addtogamevars
	end method
	method movefrom
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	localint $4
	push $1
	cthis find
	pop $4
	push $4
	push 0
	cmpjae
	cmp0
	je l339
l340:
	push $4
	call lsim,size
	cmpjl
	cmp0
	je l341
	push $4
	call lsim,get
	spushs
	push $2
	push $3
	spop $a
	call [$a],move
	add $4,1
	pop $4
	jmp l340
l341:
l339:
	end method
	method move
	localint $1
	localint $2
	pop $2
	pop $1
	push "move"
	push $1
	push $2
	cthis eval2
	end method
	method setpos
	localint $1
	localint $2
	pop $2
	pop $1
	push "setpos"
	push $1
	push $2
	cthis eval2
	end method
	method show
	push "show"
	cthis eval
	end method
	method hide
	push "hide"
	cthis eval
	end method
	method stop
	localint $1
	pop $1
	push "stop"
	push $1
	cthis eval1
	end method
	method play
	push "play"
	cthis eval
	end method
	method setdelay
	localint $1
	pop $1
	push "setdelay"
	push $1
	cthis eval1
	end method
	method isplaying
	localint $1
	push 0
	pop $1
l342:
	push $1
	cthis size
	cmpjl
	cmp0
	je l343
	jmp l345
l344:
	add $1,1
	pop $1
	jmp l342
l345:
	push $1
	cthis get
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],isplaying
	cmp0
	je l347
	push 1
	ret
l347:
	jmp l344
l343:
	push 0
	end method
	method graddmethod
	localstring $1
	localstring $2
	pop $2
	pop $1
	push "addmethod"
	push $1
	push $2
	cthis eval2
	end method
	method getimg
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	localint $5
	call lsim,size
	push 1
	pop $b
	popax
	sub $a,$b
	pop $5
l348:
	push $5
	push 0
	cmpjae
	cmp0
	je l349
	jmp l351
l350:
	sub $5,1
	pop $5
	jmp l348
l351:
	push $5
	call lsim,get
	spushs
	push $1
	push $2
	push $3
	push $4
	spop $a
	call [$a],isin
	cmp0
	je l353
	push $5
	call lsim,get
	ret
l353:
	jmp l350
l349:
	push "null"
	ret
	end method
	method isin
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	localint $5
	call lsim,size
	push 1
	pop $b
	popax
	sub $a,$b
	pop $5
l354:
	push $5
	push 0
	cmpjae
	cmp0
	je l355
	jmp l357
l356:
	sub $5,1
	pop $5
	jmp l354
l357:
	push $5
	call lsim,get
	spushs
	push $1
	push $2
	push $3
	push $4
	spop $a
	call [$a],isin
	cmp0
	je l359
	push $5
	push 1
	pop $b
	popax
	add $a,$b
	ret
l359:
	jmp l356
l355:
	push 0
	ret
	end method
	method setframe
	localdef $1
	localint $2
	pop $2
	pop $1
	push "setframe"
	push $1
	push $2
	cthis eval2
	end method
	method setz
	localint $1
	pop $1
	push "setz"
	push $1
	cthis eval1
	end method
	method eval
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l360:
	push $2
	call lsim,size
	cmpjl
	cmp0
	je l361
	jmp l363
l362:
	add $2,1
	pop $2
	jmp l360
l363:
	push $2
	call lsim,get
	spushs
	push $1
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	jmp l362
l361:
	end method
	method eval1
	localstring $1
	localdef $2
	pop $2
	pop $1
	localint $3
	push 0
	pop $3
l364:
	push $3
	call lsim,size
	cmpjl
	cmp0
	je l365
	jmp l367
l366:
	add $3,1
	pop $3
	jmp l364
l367:
	push $3
	call lsim,get
	spushs
	push $1
	spushs
	push $2
	spop $d
	spop $a
	call [$a],[$d]
	jmp l366
l365:
	end method
	method eval2
	localstring $1
	localdef $2
	localdef $3
	pop $3
	pop $2
	pop $1
	localint $4
	push 0
	pop $4
l368:
	push $4
	call lsim,size
	cmpjl
	cmp0
	je l369
	jmp l371
l370:
	add $4,1
	pop $4
	jmp l368
l371:
	push $4
	call lsim,get
	spushs
	push $1
	spushs
	push $2
	push $3
	spop $d
	spop $a
	call [$a],[$d]
	jmp l370
l369:
	end method
	method eval3
	localstring $1
	localdef $2
	localdef $3
	localdef $4
	pop $4
	pop $3
	pop $2
	pop $1
	localint $5
	push 0
	pop $5
l372:
	push $5
	call lsim,size
	cmpjl
	cmp0
	je l373
	jmp l375
l374:
	add $5,1
	pop $5
	jmp l372
l375:
	push $5
	call lsim,get
	spushs
	push $1
	spushs
	push $2
	push $3
	push $4
	spop $d
	spop $a
	call [$a],[$d]
	jmp l374
l373:
	end method
	method _find
	localstring $1
	localdef $2
	pop $2
	pop $1
	localint $3
	push 0
	pop $3
l376:
	push $3
	cthis size
	cmpjl
	cmp0
	je l377
	jmp l379
l378:
	add $3,1
	pop $3
	jmp l376
l379:
	push $3
	cthis get
	spushs
	push $1
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	push $2
	cmpje
	cmp0
	je l381
	push $3
	ret
l381:
	jmp l378
l377:
	push 1
	popax
	sub 0,$a
	end method
	method _find1
	localstring $1
	localdef $2
	pop $2
	pop $1
	localint $3
	push 0
	pop $3
l382:
	push $3
	cthis size
	cmpjl
	cmp0
	je l383
	jmp l385
l384:
	add $3,1
	pop $3
	jmp l382
l385:
	push $3
	cthis get
	spushs
	push $1
	spushs
	push $2
	spop $d
	spop $a
	call [$a],[$d]
	cmp0
	je l387
	push $3
	ret
l387:
	jmp l384
l383:
	push 1
	popax
	sub 0,$a
	end method
	method each
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l388:
	push $2
	cthis size
	cmpjl
	cmp0
	je l389
	jmp l391
l390:
	add $2,1
	pop $2
	jmp l388
l391:
	push $2
	cthis get
	spushs
	push $1
	spushs
	push $2
	spop $d
	spop $a
	call [$a],[$d]
	jmp l390
l389:
	end method
	method each1
	localstring $1
	localdef $2
	pop $2
	pop $1
	localint $3
	push 0
	pop $3
l392:
	push $3
	cthis size
	cmpjl
	cmp0
	je l393
	jmp l395
l394:
	add $3,1
	pop $3
	jmp l392
l395:
	push $3
	cthis get
	spushs
	push $1
	spushs
	push $3
	push $2
	spop $d
	spop $a
	call [$a],[$d]
	jmp l394
l393:
	end method
	method each2
	localstring $1
	localdef $2
	localdef $3
	pop $3
	pop $2
	pop $1
	localint $4
	push 0
	pop $4
l396:
	push $4
	cthis size
	cmpjl
	cmp0
	je l397
	jmp l399
l398:
	add $4,1
	pop $4
	jmp l396
l399:
	push $4
	cthis get
	spushs
	push $1
	spushs
	push $4
	push $2
	push $3
	spop $d
	spop $a
	call [$a],[$d]
	jmp l398
l397:
	end method
	method ineach
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l400:
	push $2
	cthis size
	cmpjl
	cmp0
	je l401
	jmp l403
l402:
	add $2,1
	pop $2
	jmp l400
l403:
	push $2
	cthis get
	spushs
	push $1
	spushs
	push $2
	spop $d
	spop $a
	call [$a],[$d]
	neg
	cmp0
	je l405
	push 0
	ret
l405:
	jmp l402
l401:
	push 1
	end method
	method find_closest
	localstring $1
	localstring $2
	pop $2
	pop $1
	cthis empty
	cmp0
	je l407
	ret
l407:
	localint $3
	push 0
	pop $3
	localreal $4
	localreal $5
	push 0
	cthis get
	spushs
	push $2
	spushs
	push $1
	spop $d
	spop $a
	call [$a],[$d]
	pop $5
	localint $6
	push 1
	pop $6
l408:
	push $6
	cthis size
	cmpjl
	cmp0
	je l409
	jmp l411
l410:
	add $6,1
	pop $6
	jmp l408
l411:
	push $6
	cthis get
	spushs
	push $2
	spushs
	push $1
	spop $d
	spop $a
	call [$a],[$d]
	pop $4
	push $4
	push $5
	cmpjl
	cmp0
	je l413
	push $6
	pop $3
	push $5
	pop $4
l413:
	jmp l410
l409:
	push $3
	end method
	method sortimgsfun
	localstring $1
	pop $1
	push $1
	call lsim,vecsort
	end method
	method sortimgs
	push "_scmpimg1"
	call lsim,vecsort
	end method
	method _scmpimg1
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getz
	push $2
	spushs
	spop $a
	call [$a],getz
	cmpjl
	cmp0
	jne l415
	push $1
	spushs
	spop $a
	call [$a],getz
	push $2
	spushs
	spop $a
	call [$a],getz
	cmpje
	cmp0
	je l416
	push $1
	spushs
	spop $a
	call [$a],getidobj
	push $2
	spushs
	spop $a
	call [$a],getidobj
	cmpjl
	jmp l418
l416:
	push 0
	jmp l418
l417:
	push 1
l418:
	jmp l419
l414:
	push 0
	jmp l419
l415:
	push 1
l419:
	end method
	end class

	class gmimgvec
	parent gmobjvec
	method init
	clparent gmobjvec,init
	new int,_ix
	push 0
	pop _ix
	new int,_iy
	push 0
	pop _iy
	new int,_iz
	push 0
	pop _iz
	new int,_ifound
	push 1
	popax
	sub 0,$a
	pop _ifound
	new string,sanload
	push "null"
	pop sanload
	end method
	method _setpos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	pop _iy
	pop _ix
	end method
	method lodx
	push 0
	end method
	method lody
	push 0
	end method
	method getposx
	push _ix
	end method
	method getposy
	push _iy
	end method
	method getpos
	push _ix
	push _iy
	ret
	end method
	method getpx
	push _ix
	end method
	method getpy
	push _iy
	end method
	method getw
	cthis getex
	cthis getpx
	pop $b
	popax
	sub $a,$b
	end method
	method geth
	cthis getey
	cthis getpy
	pop $b
	popax
	sub $a,$b
	end method
	method getcx
	cthis getpx
	cthis getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	end method
	method getcy
	cthis getpy
	cthis geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	end method
	method getz
	push _iz
	end method
	method getex
	localint $1
	cthis size
	pop $1
	push $1
	push 0
	cmpjle
	cmp0
	je l421
	push _ix
	ret
l421:
	localint $2
	push 0
	cthis get
	spushs
	spop $a
	call [$a],getex
	pop $2
	localint $3
	localint $4
	push 1
	pop $4
l422:
	push $4
	push $1
	cmpjl
	cmp0
	je l423
	jmp l425
l424:
	add $4,1
	pop $4
	jmp l422
l425:
	push $4
	cthis get
	spushs
	spop $a
	call [$a],getex
	pop $3
	push $3
	push $2
	cmpja
	cmp0
	je l427
	push $3
	pop $2
l427:
	jmp l424
l423:
	push $2
	end method
	method getey
	localint $1
	cthis size
	pop $1
	push $1
	push 0
	cmpjle
	cmp0
	je l429
	push _iy
	ret
l429:
	localint $2
	push 0
	cthis get
	spushs
	spop $a
	call [$a],getey
	pop $2
	localint $3
	localint $4
	push 1
	pop $4
l430:
	push $4
	push $1
	cmpjl
	cmp0
	je l431
	jmp l433
l432:
	add $4,1
	pop $4
	jmp l430
l433:
	push $4
	cthis get
	spushs
	spop $a
	call [$a],getey
	pop $3
	push $3
	push $2
	cmpja
	cmp0
	je l435
	push $3
	pop $2
l435:
	jmp l432
l431:
	push $2
	end method
	method _getpx
	localint $1
	cthis size
	pop $1
	push $1
	push 0
	cmpjle
	cmp0
	je l437
	push _ix
	ret
l437:
	localint $2
	push 0
	cthis get
	spushs
	spop $a
	call [$a],getpx
	pop $2
	localint $3
	localint $4
	push 1
	pop $4
l438:
	push $4
	push $1
	cmpjl
	cmp0
	je l439
	jmp l441
l440:
	add $4,1
	pop $4
	jmp l438
l441:
	push $4
	cthis get
	spushs
	spop $a
	call [$a],getpx
	pop $3
	push $3
	push $2
	cmpjl
	cmp0
	je l443
	push $3
	pop $2
l443:
	jmp l440
l439:
	push $2
	end method
	method _getpy
	localint $1
	cthis size
	pop $1
	push $1
	push 0
	cmpjle
	cmp0
	je l445
	push _iy
	ret
l445:
	localint $2
	push 0
	cthis get
	spushs
	spop $a
	call [$a],getpy
	pop $2
	localint $3
	localint $4
	push 1
	pop $4
l446:
	push $4
	push $1
	cmpjl
	cmp0
	je l447
	jmp l449
l448:
	add $4,1
	pop $4
	jmp l446
l449:
	push $4
	cthis get
	spushs
	spop $a
	call [$a],getpy
	pop $3
	push $3
	push $2
	cmpjl
	cmp0
	je l451
	push $3
	pop $2
l451:
	jmp l448
l447:
	push $2
	end method
	method _getw
	cthis getex
	cthis _getpx
	pop $b
	popax
	sub $a,$b
	end method
	method _geth
	cthis getey
	cthis _getpy
	pop $b
	popax
	sub $a,$b
	end method
	method setz
	localint $1
	pop $1
	push $1
	pop _iz
	push "setz"
	push $1
	cthis eval1
	end method
	method move
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	popax
	add _ix,$a
	pop _ix
	push $2
	popax
	add _iy,$a
	pop _iy
	push "move"
	push $1
	push $2
	cthis eval2
	end method
	method setpos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	pop _ix
	push $2
	pop _iy
	push "setpos"
	push $1
	push $2
	cthis eval2
	end method
	method setpos2
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	pop _ix
	push $2
	pop _iy
	cthis empty
	neg
	cmp0
	je l453
	push 0
	cthis get
	spushs
	spop $a
	call [$a],getpx
	popax
	sub $1,$a
	pop $1
	push 0
	cthis get
	spushs
	spop $a
	call [$a],getpy
	popax
	sub $2,$a
	pop $2
	push $1
	popax
	sub 0,$a
	push $2
	popax
	sub 0,$a
	cthis move
l453:
	end method
	method changeframe
	localint $1
	pop $1
	localstring $2
	localint $3
	push 0
	pop $3
l454:
	push $3
	cthis size
	cmpjl
	cmp0
	je l455
	jmp l457
l456:
	add $3,1
	pop $3
	jmp l454
l457:
	push $3
	cthis get
	pop $2
	push $2
	spushs
	push $2
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	push $1
	spop $a
	call [$a],setframe
	jmp l456
l455:
	end method
	method nplay
	localint $1
	pop $1
	push "play"
	push $1
	cthis eval1
	end method
	method txtreset
	localint $1
	push 0
	pop $1
l458:
	push $1
	cthis size
	cmpjl
	cmp0
	je l459
	jmp l461
l460:
	add $1,1
	pop $1
	jmp l458
l461:
	push $1
	cthis get
	spushs
	push ""
	spop $a
	call [$a],txtset
	jmp l460
l459:
	end method
	method anputgr
	push "anputgr"
	cthis eval
	end method
	method anputy
	localint $1
	pop $1
	push "anputy"
	push ipos
	cthis eval1
	end method
	method isin
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	localint $5
	call lsim,size
	push 1
	pop $b
	popax
	sub $a,$b
	pop $5
l462:
	push $5
	push 0
	cmpjae
	cmp0
	je l463
	jmp l465
l464:
	sub $5,1
	pop $5
	jmp l462
l465:
	push $5
	call lsim,get
	spushs
	push $1
	push $2
	push $3
	push $4
	spop $a
	call [$a],isin
	cmp0
	je l467
	push $5
	pop _ifound
	push $5
	push 1
	pop $b
	popax
	add $a,$b
	ret
l467:
	jmp l464
l463:
	push 1
	popax
	sub 0,$a
	pop _ifound
	push 0
	end method
	method isinfunc
	localint $1
	localint $2
	localstring $3
	pop $3
	pop $2
	pop $1
	localint $4
	call lsim,size
	push 1
	pop $b
	popax
	sub $a,$b
	pop $4
l468:
	push $4
	push 0
	cmpjae
	cmp0
	je l469
	jmp l471
l470:
	sub $4,1
	pop $4
	jmp l468
l471:
	push $4
	call lsim,get
	spushs
	push $3
	spushs
	push $1
	push $2
	spop $d
	spop $a
	call [$a],[$d]
	cmp0
	je l473
	push $4
	pop _ifound
	push $4
	push 1
	pop $b
	popax
	add $a,$b
	ret
l473:
	jmp l470
l469:
	push 1
	popax
	sub 0,$a
	pop _ifound
	push 0
	end method
	method isincut
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	localint $5
	call lsim,size
	push 1
	pop $b
	popax
	sub $a,$b
	pop $5
l474:
	push $5
	push 0
	cmpjae
	cmp0
	je l475
	jmp l477
l476:
	sub $5,1
	pop $5
	jmp l474
l477:
	push $5
	call lsim,get
	spushs
	push $1
	push $2
	spop $a
	call [$a],withincut
	cmp0
	je l479
	push $5
	call lsim,get
	spushs
	push $1
	push $2
	push $3
	push $4
	spop $a
	call [$a],isin
	jmp l481
l479:
	push 0
	jmp l481
l480:
	push 1
l481:
	cmp0
	je l482
	push $5
	pop _ifound
	push $5
	push 1
	pop $b
	popax
	add $a,$b
	ret
l482:
	jmp l476
l475:
	push 1
	popax
	sub 0,$a
	pop _ifound
	push 0
	end method
	method withincut
	localint $1
	localint $2
	pop $2
	pop $1
	push $2
	push $1
	push "gmimgvec0"
	cthis ineach
	pop $1
	pop $2
	end method
	method gmimgvec0
	localdef $1
	pop $1
	localint $2
	pop $2
	localint $3
	pop $3
	push $2
	push $3
	cthis withincut
	push $3
	push $2
	end method
	method findif
	localstring $1
	pop $1
	push $1
	push 1
	cthis _find
	end method
	method getfound
	push _ifound
	end method
	method getsfound
	push _ifound
	cthis get
	end method
	method findfr
	localint $1
	pop $1
	push "framenr"
	push $1
	cthis _find
	end method
	method findsfr
	localstring $1
	pop $1
	push "framename"
	push $1
	cthis _find
	end method
	method findac
	localint $1
	pop $1
	push "anactnr"
	push $1
	cthis _find
	end method
	method findsac
	localstring $1
	pop $1
	push "actionname"
	push $1
	cthis _find
	end method
	method nearest_to
	localstring $1
	pop $1
	push $1
	push "gmimgvec1"
	cthis find_closest
	end method
	method gmimgvec1
	localstring $1
	pop $1
	cthis getname
	push $1
	call cllen,ilen5
	end method
	method getsac
	localstring $1
	pop $1
	push $1
	cthis findsac
	cthis get
	end method
	method getsacfr
	localstring $1
	localint $2
	pop $2
	pop $1
	localint $3
	push 0
	pop $3
l483:
	push $3
	cthis size
	cmpjl
	cmp0
	je l484
	jmp l486
l485:
	add $3,1
	pop $3
	jmp l483
l486:
	push $3
	cthis get
	spushs
	spop $a
	call [$a],actionname
	push $1
	cmpje
	cmp0
	je l488
	push $3
	cthis get
	spushs
	spop $a
	call [$a],framenr
	push $2
	cmpje
	jmp l490
l488:
	push 0
	jmp l490
l489:
	push 1
l490:
	cmp0
	je l491
	push $3
	cthis get
	ret
l491:
	jmp l485
l484:
	push "null"
	end method
	method blitto
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l492:
	push $2
	cthis size
	cmpjl
	cmp0
	je l493
	jmp l495
l494:
	add $2,1
	pop $2
	jmp l492
l495:
	push $1
	spushs
	push $2
	cthis get
	spop $a
	call [$a],blit
	jmp l494
l493:
	end method
	method sortz
	localint $1
	pop $1
	localint $2
	push 0
	pop $2
l496:
	push $2
	cthis size
	cmpjl
	cmp0
	je l497
	jmp l499
l498:
	add $2,1
	pop $2
	jmp l496
l499:
	push $2
	cthis get
	spushs
	push $1
	push $2
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setz
	jmp l498
l497:
	end method
	method ancopies
	localstring $1
	localint $2
	pop $2
	pop $1
	localint $3
	push 0
	pop $3
l500:
	push $3
	push $2
	cmpjl
	cmp0
	je l501
	jmp l503
l502:
	add $3,1
	pop $3
	jmp l500
l503:
	push GAME
	spushs
	push $1
	push $1
	push "_"
	pop $b
	popax
	add $a,$b
	push $3
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],copyanima
	push $1
	push "_"
	pop $b
	popax
	add $a,$b
	push $3
	pop $b
	popax
	add $a,$b
	cthis add
	jmp l502
l501:
	end method
	method loadallan
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	localstring $4
	call gameapi,getgamename
	pop $4
	push $4
	spushs
	push $1
	push $2
	push $3
	spop $a
	call [$a],newanima
	push $4
	spushs
	push $1
	push $1
	cthis getname
	spop $a
	call [$a],newanfrbyactgr
	popax
	push $1
	spushs
	spop $a
	call [$a],hide
	end method
	method addsrcanima
	localstring $1
	pop $1
	push "srcanima"
	push $1
	cthis var2
	end method
	method operator*
	localstring $1
	pop $1
	localstring $2
	call gameapi,getgamename
	pop $2
	localstring $3
	push ".pyz"
	call $1,contains
	cmp0
	je l505
	push 0
	push 1
	call $1,getb
	push "$"
	cmpje
	cmp0
	je l507
	new vector,_vtmp
	push "string"
	call _vtmp,type
	push $1
	push "/"
	call _vtmp,vecbuildfromstring
	push "an"
	call _vtmp,last
	spushs
	push ".pyz"
	spop $h
	call $h,strsubes
	pop $b
	popax
	add $a,$b
	pop $3
	delete _vtmp
	jmp l506
l507:
	push "an"
	push ".pyz"
	call $1,strsubes
	pop $b
	popax
	add $a,$b
	pop $3
l506:
	push $2
	spushs
	push $3
	push $1
	push 0
	spop $a
	call [$a],newanima
	jmp l504
l505:
	push $1
	pop $3
l504:
	push $3
	pop sanload
	push $2
	spushs
	push $3
	push $3
	cthis getname
	spop $a
	call [$a],newanactionsgr
	popax
	push $3
	spushs
	spop $a
	call [$a],hide
	push $3
	cthis addsrcanima
	end method
	method operator<
	localstring $1
	pop $1
	localstring $2
	call gameapi,getgamename
	pop $2
	localstring $3
	push ".pyz"
	call $1,contains
	cmp0
	je l509
	push "an"
	push ".pyz"
	call $1,strsubes
	pop $b
	popax
	add $a,$b
	pop $3
	push $2
	spushs
	push $3
	push $1
	push 0
	spop $a
	call [$a],newanima
	jmp l508
l509:
	push $1
	pop $3
l508:
	push $3
	pop sanload
	push $2
	spushs
	push $3
	push $3
	cthis getname
	spop $a
	call [$a],newanfrbyactgr
	popax
	push $3
	spushs
	spop $a
	call [$a],hide
	push $3
	cthis addsrcanima
	end method
	method deleteloaded
	cthis deleteallgm
	push sanload
	push "null"
	cmpjne
	cmp0
	je l511
	call gameapi,getgamename
	spushs
	push sanload
	spop $a
	call [$a],vardel
l511:
	end method
	method deleteinit
	localdef $1
	call gameapi,getgamename
	pop $1
	localint $2
	push 0
	pop $2
l512:
	push $2
	cthis size
	cmpjl
	cmp0
	je l513
	jmp l515
l514:
	add $2,1
	pop $2
	jmp l512
l515:
	localdef $3
	push $2
	cthis get
	pop $3
	push $3
	spushs
	spop $a
	call [$a],gettype
	push "gmimgvec"
	cmpje
	cmp0
	je l517
	push $3
	spushs
	spop $a
	call [$a],deleteinit
l517:
	push $1
	spushs
	push $3
	spop $a
	call [$a],vardel
	jmp l514
l513:
	push sanload
	push "null"
	cmpjne
	cmp0
	je l519
	call gameapi,getgamename
	spushs
	push sanload
	spop $a
	call [$a],vardel
l519:
	end method
	end class

	class gmadvvec
	parent gmimgvec
	method init
	clparent gmimgvec,init
	end method
	method butisin
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	localint $5
	call lsim,size
	push 1
	pop $b
	popax
	sub $a,$b
	pop $5
l520:
	push $5
	push 0
	cmpjae
	cmp0
	je l521
	jmp l523
l522:
	sub $5,1
	pop $5
	jmp l520
l523:
	push $5
	call lsim,get
	spushs
	push $1
	push $2
	push $3
	push $4
	spop $a
	call [$a],butisin
	cmp0
	je l525
	push $5
	pop _ifound
	push $5
	push 1
	pop $b
	popax
	add $a,$b
	ret
l525:
	jmp l522
l521:
	push 1
	popax
	sub 0,$a
	pop _ifound
	push 0
	end method
	end class

	class gmmaskvec
	parent gmadvvec
	method init
	clparent gmadvvec,init
	end method
	method butisin
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push $4
	clparent gmimgvec,butisin
	end method
	end class

	class Subtitle
	method init
	localstring $1
	localint $2
	pop $2
	pop $1
	localreal $3
	push 0.5
	pop $3
	new int,col0
	new int,col1
	new int,col2
	push 255
	push 255
	push 255
	cthis setcolor
	localstring $4
	push SNDPATH
	pop $4
	new string,ssubpos
	push "sgmsubtitlespos:"
	call dbconf,dbget
	pop ssubpos
	push ssubpos
	push "null"
	cmpje
	cmp0
	je l527
	push "down"
	pop ssubpos
l527:
	localdef $5
	push "sgmsubtitlespos:"
	push 2
	call dbconf,dbgets
	pop $5
	new int,isubpos
	push $5
	push "null"
	cmpjne
	cmp0
	je l529
	push $5
	jmp l528
l529:
	push 15
l528:
	pop isubpos
	new int,bshadow
	push "igmsubshadow:"
	call dbconf,dbgetint
	pop bshadow
	new int,bblackbg
	push "igmsubblackbg:"
	call dbconf,dbgetint
	pop bblackbg
	new int,iborx
	push $2
	pop iborx
	new int,ifontsize
	call fntsubtitle,getsize
	pop ifontsize
	new db,dbl
	push LANGDIR
	push $1
	pop $b
	popax
	add $a,$b
	call dbl,load
	localint $6
	push 0
	pop $6
	localstring $5
l530:
	push $6
	call dbl,getrowsno
	cmpjl
	cmp0
	je l531
	push $6
	call dbl,getcolsno
	push 2
	cmpjl
	cmp0
	jne l534
	push $6
	push 0
	call dbl,get
	spushs
	push 0
	push 1
	spop $h
	call $h,getb
	push "#"
	cmpje
	jmp l535
l533:
	push 0
	jmp l535
l534:
	push 1
l535:
	cmp0
	je l536
	push $6
	call dbl,removerow
	jmp l532
l536:
	add $6,1
	pop $6
l532:
	jmp l530
l531:
	localstring $7
	new vector,v1
	push "string"
	call v1,type
	localint $8
	push iResX
	push 2
	push $2
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	sub $a,$b
	push $3
	push ifontsize
	pop $b
	popax
	mul $a,$b
	push 1
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	div $a,$b
	psax
	pop $8
	localint $9
	localint $10
	localint $11
	push 0
	pop $11
	localint $6
	push 0
	pop $6
l537:
	push $6
	call dbl,getrowsno
	cmpjl
	cmp0
	je l538
	jmp l540
l539:
	add $6,1
	pop $6
	jmp l537
l540:
	push $4
	push $6
	push 0
	call dbl,get
	pop $b
	popax
	add $a,$b
	push ".wav"
	pop $b
	popax
	add $a,$b
	pop $5
	push $5
	call engine,fileexist
	neg
	cmp0
	je l542
	push $4
	push $6
	push 0
	call dbl,get
	pop $b
	popax
	add $a,$b
	push ".ogg"
	pop $b
	popax
	add $a,$b
	pop $5
l542:
	push $6
	push 0
	push $5
	call dbl,set
	push $6
	push 1
	call dbl,get
	pop $5
	push $5
	push " "
	call v1,vecbuildfromstring
	push ""
	pop $7
	push 1
	pop $9
	push 0
	pop $10
l543:
	push $10
	call v1,size
	cmpjl
	cmp0
	je l544
	jmp l546
l545:
	add $10,1
	pop $10
	jmp l543
l546:
	call $7,length
	push $10
	call v1,get
	spushs
	spop $h
	call $h,length
	pop $b
	popax
	add $a,$b
	push 1
	pop $b
	popax
	add $a,$b
	push $8
	cmpjle
	cmp0
	je l548
	push " "
	push $10
	call v1,get
	pop $b
	popax
	add $a,$b
	popax
	add $7,$a
	pop $7
	jmp l547
l548:
	push $9
	push 1
	cmpje
	cmp0
	je l550
	push $6
	push $9
	push $7
	call dbl,set
	jmp l549
l550:
	push $6
	push $7
	call dbl,add
l549:
	push $10
	call v1,get
	pop $7
	add $9,1
	pop $9
l547:
	jmp l545
l544:
	push $9
	push 1
	cmpje
	cmp0
	je l552
	push $6
	push $9
	push $7
	call dbl,set
	jmp l551
l552:
	push $6
	push $7
	call dbl,add
l551:
	push $9
	push $11
	cmpja
	cmp0
	je l554
	push $9
	pop $11
l554:
	jmp l539
l538:
	new gmimgvec,grtxt
	new gmimgvec,grtxts
	localint $6
	push 0
	pop $6
l555:
	push $6
	push $11
	cmpjl
	cmp0
	je l556
	jmp l558
l557:
	add $6,1
	pop $6
	jmp l555
l558:
	push "txt"
	push $6
	pop $b
	popax
	add $a,$b
	pop $5
	push bshadow
	cmp0
	je l560
	push "txts"
	push $6
	pop $b
	popax
	add $a,$b
	pop $7
	push $7
	push ""
	push "fntsubtitle"
	cthis black
	clparent classgame,newtext
	push $7
	call grtxts,add
	jmp l559
l560:
	push bblackbg
	cmp0
	je l562
	push "imgs"
	push $6
	pop $b
	popax
	add $a,$b
	pop $7
	push $7
	spushs
	spop $e
	new img,[$e]
	push $7
	call grtxts,add
l562:
l559:
	push $5
	push ""
	push "fntsubtitle"
	cthis getcolor
	clparent classgame,newtext
	push $5
	call grtxt,add
	jmp l557
l556:
	new db,dbsnd
	new timer,timtxt
	push 1
	call timtxt,settick
	push 1
	call timtxt,setcycle
	push "onfinish"
	push "Subtitle0"
	call timtxt,addmethod
	push 12000
	cthis setz
	end method
	method Subtitle0
	cthis cisplaying
	neg
	cmp0
	je l564
	cthis hidesubs
	jmp l563
l564:
	cthis play
l563:
	end method
	method geth
	call grtxts,size
	cmp0
	je l566
	call grtxts,first
	spushs
	spop $a
	call [$a],geth
	jmp l565
l566:
	call grtxt,size
	cmp0
	je l568
	call grtxt,last
	spushs
	spop $a
	call [$a],geth
	jmp l567
l568:
	push 0
l567:
l565:
	end method
	method reset
	cthis stop
	call dbsnd,free
	end method
	method hidesubs
	call grtxt,hide
	call grtxts,hide
	end method
	method setz
	localint $1
	pop $1
	push $1
	call grtxt,setz
	push $1
	push 1
	pop $b
	popax
	sub $a,$b
	call grtxts,setz
	end method
	method stop
	cthis hidesubs
	push 0
	call timtxt,stop
	end method
	method register
	localstring $1
	localstring $2
	pop $2
	pop $1
	localdef $3
	push $2
	call dbl,findbyrow
	pop $3
	push $3
	push 0
	cmpjae
	cmp0
	je l570
	localdef $4
	push $1
	call dbsnd,findbyrow
	pop $4
	push $4
	push 0
	cmpjae
	cmp0
	je l572
	push $4
	push 1
	push $3
	call dbsnd,set
	jmp l571
l572:
	localdef $4
	call dbsnd,addrow
	push 1
	pop $b
	popax
	sub $a,$b
	pop $4
	push $4
	push $1
	call dbsnd,add
	push $4
	push $3
	call dbsnd,add
l571:
l570:
	end method
	method getiddialog
	localstring $1
	pop $1
	push $1
	call dbsnd,findbyrow
	end method
	method play
	localstring $1
	pop $1
	cthis stop
	localdef $2
	push $1
	call dbsnd,findbyrow
	pop $2
	push $2
	push 0
	cmpjae
	cmp0
	je l574
	localint $3
	push 0
	pop $3
	push $2
	push 1
	call dbsnd,get
	pop $2
	localdef $4
	push $2
	call dbl,getcolsno
	push 1
	pop $b
	popax
	sub $a,$b
	pop $4
	localstring $5
	localstring $6
	localint $7
	localint $8
	push 0
	push 0
	call grtxt,setpos
	localint $8
	push 2
	pop $8
	localint $9
	push 0
	pop $9
l575:
	push $9
	push $4
	cmpjl
	cmp0
	je l576
	jmp l578
l577:
	add $9,1
	pop $9
	jmp l575
l578:
	push $9
	call grtxt,get
	pop $5
	push $5
	spushs
	push $2
	push $9
	push 1
	pop $b
	popax
	add $a,$b
	call dbl,get
	spop $a
	call [$a],txtset
	push $5
	spushs
	spop $a
	call [$a],get
	spushs
	spop $h
	call $h,length
	popax
	add $3,$a
	pop $3
	push $5
	spushs
	push iResX
	push $5
	spushs
	spop $a
	call [$a],getw
	pop $b
	popax
	sub $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push igmoffsetx
	pop $b
	popax
	add $a,$b
	push $9
	push ifontsize
	pop $b
	popax
	mul $a,$b
	push $8
	pop $b
	popax
	add $a,$b
	push igmoffsety
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	push $5
	spushs
	spop $a
	call [$a],show
	push bshadow
	cmp0
	je l580
	push $9
	call grtxt,get
	pop $6
	push $6
	spushs
	push $5
	spushs
	spop $a
	call [$a],get
	spop $a
	call [$a],txtset
	push $6
	spushs
	push $5
	spushs
	spop $a
	call [$a],getpx
	push 1
	pop $b
	popax
	add $a,$b
	push $5
	spushs
	spop $a
	call [$a],getpy
	push 1
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	push $6
	spushs
	spop $a
	call [$a],show
l580:
	jmp l577
l576:
	push bblackbg
	cmp0
	je l582
	call grtxt,first
	pop $5
	call grtxts,first
	pop $6
	push ssubpos
	push "up"
	cmpje
	cmp0
	je l584
	push $6
	spushs
	push iResX
	push $4
	push 1
	pop $b
	popax
	sub $a,$b
	call grtxt,get
	spushs
	spop $a
	call [$a],getey
	cthis black
	push bblackbg
	spop $a
	call [$a],create
	push $6
	spushs
	push igmoffsetx
	push igmoffsety
	spop $a
	call [$a],setpos
	jmp l583
l584:
	push $6
	spushs
	push iResX
	push $4
	push 1
	pop $b
	popax
	sub $a,$b
	call grtxt,get
	spushs
	spop $a
	call [$a],getey
	push $5
	spushs
	spop $a
	call [$a],getpy
	pop $b
	popax
	sub $a,$b
	cthis black
	push bblackbg
	spop $a
	call [$a],create
	push $6
	spushs
	push igmoffsetx
	push $5
	spushs
	spop $a
	call [$a],getpy
	push igmoffsety
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
l583:
	push $6
	spushs
	push $5
	spushs
	spop $a
	call [$a],getz
	push 1
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setz
	push $6
	spushs
	spop $a
	call [$a],show
l582:
	push ssubpos
	push "up"
	cmpje
	cmp0
	je l586
	push 0
	pop $8
	jmp l585
l586:
	push iResY
	push $4
	push ifontsize
	push $8
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	sub $a,$b
	push isubpos
	pop $b
	popax
	sub $a,$b
	pop $8
	push 0
	push $8
	call grtxt,move
	push bshadow
	cmp0
	jne l589
	push bblackbg
	jmp l590
l588:
	push 0
	jmp l590
l589:
	push 1
l590:
	cmp0
	je l591
	push 0
	push $8
	call grtxts,move
l591:
l585:
	call timtxt,play
	push $3
	jmp l573
l574:
	push 0
l573:
	end method
	method setcolor
	localint $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	pop col0
	push $2
	pop col1
	push $3
	pop col2
	end method
	method getcolor
	push col0
	push col1
	push col2
	ret
	end method
	end class

	new int,igmsubtitle
	push "igmsubtitle:"
	call dbconf,dbgetint
	pop igmsubtitle
	new int,igmlektor
	push "igmlektor:"
	call dbconf,dbgetint
	pop igmlektor
	new int,igmchardelay
	push "igmchardelay:"
	call dbconf,dbgetint
	pop igmchardelay
	push igmsubtitle
	cmp0
	je l593
	localstring $1
	push "subtitles_font:"
	call dbconf,dbget
	pop $1
	push $1
	push "null"
	cmpje
	cmp0
	je l595
	push sgmfontbold
	pop $1
l595:
	localint $2
	push "subtitles_fontsize:"
	call dbconf,dbgetint
	pop $2
	push $2
	push 0
	cmpjle
	cmp0
	je l597
	push 20
	pop $2
l597:
	new font,fntsubtitle
	push $1
	push $2
	call fntsubtitle,load
	push "subtitles_src:"
	call dbconf,dbget
	push 50
	new Subtitle,subtitle
l593:
	class classsound
	method init
	new string,_csplay
	push "null"
	pop _csplay
	new timer,timlektor
	call timlektor,classsound0
	push "setsndfin"
	push "classsound1"
	call timlektor,addmethod
	push "onfinish"
	push "classsound2"
	call timlektor,addmethod
	push igmsubtitle
	cmp0
	je l603
	call subtitle,reset
l603:
	end method
	method classsound0
	new int,bsndfin
	push 1
	pop bsndfin
	end method
	method classsound1
	localint $1
	pop $1
	push $1
	pop bsndfin
	end method
	method classsound2
	push bsndfin
	cmp0
	je l599
	push _csplay
	push "null"
	cmpjne
	cmp0
	je l601
	push _csplay
	spushs
	spop $a
	call [$a],onfinish
l601:
	jmp l598
l599:
	push 1
	pop bsndfin
l598:
	end method
	method creset
	push "null"
	pop _csplay
	end method
	method cgetactsnd
	push _csplay
	end method
	method cisactsnd
	localstring $1
	pop $1
	push $1
	push _csplay
	cmpje
	end method
	method crselfplay
	localstring $1
	pop $1
	cthis cisplaying
	neg
	cmp0
	je l605
	push $1
	cthis cbplay
	jmp l604
l605:
	cthis cgetactsnd
	push $1
	cmpjne
	cmp0
	je l607
	push $1
	cthis cbplay
l607:
l604:
	end method
	method cbselfplay
	localstring $1
	pop $1
	cthis cisplaying
	neg
	cmp0
	jne l610
	cthis cgetactsnd
	push $1
	cmpjne
	jmp l611
l609:
	push 0
	jmp l611
l610:
	push 1
l611:
	cmp0
	je l612
	push $1
	cthis cbplay
l612:
	end method
	method cbplay
	localstring $1
	pop $1
	cthis cisplaying
	cmp0
	je l614
	push 1
	cthis csplaystop
l614:
	push $1
	cthis cbsplay
	end method
	method cbsplay
	localstring $1
	pop $1
	push $1
	pop _csplay
	push $1
	push "null"
	cmpjne
	cmp0
	je l616
	push $1
	cthis csubplay
l616:
	end method
	method cbplayfin
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	push "onfinish"
	push $2
	spop $a
	call [$a],addmethod
	push $1
	cthis cbplay
	end method
	method cbplay2
	localstring $1
	pop $1
	cthis cisplaying
	cmp0
	je l618
	push 0
	cthis csplaystop
l618:
	push $1
	cthis cbsplay
	end method
	method crplay
	localstring $1
	pop $1
	cthis cisplaying
	neg
	cmp0
	je l620
	push $1
	cthis cbsplay
l620:
	end method
	method cbplayif
	localstring $1
	pop $1
	cthis cisplaying
	cmp0
	je l622
	push $1
	cthis cbplay
l622:
	end method
	method crbgplay
	localstring $1
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l624
	push $1
	spushs
	spop $a
	call [$a],isplaying
	neg
	jmp l626
l624:
	push 0
	jmp l626
l625:
	push 1
l626:
	cmp0
	je l627
	push $1
	cthis csubplay
l627:
	end method
	method crandplay
	localstring $1
	localint $2
	localstring $3
	pop $3
	pop $2
	pop $1
	call $2,rand
	push 0
	cmpje
	cmp0
	je l629
	push "c"
	push $3
	pop $b
	popax
	add $a,$b
	push "play"
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	spop $d
	cthis [$d]
l629:
	end method
	method cplayf
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push "c"
	push $1
	pop $b
	popax
	add $a,$b
	push "play"
	pop $b
	popax
	add $a,$b
	spushs
	push $2
	spop $d
	cthis [$d]
	push $2
	spushs
	spop $a
	call [$a],isplaying
	cmp0
	je l631
	push $3
	push "null"
	cmpjne
	jmp l633
l631:
	push 0
	jmp l633
l632:
	push 1
l633:
	cmp0
	je l634
	push $2
	spushs
	push "onfinish"
	push $3
	spop $a
	call [$a],addmethod
l634:
	end method
	method cactsndstop
	localint $1
	pop $1
	cthis cisplaying
	cmp0
	je l636
	push $1
	cthis csplaystop
l636:
	end method
	method csplaystop
	localint $1
	pop $1
	call timlektor,isplaying
	cmp0
	je l638
	push $1
	call timlektor,setsndfin
	push 1
	call timlektor,stop
	jmp l637
l638:
	push _csplay
	spushs
	push $1
	spop $a
	call [$a],stop
l637:
	end method
	method cstopsnds
	localint $1
	pop $1
	call _csplay,in
	cmp0
	je l640
	cthis cisplaying
	jmp l642
l640:
	push 0
	jmp l642
l641:
	push 1
l642:
	cmp0
	je l643
	push $1
	cthis cactsndstop
l643:
	end method
	method cisplaying
	push _csplay
	push "null"
	cmpjne
	cmp0
	je l645
	call timlektor,isplaying
	cmp0
	jne l647
	push _csplay
	spushs
	spop $a
	call [$a],isplaying
	jmp l648
l646:
	push 0
	jmp l648
l647:
	push 1
l648:
	jmp l644
l645:
	push 0
l644:
	end method
	method csubplay
	localstring $1
	pop $1
	push igmsubtitle
	cmp0
	je l650
	localint $2
	push igmlektor
	pop $2
	push $1
	spushs
	spop $a
	call [$a],loaded
	neg
	cmp0
	je l652
	push 0
	pop igmlektor
l652:
	localdef $3
	push $1
	call subtitle,play
	pop $3
	push igmlektor
	cmp0
	jne l655
	push $3
	push 0
	cmpjle
	jmp l656
l654:
	push 0
	jmp l656
l655:
	push 1
l656:
	cmp0
	je l657
	push $1
	spushs
	spop $a
	call [$a],play
	jmp l653
l657:
	push $3
	push igmchardelay
	pop $b
	popax
	mul $a,$b
	call timlektor,setdelay
	call timlektor,play
l653:
	push $2
	pop igmlektor
	jmp l649
l650:
	push $1
	spushs
	spop $a
	call [$a],play
l649:
	end method
	end class

	class classsndbank
	method init
	new int,itype
	new int,ilicz
	push 0
	pop ilicz
	new int,iile
	new string,splay
	push "null"
	pop splay
	new string,ssnd
	push "snd"
	pop ssnd
	end method
	method loadsingle
	localstring $1
	localint $2
	pop $2
	pop $1
	push $2
	push 0
	cmpjle
	cmp0
	je l659
	push 0
	pop iile
	ret
l659:
	push $2
	pop iile
	push 0
	pop itype
	localint $3
	push 0
	pop $3
l660:
	push $3
	push $2
	cmpjl
	cmp0
	je l661
	jmp l663
l662:
	add $3,1
	pop $3
	jmp l660
l663:
	push ssnd
	push $3
	pop $b
	popax
	add $a,$b
	push $1
	clparent newvars,newsnd
	jmp l662
l661:
	end method
	method load
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $3
	push $2
	pop $b
	popax
	sub $a,$b
	push 1
	pop $b
	popax
	add $a,$b
	pop iile
	push iile
	push 0
	cmpjle
	cmp0
	je l665
	push 0
	pop iile
	ret
l665:
	push ssnd
	push 0
	push $1
	push $2
	push $3
	clparent newvars,newsnds
	push $4
	pop itype
	push $5
	push 1
	cmpje
	cmp0
	je l667
	call iile,rand
	pop ilicz
l667:
	end method
	method addmethod
	localstring $1
	localstring $2
	pop $2
	pop $1
	localint $3
	push 0
	pop $3
l668:
	push $3
	push iile
	cmpjl
	cmp0
	je l669
	jmp l671
l670:
	add $3,1
	pop $3
	jmp l668
l671:
	push ssnd
	push $3
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	push $2
	spop $a
	call [$a],addmethod
	jmp l670
l669:
	end method
	method stop
	localint $1
	pop $1
	push splay
	push "null"
	cmpjne
	cmp0
	je l673
	push splay
	spushs
	push $1
	spop $a
	call [$a],stop
l673:
	end method
	method isplaying
	push splay
	push "null"
	cmpjne
	cmp0
	je l675
	push splay
	spushs
	spop $a
	call [$a],isplaying
	jmp l674
l675:
	push 0
l674:
	end method
	method randplay
	localint $1
	pop $1
	call $1,rand
	push 0
	cmpje
	cmp0
	je l677
	cthis play
l677:
	end method
	method playid
	localint $1
	pop $1
	push $1
	push iile
	pop $b
	popax
	div $a,$b
	push $d
	pop ilicz
	cthis play
	end method
	method play
	push 0
	cthis stop
	cthis bgplay
	end method
	method reset
	push 0
	pop ilicz
	end method
	method rbgplay
	cthis isplaying
	neg
	cmp0
	je l679
	cthis bgplay
l679:
	end method
	method rplay
	cthis isplaying
	neg
	cmp0
	je l681
	cthis play
l681:
	end method
	method bgplay
	push ssnd
	push ilicz
	pop $b
	popax
	add $a,$b
	pop splay
	push splay
	spushs
	spop $a
	call [$a],play
	push itype
	push 0
	cmpje
	cmp0
	je l683
	push ilicz
	push 1
	pop $b
	popax
	add $a,$b
	push iile
	pop $b
	popax
	div $a,$b
	push $d
	pop ilicz
	jmp l682
l683:
	push itype
	push 1
	cmpje
	cmp0
	je l685
	call iile,rand
	pop ilicz
l685:
l682:
	end method
	method setvol
	localint $1
	pop $1
	localint $2
	push 0
	pop $2
l686:
	push $2
	push iile
	cmpjl
	cmp0
	je l687
	jmp l689
l688:
	add $2,1
	pop $2
	jmp l686
l689:
	push ssnd
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	spop $a
	call [$a],setvol
	jmp l688
l687:
	end method
	end class

	class SoundSource
	method init
	end method
	method setvol
	localstring $1
	localint $2
	localint $3
	localreal $4
	localreal $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	call $5,abs
	push $4
	cmpjae
	cmp0
	je l691
	push $1
	spushs
	push $3
	spop $a
	call [$a],setvol
	jmp l690
l691:
	push 1.0
	call $5,abs
	push $4
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push $2
	pop $b
	popax
	mul $a,$b
	push $3
	pop $b
	popax
	add $a,$b
	pop $2
	push $2
	push 100
	cmpja
	cmp0
	je l693
	push 100
	pop $2
l693:
	push $1
	spushs
	push $2
	spop $a
	call [$a],setvol
l690:
	end method
	end class

	class classgame
	parent newvars
	parent classsound
	method init
	clparent newvars,init
	clparent classsound,init
	new int,_iconstid
	new gmobjvec,_grsfxs
	end method
	method bkg=
	localdef $1
	pop $1
	push ".pyz"
	call $1,contains
	cmp0
	je l695
	push "anbkg"
	push $1
	push 0
	cthis newanima
	jmp l694
l695:
	push "imgbkg"
	push $1
	push 0
	cthis newimg
l694:
	end method
	method bgr=
	localdef $1
	pop $1
	push $1
	cthis csndbgr
	end method
	method path=
	localdef $1
	pop $1
	push "scripts/"
	push $1
	pop $b
	popax
	add $a,$b
	push "/"
	pop $b
	popax
	add $a,$b
	cthis setgraphpath
	end method
	method cycle=
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push 1
	push 1
	push $2
	cthis cnewtimercyclefin
	end method
	method timer=
	localdef $1
	localdef $2
	localdef $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push $3
	cthis cnewtimerfin
	end method
	method timplay
	localdef $1
	localdef $2
	localdef $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push $3
	cthis cnewtimerfin
	push $1
	spushs
	spop $a
	call [$a],play
	end method
	method _getflags
	localstring $1
	pop $1
	localdef $2
	push 0
	pop $2
	push "L"
	call $1,contains
	cmp0
	je l697
	push "L"
	call $1,strremove
	push 1
	pop $2
l697:
	localdef $3
	push 0
	pop $3
	push "P"
	call $1,contains
	cmp0
	je l699
	push "P"
	call $1,strremove
	push 1
	pop $3
l699:
	localdef $4
	push 0
	pop $4
	push "H"
	call $1,contains
	cmp0
	je l701
	push "H"
	call $1,strremove
	push 1
	pop $4
l701:
	push $1
	push $2
	push $3
	push $4
	ret
	end method
	method img=
	localdef $1
	pop $1
	push $1
	cthis _build_img
	popax
	end method
	method getlangfile
	localstring $1
	pop $1
	localdef $2
	push 4
	call $1,strsube
	push "_"
	pop $b
	popax
	add $a,$b
	push LANG
	pop $b
	popax
	add $a,$b
	push 0
	push 4
	call $1,gete
	pop $b
	popax
	add $a,$b
	pop $2
	push $2
	cthis getpath
	call engine,fileexist
	cmp0
	je l703
	push $2
	jmp l702
l703:
	push $1
l702:
	end method
	method _build_img
	localdef $1
	pop $1
	localdef $2
	localdef $3
	localdef $4
	push $1
	cthis _getflags
	pop $4
	pop $3
	pop $2
	pop $1
	localint $5
	push 0
	pop $5
	push "G"
	call $1,contains
	cmp0
	je l705
	push "G"
	call $1,strremove
	push 1
	pop $5
l705:
	localdef $6
	push 0
	pop $6
	push " "
	call $1,contains
	cmp0
	je l707
	push " "
	call $1,strgetfrom
	pop $6
	push " "
	call $1,strgetto
	pop $1
l707:
	localstring $7
	push "/"
	call $1,contains
	cmp0
	je l709
	new vector,_v_sfile
	push "string"
	call _v_sfile,type
	push $1
	push "/"
	call _v_sfile,vecbuildfromstring
	call _v_sfile,last
	spushs
	push 4
	spop $h
	call $h,strsube
	pop $7
	delete _v_sfile
	jmp l708
l709:
	push 4
	call $1,strsube
	pop $7
l708:
	localstring $8
	push ".pyz"
	call $1,contains
	cmp0
	je l711
	push $5
	cmp0
	je l713
	push "gr"
	push $7
	pop $b
	popax
	add $a,$b
	pop $8
	push $8
	push $1
	cthis getlangfile
	spushs
	push ".pyz"
	spop $h
	call $h,strsubes
	push $6
	cthis newgrimg
	jmp l712
l713:
	push "an"
	push $7
	pop $b
	popax
	add $a,$b
	pop $8
	push $8
	push $1
	cthis getlangfile
	push $6
	cthis newanima
l712:
	jmp l710
l711:
	push "img"
	push $7
	pop $b
	popax
	add $a,$b
	pop $8
	push $8
	push $1
	cthis getlangfile
	push $6
	cthis newimg
l710:
	push $2
	cmp0
	je l715
	push $8
	spushs
	spop $a
	call [$a],anloopfin
l715:
	push $3
	cmp0
	je l717
	push $8
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],play
l717:
	push $4
	cmp0
	je l719
	push $8
	spushs
	spop $a
	call [$a],hide
l719:
	push $8
	end method
	method imgsgr=
	localstring $1
	pop $1
	localstring $2
	push $1
	spushs
	spop $e
	new gmimgvec,[$e]
	localdef $3
	pop $3
l720:
	push A
	push $3
	cmpjne
	cmp0
	je l721
	push $1
	spushs
	push $3
	cthis _build_img
	spop $a
	call [$a],add
	localdef $3
	pop $3
	jmp l720
l721:
	end method
	method imgs=
	push "img="
	cthis withlist
	end method
	method clone
	localstring $1
	pop $1
	call gameapi,getgamename
	spushs
	cthis getname
	cthis gettype
	push $1
	spop $a
	call [$a],classgame0
	end method
	method classgame0
	localdef $1
	localdef $2
	localdef $3
	pop $3
	pop $2
	pop $1
	push $2
	spushs
	push $3
	spushs
	spop $e
	spop $d
	new [$d],[$e]
	push $3
	spushs
	push $1
	spop $a
	call [$a],copy
	end method
	method clones=
	push "clone"
	cthis withlist
	end method
	method list=
	localdef $1
	pop $1
	localdef $2
	pop $2
	push $1
	spushs
	spop $e
	new gmobjvec,[$e]
l722:
	push A
	push $2
	cmpjne
	cmp0
	je l723
	push $1
	spushs
	push $2
	spop $a
	call [$a],addbegin
	pop $2
	jmp l722
l723:
	end method
	method list2=
	localdef $1
	push "gmobjvec"
	cthis newconst
	pop $1
	push $1
	cthis list=
	push $1
	end method
	method debug=
	localdef $1
	pop $1
	push $1
	call engine,setdebugstate
	end method
	method sfx=
	localstring $1
	pop $1
	localint $2
	push "N"
	call $1,contains
	pop $2
	push $2
	cmp0
	je l725
	push "N"
	call $1,strremove
l725:
	localdef $3
	localdef $4
	push $1
	cthis _getflags
	popax
	pop $4
	pop $3
	pop $1
	localdef $5
	push 100
	pop $5
	push " "
	call $1,contains
	cmp0
	je l727
	push " "
	call $1,strgetfrom
	pop $5
	push " "
	call $1,strgetto
	pop $1
l727:
	localstring $6
	push "fx"
	push $1
	pop $b
	popax
	add $a,$b
	pop $6
	push $6
	push $1
	push ".wav"
	pop $b
	popax
	add $a,$b
	cthis newsfx
	push $6
	spushs
	push $5
	spop $a
	call [$a],setvol
	push $3
	cmp0
	je l729
	push $6
	spushs
	push "onfinish"
	push "_stdsndloop"
	spop $a
	call [$a],addmethod
l729:
	push $4
	cmp0
	je l731
	push $6
	spushs
	spop $a
	call [$a],play
	jmp l730
l731:
	push $2
	cmp0
	je l733
	push $6
	spushs
	spop $a
	call [$a],playloop
l733:
l730:
	push $6
	call _grsfxs,add
	end method
	method sfxs=
	push "sfx="
	cthis withlist
	end method
	method snd=
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push ".wav"
	pop $b
	popax
	add $a,$b
	cthis newsndfree
	push $1
	spushs
	push "onfinish"
	push $3
	spop $a
	call [$a],addmethod
	end method
	method tickstart
	push "__timspeed"
	cthis hasvar
	neg
	cmp0
	je l735
	new TicksCounter,__timspeed
l735:
	call __timspeed,start
	end method
	method tickstop
	push "ticker: "
	call __timspeed,print
	end method
	method csndplayloop
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	cthis newsndloop
	push $1
	spushs
	spop $a
	call [$a],play
	end method
	method csndbgr
	localstring $1
	pop $1
	push "sndbgr"
	push $1
	cthis newbgr
	push "sndbgr"
	cthis sndplayloop
	end method
	method cloadcursor
	localstring $1
	pop $1
	push "."
	call $1,contains
	cmp0
	je l737
	push "imgkursor"
	push $1
	push 0
	cthis newimg
	push "imgkursor"
	pop $1
l737:
	push $1
	spushs
	spop $a
	call [$a],hide
	push $1
	call mouse,setcursor
	push $1
	call engine,stdbutcursor
	end method
	method newimgarray
	localstring $1
	localstring $2
	localstring $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new gmimgvec,[$e]
	push $1
	spushs
	push $2
	push $3
	push $4
	spop $a
	call [$a],buildarray
	end method
	method newfont
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new font,[$e]
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],load
	end method
	method monofont
	localstring $1
	localint $2
	pop $2
	pop $1
	push $1
	push sgmfontmono
	push $2
	cthis newfont
	end method
	method newfontbold
	localstring $1
	localint $2
	pop $2
	pop $1
	push $1
	push sgmfontbold
	push $2
	cthis newfont
	end method
	method snewfont
	localstring $1
	localint $2
	pop $2
	pop $1
	localstring $3
	push "font"
	cthis newconst
	pop $3
	push $3
	spushs
	push $1
	push $2
	spop $a
	call [$a],load
	push $3
	ret
	end method
	method stdfont
	localint $1
	pop $1
	push sgmfontfile
	push $1
	cthis snewfont
	end method
	method stdmono
	localint $1
	pop $1
	push sgmfontmono
	push $1
	cthis snewfont
	end method
	method stdbold
	localint $1
	pop $1
	push sgmfontbold
	push $1
	cthis snewfont
	end method
	method getconstid
	add _iconstid,1
	pop _iconstid
	push _iconstid
	push 1
	pop $b
	popax
	sub $a,$b
	end method
	method newconst
	localstring $1
	pop $1
	localstring $2
	push "const"
	push $1
	pop $b
	popax
	add $a,$b
	cthis getconstid
	pop $b
	popax
	add $a,$b
	pop $2
	push $1
	spushs
	push $2
	spushs
	spop $e
	spop $d
	new [$d],[$e]
	push $2
	ret
	end method
	method consttext
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	localint $7
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	localstring $8
	push "text"
	cthis newconst
	pop $8
	localstring $9
	push $4
	cthis stdfont
	pop $9
	push $8
	spushs
	push $9
	spop $a
	call [$a],setfont
	push $8
	spushs
	push $1
	spop $a
	call [$a],set
	push $8
	spushs
	push $5
	push $6
	push $7
	spop $a
	call [$a],createtxt
	push $8
	spushs
	push $2
	push $3
	spop $a
	call [$a],setpos
	push $8
	ret
	end method
	method newtext
	localstring $1
	localstring $2
	localstring $3
	localint $4
	localint $5
	localint $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new text,[$e]
	push $1
	spushs
	push $2
	spop $a
	call [$a],set
	push $1
	spushs
	push $3
	spop $a
	call [$a],setfont
	push $1
	spushs
	push $4
	push $5
	push $6
	spop $a
	call [$a],createtxt
	end method
	method newtextposz
	localstring $1
	localstring $2
	localstring $3
	localint $4
	localint $5
	localint $6
	localint $7
	localint $8
	localint $9
	pop $9
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	push $5
	push $6
	cthis newtext
	push $1
	spushs
	push $7
	push $8
	push $9
	spop $a
	call [$a],anposz
	end method
	method newgrimg
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new gmimgvec,[$e]
	push $1
	push $2
	push ".pyz"
	pop $b
	popax
	add $a,$b
	popax
	pop $b
	psax
	call [$b],operator*
	push $1
	spushs
	push $3
	spop $a
	call [$a],setz
	end method
	method cfinmethod
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	push "onfinish"
	push $2
	spop $a
	call [$a],addmethod
	end method
	method cnewsndfin
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	cthis newsnd
	push $1
	push $3
	cthis cfinmethod
	end method
	method cnewsndsfin
	localstring $1
	localint $2
	localstring $3
	localint $4
	localint $5
	localstring $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	push $5
	cthis newsnds
	push $1
	push $2
	push $2
	push $5
	push $4
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	add $a,$b
	push $6
	cthis caddobjsfunfin
	end method
	method cnewsndfinbplay
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	cthis cnewsndfin
	push $1
	cthis cbplay
	end method
	method cnewtimerfin
	localstring $1
	localint $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	cthis newtimer
	push $1
	push $4
	cthis cfinmethod
	end method
	method cnewtimercyclefin
	localstring $1
	localint $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	cthis newtimercycle
	push $1
	push $4
	cthis cfinmethod
	end method
	method caddobjsfun
	localstring $1
	localint $2
	localint $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
l738:
	push $2
	push $3
	cmpjle
	cmp0
	je l739
	push $1
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push $4
	push $5
	push $2
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],addmethod
	add $2,1
	pop $2
	jmp l738
l739:
	end method
	method caddobjsfunfin
	localstring $1
	localint $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push "onfinish"
	push $4
	cthis caddobjsfun
	end method
	method newancounter
	localstring $1
	localstring $2
	localstring $3
	localint $4
	localint $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $2
	push $3
	push $4
	push $5
	cthis newanimas
	push $1
	spushs
	spop $e
	new classancounter,[$e]
	push $1
	spushs
	push $2
	push $5
	spop $a
	call [$a],set
	end method
	method newancounterh
	localstring $1
	localstring $2
	localstring $3
	localint $4
	localint $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	push $5
	cthis newancounter
	localint $6
	push 0
	pop $6
l740:
	push $6
	push $5
	cmpjl
	cmp0
	je l741
	jmp l743
l742:
	add $6,1
	pop $6
	jmp l740
l743:
	push $2
	push $6
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],hide
	jmp l742
l741:
	end method
	method newancounterf
	localstring $1
	localstring $2
	localstring $3
	localint $4
	localint $5
	localstring $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	push $5
	cthis newancounter
	localint $7
	push 0
	pop $7
l744:
	push $7
	push $5
	cmpjl
	cmp0
	je l745
	jmp l747
l746:
	add $7,1
	pop $7
	jmp l744
l747:
	push $2
	push $7
	pop $b
	popax
	add $a,$b
	spushs
	push "onfinish"
	push $6
	spop $a
	call [$a],addmethod
	jmp l746
l745:
	end method
	method newancounterhf
	localstring $1
	localstring $2
	localstring $3
	localint $4
	localint $5
	localstring $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	push $5
	cthis newancounter
	localint $7
	push 0
	pop $7
l748:
	push $7
	push $5
	cmpjl
	cmp0
	je l749
	jmp l751
l750:
	add $7,1
	pop $7
	jmp l748
l751:
	push $2
	push $7
	pop $b
	popax
	add $a,$b
	spushs
	push "onfinish"
	push $6
	spop $a
	call [$a],addmethod
	push $2
	push $7
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],hide
	jmp l750
l749:
	end method
	method cnewanimafin
	localstring $1
	localstring $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	cthis newanima
	push $1
	spushs
	push "onfinish"
	push $4
	spop $a
	call [$a],addmethod
	end method
	method ccopyanimafin
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	cthis copyanima
	push $2
	spushs
	push "onfinish"
	push $3
	spop $a
	call [$a],addmethod
	end method
	method cloadwavs
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	cthis newdb
	localint $3
	push 0
	pop $3
	localint $4
	push $1
	spushs
	spop $a
	call [$a],getrowsno
	pop $4
	localint $5
	localint $6
	localint $7
	localint $8
	localint $9
	localint $10
	localstring $11
	localstring $12
	localstring $13
	localstring $14
	localstring $15
l752:
	push $3
	push $4
	cmpjl
	cmp0
	je l753
	push $1
	spushs
	push $3
	spop $a
	call [$a],getcolsno
	pop $6
	push 0
	pop $7
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $12
	add $7,1
	pop $7
	push 0
	push 1
	call $12,getb
	push "#"
	cmpjne
	cmp0
	je l755
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $14
	add $7,1
	pop $7
	push $12
	push "wav"
	cmpje
	cmp0
	jne l758
	push $12
	push "sfx"
	cmpje
	jmp l759
l757:
	push 0
	jmp l759
l758:
	push 1
l759:
	cmp0
	je l760
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $13
	add $7,1
	pop $7
	push $12
	push "sfx"
	cmpje
	cmp0
	je l762
	push $14
	push $13
	cthis newsfx
	jmp l761
l762:
	push $14
	push $13
	cthis newsnd
l761:
	push $7
	push $6
	cmpjl
	cmp0
	je l764
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $12
	add $7,1
	pop $7
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $13
	add $7,1
	pop $7
	push $12
	push "method"
	cmpje
	cmp0
	je l766
	push $14
	spushs
	push "onfinish"
	push $13
	spop $a
	call [$a],addmethod
	jmp l765
l766:
	push 0
	push 4
	call $12,gete
	push "play"
	cmpje
	cmp0
	je l768
	push "c"
	push 4
	push 10
	call $12,gete
	pop $b
	popax
	add $a,$b
	push "playonfin"
	pop $b
	popax
	add $a,$b
	spushs
	push $14
	push $13
	spop $d
	cthis [$d]
	jmp l767
l768:
	push $12
	push "vol"
	cmpje
	cmp0
	je l770
	push $14
	spushs
	push $13
	spop $a
	call [$a],setvol
l770:
l767:
l765:
l764:
	jmp l756
l760:
	push $12
	push "group"
	cmpje
	cmp0
	je l772
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $13
	add $7,1
	pop $7
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $8
	add $7,1
	pop $7
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $9
	add $7,1
	pop $7
	push $7
	push $6
	cmpjl
	cmp0
	je l774
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $12
	add $7,1
	pop $7
	push $12
	push "method"
	cmpje
	cmp0
	je l776
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $15
	add $7,1
	pop $7
	push $14
	push $8
	push $13
	push $8
	push $9
	push $15
	cthis cnewsndsfin
l776:
	jmp l773
l774:
	push $14
	push $8
	push $13
	push $8
	push $9
	cthis newsnds
l773:
	jmp l771
l772:
	push $12
	push "bank"
	cmpje
	cmp0
	je l778
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $13
	add $7,1
	pop $7
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $5
	add $7,1
	pop $7
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $8
	add $7,1
	pop $7
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $9
	add $7,1
	pop $7
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $10
	add $7,1
	pop $7
	push $14
	spushs
	spop $e
	new classsndbank,[$e]
	push $14
	spushs
	push $13
	push $5
	push $8
	push $9
	push $10
	spop $a
	call [$a],load
	push $7
	push $6
	cmpjl
	cmp0
	je l780
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $12
	add $7,1
	pop $7
	push $12
	push "method"
	cmpje
	cmp0
	je l782
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $15
	add $7,1
	pop $7
	push $14
	spushs
	push "onfinish"
	push $15
	spop $a
	call [$a],addmethod
	jmp l781
l782:
	push $12
	push "vol"
	cmpje
	cmp0
	je l784
	push $14
	spushs
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	spop $a
	call [$a],setvol
l784:
l781:
l780:
	jmp l777
l778:
	push $12
	push "method"
	cmpje
	cmp0
	je l786
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $13
	add $7,1
	pop $7
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $8
	add $7,1
	pop $7
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $9
	add $7,1
	pop $7
l787:
	push $8
	push $9
	cmpjle
	cmp0
	je l788
	push $13
	push $8
	pop $b
	popax
	add $a,$b
	spushs
	push "onfinish"
	push $14
	spop $a
	call [$a],addmethod
	add $8,1
	pop $8
	jmp l787
l788:
	jmp l785
l786:
	push $12
	push "singlebank"
	cmpje
	cmp0
	je l790
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $13
	add $7,1
	pop $7
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	pop $8
	add $7,1
	pop $7
	push $14
	spushs
	spop $e
	new classsndbank,[$e]
	push $14
	spushs
	push $13
	push $8
	spop $a
	call [$a],loadsingle
	jmp l789
l790:
	push $12
	push "bgr"
	cmpje
	cmp0
	je l792
	push $14
	cthis csndbgr
	push $7
	push $6
	cmpjl
	cmp0
	je l794
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	push "vol"
	cmpje
	cmp0
	je l796
	add $7,1
	pop $7
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	call sndbgr,setvol
	add $7,1
	pop $7
l796:
l794:
	jmp l791
l792:
	push $12
	push "music"
	cmpje
	cmp0
	je l798
	push $14
	cthis playmusic
	push $7
	push $6
	cmpjl
	cmp0
	je l800
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	push "vol"
	cmpje
	cmp0
	je l802
	add $7,1
	pop $7
	push $1
	spushs
	push $3
	push $7
	spop $a
	call [$a],get
	call sndbgr,setvol
	add $7,1
	pop $7
l802:
l800:
l798:
l791:
l789:
l785:
l777:
l771:
l756:
l755:
	add $3,1
	pop $3
	jmp l752
l753:
	end method
	method crestart
	call gameapi,getgamename
	call gameapi,play
	end method
	method cgetscreenshoot
	localstring $1
	localreal $2
	pop $2
	pop $1
	new img,_imgsavebkg
	push iResX
	push iResY
	cthis white
	push 255
	call _imgsavebkg,create
	push 2000
	call _imgsavebkg,setz
	call _imgsavebkg,blitscreen
	push $2
	push 1.0
	cmpjne
	cmp0
	je l804
	new filter,_ftbg
	push "_imgsavebkg"
	call _ftbg,link
	push 1
	call _ftbg,setsmooth
	push $2
	call _ftbg,setzoom
l804:
	push 0
	push 0
	call _imgsavebkg,setpos
	new img,_im_1
	push $2
	push iResX
	pop $b
	popax
	mul $a,$b
	push $2
	push iResY
	pop $b
	popax
	mul $a,$b
	cthis white
	push 255
	call _im_1,create
	call _imgsavebkg,getpx
	call _imgsavebkg,getpy
	call _im_1,setpos
	push "_imgsavebkg"
	call _im_1,blit
	push $1
	call _im_1,save
	delete _im_1
	push $2
	push 1.0
	cmpjne
	cmp0
	je l806
	call _ftbg,unlink
	delete _ftbg
l806:
	delete _imgsavebkg
	end method
	end class

	class clfindfunc
	method init
	end method
	method _stdfindfunc
	localstring $1
	localint $2
	localint $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
l807:
	push $2
	push $3
	cmpjle
	cmp0
	je l808
	push $1
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push $5
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	push $4
	cmpje
	cmp0
	je l810
	push $2
	ret
l810:
	add $2,1
	pop $2
	jmp l807
l808:
	push 1
	popax
	sub 0,$a
	end method
	method _stdfindfunc2
	localstring $1
	localint $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push 0
	push $2
	push 1
	pop $b
	popax
	sub $a,$b
	push $3
	push $4
	cthis _stdfindfunc
	end method
	method cfindandeval2
	localstring $1
	localint $2
	localstring $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push 0
	push $2
	push 1
	pop $b
	popax
	sub $a,$b
	push $3
	push $4
	push $5
	cthis cfindandeval
	end method
	method cfindandeval
	localstring $1
	localint $2
	localint $3
	localstring $4
	localstring $5
	localstring $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	localint $7
	push $1
	push $2
	push $3
	push $4
	push $5
	cthis _stdfindfunc
	pop $7
	push $7
	push 0
	cmpjae
	cmp0
	je l812
	push $1
	push $7
	pop $b
	popax
	add $a,$b
	spushs
	push $6
	spushs
	spop $d
	spop $a
	call [$a],[$d]
l812:
	end method
	end class

	class classbutton
	method init
	new string,san
	push "anbut"
	pop san
	new string,sbut
	push "but"
	pop sbut
	new int,iilebut
	push 0
	pop iilebut
	new string,sfxmon
	push "null"
	pop sfxmon
	end method
	method _cbuildbutname
	localstring $1
	pop $1
	new string,_sbutname
	push $1
	pop _sbutname
	end method
	method cgetbutname
	push _sbutname
	ret
	end method
	method build
	localstring $1
	localint $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push "null"
	cthis build2
	end method
	method build2
	localstring $1
	localint $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	localstring $5
	push "_"
	push san
	pop $b
	popax
	add $a,$b
	pop $5
	push $5
	spushs
	spop $e
	new anima,[$e]
	push $5
	spushs
	push $1
	spop $a
	call [$a],load
	push $5
	spushs
	push $2
	spop $a
	call [$a],setz
	localint $6
	push $5
	spushs
	spop $a
	call [$a],nofactions
	pop $6
	localint $7
	localint $8
	localint $9
	push 0
	pop $9
	localstring $10
	localstring $11
	localstring $12
	localstring $13
	localint $14
	push 0
	pop $14
l813:
	push $14
	push $6
	cmpjl
	cmp0
	je l814
	jmp l816
l815:
	add $14,1
	pop $14
	jmp l813
l816:
	push "null"
	pop $10
	push "null"
	pop $11
	push "null"
	pop $12
	push $5
	spushs
	push $14
	spop $a
	call [$a],nofframes
	pop $7
	push 1
	pop $8
l817:
	push $8
	push $7
	cmpjle
	cmp0
	je l818
	jmp l820
l819:
	add $8,1
	pop $8
	jmp l817
l820:
	push san
	push $9
	pop $b
	popax
	add $a,$b
	pop $13
	push $8
	push 1
	cmpje
	cmp0
	je l822
	push $13
	pop $10
	jmp l821
l822:
	push $8
	push 2
	cmpje
	cmp0
	je l824
	push $13
	pop $11
	jmp l823
l824:
	push $8
	push 3
	cmpje
	cmp0
	je l826
	push $13
	pop $12
l826:
l823:
l821:
	push $5
	push $13
	clparent newvars,copyanima
	push $13
	spushs
	push $14
	push $8
	push 1
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setframe
	add $9,1
	pop $9
	jmp l819
l818:
	push $4
	push "null"
	cmpjne
	cmp0
	je l828
	push $4
	spushs
	push $5
	spushs
	push $14
	spop $a
	call [$a],nameofaction
	spop $a
	call [$a],contains
	jmp l830
l828:
	push 0
	jmp l830
l829:
	push 1
l830:
	cmp0
	je l831
	push $10
	spushs
	push $2
	push 1
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setz
	jmp l827
l831:
	push $10
	push $11
	push $12
	push $3
	cthis addbut
l827:
	jmp l815
l814:
	push $5
	spushs
	spop $a
	call [$a],hide
	end method
	method _buildfuncclick
	localstring $1
	pop $1
	new string,_sfunclick
	push $1
	pop _sfunclick
	end method
	method _stdbutclick
	push _sfunclick
	spushs
	cthis getbutname
	spop $d
	cthis [$d]
	end method
	method _buildfuncrel
	localstring $1
	pop $1
	new string,_sfuncrel
	push $1
	pop _sfuncrel
	end method
	method _stdbutrel
	push _sfuncrel
	spushs
	cthis getbutname
	spop $d
	cthis [$d]
	end method
	method _buildfuncmovon
	localstring $1
	pop $1
	new string,_sfunmovon
	push $1
	pop _sfunmovon
	end method
	method _stdbutmovon
	push sfxmon
	push "null"
	cmpjne
	cmp0
	je l833
	push sfxmon
	spushs
	spop $a
	call [$a],play
l833:
	push _sfunmovon
	spushs
	cthis getbutname
	spop $d
	cthis [$d]
	end method
	method _buildfuncmovoff
	localstring $1
	pop $1
	new string,_sfunmovoff
	push $1
	pop _sfunmovoff
	end method
	method _stdbutmovoff
	push _sfunmovoff
	spushs
	cthis getbutname
	spop $d
	cthis [$d]
	end method
	method butsigfun
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $2
	push "null"
	cmpje
	cmp0
	je l835
	ret
l835:
	push $1
	spushs
	push $4
	push $4
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push $4
	spushs
	push $2
	spop $d
	spop $a
	call [$a],[$d]
	push $1
	spushs
	push $3
	push $5
	spop $a
	call [$a],addmethod
	end method
	method sigfunc
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	localint $5
	push 0
	pop $5
l836:
	push $5
	push iilebut
	cmpjl
	cmp0
	je l837
	jmp l839
l838:
	add $5,1
	pop $5
	jmp l836
l839:
	push sbut
	push $5
	pop $b
	popax
	add $a,$b
	push $1
	push $2
	push $3
	push $4
	cthis butsigfun
	jmp l838
l837:
	end method
	method print
	localint $1
	push 0
	pop $1
l840:
	push $1
	push iilebut
	cmpjl
	cmp0
	je l841
	jmp l843
l842:
	add $1,1
	pop $1
	jmp l840
l843:
	push sbut
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getbutname
	call engine,print
	jmp l842
l841:
	end method
	method setrect
	localstring $1
	localint $2
	push 0
	pop $2
l844:
	push $2
	push iilebut
	cmpjl
	cmp0
	je l845
	jmp l847
l846:
	add $2,1
	pop $2
	jmp l844
l847:
	push sbut
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getimg
	pop $1
	push sbut
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	spushs
	spop $a
	call [$a],getpx
	push $1
	spushs
	spop $a
	call [$a],getpy
	push $1
	spushs
	spop $a
	call [$a],getex
	push $1
	spushs
	spop $a
	call [$a],getey
	spop $a
	call [$a],setrect
	jmp l846
l845:
	end method
	method setflags
	localint $1
	localint $2
	pop $2
	pop $1
	localint $3
	push 0
	pop $3
l848:
	push $3
	push iilebut
	cmpjl
	cmp0
	je l849
	jmp l851
l850:
	add $3,1
	pop $3
	jmp l848
l851:
	push sbut
	push $3
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	push $2
	spop $a
	call [$a],setflags
	jmp l850
l849:
	end method
	method sfxonmovon
	localstring $1
	pop $1
	push $1
	pop sfxmon
	end method
	method clickfunc
	localstring $1
	pop $1
	push $1
	push "onclick"
	push "_buildfuncclick"
	push "_stdbutclick"
	cthis sigfunc
	end method
	method relfunc
	localstring $1
	pop $1
	push $1
	push "onrel"
	push "_buildfuncrel"
	push "_stdbutrel"
	cthis sigfunc
	end method
	method movonfunc
	localstring $1
	pop $1
	push $1
	push "onmoveon"
	push "_buildfuncmovon"
	push "_stdbutmovon"
	cthis sigfunc
	end method
	method movofffunc
	localstring $1
	pop $1
	push $1
	push "onmoveoff"
	push "_buildfuncmovoff"
	push "_stdbutmovoff"
	cthis sigfunc
	end method
	method ilebuts
	push iilebut
	ret
	end method
	method ifind
	localstring $1
	pop $1
	push sbut
	push iilebut
	push $1
	push "getbutname"
	clparent clfindfunc,_stdfindfunc2
	ret
	end method
	method sfind
	localstring $1
	pop $1
	localint $2
	push sbut
	push iilebut
	push $1
	push "getbutname"
	clparent clfindfunc,_stdfindfunc2
	pop $2
	push $2
	push 0
	cmpjae
	cmp0
	je l853
	push sbut
	push $2
	pop $b
	popax
	add $a,$b
	jmp l852
l853:
	push "null"
l852:
	ret
	end method
	method _cbutfun
	localstring $1
	localstring $2
	pop $2
	pop $1
	push sbut
	cthis ilebuts
	push $1
	push "getbutname"
	push $2
	clparent clfindfunc,cfindandeval2
	end method
	method _callbutfunc
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l854:
	push $2
	push iilebut
	cmpjl
	cmp0
	je l855
	jmp l857
l856:
	add $2,1
	pop $2
	jmp l854
l857:
	push sbut
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	jmp l856
l855:
	end method
	method _cibutfunc
	localstring $1
	localint $2
	pop $2
	pop $1
	push $2
	push iilebut
	cmpja
	cmp0
	je l859
	push iilebut
	pop $2
l859:
	localint $3
	push 0
	pop $3
l860:
	push $3
	push $2
	cmpjl
	cmp0
	je l861
	jmp l863
l862:
	add $3,1
	pop $3
	jmp l860
l863:
	push sbut
	push $3
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	jmp l862
l861:
	end method
	method ienable
	localint $1
	pop $1
	push "enable"
	push $1
	cthis _cibutfunc
	end method
	method benableall
	cthis resumeall
	cthis enableall
	end method
	method pauseall
	push "pause"
	cthis _callbutfunc
	end method
	method resumeall
	push "resume"
	cthis _callbutfunc
	end method
	method enableall
	push "enable"
	cthis _callbutfunc
	end method
	method disableall
	push "disable"
	cthis _callbutfunc
	end method
	method disabled
	push sbut
	push 0
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],disabled
	end method
	method benable
	localstring $1
	pop $1
	push $1
	cthis resume
	push $1
	cthis enable
	end method
	method disable
	localstring $1
	pop $1
	push $1
	push "disable"
	cthis _cbutfun
	end method
	method enable
	localstring $1
	pop $1
	push $1
	push "enable"
	cthis _cbutfun
	end method
	method pause
	localstring $1
	pop $1
	push $1
	push "pause"
	cthis _cbutfun
	end method
	method resume
	localstring $1
	pop $1
	push $1
	push "resume"
	cthis _cbutfun
	end method
	method resetall
	localint $1
	push 0
	pop $1
l864:
	push $1
	push iilebut
	cmpjl
	cmp0
	je l865
	jmp l867
l866:
	add $1,1
	pop $1
	jmp l864
l867:
	push sbut
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 0
	push 0
	spop $a
	call [$a],setcursorpos
	jmp l866
l865:
	end method
	method setcursorpos
	localint $1
	localint $2
	pop $2
	pop $1
	localint $3
	push 0
	pop $3
l868:
	push $3
	push iilebut
	cmpjl
	cmp0
	je l869
	jmp l871
l870:
	add $3,1
	pop $3
	jmp l868
l871:
	push sbut
	push $3
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	push $2
	spop $a
	call [$a],setcursorpos
	jmp l870
l869:
	end method
	method getimg
	localstring $1
	pop $1
	localstring $2
	push $1
	cthis sfind
	pop $2
	push $2
	push "null"
	cmpjne
	cmp0
	je l873
	push $2
	spushs
	spop $a
	call [$a],getimg
	jmp l872
l873:
	push "null"
l872:
	ret
	end method
	method callimgfun
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	cthis getimg
	spushs
	push $2
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	end method
	method newmouse
	localstring $1
	localstring $2
	pop $2
	pop $1
	localstring $3
	push $1
	cthis sfind
	pop $3
	push $3
	push "null"
	cmpjne
	cmp0
	je l875
	push $3
	spushs
	push $2
	spop $a
	call [$a],setmouse
l875:
	end method
	method addbut
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	localstring $5
	push sbut
	push iilebut
	pop $b
	popax
	add $a,$b
	pop $5
	push $5
	push $1
	push $2
	push $3
	push $4
	clparent newvars,newbutan
	push $5
	spushs
	push "getbutname"
	push "cgetbutname"
	spop $a
	call [$a],addmethod
	push $5
	spushs
	push $1
	spushs
	spop $a
	call [$a],actionname
	spop $a
	call [$a],_cbuildbutname
	add iilebut,1
	pop iilebut
	end method
	method _addfunc
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push "null"
	cmpje
	cmp0
	je l877
	ret
l877:
	push $1
	push $2
	push "onclick"
	push "_buildfuncclick"
	push "_stdbutclick"
	cthis butsigfun
	push $1
	push $3
	push "onrel"
	push "_buildfuncrel"
	push "_stdbutrel"
	cthis butsigfun
	push $1
	push $4
	push "onmoveon"
	push "_buildfuncmovon"
	push "_stdbutmovon"
	cthis butsigfun
	push $1
	push $5
	push "onmoveoff"
	push "_buildfuncmovoff"
	push "_stdbutmovoff"
	cthis butsigfun
	end method
	method addfuncto
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	cthis sfind
	push $2
	push $3
	push $4
	push $5
	cthis _addfunc
	end method
	method addfunctolast
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push sbut
	push iilebut
	push 1
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	add $a,$b
	push $1
	push $2
	push $3
	push $4
	cthis _addfunc
	end method
	method _transmet
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push "_sob"
	push $4
	pop $b
	popax
	add $a,$b
	spushs
	spop $e
	new string,[$e]
	push $1
	pop [$e]
	push "_sf"
	push $4
	pop $b
	popax
	add $a,$b
	spushs
	spop $e
	new string,[$e]
	push $2
	pop [$e]
	push $3
	spushs
	push "_trf"
	push $4
	pop $b
	popax
	add $a,$b
	spop $d
	cthis [$d]
	end method
	method transclickfunc
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push "clickfunc"
	push "cl"
	cthis _transmet
	end method
	method transrelfunc
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push "relfunc"
	push "rl"
	cthis _transmet
	end method
	method transmovonfunc
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push "movonfunc"
	push "mn"
	cthis _transmet
	end method
	method transmovofffunc
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push "movofffunc"
	push "mf"
	cthis _transmet
	end method
	method _trfcl
	localstring $1
	pop $1
	push _sobcl
	spushs
	push _sfcl
	spushs
	push $1
	spop $d
	spop $a
	call [$a],[$d]
	end method
	method _trfrl
	localstring $1
	pop $1
	push _sobrl
	spushs
	push _sfrl
	spushs
	push $1
	spop $d
	spop $a
	call [$a],[$d]
	end method
	method _trfmn
	localstring $1
	pop $1
	push sfxmon
	push "null"
	cmpjne
	cmp0
	je l879
	push sfxmon
	spushs
	spop $a
	call [$a],play
l879:
	push _sobmn
	spushs
	push _sfmn
	spushs
	push $1
	spop $d
	spop $a
	call [$a],[$d]
	end method
	method _trfmf
	localstring $1
	pop $1
	push _sobmf
	spushs
	push _sfmf
	spushs
	push $1
	spop $d
	spop $a
	call [$a],[$d]
	end method
	end class

	class classsimplebutton
	method init
	new string,simgob
	push "null"
	pop simgob
	new gmimgvec,grbut
	end method
	method stdbuild
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	cthis getgraphpath
	push $1
	pop $b
	popax
	add $a,$b
	push $2
	push 0
	push 0
	push $3
	push 0
	cthis build
	end method
	method getimgfunc
	localstring $1
	pop $1
	push simgob
	push "null"
	cmpje
	cmp0
	je l881
	push 0
	jmp l880
l881:
	push simgob
	spushs
	push $1
	spushs
	spop $d
	spop $a
	call [$a],[$d]
l880:
	end method
	method setbutpos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call grbut,setpos
	end method
	method build
	localstring $1
	localstring $2
	localint $3
	localint $4
	localint $5
	localint $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	new button,but1
	cthis getname
	call but1,classsimplebutton0
	push "onclick"
	push "classsimplebutton1"
	call but1,addmethod
	push "onrel"
	push "classsimplebutton2"
	call but1,addmethod
	push "onmoveon"
	push "classsimplebutton3"
	call but1,addmethod
	push "onmoveoff"
	push "classsimplebutton4"
	call but1,addmethod
	push ".pyz"
	call $1,contains
	cmp0
	je l883
	new anima,anbut0
	push $1
	call anbut0,load
	push $3
	push $4
	call anbut0,setpos
	push $5
	call anbut0,setz
	push $6
	push 0
	call anbut0,setframe
	push "anbut0"
	pop simgob
	push simgob
	call grbut,add
	localstring $7
	push "anbut0"
	pop $7
	localstring $8
	push "null"
	pop $8
	localstring $9
	push "null"
	pop $9
	localint $10
	push $6
	call anbut0,nofframes
	pop $10
	push $10
	push 1
	cmpja
	cmp0
	je l885
	new anima,anbut1
	push "anbut0"
	call anbut1,copy
	push $6
	push 1
	call anbut1,setframe
	push "anbut1"
	pop $8
	push $8
	call grbut,add
l885:
	push $10
	push 2
	cmpja
	cmp0
	je l887
	new anima,anbut2
	push "anbut0"
	call anbut2,copy
	push $6
	push 2
	call anbut2,setframe
	push "anbut2"
	pop $8
	push $8
	call grbut,add
l887:
	push $7
	push $8
	push $9
	call but1,setan
	jmp l882
l883:
	new img,imgbut
	push "imgbut"
	pop simgob
	push simgob
	call grbut,add
	push $1
	call imgbut,load
	push $3
	push $4
	call imgbut,setpos
	push $5
	call imgbut,setz
	push "imgbut"
	push "null"
	push "null"
	call but1,set
l882:
	push $2
	call but1,setmouse
	end method
	method classsimplebutton0
	localstring $1
	pop $1
	new string,sbut
	push $1
	pop sbut
	end method
	method classsimplebutton1
	push sbut
	push "_CLICK"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method classsimplebutton2
	push sbut
	push "_REL"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method classsimplebutton3
	push sbut
	push "_MOVEON"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method classsimplebutton4
	push sbut
	push "_MOVEOFF"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	end class

	class classmask
	parent classbutton
	method init
	clparent classbutton,init
	end method
	method buildmask
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push 0
	push $2
	cthis build
	localint $3
	cthis ilebuts
	pop $3
	localint $4
	push 0
	pop $4
l888:
	push $4
	push $3
	cmpjl
	cmp0
	je l889
	jmp l891
l890:
	add $4,1
	pop $4
	jmp l888
l891:
	push sbut
	push $4
	pop $b
	popax
	add $a,$b
	spushs
	push 0
	push 0
	spop $a
	call [$a],setflags
	push sbut
	push $4
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],hide
	jmp l890
l889:
	end method
	method buildmaskfunc
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	cthis buildmask
	push $3
	cthis clickfunc
	end method
	method addmask
	localstring $1
	localstring $2
	localstring $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	localstring $5
	push sbut
	push iilebut
	pop $b
	popax
	add $a,$b
	pop $5
	push $5
	push $1
	push "null"
	push "null"
	push $3
	clparent newvars,newbutan
	push $5
	spushs
	push "getbutname"
	push "cgetbutname"
	spop $a
	call [$a],addmethod
	push $2
	push "null"
	cmpje
	cmp0
	je l893
	push $5
	spushs
	push $1
	spushs
	spop $a
	call [$a],actionname
	spop $a
	call [$a],_cbuildbutname
	jmp l892
l893:
	push $5
	spushs
	push $2
	spop $a
	call [$a],_cbuildbutname
l892:
	push $4
	cmp0
	je l895
	push $5
	spushs
	push 0
	push 0
	spop $a
	call [$a],setflags
	push $5
	spushs
	spop $a
	call [$a],hide
l895:
	add iilebut,1
	pop iilebut
	end method
	method addadvmask
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push 0
	cthis addmask
	push $4
	push "null"
	push "null"
	push "null"
	cthis addfunctolast
	end method
	end class

	method _stdanloop
	push 1
	popax
	sub 0,$a
	cthis play
	end method
	method _stdanhide
	cthis hide
	end method
	method _stdsndloop
	cthis play
	end method
	method __std_finish
	cthis getname
	push "_FINISH"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method looponfinish
	localstring $1
	pop $1
	push $1
	spushs
	push "onfinish"
	push "_stdanloop"
	spop $a
	call [$a],addmethod
	end method
	method hideonfinish
	localstring $1
	pop $1
	push $1
	spushs
	push "onfinish"
	push "_stdanhide"
	spop $a
	call [$a],addmethod
	end method
	method strsube
	localint $1
	pop $1
	push 0
	cthis length
	push $1
	pop $b
	popax
	sub $a,$b
	cthis getb
	end method
	method strsubb
	localint $1
	pop $1
	push $1
	cthis length
	push $1
	pop $b
	popax
	sub $a,$b
	cthis getb
	end method
	method strsubbs
	localstring $1
	pop $1
	call $1,length
	cthis strsubb
	end method
	method strsubes
	localstring $1
	pop $1
	call $1,length
	cthis strsube
	end method
	method strgetto
	localstring $1
	pop $1
	localdef $2
	push $1
	cthis find
	pop $2
	push $2
	push 0
	cmpjl
	cmp0
	je l897
	cthis get
	jmp l896
l897:
	push 0
	push $2
	cthis getb
l896:
	end method
	method strgeteto
	localstring $1
	pop $1
	localdef $2
	push $1
	cthis rfind
	pop $2
	push $2
	push 0
	cmpjl
	cmp0
	je l899
	cthis get
	jmp l898
l899:
	push $2
	push 1
	pop $b
	popax
	add $a,$b
	cthis length
	cthis getb
l898:
	end method
	method streq
	localstring $1
	pop $1
	cthis get
	push 0
	cthis length
	call $1,getb
	cmpje
	end method
	method strgetfromto
	localint $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	cthis find
	cthis getb
	end method
	method strgetfrom
	localstring $1
	pop $1
	push $1
	cthis find
	call $1,length
	pop $b
	popax
	add $a,$b
	cthis length
	cthis getb
	end method
	method strremove
	localstring $1
	pop $1
	push $1
	cthis strgetto
	push $1
	cthis strgetfrom
	pop $b
	popax
	add $a,$b
	cthis set
	end method
	method strisbetween
	localint $1
	localint $2
	pop $2
	pop $1
	localint $3
	localint $4
	push 0
	pop $4
l900:
	push $4
	cthis length
	cmpjl
	cmp0
	je l901
	jmp l903
l902:
	add $4,1
	pop $4
	jmp l900
l903:
	push $4
	cthis getbyte
	pop $3
	push $3
	push $1
	cmpjl
	cmp0
	jne l906
	push $3
	push $2
	cmpja
	jmp l907
l905:
	push 0
	jmp l907
l906:
	push 1
l907:
	cmp0
	je l908
	push 0
	ret
l908:
	jmp l902
l901:
	push 1
	end method
	method strisint
	push BYTE0
	push BYTE9
	cthis strisbetween
	end method
	method strisbin
	push BYTE0
	push BYTE0
	push 1
	pop $b
	popax
	add $a,$b
	cthis strisbetween
	end method
	method strisalpha
	push BYTEa
	push BYTEz
	cthis strisbetween
	end method
	method streach
	localstring $1
	pop $1
	localstring $2
	localint $3
	push 0
	pop $3
l909:
	push $3
	cthis length
	cmpjl
	cmp0
	je l910
	jmp l912
l911:
	add $3,1
	pop $3
	jmp l909
l912:
	push $3
	push 1
	cthis getb
	pop $2
	push $2
	spushs
	push $1
	spushs
	push $3
	spop $d
	spop $a
	call [$a],[$d]
	jmp l911
l910:
	end method
	method strdotpos
	localint $1
	pop $1
	push "."
	cthis strgetto
	push "."
	pop $b
	popax
	add $a,$b
	push "."
	cthis strgetfrom
	spushs
	push 0
	push $1
	spop $h
	call $h,getb
	pop $b
	popax
	add $a,$b
	end method
	method swap
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	popax
	mov $a,[$a]
	psax
	push $1
	spushs
	push $2
	popax
	mov $a,[$a]
	psax
	spop $b
	popax
	mov [$b],$a
	push $2
	spushs
	spop $b
	popax
	mov [$b],$a
	end method
	method stats
	localint $1
	pop $1
	push $1
	push 0
	cmpjle
	cmp0
	je l914
	push 0
	jmp l913
l914:
	push 100
	spushs
	spop $h
	call $h,rand
	push $1
	cmpjle
l913:
	end method
	method between
	localdef $1
	localdef $2
	localdef $3
	pop $3
	pop $2
	pop $1
	push $2
	push $1
	cmpjl
	cmp0
	je l916
	push $1
	jmp l915
l916:
	push $2
	push $3
	cmpja
	cmp0
	je l918
	push $3
	jmp l917
l918:
	push $2
l917:
l915:
	end method
	method max
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	cmpja
	cmp0
	je l920
	push $1
	jmp l919
l920:
	push $2
l919:
	end method
	method min
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	cmpjl
	cmp0
	je l922
	push $1
	jmp l921
l922:
	push $2
l921:
	end method
	method movoffsetr
	push igmoffsetx
	push 0
	cthis move
	end method
	method movoffsetl
	push igmoffsetx
	popax
	sub 0,$a
	push 0
	cthis move
	end method
	method imgprint
	cthis getname
	push ": x="
	pop $b
	popax
	add $a,$b
	cthis getpx
	pop $b
	popax
	add $a,$b
	push ", y="
	pop $b
	popax
	add $a,$b
	cthis getpy
	pop $b
	popax
	add $a,$b
	push ", w="
	pop $b
	popax
	add $a,$b
	cthis getw
	pop $b
	popax
	add $a,$b
	push ",h="
	pop $b
	popax
	add $a,$b
	cthis geth
	pop $b
	popax
	add $a,$b
	push ",ex="
	pop $b
	popax
	add $a,$b
	cthis getex
	pop $b
	popax
	add $a,$b
	push ",ey="
	pop $b
	popax
	add $a,$b
	cthis getey
	pop $b
	popax
	add $a,$b
	push ", z="
	pop $b
	popax
	add $a,$b
	cthis getz
	pop $b
	popax
	add $a,$b
	spushs
	spop $h
	call $h,print
	end method
	method imgborders
	localint $1
	localint $2
	localint $3
	localint $4
	localint $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	push $5
	push "1111"
	cthis imgborderss
	end method
	method imgborderss
	localint $1
	localint $2
	localint $3
	localint $4
	localint $5
	localstring $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	new img,_img_bor
	cthis getw
	push $1
	push $2
	push $3
	push $4
	push $5
	call _img_bor,create
	cthis getpx
	cthis getpy
	call _img_bor,setpos
	push 3
	push 1
	call $6,getb
	push "1"
	cmpje
	cmp0
	je l924
	push "_img_bor"
	cthis blit
l924:
	push 0
	cthis geth
	push $1
	pop $b
	popax
	sub $a,$b
	call _img_bor,move
	push 1
	push 1
	call $6,getb
	push "1"
	cmpje
	cmp0
	je l926
	push "_img_bor"
	cthis blit
l926:
	push $1
	cthis geth
	push $2
	push $3
	push $4
	push $5
	call _img_bor,create
	cthis getpx
	cthis getpy
	call _img_bor,setpos
	push 0
	push 1
	call $6,getb
	push "1"
	cmpje
	cmp0
	je l928
	push "_img_bor"
	cthis blit
l928:
	cthis getw
	push $1
	pop $b
	popax
	sub $a,$b
	push 0
	call _img_bor,move
	push 2
	push 1
	call $6,getb
	push "1"
	cmpje
	cmp0
	je l930
	push "_img_bor"
	cthis blit
l930:
	delete _img_bor
	end method
	method imgroundborder
	localint $1
	localint $2
	localint $3
	localint $4
	localint $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	push $5
	cthis imgborders
	cthis imgerasecorners
	end method
	method imgerasecorners
	localdef $1
	cthis getpx
	pop $1
	localdef $2
	cthis getpy
	pop $2
	push $1
	push $2
	cthis transparent
	cthis putrgba
	cthis getex
	push 1
	pop $b
	popax
	sub $a,$b
	push $2
	cthis transparent
	cthis putrgba
	cthis getex
	push 1
	pop $b
	popax
	sub $a,$b
	cthis getey
	push 1
	pop $b
	popax
	sub $a,$b
	cthis transparent
	cthis putrgba
	push $1
	cthis getey
	push 1
	pop $b
	popax
	sub $a,$b
	cthis transparent
	cthis putrgba
	end method
	method imgdrawline
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	localreal $6
	localreal $7
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push "blit"
	push $1
	push $2
	push $3
	push $4
	push $5
	push $6
	push $7
	cthis imgfuncline
	end method
	method imgeraseline
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	localreal $6
	localreal $7
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push "erase"
	push $1
	push $2
	push $3
	push $4
	push $5
	push $6
	push $7
	cthis imgfuncline
	end method
	method imgputoncenter
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getcx
	cthis getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push $1
	spushs
	spop $a
	call [$a],getcy
	cthis geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	cthis setpos
	end method
	method imgfuncline
	localstring $1
	localstring $2
	localint $3
	localint $4
	localint $5
	localint $6
	localreal $7
	localreal $8
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	localdef $9
	push $5
	push $3
	pop $b
	popax
	sub $a,$b
	pop $9
	localdef $10
	push $6
	push $4
	pop $b
	popax
	sub $a,$b
	pop $10
	localreal $11
	push $9
	push 0
	cmpje
	cmp0
	je l932
	push $10
	push 0
	cmpjl
	cmp0
	je l934
	push $8
	push $4
	pop $b
	popax
	add $a,$b
	pop $11
l935:
	push $11
	push $6
	cmpjae
	cmp0
	je l936
	push $2
	spushs
	push $3
	push $11
	spop $a
	call [$a],setpos
	push $1
	spushs
	push $2
	spop $d
	cthis [$d]
	push $7
	popax
	sub $11,$a
	pop $11
	jmp l935
l936:
	push $6
	push $11
	pop $b
	popax
	sub $a,$b
	jmp l933
l934:
	push $10
	push 0
	cmpja
	cmp0
	je l938
	push $8
	push $4
	pop $b
	popax
	add $a,$b
	pop $11
l939:
	push $11
	push $6
	cmpjle
	cmp0
	je l940
	push $2
	spushs
	push $3
	push $11
	spop $a
	call [$a],setpos
	push $1
	spushs
	push $2
	spop $d
	cthis [$d]
	push $7
	popax
	add $11,$a
	pop $11
	jmp l939
l940:
	push $11
	push $6
	pop $b
	popax
	sub $a,$b
	jmp l937
l938:
	push $8
l937:
l933:
	jmp l931
l932:
	push $9
	push $10
	call $8,length
	pop $11
	localreal $12
l941:
	push $8
	push $11
	cmpjle
	cmp0
	je l942
	push 1.0
	push $11
	push $8
	pop $b
	popax
	sub $a,$b
	push $11
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	pop $12
	push $2
	spushs
	push $12
	push $9
	pop $b
	popax
	mul $a,$b
	push $3
	pop $b
	popax
	add $a,$b
	push $12
	push $10
	pop $b
	popax
	mul $a,$b
	push $4
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	push $1
	spushs
	push $2
	spop $d
	cthis [$d]
	push $7
	popax
	add $8,$a
	pop $8
	jmp l941
l942:
	push $8
	push $11
	pop $b
	popax
	sub $a,$b
l931:
	end method
	method anresizemets
	cthis getname
	clparent anima_pack,resizemethods
	end method
	method anfirstnontr
	cthis getname
	cthis getpx
	cthis getpy
	push 1
	push 0
	clparent classansearcher,_findnotr
	end method
	method anloopfin
	push "onfinish"
	push "_stdanloop"
	cthis addmethod
	end method
	method anloopplay
	localint $1
	pop $1
	cthis anloopfin
	push $1
	cthis play
	end method
	method anloopsplay
	localstring $1
	pop $1
	cthis anloopfin
	push $1
	cthis play
	end method
	method anhidefin
	push "onfinish"
	push "_stdanhide"
	cthis addmethod
	end method
	method anputgr
	cthis getey
	cthis setz
	end method
	method anputy
	localint $1
	pop $1
	push 0
	push $1
	cthis geth
	pop $b
	popax
	sub $a,$b
	cthis getpy
	pop $b
	popax
	sub $a,$b
	cthis move
	end method
	method anputx
	localint $1
	pop $1
	push 0
	push $1
	cthis geth
	pop $b
	popax
	sub $a,$b
	cthis getpy
	pop $b
	popax
	sub $a,$b
	cthis move
	end method
	method ansetposgr
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	cthis setpos
	cthis anputgr
	end method
	method anplayz
	localint $1
	localint $2
	pop $2
	pop $1
	push $2
	cthis setz
	push $1
	cthis play
	end method
	method anplaygr
	localint $1
	pop $1
	push $1
	cthis play
	cthis anputgr
	end method
	method anplayzpos
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $3
	push $4
	cthis setpos
	push $1
	push $2
	cthis anplayz
	end method
	method anplaypos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	cthis setpos
	push 1
	popax
	sub 0,$a
	cthis play
	end method
	method anplayposgr
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	cthis ansetposgr
	push 1
	popax
	sub 0,$a
	cthis play
	end method
	method anplaypos2
	localint $1
	localint $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	cthis setpos
	push $3
	cthis play
	end method
	method anplaypos3
	localint $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	cthis setpos
	push $3
	cthis play
	end method
	method anhide
	push 0
	cthis stop
	cthis hide
	end method
	method andownpos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	cthis geth
	pop $b
	popax
	sub $a,$b
	cthis setpos
	end method
	method ansetbpos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	cthis lodx
	pop $b
	popax
	sub $a,$b
	push $2
	cthis lody
	pop $b
	popax
	sub $a,$b
	cthis setpos
	end method
	method ansetcpos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	cthis getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push $2
	cthis geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	cthis ansetbpos
	end method
	method ancenterscreen
	push iResX
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push iResY
	push 2
	pop $b
	popax
	div $a,$b
	psax
	cthis ansetcpos
	end method
	method imgfit
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	cthis getpx
	push $1
	cmpjl
	cmp0
	je l944
	push $1
	cthis getpx
	pop $b
	popax
	sub $a,$b
	push 0
	cthis move
l944:
	cthis getpy
	push $2
	cmpjl
	cmp0
	je l946
	push 0
	push $2
	cthis getpy
	pop $b
	popax
	sub $a,$b
	cthis move
l946:
	cthis getex
	push $3
	cmpja
	cmp0
	je l948
	push $3
	cthis getex
	pop $b
	popax
	sub $a,$b
	push 0
	cthis move
l948:
	cthis getey
	push $4
	cmpja
	cmp0
	je l950
	push 0
	push $4
	cthis getey
	pop $b
	popax
	sub $a,$b
	cthis move
l950:
	end method
	method imgfitscreen
	push igmoffsetx
	push igmoffsety
	push iResX
	push igmoffsetx
	pop $b
	popax
	add $a,$b
	push iResY
	push igmoffsety
	pop $b
	popax
	add $a,$b
	cthis imgfit
	end method
	method ansetframe
	localint $1
	pop $1
	push 1
	popax
	sub 0,$a
	cthis actionnr
	push $1
	cthis setframe
	end method
	method ansetsframe
	localdef $1
	localstring $2
	pop $2
	pop $1
	push $1
	push 0
	cthis setframe
	localint $3
	push 0
	pop $3
l951:
	push $3
	push 1
	popax
	sub 0,$a
	cthis nofframes
	cmpjl
	cmp0
	je l952
	cthis framename
	push $2
	cmpjne
	jmp l954
l952:
	push 0
	jmp l954
l953:
	push 1
l954:
	cmp0
	je l955
	add $3,1
	pop $3
	push 1
	popax
	sub 0,$a
	push $3
	cthis setframe
	jmp l951
l955:
	end method
	method ansetlastframe
	localdef $1
	pop $1
	push $1
	push $1
	cthis nofframes
	push 1
	pop $b
	popax
	sub $a,$b
	cthis setframe
	end method
	method anonscreen
	cthis getcx
	cthis getcy
	cthis getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	cthis geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	call clsurf,inscreen
	end method
	method objplayfin
	localstring $1
	pop $1
	push "onfinish"
	push $1
	cthis addmethod
	cthis play
	end method
	method objloop
	push "onfinish"
	push "_stdsndloop"
	cthis addmethod
	end method
	method objplayloop
	cthis objloop
	cthis play
	end method
	method anplayfin
	localdef $1
	localstring $2
	pop $2
	pop $1
	push "onfinish"
	push $2
	cthis addmethod
	push $1
	cthis play
	end method
	method anplaysmoothfin
	localdef $1
	localstring $2
	pop $2
	pop $1
	push "onfinish"
	push $2
	cthis addmethod
	push $1
	cthis playsmooth
	end method
	method anplayif
	localdef $1
	pop $1
	push $1
	cthis isplaying
	push 0
	cmpje
	cmp0
	je l957
	push $1
	cthis play
l957:
	end method
	method anytoz
	cthis getposy
	cthis setz
	end method
	method anposz
	localint $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	cthis setpos
	push $3
	cthis setz
	end method
	method annextaction
	localstring $1
	pop $1
	push $1
	cthis actionnr
	push 1
	pop $b
	popax
	add $a,$b
	cthis nofactions
	pop $b
	popax
	div $a,$b
	push $d
	cthis nameofaction
	end method
	method annextact
	push 1
	popax
	sub 0,$a
	cthis actionnr
	push 1
	pop $b
	popax
	add $a,$b
	cthis nofactions
	pop $b
	popax
	div $a,$b
	push $d
	end method
	method ansetnextact
	push 1
	popax
	sub 0,$a
	cthis actionnr
	push 1
	pop $b
	popax
	add $a,$b
	cthis nofactions
	pop $b
	popax
	div $a,$b
	push $d
	push 0
	cthis setframe
	end method
	method ansetnextfr
	push 1
	popax
	sub 0,$a
	cthis framenr
	push 1
	pop $b
	popax
	add $a,$b
	push 1
	popax
	sub 0,$a
	cthis nofframes
	pop $b
	popax
	div $a,$b
	push $d
	cthis setframe
	end method
	method ansetrandfr
	push 1
	popax
	sub 0,$a
	push 1
	popax
	sub 0,$a
	cthis nofframes
	spushs
	spop $h
	call $h,rand
	cthis setframe
	end method
	method anhasaction
	localstring $1
	pop $1
	push $1
	cthis actionnr
	cthis nofactions
	cmpjne
	end method
	method anaddfilter
	cthis getname
	clparent classanfilter,build
	end method
	method anaddfx
	cthis getname
	clparent AnimaFx,build
	end method
	method anputc
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	cthis ansetbpos
	push $3
	push $1
	pop $b
	popax
	sub $a,$b
	cthis getw
	pop $b
	popax
	sub $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push $4
	push $2
	pop $b
	popax
	sub $a,$b
	cthis geth
	pop $b
	popax
	sub $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	cthis move
	end method
	method aninlod
	localint $1
	pop $1
	cthis getpx
	cthis lodx
	pop $b
	popax
	sub $a,$b
	cthis getpy
	cthis lody
	pop $b
	popax
	sub $a,$b
	call $1,length
	push $1
	cmpjle
	end method
	method angetcpos
	cthis getcx
	cthis getcy
	ret
	end method
	method anactnr
	push 1
	popax
	sub 0,$a
	cthis actionnr
	end method
	method angetcrgba
	cthis getcx
	cthis getcy
	cthis getrgba
	end method
	method anisin
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	localint $5
	push 0
	pop $5
l958:
	push $5
	cthis nofactions
	cmpjl
	cmp0
	je l959
	jmp l961
l960:
	add $5,1
	pop $5
	jmp l958
l961:
	push $5
	push 0
	cthis setframe
	push $1
	push $2
	push $3
	push $4
	cthis isin
	cmp0
	je l963
	push $5
	ret
l963:
	jmp l960
l959:
	push 1
	popax
	sub 0,$a
	end method
	method anreload
	localstring $1
	pop $1
	localint $2
	push 1
	popax
	sub 0,$a
	cthis actionnr
	pop $2
	localint $3
	cthis framenr
	pop $3
	localint $4
	push 1
	popax
	sub 0,$a
	cthis isplaying
	push 0
	cmpjne
	pop $4
	localint $5
	localint $6
	cthis getpos
	pop $6
	pop $5
	localint $7
	cthis getz
	pop $7
	push $1
	cthis getpath
	cthis load
	push $5
	push $6
	cthis setpos
	push $7
	cthis setz
	push $2
	cthis nofactions
	cmpjl
	cmp0
	je l965
	push $4
	cmp0
	je l967
	push $2
	cthis play
l967:
	push $2
	push $3
	cthis setframe
	jmp l964
l965:
	push 0
	push 0
	cthis setframe
l964:
	end method
	method anclipob
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getpx
	push $1
	spushs
	spop $a
	call [$a],getpy
	push $1
	spushs
	spop $a
	call [$a],getex
	push $1
	spushs
	spop $a
	call [$a],getey
	cthis clip
	end method
	method anclipscreen
	push 0
	push 0
	push igmappw
	push igmapph
	cthis clip
	end method
	method ancopyan
	localstring $1
	pop $1
	push $1
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	push $1
	spushs
	spop $a
	call [$a],framenr
	cthis setframe
	push $1
	spushs
	spop $a
	call [$a],isvisible
	cmp0
	je l969
	cthis show
	jmp l968
l969:
	cthis hide
l968:
	push $1
	spushs
	spop $a
	call [$a],getpos
	cthis setpos
	end method
	method anconstmove
	localint $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push A
	push "mvx"
	push $2
	push "mvy"
	push $3
	cthis vars2
	push $1
	cthis setdelay
	push 1
	popax
	sub 0,$a
	push "global6"
	cthis anplayfin
	end method
	method global6
	push 1
	popax
	sub 0,$a
	cthis play
	push mvx
	push mvy
	cthis move
	end method
	method scmove
	localint $1
	localint $2
	pop $2
	pop $1
	push rgmscalex
	push $1
	pop $b
	popax
	mul $a,$b
	push rgmscaley
	push $2
	pop $b
	popax
	mul $a,$b
	cthis move
	end method
	method scpos
	localint $1
	localint $2
	pop $2
	pop $1
	push rgmscalex
	push $1
	pop $b
	popax
	mul $a,$b
	push rgmscaley
	push $2
	pop $b
	popax
	mul $a,$b
	cthis setpos
	end method
	method txtset
	localstring $1
	pop $1
	push $1
	cthis set
	cthis create
	end method
	method txtsetcol
	localstring $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	cthis set
	push $2
	push $3
	push $4
	cthis createtxt
	end method
	method txtshadow
	localint $1
	localstring $2
	pop $2
	pop $1
	push "txts"
	cthis hasvar
	neg
	cmp0
	je l971
	new text,txts
	push $2
	call txts,setfont
l971:
	cthis get
	call txts,set
	cthis getpx
	push $1
	pop $b
	popax
	add $a,$b
	cthis getpy
	push $1
	pop $b
	popax
	add $a,$b
	call txts,setpos
	cthis getz
	push 1
	pop $b
	popax
	sub $a,$b
	call txts,setz
	call txts,show
	push 0
	push 0
	push 0
	call txts,createtxt
	end method
	method txthides
	cthis hide
	push "txts"
	cthis hasvar
	cmp0
	je l973
	call txts,hide
l973:
	end method
	method txtisin
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	cthis getpx
	cmpjae
	cmp0
	je l974
	push $1
	cthis getpx
	cthis getw
	pop $b
	popax
	add $a,$b
	cmpjl
	cmp0
	je l974
	push $2
	cthis getpy
	cmpjae
	cmp0
	je l974
	push $2
	cthis getpy
	cthis geth
	pop $b
	popax
	add $a,$b
	cmpjle
	jmp l976
l974:
	push 0
	jmp l976
l975:
	push 1
l976:
	end method
	method txtcenter
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getcx
	cthis getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push $1
	spushs
	spop $a
	call [$a],getcy
	cthis geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	cthis setpos
	end method
	method txtright
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getex
	cthis getw
	pop $b
	popax
	sub $a,$b
	push $1
	spushs
	spop $a
	call [$a],getcy
	cthis geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	cthis setpos
	end method
	method txtcenterscreen
	push iResX
	cthis getw
	pop $b
	popax
	sub $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push iResY
	cthis geth
	pop $b
	popax
	sub $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	cthis setpos
	end method
	method vecinc
	localint $1
	pop $1
	push $1
	push $1
	cthis get
	push 1
	pop $b
	popax
	add $a,$b
	cthis set
	end method
	method vecdec
	localint $1
	pop $1
	push $1
	push $1
	cthis get
	push 1
	pop $b
	popax
	sub $a,$b
	cthis set
	end method
	method vecnewint
	localint $1
	pop $1
	cthis free
	push $1
	push 0
	cmpja
	cmp0
	je l978
	localint $2
	push 0
	pop $2
l979:
	push $2
	push $1
	cmpjl
	cmp0
	je l980
	jmp l982
l981:
	add $2,1
	pop $2
	jmp l979
l982:
	push $2
	cthis add
	jmp l981
l980:
l978:
	end method
	method veccopy
	localstring $1
	pop $1
	cthis free
	localint $2
	push 0
	pop $2
l983:
	push $2
	push $1
	spushs
	spop $a
	call [$a],size
	cmpjl
	cmp0
	je l984
	jmp l986
l985:
	add $2,1
	pop $2
	jmp l983
l986:
	push $1
	spushs
	push $2
	spop $a
	call [$a],get
	cthis add
	jmp l985
l984:
	end method
	method vecnextid
	localdef $1
	pop $1
	localint $2
	push $1
	cthis find
	pop $2
	push $2
	push 0
	cmpjae
	cmp0
	je l988
	push $2
	push 1
	pop $b
	popax
	add $a,$b
	cthis size
	pop $b
	popax
	div $a,$b
	push $d
	pop $2
l988:
	push $2
	end method
	method vecprevid
	localdef $1
	pop $1
	localint $2
	push $1
	cthis find
	pop $2
	push $2
	push 0
	cmpja
	cmp0
	je l990
	sub $2,1
	pop $2
	jmp l989
l990:
	push $2
	push 0
	cmpje
	cmp0
	je l992
	cthis size
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
l992:
l989:
	push $2
	end method
	method vecget
	localint $1
	pop $1
	push $1
	push 0
	cmpjae
	cmp0
	je l993
	push $1
	cthis size
	cmpjl
	jmp l995
l993:
	push 0
	jmp l995
l994:
	push 1
l995:
	cmp0
	je l997
	push $1
	cthis get
	jmp l996
l997:
	push "null"
l996:
	end method
	method vecnext
	localdef $1
	pop $1
	push $1
	cthis vecnextid
	cthis vecget
	end method
	method vecprev
	localdef $1
	pop $1
	push $1
	cthis vecprevid
	cthis vecget
	end method
	method veclast
	localint $1
	cthis size
	pop $1
	push $1
	push 0
	cmpja
	cmp0
	je l999
	push $1
	push 1
	pop $b
	popax
	sub $a,$b
	cthis get
	jmp l998
l999:
	push "null"
l998:
	end method
	method vecpop
	localdef $1
	cthis last
	pop $1
	cthis size
	push 1
	pop $b
	popax
	sub $a,$b
	cthis removeat
	push $1
	end method
	method veclimes
	localint $1
	pop $1
l1000:
	cthis size
	push $1
	cmpja
	cmp0
	je l1001
	cthis vecpop
	popax
	jmp l1000
l1001:
	end method
	method vecpopfront
	localdef $1
	push 0
	cthis get
	pop $1
	push 0
	cthis removeat
	push $1
	end method
	method vecreplace
	localdef $1
	localdef $2
	pop $2
	pop $1
	localdef $3
	push $1
	cthis find
	pop $3
	push $3
	push 0
	cmpjae
	cmp0
	je l1003
	push $3
	push $2
	cthis set
l1003:
	end method
	method insertsort
	localint $1
	localstring $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push 1
	cmpjle
	cmp0
	je l1005
	ret
l1005:
	localdef $5
	localdef $6
	localint $7
	localint $8
	localint $9
	push 0
	pop $8
l1006:
	push $8
	push $1
	cmpjl
	cmp0
	je l1007
	jmp l1009
l1008:
	add $8,1
	pop $8
	jmp l1006
l1009:
	push $2
	spushs
	push $8
	spop $d
	cthis [$d]
	pop $5
	push $8
	pop $7
	push $8
	push 1
	pop $b
	popax
	add $a,$b
	pop $9
l1010:
	push $9
	push $1
	cmpjl
	cmp0
	je l1011
	jmp l1013
l1012:
	add $9,1
	pop $9
	jmp l1010
l1013:
	push $2
	spushs
	push $9
	spop $d
	cthis [$d]
	pop $6
	push $3
	spushs
	push $6
	push $5
	spop $d
	cthis [$d]
	cmp0
	je l1015
	push $6
	pop $5
	push $9
	pop $7
l1015:
	jmp l1012
l1011:
	push $4
	spushs
	push $8
	push $7
	spop $d
	cthis [$d]
	jmp l1008
l1007:
	end method
	method obbuildfromstring
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	localint $4
	push $2
	call $1,find
	pop $4
l1016:
	push $4
	push 1
	popax
	sub 0,$a
	cmpja
	cmp0
	je l1017
	push $3
	spushs
	push 0
	push $4
	call $1,getb
	spop $d
	cthis [$d]
	push $4
	push 1
	pop $b
	popax
	add $a,$b
	call $1,strsubb
	pop $1
	push $2
	call $1,find
	pop $4
	jmp l1016
l1017:
	call $1,length
	push 0
	cmpja
	cmp0
	je l1019
	push $3
	spushs
	push $1
	spop $d
	cthis [$d]
l1019:
	end method
	method obbuildfromstring2
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	localint $4
	push $2
	call $1,find
	pop $4
l1020:
	push $4
	push 1
	popax
	sub 0,$a
	cmpja
	cmp0
	je l1021
	push $4
	push 0
	cmpja
	cmp0
	je l1023
	push $3
	spushs
	push 0
	push $4
	call $1,getb
	spop $d
	cthis [$d]
l1023:
	push $4
	push 1
	pop $b
	popax
	add $a,$b
	call $1,strsubb
	pop $1
	push $2
	call $1,find
	pop $4
	jmp l1020
l1021:
	call $1,length
	push 0
	cmpja
	cmp0
	je l1025
	push $3
	spushs
	push $1
	spop $d
	cthis [$d]
l1025:
	end method
	method vecsort
	localstring $1
	pop $1
	cthis size
	push "get"
	push $1
	push "swap"
	cthis insertsort
	end method
	method vecbuildfromstring
	localstring $1
	localstring $2
	pop $2
	pop $1
	cthis free
	push $1
	push $2
	push "add"
	cthis obbuildfromstring
	end method
	method vecbuildfromstring2
	localstring $1
	localstring $2
	pop $2
	pop $1
	cthis free
	push $1
	push $2
	push "add"
	cthis obbuildfromstring2
	end method
	method vecremoveto
	localint $1
	pop $1
	localint $2
	push 0
	pop $2
l1026:
	push $2
	push $1
	cmpjl
	cmp0
	je l1027
	jmp l1029
l1028:
	add $2,1
	pop $2
	jmp l1026
l1029:
	push 0
	cthis removeat
	jmp l1028
l1027:
	end method
	method vecremovefrom
	localint $1
	pop $1
l1030:
	push $1
	cthis size
	cmpjl
	cmp0
	je l1031
	push $1
	cthis removeat
	jmp l1030
l1031:
	end method
	method vecfindfrom
	localint $1
	localdef $2
	pop $2
	pop $1
l1032:
	push $1
	cthis size
	cmpjl
	cmp0
	je l1033
	push $1
	cthis get
	push $2
	cmpje
	cmp0
	je l1035
	push $1
	ret
	jmp l1034
l1035:
	add $1,1
	pop $1
l1034:
	jmp l1032
l1033:
	push 1
	popax
	sub 0,$a
	end method
	method vecposfromto
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	cmpje
	cmp0
	jne l1038
	cthis size
	push 0
	cmpje
	jmp l1039
l1037:
	push 0
	jmp l1039
l1038:
	push 1
l1039:
	cmp0
	je l1040
	ret
l1040:
	localdef $3
	push $1
	cthis get
	pop $3
	push $1
	push $2
	cmpja
	cmp0
	je l1042
	localint $4
	push $1
	pop $4
l1043:
	push $4
	push $2
	cmpja
	cmp0
	je l1044
	jmp l1046
l1045:
	sub $4,1
	pop $4
	jmp l1043
l1046:
	push $4
	push $4
	push 1
	pop $b
	popax
	sub $a,$b
	cthis get
	cthis set
	jmp l1045
l1044:
	jmp l1041
l1042:
	push $1
	push $2
	cmpjl
	cmp0
	je l1048
	localint $4
	push $1
	pop $4
l1049:
	push $4
	push $2
	cmpjl
	cmp0
	je l1050
	jmp l1052
l1051:
	add $4,1
	pop $4
	jmp l1049
l1052:
	push $4
	push $4
	push 1
	pop $b
	popax
	add $a,$b
	cthis get
	cthis set
	jmp l1051
l1050:
l1048:
l1041:
	push $2
	push $3
	cthis set
	end method
	method vecposfirst
	localdef $1
	pop $1
	localint $2
	push $1
	cthis find
	pop $2
	push $2
	push 0
	cmpjae
	cmp0
	je l1054
	push $2
	push 0
	cthis vecposfromto
	jmp l1053
l1054:
	push $1
	cthis addbegin
l1053:
	end method
	method vecposlast
	localdef $1
	pop $1
	localint $2
	push $1
	cthis find
	pop $2
	push $2
	push 0
	cmpjae
	cmp0
	je l1056
	push $2
	cthis size
	push 1
	pop $b
	popax
	sub $a,$b
	cthis vecposfromto
	jmp l1055
l1056:
	push $1
	cthis addbegin
l1055:
	end method
	method vecset
	localdef $1
	localdef $2
	pop $2
	pop $1
	localint $3
	push $1
	cthis find
	pop $3
	push $3
	push 0
	cmpjae
	cmp0
	je l1058
	push $3
	push $2
	cthis set
l1058:
	end method
	method veceq
	localstring $1
	pop $1
	localint $2
	cthis size
	pop $2
	push $2
	push $1
	spushs
	spop $a
	call [$a],size
	cmpjne
	cmp0
	je l1060
	push 0
	ret
l1060:
	localint $3
	push 0
	pop $3
l1061:
	push $3
	push $2
	cmpjl
	cmp0
	je l1062
	jmp l1064
l1063:
	add $3,1
	pop $3
	jmp l1061
l1064:
	push $3
	cthis get
	push $1
	spushs
	push $3
	spop $a
	call [$a],get
	cmpjne
	cmp0
	je l1066
	push 0
	ret
l1066:
	jmp l1063
l1062:
	push 1
	end method
	method vecbuild
	push "addbegin"
	cthis withlist
	end method
	method veceq2
	new vector,___v
	cthis getvectype
	call ___v,type
	call ___v,vecbuild
	localint $1
	push "___v"
	cthis veceq
	pop $1
	delete ___v
	push $1
	end method
	method veccopydbrow
	localstring $1
	localint $2
	pop $2
	pop $1
	cthis free
	push $1
	push $2
	cthis vecadddbrow
	end method
	method vecadddbrow
	localstring $1
	localint $2
	pop $2
	pop $1
	localint $3
	push 0
	pop $3
l1067:
	push $3
	push $1
	spushs
	push $2
	spop $a
	call [$a],getcolsno
	cmpjl
	cmp0
	je l1068
	jmp l1070
l1069:
	add $3,1
	pop $3
	jmp l1067
l1070:
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	cthis add
	jmp l1069
l1068:
	end method
	method vecchecknext
	localint $1
	pop $1
	add $1,1
	pop $1
	push $1
	cthis size
	cmpjl
	cmp0
	je l1072
	push $1
	cthis get
	jmp l1071
l1072:
	push "null"
l1071:
	end method
	method vecsum
	cthis size
	cmp0
	je l1074
	localdef $1
	push 0
	cthis get
	pop $1
	localint $2
	push 1
	pop $2
l1075:
	push $2
	cthis size
	cmpjl
	cmp0
	je l1076
	jmp l1078
l1077:
	add $2,1
	pop $2
	jmp l1075
l1078:
	push $2
	cthis get
	popax
	add $1,$a
	pop $1
	jmp l1077
l1076:
	push $1
	jmp l1073
l1074:
	push 0
l1073:
	end method
	method vecclosest
	localdef $1
	pop $1
	localint $2
	cthis size
	pop $2
	push $2
	push 0
	cmpjle
	cmp0
	je l1080
	push 1
	popax
	sub 0,$a
	ret
l1080:
	localint $3
	push 0
	pop $3
	localdef $4
	push $1
	push 0
	cthis get
	pop $b
	popax
	sub $a,$b
	spushs
	spop $h
	call $h,abs
	pop $4
	localint $5
	push 1
	pop $5
l1081:
	push $5
	push $2
	cmpjl
	cmp0
	je l1082
	jmp l1084
l1083:
	add $5,1
	pop $5
	jmp l1081
l1084:
	localdef $6
	push $1
	push $5
	cthis get
	pop $b
	popax
	sub $a,$b
	spushs
	spop $h
	call $h,abs
	pop $6
	push $6
	push $4
	cmpjl
	cmp0
	je l1086
	push $5
	pop $3
	push $6
	pop $4
l1086:
	jmp l1083
l1082:
	push $3
	end method
	method vecloadargs
	localdef $1
	pop $1
l1087:
	push $1
	push A
	cmpjne
	cmp0
	je l1088
	push $1
	cthis addbegin
	localdef $1
	pop $1
	jmp l1087
l1088:
	end method
	method dbbuild
	localint $1
	pop $1
	push $1
	push 0
	cmpjle
	cmp0
	je l1090
	ret
l1090:
	sub $1,1
	pop $1
	cthis free
	localstring $2
	pop $2
	localint $3
	localint $4
	push 0
	pop $4
l1091:
	push $2
	push A
	cmpjne
	cmp0
	je l1092
	jmp l1094
l1093:
	jmp l1091
l1094:
	push $4
	push 0
	cmpje
	cmp0
	je l1096
	cthis addbeginrow
	push 1
	pop $b
	popax
	sub $a,$b
	pop $3
l1096:
	push 0
	push $2
	cthis addbegin
	pop $2
	push $4
	push $1
	cmpjl
	cmp0
	je l1098
	push $4
	push 1
	pop $b
	popax
	add $a,$b
	jmp l1097
l1098:
	push 0
l1097:
	pop $4
	jmp l1093
l1092:
	end method
	method dbbuild2
	cthis free
	localstring $1
	pop $1
l1099:
	push $1
	push A
	cmpjne
	cmp0
	je l1100
	push $1
	push "null"
	cmpje
	cmp0
	je l1102
	cthis addbeginrow
	popax
	jmp l1101
l1102:
	push 0
	push $1
	cthis addbegin
l1101:
	pop $1
	jmp l1099
l1100:
	end method
	method dbaddvec
	localstring $1
	pop $1
	localdef $2
	cthis addrow
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
	localint $3
	push 0
	pop $3
l1103:
	push $3
	push $1
	spushs
	spop $a
	call [$a],size
	cmpjl
	cmp0
	je l1104
	jmp l1106
l1105:
	add $3,1
	pop $3
	jmp l1103
l1106:
	push $2
	push $1
	spushs
	push $3
	spop $a
	call [$a],get
	cthis add
	jmp l1105
l1104:
	end method
	method dbcopy
	localstring $1
	pop $1
	push $1
	push 0
	push $1
	spushs
	spop $a
	call [$a],getrowsno
	cthis dbcopyfromto
	end method
	method dbcopyrow
	localstring $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push $2
	push 1
	pop $b
	popax
	add $a,$b
	cthis dbcopyfromto
	end method
	method dbcopyfromto
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	cthis free
	push $1
	push $2
	push $3
	cthis dbaddrowfromto
	end method
	method dbaddrowfromto
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	localint $4
	localint $5
	localint $6
	push $2
	pop $4
l1107:
	push $4
	push $3
	cmpjl
	cmp0
	je l1108
	jmp l1110
l1109:
	add $4,1
	pop $4
	jmp l1107
l1110:
	cthis addrow
	push 1
	pop $b
	popax
	sub $a,$b
	pop $6
	push 0
	pop $5
l1111:
	push $5
	push $1
	spushs
	push $4
	spop $a
	call [$a],getcolsno
	cmpjl
	cmp0
	je l1112
	jmp l1114
l1113:
	add $5,1
	pop $5
	jmp l1111
l1114:
	push $6
	push $1
	spushs
	push $4
	push $5
	spop $a
	call [$a],get
	cthis add
	jmp l1113
l1112:
	jmp l1109
l1108:
	end method
	method dbadddbrowtorow
	localint $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	localint $4
	push 0
	pop $4
l1115:
	push $4
	push $2
	spushs
	push $3
	spop $a
	call [$a],getcolsno
	cmpjl
	cmp0
	je l1116
	jmp l1118
l1117:
	add $4,1
	pop $4
	jmp l1115
l1118:
	push $1
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	cthis add
	jmp l1117
l1116:
	end method
	method dbremovecol
	localint $1
	pop $1
	localint $2
	push 0
	pop $2
l1119:
	push $2
	cthis getrowsno
	cmpjl
	cmp0
	je l1120
	jmp l1122
l1121:
	add $2,1
	pop $2
	jmp l1119
l1122:
	push $2
	cthis getcolsno
	push $1
	cmpja
	cmp0
	je l1124
	push $2
	push $1
	cthis removeat
l1124:
	jmp l1121
l1120:
	end method
	method dbcopyfromtos
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $1
	spushs
	push $2
	spop $a
	call [$a],findbyrow
	push 1
	pop $b
	popax
	add $a,$b
	push $1
	spushs
	push $3
	spop $a
	call [$a],findbyrow
	cthis dbcopyfromto
	end method
	method dbremovelast
	cthis getrowsno
	push 1
	pop $b
	popax
	sub $a,$b
	cthis removerow
	end method
	method dbcuttosize
	localint $1
	pop $1
	push $1
	push 0
	cmpja
	cmp0
	je l1126
l1127:
	cthis getrowsno
	push $1
	cmpja
	cmp0
	je l1128
	cthis dbremovelast
	jmp l1127
l1128:
	jmp l1125
l1126:
	cthis free
l1125:
	end method
	method dbaddlast
	localstring $1
	pop $1
	cthis getrowsno
	push 1
	pop $b
	popax
	sub $a,$b
	push $1
	cthis add
	end method
	method dbaddstringrow
	localstring $1
	localstring $2
	pop $2
	pop $1
	cthis addrow
	popax
	push $1
	push $2
	push "dbaddlast"
	cthis obbuildfromstring
	end method
	method dbgetstringrow
	localint $1
	pop $1
	localstring $2
	push ""
	pop $2
	localint $3
	push $1
	cthis getcolsno
	pop $3
	localint $4
	push 0
	pop $4
l1129:
	push $4
	push $3
	cmpjl
	cmp0
	je l1130
	jmp l1132
l1131:
	add $4,1
	pop $4
	jmp l1129
l1132:
	push $1
	push $4
	cthis get
	popax
	add $2,$a
	pop $2
	jmp l1131
l1130:
	push $2
	end method
	method dbaddrow
	localdef $1
	cthis addrow
	push 1
	pop $b
	popax
	sub $a,$b
	pop $1
	localdef $2
	pop $2
l1133:
	push A
	push $2
	cmpjne
	cmp0
	je l1134
	push $1
	push $2
	cthis addbegin
	localdef $2
	pop $2
	jmp l1133
l1134:
	end method
	method dbaddrowfrom
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	push $2
	spop $a
	call [$a],rowinrange
	cmp0
	je l1136
	push $3
	push 0
	cmpjae
	jmp l1138
l1136:
	push 0
	jmp l1138
l1137:
	push 1
l1138:
	cmp0
	je l1139
	localint $4
	cthis addrow
	push 1
	pop $b
	popax
	sub $a,$b
	pop $4
	localint $5
	push $1
	spushs
	push $2
	spop $a
	call [$a],getcolsno
	pop $5
l1140:
	push $3
	push $5
	cmpjl
	cmp0
	je l1141
	push $4
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	cthis add
	add $3,1
	pop $3
	jmp l1140
l1141:
l1139:
	end method
	method dbchecknext
	localint $1
	localint $2
	pop $2
	pop $1
	add $2,1
	pop $2
	push $2
	push $1
	cthis getcolsno
	cmpjl
	cmp0
	je l1143
	push $1
	push $2
	cthis get
	jmp l1142
l1143:
	push "null"
l1142:
	end method
	method dbgets
	localstring $1
	localint $2
	pop $2
	pop $1
	localdef $3
	push $1
	cthis findbyrow
	pop $3
	push $3
	push 0
	cmpjae
	cmp0
	je l1145
	push $3
	cthis getcolsno
	push $2
	cmpja
	jmp l1147
l1145:
	push 0
	jmp l1147
l1146:
	push 1
l1147:
	cmp0
	je l1148
	push $3
	push $2
	cthis get
	jmp l1144
l1148:
	push "null"
l1144:
	end method
	method dbget
	localstring $1
	pop $1
	localdef $2
	push $1
	cthis findbyrow
	pop $2
	push $2
	push 0
	cmpjae
	cmp0
	je l1150
	push $2
	push 1
	cthis get
	jmp l1149
l1150:
	push "null"
l1149:
	end method
	method dbgetint
	localstring $1
	pop $1
	localdef $2
	push $1
	cthis findbyrow
	pop $2
	push $2
	push 0
	cmpjae
	cmp0
	je l1152
	push $2
	push 1
	cthis get
	spushs
	spop $h
	call $h,to_i
	jmp l1151
l1152:
	push 0
l1151:
	end method
	method dbinsertless
	localint $1
	pop $1
	localint $2
	cthis addrow
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
	push $2
	push $1
	cthis add
	push "cmpless"
	cthis dbsort
l1153:
	push $2
	push 0
	cmpjae
	cmp0
	je l1154
	push $1
	push $2
	push 0
	cthis get
	cmpje
	cmp0
	je l1156
	push $2
	ret
l1156:
	sub $2,1
	pop $2
	jmp l1153
l1154:
	push 1
	popax
	sub 0,$a
	end method
	method dbdelvar
	localint $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	cthis dbdelvarn
	end method
	method dbdelvarn
	localint $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	localint $4
	push $1
	push $2
	cthis dbfindinrow
	pop $4
	push $4
	push 0
	cmpjae
	cmp0
	je l1158
	push $1
	push $4
	push $3
	cthis removen
	push 1
	ret
l1158:
	push 0
	end method
	method dbfindinrow
	localint $1
	localstring $2
	pop $2
	pop $1
	push $1
	cthis rowinrange
	cmp0
	je l1160
	localint $3
	push 0
	pop $3
l1161:
	push $3
	push $1
	cthis getcolsno
	cmpjl
	cmp0
	je l1162
	jmp l1164
l1163:
	add $3,1
	pop $3
	jmp l1161
l1164:
	push $1
	push $3
	cthis get
	push $2
	cmpje
	cmp0
	je l1166
	push $3
	ret
l1166:
	jmp l1163
l1162:
l1160:
	push 1
	popax
	sub 0,$a
	end method
	method dbfindbycol
	localint $1
	localstring $2
	pop $2
	pop $1
	localint $3
	push 0
	pop $3
l1167:
	push $3
	cthis getrowsno
	cmpjl
	cmp0
	je l1168
	jmp l1170
l1169:
	add $3,1
	pop $3
	jmp l1167
l1170:
	push $3
	push $1
	cthis get
	push $2
	cmpje
	cmp0
	je l1172
	push $3
	ret
l1172:
	jmp l1169
l1168:
	push 1
	popax
	sub 0,$a
	end method
	method dbrowcontains
	localint $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	cthis dbfindinrow
	push 1
	popax
	sub 0,$a
	cmpjne
	end method
	method dbfirst
	localint $1
	pop $1
	push $1
	push 0
	cthis get
	end method
	method cmpless
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	cmpjl
	end method
	method cmpabove
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	cmpja
	end method
	method dbfirstless
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push 0
	cthis get
	push $2
	push 0
	cthis get
	cmpjl
	end method
	method dbsort
	localstring $1
	pop $1
	cthis getrowsno
	push "dbfirst"
	push $1
	push "swap"
	cthis insertsort
	end method
	method dbsetall
	localstring $1
	pop $1
	localdef $2
	push 0
	pop $2
l1173:
	push $2
	cthis getrowsno
	cmpjl
	cmp0
	je l1174
	jmp l1176
l1175:
	add $2,1
	pop $2
	jmp l1173
l1176:
	localdef $3
	push 0
	pop $3
l1177:
	push $3
	push $2
	cthis getcolsno
	cmpjl
	cmp0
	je l1178
	jmp l1180
l1179:
	add $3,1
	pop $3
	jmp l1177
l1180:
	push $2
	push $3
	push $1
	cthis set
	jmp l1179
l1178:
	jmp l1175
l1174:
	end method
	method dbeach_row
	localstring $1
	pop $1
	localdef $2
	push 0
	pop $2
l1181:
	push $2
	cthis getrowsno
	cmpjl
	cmp0
	je l1182
	jmp l1184
l1183:
	add $2,1
	pop $2
	jmp l1181
l1184:
	push $1
	spushs
	push $2
	spop $d
	cthis [$d]
	jmp l1183
l1182:
	end method
	method dbeq
	localstring $1
	pop $1
	cthis getrowsno
	push $1
	spushs
	spop $a
	call [$a],getrowsno
	cmpjne
	cmp0
	je l1186
	push 0
	ret
l1186:
	localint $2
	localint $3
	localint $4
	push 0
	pop $4
l1187:
	push $4
	cthis getrowsno
	cmpjl
	cmp0
	je l1188
	jmp l1190
l1189:
	add $4,1
	pop $4
	jmp l1187
l1190:
	push $4
	cthis getcolsno
	pop $2
	push $2
	push $1
	spushs
	push $4
	spop $a
	call [$a],getcolsno
	cmpjne
	cmp0
	je l1192
	push 0
	ret
l1192:
	push 0
	pop $3
l1193:
	push $3
	push $2
	cmpjl
	cmp0
	je l1194
	jmp l1196
l1195:
	add $3,1
	pop $3
	jmp l1193
l1196:
	push $4
	push $3
	cthis get
	push $1
	spushs
	push $4
	push $3
	spop $a
	call [$a],get
	cmpjne
	cmp0
	je l1198
	push 0
	ret
l1198:
	jmp l1195
l1194:
	jmp l1189
l1188:
	push 1
	end method
	method randdiff
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push 1
	cmpjle
	cmp0
	je l1200
	push 1
	popax
	sub 0,$a
	ret
l1200:
	localint $3
	call $1,rand
	pop $3
l1201:
	push $3
	push $2
	cmpje
	cmp0
	je l1202
	jmp l1204
l1203:
	call $1,rand
	pop $3
	jmp l1201
l1204:
	jmp l1203
l1202:
	push $3
	end method
	method bin_to_i
	localstring $1
	cthis get
	pop $1
	localint $2
	push 1
	pop $2
	localint $3
	push 0
	pop $3
	localint $4
	call $1,length
	push 1
	pop $b
	popax
	sub $a,$b
	pop $4
l1205:
	push $4
	push 0
	cmpjae
	cmp0
	je l1206
	jmp l1208
l1207:
	sub $4,1
	pop $4
	jmp l1205
l1208:
	push $4
	push 1
	call $1,getb
	push "1"
	cmpje
	cmp0
	je l1210
	push $2
	popax
	add $3,$a
	pop $3
l1210:
	push 2
	popax
	mul $2,$a
	pop $2
	jmp l1207
l1206:
	push $3
	end method
	method internal_filter
	localdef $1
	push "__ft"
	cthis getname
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	cthis hasvar
	neg
	cmp0
	je l1212
	push $1
	spushs
	spop $e
	new filter,[$e]
	push $1
	spushs
	spop $a
	call [$a],buildfullname
l1212:
	push $1
	spushs
	cthis getname
	spop $a
	call [$a],link
	push $1
	spushs
	spop $a
	call [$a],getfullname
	end method
	method internal_timer
	localdef $1
	push "__tim"
	cthis getname
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	cthis hasvar
	neg
	cmp0
	je l1214
	push $1
	spushs
	spop $e
	new timer,[$e]
	push $1
	spushs
	push 1
	spop $a
	call [$a],setcycle
	push $1
	spushs
	push A
	push "sfunc"
	push "null"
	spop $a
	call [$a],vars2
l1214:
	push $1
	end method
	method unlink_internal_filter
	cthis internal_filter
	spushs
	spop $a
	call [$a],unlink
	end method
	method anhideonsetframe
	push "bhideonsf"
	cthis var
	push "bopacityfr"
	cthis hasvar
	neg
	cmp0
	je l1216
	push "onsetframe"
	push "_stdanhide"
	cthis addmethod
l1216:
	end method
	method anopacityframe
	push "bopacityfr"
	cthis var
	push "onsetframe"
	push "global7"
	cthis addmethod
	end method
	method global7
	localdef $1
	cthis framename
	pop $1
	push 0
	push 2
	call $1,getb
	push "op"
	cmpje
	cmp0
	je l1218
	cthis internal_filter
	spushs
	push 2
	call $1,strsubb
	spushs
	spop $h
	call $h,to_r
	push 100.0
	pop $b
	popax
	div $a,$b
	psax
	push 255
	pop $b
	popax
	mul $a,$b
	spop $a
	call [$a],setopacity
	jmp l1217
l1218:
	cthis internal_filter
	spushs
	push 255
	spop $a
	call [$a],setopacity
l1217:
	push "bhideonsf"
	cthis hasvar
	cmp0
	je l1220
	cthis hide
l1220:
	end method
	method ansetopacity
	localint $1
	pop $1
	cthis internal_filter
	spushs
	push $1
	spop $a
	call [$a],setopacity
	end method
	method anzoomin
	localint $1
	localstring $2
	pop $2
	pop $1
	push 255
	cthis ansetopacity
	push $1
	push 1
	push 0
	push $2
	cthis anzoomfadeinout
	end method
	method anzoomout
	localint $1
	localstring $2
	pop $2
	pop $1
	push 255
	cthis ansetopacity
	push $1
	push 1
	popax
	sub 0,$a
	push 0
	push $2
	cthis anzoomfadeinout
	end method
	method anfadein
	localint $1
	localstring $2
	pop $2
	pop $1
	push $1
	push 0
	push 1
	push $2
	cthis anzoomfadeinout
	end method
	method anzoomfadein
	localint $1
	localstring $2
	pop $2
	pop $1
	push $1
	push 1
	push 1
	push $2
	cthis anzoomfadeinout
	end method
	method anzoomfadeout
	localint $1
	localstring $2
	pop $2
	pop $1
	push $1
	push 1
	popax
	sub 0,$a
	push 1
	popax
	sub 0,$a
	push $2
	cthis anzoomfadeinout
	end method
	method anfadeout
	localint $1
	localstring $2
	pop $2
	pop $1
	push $1
	push 0
	push 1
	popax
	sub 0,$a
	push $2
	cthis anzoomfadeinout
	end method
	method anzoomfadeinout
	localint $1
	localint $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $3
	push 0
	cmpja
	cmp0
	je l1222
	push 1
	pop $3
	jmp l1221
l1222:
	push $3
	push 0
	cmpjl
	cmp0
	je l1224
	push 1
	popax
	sub 0,$a
	pop $3
l1224:
l1221:
	push $2
	push 0
	cmpja
	cmp0
	je l1226
	push 1
	pop $2
	jmp l1225
l1226:
	push $2
	push 0
	cmpjl
	cmp0
	je l1228
	push 1
	popax
	sub 0,$a
	pop $2
l1228:
l1225:
	cthis show
	localdef $5
	cthis internal_filter
	pop $5
	localdef $6
	cthis internal_timer
	pop $6
	push $5
	spushs
	cthis getname
	spop $a
	call [$a],link
	push $6
	spushs
	push $4
	spop $a
	call [$a],sfunc=
	push $1
	call engine,getloopdelay
	pop $b
	popax
	div $a,$b
	psax
	pop $1
	push $1
	push 0
	cmpjle
	cmp0
	je l1230
	push $3
	push 0
	cmpja
	cmp0
	je l1232
	push 255
	cthis ansetopacity
	jmp l1231
l1232:
	push 0
	cthis ansetopacity
l1231:
	push $4
	push "null"
	cmpjne
	cmp0
	je l1234
	push $4
	spushs
	spop $d
	cthis [$d]
l1234:
	ret
l1230:
	localreal $7
	push 255.0
	push $1
	pop $b
	popax
	div $a,$b
	psax
	pop $7
	push $7
	push 1.0
	cmpjl
	cmp0
	je l1236
	push 1.0
	pop $7
l1236:
	localreal $8
	push 1.0
	push $1
	pop $b
	popax
	div $a,$b
	psax
	pop $8
	push $6
	spushs
	push A
	push "sfilter"
	push $5
	push "rstep"
	push $7
	push $3
	pop $b
	popax
	mul $a,$b
	push "ropacity"
	push 0.0
	push "rstepzoom"
	push $8
	push $2
	pop $b
	popax
	mul $a,$b
	push "rzoom"
	push 0.0
	spop $a
	call [$a],vars2
	push $3
	cmp0
	je l1238
	push $5
	spushs
	push $3
	push 1
	cmpje
	cmp0
	je l1240
	push 0
	jmp l1239
l1240:
	push 255
l1239:
	spop $a
	call [$a],setopacity
	push $6
	spushs
	push $5
	spushs
	spop $a
	call [$a],getopacity
	spop $a
	call [$a],ropacity=
l1238:
	push $2
	cmp0
	je l1242
	push $5
	spushs
	push $2
	push 1
	cmpje
	cmp0
	je l1244
	push $8
	jmp l1243
l1244:
	push 1
l1243:
	spop $a
	call [$a],setzoom
	push $6
	spushs
	push $5
	spushs
	spop $a
	call [$a],getzoomx
	spop $a
	call [$a],rzoom=
l1242:
	push $6
	spushs
	push "onfinish"
	push "global8"
	spop $a
	call [$a],addmethod
	push $6
	spushs
	spop $a
	call [$a],play
	end method
	method global8
	push rstep
	popax
	add ropacity,$a
	pop ropacity
	push rstepzoom
	popax
	add rzoom,$a
	pop rzoom
	push ropacity
	push 255
	cmpjae
	cmp0
	je l1246
	push rstep
	push 0
	cmpja
	jmp l1248
l1246:
	push 0
	jmp l1248
l1247:
	push 1
l1248:
	cmp0
	jne l1250
	push rzoom
	push 1
	cmpjae
	cmp0
	je l1251
	push rstepzoom
	push 0
	cmpja
	jmp l1253
l1251:
	push 0
	jmp l1253
l1252:
	push 1
l1253:
	jmp l1254
l1249:
	push 0
	jmp l1254
l1250:
	push 1
l1254:
	cmp0
	je l1255
	push rstepzoom
	push 0
	cmpja
	cmp0
	je l1257
	push sfilter
	spushs
	push 1
	spop $a
	call [$a],setzoom
l1257:
	push rstep
	push 0
	cmpja
	cmp0
	je l1259
	push sfilter
	spushs
	push 255
	spop $a
	call [$a],setopacity
l1259:
	push sfunc
	push "null"
	cmpjne
	cmp0
	je l1261
	cthis getbuildername
	spushs
	push sfunc
	spushs
	spop $d
	spop $a
	call [$a],[$d]
l1261:
	jmp l1245
l1255:
	push ropacity
	push 0
	cmpjle
	cmp0
	je l1263
	push rstep
	push 0
	cmpjl
	jmp l1265
l1263:
	push 0
	jmp l1265
l1264:
	push 1
l1265:
	cmp0
	jne l1267
	push rstepzoom
	push 0
	cmpjl
	cmp0
	je l1268
	push rzoom
	push rstepzoom
	popax
	sub 0,$a
	cmpjl
	jmp l1270
l1268:
	push 0
	jmp l1270
l1269:
	push 1
l1270:
	jmp l1271
l1266:
	push 0
	jmp l1271
l1267:
	push 1
l1271:
	cmp0
	je l1272
	push rstepzoom
	push 0
	cmpjl
	cmp0
	je l1274
	cthis hide
l1274:
	push rstep
	push 0
	cmpjl
	cmp0
	je l1276
	push sfilter
	spushs
	push 0
	spop $a
	call [$a],setopacity
l1276:
	push sfunc
	push "null"
	cmpjne
	cmp0
	je l1278
	cthis getbuildername
	spushs
	push sfunc
	spushs
	spop $d
	spop $a
	call [$a],[$d]
l1278:
	jmp l1262
l1272:
	push rstep
	push 0.0
	cmpjne
	cmp0
	je l1280
	push sfilter
	spushs
	push ropacity
	spop $a
	call [$a],setopacity
l1280:
	push rstepzoom
	push 0.0
	cmpjne
	cmp0
	je l1282
	push sfilter
	spushs
	push rzoom
	spop $a
	call [$a],setzoom
l1282:
	cthis play
l1262:
l1245:
	end method
	method imgbuildfromlist
	new vector,__vtmp
	push "string"
	call __vtmp,type
	call __vtmp,vecloadargs
	push "__vtmp"
	cthis imgbuildfromvec
	delete __vtmp
	end method
	method imgbuildfromvec
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],empty
	cmp0
	je l1284
	ret
l1284:
	localstring $2
	push $1
	spushs
	spop $a
	call [$a],first
	pop $2
	localint $3
	push $2
	spushs
	spop $a
	call [$a],getpx
	pop $3
	localint $4
	push $2
	spushs
	spop $a
	call [$a],getpy
	pop $4
	localint $5
	push $2
	spushs
	spop $a
	call [$a],getex
	pop $5
	localint $6
	push $2
	spushs
	spop $a
	call [$a],getey
	pop $6
	localint $7
	push 1
	pop $7
l1285:
	push $7
	push $1
	spushs
	spop $a
	call [$a],size
	cmpjl
	cmp0
	je l1286
	jmp l1288
l1287:
	add $7,1
	pop $7
	jmp l1285
l1288:
	push $1
	spushs
	push $7
	spop $a
	call [$a],get
	pop $2
	push $3
	push $2
	spushs
	spop $a
	call [$a],getpx
	cmpja
	cmp0
	je l1290
	push $2
	spushs
	spop $a
	call [$a],getpx
	pop $3
l1290:
	push $4
	push $2
	spushs
	spop $a
	call [$a],getpy
	cmpja
	cmp0
	je l1292
	push $2
	spushs
	spop $a
	call [$a],getpy
	pop $4
l1292:
	push $5
	push $2
	spushs
	spop $a
	call [$a],getex
	cmpjl
	cmp0
	je l1294
	push $2
	spushs
	spop $a
	call [$a],getex
	pop $5
l1294:
	push $6
	push $2
	spushs
	spop $a
	call [$a],getey
	cmpjl
	cmp0
	je l1296
	push $2
	spushs
	spop $a
	call [$a],getey
	pop $6
l1296:
	jmp l1287
l1286:
	push $5
	push $3
	pop $b
	popax
	sub $a,$b
	push $6
	push $4
	pop $b
	popax
	sub $a,$b
	cthis transparent
	cthis create
	push $3
	push $4
	cthis setpos
	push 0
	pop $7
l1297:
	push $7
	push $1
	spushs
	spop $a
	call [$a],size
	cmpjl
	cmp0
	je l1298
	jmp l1300
l1299:
	add $7,1
	pop $7
	jmp l1297
l1300:
	push $1
	spushs
	push $7
	spop $a
	call [$a],get
	cthis blit
	jmp l1299
l1298:
	end method
	class classgamepause
	method init
	new button,butpause
	push 0
	push 0
	push iResX
	push iResY
	call butpause,setrect
	push "onclick"
	push "resume"
	call butpause,addmethod
	call butpause,disable
	end method
	method resume
	call butpause,disable
	call gameapi,resume
	end method
	method pause
	call gameapi,pause
	call butpause,enable
	call butpause,resume
	end method
	end class

	class TicksCounter
	method init
	new int,istart
	end method
	method start
	call engine,getticks
	pop istart
	end method
	method stop
	call engine,getticks
	push istart
	pop $b
	popax
	sub $a,$b
	pop istart
	end method
	method get
	push istart
	ret
	end method
	method stopget
	cthis stop
	cthis get
	ret
	end method
	method print
	localstring $1
	pop $1
	push $1
	push " delay: "
	pop $b
	popax
	add $a,$b
	cthis stopget
	pop $b
	popax
	add $a,$b
	push " ms"
	pop $b
	popax
	add $a,$b
	call engine,print
	end method
	method put
	push ""
	cthis print
	end method
	end class

	class ObjController
	method init
	push GAME
	spushs
	cthis getname
	spop $a
	call [$a],addgmobj
	end method
	method removefromgame
	push GAME
	spushs
	cthis getname
	spop $a
	call [$a],removegmobj
	end method
	end class

	class LObjController
	parent ObjController
	parent classlocker
	method init
	clparent ObjController,init
	clparent classlocker,init
	end method
	end class

	class gmbankvec
	parent gmobjvec
	method init
	clparent gmobjvec,init
	push "iid"
	push 1
	popax
	sub 0,$a
	cthis var2
	end method
	method startrand
	cthis size
	push 0
	cmpja
	cmp0
	je l1302
	cthis size
	spushs
	spop $h
	call $h,rand
	pop iid
l1302:
	end method
	method play
	push 0
	cthis stop
	localint $1
	cthis size
	pop $1
	push $1
	push 0
	cmpje
	cmp0
	je l1304
	ret
l1304:
	push iid
	push 1
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	div $a,$b
	push $d
	pop iid
	push iid
	cthis get
	spushs
	spop $a
	call [$a],play
	end method
	method onfinish
	end method
	method stop
	localint $1
	pop $1
	cthis isplaying
	cmp0
	je l1306
	cthis getplay
	spushs
	push $1
	spop $a
	call [$a],stop
	push $1
	cmp0
	je l1308
	cthis onfinish
l1308:
l1306:
	end method
	method isplaying
	push iid
	push 0
	cmpjae
	cmp0
	je l1310
	cthis getplay
	spushs
	spop $a
	call [$a],isplaying
	jmp l1309
l1310:
	push 0
l1309:
	end method
	method getplay
	push iid
	cthis get
	ret
	end method
	end class

	class ClassGameController
	method init
	new gmobjvec,__grobj
	new string,GAME
	cthis getname
	pop GAME
	end method
	method addgmobj
	localstring $1
	pop $1
	push $1
	call __grobj,add
	end method
	method removegmobj
	localstring $1
	pop $1
	push $1
	call __grobj,remove
	end method
	method isgmobj
	localstring $1
	pop $1
	push $1
	call __grobj,contains
	end method
	method deletegmobj
	localstring $1
	pop $1
	push $1
	cthis hasvar
	cmp0
	je l1312
	push $1
	cthis removegmobj
	push $1
	spushs
	spop $d
	delete [$d]
l1312:
	end method
	method mousemove
	push "onmousemove"
	call __grobj,eval
	cthis mouse_move
	end method
	method mouselclick
	push "onmouselclick"
	call __grobj,eval
	cthis mouse_lclick
	end method
	method mouserclick
	push "onmouserclick"
	call __grobj,eval
	cthis mouse_rclick
	end method
	method mouselrel
	push "onmouselrel"
	call __grobj,eval
	cthis mouse_lrel
	end method
	end class

	class GameController
	parent ClassGameController
	parent classlocker
	method init
	localstring $1
	pop $1
	clparent ClassGameController,init
	clparent classlocker,init
	new db,_dbsnd
	push "|"
	call _dbsnd,setseparator
	new string,_sndbase
	push $1
	pop _sndbase
	new timer,__dblclick
	push 250
	call __dblclick,delay
	push 1
	call __dblclick,settick
	new int,_itimersnddelay
	push 10000
	pop _itimersnddelay
	end method
	method game_exit
	end method
	method setsndbase
	localstring $1
	pop $1
	push $1
	pop _sndbase
	end method
	method say
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push "null"
	cthis sayf
	end method
	method sayf
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	localstring $4
	push $2
	cthis getsndtxt
	pop $4
	push $4
	spushs
	push 0
	push 1
	spop $a
	call [$a],setstartstopflag
	push $1
	push $4
	push $3
	cthis cplayf
	end method
	method getsndtxt
	localstring $1
	pop $1
	localstring $2
	push "snd"
	push _sndbase
	pop $b
	popax
	add $a,$b
	call _dbsnd,getrowsno
	pop $b
	popax
	add $a,$b
	pop $2
	push $2
	push $1
	cthis addsnd
	push $2
	ret
	end method
	method _sndtimerstart
	ret
	localint $1
	push 1
	cthis getname
	call _dbsnd,dbfindbycol
	pop $1
	push $1
	push 0
	cmpjae
	cmp0
	je l1314
	push $1
	push 2
	call _dbsnd,get
	call engine,print
	jmp l1313
l1314:
	cthis getname
	push " not in _dbsnd"
	pop $b
	popax
	add $a,$b
	call engine,print
l1313:
	push ""
	call engine,print
	end method
	method addsndf
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	cthis addsnd
	push $3
	push "null"
	cmpjne
	cmp0
	je l1316
	push 0
	push 1
	call $1,getb
	push ":"
	cmpje
	cmp0
	je l1318
	push 1
	call $1,strsubb
	pop $1
l1318:
	push $1
	spushs
	push "onfinish"
	push $3
	spop $a
	call [$a],addmethod
l1316:
	end method
	method asf
	localstring $1
	localstring $2
	pop $2
	pop $1
	push "snd"
	push $1
	pop $b
	popax
	add $a,$b
	push $2
	push "end"
	push $1
	pop $b
	popax
	add $a,$b
	cthis addsndff
	end method
	method addsndff
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	cthis addsndf
	end method
	method gmconsnd
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new snd,[$e]
	push $1
	spushs
	push 0
	push 1
	spop $a
	call [$a],setstartstopflag
	push $1
	spushs
	cthis getsndpath
	push $2
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],load
	push igmsubtitle
	cmp0
	je l1320
	push $1
	cthis getsndpath
	push $2
	pop $b
	popax
	add $a,$b
	call subtitle,register
l1320:
	end method
	method addsnd
	localstring $1
	localstring $2
	pop $2
	pop $1
	localint $3
	call _dbsnd,addrow
	push 1
	pop $b
	popax
	sub $a,$b
	pop $3
	localstring $4
	push 0
	push 1
	call $1,getb
	push ":"
	cmpje
	cmp0
	je l1322
	push 1
	call $1,strsubb
	pop $1
	push _sndbase
	push "_"
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	add $a,$b
	push $3
	pop $b
	popax
	add $a,$b
	push ".wav"
	pop $b
	popax
	add $a,$b
	pop $4
	jmp l1321
l1322:
	push _sndbase
	push $3
	pop $b
	popax
	add $a,$b
	push ".wav"
	pop $b
	popax
	add $a,$b
	pop $4
l1321:
	localstring $5
	call gameapi,getgamename
	pop $5
	push igmsoundson
	cmp0
	je l1324
	cthis getsndpath
	push $4
	pop $b
	popax
	add $a,$b
	call engine,fileexist
	jmp l1326
l1324:
	push 0
	jmp l1326
l1325:
	push 1
l1326:
	cmp0
	je l1327
	push $5
	spushs
	push $1
	push $4
	spop $a
	call [$a],gmconsnd
	jmp l1323
l1327:
	push $5
	spushs
	push $1
	call $2,length
	push _itimersnddelay
	pop $b
	popax
	mul $a,$b
	push 1
	spop $a
	call [$a],newtimer
	push $1
	spushs
	push "onstart"
	push "_sndtimerstart"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setstartstopflag"
	push "GameController0"
	spop $a
	call [$a],addmethod
l1323:
	push $3
	push $4
	call _dbsnd,add
	push $3
	push $1
	call _dbsnd,add
	push $3
	push $2
	call _dbsnd,add
	end method
	method GameController0
	localint $1
	localint $2
	pop $2
	pop $1
	end method
	method addbank
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new gmbankvec,[$e]
	localstring $3
	pop $3
	localstring $4
l1328:
	push $3
	push A
	cmpjne
	cmp0
	je l1329
	push $3
	cthis getsndtxt
	pop $4
	push $1
	spushs
	push $4
	spop $a
	call [$a],addbegin
	push $2
	push "null"
	cmpjne
	cmp0
	je l1331
	push $4
	spushs
	push "onfinish"
	push $2
	spop $a
	call [$a],addmethod
l1331:
	pop $3
	jmp l1328
l1329:
	end method
	method exportbank
	localstring $1
	pop $1
	push "__db"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	spop $e
	new db,[$e]
	call [$e],GameController1
	push "__db"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	delete [$d]
	end method
	method GameController1
	localdef $1
	pop $1
	push 1
	cthis dbbuild
	push "|"
	cthis setseparator
	push "GameController2"
	cthis dbeach_row
	push igmdebug
	cmp0
	je l1333
	push "exports/"
	push $1
	pop $b
	popax
	add $a,$b
	push ".dlg"
	pop $b
	popax
	add $a,$b
	cthis save
l1333:
	end method
	method GameController2
	localdef $1
	pop $1
	localdef $2
	cthis getname
	spushs
	push "__db"
	spop $h
	call $h,strsubbs
	pop $2
	push $1
	push "snd"
	push $2
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	add $a,$b
	cthis addbegin
	push $1
	push $2
	push $1
	pop $b
	popax
	add $a,$b
	push ".wav"
	pop $b
	popax
	add $a,$b
	cthis addbegin
	end method
	method importbank
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new gmbankvec,[$e]
	push $2
	push $3
	push "null"
	push $1
	cthis importgroupto
	end method
	method exportsnd
	localstring $1
	pop $1
	push igmdebug
	cmp0
	je l1335
	push $1
	call _dbsnd,save
l1335:
	end method
	method stdexportsnd
	push "exports/"
	push _sndbase
	pop $b
	popax
	add $a,$b
	push ".dlg"
	pop $b
	popax
	add $a,$b
	cthis exportsnd
	end method
	method sounds=
	cthis buildsnds
	end method
	method sounds_from
	localstring $1
	pop $1
	new db,__tmpdb
	localdef $2
	push _sndbase
	pop $2
	push $1
	cthis setsndbase
	push "exports/"
	push $1
	pop $b
	popax
	add $a,$b
	push ".dlg"
	pop $b
	popax
	add $a,$b
	call __tmpdb,load
	call _dbsnd,free
	localdef $3
	pop $3
	localint $4
	localstring $5
l1336:
	push A
	push $3
	cmpjne
	cmp0
	je l1337
	localdef $6
	pop $6
	push 1
	push $6
	call __tmpdb,dbfindbycol
	pop $4
	push $4
	push 0
	cmpjae
	cmp0
	je l1339
	cthis getsndpath
	push $4
	push 0
	call __tmpdb,get
	pop $b
	popax
	add $a,$b
	pop $5
	push $5
	call engine,fileexist
	cmp0
	je l1341
	push GAME
	spushs
	push $6
	push $4
	push 0
	call __tmpdb,get
	spop $a
	call [$a],gmconsnd
	push $6
	spushs
	push "onfinish"
	push $3
	spop $a
	call [$a],addmethod
	jmp l1340
l1341:
	push $6
	push $4
	push 1
	call __tmpdb,get
	push $3
	cthis addsndf
l1340:
l1339:
	localdef $3
	pop $3
	jmp l1336
l1337:
	call _dbsnd,free
	delete __tmpdb
	push $2
	cthis setsndbase
	end method
	method buildsnds
	call _dbsnd,free
	new db,__dbsnd
	push 3
	call __dbsnd,dbbuild
	push "__dbsnd"
	cthis buildfromdb
	delete __dbsnd
	end method
	method buildfromdb
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l1342:
	push $2
	push $1
	spushs
	spop $a
	call [$a],getrowsno
	cmpjl
	cmp0
	je l1343
	jmp l1345
l1344:
	add $2,1
	pop $2
	jmp l1342
l1345:
	push $1
	spushs
	push $2
	push 0
	spop $a
	call [$a],get
	push $1
	spushs
	push $2
	push 1
	spop $a
	call [$a],get
	push $1
	spushs
	push $2
	push 2
	spop $a
	call [$a],get
	cthis addsndf
	jmp l1344
l1343:
	cthis stdexportsnd
	end method
	method importsnd
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push "null"
	cthis importgroup
	end method
	method importgroup
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push "null"
	cthis importgroupto
	end method
	method importgroupto
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	new db,__tmpdb
	localdef $5
	push _sndbase
	pop $5
	push $1
	cthis setsndbase
	push "exports/"
	push $1
	pop $b
	popax
	add $a,$b
	push ".dlg"
	pop $b
	popax
	add $a,$b
	call __tmpdb,load
	call _dbsnd,free
	localstring $6
	localint $7
	push 0
	pop $7
l1346:
	push $7
	call __tmpdb,getrowsno
	cmpjl
	cmp0
	je l1347
	jmp l1349
l1348:
	add $7,1
	pop $7
	jmp l1346
l1349:
	push $7
	push 1
	call __tmpdb,get
	pop $6
	push $3
	push "null"
	cmpje
	cmp0
	jne l1352
	push $3
	spushs
	push $6
	spop $a
	call [$a],contains
	jmp l1353
l1351:
	push 0
	jmp l1353
l1352:
	push 1
l1353:
	cmp0
	je l1354
	push $6
	push $7
	push 2
	call __tmpdb,get
	push $2
	cthis addsndf
	push $4
	push "null"
	cmpjne
	cmp0
	je l1356
	push $4
	spushs
	push $6
	spop $a
	call [$a],add
l1356:
l1354:
	jmp l1348
l1347:
	call _dbsnd,free
	call __tmpdb,free
	delete __tmpdb
	push $5
	cthis setsndbase
	end method
	method freesnd
	call _dbsnd,free
	end method
	method lockall
	push "lock"
	call __grobj,eval
	cthis lock
	end method
	method unlockall
	push "unlock"
	call __grobj,eval
	cthis unlock
	end method
	method gmunlockall
	push GAME
	spushs
	spop $a
	call [$a],unlockall
	end method
	method gmlockall
	push GAME
	spushs
	spop $a
	call [$a],lockall
	end method
	method lock=
	localint $1
	pop $1
	push $1
	cmp0
	je l1358
	cthis gmlockall
	jmp l1357
l1358:
	cthis gmunlockall
l1357:
	end method
	method gmcontrol_mousemove
	push "onmousemove"
	call __grobj,eval
	cthis mouse_move
	end method
	method gmcontrol_mouselclick
	push "onmouselclick"
	call __grobj,eval
	cthis mouse_lclick
	call __dblclick,isplaying
	cmp0
	je l1360
	cthis mouse_dblclick
	jmp l1359
l1360:
	call __dblclick,play
l1359:
	end method
	method gmcontrol_mouserclick
	push "onmouserclick"
	call __grobj,eval
	cthis mouse_rclick
	end method
	method gmcontrol_mouselrel
	push "onmouselrel"
	call __grobj,eval
	cthis mouse_lrel
	end method
	method gmcontrol_mouserrel
	push "onmouserrel"
	call __grobj,eval
	cthis mouse_rrel
	end method
	method gmcontrol_keydown
	push "onkeydown"
	call __grobj,eval
	cthis key_down
	end method
	method mousemove
	cthis gmcontrol_mousemove
	end method
	method mouselclick
	cthis gmcontrol_mouselclick
	end method
	method mouselrel
	cthis gmcontrol_mouselrel
	end method
	method mouserclick
	cthis gmcontrol_mouserclick
	end method
	method mouserrel
	cthis gmcontrol_mouserrel
	end method
	method keydown
	cthis gmcontrol_keydown
	end method
	end class

	new int,PrzygodaNumer
	push 1
	pop PrzygodaNumer
	new int,PrzygodaMode
	push "PrzygodaMode:"
	call dbconf,dbgetint
	pop PrzygodaMode
	push "save.txt"
	new classfullsave,clsave
	class classadv
	parent classgame
	method init
	clparent classgame,init
	new string,_s_game_path
	new int,bmslock
	push 0
	pop bmslock
	end method
	method advmslock
	push 1
	pop bmslock
	end method
	method advmsunlock
	push 0
	pop bmslock
	end method
	method advgetlock
	push bmslock
	end method
	method advmssetlock
	localint $1
	pop $1
	push $1
	cmp0
	je l1362
	cthis advmslock
	jmp l1361
l1362:
	cthis advmsunlock
l1361:
	end method
	method switch_path
	localstring $1
	pop $1
	call gameapi,getgamename
	spushs
	spop $a
	call [$a],getgraphpath
	pop _s_game_path
	call gameapi,getgamename
	spushs
	push $1
	spop $a
	call [$a],setgraphpath
	end method
	method restore_path
	call gameapi,getgamename
	spushs
	push _s_game_path
	spop $a
	call [$a],setgraphpath
	end method
	method newclpathf
	localstring $1
	localstring $2
	localstring $3
	localint $4
	localint $5
	localreal $6
	localint $7
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new classpathf,[$e]
	push $1
	spushs
	push $2
	cthis getgraphpath
	push $3
	pop $b
	popax
	add $a,$b
	push $4
	push $5
	push $6
	push $7
	spop $a
	call [$a],build
	end method
	method newclpathfcopy
	localstring $1
	localstring $2
	localstring $3
	localreal $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new classpathf,[$e]
	push $1
	spushs
	push $2
	push $3
	push $4
	spop $a
	call [$a],buildfrom
	end method
	method newpathf
	localstring $1
	localstring $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new path,[$e]
	push $1
	spushs
	cthis getgraphpath
	push $2
	pop $b
	popax
	add $a,$b
	push $3
	push $4
	push 2.0
	push 1
	spop $a
	call [$a],build
	end method
	method newclbut
	localstring $1
	localstring $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new classbutton,[$e]
	push $1
	spushs
	cthis getgraphpath
	push $2
	pop $b
	popax
	add $a,$b
	push $3
	push $4
	spop $a
	call [$a],build
	end method
	method newclmask
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new classmask,[$e]
	push $1
	spushs
	cthis getgraphpath
	push $2
	pop $b
	popax
	add $a,$b
	push $3
	spop $a
	call [$a],buildmask
	end method
	method newclmaskfunc
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new classmask,[$e]
	push $1
	spushs
	cthis getgraphpath
	push $2
	pop $b
	popax
	add $a,$b
	push $3
	push $4
	spop $a
	call [$a],buildmaskfunc
	end method
	method advsaveonstart
	push "GAME_game"
	call gameapi,getgamename
	call clsave,set
	push "GAME_sgmgame"
	push sgmgame
	call clsave,set
	push "GAME_sgmglobpath"
	push sgmglobpath
	call clsave,set
	push "GAME_sgmlastscene"
	push sgmlastscene
	call clsave,set
	push "GAME_ccs"
	call ccs,isvisible
	call clsave,set
	cthis advautosave
	end method
	method advautosave
	push "autosave.txt"
	call clsave,save
	push "autosave"
	call modadvglob,savepck
	end method
	method advautoload
	push "autosave"
	cthis _advload
	end method
	method advcacheload
	push "cache"
	cthis _advload
	end method
	method advcachesave
	push "cache"
	cthis _advsave
	end method
	method _advload
	localstring $1
	pop $1
	call modadvglob,delheros
	push $1
	call modadvglob,loadpck
	push $1
	push ".txt"
	pop $b
	popax
	add $a,$b
	call clsave,load
	push "GAME_sgmgame"
	call clsave,get
	pop sgmgame
	push "GAME_sgmglobpath"
	call clsave,get
	pop sgmglobpath
	push "GAME_sgmlastscene"
	call clsave,get
	pop sgmlastscene
	push "GAME_ccs"
	call clsave,bis
	cmp0
	je l1364
	call ccs,show
	jmp l1363
l1364:
	call ccs,hide
l1363:
	push "GAME_game"
	call clsave,get
	call gameapi,play
	end method
	method _advsave
	localstring $1
	pop $1
	push $1
	push ".txt"
	pop $b
	popax
	add $a,$b
	new classfullsave,_saver
	push "autosave.txt"
	call _saver,load
	call _saver,stdsave
	delete _saver
	new vector,_vcsave
	push "string"
	call _vcsave,type
	new vector,_vcsv2
	push "string"
	call _vcsv2,type
	push "grpck_autosave.txt"
	call _vcsave,vecload
	push "grpck_"
	push $1
	pop $b
	popax
	add $a,$b
	push ".txt"
	pop $b
	popax
	add $a,$b
	call _vcsave,vecsave
	localdef $2
	localint $3
	push 0
	pop $3
l1365:
	push $3
	call _vcsave,size
	cmpjl
	cmp0
	je l1366
	jmp l1368
l1367:
	add $3,1
	pop $3
	jmp l1365
l1368:
	push $3
	call _vcsave,get
	pop $2
	push $2
	push "autosave_name.txt"
	pop $b
	popax
	add $a,$b
	call _vcsv2,vecload
	push $2
	push $1
	pop $b
	popax
	add $a,$b
	push "_name.txt"
	pop $b
	popax
	add $a,$b
	call _vcsv2,vecsave
	push $2
	push "autosave_file.txt"
	pop $b
	popax
	add $a,$b
	call _vcsv2,vecload
	push $2
	push $1
	pop $b
	popax
	add $a,$b
	push "_file.txt"
	pop $b
	popax
	add $a,$b
	call _vcsv2,vecsave
	jmp l1367
l1366:
	delete _vcsave
	delete _vcsv2
	end method
	method getsavename
	push "save"
	push PrzygodaNumer
	pop $b
	popax
	add $a,$b
	end method
	method advload_game
	cthis getsavename
	cthis _advload
	end method
	method advsave_game
	cthis getsavename
	cthis _advsave
	end method
	method advstdstate
	push sgmstate
	push "stdadv"
	cmpje
	end method
	method advsetstdstate
	push "stdadv"
	cthis advsetstate
	end method
	method advsetstate
	localstring $1
	pop $1
	push $1
	pop sgmstate
	end method
	end class

	class classquest
	method init
	new vector,vqst
	push "string"
	call vqst,type
	end method
	method isdone
	localstring $1
	pop $1
	push $1
	call vqst,contains
	ret
	end method
	method notdone
	localstring $1
	pop $1
	push $1
	call vqst,contains
	neg
	ret
	end method
	method done
	localstring $1
	pop $1
	push $1
	call vqst,contains
	neg
	cmp0
	je l1370
	push $1
	call vqst,add
l1370:
	end method
	method reset
	call vqst,free
	end method
	method save
	localstring $1
	pop $1
	push $1
	call vqst,save
	end method
	method load
	localstring $1
	pop $1
	push $1
	call vqst,load
	end method
	end class

	new classquest,clqs
	method winsave
	localstring $1
	pop $1
	new db,_db_win
	push "output.db"
	call _db_win,load
	localdef $2
	call _db_win,addrow
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
	push $2
	push $1
	call _db_win,add
	push "output.db"
	call _db_win,save
	delete _db_win
	end method
	method saveexist
	localstring $1
	pop $1
	cthis getsavepath
	push $1
	pop $b
	popax
	add $a,$b
	call engine,fileexist
	end method
	method vecsave
	localstring $1
	pop $1
	cthis getsavepath
	push $1
	pop $b
	popax
	add $a,$b
	cthis save
	end method
	method vecload
	localstring $1
	pop $1
	cthis getsavepath
	push $1
	pop $b
	popax
	add $a,$b
	cthis load
	end method
	class classfullsave
	method init
	localstring $1
	pop $1
	new db,dbsav
	push "|"
	call dbsav,setseparator
	new string,sstdfile
	push $1
	cthis setfile
	new int,saveonset
	push 0
	pop saveonset
	end method
	method save
	localstring $1
	pop $1
	cthis getsavepath
	push $1
	pop $b
	popax
	add $a,$b
	call dbsav,save
	end method
	method _load
	localstring $1
	pop $1
	push $1
	call engine,fileexist
	cmp0
	je l1372
	call dbsav,free
	push $1
	call dbsav,load
l1372:
	end method
	method load
	localstring $1
	pop $1
	cthis getsavepath
	push $1
	pop $b
	popax
	add $a,$b
	cthis _load
	end method
	method print
	call dbsav,print
	end method
	method printvar
	localstring $1
	pop $1
	cthis getname
	push ".var: "
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	add $a,$b
	push " = "
	pop $b
	popax
	add $a,$b
	push $1
	cthis get
	pop $b
	popax
	add $a,$b
	call engine,print
	end method
	method setfile
	localstring $1
	pop $1
	push $1
	pop sstdfile
	end method
	method stdload
	push sstdfile
	cthis load
	end method
	method stdsave
	push sstdfile
	cthis save
	end method
	method free
	call dbsav,free
	end method
	method set
	localstring $1
	localstring $2
	pop $2
	pop $1
	localint $3
	push $1
	call dbsav,findbyrow
	pop $3
	push $3
	push 0
	cmpjae
	cmp0
	je l1374
	push $3
	push 1
	push $2
	call dbsav,set
	jmp l1373
l1374:
	call dbsav,addrow
	push 1
	pop $b
	popax
	sub $a,$b
	pop $3
	push $3
	push $1
	call dbsav,add
	push $3
	push $2
	call dbsav,add
l1373:
	push saveonset
	cmp0
	je l1376
	cthis stdsave
l1376:
	end method
	method bset
	localstring $1
	pop $1
	push $1
	push 1
	cthis set
	end method
	method get
	localstring $1
	pop $1
	localint $2
	push $1
	call dbsav,findbyrow
	pop $2
	push $2
	push 0
	cmpjae
	cmp0
	je l1378
	push $2
	push 1
	call dbsav,get
	jmp l1377
l1378:
	push "null"
l1377:
	end method
	method is
	localstring $1
	localstring $2
	pop $2
	pop $1
	localint $3
	push $1
	call dbsav,findbyrow
	pop $3
	push $3
	push 0
	cmpjae
	cmp0
	je l1380
	push $3
	push 1
	call dbsav,get
	push $2
	cmpje
	jmp l1379
l1380:
	push 0
l1379:
	end method
	method bis
	localstring $1
	pop $1
	localint $2
	push $1
	call dbsav,findbyrow
	pop $2
	push $2
	push 0
	cmpjae
	cmp0
	je l1382
	push $2
	push 1
	call dbsav,get
	push 0
	cmpjne
	jmp l1381
l1382:
	push 0
l1381:
	end method
	method has
	localstring $1
	pop $1
	push $1
	call dbsav,findbyrow
	push 0
	cmpjae
	end method
	method bgo
	localstring $1
	pop $1
	push $1
	cthis bis
	neg
	cmp0
	je l1384
	push $1
	cthis bset
	push 1
	jmp l1383
l1384:
	push 0
l1383:
	end method
	method saveonset=
	localint $1
	pop $1
	push $1
	pop saveonset
	end method
	method remove
	localstring $1
	pop $1
	localint $2
	push $1
	call dbsav,findbyrow
	pop $2
	push $2
	push 0
	cmpjae
	cmp0
	je l1386
	push $2
	call dbsav,removerow
	push saveonset
	cmp0
	je l1388
	cthis stdsave
l1388:
l1386:
	end method
	end class

	class StringChecker
	method init
	end method
	method isdigit
	localstring $1
	pop $1
	call $1,to_i
	push 0
	cmpjne
	cmp0
	jne l1390
	push 0
	push 1
	call $1,getb
	push "0"
	cmpje
	jmp l1391
l1389:
	push 0
	jmp l1391
l1390:
	push 1
l1391:
	end method
	method getint
	localstring $1
	pop $1
	call $1,to_i
	end method
	method getreal
	localstring $1
	pop $1
	call $1,to_r
	end method
	method isreal
	localstring $1
	pop $1
	push $1
	cthis isdigit
	cmp0
	je l1392
	push "."
	call $1,contains
	jmp l1394
l1392:
	push 0
	jmp l1394
l1393:
	push 1
l1394:
	end method
	method isstring
	localstring $1
	pop $1
	push 0
	push 1
	call $1,getb
	push "\""
	cmpje
	end method
	method getstring
	localstring $1
	pop $1
	push 1
	call $1,strsubb
	end method
	end class

	class Script
	method init
	localstring $1
	pop $1
	new db,__dbcode
	new string,__sdb
	new int,__irow
	new int,__icol
	new string,__sreads
	new vector,__vec
	push "string"
	call __vec,type
	new string,__sarg
	new int,__iarg
	new real,__rarg
	new StringChecker,__csc
	push "int"
	new map2,__mp
	localint $2
	push 0
	pop $2
l1395:
	push $2
	push 10
	cmpjl
	cmp0
	je l1396
	jmp l1398
l1397:
	add $2,1
	pop $2
	jmp l1395
l1398:
	push "ARG"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	spop $e
	new string,[$e]
	jmp l1397
l1396:
	push $1
	cthis load
	end method
	method ARG=
	localint $1
	localstring $2
	pop $2
	pop $1
	push "ARG"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push $2
	spop $b
	popax
	mov [$b],$a
	end method
	method ARG
	localint $1
	pop $1
	push "ARG"
	push $1
	pop $b
	popax
	add $a,$b
	popax
	mov $a,[$a]
	psax
	end method
	method load
	localstring $1
	pop $1
	push $1
	push "null"
	cmpje
	cmp0
	je l1400
	ret
l1400:
	push "."
	call $1,contains
	cmp0
	je l1402
	push "__dbcode"
	pop __sdb
	push $1
	call __dbcode,loadbeh
	jmp l1401
l1402:
	push $1
	pop __sdb
l1401:
	call __mp,free
	localint $2
	push 0
	pop $2
l1403:
	push $2
	push __sdb
	spushs
	spop $a
	call [$a],getrowsno
	cmpjl
	cmp0
	je l1404
	jmp l1406
l1405:
	add $2,1
	pop $2
	jmp l1403
l1406:
	push __sdb
	spushs
	push $2
	push 0
	spop $a
	call [$a],get
	push "func"
	cmpje
	cmp0
	je l1408
	push __sdb
	spushs
	push $2
	push 1
	spop $a
	call [$a],get
	push $2
	call __mp,add
l1408:
	jmp l1405
l1404:
	push "init"
	cthis call
	end method
	method get
	localstring $1
	pop $1
	push $1
	popax
	mov $a,[$a]
	psax
	end method
	method isvar
	localstring $1
	pop $1
	push 0
	push 1
	call $1,getb
	push "$"
	cmpje
	end method
	method getvar
	localstring $1
	pop $1
	push 1
	call $1,strsubb
	pop $1
	push $1
	call engine,varexist
	neg
	cmp0
	je l1410
	push $1
	spushs
	spop $e
	new def,[$e]
l1410:
	push $1
	end method
	method isfunc
	localstring $1
	pop $1
	push "."
	call $1,contains
	cmp0
	je l1411
	push $1
	call __csc,isreal
	neg
	jmp l1413
l1411:
	push 0
	jmp l1413
l1412:
	push 1
l1413:
	end method
	method getfunc
	localstring $1
	pop $1
	call __vec,free
	push "."
	call $1,strgetto
	call __vec,add
	push "."
	call $1,strgetfrom
	call __vec,add
	end method
	method _get
	add __icol,1
	pop __icol
	push __sdb
	spushs
	push __irow
	push __icol
	push 1
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],get
	end method
	method isnext
	push __icol
	push __sdb
	spushs
	push __irow
	spop $a
	call [$a],getcolsno
	cmpjl
	cmp0
	je l1415
	push __sdb
	spushs
	push __irow
	push __icol
	spop $a
	call [$a],get
	pop __sreads
	push 1
	jmp l1414
l1415:
	push 0
l1414:
	end method
	method perror
	localint $1
	localstring $2
	pop $2
	pop $1
	push $1
	cmp0
	je l1417
	push "error: "
	push $2
	pop $b
	popax
	add $a,$b
	call engine,print
l1417:
	end method
	method interpcall
	localstring $1
	pop $1
	push $1
	cthis getfunc
	localstring $2
	push 0
	call __vec,get
	pop $2
	push 0
	push 1
	call $2,getb
	push "*"
	cmpje
	cmp0
	je l1419
	push 1
	call $2,strsubb
	popax
	mov $a,[$a]
	psax
	pop $2
l1419:
	localstring $3
	push 1
	call __vec,get
	pop $3
	push 0
	push 1
	call $3,getb
	push "*"
	cmpje
	cmp0
	je l1421
	push 1
	call $3,strsubb
	popax
	mov $a,[$a]
	psax
	pop $2
l1421:
	call __vec,free
	add __icol,1
	pop __icol
	localstring $4
	cthis _get
	pop $4
l1422:
	push $4
	push ")"
	cmpjne
	cmp0
	je l1423
	push $4
	cthis getexpr
	cthis _get
	pop $4
	jmp l1422
l1423:
	push $2
	push "this"
	cmpje
	cmp0
	je l1425
	push "null"
	pop $2
l1425:
	push $2
	push $3
	cthis callfun
	end method
	method getvname
	localstring $1
	pop $1
	push $1
	cthis isvar
	cmp0
	je l1427
	push $1
	cthis getvar
	pop $1
	jmp l1426
l1427:
	push $1
	call __csc,isreal
	cmp0
	je l1429
	call $1,to_r
	pop __rarg
	push "__rarg"
	pop $1
	jmp l1428
l1429:
	push $1
	call __csc,isdigit
	cmp0
	je l1431
	push $1
	pop __iarg
	push "__iarg"
	pop $1
	jmp l1430
l1431:
	push $1
	call __csc,isstring
	cmp0
	je l1433
	push $1
	call __csc,getstring
	pop __sarg
	push "__sarg"
	pop $1
l1433:
l1430:
l1428:
l1426:
	push $1
	end method
	method isscriptfun
	localstring $1
	pop $1
	push "->"
	call $1,contains
	end method
	method getscriptfun
	localstring $1
	pop $1
	push 2
	call $1,strsubb
	end method
	method getexpr
	localstring $1
	pop $1
	push $1
	call __csc,isstring
	cmp0
	je l1435
	push $1
	cthis getvname
	spushs
	spop $a
	call [$a],get
	jmp l1434
l1435:
	push $1
	cthis isfunc
	cmp0
	je l1437
	push $1
	cthis interpcall
	jmp l1436
l1437:
	push $1
	cthis isscriptfun
	cmp0
	je l1439
	localint $2
	push __irow
	pop $2
	localint $3
	push __icol
	pop $3
	push $1
	cthis getscriptfun
	cthis call
	push $2
	pop __irow
	push $3
	pop __icol
	jmp l1438
l1439:
	push $1
	cthis getvname
	spushs
	spop $a
	call [$a],get
l1438:
l1436:
l1434:
	end method
	method cmp
	localint $1
	push 0
	pop $1
	localdef $2
	cthis _get
	cthis getexpr
	pop $2
	localstring $3
	cthis _get
	pop $3
	localdef $4
	cthis _get
	cthis getexpr
	pop $4
	push $3
	spushs
	push "=="
	cmpst
	jne l1441
	spop $a
	push $2
	push $4
	cmpje
	pop $1
	jmp l1440
l1441:
	push "!="
	cmpst
	jne l1442
	spop $a
	push $2
	push $4
	cmpjne
	pop $1
	jmp l1440
l1442:
	push "<"
	cmpst
	jne l1443
	spop $a
	push $2
	push $4
	cmpjl
	pop $1
	jmp l1440
l1443:
	push ">"
	cmpst
	jne l1444
	spop $a
	push $2
	push $4
	cmpja
	pop $1
	jmp l1440
l1444:
	push "<="
	cmpst
	jne l1445
	spop $a
	push $2
	push $4
	cmpjle
	pop $1
	jmp l1440
l1445:
	push ">="
	cmpst
	jne l1446
	spop $a
	push $2
	push $4
	cmpjae
	pop $1
	jmp l1440
l1446:
	spop $a
l1440:
	cthis _get
	pop $3
	push $3
	push "||"
	cmpje
	cmp0
	je l1448
	push $1
	cmp0
	jne l1450
	cthis cmp
	jmp l1451
l1449:
	push 0
	jmp l1451
l1450:
	push 1
l1451:
	jmp l1447
l1448:
	push $3
	push "&&"
	cmpje
	cmp0
	je l1453
	push $1
	cmp0
	je l1454
	cthis cmp
	jmp l1456
l1454:
	push 0
	jmp l1456
l1455:
	push 1
l1456:
	jmp l1452
l1453:
	push $1
l1452:
l1447:
	end method
	method containsfun
	localstring $1
	pop $1
	push $1
	call __mp,contains
	end method
	method call
	localstring $1
	pop $1
	push $1
	call __mp,contains
	neg
	cmp0
	je l1458
	ret
l1458:
	push $1
	call __mp,get
	pop __irow
	add __irow,1
	pop __irow
	push 0
	pop __icol
	localint $2
	push 1
	pop $2
	localint $3
	push 0
	pop $3
	localint $4
	localint $5
	push 0
	pop $5
	localint $6
	push 0
	pop $6
	localint $7
	localstring $8
	localstring $9
	localstring $10
	localint $11
	localint $12
	localint $13
l1459:
	push $2
	cmp0
	je l1460
	push 0
	pop __icol
	cthis _get
	pop $8
	push $8
	spushs
	push "new"
	cmpst
	jne l1462
	spop $a
	cthis _get
	pop $8
	cthis _get
	pop $9
	push 1
	call $9,strsubb
	pop $9
	cthis isnext
	cmp0
	je l1464
	push __sreads
	push "["
	cmpje
	cmp0
	je l1466
	add __icol,1
	pop __icol
	cthis _get
	pop $11
	push 0
	pop $12
l1467:
	push $12
	push $11
	cmpjl
	cmp0
	je l1468
	jmp l1470
l1469:
	add $12,1
	pop $12
	jmp l1467
l1470:
	push $8
	spushs
	push $9
	push $12
	pop $b
	popax
	add $a,$b
	spushs
	spop $e
	spop $d
	new [$d],[$e]
	jmp l1469
l1468:
	jmp l1465
l1466:
	add __icol,1
	pop __icol
l1471:
	cthis isnext
	cmp0
	je l1472
	push __sreads
	push ")"
	cmpjne
	jmp l1474
l1472:
	push 0
	jmp l1474
l1473:
	push 1
l1474:
	cmp0
	je l1475
	cthis _get
	cthis getexpr
	jmp l1471
l1475:
	push $8
	spushs
	push $9
	spushs
	spop $e
	spop $d
	new [$d],[$e]
l1465:
	jmp l1463
l1464:
	push $8
	spushs
	push $9
	spushs
	spop $e
	spop $d
	new [$d],[$e]
l1463:
	add __irow,1
	pop __irow
	jmp l1461
l1462:
	push "delete"
	cmpst
	jne l1476
	spop $a
	cthis _get
	cthis getvar
	spushs
	spop $d
	delete [$d]
	add __irow,1
	pop __irow
	jmp l1461
l1476:
	push $8
	push "if"
	cmpje
	cmp0
	jne l1478
	push $6
	cmp0
	jne l1478
	push $5
	jmp l1479
l1477:
	push 0
	jmp l1479
l1478:
	push 1
l1479:
	cmp0
	je l1481
	push $8
	jmp l1480
l1481:
	push ""
l1480:
	cmpst
	jne l1482
	spop $a
	add __icol,1
	pop __icol
	cthis cmp
	pop $4
	push $8
	push "if"
	cmpje
	cmp0
	je l1484
	push 1
	pop $3
l1484:
	push 0
	pop $6
	push 0
	pop $5
	add __irow,1
	pop __irow
	push $4
	neg
	cmp0
	je l1486
	push 1
	pop $12
l1487:
	push $12
	cmp0
	je l1488
	push __sdb
	spushs
	push __irow
	push 0
	spop $a
	call [$a],get
	pop $8
	push $8
	push "else"
	cmpje
	cmp0
	jne l1491
	push $8
	push "elif"
	cmpje
	cmp0
	jne l1491
	push $8
	push "fi"
	cmpje
	cmp0
	jne l1491
	push $8
	push "done"
	cmpje
	jmp l1492
l1490:
	push 0
	jmp l1492
l1491:
	push 1
l1492:
	cmp0
	je l1493
	push 0
	pop $12
	jmp l1489
l1493:
	add __irow,1
	pop __irow
l1489:
	jmp l1487
l1488:
l1486:
	jmp l1461
l1482:
	push "else"
	cmpst
	jne l1494
	spop $a
	push $3
	neg
	push "else without if"
	cthis perror
	add __irow,1
	pop __irow
	push $4
	cmp0
	je l1496
l1497:
	push __sdb
	spushs
	push __irow
	push 0
	spop $a
	call [$a],get
	push "fi"
	cmpjne
	cmp0
	je l1498
	add __irow,1
	pop __irow
	jmp l1497
l1498:
l1496:
	jmp l1461
l1494:
	push "fi"
	cmpst
	jne l1499
	spop $a
	push $3
	neg
	push "fi without if"
	cthis perror
	push 0
	pop $3
	push 0
	pop $4
	push 0
	pop $6
	add __irow,1
	pop __irow
	jmp l1461
l1499:
	push "elif"
	cmpst
	jne l1500
	spop $a
	push $4
	cmp0
	je l1502
	add __irow,1
	pop __irow
l1503:
	push __sdb
	spushs
	push __irow
	push 0
	spop $a
	call [$a],get
	push "fi"
	cmpjne
	cmp0
	je l1504
	add __irow,1
	pop __irow
	jmp l1503
l1504:
	jmp l1501
l1502:
	push 1
	pop $6
l1501:
	jmp l1461
l1500:
	push "end"
	cmpst
	jne l1505
	spop $a
	push 0
	pop $2
	jmp l1461
l1505:
	push "while"
	cmpst
	jne l1506
	spop $a
	push __irow
	pop $7
	push 1
	pop $5
	jmp l1461
l1506:
	push "done"
	cmpst
	jne l1507
	spop $a
	push $4
	cmp0
	je l1509
	push $7
	pop __irow
	jmp l1508
l1509:
	add __irow,1
	pop __irow
l1508:
	jmp l1461
l1507:
	push "print"
	cmpst
	jne l1510
	spop $a
	push ""
	pop $8
l1511:
	cthis isnext
	cmp0
	je l1512
	cthis _get
	cthis getexpr
	popax
	add $8,$a
	pop $8
	jmp l1511
l1512:
	push $8
	call engine,print
	add __irow,1
	pop __irow
	jmp l1461
l1510:
	push "return"
	cmpst
	jne l1513
	spop $a
	cthis isnext
	cmp0
	je l1515
	push __sreads
	cthis getexpr
l1515:
	ret
	jmp l1461
l1513:
	spop $a
	push 0
	push 1
	call $8,getb
	push "$"
	cmpje
	cmp0
	je l1517
	push $8
	cthis getvar
	pop $8
	add __icol,1
	pop __icol
	push $8
	spushs
	cthis _get
	cthis getexpr
	spop $b
	popax
	mov [$b],$a
l1518:
	cthis isnext
	cmp0
	je l1519
	add __icol,1
	pop __icol
	localdef $14
	cthis _get
	cthis getexpr
	pop $14
	push __sreads
	spushs
	push "+"
	cmpst
	jne l1521
	spop $a
	push $8
	spushs
	push $14
	popax
	spop $b
	add [$b],$a
	pop [$b]
	jmp l1520
l1521:
	push "-"
	cmpst
	jne l1522
	spop $a
	push $8
	spushs
	push $14
	popax
	spop $b
	sub [$b],$a
	pop [$b]
	jmp l1520
l1522:
	push "*"
	cmpst
	jne l1523
	spop $a
	push $8
	spushs
	push $14
	popax
	spop $b
	mul [$b],$a
	pop [$b]
	jmp l1520
l1523:
	push "/"
	cmpst
	jne l1524
	spop $a
	push $8
	spushs
	push $14
	popax
	spop $b
	div [$b],$a
	mov [$b],$a
	jmp l1520
l1524:
	push "%"
	cmpst
	jne l1525
	spop $a
	push $8
	spushs
	push $14
	popax
	spop $b
	div [$b],$a
	mov [$b],$d
	jmp l1520
l1525:
	spop $a
l1520:
	jmp l1518
l1519:
	jmp l1516
l1517:
	push $8
	cthis getexpr
l1516:
	add __irow,1
	pop __irow
l1461:
	push __irow
	push __sdb
	spushs
	spop $a
	call [$a],getrowsno
	cmpjae
	cmp0
	je l1527
	push 1
	push "function "
	push $1
	pop $b
	popax
	add $a,$b
	push " not finished!"
	pop $b
	popax
	add $a,$b
	cthis perror
	push 0
	pop $2
l1527:
	jmp l1459
l1460:
	end method
	end class

	method animaloader_load
	localstring $1
	pop $1
	new db,_dbanl
	push $1
	cthis getpath
	call _dbanl,loadbeh
	localstring $2
	localstring $3
	localstring $4
	localint $5
	localint $6
	push 0
	pop $6
l1528:
	push $6
	call _dbanl,getrowsno
	cmpjl
	cmp0
	je l1529
	jmp l1531
l1530:
	add $6,1
	pop $6
	jmp l1528
l1531:
	push $6
	call _dbanl,getcolsno
	push 0
	cmpja
	cmp0
	je l1533
	push 0
	pop $5
	push $6
	push $5
	call _dbanl,get
	spushs
	push "an:"
	cmpst
	jne l1535
	spop $a
	add $5,1
	pop $5
	push $6
	push $5
	call _dbanl,get
	pop $2
	add $5,1
	pop $5
	push ".pyz"
	call $2,contains
	cmp0
	je l1537
	push "an"
	push ".pyz"
	call $2,strsubes
	pop $b
	popax
	add $a,$b
	pop $3
	push $3
	push $2
	push 0
	cthis newanima
	jmp l1536
l1537:
	push $6
	push $5
	call _dbanl,get
	push $2
	cthis copyanima
	add $5,1
	pop $5
l1536:
	localint $7
	push $5
	pop $7
l1538:
	push $7
	push $6
	call _dbanl,getcolsno
	cmpjl
	cmp0
	je l1539
	jmp l1541
l1540:
	add $7,1
	pop $7
	jmp l1538
l1541:
	push $6
	push $7
	call _dbanl,get
	spushs
	push "-z"
	cmpst
	jne l1543
	spop $a
	add $7,1
	pop $7
	push $3
	spushs
	push $6
	push $7
	call _dbanl,get
	spop $a
	call [$a],setz
	jmp l1542
l1543:
	push "-hide"
	cmpst
	jne l1544
	spop $a
	push $3
	spushs
	spop $a
	call [$a],hide
	jmp l1542
l1544:
	push "-opacityframe"
	cmpst
	jne l1545
	spop $a
	push $3
	spushs
	spop $a
	call [$a],anopacityframe
	jmp l1542
l1545:
	push "-nplay"
	cmpst
	jne l1546
	spop $a
	add $7,1
	pop $7
	push $3
	spushs
	push $6
	push $7
	call _dbanl,get
	spushs
	spop $h
	call $h,to_i
	spop $a
	call [$a],play
	jmp l1542
l1546:
	push "-play"
	cmpst
	jne l1547
	spop $a
	add $7,1
	pop $7
	push $3
	spushs
	push $6
	push $7
	call _dbanl,get
	spop $a
	call [$a],play
	jmp l1542
l1547:
	push "-delay"
	cmpst
	jne l1548
	spop $a
	add $7,1
	pop $7
	push $3
	spushs
	push $6
	push $7
	call _dbanl,get
	spop $a
	call [$a],setdelay
	jmp l1542
l1548:
	push "-drawmode"
	cmpst
	jne l1549
	spop $a
	push $6
	push $7
	call _dbanl,get
	pop $2
	add $7,1
	pop $7
	push $2
	push "lineardodge"
	cmpje
	cmp0
	je l1551
	push $3
	spushs
	push 1
	spop $a
	call [$a],setdrawmode
l1551:
	jmp l1542
l1549:
	push "-hideonstart"
	cmpst
	jne l1552
	spop $a
	push $3
	spushs
	spop $a
	call [$a],anhideonsetframe
	jmp l1542
l1552:
	spop $a
	push $3
	push "_dbanl"
	push $6
	push $7
	cthis animaloader_an
	pop $7
l1542:
	jmp l1540
l1539:
	jmp l1534
l1535:
	spop $a
l1534:
l1533:
	jmp l1530
l1529:
	end method
	method animaloader_an
	localstring $1
	localstring $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $4
	end method
	method transparent
	push 0
	push 0
	push 0
	push 0
	ret
	end method
	method red
	push 255
	push 0
	push 0
	ret
	end method
	method green
	push 0
	push 255
	push 0
	ret
	end method
	method blue
	push 0
	push 0
	push 255
	ret
	end method
	method white
	push 255
	push 255
	push 255
	ret
	end method
	method black
	push 0
	push 0
	push 0
	ret
	end method
	method grey
	localint $1
	pop $1
	push $1
	push $1
	push $1
	ret
	end method
	method yellow
	push 255
	push 255
	push 0
	ret
	end method
	class Color
	method init
	push A
	push "r"
	push "g"
	push "b"
	push "a"
	cthis vars
	end method
	method operator=
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],get
	cthis set
	end method
	method img=
	localdef $1
	pop $1
	push $1
	spushs
	push $1
	clparent classansearcher,firstnotrx1y
	spop $a
	call [$a],getrgba
	pop a
	pop b
	pop g
	pop r
	end method
	method get
	push r
	push g
	push b
	push a
	ret
	end method
	method set
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	pop a
	pop b
	pop g
	pop r
	end method
	method rgb=
	localint $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	pop b
	pop g
	pop r
	end method
	method rgb
	push r
	push g
	push b
	ret
	end method
	method print
	push "Color::"
	cthis getname
	pop $b
	popax
	add $a,$b
	push " (r,g,b,a) = ("
	pop $b
	popax
	add $a,$b
	push r
	pop $b
	popax
	add $a,$b
	push ","
	pop $b
	popax
	add $a,$b
	push g
	pop $b
	popax
	add $a,$b
	push ","
	pop $b
	popax
	add $a,$b
	push b
	pop $b
	popax
	add $a,$b
	push ","
	pop $b
	popax
	add $a,$b
	push a
	pop $b
	popax
	add $a,$b
	push ")"
	pop $b
	popax
	add $a,$b
	call engine,print
	end method
	end class

	class classasker
	parent newvars
	method init
	clparent newvars,init
	new string,sfuncyes
	push "null"
	pop sfuncyes
	new string,sfuncno
	push "null"
	pop sfuncno
	new string,ssndask
	new string,ssndyes
	new string,ssndno
	new classsound,clsnd
	end method
	method reset
	push "null"
	pop sfuncyes
	push "null"
	pop sfuncno
	call buts,resetall
	end method
	method setfuncs
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	pop sfuncyes
	push $2
	pop sfuncno
	end method
	method fxonmovon
	localstring $1
	pop $1
	push $1
	call buts,sfxonmovon
	end method
	method setmouse
	localstring $1
	pop $1
	push "yes"
	push $1
	call buts,newmouse
	push "no"
	push $1
	call buts,newmouse
	end method
	method load
	localstring $1
	localint $2
	pop $2
	pop $1
	new classbutton,buts
	push $1
	push $2
	push "null"
	call buts,build
	call engine,actclassname
	push "butclick"
	call buts,transclickfunc
	call engine,actclassname
	push "butmovon"
	call buts,transmovonfunc
	call buts,disableall
	end method
	method ask
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $4
	push $5
	cthis setfuncs
	push $1
	push $2
	push $3
	cthis ask2
	end method
	method ask2
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	pop ssndask
	push $2
	pop ssndyes
	push $3
	pop ssndno
	call gameapi,pause
	call buts,benableall
	push "bkg"
	call buts,pause
	call clsnd,creset
	push $1
	call clsnd,cbplay
	cthis getname
	push "_ask"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method butmovon
	localstring $1
	pop $1
	push $1
	push "yes"
	cmpje
	cmp0
	je l1554
	push ssndask
	spushs
	push 0
	spop $a
	call [$a],stop
	push ssndyes
	call clsnd,cbplay
	jmp l1553
l1554:
	push $1
	push "no"
	cmpje
	cmp0
	je l1556
	push ssndask
	spushs
	push 0
	spop $a
	call [$a],stop
	push ssndno
	call clsnd,cbplay
l1556:
l1553:
	end method
	method butclick
	localstring $1
	pop $1
	push $1
	push "bkg"
	cmpje
	cmp0
	je l1558
	ret
l1558:
	call gameapi,resume
	call buts,disableall
	push 0
	call clsnd,cactsndstop
	push $1
	push "yes"
	cmpje
	cmp0
	je l1560
	push sfuncyes
	push "null"
	cmpjne
	jmp l1562
l1560:
	push 0
	jmp l1562
l1561:
	push 1
l1562:
	cmp0
	je l1563
	push sfuncyes
	spushs
	spop $d
	cthis [$d]
	cthis getname
	push "_yes"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	jmp l1559
l1563:
	push $1
	push "no"
	cmpje
	cmp0
	je l1565
	push sfuncno
	push "null"
	cmpjne
	jmp l1567
l1565:
	push 0
	jmp l1567
l1566:
	push 1
l1567:
	cmp0
	je l1568
	push sfuncno
	spushs
	spop $d
	cthis [$d]
	cthis getname
	push "_no"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
l1568:
l1559:
	end method
	method disabled
	call buts,disabled
	end method
	method setcursorpos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call buts,setcursorpos
	end method
	end class

	class classplacepointer
	method init
	new anima,anpointer
	push "onfinish"
	push "classplacepointer0"
	call anpointer,addmethod
	new int,_iz
	push 1000
	pop _iz
	end method
	method classplacepointer0
	push 1
	popax
	sub 0,$a
	cthis play
	end method
	method load
	localstring $1
	pop $1
	push $1
	call anpointer,load
	push _iz
	cthis setz
	call anpointer,hide
	end method
	method setz
	localint $1
	pop $1
	push $1
	pop _iz
	push $1
	call anpointer,setz
	end method
	method stop
	push 0
	call anpointer,stop
	end method
	method stoph
	push 0
	call anpointer,stop
	call anpointer,hide
	end method
	method show
	localint $1
	localint $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	call anpointer,setpos
	push $3
	call anpointer,play
	end method
	method move
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	call anpointer,move
	end method
	method showob
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getcx
	push $1
	spushs
	spop $a
	call [$a],getcy
	push $2
	cthis show
	end method
	method showpob
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getpx
	push $1
	spushs
	spop $a
	call [$a],getpy
	push $2
	cthis show
	end method
	end class

	class SimpleCounter
	method init
	localint $1
	pop $1
	push "length"
	push $1
	cthis var2
	new int,iid
	push 0
	pop iid
	end method
	method next
	push iid
	push 1
	pop $b
	popax
	add $a,$b
	push length
	pop $b
	popax
	div $a,$b
	push $d
	pop iid
	push iid
	end method
	method set
	localint $1
	pop $1
	push $1
	pop iid
	end method
	method reset
	push 0
	pop iid
	end method
	method get
	push iid
	end method
	end class

	module clstrdigit
	method init
	end method
	method getdigit
	localint $1
	localint $2
	pop $2
	pop $1
	localstring $3
	push $1
	pop $3
l1569:
	call $3,length
	push $2
	cmpjl
	cmp0
	je l1570
	push "0"
	push $3
	pop $b
	popax
	add $a,$b
	pop $3
	jmp l1569
l1570:
	push $3
	ret
	end method
	method gettime
	localint $1
	localstring $2
	pop $2
	pop $1
	push $1
	cthis geth
	push $1
	cthis getm
	push $1
	cthis gets
	push "h"
	call $2,contains
	push "m"
	call $2,contains
	push "s"
	call $2,contains
	cthis getstime
	ret
	end method
	method getstime
	localint $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	localstring $7
	push ""
	pop $7
	push $4
	cmp0
	je l1572
	push $1
	popax
	add $7,$a
	pop $7
l1572:
	push $5
	cmp0
	je l1574
	push $4
	cmp0
	je l1576
	push ":"
	jmp l1575
l1576:
	push ""
l1575:
	push $2
	push 2
	cthis getdigit
	pop $b
	popax
	add $a,$b
	popax
	add $7,$a
	pop $7
l1574:
	push $6
	cmp0
	je l1578
	push $4
	cmp0
	jne l1580
	push $5
	jmp l1581
l1579:
	push 0
	jmp l1581
l1580:
	push 1
l1581:
	cmp0
	je l1583
	push ":"
	jmp l1582
l1583:
	push ""
l1582:
	push $3
	push 2
	cthis getdigit
	pop $b
	popax
	add $a,$b
	popax
	add $7,$a
	pop $7
l1578:
	push $7
	ret
	end method
	method geth
	localint $1
	pop $1
	push $1
	push 3600
	pop $b
	popax
	div $a,$b
	psax
	ret
	end method
	method getm
	localint $1
	pop $1
	push $1
	push 60
	pop $b
	popax
	div $a,$b
	psax
	push 60
	pop $b
	popax
	div $a,$b
	push $d
	ret
	end method
	method gets
	localint $1
	pop $1
	push $1
	push 60
	pop $b
	popax
	div $a,$b
	push $d
	ret
	end method
	method getns
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	cthis gets
	push $2
	cthis getdigit
	ret
	end method
	method getnm
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	cthis getm
	push $2
	cthis getdigit
	ret
	end method
	method getbinary
	localint $1
	pop $1
	localstring $2
	push ""
	pop $2
l1584:
	push $1
	push 0
	cmpja
	cmp0
	je l1585
	push ""
	push $1
	push 2
	pop $b
	popax
	div $a,$b
	push $d
	pop $b
	popax
	add $a,$b
	push $2
	pop $b
	popax
	add $a,$b
	pop $2
	push 2
	popax
	div $1,$a
	mov $1,$a
	jmp l1584
l1585:
	push $2
	ret
	end method
	method bintohex
	localstring $1
	pop $1
	localstring $2
	call $1,length
	push 4
	pop $b
	popax
	div $a,$b
	push $d
	spushs
	push 3
	cmpst
	jne l1587
	spop $a
	push "0"
	jmp l1586
l1587:
	push 2
	cmpst
	jne l1588
	spop $a
	push "00"
	jmp l1586
l1588:
	push 1
	cmpst
	jne l1589
	spop $a
	push "000"
	jmp l1586
l1589:
	spop $a
	push ""
l1586:
	pop $2
	push $2
	push $1
	pop $b
	popax
	add $a,$b
	pop $1
	push ""
	pop $2
	localint $3
	push 0
	pop $3
l1590:
	push $3
	call $1,length
	cmpjl
	cmp0
	je l1591
	jmp l1593
l1592:
	push 4
	popax
	add $3,$a
	pop $3
	jmp l1590
l1593:
	push $3
	push 4
	call $1,getb
	spushs
	push "0000"
	cmpst
	jne l1595
	spop $a
	push "0"
	jmp l1594
l1595:
	push "0001"
	cmpst
	jne l1596
	spop $a
	push "1"
	jmp l1594
l1596:
	push "0010"
	cmpst
	jne l1597
	spop $a
	push "2"
	jmp l1594
l1597:
	push "0011"
	cmpst
	jne l1598
	spop $a
	push "3"
	jmp l1594
l1598:
	push "0100"
	cmpst
	jne l1599
	spop $a
	push "4"
	jmp l1594
l1599:
	push "0101"
	cmpst
	jne l1600
	spop $a
	push "5"
	jmp l1594
l1600:
	push "0110"
	cmpst
	jne l1601
	spop $a
	push "6"
	jmp l1594
l1601:
	push "0111"
	cmpst
	jne l1602
	spop $a
	push "7"
	jmp l1594
l1602:
	push "1000"
	cmpst
	jne l1603
	spop $a
	push "8"
	jmp l1594
l1603:
	push "1001"
	cmpst
	jne l1604
	spop $a
	push "9"
	jmp l1594
l1604:
	push "1010"
	cmpst
	jne l1605
	spop $a
	push "A"
	jmp l1594
l1605:
	push "1011"
	cmpst
	jne l1606
	spop $a
	push "B"
	jmp l1594
l1606:
	push "1100"
	cmpst
	jne l1607
	spop $a
	push "C"
	jmp l1594
l1607:
	push "1101"
	cmpst
	jne l1608
	spop $a
	push "D"
	jmp l1594
l1608:
	push "1110"
	cmpst
	jne l1609
	spop $a
	push "E"
	jmp l1594
l1609:
	push "1111"
	cmpst
	jne l1610
	spop $a
	push "F"
	jmp l1594
l1610:
	spop $a
l1594:
	popax
	add $2,$a
	pop $2
	jmp l1592
l1591:
	push $2
	end method
	end module

	method getbinary
	cthis get
	clparent clstrdigit,getbinary
	end method
	method getdigit
	localint $1
	pop $1
	cthis get
	push $1
	clparent clstrdigit,getdigit
	end method
	method getbindigit
	localint $1
	pop $1
	cthis getbinary
	push $1
	clparent clstrdigit,getdigit
	end method
	class Text
	method init
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	localint $7
	localint $8
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push "null"
	cmpje
	cmp0
	je l1612
	push sgmfontfile
	pop $1
l1612:
	push ".ttf"
	call $1,contains
	cmp0
	je l1614
	new font,_fnt
	push $1
	push $2
	call _fnt,load
	push "_fnt"
	pop $1
l1614:
	new int,iR
	push $3
	pop iR
	new int,iG
	push $4
	pop iG
	new int,iB
	push $5
	pop iB
	new int,iFontSize
	push $2
	pop iFontSize
	new text,txt
	push $1
	call txt,setfont
	push $8
	call txt,setz
	push $6
	push $7
	call txt,setpos
	call txt,show
	new text,txtbg
	call txtbg,hide
	end method
	method hide
	call txt,hide
	end method
	method show
	call txt,show
	end method
	method setpos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call txt,setpos
	end method
	method set
	localstring $1
	pop $1
	push $1
	call txt,set
	push iR
	push iG
	push iB
	call txt,createtxt
	end method
	method get
	call txt,get
	ret
	end method
	method setbg
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	call txt,getpx
	push iFontSize
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call txt,getpy
	push iFontSize
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call txt,getw
	push iFontSize
	pop $b
	popax
	add $a,$b
	push iFontSize
	push 2
	pop $b
	popax
	mul $a,$b
	push $1
	push $2
	push $3
	push $4
	call txtbg,setbkg
	push 1
	push 255
	push 255
	push 255
	push 128
	call txtbg,setborders
	call txtbg,show
	end method
	method operator=
	localstring $1
	pop $1
	push $1
	cthis set
	end method
	method move
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call txt,move
	end method
	end class

	class Cypher
	parent Text
	method init
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	localint $7
	localint $8
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	push $5
	push $6
	push $7
	push $8
	clparent Text,init
	push 0
	cthis set
	end method
	method add
	localint $1
	pop $1
	push $1
	cthis get
	pop $b
	popax
	add $a,$b
	cthis set
	end method
	method iget
	cthis get
	spushs
	spop $h
	call $h,to_i
	end method
	method operator+
	localint $1
	pop $1
	push $1
	cthis add
	end method
	method operator++
	push 1
	cthis add
	end method
	method operator--
	push 1
	popax
	sub 0,$a
	cthis add
	end method
	method operator-
	localint $1
	pop $1
	push $1
	popax
	sub 0,$a
	cthis add
	end method
	method operator=
	localint $1
	pop $1
	push $1
	cthis set
	end method
	method operator==
	localint $1
	pop $1
	cthis get
	push $1
	cmpje
	end method
	method operator!=
	localint $1
	pop $1
	cthis get
	push $1
	cmpjne
	end method
	method operator>
	localint $1
	pop $1
	cthis get
	push $1
	cmpja
	end method
	method operator<
	localint $1
	pop $1
	cthis get
	push $1
	cmpjl
	end method
	end class

	class SecCounter
	method init
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	new string,sdigit
	push $1
	pop sdigit
	push A
	push "istarttime"
	push $2
	push "idtime"
	push $3
	push "itime"
	push 0
	cthis vars2
	cthis reset
	push "timcyk"
	push 1000
	push 1
	push "SecCounter0"
	cthis cnewtimerfin
	end method
	method SecCounter0
	cthis play
	cthis getbuildername
	spushs
	spop $a
	call [$a],tick
	end method
	method play
	call timcyk,play
	end method
	method stop
	push 0
	call timcyk,stop
	end method
	method sgettime
	push itime
	push sdigit
	call clstrdigit,gettime
	ret
	end method
	method gettime
	push itime
	ret
	end method
	method tick
	push idtime
	cthis update
	end method
	method reset
	push istarttime
	pop itime
	end method
	method update
	localint $1
	pop $1
	push $1
	popax
	add itime,$a
	pop itime
	end method
	end class

	class TextTimeCounter
	parent Text
	parent SecCounter
	method init
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	localint $7
	localint $8
	localstring $9
	localint $10
	localint $11
	pop $11
	pop $10
	pop $9
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	push $5
	push $6
	push $7
	push $8
	clparent Text,init
	push $9
	push $10
	push $11
	clparent SecCounter,init
	cthis reset
	push 0
	cthis update
	end method
	method update
	localint $1
	pop $1
	push $1
	clparent SecCounter,update
	cthis sgettime
	cthis set
	push itime
	push 0
	cmpjle
	cmp0
	je l1616
	push idtime
	push 0
	cmpjl
	jmp l1618
l1616:
	push 0
	jmp l1618
l1617:
	push 1
l1618:
	cmp0
	je l1619
	cthis getname
	push "_finish"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
l1619:
	end method
	end class

	class gfxObject
	method init
	localstring $1
	pop $1
	new string,sgfxobj
	push $1
	pop sgfxobj
	end method
	method setpos
	push sgfxobj
	spushs
	spop $a
	call [$a],setpos
	end method
	method move
	push sgfxobj
	spushs
	spop $a
	call [$a],move
	end method
	method getpos
	push sgfxobj
	spushs
	spop $a
	call [$a],getpos
	end method
	method getposx
	push sgfxobj
	spushs
	spop $a
	call [$a],getposx
	end method
	method getposy
	push sgfxobj
	spushs
	spop $a
	call [$a],getposy
	end method
	method getpx
	push sgfxobj
	spushs
	spop $a
	call [$a],getpx
	end method
	method getpy
	push sgfxobj
	spushs
	spop $a
	call [$a],getpy
	end method
	method getw
	push sgfxobj
	spushs
	spop $a
	call [$a],getw
	end method
	method geth
	push sgfxobj
	spushs
	spop $a
	call [$a],geth
	end method
	method getcx
	push sgfxobj
	spushs
	spop $a
	call [$a],getcx
	end method
	method getcy
	push sgfxobj
	spushs
	spop $a
	call [$a],getcy
	end method
	method getex
	push sgfxobj
	spushs
	spop $a
	call [$a],getex
	end method
	method getey
	push sgfxobj
	spushs
	spop $a
	call [$a],getey
	end method
	method lodx
	push sgfxobj
	spushs
	spop $a
	call [$a],lodx
	end method
	method lody
	push sgfxobj
	spushs
	spop $a
	call [$a],lody
	end method
	method setz
	push sgfxobj
	spushs
	spop $a
	call [$a],setz
	end method
	method getz
	push sgfxobj
	spushs
	spop $a
	call [$a],getz
	end method
	method show
	push sgfxobj
	spushs
	spop $a
	call [$a],show
	end method
	method hide
	push sgfxobj
	spushs
	spop $a
	call [$a],hide
	end method
	method isvisible
	push sgfxobj
	spushs
	spop $a
	call [$a],isvisible
	end method
	method isin
	push sgfxobj
	spushs
	spop $a
	call [$a],isin
	end method
	end class

	class gfxSquare
	parent Color
	parent gfxObject
	method init
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	clparent Color,init
	push A
	push "w"
	push "h"
	cthis vars
	push $3
	pop w
	push $4
	pop h
	new img,imggfx
	push $1
	push $2
	call imggfx,setpos
	push "imggfx"
	clparent gfxObject,init
	end method
	method build
	push w
	push h
	push r
	push g
	push b
	push a
	call imggfx,create
	end method
	method shadow
	localint $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	localdef $4
	localdef $5
	call imggfx,getpos
	pop $5
	pop $4
	push 0
	push 0
	call imggfx,setpos
	new img,_img1
	new img,_img2
	call imggfx,getw
	push 0
	cmpja
	cmp0
	je l1621
	push w
	push h
	cthis transparent
	call _img1,create
	push "imggfx"
	call _img1,blit
	jmp l1620
l1621:
	push w
	push h
	cthis get
	call _img1,create
l1620:
	push w
	push h
	cthis black
	push $3
	call _img2,create
	push $1
	push 0
	cmpjl
	cmp0
	je l1623
	push $1
	popax
	sub 0,$a
	push 0
	call _img1,move
	push $1
	popax
	add $4,$a
	pop $4
	jmp l1622
l1623:
	push $1
	push 0
	call _img2,move
l1622:
	push $2
	push 0
	cmpjl
	cmp0
	je l1625
	push 0
	push $2
	popax
	sub 0,$a
	call _img1,move
	push $2
	popax
	add $5,$a
	pop $5
	jmp l1624
l1625:
	push 0
	push $2
	call _img2,move
l1624:
	call $1,abs
	popax
	add w,$a
	pop w
	call $2,abs
	popax
	add h,$a
	pop h
	push w
	push h
	cthis transparent
	call imggfx,create
	push "_img2"
	call imggfx,blit
	push "_img1"
	call imggfx,blit
	delete _img1
	delete _img2
	push $4
	push $5
	call imggfx,move
	end method
	method blackborder
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $1
	cthis black
	push $2
	cthis border
	end method
	method border
	localint $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	localdef $7
	localdef $8
	call imggfx,getpos
	pop $8
	pop $7
	push 0
	push 0
	call imggfx,setpos
	new img,_img
	call imggfx,getw
	push 0
	cmpja
	cmp0
	je l1627
	push w
	push h
	cthis transparent
	call _img,create
	push "imggfx"
	call _img,blit
	jmp l1626
l1627:
	push w
	push h
	cthis get
	call _img,create
l1626:
	push $1
	push $2
	call _img,move
	push 2
	push $1
	pop $b
	popax
	mul $a,$b
	popax
	add w,$a
	pop w
	push 2
	push $1
	pop $b
	popax
	mul $a,$b
	popax
	add h,$a
	pop h
	push w
	push h
	push $3
	push $4
	push $5
	push $6
	call imggfx,create
	push "_img"
	call imggfx,blit
	delete _img
	push $7
	push $8
	call imggfx,move
	end method
	end class

	class Rect
	method init
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push A
	push "x"
	push "y"
	push "w"
	push "h"
	cthis vars
	push $1
	push $2
	push $3
	push $4
	cthis set
	new vector,vecgr
	push "string"
	call vecgr,type
	push "gmimgvec"
	call vecgr,add
	end method
	method x2
	push x
	push w
	pop $b
	popax
	add $a,$b
	end method
	method y2
	push y
	push h
	pop $b
	popax
	add $a,$b
	end method
	method set
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	pop x
	push $2
	pop y
	push $3
	pop w
	push $4
	pop h
	end method
	method setborders
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	pop x
	push $2
	pop y
	push $3
	push $1
	pop $b
	popax
	sub $a,$b
	pop w
	push $4
	push y
	pop $b
	popax
	sub $a,$b
	pop h
	end method
	method fit
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],gettype
	call vecgr,contains
	cmp0
	je l1629
	localdef $2
	push x
	push $1
	spushs
	spop $a
	call [$a],_getpx
	pop $b
	popax
	sub $a,$b
	pop $2
	push $2
	push 0
	cmpja
	cmp0
	je l1631
	push $1
	spushs
	push $2
	push 0
	spop $a
	call [$a],move
l1631:
	localdef $3
	push y
	push $1
	spushs
	spop $a
	call [$a],_getpy
	pop $b
	popax
	sub $a,$b
	pop $3
	push $3
	push 0
	cmpja
	cmp0
	je l1633
	push $1
	spushs
	push 0
	push $3
	spop $a
	call [$a],move
l1633:
	jmp l1628
l1629:
	localdef $2
	push x
	push $1
	spushs
	spop $a
	call [$a],getpx
	pop $b
	popax
	sub $a,$b
	pop $2
	push $2
	push 0
	cmpja
	cmp0
	je l1635
	push $1
	spushs
	push $2
	push 0
	spop $a
	call [$a],move
l1635:
	localdef $3
	push y
	push $1
	spushs
	spop $a
	call [$a],getpy
	pop $b
	popax
	sub $a,$b
	pop $3
	push $3
	push 0
	cmpja
	cmp0
	je l1637
	push $1
	spushs
	push 0
	push $3
	spop $a
	call [$a],move
l1637:
l1628:
	cthis x2
	push $1
	spushs
	spop $a
	call [$a],getex
	pop $b
	popax
	sub $a,$b
	pop $2
	push $2
	push 0
	cmpjl
	cmp0
	je l1639
	push $1
	spushs
	push $2
	push 0
	spop $a
	call [$a],move
l1639:
	cthis y2
	push $1
	spushs
	spop $a
	call [$a],getey
	pop $b
	popax
	sub $a,$b
	pop $3
	push $3
	push 0
	cmpjl
	cmp0
	je l1641
	push $1
	spushs
	push 0
	push $3
	spop $a
	call [$a],move
l1641:
	end method
	method fitrand
	localstring $1
	pop $1
	push $1
	spushs
	push x
	push w
	push $1
	spushs
	spop $a
	call [$a],getw
	pop $b
	popax
	sub $a,$b
	spushs
	spop $h
	call $h,rand
	pop $b
	popax
	add $a,$b
	push y
	push h
	push $1
	spushs
	spop $a
	call [$a],geth
	pop $b
	popax
	sub $a,$b
	spushs
	spop $h
	call $h,rand
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],ansetbpos
	end method
	method fitgrouprand
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l1642:
	push $2
	push $1
	spushs
	spop $a
	call [$a],size
	cmpjl
	cmp0
	je l1643
	jmp l1645
l1644:
	add $2,1
	pop $2
	jmp l1642
l1645:
	push $1
	spushs
	push $2
	spop $a
	call [$a],get
	cthis fitrand
	jmp l1644
l1643:
	end method
	method fitgroup
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l1646:
	push $2
	push $1
	spushs
	spop $a
	call [$a],size
	cmpjl
	cmp0
	je l1647
	jmp l1649
l1648:
	add $2,1
	pop $2
	jmp l1646
l1649:
	push $1
	spushs
	push $2
	spop $a
	call [$a],get
	cthis fit
	jmp l1648
l1647:
	end method
	method isin
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push x
	cmpjae
	cmp0
	je l1650
	push $1
	push x
	push w
	pop $b
	popax
	add $a,$b
	cmpjl
	cmp0
	je l1650
	push $2
	push y
	cmpjae
	cmp0
	je l1650
	push $2
	push y
	push h
	pop $b
	popax
	add $a,$b
	cmpjl
	jmp l1652
l1650:
	push 0
	jmp l1652
l1651:
	push 1
l1652:
	end method
	end class

	class ImgRect
	method init
	push A
	push "ix"
	push 0
	push "iy"
	push 0
	push "iw"
	push 0
	push "ih"
	push 0
	push "bvis"
	push 1
	push "iz"
	push 0
	cthis vars2
	end method
	method setpos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	pop ix
	push $2
	pop iy
	end method
	method move
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	popax
	add ix,$a
	pop ix
	push $2
	popax
	add iy,$a
	pop iy
	end method
	method getpos
	push ix
	push iy
	ret
	end method
	method getposx
	push ix
	end method
	method getposy
	push iy
	end method
	method getpx
	push ix
	end method
	method getpy
	push iy
	end method
	method getw
	push iw
	end method
	method geth
	push ih
	end method
	method getcx
	push ix
	push iw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	end method
	method getcy
	push iy
	push ih
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	end method
	method getex
	push ix
	push iw
	pop $b
	popax
	add $a,$b
	end method
	method getey
	push iy
	push ih
	pop $b
	popax
	add $a,$b
	end method
	method lodx
	push 0
	end method
	method lody
	push 0
	end method
	method setz
	localint $1
	pop $1
	push $1
	pop iz
	end method
	method getz
	push iz
	end method
	method show
	push 1
	pop bvis
	end method
	method hide
	push 0
	pop bvis
	end method
	method isvisible
	push bvis
	end method
	method isin
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $3
	push 0
	cmpje
	cmp0
	jne l1655
	cthis isvisible
	jmp l1656
l1654:
	push 0
	jmp l1656
l1655:
	push 1
l1656:
	cmp0
	je l1657
	push $1
	push ix
	cmpjae
	cmp0
	je l1658
	push $1
	push ix
	push iw
	pop $b
	popax
	add $a,$b
	cmpjl
	cmp0
	je l1658
	push $2
	push iy
	cmpjae
	cmp0
	je l1658
	push $2
	push iy
	push ih
	pop $b
	popax
	add $a,$b
	cmpjl
	jmp l1660
l1658:
	push 0
	jmp l1660
l1659:
	push 1
l1660:
	jmp l1653
l1657:
	push 0
l1653:
	end method
	method setrect
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	pop ix
	push $2
	pop iy
	push $3
	push $1
	pop $b
	popax
	sub $a,$b
	pop iw
	push $4
	push $2
	pop $b
	popax
	sub $a,$b
	pop ih
	end method
	method print
	push "x: "
	push ix
	pop $b
	popax
	add $a,$b
	push ", y: "
	pop $b
	popax
	add $a,$b
	push iy
	pop $b
	popax
	add $a,$b
	push ", w: "
	pop $b
	popax
	add $a,$b
	push iw
	pop $b
	popax
	add $a,$b
	push ", h: "
	pop $b
	popax
	add $a,$b
	push ih
	pop $b
	popax
	add $a,$b
	spushs
	spop $h
	call $h,print
	end method
	method operator=
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getpx
	push $1
	spushs
	spop $a
	call [$a],getpy
	push $1
	spushs
	spop $a
	call [$a],getw
	push $1
	spushs
	spop $a
	call [$a],geth
	push $1
	spushs
	spop $a
	call [$a],getz
	push $1
	spushs
	spop $a
	call [$a],isvisible
	pop bvis
	pop iz
	pop ih
	pop iw
	pop iy
	pop ix
	end method
	end class

	class classfadeinout
	method init
	new timer,timf
	new string,_sob
	new int,_istep
	new int,_ival
	new int,_ib1
	new int,_ib2
	new string,_sfun
	new string,_sfunfin
	new string,_sobfin
	push "onfinish"
	push "_ctimffin"
	call timf,addmethod
	end method
	method _cfinito
	localint $1
	pop $1
	push _sob
	spushs
	push _sfun
	spushs
	push $1
	spop $d
	spop $a
	call [$a],[$d]
	push _sfunfin
	push "null"
	cmpjne
	cmp0
	je l1662
	push _sobfin
	push "null"
	cmpje
	cmp0
	je l1664
	push _sfunfin
	spushs
	spop $d
	cthis [$d]
	jmp l1663
l1664:
	push _sobfin
	spushs
	push _sfunfin
	spushs
	spop $d
	spop $a
	call [$a],[$d]
l1663:
l1662:
	end method
	method _ctimffin
	push _istep
	popax
	add _ival,$a
	pop _ival
	push _ival
	push _ib2
	cmpja
	cmp0
	je l1666
	push _ib2
	cthis _cfinito
	jmp l1665
l1666:
	push _ival
	push _ib1
	cmpjl
	cmp0
	je l1668
	push _ib1
	cthis _cfinito
	jmp l1667
l1668:
	push _sob
	spushs
	push _sfun
	spushs
	push _ival
	spop $d
	spop $a
	call [$a],[$d]
	cthis play
l1667:
l1665:
	end method
	method _play
	localint $1
	localint $2
	localstring $3
	localstring $4
	localint $5
	localint $6
	localstring $7
	localstring $8
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $7
	pop _sobfin
	push $8
	pop _sfunfin
	push $5
	pop _ib1
	push $6
	pop _ib2
	localint $9
	call $2,abs
	pop $9
	push $1
	push 0
	cmpjle
	cmp0
	jne l1671
	push $9
	push $5
	cmpje
	cmp0
	jne l1671
	push $9
	push $6
	cmpja
	jmp l1672
l1670:
	push 0
	jmp l1672
l1671:
	push 1
l1672:
	cmp0
	je l1673
	ret
l1673:
	push $4
	pop _sfun
	push $1
	call timf,setcycle
	push $3
	pop _sob
	push $2
	push 0
	cmpja
	cmp0
	je l1675
	push _ib1
	pop _ival
	jmp l1674
l1675:
	push $2
	push 0
	cmpjl
	cmp0
	je l1677
	push _ib2
	pop _ival
	jmp l1676
l1677:
	ret
l1676:
l1674:
	push $3
	spushs
	push $4
	spushs
	push _ival
	spop $d
	spop $a
	call [$a],[$d]
	push $2
	pop _istep
	call timf,play
	end method
	method imgtransparency
	localint $1
	localint $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push "transparency"
	push 0
	push 255
	push "null"
	push $4
	cthis _play
	end method
	method setopacity
	localint $1
	localint $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push "setopacity"
	push 0
	push 255
	push "null"
	push $4
	cthis _play
	end method
	method sndvolume
	localint $1
	localint $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push "setvol"
	push 0
	push 100
	push "null"
	push $4
	cthis _play
	end method
	method isplaying
	call timf,isplaying
	end method
	end class

	class CutScene
	parent gfxObject
	method init
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	new int,X1
	new int,Y1
	new int,X2
	new int,Y2
	new img,_gsq
	push $1
	push $2
	push $3
	push $4
	cthis build
	push "_gsq"
	clparent gfxObject,init
	new string,_sfunc1
	new string,_sob1
	new string,_sfunc2
	new string,_sob2
	new int,_idelay
	push 10
	pop _idelay
	new classfadeinout,_clfio
	end method
	method build
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	pop Y2
	pop X2
	pop Y1
	pop X1
	push X2
	push X1
	pop $b
	popax
	sub $a,$b
	push Y2
	push Y1
	pop $b
	popax
	sub $a,$b
	cthis black
	push 255
	call _gsq,create
	push X1
	push Y1
	call _gsq,setpos
	call _gsq,hide
	push 0
	call _gsq,transparency
	end method
	method buildblack
	push X1
	push Y1
	push X2
	push Y2
	cthis build
	end method
	method buildfromfile
	localstring $1
	pop $1
	localdef $2
	cthis getz
	pop $2
	new img,_imtmp
	push $1
	call _imtmp,load
	push 255
	call _gsq,transparency
	push "_imtmp"
	call _gsq,blit
	delete _imtmp
	call _gsq,hide
	push 0
	call _gsq,transparency
	end method
	method buildfromscreen
	push 255
	call _gsq,transparency
	call _gsq,blitscreen
	call _gsq,hide
	push 0
	call _gsq,transparency
	end method
	method cloneto
	localstring $1
	pop $1
	push $1
	spushs
	push "_gsq"
	spop $a
	call [$a],clone
	end method
	method delay
	localint $1
	pop $1
	push $1
	pop _idelay
	end method
	method transparency
	localint $1
	pop $1
	push $1
	call _gsq,transparency
	end method
	method playfin
	localstring $1
	localstring $2
	pop $2
	pop $1
	push "null"
	push $1
	push "null"
	push $2
	cthis playobfin
	end method
	method playobfin
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push "null"
	cmpje
	cmp0
	je l1679
	call gameapi,getgamename
	jmp l1678
l1679:
	push $1
l1678:
	pop _sob1
	push $2
	pop _sfunc1
	push $3
	push "null"
	cmpje
	cmp0
	je l1681
	call gameapi,getgamename
	jmp l1680
l1681:
	push $3
l1680:
	pop _sob2
	push $4
	pop _sfunc2
	call _gsq,show
	push 0
	call _gsq,transparency
	push 1
	push _idelay
	cthis getname
	push "transparency"
	push 0
	push 255
	cthis getname
	push "CutScene0"
	call _clfio,_play
	end method
	method CutScene0
	push _sob1
	push _sfunc1
	cthis callfun
	call _gsq,show
	push 1
	push _idelay
	popax
	sub 0,$a
	cthis getname
	push "transparency"
	push 0
	push 255
	cthis getname
	push "_callfun2"
	call _clfio,_play
	end method
	method close
	localstring $1
	pop $1
	call gameapi,getgamename
	push $1
	cthis obclose
	end method
	method obclose
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	pop _sob1
	push $2
	pop _sfunc1
	push 0
	call _gsq,transparency
	call _gsq,show
	push 1
	push _idelay
	cthis getname
	push "transparency"
	push 0
	push 255
	cthis getname
	push "CutScene1"
	call _clfio,_play
	end method
	method CutScene1
	call _gsq,hide
	push _sob1
	push _sfunc1
	cthis callfun
	end method
	method enter
	localstring $1
	pop $1
	call gameapi,getgamename
	push $1
	cthis obenter
	end method
	method obenter
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	pop _sob2
	push $2
	pop _sfunc2
	push 255
	call _gsq,transparency
	call _gsq,show
	push 1
	push _idelay
	popax
	sub 0,$a
	cthis getname
	push "transparency"
	push 0
	push 255
	cthis getname
	push "_callfun2"
	call _clfio,_play
	end method
	method _callfun2
	call _gsq,hide
	push _sob2
	push _sfunc2
	cthis callfun
	end method
	method isplaying
	call _clfio,isplaying
	end method
	method show
	push 255
	call _gsq,transparency
	call _gsq,show
	end method
	end class

	method allchars
	push "a0 t_!@#$%^&*()_+-=[]\\|}{;':\",./<>?`~"
	end method
	class TextTyper
	parent classlocker
	parent gfxObject
	method init
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	localstring $6
	localint $7
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	clparent classlocker,init
	push $1
	push $2
	cthis checkfont
	pop $1
	new int,iR
	push $3
	pop iR
	new int,iG
	push $4
	pop iG
	new int,iB
	push $5
	pop iB
	new string,sChars
	push $6
	pop sChars
	new int,iLimit
	push $7
	pop iLimit
	push A
	push "Sdir"
	push "left"
	push "W"
	push 0
	push "iFontSize"
	push $2
	push "X"
	push 0
	push "Y"
	push 0
	cthis vars2
	new text,txt1
	push $1
	call txt1,setfont
	push ""
	call txt1,set
	new text,txt2
	push $1
	call txt2,setfont
	push "_"
	call txt2,set
	push iR
	push iG
	push iB
	call txt2,createtxt
	call txt2,hide
	new text,txtpass
	push $1
	call txtpass,setfont
	call txtpass,hide
	new int,bpass
	push 0
	pop bpass
	new string,_sob
	push "null"
	pop _sob
	new string,_sfun
	push "null"
	pop _sfun
	push "timcyk"
	push 300
	push 1
	push "fintimcyk"
	cthis cnewtimerfin
	push "txt1"
	clparent gfxObject,init
	end method
	method setaspasswd
	push 1
	pop bpass
	call txt1,hide
	call txt1,getz
	call txtpass,setz
	call txtpass,show
	cthis copytopass
	end method
	method copytopass
	localdef $1
	call txt1,get
	spushs
	spop $h
	call $h,length
	pop $1
	localstring $2
	push ""
	pop $2
	localint $3
	push 0
	pop $3
l1682:
	push $3
	push $1
	cmpjl
	cmp0
	je l1683
	jmp l1685
l1684:
	add $3,1
	pop $3
	jmp l1682
l1685:
	push "*"
	popax
	add $2,$a
	pop $2
	jmp l1684
l1683:
	push $2
	call txtpass,txtset
	call txt1,getpx
	call txt1,getpy
	call txtpass,setpos
	end method
	method setastext
	push 0
	pop bpass
	call txt1,show
	call txtpass,hide
	end method
	method isin
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	call txt1,isin
	end method
	method getcol
	push iR
	push iG
	push iB
	ret
	end method
	method fintimcyk
	cthis getlock
	cmp0
	je l1687
	ret
l1687:
	cthis updatecyk
	cthis play
	end method
	method updatecyk
	call txt2,isvisible
	cmp0
	je l1689
	call txt2,hide
	jmp l1688
l1689:
	call txt1,getex
	call txt1,getpy
	call txt2,setpos
	call txt2,show
l1688:
	end method
	method enable
	cthis unlock
	cthis updatecyk
	call timcyk,play
	end method
	method disable
	call txt2,hide
	push 0
	call timcyk,stop
	cthis lock
	end method
	method onenter
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	pop _sob
	push $2
	pop _sfun
	end method
	method setpos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	pop X
	push $2
	pop Y
	cthis get
	cthis updatetxt
	end method
	method move
	localint $1
	localint $2
	pop $2
	pop $1
	push X
	push $1
	pop $b
	popax
	add $a,$b
	push Y
	push $2
	pop $b
	popax
	add $a,$b
	cthis setpos
	end method
	method setz
	localint $1
	pop $1
	push $1
	call txt1,setz
	push $1
	call txt2,setz
	end method
	method get
	localstring $1
	call txt1,get
	pop $1
	call $1,length
	push 0
	cmpja
	cmp0
	je l1691
	push $1
	jmp l1690
l1691:
	push ""
l1690:
	end method
	method getpx
	call txt1,getpx
	end method
	method getpy
	call txt1,getpy
	end method
	method getcx
	call txt1,getcx
	end method
	method getcy
	call txt1,getcy
	end method
	method geth
	call txt1,geth
	end method
	method getey
	call txt1,getpy
	push iFontSize
	pop $b
	popax
	add $a,$b
	end method
	method clip
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	call txt1,clip
	push $1
	push $2
	push $3
	push $4
	call txt2,clip
	end method
	method length
	call txt1,get
	spushs
	spop $h
	call $h,length
	end method
	method set
	localstring $1
	pop $1
	push $1
	call txt1,set
	end method
	method txtset
	localstring $1
	pop $1
	push $1
	cthis getcol
	call txt1,txtsetcol
	end method
	method limit=
	localint $1
	pop $1
	push $1
	pop iLimit
	end method
	method onkeydown
	cthis getlock
	cmp0
	je l1693
	ret
l1693:
	cthis getname
	push "_ontype"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	push "enter"
	call keyboard,iskeydown
	cmp0
	je l1695
	cthis disable
	push _sob
	push _sfun
	cthis callfun
	cthis getname
	push "_onenter"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	ret
l1695:
	localstring $1
	push "t"
	call sChars,contains
	cmp0
	je l1697
	push "tab"
	call keyboard,iskey
	jmp l1699
l1697:
	push 0
	jmp l1699
l1698:
	push 1
l1699:
	cmp0
	je l1700
	push " "
	pop $1
	jmp l1696
l1700:
	call keyboard,getkey
	pop $1
l1696:
	localstring $2
	call txt1,get
	pop $2
	call keyboard,isalpha
	cmp0
	je l1702
	push "a"
	call sChars,contains
	jmp l1704
l1702:
	push 0
	jmp l1704
l1703:
	push 1
l1704:
	cmp0
	jne l1706
	call keyboard,isdigit
	cmp0
	je l1707
	push "0"
	call sChars,contains
	jmp l1709
l1707:
	push 0
	jmp l1709
l1708:
	push 1
l1709:
	cmp0
	jne l1706
	push $1
	call sChars,contains
	jmp l1710
l1705:
	push 0
	jmp l1710
l1706:
	push 1
l1710:
	cmp0
	je l1711
	push iLimit
	push 0
	cmpjle
	cmp0
	jne l1714
	push iLimit
	call $2,length
	cmpja
	jmp l1715
l1713:
	push 0
	jmp l1715
l1714:
	push 1
l1715:
	jmp l1716
l1711:
	push 0
	jmp l1716
l1712:
	push 1
l1716:
	cmp0
	je l1717
	push $2
	push $1
	pop $b
	popax
	add $a,$b
	cthis updatetxt
	cthis updatecyk
	jmp l1701
l1717:
	push "backspace"
	call keyboard,iskey
	cmp0
	je l1719
	call $2,length
	push 0
	cmpja
	jmp l1721
l1719:
	push 0
	jmp l1721
l1720:
	push 1
l1721:
	cmp0
	je l1722
	push 1
	call $2,strsube
	cthis updatetxt
	cthis updatecyk
l1722:
l1701:
	cthis getname
	push "_ontyped"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method updatetxt
	localstring $1
	pop $1
	push $1
	call txt1,set
	push iR
	push iG
	push iB
	call txt1,createtxt
	push Sdir
	push "center"
	cmpje
	cmp0
	je l1724
	push X
	push W
	call txt1,getw
	pop $b
	popax
	sub $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	push Y
	call txt1,setpos
	jmp l1723
l1724:
	push Sdir
	push "right"
	cmpje
	cmp0
	je l1726
	push X
	push W
	pop $b
	popax
	add $a,$b
	call txt1,getw
	pop $b
	popax
	sub $a,$b
	push Y
	call txt1,setpos
	jmp l1725
l1726:
	push X
	push Y
	call txt1,setpos
l1725:
l1723:
	push bpass
	cmp0
	je l1728
	cthis copytopass
l1728:
	cthis getname
	push "_onwrite"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	end class

	class ConTextTyper
	parent TextTyper
	parent ObjController
	method init
	clparent TextTyper,init
	clparent ObjController,init
	end method
	end class

	new string,sTextBoxTyperSys
	push "null"
	pop sTextBoxTyperSys
	class TextBoxTyper
	parent LObjController
	parent ImagePos
	method init
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	localstring $7
	localint $8
	localint $9
	localint $10
	localint $11
	localint $12
	pop $12
	pop $11
	pop $10
	pop $9
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	clparent LObjController,init
	clparent ImagePos,init
	new def,Font
	push $1
	push $2
	cthis checkfont
	pop Font
	push A
	push "Cols"
	push $10
	push $3
	pop $b
	popax
	div $a,$b
	psax
	push "Rows"
	push $11
	push $2
	push $12
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	div $a,$b
	psax
	push "X"
	push $8
	push "Y"
	push $9
	push "Row"
	push 0
	push "enablemove"
	push 1
	push "W"
	push $10
	push "insystem"
	push 0
	push "H"
	push $11
	push "isvisible"
	push 1
	push "clipx1"
	push $8
	push "clipy1"
	push $9
	push "clipx2"
	push 0
	push "clipy2"
	push 0
	push "clipped"
	push 0
	cthis vars2
	new def,Size
	push $2
	pop Size
	new def,Dy
	push $12
	pop Dy
	new def,Z
	push 0
	pop Z
	localstring $13
	new gmimgvec,grtt
	new gmimgvec,gren
	localint $14
	push 0
	pop $14
l1729:
	push $14
	push Rows
	cmpjl
	cmp0
	je l1730
	jmp l1732
l1731:
	add $14,1
	pop $14
	jmp l1729
l1732:
	push "tt"
	push $14
	pop $b
	popax
	add $a,$b
	pop $13
	push $13
	spushs
	push Font
	push $2
	push $4
	push $5
	push $6
	push $7
	push Cols
	spop $e
	new TextTyper,[$e]
	push $13
	spushs
	push $10
	spop $a
	call [$a],W=
	push $13
	spushs
	push "left"
	spop $a
	call [$a],Sdir=
	push $13
	spushs
	push $8
	push $9
	push $14
	push $2
	push $12
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	push $13
	call grtt,add
	jmp l1731
l1730:
	end method
	method settyper
	localint $1
	localstring $2
	localint $3
	localint $4
	localint $5
	localint $6
	localint $7
	localstring $8
	localstring $9
	pop $9
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	localint $10
	localint $11
	localstring $12
	localstring $13
	push ""
	pop $13
	push $1
	push 0
	cmpjl
	cmp0
	je l1734
	call grtt,last
	spushs
	spop $a
	call [$a],X
	pop $10
	call grtt,last
	spushs
	spop $a
	call [$a],getey
	push Dy
	pop $b
	popax
	add $a,$b
	pop $11
	call grtt,size
	pop $1
	push "tt"
	push $1
	pop $b
	popax
	add $a,$b
	call grtt,add
	jmp l1733
l1734:
	push $1
	call grtt,get
	pop $12
	push $12
	spushs
	spop $a
	call [$a],X
	pop $10
	push $12
	spushs
	spop $a
	call [$a],getpy
	pop $11
	push $12
	spushs
	spop $a
	call [$a],get
	pop $13
	push $12
	push 0
	push $3
	push $12
	spushs
	spop $a
	call [$a],iFontSize
	pop $b
	popax
	sub $a,$b
	call grtt,movefrom
	push $12
	spushs
	spop $d
	delete [$d]
l1733:
	push "tt"
	push $1
	pop $b
	popax
	add $a,$b
	pop $12
	push $12
	spushs
	push $2
	push $3
	push $5
	push $6
	push $7
	push $8
	push W
	push $4
	pop $b
	popax
	div $a,$b
	psax
	spop $e
	new TextTyper,[$e]
	push $12
	spushs
	push W
	spop $a
	call [$a],W=
	push $12
	spushs
	push $9
	spop $a
	call [$a],Sdir=
	push $12
	spushs
	push $13
	spop $a
	call [$a],updatetxt
	push $12
	spushs
	push Z
	spop $a
	call [$a],setz
	push $12
	spushs
	push $10
	push $11
	spop $a
	call [$a],setpos
	end method
	method move
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call grtt,move
	push $1
	push $2
	call gren,move
	push $1
	popax
	add X,$a
	pop X
	push $2
	popax
	add Y,$a
	pop Y
	end method
	method size
	call grtt,size
	end method
	method setz
	localint $1
	pop $1
	push $1
	pop Z
	push $1
	call grtt,setz
	push $1
	call gren,setz
	end method
	method getz
	push Z
	end method
	method show
	push 1
	pop isvisible
	call grtt,show
	end method
	method hide
	push 0
	pop isvisible
	call grtt,hide
	end method
	method clip
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push 1
	pop clipped
	push $1
	pop clipx1
	push $2
	pop clipy1
	push $3
	pop clipx2
	push $4
	pop clipy2
	localint $5
	push 0
	pop $5
l1735:
	push $5
	call grtt,size
	cmpjl
	cmp0
	je l1736
	jmp l1738
l1737:
	add $5,1
	pop $5
	jmp l1735
l1738:
	push $5
	call grtt,get
	spushs
	push $1
	push $2
	push $3
	push $4
	spop $a
	call [$a],clip
	jmp l1737
l1736:
	end method
	method getw
	push W
	end method
	method geth
	push H
	end method
	method enumerate
	localint $1
	pop $1
	localstring $2
	localstring $3
	localint $4
	push 0
	pop $4
l1739:
	push $4
	call grtt,size
	cmpjl
	cmp0
	je l1740
	jmp l1742
l1741:
	add $4,1
	pop $4
	jmp l1739
l1742:
	push "txte"
	push $4
	pop $b
	popax
	add $a,$b
	pop $2
	push $2
	spushs
	spop $e
	new text,[$e]
	push $2
	call gren,add
	push $2
	spushs
	push Z
	spop $a
	call [$a],setz
	push $2
	spushs
	push Font
	spop $a
	call [$a],setfont
	push $2
	spushs
	push ""
	push $4
	push 1
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	add $a,$b
	push "."
	pop $b
	popax
	add $a,$b
	call tt0,getcol
	spop $a
	call [$a],txtsetcol
	push $2
	spushs
	push X
	push $2
	spushs
	spop $a
	call [$a],getw
	pop $b
	popax
	sub $a,$b
	push $1
	pop $b
	popax
	sub $a,$b
	push Y
	push $4
	push Size
	push Dy
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	jmp l1741
l1740:
	end method
	method cut
	localint $1
	pop $1
	push $1
	pop Rows
	end method
	method enable
	cthis unlock
	cthis activateact
	end method
	method disable
	cthis lock
	push "disable"
	call grtt,eval
	end method
	method actual
	push "tt"
	push Row
	pop $b
	popax
	add $a,$b
	end method
	method activate
	localint $1
	pop $1
	cthis unlock
	push $1
	push 0
	cmpjae
	cmp0
	je l1744
	push $1
	push Rows
	cmpjl
	jmp l1746
l1744:
	push 0
	jmp l1746
l1745:
	push 1
l1746:
	cmp0
	je l1747
	push insystem
	cmp0
	je l1749
	push GAME
	spushs
	push sTextBoxTyperSys
	spop $a
	call [$a],isgmobj
	cmp0
	je l1751
	push sTextBoxTyperSys
	cthis getname
	cmpjne
	jmp l1753
l1751:
	push 0
	jmp l1753
l1752:
	push 1
l1753:
	cmp0
	je l1754
	push sTextBoxTyperSys
	spushs
	spop $a
	call [$a],deactivate
l1754:
	cthis getname
	pop sTextBoxTyperSys
l1749:
	cthis deactivate
	push $1
	pop Row
	push "tt"
	push Row
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],enable
	cthis getname
	push "_activate"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
l1747:
	end method
	method activateact
	push Row
	cthis activate
	end method
	method deactivate
	push "tt"
	push Row
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],disable
	end method
	method onkeydown
	cthis getlock
	cmp0
	je l1756
	ret
l1756:
	cthis getname
	push "_boxontype"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	push "enter"
	call keyboard,iskeydown
	cmp0
	je l1758
	localdef $1
	push Rows
	push 1
	pop $b
	popax
	sub $a,$b
	cthis getid
	pop $1
	call $1,clear
	call $1,length
	push 0
	cmpje
	cmp0
	je l1760
	push enablemove
	jmp l1762
l1760:
	push 0
	jmp l1762
l1761:
	push 1
l1762:
	cmp0
	je l1763
	localdef $2
	push Rows
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
l1764:
	push $2
	push Row
	push 1
	pop $b
	popax
	add $a,$b
	cmpja
	cmp0
	je l1765
	jmp l1767
l1766:
	sub $2,1
	pop $2
	jmp l1764
l1767:
	push $2
	push 1
	pop $b
	popax
	sub $a,$b
	cthis getid
	push $2
	cthis setid
	jmp l1766
l1765:
	push Row
	push 1
	pop $b
	popax
	add $a,$b
	push Rows
	cmpjl
	cmp0
	je l1769
	push ""
	push Row
	push 1
	pop $b
	popax
	add $a,$b
	cthis setid
l1769:
l1763:
	push Row
	push 1
	pop $b
	popax
	add $a,$b
	cthis activate
	jmp l1757
l1758:
	push "up"
	call keyboard,iskey
	cmp0
	je l1771
	push Row
	push 0
	cmpja
	jmp l1773
l1771:
	push 0
	jmp l1773
l1772:
	push 1
l1773:
	cmp0
	je l1774
	push Row
	push 1
	pop $b
	popax
	sub $a,$b
	cthis activate
	jmp l1770
l1774:
	push "down"
	call keyboard,iskey
	cmp0
	je l1776
	push Row
	push Rows
	push 1
	pop $b
	popax
	sub $a,$b
	cmpjl
	jmp l1778
l1776:
	push 0
	jmp l1778
l1777:
	push 1
l1778:
	cmp0
	je l1779
	push Row
	push 1
	pop $b
	popax
	add $a,$b
	cthis activate
	jmp l1775
l1779:
	push "pgdown"
	call keyboard,iskey
	cmp0
	je l1781
	push Row
	push Rows
	push 10
	pop $b
	popax
	sub $a,$b
	cmpjl
	cmp0
	je l1783
	push Row
	push 10
	pop $b
	popax
	add $a,$b
	cthis activate
	jmp l1782
l1783:
	push Rows
	push 1
	pop $b
	popax
	sub $a,$b
	cthis activate
l1782:
	jmp l1780
l1781:
	push "pgup"
	call keyboard,iskey
	cmp0
	je l1785
	push Row
	push 9
	cmpja
	cmp0
	je l1787
	push Row
	push 10
	pop $b
	popax
	sub $a,$b
	cthis activate
	jmp l1786
l1787:
	push 0
	cthis activate
l1786:
	jmp l1784
l1785:
	push "backspace"
	call keyboard,iskey
	cmp0
	jne l1790
	push "delete"
	call keyboard,iskey
	jmp l1791
l1789:
	push 0
	jmp l1791
l1790:
	push 1
l1791:
	cmp0
	je l1792
	cthis actual
	spushs
	spop $a
	call [$a],length
	push 0
	cmpje
	jmp l1794
l1792:
	push 0
	jmp l1794
l1793:
	push 1
l1794:
	cmp0
	je l1795
	push enablemove
	cmp0
	je l1797
	localdef $2
	push Row
	pop $2
l1798:
	push $2
	push Rows
	push 1
	pop $b
	popax
	sub $a,$b
	cmpjl
	cmp0
	je l1799
	jmp l1801
l1800:
	add $2,1
	pop $2
	jmp l1798
l1801:
	push $2
	push 1
	pop $b
	popax
	add $a,$b
	cthis getid
	push $2
	cthis setid
	jmp l1800
l1799:
	push ""
	push Rows
	push 1
	pop $b
	popax
	sub $a,$b
	cthis setid
l1797:
	push "backspace"
	call keyboard,iskey
	cmp0
	je l1803
	push Row
	push 1
	pop $b
	popax
	sub $a,$b
	cthis activate
l1803:
	jmp l1788
l1795:
	push "onkeydown"
	call grtt,eval
l1788:
l1784:
l1780:
l1775:
l1770:
l1757:
	end method
	method onmouselclick
	cthis getlock
	cmp0
	je l1805
	ret
l1805:
	localint $1
	localint $2
	call mouse,getpos
	pop $2
	pop $1
	push clipped
	cmp0
	je l1807
	push $1
	push $2
	push clipx1
	push clipy1
	push clipx2
	push clipy2
	call clsurf,isin
	jmp l1809
l1807:
	push 0
	jmp l1809
l1808:
	push 1
l1809:
	cmp0
	jne l1811
	push clipped
	neg
	cmp0
	je l1812
	push $1
	push $2
	push X
	push Y
	push W
	push H
	call clsurf,isin2
	jmp l1814
l1812:
	push 0
	jmp l1814
l1813:
	push 1
l1814:
	jmp l1815
l1810:
	push 0
	jmp l1815
l1811:
	push 1
l1815:
	cmp0
	je l1816
	cthis deactivate
	localint $3
	push 0
	pop $3
l1817:
	push $3
	cthis size
	cmpjl
	cmp0
	je l1818
	jmp l1820
l1819:
	add $3,1
	pop $3
	jmp l1817
l1820:
	push "tt"
	push $3
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getey
	push $2
	cmpja
	cmp0
	je l1822
	push $3
	cthis activate
	ret
l1822:
	jmp l1819
l1818:
	jmp l1806
l1816:
	cthis getname
	push "_OUTSIDE"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
l1806:
	end method
	method isin
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $3
	cmp0
	je l1824
	push isvisible
	neg
	jmp l1826
l1824:
	push 0
	jmp l1826
l1825:
	push 1
l1826:
	cmp0
	je l1827
	push 0
	ret
l1827:
	push $1
	push $2
	push X
	push Y
	push W
	push H
	call clsurf,isin2
	end method
	method getid
	localint $1
	pop $1
	push "tt"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],get
	end method
	method getact
	push "tt"
	push Row
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],get
	end method
	method idpx
	localint $1
	pop $1
	push "tt"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getpx
	end method
	method idpy
	localint $1
	pop $1
	push "tt"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],getpy
	end method
	method getpx
	push X
	end method
	method getpy
	push Y
	end method
	method get
	push 0
	cthis getfrom
	end method
	method getfrom
	localint $1
	pop $1
	push $1
	push ""
	cthis getlinesfrom
	end method
	method getlinesfrom
	localint $1
	localstring $2
	pop $2
	pop $1
	localstring $3
	push ""
	pop $3
	localint $4
	push $1
	pop $4
l1828:
	push $4
	call grtt,size
	cmpjl
	cmp0
	je l1829
	jmp l1831
l1830:
	add $4,1
	pop $4
	jmp l1828
l1831:
	push "tt"
	push $4
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],get
	push $2
	pop $b
	popax
	add $a,$b
	popax
	add $3,$a
	pop $3
	jmp l1830
l1829:
	push $3
	end method
	method getlines
	push 0
	push " "
	cthis getlinesfrom
	end method
	method nonempty
	localint $1
	pop $1
	localstring $2
l1832:
	push $1
	call grtt,size
	cmpjl
	cmp0
	je l1833
	jmp l1835
l1834:
	add $1,1
	pop $1
	jmp l1832
l1835:
	push "tt"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],get
	pop $2
	call $2,clear
	call $2,length
	push 0
	cmpja
	cmp0
	je l1837
	push $1
	ret
l1837:
	jmp l1834
l1833:
	push 1
	popax
	sub 0,$a
	end method
	method clear
	call grtt,txtreset
	end method
	method setid
	localstring $1
	localint $2
	pop $2
	pop $1
	call grtt,size
	push $2
	cmpjae
	cmp0
	je l1839
	push "tt"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	spop $a
	call [$a],txtset
l1839:
	end method
	method settext
	localint $1
	pop $1
l1840:
	push $1
	push 0
	cmpja
	cmp0
	je l1841
	sub $1,1
	pop $1
	push $1
	cthis setid
	jmp l1840
l1841:
	end method
	method copytodb
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],free
	localint $2
	push 0
	pop $2
l1842:
	push $2
	call grtt,size
	cmpjl
	cmp0
	je l1843
	jmp l1845
l1844:
	add $2,1
	pop $2
	jmp l1842
l1845:
	push $1
	spushs
	push $1
	spushs
	spop $a
	call [$a],addrow
	push 1
	pop $b
	popax
	sub $a,$b
	push $2
	call grtt,get
	spushs
	spop $a
	call [$a],get
	spop $a
	call [$a],add
	jmp l1844
l1843:
	end method
	method copyfromdb
	localstring $1
	pop $1
	push $1
	push 0
	push $1
	spushs
	spop $a
	call [$a],getrowsno
	cthis copyfromdbii
	end method
	method copyfromdbss
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $1
	spushs
	push $2
	spop $a
	call [$a],findbyrow
	push 1
	pop $b
	popax
	add $a,$b
	push $1
	spushs
	push $3
	spop $a
	call [$a],findbyrow
	cthis copyfromdbii
	end method
	method copyfromdbii
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $2
	push 1
	popax
	sub 0,$a
	cmpje
	cmp0
	jne l1848
	push $3
	push 1
	popax
	sub 0,$a
	cmpje
	jmp l1849
l1847:
	push 0
	jmp l1849
l1848:
	push 1
l1849:
	cmp0
	je l1850
	ret
l1850:
	cthis clear
	push $3
	push $2
	pop $b
	popax
	sub $a,$b
	cthis size
	cmpja
	cmp0
	je l1852
	push $2
	cthis size
	pop $b
	popax
	add $a,$b
	pop $3
l1852:
	localint $4
	push $2
	pop $4
l1853:
	push $4
	push $3
	cmpjl
	cmp0
	je l1854
	jmp l1856
l1855:
	add $4,1
	pop $4
	jmp l1853
l1856:
	push $1
	spushs
	push $4
	spop $a
	call [$a],getcolsno
	cmp0
	je l1858
	push $1
	spushs
	push $4
	push 0
	spop $a
	call [$a],get
	push $4
	push $2
	pop $b
	popax
	sub $a,$b
	cthis setid
l1858:
	jmp l1855
l1854:
	end method
	method copyfromdbrow
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	localint $4
	push $1
	spushs
	push $2
	spop $a
	call [$a],getcolsno
	pop $4
	push $4
	cthis size
	cmpja
	cmp0
	je l1860
	cthis size
	pop $4
l1860:
	localint $5
	push $3
	pop $5
l1861:
	push $5
	push $4
	cmpjl
	cmp0
	je l1862
	jmp l1864
l1863:
	add $5,1
	pop $5
	jmp l1861
l1864:
	push $1
	spushs
	push $2
	push $5
	spop $a
	call [$a],get
	push $5
	push $3
	pop $b
	popax
	sub $a,$b
	cthis setid
	jmp l1863
l1862:
	end method
	method save
	localstring $1
	pop $1
	new db,__tmpdb
	push "__tmpdb"
	cthis copytodb
	push "|"
	call __tmpdb,setseparator
	push $1
	call __tmpdb,save
	delete __tmpdb
	end method
	method load
	localstring $1
	pop $1
	new db,__tmpdb
	push $1
	call __tmpdb,load
	push "__tmpdb"
	cthis copyfromdb
	delete __tmpdb
	end method
	end class

	class GUITextBoxTyper
	parent TextBoxTyper
	method init
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	localstring $7
	localint $8
	localint $9
	localint $10
	localint $11
	localint $12
	pop $12
	pop $11
	pop $10
	pop $9
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	push $5
	push $6
	push $7
	push $8
	push $9
	push $10
	push $11
	push $12
	clparent TextBoxTyper,init
	push A
	push "rewinder"
	push "null"
	push "rewinderbg"
	push "null"
	cthis vars2
	end method
	method setrewinder
	localstring $1
	pop $1
	push $1
	pop rewinder
	push $1
	push "bg"
	pop $b
	popax
	add $a,$b
	pop rewinderbg
	end method
	method activate
	localint $1
	pop $1
	push $1
	clparent TextBoxTyper,activate
	cthis updaterewactual
	end method
	method updaterewactual
	push Row
	cthis updaterewpos
	end method
	method updaterewpos
	localint $1
	pop $1
	push rewinder
	push "null"
	cmpjne
	cmp0
	je l1866
	localdef $2
	push "tt"
	push $1
	pop $b
	popax
	add $a,$b
	pop $2
	push $2
	spushs
	spop $a
	call [$a],getpy
	push rewinderbg
	spushs
	spop $a
	call [$a],getpy
	cmpjl
	cmp0
	je l1868
	push rewinder
	spushs
	push 0
	push rewinderbg
	spushs
	spop $a
	call [$a],getpy
	push $2
	spushs
	spop $a
	call [$a],getpy
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],rewind
	jmp l1867
l1868:
	push $2
	spushs
	spop $a
	call [$a],getey
	push rewinderbg
	spushs
	spop $a
	call [$a],getey
	cmpja
	cmp0
	je l1870
	push rewinder
	spushs
	push 0
	push rewinderbg
	spushs
	spop $a
	call [$a],getey
	push $2
	spushs
	spop $a
	call [$a],getey
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],rewind
l1870:
l1867:
l1866:
	end method
	end class

	class DelayTaker
	method init
	new int,bonrel
	push 0
	pop bonrel
	new int,bstart
	push 0
	pop bstart
	new int,bclickrel
	push 1
	pop bclickrel
	push "timwez"
	push 300
	push 1
	push "DelayTaker0"
	cthis cnewtimerfin
	end method
	method DelayTaker0
	push 1
	pop bonrel
	end method
	method setclickrel
	localint $1
	pop $1
	push $1
	pop bclickrel
	end method
	method setdelay
	localint $1
	pop $1
	push $1
	call timwez,delay
	end method
	method take
	push bclickrel
	cmp0
	je l1872
	call timwez,play
	push 0
	pop bonrel
	jmp l1871
l1872:
	push 1
	pop bonrel
l1871:
	push 1
	pop bstart
	end method
	method ret
	push 0
	pop bonrel
	push 0
	pop bstart
	push 0
	call timwez,stop
	end method
	method isonclick
	cthis stoptimer
	push bstart
	cmp0
	je l1873
	push bonrel
	neg
	jmp l1875
l1873:
	push 0
	jmp l1875
l1874:
	push 1
l1875:
	end method
	method isonrel
	cthis stoptimer
	push bstart
	cmp0
	je l1876
	push bonrel
	jmp l1878
l1876:
	push 0
	jmp l1878
l1877:
	push 1
l1878:
	end method
	method istaken
	push bstart
	end method
	method stoptimer
	push 0
	call timwez,stop
	end method
	end class

	class ImgMover
	method init
	new string,smoved
	push "null"
	pop smoved
	new int,ilastx
	new int,ilasty
	new int,irelx
	new int,irely
	end method
	method mssetobj
	localstring $1
	pop $1
	push $1
	call mouse,getpos
	cthis setobj
	end method
	method setobj
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push 0
	push 0
	cthis set
	end method
	method setcobj
	localstring $1
	pop $1
	push $1
	push $1
	spushs
	spop $a
	call [$a],getcx
	push $1
	spushs
	spop $a
	call [$a],getcy
	cthis setobj
	end method
	method setpobj
	localstring $1
	pop $1
	push $1
	push $1
	spushs
	spop $a
	call [$a],getpx
	push $1
	spushs
	spop $a
	call [$a],getpy
	cthis setobj
	end method
	method set
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getposx
	push $4
	pop $b
	popax
	sub $a,$b
	pop ilastx
	push $1
	spushs
	spop $a
	call [$a],getposy
	push $5
	pop $b
	popax
	sub $a,$b
	pop ilasty
	push $2
	push $1
	spushs
	spop $a
	call [$a],getpx
	pop $b
	popax
	sub $a,$b
	pop irelx
	push $3
	push $1
	spushs
	spop $a
	call [$a],getpy
	pop $b
	popax
	sub $a,$b
	pop irely
	push $1
	pop smoved
	end method
	method msmove
	call mouse,getpos
	cthis move
	end method
	method msftmove
	call mouse,getpos
	cthis ftmove
	end method
	method move
	localint $1
	localint $2
	pop $2
	pop $1
	push smoved
	push "null"
	cmpjne
	cmp0
	je l1880
	push smoved
	spushs
	push $1
	push smoved
	spushs
	spop $a
	call [$a],lodx
	pop $b
	popax
	sub $a,$b
	push irelx
	pop $b
	popax
	sub $a,$b
	push $2
	push smoved
	spushs
	spop $a
	call [$a],lody
	pop $b
	popax
	sub $a,$b
	push irely
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setpos
l1880:
	end method
	method ftmove
	localint $1
	localint $2
	pop $2
	pop $1
	push smoved
	push "null"
	cmpjne
	cmp0
	je l1882
	push smoved
	spushs
	push $1
	push $2
	spop $a
	call [$a],setpos
l1882:
	end method
	method retobj
	push 0
	push 0
	cthis ret
	end method
	method ret
	localint $1
	localint $2
	pop $2
	pop $1
	push smoved
	spushs
	push ilastx
	push $1
	pop $b
	popax
	add $a,$b
	push ilasty
	push $2
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	cthis free
	end method
	method put
	localint $1
	localint $2
	pop $2
	pop $1
	push smoved
	spushs
	push $1
	push $2
	spop $a
	call [$a],setpos
	cthis free
	end method
	method free
	push "null"
	pop smoved
	end method
	method getmover
	push smoved
	end method
	method getfree
	localdef $1
	push smoved
	pop $1
	cthis free
	push $1
	end method
	method moving
	push smoved
	push "null"
	cmpjne
	end method
	method setmoved
	localstring $1
	pop $1
	push $1
	pop smoved
	end method
	end class

	class ConImgMover
	parent ImgMover
	parent ObjController
	method init
	clparent ImgMover,init
	clparent ObjController,init
	end method
	method onmousemove
	cthis msmove
	end method
	method onmouselclick
	cthis getname
	push "_GET"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method onmouselrel
	push smoved
	push "null"
	cmpjne
	cmp0
	je l1884
	cthis getname
	push "_PUT"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
l1884:
	end method
	end class

	class DelayImgMover
	parent classlocker
	parent ImgMover
	method init
	clparent classlocker,init
	clparent ImgMover,init
	new DelayTaker,cldt
	push "b2clicks"
	push 0
	cthis var2
	end method
	method setclickrel
	localint $1
	pop $1
	push $1
	call cldt,setclickrel
	end method
	method reset
	call cldt,ret
	end method
	method _put
	push b2clicks
	neg
	cmp0
	je l1886
	call cldt,ret
l1886:
	cthis getname
	push "_PUT"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method _get
	cthis getname
	push "_GET"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method set
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	push $5
	clparent ImgMover,set
	push b2clicks
	neg
	cmp0
	je l1888
	call cldt,take
l1888:
	end method
	method onmousemove
	cthis msmove
	end method
	method onmouselclick
	cthis getlock
	cmp0
	je l1890
	ret
l1890:
	push b2clicks
	cmp0
	je l1892
	cthis moving
	neg
	cmp0
	je l1894
	cthis _get
	jmp l1893
l1894:
	cthis _put
l1893:
	jmp l1891
l1892:
	call cldt,isonclick
	cmp0
	je l1896
	cthis _put
	jmp l1895
l1896:
	call cldt,istaken
	neg
	cmp0
	je l1898
	cthis _get
l1898:
l1895:
l1891:
	end method
	method onmouselrel
	cthis getlock
	cmp0
	je l1900
	ret
l1900:
	call cldt,isonrel
	cmp0
	je l1902
	push b2clicks
	neg
	jmp l1904
l1902:
	push 0
	jmp l1904
l1903:
	push 1
l1904:
	cmp0
	je l1905
	cthis _put
l1905:
	end method
	end class

	class DelayMover
	parent DelayImgMover
	parent ObjController
	method init
	clparent DelayImgMover,init
	clparent ObjController,init
	end method
	end class

	class Rewinder
	parent classlocker
	method init
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	clparent classlocker,init
	new string,sarrowdir
	new int,ilenx
	new int,ileny
	new string,sgr
	new string,sorientation
	new int,bvertical
	new int,bfilteritem
	push 0
	pop bfilteritem
	new int,ibx1
	push 0
	pop ibx1
	new int,ibx2
	push iResX
	pop ibx2
	new int,iby1
	push 0
	pop iby1
	new int,iby2
	push iResY
	pop iby2
	new int,iodleg
	push 2
	pop iodleg
	new ImgMover,clmv
	push "timtick"
	push 1
	push 1
	push "timfin"
	cthis cnewtimercyclefin
	push A
	push "borx1"
	push $1
	push "bory1"
	push $2
	push "borx2"
	push $3
	push "bory2"
	push $4
	cthis vars2
	new snd,fxrew
	end method
	method movefilter
	push 1
	pop bfilteritem
	end method
	method movenormal
	push 0
	pop bfilteritem
	end method
	method setfxrew
	localstring $1
	pop $1
	cthis getsndpath
	push $1
	pop $b
	popax
	add $a,$b
	call fxrew,load
	end method
	method getitem
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	push $1
	spushs
	spop $a
	call [$a],getz
	push 1
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setz
	push $1
	push $2
	push $3
	push sgr
	spushs
	spop $a
	call [$a],getpx
	push sgr
	spushs
	spop $a
	call [$a],getpy
	call clmv,set
	push $1
	spushs
	push 0
	push 0
	push iResX
	push iResY
	spop $a
	call [$a],clip
	push sorientation
	push "up"
	cmpje
	cmp0
	jne l1908
	push sorientation
	push "down"
	cmpje
	jmp l1909
l1907:
	push 0
	jmp l1909
l1908:
	push 1
l1909:
	cmp0
	je l1910
	push sgr
	spushs
	push $1
	push $1
	spushs
	spop $a
	call [$a],getw
	push iodleg
	pop $b
	popax
	add $a,$b
	popax
	sub 0,$a
	push 0
	spop $a
	call [$a],movefrom
	push $1
	spushs
	push $1
	spushs
	spop $a
	call [$a],getw
	push 0
	spop $a
	call [$a],move
	jmp l1906
l1910:
	push sgr
	spushs
	push $1
	push 0
	push $1
	spushs
	spop $a
	call [$a],geth
	push iodleg
	pop $b
	popax
	add $a,$b
	popax
	sub 0,$a
	spop $a
	call [$a],movefrom
	push $1
	spushs
	push 0
	push $1
	spushs
	spop $a
	call [$a],geth
	spop $a
	call [$a],move
l1906:
	push sgr
	spushs
	push $1
	spop $a
	call [$a],remove
	end method
	method pickup
	localint $1
	localint $2
	pop $2
	pop $1
	push sgr
	spushs
	push $1
	push $2
	push 1
	push 1
	spop $a
	call [$a],isin
	cmp0
	je l1912
	push sgr
	spushs
	spop $a
	call [$a],getsfound
	push $1
	push $2
	cthis getitem
	push 1
	ret
l1912:
	push 0
	ret
	end method
	method mspickup
	call mouse,getpos
	cthis pickup
	ret
	end method
	method freeitem
	call clmv,free
	end method
	method moveitem
	push bfilteritem
	cmp0
	je l1914
	call clmv,msftmove
	jmp l1913
l1914:
	call clmv,msmove
l1913:
	end method
	method retitem
	localstring $1
	call clmv,getmover
	pop $1
	push sgr
	spushs
	spop $a
	call [$a],getpx
	push sgr
	spushs
	spop $a
	call [$a],getpy
	call clmv,ret
	push $1
	cthis putitem
	end method
	method putitem
	localstring $1
	pop $1
	push sorientation
	push "up"
	cmpje
	cmp0
	jne l1917
	push sorientation
	push "down"
	cmpje
	jmp l1918
l1916:
	push 0
	jmp l1918
l1917:
	push 1
l1918:
	cmp0
	je l1919
	push $1
	spushs
	push sgr
	spushs
	spop $a
	call [$a],getex
	push $1
	spushs
	spop $a
	call [$a],getpx
	pop $b
	popax
	sub $a,$b
	push iodleg
	pop $b
	popax
	add $a,$b
	push 0
	spop $a
	call [$a],move
	jmp l1915
l1919:
	push $1
	spushs
	push 0
	push sgr
	spushs
	spop $a
	call [$a],getey
	push $1
	spushs
	spop $a
	call [$a],getpy
	pop $b
	popax
	sub $a,$b
	push iodleg
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],move
l1915:
	push sgr
	spushs
	push $1
	spop $a
	call [$a],add
	push $1
	spushs
	push $1
	spushs
	spop $a
	call [$a],getz
	push 1
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setz
	push $1
	spushs
	push ibx1
	push iby1
	push ibx2
	push iby2
	spop $a
	call [$a],clip
	end method
	method getmoved
	call clmv,getmover
	ret
	end method
	method getbutw
	call anupstd,getw
	ret
	end method
	method getbuth
	call anupstd,geth
	ret
	end method
	method movearrows
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call grarrows,move
	end method
	method build
	localstring $1
	localint $2
	localstring $3
	localstring $4
	localint $5
	localstring $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $6
	pop sgr
	new anima,anupstd
	push $1
	call anupstd,load
	push $2
	call anupstd,setz
	push "up"
	push 0
	call anupstd,setframe
	push "anupstd"
	push "anupact"
	cthis copyanima
	push "up"
	push 1
	call anupact,setframe
	push "anupstd"
	push "andownact"
	cthis copyanima
	push "down"
	push 1
	call andownact,setframe
	push "anupstd"
	push "andownstd"
	cthis copyanima
	push "down"
	push 0
	call andownstd,setframe
	push "butup"
	push "anupstd"
	push "anupact"
	push "null"
	push $3
	cthis newbutan
	push "butdown"
	push "andownstd"
	push "andownact"
	push "null"
	push $3
	cthis newbutan
	push "onmoveon"
	push "_rewbutmoveon"
	call butup,addmethod
	push "onmoveon"
	push "_rewbutmoveon"
	call butdown,addmethod
	push "onmoveoff"
	push "_rewstrzalkaoff"
	call butup,addmethod
	push "onmoveoff"
	push "_rewstrzalkaoff"
	call butdown,addmethod
	push "onclick"
	push "_rewbutclick"
	call butup,addmethod
	push "onclick"
	push "_rewbutclick"
	call butdown,addmethod
	push "onrel"
	push "_rewbutrel"
	call butup,addmethod
	push "onrel"
	push "_rewbutrel"
	call butdown,addmethod
	push $4
	pop sorientation
	new gmimgvec,grarrows
	push "grarrows"
	push "anupstd"
	popax
	pop $b
	psax
	call [$b],operator+
	push "anupact"
	popax
	pop $b
	psax
	call [$b],operator+
	push "andownact"
	popax
	pop $b
	psax
	call [$b],operator+
	push "andownstd"
	popax
	pop $b
	psax
	call [$b],operator+
	popax
	localint $7
	localint $8
	localint $9
	localint $10
	push sorientation
	push "up"
	cmpje
	cmp0
	jne l1922
	push sorientation
	push "down"
	cmpje
	jmp l1923
l1921:
	push 0
	jmp l1923
l1922:
	push 1
l1923:
	cmp0
	je l1924
	push 0
	pop bvertical
	push $5
	pop ilenx
	push sorientation
	push "down"
	cmpje
	cmp0
	je l1926
	push borx1
	push bory2
	call anupstd,geth
	pop $b
	popax
	sub $a,$b
	call anupstd,setpos
	push borx1
	push bory2
	call anupact,geth
	pop $b
	popax
	sub $a,$b
	call anupact,setpos
	push borx2
	call andownstd,getw
	pop $b
	popax
	sub $a,$b
	push bory2
	call andownstd,geth
	pop $b
	popax
	sub $a,$b
	call andownstd,setpos
	push borx2
	call andownact,getw
	pop $b
	popax
	sub $a,$b
	push bory2
	call andownact,geth
	pop $b
	popax
	sub $a,$b
	call andownact,setpos
	call andownstd,getey
	pop $7
	jmp l1925
l1926:
	push borx1
	push bory1
	call anupstd,setpos
	push borx1
	push bory1
	call anupact,setpos
	push borx2
	call andownstd,getw
	pop $b
	popax
	sub $a,$b
	push bory1
	call andownstd,setpos
	push borx2
	call andownact,getw
	pop $b
	popax
	sub $a,$b
	push bory1
	call andownact,setpos
	push bory1
	pop $7
l1925:
	call anupstd,getex
	push iodleg
	pop $b
	popax
	add $a,$b
	pop ibx1
	call andownstd,getpx
	push iodleg
	pop $b
	popax
	sub $a,$b
	pop ibx2
	push ibx1
	pop $8
	jmp l1920
l1924:
	push 1
	pop bvertical
	push $5
	pop ileny
	push sorientation
	push "right"
	cmpje
	cmp0
	je l1928
	push borx2
	call anupstd,getw
	pop $b
	popax
	sub $a,$b
	push bory1
	call anupstd,setpos
	push borx2
	call anupact,getw
	pop $b
	popax
	sub $a,$b
	push bory1
	call anupact,setpos
	push borx2
	call andownstd,getw
	pop $b
	popax
	sub $a,$b
	push bory2
	call andownstd,geth
	pop $b
	popax
	sub $a,$b
	call andownstd,setpos
	push borx2
	call andownact,getw
	pop $b
	popax
	sub $a,$b
	push bory2
	call andownact,geth
	pop $b
	popax
	sub $a,$b
	call andownact,setpos
	call anupstd,getex
	pop $8
	jmp l1927
l1928:
	push borx1
	push bory1
	call anupstd,setpos
	push borx1
	push bory1
	call anupact,setpos
	push borx1
	push bory2
	call andownstd,geth
	pop $b
	popax
	sub $a,$b
	call andownstd,setpos
	push borx1
	push bory2
	call andownact,geth
	pop $b
	popax
	sub $a,$b
	call andownact,setpos
	push borx1
	pop $8
l1927:
	call anupstd,getey
	push iodleg
	pop $b
	popax
	add $a,$b
	pop iby1
	call andownstd,getpy
	push iodleg
	pop $b
	popax
	sub $a,$b
	pop iby2
	push iby1
	pop $7
l1920:
	cthis getname
	push "up"
	call butup,_rewbuildbut
	cthis getname
	push "down"
	call butdown,_rewbuildbut
	localint $11
	push $6
	spushs
	spop $a
	call [$a],size
	pop $11
	push $6
	spushs
	push $8
	push $7
	spop $a
	call [$a],_setpos
	new int,ilimx
	push $8
	pop ilimx
	new int,ilimy
	push $7
	pop ilimy
	localstring $12
	localint $13
	push 0
	pop $13
l1929:
	push $13
	push $11
	cmpjl
	cmp0
	je l1930
	jmp l1932
l1931:
	add $13,1
	pop $13
	jmp l1929
l1932:
	push sgr
	spushs
	push $13
	spop $a
	call [$a],get
	pop $12
	push sorientation
	push "right"
	cmpje
	cmp0
	je l1934
	push $12
	spushs
	push $8
	push $12
	spushs
	spop $a
	call [$a],getw
	pop $b
	popax
	sub $a,$b
	push $12
	spushs
	spop $a
	call [$a],lodx
	pop $b
	popax
	sub $a,$b
	push $7
	push $12
	spushs
	spop $a
	call [$a],lody
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setpos
	push $12
	spushs
	spop $a
	call [$a],geth
	push iodleg
	pop $b
	popax
	add $a,$b
	popax
	add $7,$a
	pop $7
	jmp l1933
l1934:
	push sorientation
	push "left"
	cmpje
	cmp0
	je l1936
	push $12
	spushs
	push $8
	push $12
	spushs
	spop $a
	call [$a],lodx
	pop $b
	popax
	sub $a,$b
	push $7
	push $12
	spushs
	spop $a
	call [$a],lody
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setpos
	push $12
	spushs
	spop $a
	call [$a],geth
	push iodleg
	pop $b
	popax
	add $a,$b
	popax
	add $7,$a
	pop $7
	jmp l1935
l1936:
	push sorientation
	push "up"
	cmpje
	cmp0
	je l1938
	push $12
	spushs
	push $8
	push $12
	spushs
	spop $a
	call [$a],lodx
	pop $b
	popax
	sub $a,$b
	push $7
	push $12
	spushs
	spop $a
	call [$a],lody
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setpos
	push $12
	spushs
	spop $a
	call [$a],getw
	push iodleg
	pop $b
	popax
	add $a,$b
	popax
	add $8,$a
	pop $8
	jmp l1937
l1938:
	push sorientation
	push "down"
	cmpje
	cmp0
	je l1940
	push $12
	spushs
	push $8
	push $12
	spushs
	spop $a
	call [$a],lodx
	pop $b
	popax
	sub $a,$b
	push $7
	push $12
	spushs
	spop $a
	call [$a],geth
	pop $b
	popax
	sub $a,$b
	push $12
	spushs
	spop $a
	call [$a],lody
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setpos
	push $12
	spushs
	spop $a
	call [$a],getw
	push iodleg
	pop $b
	popax
	add $a,$b
	popax
	add $8,$a
	pop $8
l1940:
l1937:
l1935:
l1933:
	push $12
	spushs
	push ibx1
	push iby1
	push ibx2
	push iby2
	spop $a
	call [$a],clip
	jmp l1931
l1930:
	end method
	method _rewbuildbut
	localstring $1
	localstring $2
	pop $2
	pop $1
	new string,_sob
	push $1
	pop _sob
	new string,_sdir
	push $2
	push "up"
	cmpje
	cmp0
	je l1942
	push bvertical
	push 0
	cmpje
	cmp0
	je l1944
	push "left"
	pop _sdir
	jmp l1943
l1944:
	push "up"
	pop _sdir
l1943:
	jmp l1941
l1942:
	push $2
	push "down"
	cmpje
	cmp0
	je l1946
	push bvertical
	push 0
	cmpje
	cmp0
	je l1948
	push "right"
	pop _sdir
	jmp l1947
l1948:
	push "down"
	pop _sdir
l1947:
l1946:
l1941:
	end method
	method _rewbutmoveon
	push _sob
	push "_"
	pop $b
	popax
	add $a,$b
	push _sdir
	pop $b
	popax
	add $a,$b
	push "_MOVEON"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method _rewbutclick
	push _sdir
	cthis mstrzalkaon
	push _sob
	push "_"
	pop $b
	popax
	add $a,$b
	push _sdir
	pop $b
	popax
	add $a,$b
	push "_CLICK"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method mstrzalkaon
	localstring $1
	pop $1
	push $1
	pop sarrowdir
	call timtick,play
	end method
	method _rewbutrel
	push "null"
	pop sarrowdir
	push 0
	call timtick,stop
	push 0
	call fxrew,stop
	end method
	method _rewstrzalkaoff
	push "null"
	pop sarrowdir
	push 0
	call timtick,stop
	push 0
	call fxrew,stop
	push _sob
	push "_"
	pop $b
	popax
	add $a,$b
	push _sdir
	pop $b
	popax
	add $a,$b
	push "_MOVEOFF"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method timfin
	cthis getlock
	cmp0
	je l1950
	ret
l1950:
	localint $1
	push 0
	pop $1
	push sarrowdir
	push "null"
	cmpjne
	cmp0
	je l1952
	push sgr
	spushs
	spop $a
	call [$a],empty
	neg
	jmp l1954
l1952:
	push 0
	jmp l1954
l1953:
	push 1
l1954:
	cmp0
	je l1955
	push sarrowdir
	push "up"
	cmpje
	cmp0
	je l1957
	push sgr
	spushs
	spop $a
	call [$a],getey
	call andownstd,getpy
	push ileny
	pop $b
	popax
	sub $a,$b
	cmpja
	cmp0
	je l1959
	push sgr
	spushs
	push 0
	push ileny
	popax
	sub 0,$a
	spop $a
	call [$a],move
	push 1
	pop $1
l1959:
	jmp l1956
l1957:
	push sarrowdir
	push "down"
	cmpje
	cmp0
	je l1961
	push sgr
	spushs
	spop $a
	call [$a],getpy
	push ilimy
	cmpjl
	cmp0
	je l1963
	push sgr
	spushs
	push 0
	push ileny
	spop $a
	call [$a],move
	push 1
	pop $1
l1963:
	jmp l1960
l1961:
	push sarrowdir
	push "left"
	cmpje
	cmp0
	je l1965
	push sgr
	spushs
	spop $a
	call [$a],getex
	call andownstd,getpx
	push ilenx
	pop $b
	popax
	sub $a,$b
	cmpja
	cmp0
	je l1967
	push sgr
	spushs
	push ilenx
	popax
	sub 0,$a
	push 0
	spop $a
	call [$a],move
	push 1
	pop $1
l1967:
	jmp l1964
l1965:
	push sarrowdir
	push "right"
	cmpje
	cmp0
	je l1969
	push sgr
	spushs
	spop $a
	call [$a],getpx
	push ilimx
	cmpjl
	cmp0
	je l1971
	push sgr
	spushs
	push ilenx
	push 0
	spop $a
	call [$a],move
	push 1
	pop $1
l1971:
l1969:
l1964:
l1960:
l1956:
l1955:
	push $1
	cmp0
	je l1973
	call fxrew,isplaying
	neg
	cmp0
	je l1975
	call fxrew,play
l1975:
	jmp l1972
l1973:
	push 0
	call fxrew,stop
l1972:
	cthis play
	end method
	end class

	class ConRewinder
	parent Rewinder
	parent ObjController
	method init
	clparent Rewinder,init
	clparent ObjController,init
	new DelayTaker,cldt
	end method
	method getitem
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	clparent Rewinder,getitem
	call cldt,take
	end method
	method _put
	call cldt,ret
	cthis getname
	push "_PUT"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method onmousemove
	cthis moveitem
	end method
	method onmouselrel
	cthis getlock
	cmp0
	je l1977
	ret
l1977:
	call cldt,isonrel
	cmp0
	je l1979
	cthis _put
l1979:
	end method
	method onmouselclick
	cthis getlock
	cmp0
	je l1981
	ret
l1981:
	call cldt,isonclick
	cmp0
	je l1983
	cthis _put
	jmp l1982
l1983:
	call cldt,istaken
	neg
	cmp0
	je l1985
	cthis getname
	push "_GET"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
l1985:
l1982:
	end method
	end class

	class Button
	parent LObjController
	method init
	clparent LObjController,init
	cthis unlock
	new gmimgvec,grbuts
	push A
	push "sobject"
	push "null"
	push "sclicked"
	push "null"
	push "bcheck2klik"
	push 0
	cthis vars2
	new int,ipadclick
	push 0
	pop ipadclick
	end method
	method print
	call grbuts,print
	end method
	method sort
	call grbuts,sortimgs
	end method
	method addgroups
	call grbuts,addgroups
	call grbuts,sortimgs
	end method
	method addgroup
	localstring $1
	pop $1
	push $1
	call grbuts,addgr
	call grbuts,sortimgs
	end method
	method addlist
	call grbuts,addlist
	call grbuts,sortimgs
	end method
	method add
	localstring $1
	pop $1
	push $1
	call grbuts,add
	call grbuts,sortimgs
	end method
	method addonce
	localstring $1
	pop $1
	push $1
	call grbuts,addonce
	call grbuts,sortimgs
	end method
	method addlocker
	localstring $1
	pop $1
	push $1
	cthis add
	push $1
	clparent classlocker,setaslocker
	end method
	method removebutlist
	push "removebut"
	cthis withlist
	end method
	method removebut
	localstring $1
	pop $1
	push $1
	call grbuts,remove
	push $1
	push sobject
	cmpje
	cmp0
	je l1987
	push "null"
	pop sobject
l1987:
	push $1
	push sclicked
	cmpje
	cmp0
	je l1989
	push "null"
	pop sclicked
l1989:
	end method
	method load
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push GAME
	spushs
	push "gmimgvec"
	push $1
	spop $a
	call [$a],varnew
	push $1
	push $2
	popax
	pop $b
	psax
	call [$b],operator*
	push $1
	spushs
	push $3
	spop $a
	call [$a],each
	push $1
	cthis addgroup
	end method
	method remove
	localstring $1
	pop $1
	push GAME
	spushs
	push $1
	spop $a
	call [$a],hasvar
	cmp0
	je l1991
	push $1
	call grbuts,removegr
l1991:
	end method
	method loadfrom
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	localdef $5
	cthis getgraphpath
	pop $5
	push $2
	cthis setgraphpath
	push $1
	push $3
	push $4
	cthis load
	push $5
	cthis setgraphpath
	end method
	method onmouselclick
	cthis getlock
	cmp0
	je l1993
	ret
l1993:
	cthis checktouchpad
	cmp0
	je l1995
	push bcheck2klik
	jmp l1997
l1995:
	push 0
	jmp l1997
l1996:
	push 1
l1997:
	cmp0
	je l1998
	push ipadclick
	cmp0
	je l2000
	localdef $1
	push sobject
	pop $1
	push $1
	push sobject
	cmpje
	cmp0
	je l2002
	push 0
	pop ipadclick
	cthis _butmouselclick
	jmp l2001
l2002:
	push sobject
	push "null"
	cmpje
	cmp0
	je l2004
	push 0
	pop ipadclick
l2004:
l2001:
	jmp l1999
l2000:
	push 1
	pop ipadclick
l1999:
	jmp l1994
l1998:
	cthis _butmouselclick
l1994:
	end method
	method _butmouselclick
	cthis getname
	push "_lclick"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	push sobject
	push "null"
	cmpjne
	cmp0
	je l2006
	push sobject
	pop sclicked
	push sobject
	spushs
	push "butclick"
	spop $a
	call [$a],hasaddedmet
	cmp0
	je l2008
	push sobject
	spushs
	spop $a
	call [$a],butclick
l2008:
l2006:
	end method
	method onmouselrel
	cthis getlock
	cmp0
	je l2010
	ret
l2010:
	cthis checktouchpad
	cmp0
	je l2012
	cthis lastoff
l2012:
	cthis getname
	push "_lrel"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	push sclicked
	push "null"
	cmpjne
	cmp0
	je l2014
	push sclicked
	spushs
	push "butlrel"
	spop $a
	call [$a],hasaddedmet
	jmp l2016
l2014:
	push 0
	jmp l2016
l2015:
	push 1
l2016:
	cmp0
	je l2017
	push sclicked
	spushs
	spop $a
	call [$a],butlrel
	jmp l2013
l2017:
	push "null"
	pop sclicked
l2013:
	end method
	method onmousemove
	cthis getlock
	cmp0
	je l2019
	ret
l2019:
	push sclicked
	push "null"
	cmpjne
	cmp0
	je l2021
	push sclicked
	spushs
	push "butmoving"
	spop $a
	call [$a],hasaddedmet
	cmp0
	je l2023
	push sclicked
	spushs
	spop $a
	call [$a],butmoving
l2023:
l2021:
	localint $1
	localint $2
	call mouse,getpos
	pop $2
	pop $1
	push $1
	push $2
	push "isbutin"
	call grbuts,isinfunc
	cmp0
	je l2025
	localdef $3
	call grbuts,getsfound
	pop $3
	push $3
	push sobject
	cmpjne
	cmp0
	je l2027
	cthis lastoff
	push $3
	pop sobject
	cthis getname
	push "_moveon"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	push $3
	spushs
	push "butmoveon"
	spop $a
	call [$a],hasaddedmet
	cmp0
	je l2029
	push $3
	spushs
	spop $a
	call [$a],butmoveon
l2029:
l2027:
	jmp l2024
l2025:
	cthis lastoff
l2024:
	end method
	method lastoff
	push sobject
	push "null"
	cmpjne
	cmp0
	je l2031
	cthis getname
	push "_moveoff"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	push sobject
	spushs
	push "butmoveoff"
	spop $a
	call [$a],hasaddedmet
	cmp0
	je l2033
	push sobject
	spushs
	spop $a
	call [$a],butmoveoff
l2033:
	push "null"
	pop sobject
l2031:
	end method
	end class

	new snd,sndfxmoveonms
	push "sounds/sfx/butmoveon2.ogg"
	call sndfxmoveonms,load
	push 50
	call sndfxmoveonms,setvol
	method Button_isin
	push "isbutin"
	push "global9"
	cthis addmethod
	end method
	method global9
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 0
	cthis isin
	end method
	method Button_isinvis
	push "isbutin"
	push "global10"
	cthis addmethod
	end method
	method global10
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	end method
	method Button_isinalpha
	push "isbutin"
	push "global11"
	cthis addmethod
	end method
	method global11
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 1
	cthis isin
	end method
	method Button_isinvisalpha
	push "isbutin"
	push "global12"
	cthis addmethod
	end method
	method global12
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 1
	cthis isin
	end method
	method Button_moveon
	push "butmoveon"
	push "global13"
	cthis addmethod
	end method
	method global13
	call sndakskermovon,playif
	call advmouse,setbut
	push 1
	popax
	sub 0,$a
	cthis nofframes
	push 1
	cmpja
	cmp0
	je l2035
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
l2035:
	end method
	method Button_moveonplay
	push "butmoveon"
	push "global14"
	cthis addmethod
	end method
	method global14
	call sndakskermovon,play
	call advmouse,setbut
	push 1
	popax
	sub 0,$a
	cthis isplaying
	push 0
	cmpje
	cmp0
	je l2037
	push 1
	popax
	sub 0,$a
	cthis play
l2037:
	end method
	method Button_moveoff
	push "butmoveoff"
	push "global15"
	cthis addmethod
	end method
	method global15
	call advmouse,setstd
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	end method
	method Button_moveonms
	push "butmoveon"
	push "global16"
	cthis addmethod
	end method
	method global16
	call advmouse,setbut
	end method
	method Button_moveonfxms
	push "butmoveon"
	push "global17"
	cthis addmethod
	end method
	method global17
	call advmouse,setbut
	call sndfxmoveonms,playif
	end method
	method Button_moveoffms
	push "butmoveoff"
	push "global18"
	cthis addmethod
	end method
	method global18
	call advmouse,setstd
	end method
	method Button_std
	cthis Button_isin
	cthis Button_moveon
	cthis Button_moveoff
	end method
	method Button_stdalpha
	cthis Button_isinalpha
	cthis Button_moveon
	cthis Button_moveoff
	end method
	method Button_stdms
	cthis Button_isinalpha
	cthis Button_moveonms
	cthis Button_moveoffms
	end method
	class Buttons
	parent LObjController
	method init
	localstring $1
	pop $1
	clparent LObjController,init
	cthis unlock
	new gmimgvec,grbuts
	new int,__id
	push 0
	pop __id
	new string,sanbut
	push "anbut"
	pop sanbut
	push sanbut
	push $1
	push 10
	cthis newanima
	push sanbut
	push sanbut
	push "grbuts"
	cthis newanactionsgr
	popax
	call anbut,hide
	push 10
	call grbuts,setz
	push "Buttons0"
	call grbuts,removeif
	new string,slastb
	push "null"
	pop slastb
	push A
	push "sobject"
	push "null"
	push "bvisible"
	push 1
	push "balpha"
	push 1
	cthis vars2
	new int,ipadclick
	push 0
	pop ipadclick
	push "bcheck2klik"
	push 0
	cthis var2
	end method
	method Buttons0
	cthis actionname
	push "bkg"
	cmpje
	cmp0
	je l2039
	cthis getz
	push 1
	pop $b
	popax
	sub $a,$b
	cthis setz
	push 1
	jmp l2038
l2039:
	push 0
l2038:
	end method
	method _release
	cthis checktouchpad
	cmp0
	je l2041
	push 0
	pop ipadclick
l2041:
	push slastb
	spushs
	push 1
	popax
	sub 0,$a
	push 0
	spop $a
	call [$a],setframe
	cthis copyobj
	cthis getname
	push "_moveoff"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	push "null"
	pop slastb
	call advmouse,setstd
	end method
	method getbut
	call grbuts,getsfound
	end method
	method onmousemove
	cthis getlock
	cmp0
	je l2043
	ret
l2043:
	push 1
	popax
	sub 0,$a
	push 0
	call grbuts,setframe
	localdef $1
	call mouse,getpos
	push bvisible
	push balpha
	call grbuts,isin
	pop $1
	push slastb
	push "null"
	cmpjne
	cmp0
	je l2045
	push slastb
	spushs
	push 1
	popax
	sub 0,$a
	push 1
	spop $a
	call [$a],setframe
l2045:
	push $1
	cmp0
	je l2047
	localstring $2
	call grbuts,getsfound
	pop $2
	push $2
	push slastb
	cmpjne
	cmp0
	je l2049
	push slastb
	push "null"
	cmpjne
	cmp0
	je l2051
	cthis _release
l2051:
	push $2
	pop slastb
	push $2
	spushs
	push 1
	popax
	sub 0,$a
	push 1
	spop $a
	call [$a],setframe
	cthis copyobj
	call advmouse,setact
	cthis getname
	push "_moveon"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
l2049:
	jmp l2046
l2047:
	push slastb
	push "null"
	cmpjne
	cmp0
	je l2053
	cthis _release
l2053:
l2046:
	end method
	method copyobj
	push slastb
	spushs
	spop $a
	call [$a],actionname
	pop sobject
	end method
	method onmouselclick
	cthis getlock
	cmp0
	je l2055
	ret
l2055:
	cthis checktouchpad
	cmp0
	je l2057
	push bcheck2klik
	jmp l2059
l2057:
	push 0
	jmp l2059
l2058:
	push 1
l2059:
	cmp0
	je l2060
	push ipadclick
	cmp0
	je l2062
	push 0
	pop ipadclick
	cthis _butmouselclick
	jmp l2061
l2062:
	push 1
	pop ipadclick
	cthis onmousemove
l2061:
	jmp l2056
l2060:
	cthis _butmouselclick
l2056:
	end method
	method _butmouselclick
	push slastb
	push "null"
	cmpjne
	cmp0
	je l2064
	cthis copyobj
	cthis getname
	push "_lclick"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
l2064:
	end method
	method onmouselrel
	cthis getlock
	cmp0
	je l2066
	ret
l2066:
	push slastb
	push "null"
	cmpjne
	cmp0
	je l2068
	cthis copyobj
	cthis getname
	push "_lrel"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
l2068:
	end method
	method disable
	cthis lock
	call grbuts,hide
	push slastb
	push "null"
	cmpjne
	cmp0
	je l2070
	call advmouse,setstd
	push "null"
	pop slastb
l2070:
	end method
	method enable
	cthis unlock
	call grbuts,show
	end method
	end class

	class TextDb
	parent classlocker
	parent ObjController
	parent gfxObject
	method init
	localstring $1
	localint $2
	localstring $3
	localint $4
	localint $5
	localint $6
	localint $7
	localint $8
	localint $9
	localint $10
	localstring $11
	pop $11
	pop $10
	pop $9
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	clparent classlocker,init
	clparent ObjController,init
	new string,sFont
	push $1
	pop sFont
	new string,sFontBold
	push "null"
	pop sFontBold
	new string,sFontItalic
	push "null"
	pop sFontItalic
	new string,sFontBoldItalic
	push "null"
	pop sFontBoldItalic
	new int,bhtml
	push 0
	pop bhtml
	localstring $12
	localint $13
	localint $14
	push "$"
	call $1,contains
	cmp0
	je l2072
	push 1
	pop bhtml
	new vector,vfont
	push "string"
	call vfont,type
	push $1
	push "$"
	call vfont,vecbuildfromstring
	push 0
	pop $14
l2073:
	push $14
	call vfont,size
	cmpjl
	cmp0
	je l2074
	jmp l2076
l2075:
	add $14,1
	pop $14
	jmp l2073
l2076:
	push $14
	call vfont,get
	pop $12
	push "_italic"
	call $12,contains
	cmp0
	je l2078
	push "_bold"
	call $12,contains
	jmp l2080
l2078:
	push 0
	jmp l2080
l2079:
	push 1
l2080:
	cmp0
	je l2081
	push $12
	pop sFontBoldItalic
	jmp l2077
l2081:
	push "_italic"
	call $12,contains
	cmp0
	je l2083
	push $12
	pop sFontItalic
	jmp l2082
l2083:
	push "_bold"
	call $12,contains
	cmp0
	je l2085
	push $12
	pop sFontBold
	jmp l2084
l2085:
	push $12
	pop sFont
l2084:
l2082:
l2077:
	jmp l2075
l2074:
	push "$"
	call sFont,contains
	cmp0
	je l2087
	push sFontItalic
	push "null"
	cmpjne
	cmp0
	je l2089
	push sFontItalic
	pop sFont
	jmp l2088
l2089:
	push sFontBold
	push "null"
	cmpjne
	cmp0
	je l2091
	push sFontBold
	pop sFont
	jmp l2090
l2091:
	push sFontBoldItalic
	pop sFont
l2090:
l2088:
l2087:
	push sFont
	pop $1
	jmp l2071
l2072:
	push $1
	push $2
	cthis checkfont
	pop $1
l2071:
	new int,iFontSize
	push $2
	pop iFontSize
	push "Z"
	push $10
	cthis var2
	localstring $15
	push "null"
	pop $15
	push ":"
	call $3,contains
	cmp0
	je l2093
	push ":"
	call $3,strgetto
	push ":"
	pop $b
	popax
	add $a,$b
	pop $15
l2093:
	push ".db"
	call $3,contains
	cmp0
	je l2095
	push $15
	push "$path:"
	cmpje
	cmp0
	je l2097
	new db,dbtxt
	push $15
	call $3,strsubbs
	call dbtxt,load
	jmp l2096
l2097:
	push "dbtxt"
	push $3
	cthis newdb
l2096:
	jmp l2094
l2095:
	push $15
	spushs
	push "$lang:"
	cmpst
	jne l2099
	spop $a
	push "dbtxt"
	push $15
	call $3,strsubbs
	cthis lang_db
	jmp l2098
l2099:
	push "$var:"
	cmpst
	jne l2100
	spop $a
	new db,dbtxt
	push $15
	call $3,strsubbs
	call dbtxt,dbcopy
	jmp l2098
l2100:
	push "$row:"
	cmpst
	jne l2101
	spop $a
	new db,dbtxt
	push $15
	call $3,strsubbs
	spushs
	push ","
	spop $h
	call $h,strgetto
	pop $12
	push ","
	call $3,strgetfrom
	pop $13
	push 0
	pop $14
l2102:
	push $14
	push $12
	spushs
	push $13
	spop $a
	call [$a],getcolsno
	cmpjl
	cmp0
	je l2103
	jmp l2105
l2104:
	add $14,1
	pop $14
	jmp l2102
l2105:
	call dbtxt,addrow
	popax
	push $14
	push $12
	spushs
	push $13
	push $14
	spop $a
	call [$a],get
	call dbtxt,add
	jmp l2104
l2103:
	jmp l2098
l2101:
	spop $a
	new db,dbtxt
	push $3
	call dbtxt,dbaddlast
l2098:
l2094:
	localint $16
	push 0
	pop $16
	localint $17
	call dbtxt,getrowsno
	pop $17
	push 0
	push 5
	call $11,getb
	push "limit"
	cmpje
	cmp0
	je l2107
	localint $18
	push "limit_"
	call $11,strsubbs
	pop $18
	new vector,vtmp
	push "string"
	call vtmp,type
	new vector,vtmp2
	push "string"
	call vtmp2,type
	localint $14
	push 0
	pop $14
l2108:
	push $14
	call dbtxt,getrowsno
	cmpjl
	cmp0
	je l2109
	jmp l2111
l2110:
	add $14,1
	pop $14
	jmp l2108
l2111:
	push $14
	push 0
	call dbtxt,get
	push " "
	call vtmp,vecbuildfromstring
	localint $19
	push 0
	pop $19
l2112:
	push $19
	call vtmp,size
	cmpjl
	cmp0
	je l2113
	jmp l2115
l2114:
	add $19,1
	pop $19
	jmp l2112
l2115:
	push $19
	call vtmp,get
	call vtmp2,add
	jmp l2114
l2113:
	jmp l2110
l2109:
	call dbtxt,free
	localstring $12
	push ""
	pop $12
	localstring $20
	push 0
	pop $14
l2116:
	push $14
	call vtmp2,size
	cmpjl
	cmp0
	je l2117
	jmp l2119
l2118:
	add $14,1
	pop $14
	jmp l2116
l2119:
	push $14
	call vtmp2,get
	pop $20
	push $12
	push $20
	pop $b
	popax
	add $a,$b
	spushs
	spop $h
	call $h,length
	push $18
	cmpjl
	cmp0
	je l2121
	push $20
	push " "
	pop $b
	popax
	add $a,$b
	popax
	add $12,$a
	pop $12
	jmp l2120
l2121:
	call dbtxt,addrow
	push 1
	pop $b
	popax
	sub $a,$b
	pop $19
	push $19
	push $12
	call dbtxt,add
	push $20
	push " "
	pop $b
	popax
	add $a,$b
	pop $12
l2120:
	jmp l2118
l2117:
	call dbtxt,addrow
	push 1
	pop $b
	popax
	sub $a,$b
	pop $19
	push $19
	push $12
	call dbtxt,add
	call dbtxt,getrowsno
	pop $17
l2107:
	new gmimgvec,grtxt
	push $7
	push $8
	call grtxt,_setpos
	push 0
	pop $14
l2122:
	push $14
	push $17
	cmpjl
	cmp0
	je l2123
	jmp l2125
l2124:
	add $14,1
	pop $14
	jmp l2122
l2125:
	push "txt"
	push $14
	pop $b
	popax
	add $a,$b
	pop $12
	push $12
	spushs
	spop $e
	new text,[$e]
	localdef $21
	push $14
	push 0
	call dbtxt,get
	pop $21
	push bhtml
	cmp0
	je l2127
	push "<b>"
	call $21,contains
	cmp0
	je l2129
	push sFontBold
	pop $1
	push "<b>"
	call $21,strremove
	jmp l2128
l2129:
	push "<bi>"
	call $21,contains
	cmp0
	je l2131
	push sFontBoldItalic
	pop $1
	push "<bi>"
	call $21,strremove
	jmp l2130
l2131:
	push "<i>"
	call $21,contains
	cmp0
	je l2133
	push sFontItalic
	pop $1
	push "<i>"
	call $21,strremove
	jmp l2132
l2133:
	push sFont
	pop $1
l2132:
l2130:
l2128:
l2127:
	push $12
	spushs
	push $1
	spop $a
	call [$a],setfont
	push $12
	spushs
	push $21
	spop $a
	call [$a],set
	push $12
	spushs
	push $7
	push $8
	spop $a
	call [$a],setpos
	push $2
	push $9
	pop $b
	popax
	add $a,$b
	popax
	add $8,$a
	pop $8
	push $12
	spushs
	push $10
	spop $a
	call [$a],setz
	push $12
	spushs
	push $4
	push $5
	push $6
	spop $a
	call [$a],createtxt
	push $12
	spushs
	spop $a
	call [$a],getw
	push $16
	cmpja
	cmp0
	je l2135
	push $12
	spushs
	spop $a
	call [$a],getw
	pop $16
l2135:
	push $12
	call grtxt,add
	jmp l2124
l2123:
	push "Rows"
	push $17
	cthis var2
	push $11
	push "right"
	cmpje
	cmp0
	jne l2138
	push $11
	push "center"
	cmpje
	jmp l2139
l2137:
	push 0
	jmp l2139
l2138:
	push 1
l2139:
	cmp0
	je l2140
	push 0
	pop $14
l2141:
	push $14
	push $17
	cmpjl
	cmp0
	je l2142
	jmp l2144
l2143:
	add $14,1
	pop $14
	jmp l2141
l2144:
	push "txt"
	push $14
	pop $b
	popax
	add $a,$b
	pop $12
	push $11
	push "center"
	cmpje
	cmp0
	je l2146
	push $12
	spushs
	push $16
	push $12
	spushs
	spop $a
	call [$a],getw
	pop $b
	popax
	sub $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push 0
	spop $a
	call [$a],move
	jmp l2145
l2146:
	push $12
	spushs
	push $16
	push $12
	spushs
	spop $a
	call [$a],getw
	pop $b
	popax
	sub $a,$b
	push 0
	spop $a
	call [$a],move
l2145:
	jmp l2143
l2142:
l2140:
	push "W"
	push $16
	cthis var2
	push "grtxt"
	clparent gfxObject,init
	end method
	method stdshadow
	localint $1
	pop $1
	push 0
	push 0
	push 0
	push $1
	cthis setshadow
	end method
	method setshadow
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	localstring $5
	localstring $6
	localstring $7
	push sFont
	push iFontSize
	push "_fntbrd"
	cthis _checkfont
	pop $7
	localint $8
	push 0
	pop $8
l2147:
	push $8
	call dbtxt,getrowsno
	cmpjl
	cmp0
	je l2148
	jmp l2150
l2149:
	add $8,1
	pop $8
	jmp l2147
l2150:
	push "txt"
	push $8
	pop $b
	popax
	add $a,$b
	pop $5
	push "txts"
	push $8
	pop $b
	popax
	add $a,$b
	pop $6
	push $6
	spushs
	spop $e
	new text,[$e]
	push $6
	spushs
	push $5
	spushs
	spop $a
	call [$a],get
	spop $a
	call [$a],set
	push $6
	spushs
	push $7
	spop $a
	call [$a],setfont
	push $6
	spushs
	push $5
	spushs
	spop $a
	call [$a],getz
	push 1
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setz
	push $6
	spushs
	push $5
	spushs
	spop $a
	call [$a],getpx
	push $4
	pop $b
	popax
	add $a,$b
	push $5
	spushs
	spop $a
	call [$a],getpy
	push $4
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	push $6
	spushs
	push $1
	push $2
	push $3
	spop $a
	call [$a],createtxt
	push $6
	call grtxt,add
	jmp l2149
l2148:
	end method
	method setz
	localint $1
	pop $1
	push $1
	pop Z
	push $1
	call grtxt,setz
	end method
	method getz
	push Z
	end method
	method isin
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	call grtxt,isin
	end method
	method view
	localdef $1
	pop $1
	localstring $2
l2151:
	push A
	push $1
	cmpjne
	cmp0
	je l2152
	push $1
	call grtxt,get
	pop $2
	push $2
	spushs
	spop $a
	call [$a],show
	push "txts"
	push "txt"
	call $2,strsubbs
	pop $b
	popax
	add $a,$b
	pop $2
	push $2
	call engine,varexist
	cmp0
	je l2154
	push $2
	spushs
	spop $a
	call [$a],show
l2154:
	localdef $1
	pop $1
	jmp l2151
l2152:
	end method
	method blitto
	localstring $1
	pop $1
	localstring $2
	localint $3
	push 0
	pop $3
l2155:
	push $3
	call grtxt,size
	cmpjl
	cmp0
	je l2156
	jmp l2158
l2157:
	add $3,1
	pop $3
	jmp l2155
l2158:
	push $3
	call grtxt,get
	pop $2
	push $2
	spushs
	spop $a
	call [$a],buildfullname
	push $1
	spushs
	push $2
	spushs
	spop $a
	call [$a],getfullname
	spop $a
	call [$a],blit
	push GAME
	spushs
	push $2
	spushs
	spop $a
	call [$a],getfullname
	spop $a
	call [$a],vardel
	jmp l2157
l2156:
	end method
	method setcol
	localint $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	localint $4
	push 0
	pop $4
l2159:
	push $4
	call grtxt,size
	cmpjl
	cmp0
	je l2160
	jmp l2162
l2161:
	add $4,1
	pop $4
	jmp l2159
l2162:
	push $4
	call grtxt,get
	spushs
	push $1
	push $2
	push $3
	spop $a
	call [$a],createtxt
	jmp l2161
l2160:
	end method
	method clip
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	localint $5
	push 0
	pop $5
l2163:
	push $5
	call grtxt,size
	cmpjl
	cmp0
	je l2164
	jmp l2166
l2165:
	add $5,1
	pop $5
	jmp l2163
l2166:
	push $5
	call grtxt,get
	spushs
	push $1
	push $2
	push $3
	push $4
	spop $a
	call [$a],clip
	jmp l2165
l2164:
	end method
	method setpos
	localint $1
	localint $2
	pop $2
	pop $1
	localdef $3
	push $1
	call grtxt,getposx
	pop $b
	popax
	sub $a,$b
	pop $3
	localdef $4
	push $2
	call grtxt,getposy
	pop $b
	popax
	sub $a,$b
	pop $4
	push $3
	push $4
	call grtxt,move
	end method
	end class

	class Lexer
	method init
	end method
	method buildlex
	push A
	push "id"
	push "found"
	cthis vars
	new vector,vconsts
	push "string"
	call vconsts,type
	new vector,vtmp1
	push "string"
	call vtmp1,type
	new vector,vtmp2
	push "string"
	call vtmp2,type
	new int,dot
	push "."
	spushs
	push 0
	spop $h
	call $h,getbyte
	pop dot
	new string,_literal_char
	push "\""
	pop _literal_char
	end method
	method setliteralchar
	localstring $1
	pop $1
	push $1
	pop _literal_char
	end method
	method getliteralchar
	push _literal_char
	end method
	method _isvar
	localint $1
	localint $2
	pop $2
	pop $1
	localint $3
	push id
	pop $3
	push ""
	pop found
	localint $4
l2167:
	push $3
	cthis length
	cmpjl
	cmp0
	je l2168
	push $3
	cthis getbyte
	pop $4
	push $4
	push $1
	cmpjae
	cmp0
	je l2170
	push $4
	push $2
	cmpjle
	jmp l2172
l2170:
	push 0
	jmp l2172
l2171:
	push 1
l2172:
	cmp0
	je l2173
	push $3
	push 1
	cthis getb
	popax
	add found,$a
	pop found
	add $3,1
	pop $3
	jmp l2169
l2173:
	push $4
	push BYTEa
	cmpjae
	cmp0
	je l2175
	push $4
	push BYTEz
	cmpjle
	jmp l2177
l2175:
	push 0
	jmp l2177
l2176:
	push 1
l2177:
	cmp0
	jne l2179
	push $4
	push BYTEA
	cmpjae
	cmp0
	je l2180
	push $4
	push BYTEZ
	cmpjle
	jmp l2182
l2180:
	push 0
	jmp l2182
l2181:
	push 1
l2182:
	cmp0
	jne l2179
	push $4
	push BYTE_
	cmpje
	jmp l2183
l2178:
	push 0
	jmp l2183
l2179:
	push 1
l2183:
	cmp0
	je l2184
	push ""
	pop found
l2184:
	cthis length
	pop $3
l2169:
	jmp l2167
l2168:
	call found,length
	end method
	method isreal
	localint $1
	push id
	pop $1
	push ""
	pop found
	localint $2
	localint $3
	push 1
	pop $3
l2185:
	push $1
	cthis length
	cmpjl
	cmp0
	je l2186
	push $1
	cthis getbyte
	pop $2
	push $2
	push BYTE0
	cmpjae
	cmp0
	je l2188
	push $2
	push BYTE9
	cmpjle
	jmp l2190
l2188:
	push 0
	jmp l2190
l2189:
	push 1
l2190:
	cmp0
	jne l2192
	push $2
	push dot
	cmpje
	cmp0
	je l2193
	push $3
	jmp l2195
l2193:
	push 0
	jmp l2195
l2194:
	push 1
l2195:
	jmp l2196
l2191:
	push 0
	jmp l2196
l2192:
	push 1
l2196:
	cmp0
	je l2197
	push $2
	push dot
	cmpje
	cmp0
	je l2199
	push 0
	pop $3
l2199:
	push $1
	push 1
	cthis getb
	popax
	add found,$a
	pop found
	add $1,1
	pop $1
	jmp l2187
l2197:
	cthis length
	pop $1
l2187:
	jmp l2185
l2186:
	push $3
	cmp0
	jne l2202
	push 0
	push 1
	call found,getb
	push "."
	cmpje
	cmp0
	jne l2202
	push 0
	push 1
	call found,gete
	push "."
	cmpje
	jmp l2203
l2201:
	push 0
	jmp l2203
l2202:
	push 1
l2203:
	cmp0
	je l2204
	push ""
	pop found
l2204:
	call found,length
	end method
	method isident
	localint $1
	push id
	pop $1
	push ""
	pop found
	localint $2
l2205:
	push $1
	cthis length
	cmpjl
	cmp0
	je l2206
	push $1
	cthis getbyte
	pop $2
	push $2
	push BYTEa
	cmpjae
	cmp0
	je l2208
	push $2
	push BYTEz
	cmpjle
	jmp l2210
l2208:
	push 0
	jmp l2210
l2209:
	push 1
l2210:
	cmp0
	jne l2212
	push $2
	push BYTEA
	cmpjae
	cmp0
	je l2213
	push $2
	push BYTEZ
	cmpjle
	jmp l2215
l2213:
	push 0
	jmp l2215
l2214:
	push 1
l2215:
	cmp0
	jne l2212
	push $2
	push BYTE_
	cmpje
	cmp0
	jne l2212
	push $1
	push id
	cmpja
	cmp0
	je l2216
	push $2
	push BYTE0
	cmpjae
	cmp0
	je l2216
	push $2
	push BYTE9
	cmpjle
	jmp l2218
l2216:
	push 0
	jmp l2218
l2217:
	push 1
l2218:
	jmp l2219
l2211:
	push 0
	jmp l2219
l2212:
	push 1
l2219:
	cmp0
	je l2220
	push $1
	push 1
	cthis getb
	popax
	add found,$a
	pop found
	add $1,1
	pop $1
	jmp l2207
l2220:
	cthis length
	pop $1
l2207:
	jmp l2205
l2206:
	call found,length
	end method
	method isliteral
	cthis check
	cthis getliteralchar
	cmpjne
	cmp0
	je l2222
	push 0
	ret
l2222:
	localint $1
	push id
	push 1
	pop $b
	popax
	add $a,$b
	pop $1
	push ""
	pop found
	localstring $2
l2223:
	push $1
	cthis length
	cmpjl
	cmp0
	je l2224
	push $1
	push 1
	cthis getb
	pop $2
	push $2
	cthis getliteralchar
	cmpje
	cmp0
	je l2226
	push 1
	ret
	jmp l2225
l2226:
	push $2
	popax
	add found,$a
	pop found
	add $1,1
	pop $1
l2225:
	jmp l2223
l2224:
	push 0
	end method
	method isconst
	localstring $1
	localint $2
	cthis isident
	pop $2
	localint $3
	push 0
	pop $3
l2227:
	push $3
	call vconsts,size
	cmpjl
	cmp0
	je l2228
	jmp l2230
l2229:
	add $3,1
	pop $3
	jmp l2227
l2230:
	push $3
	call vconsts,get
	pop $1
	push $2
	cmp0
	je l2232
	push $1
	push found
	cmpje
	cmp0
	je l2234
	push 1
	ret
l2234:
	jmp l2231
l2232:
	push id
	call $1,length
	cthis getb
	pop found
	push $1
	push found
	cmpje
	cmp0
	je l2236
	push 1
	ret
l2236:
l2231:
	jmp l2229
l2228:
	push 0
	end method
	method gettoken
	localstring $1
	localint $2
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],free
l2237:
	cthis notend
	cmp0
	je l2238
	cthis check
	push " "
	cmpje
	cmp0
	je l2240
	add id,1
	pop id
	jmp l2239
l2240:
	cthis isconst
	cmp0
	je l2242
	push $1
	spushs
	push "$const"
	spop $a
	call [$a],add
	push $1
	spushs
	cthis read
	spop $a
	call [$a],add
	jmp l2241
l2242:
	cthis isreal
	cmp0
	je l2244
	push $1
	spushs
	push "$real"
	spop $a
	call [$a],add
	cthis next
	push $2
	cmp0
	je l2246
	push $1
	spushs
	push found
	spop $a
	call [$a],add
l2246:
	jmp l2243
l2244:
	cthis isint
	cmp0
	je l2248
	push $1
	spushs
	push "$int"
	spop $a
	call [$a],add
	cthis next
	push $2
	cmp0
	je l2250
	push $1
	spushs
	push found
	spop $a
	call [$a],add
l2250:
	jmp l2247
l2248:
	cthis isident
	cmp0
	je l2252
	push $1
	spushs
	push "$alpha"
	spop $a
	call [$a],add
	cthis next
	push $2
	cmp0
	je l2254
	push $1
	spushs
	push found
	spop $a
	call [$a],add
l2254:
	jmp l2251
l2252:
	cthis isliteral
	cmp0
	je l2256
	push $1
	spushs
	push "$literal"
	spop $a
	call [$a],add
	cthis next
	push 2
	popax
	add id,$a
	pop id
	push $2
	cmp0
	je l2258
	push $1
	spushs
	push found
	spop $a
	call [$a],add
l2258:
	jmp l2255
l2256:
	push $1
	spushs
	push "$error"
	spop $a
	call [$a],add
	add id,1
	pop id
l2255:
l2251:
l2247:
l2243:
l2241:
l2239:
	jmp l2237
l2238:
	end method
	method expectdb
	localstring $1
	localint $2
	pop $2
	pop $1
	localint $3
	localstring $4
	localint $5
	push 0
	pop $5
l2259:
	push $5
	push $1
	spushs
	spop $a
	call [$a],getrowsno
	cmpjl
	cmp0
	je l2260
	jmp l2262
l2261:
	add $5,1
	pop $5
	jmp l2259
l2262:
	call vtmp2,free
	push 0
	pop $3
l2263:
	push $3
	push $1
	spushs
	push $5
	spop $a
	call [$a],getcolsno
	cmpjl
	cmp0
	je l2264
	jmp l2266
l2265:
	add $3,1
	pop $3
	jmp l2263
l2266:
	push $1
	spushs
	push $5
	push $3
	spop $a
	call [$a],get
	pop $4
	call $4,clear
	push $4
	push ""
	cmpjne
	cmp0
	je l2268
	push $4
	call vtmp2,add
l2268:
	jmp l2265
l2264:
	push "vtmp2"
	push $2
	cthis expectvec
	cmp0
	je l2270
	push $5
	ret
l2270:
	jmp l2261
l2260:
	push 1
	popax
	sub 0,$a
	end method
	method expectvec
	localstring $1
	localint $2
	pop $2
	pop $1
	push 0
	pop id
	push "vtmp1"
	push $2
	cthis gettoken
	push $1
	call vtmp1,veceq
	end method
	method expects
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	call vtmp2,vecbuildfromstring
	push "vtmp2"
	push $3
	cthis expectvec
	end method
	method consts=
	push "addbegin"
	call vconsts,withlist
	end method
	method setas
	localstring $1
	pop $1
	push $1
	spushs
	push "buildlex"
	push "buildlex"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	spop $a
	call [$a],buildlex
	push $1
	spushs
	push "start"
	push "Lexer0"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "notend"
	push "Lexer1"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "getnext"
	push "Lexer2"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "next"
	push "Lexer3"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "check"
	push "Lexer4"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "ischar"
	push "Lexer5"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "isint"
	push "Lexer6"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "isreal"
	push "isreal"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "isbinary"
	push "Lexer7"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "isident"
	push "isident"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "isconst"
	push "isconst"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "_isvar"
	push "_isvar"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "read"
	push "Lexer8"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "isliteral"
	push "isliteral"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "gettoken"
	push "gettoken"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "expects"
	push "expects"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "expectvec"
	push "expectvec"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "expectdb"
	push "expectdb"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "consts="
	push "consts="
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setliteralchar"
	push "setliteralchar"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "getliteralchar"
	push "getliteralchar"
	spop $a
	call [$a],addmethod
	end method
	method Lexer0
	localstring $1
	pop $1
	push $1
	cthis set
	push 0
	pop id
	end method
	method Lexer1
	push id
	cthis length
	cmpjl
	end method
	method Lexer2
	push id
	cthis length
	cmpje
	cmp0
	je l2272
	push "null"
	ret
l2272:
	add id,1
	pop id
	push id
	push 1
	pop $b
	popax
	sub $a,$b
	push 1
	cthis getb
	end method
	method Lexer3
	call found,length
	popax
	add id,$a
	pop id
	end method
	method Lexer4
	push id
	cthis length
	cmpje
	cmp0
	je l2274
	push "null"
	ret
l2274:
	push id
	push 1
	cthis getb
	pop found
	push found
	end method
	method Lexer5
	localstring $1
	pop $1
	push id
	push 1
	cthis getb
	call $1,contains
	end method
	method Lexer6
	push BYTE0
	push BYTE9
	cthis _isvar
	end method
	method Lexer7
	push BYTE0
	push BYTE0
	push 1
	pop $b
	popax
	add $a,$b
	cthis _isvar
	end method
	method Lexer8
	cthis next
	push found
	end method
	end class

	class AnimaFx
	method init
	end method
	method build
	localstring $1
	pop $1
	push $1
	spushs
	push "_buildanfx"
	push "AnimaFx0"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	spop $a
	call [$a],_buildanfx
	push $1
	spushs
	push "onsetframe"
	push "AnimaFx1"
	spop $a
	call [$a],addmethod
	end method
	method AnimaFx0
	new db,dbsnd
	push 3
	call dbsnd,dbbuild
	localint $1
	push 0
	pop $1
l2275:
	push $1
	call dbsnd,getrowsno
	cmpjl
	cmp0
	je l2276
	jmp l2278
l2277:
	add $1,1
	pop $1
	jmp l2275
l2278:
	push $1
	push 0
	push $1
	push 0
	call dbsnd,get
	push "_"
	pop $b
	popax
	add $a,$b
	push $1
	push 1
	call dbsnd,get
	pop $b
	popax
	add $a,$b
	call dbsnd,set
	jmp l2277
l2276:
	end method
	method AnimaFx1
	localdef $1
	cthis actionname
	push "_"
	pop $b
	popax
	add $a,$b
	cthis framenr
	pop $b
	popax
	add $a,$b
	call dbsnd,findbyrow
	pop $1
	push $1
	push 0
	cmpjae
	cmp0
	je l2280
	push "fx"
	push $1
	push 2
	call dbsnd,get
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],play
l2280:
	end method
	end class

	class Localize
	method init
	end method
	method _lang_db
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new db,[$e]
	push $1
	spushs
	push "load"
	push $3
	pop $b
	popax
	add $a,$b
	spushs
	push $2
	cthis lang_path
	push ".db"
	pop $b
	popax
	add $a,$b
	spop $d
	spop $a
	call [$a],[$d]
	end method
	method lang_db
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push ""
	cthis _lang_db
	end method
	method lang_dbscript
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push "script"
	cthis _lang_db
	end method
	method lang_dbbeh
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push "beh"
	cthis _lang_db
	end method
	method lang_path
	localstring $1
	pop $1
	push LANGDIR
	call gameapi,getgamename
	pop $b
	popax
	add $a,$b
	push "_"
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	add $a,$b
	push LANG
	pop $b
	popax
	add $a,$b
	end method
	end class

	class PyzCounter
	method init
	localstring $1
	localint $2
	pop $2
	pop $1
	new int,istart
	new int,istop
	new int,istep
	new int,idigits
	push 50
	pop idigits
	new int,iactual
	new string,_sanima
	push $1
	pop _sanima
	push A
	push "idx"
	push 2
	push "itimestep"
	push $2
	cthis vars2
	new gmimgvec,grcnt
	localint $3
	push 0
	pop $3
l2281:
	push $3
	push idigits
	cmpjl
	cmp0
	je l2282
	jmp l2284
l2283:
	add $3,1
	pop $3
	jmp l2281
l2284:
	localstring $4
	push "pcc"
	push $1
	pop $b
	popax
	add $a,$b
	push $3
	pop $b
	popax
	add $a,$b
	pop $4
	push $1
	push $4
	cthis copyanima
	push $4
	spushs
	spop $a
	call [$a],hide
	push $4
	call grcnt,add
	jmp l2283
l2282:
	push "timcnt"
	push $2
	push "PyzCounter0"
	cthis timer=
	end method
	method PyzCounter0
	push istep
	popax
	add iactual,$a
	pop iactual
	push iactual
	cthis view
	push iactual
	push istop
	cmpje
	cmp0
	je l2286
	cthis getbuildername
	spushs
	cthis getbuildername
	push "_finish"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	jmp l2285
l2286:
	cthis play
l2285:
	end method
	method getcypher
	localint $1
	pop $1
	push "pcc"
	push _sanima
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	add $a,$b
	end method
	method start
	localint $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	pop istart
	push $2
	pop istop
	push $3
	pop istep
	push istart
	pop iactual
	push istart
	cthis view
	call timcnt,play
	end method
	method showcypher
	localint $1
	localint $2
	pop $2
	pop $1
	localstring $3
	push $1
	cthis getcypher
	pop $3
	push $3
	spushs
	push 0
	push $2
	spop $a
	call [$a],setframe
	push $3
	spushs
	spop $a
	call [$a],show
	end method
	method stop
	push 0
	call timcnt,stop
	end method
	method view
	localint $1
	pop $1
	call grcnt,hide
	push 0
	push 0
	call grcnt,setpos
	push $1
	push 0
	cmpje
	cmp0
	je l2288
	push 0
	push 0
	cthis showcypher
	jmp l2287
l2288:
	localint $2
	push 0
	pop $2
l2289:
	push $1
	push 0
	cmpja
	cmp0
	je l2290
	jmp l2292
l2291:
	add $2,1
	pop $2
	jmp l2289
l2292:
	push $2
	push $1
	push 10
	pop $b
	popax
	div $a,$b
	push $d
	cthis showcypher
	push $1
	push 10
	pop $b
	popax
	div $a,$b
	psax
	pop $1
	jmp l2291
l2290:
	localint $3
	push 0
	pop $3
	localint $4
	push $2
	push 1
	pop $b
	popax
	sub $a,$b
	pop $4
l2293:
	push $4
	push 0
	cmpjae
	cmp0
	je l2294
	jmp l2296
l2295:
	sub $4,1
	pop $4
	jmp l2293
l2296:
	push $4
	cthis getcypher
	spushs
	push $3
	push 0
	spop $a
	call [$a],move
	push $3
	push $4
	push 1
	pop $b
	popax
	add $a,$b
	cthis getcypher
	spushs
	spop $a
	call [$a],getw
	pop $b
	popax
	add $a,$b
	pop $3
	jmp l2295
l2294:
l2287:
	end method
	end class

	class AnMover
	method init
	localstring $1
	localreal $2
	localreal $3
	pop $3
	pop $2
	pop $1
	new timer,tmov
	push 1
	call tmov,settick
	push 1
	call tmov,setcycle
	push A
	push "rdx"
	push $2
	push "rdy"
	push $3
	cthis vars2
	new real,rsx
	push 0
	pop rsx
	new real,rsy
	push 0
	pop rsy
	new string,sanima
	push $1
	pop sanima
	push "onfinish"
	push "AnMover0"
	call tmov,addmethod
	end method
	method AnMover0
	cthis move
	push "_finish"
	cthis builder_func
	cthis play
	end method
	method move
	push rdx
	popax
	add rsx,$a
	pop rsx
	push rdy
	popax
	add rsy,$a
	pop rsy
	localint $1
	push rsx
	pop $1
	localint $2
	push rsy
	pop $2
	push $1
	cmp0
	jne l2299
	push $2
	jmp l2300
l2298:
	push 0
	jmp l2300
l2299:
	push 1
l2300:
	cmp0
	je l2301
	push sanima
	spushs
	push $1
	push $2
	spop $a
	call [$a],move
	push $1
	popax
	sub rsx,$a
	pop rsx
	push $2
	popax
	sub rsy,$a
	pop rsy
l2301:
	end method
	method reset
	push 0
	pop rsx
	push 0
	pop rsy
	end method
	method play
	cthis reset
	call tmov,play
	end method
	method stop
	push 0
	call tmov,stop
	end method
	end class

	method SetAnMover_tmov_onfinish
	cthis getbuildername
	spushs
	spop $a
	call [$a],sam_move
	cthis play
	end method
	class SetAnMover
	method init
	end method
	method setas
	localstring $1
	localreal $2
	localreal $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	push "setanmover"
	push "setanmover"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],setanmover
	push $1
	spushs
	push "sam_move"
	push "sam_move"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "sam_copy"
	push "sam_copy"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "sam_addtimer"
	push "SetAnMover0"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "sam_playtimer"
	push "SetAnMover1"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "sam_stoptimer"
	push "SetAnMover2"
	spop $a
	call [$a],addmethod
	end method
	method SetAnMover0
	new timer,tmov
	push 1
	call tmov,settick
	push 1
	call tmov,setcycle
	push "onfinish"
	push "SetAnMover_tmov_onfinish"
	call tmov,addmethod
	end method
	method SetAnMover1
	call tmov,play
	end method
	method SetAnMover2
	push 0
	call tmov,stop
	end method
	method setanmover
	localreal $1
	localreal $2
	pop $2
	pop $1
	new real,rdx
	push $1
	pop rdx
	new real,rdy
	push $2
	pop rdy
	new real,rsx
	push 0
	pop rsx
	new real,rsy
	push 0
	pop rsy
	push "sam_speed"
	push 1.0
	cthis var2
	end method
	method sam_move
	push rdx
	push sam_speed
	pop $b
	popax
	mul $a,$b
	popax
	add rsx,$a
	pop rsx
	push rdy
	push sam_speed
	pop $b
	popax
	mul $a,$b
	popax
	add rsy,$a
	pop rsy
	localint $1
	push rsx
	pop $1
	localint $2
	push rsy
	pop $2
	push $1
	cmp0
	jne l2304
	push $2
	jmp l2305
l2303:
	push 0
	jmp l2305
l2304:
	push 1
l2305:
	cmp0
	je l2306
	push $1
	push $2
	cthis move
	push $1
	popax
	sub rsx,$a
	pop rsx
	push $2
	popax
	sub rsy,$a
	pop rsy
	push "ansamcopy"
	cthis hasvar
	cmp0
	je l2308
	push $1
	push $2
	call ansamcopy,move
	push rdx
	push 0
	cmpja
	cmp0
	je l2310
	call ansamcopy,getpx
	push rollerx
	cmpja
	cmp0
	je l2312
	localdef $3
	call ansamcopy,getpx
	cthis getw
	pop $b
	popax
	sub $a,$b
	pop $3
	push $3
	push 0
	call ansamcopy,move
	push $3
	push 0
	cthis move
l2312:
l2310:
l2308:
l2306:
	end method
	method sam_copy
	push A
	push "rollerx"
	push 0
	push "rollerex"
	push iResX
	cthis vars2
	cthis getname
	push "ansamcopy"
	cthis copyanima
	call ansamcopy,show
	push rdx
	push 0
	cmpja
	cmp0
	je l2314
	cthis getpx
	cthis getw
	pop $b
	popax
	sub $a,$b
	cthis getpy
	call ansamcopy,ansetbpos
l2314:
	end method
	end class

	class classlives
	method init
	end method
	method set
	localint $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	localint $7
	localint $8
	localint $9
	localint $10
	localint $11
	localint $12
	localint $13
	localint $14
	localstring $15
	pop $15
	pop $14
	pop $13
	pop $12
	pop $11
	pop $10
	pop $9
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	new int,iside
	push $15
	push "left"
	cmpje
	cmp0
	je l2316
	push 1
	popax
	sub 0,$a
	pop iside
	jmp l2315
l2316:
	push 1
	pop iside
l2315:
	new int,iilezyc
	push $1
	pop iilezyc
	new int,ibum
	push $2
	pop ibum
	localint $16
	push iilezyc
	push ibum
	pop $b
	popax
	mul $a,$b
	pop $16
	new int,iposxsila
	push $3
	pop iposxsila
	new int,iendxsila
	push $3
	push $16
	pop $b
	popax
	add $a,$b
	pop iendxsila
	new int,iposysila
	push $4
	pop iposysila
	push "imgsilapodkladka"
	push $16
	push $5
	push $6
	push $7
	push $8
	push $9
	push $14
	push 1
	pop $b
	popax
	sub $a,$b
	clparent newvars,newcanvas
	push "imgsila"
	push $16
	push $5
	push $10
	push $11
	push $12
	push $13
	push $14
	clparent newvars,newcanvas
	push iposxsila
	push iposysila
	call imgsila,setpos
	push iposxsila
	push 0
	call imgsila,getex
	push 600
	call imgsila,clip
	push iposxsila
	push iposysila
	call imgsilapodkladka,setpos
	end method
	method reset
	push iposxsila
	push iposysila
	call imgsila,setpos
	end method
	method damage
	localint $1
	pop $1
	push iside
	push $1
	pop $b
	popax
	mul $a,$b
	push ibum
	pop $b
	popax
	mul $a,$b
	push 0
	call imgsila,move
	end method
	method destroyed
	push iside
	push 0
	cmpjl
	cmp0
	je l2318
	call imgsila,getex
	push iposxsila
	cmpjl
	ret
l2318:
	call imgsila,getpx
	push iendxsila
	cmpja
	ret
	end method
	method heal
	localint $1
	pop $1
	push iside
	popax
	sub 0,$a
	push $1
	pop $b
	popax
	mul $a,$b
	push ibum
	pop $b
	popax
	mul $a,$b
	push 0
	call imgsila,move
	push iside
	push 0
	cmpja
	cmp0
	je l2320
	call imgsila,getpx
	push iposxsila
	cmpjl
	cmp0
	je l2322
	push iposxsila
	push iposysila
	call imgsila,setpos
l2322:
	jmp l2319
l2320:
	call imgsila,getpx
	push iposxsila
	cmpja
	cmp0
	je l2324
	push iposxsila
	push iposysila
	call imgsila,setpos
l2324:
l2319:
	end method
	end class

	class imganima
	parent gmimgvec
	method init
	clparent gmimgvec,init
	new int,idgran
	push 0
	pop idgran
	new timer,timan
	push 1
	call timan,settick
	push "onfinish"
	push "imganima0"
	call timan,addmethod
	end method
	method imganima0
	add idgran,1
	pop idgran
	localdef $1
	cthis getbuildername
	pop $1
	push idgran
	push $1
	spushs
	spop $a
	call [$a],size
	cmpje
	cmp0
	je l2326
	push $1
	spushs
	push $1
	push "_finish"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	jmp l2325
l2326:
	push idgran
	cthis setframe
	push $1
	spushs
	push $1
	push "_endframe"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	cthis play
l2325:
	end method
	method load
	localstring $1
	localstring $2
	localint $3
	localint $4
	localint $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $5
	call timan,setcycle
	localint $6
	push $3
	pop $6
l2327:
	push $6
	push $4
	cmpjl
	cmp0
	je l2328
	jmp l2330
l2329:
	add $6,1
	pop $6
	jmp l2327
l2330:
	localdef $7
	push $1
	push $6
	pop $b
	popax
	add $a,$b
	pop $7
	push "an"
	push $7
	pop $b
	popax
	add $a,$b
	push $7
	push "."
	pop $b
	popax
	add $a,$b
	push $2
	pop $b
	popax
	add $a,$b
	push 0
	cthis newimg
	push "an"
	push $7
	pop $b
	popax
	add $a,$b
	cthis add
	jmp l2329
l2328:
	push 0
	cthis setframe
	end method
	method play
	push 0
	cthis setframe
	call timan,play
	end method
	method setframe
	localint $1
	pop $1
	cthis hide
	push $1
	pop idgran
	push $1
	cthis get
	spushs
	spop $a
	call [$a],show
	end method
	end class

	class GuiItem
	method init
	end method
	method setasrototaker
	localstring $1
	localreal $2
	localreal $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	push "_setasrototaker"
	push "GuiItem0"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],_setasrototaker
	push $1
	spushs
	push "rototaker_start"
	push "rototaker_start"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "rototaker_startwh"
	push "rototaker_startwh"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "rototaker_startact"
	push "rototaker_startact"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "rototaker_setroto"
	push "rototaker_setroto"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "rototaker_endroto"
	push "GuiItem2"
	spop $a
	call [$a],addmethod
	end method
	method GuiItem0
	localdef $1
	localdef $2
	pop $2
	pop $1
	push A
	push "ilerotos"
	push $1
	push "idrotos"
	push 0.0
	push "ikatos"
	push $2
	push 360.0
	pop $b
	popax
	mul $a,$b
	push $1
	pop $b
	popax
	div $a,$b
	psax
	push "rzoomx"
	push 0.0
	push "rzoomy"
	push 0.0
	push "rzoomstepx"
	push 0.0
	push "rzoomstepy"
	push 0.0
	push "rmovx"
	push 0.0
	push "rmovy"
	push 0.0
	push "istartalfa"
	push 128
	push "iendx"
	push 0.0
	push "iendy"
	push 0.0
	push "irotodir"
	push 1
	push "izoomdir"
	push 0
	cthis vars2
	new filter,ftroto
	push 2
	call ftroto,setpivottype
	new timer,timrotocenter
	push 1
	call timrotocenter,setcycle
	push "onfinish"
	push "GuiItem1"
	call timrotocenter,addmethod
	end method
	method GuiItem1
	cthis getbuildername
	spushs
	spop $a
	call [$a],rototaker_setroto
	cmp0
	je l2332
	cthis play
l2332:
	end method
	method GuiItem2
	push "rototaker_"
	cthis getname
	pop $b
	popax
	add $a,$b
	push "_endroto"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method rototaker_setroto
	push izoomdir
	cmp0
	je l2334
	localdef $1
	push idrotos
	push ilerotos
	pop $b
	popax
	div $a,$b
	psax
	pop $1
	localdef $2
	push rzoomx
	push rzoomstepx
	push $1
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	pop $2
	localdef $3
	push rzoomy
	push rzoomstepy
	push $1
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	pop $3
	push irotodir
	push ikatos
	pop $b
	popax
	mul $a,$b
	push $2
	push $3
	call ftroto,rotatezoomxy
	jmp l2333
l2334:
	localdef $1
	push ilerotos
	push idrotos
	pop $b
	popax
	sub $a,$b
	pop $1
	localdef $2
	push rzoomx
	push rzoomstepx
	push $1
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	pop $2
	localdef $3
	push rzoomy
	push rzoomstepy
	push $1
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	pop $3
	push irotodir
	push ikatos
	pop $b
	popax
	mul $a,$b
	push $2
	push $3
	call ftroto,rotatezoomxy
	push idrotos
	push ilerotos
	pop $b
	popax
	div $a,$b
	psax
	pop $1
l2333:
	push istartalfa
	push 255
	cmpjl
	cmp0
	je l2336
	localreal $4
	push istartalfa
	pop $4
	push $4
	push 255.0
	push $4
	pop $b
	popax
	sub $a,$b
	push $1
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	call ftroto,setopacity
l2336:
	localreal $5
	push iendx
	cthis getposx
	pop $b
	popax
	sub $a,$b
	push $1
	pop $b
	popax
	mul $a,$b
	push $2
	pop $b
	popax
	mul $a,$b
	pop $5
	localreal $6
	push iendy
	cthis getposy
	pop $b
	popax
	sub $a,$b
	push $1
	pop $b
	popax
	mul $a,$b
	push $3
	pop $b
	popax
	mul $a,$b
	pop $6
	push $5
	push $6
	cthis move
	add idrotos,1
	pop idrotos
	push idrotos
	push ilerotos
	cmpjl
	cmp0
	je l2338
	push 1
	jmp l2337
l2338:
	call ftroto,unlink
	cthis rototaker_endroto
	push 0
l2337:
	end method
	method rototaker_startact
	localint $1
	localint $2
	localstring $3
	pop $3
	pop $2
	pop $1
	cthis getpx
	cthis getpy
	push $1
	push $2
	cthis getw
	cthis geth
	push $3
	cthis rototaker_start
	end method
	method rototaker_start
	localint $1
	localint $2
	localint $3
	localint $4
	localreal $5
	localreal $6
	localstring $7
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $7
	push 0
	cthis setframe
	push $1
	push $2
	cthis setpos
	push $3
	push $4
	push $5
	push $6
	cthis getw
	cthis geth
	cthis rototaker_startwh
	end method
	method rototaker_startwh
	localint $1
	localint $2
	localreal $3
	localreal $4
	localreal $5
	localreal $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	pop iendx
	push $2
	pop iendy
	push $1
	cthis getcx
	pop $b
	popax
	sub $a,$b
	spushs
	spop $h
	call $h,to_r
	push ilerotos
	pop $b
	popax
	div $a,$b
	psax
	pop rmovx
	push $2
	cthis getcy
	pop $b
	popax
	sub $a,$b
	spushs
	spop $h
	call $h,to_r
	push ilerotos
	pop $b
	popax
	div $a,$b
	psax
	pop rmovy
	push $5
	push $3
	cmpja
	cmp0
	je l2340
	push $3
	push $5
	pop $b
	popax
	div $a,$b
	psax
	pop rzoomx
	push $5
	push $3
	pop $b
	popax
	sub $a,$b
	push $5
	pop $b
	popax
	div $a,$b
	psax
	pop rzoomstepx
	push 1
	pop izoomdir
	jmp l2339
l2340:
	push 0
	pop izoomdir
	push $5
	push $3
	pop $b
	popax
	div $a,$b
	psax
	pop rzoomx
	push 1.0
	push rzoomx
	pop $b
	popax
	sub $a,$b
	push ilerotos
	pop $b
	popax
	div $a,$b
	psax
	pop rzoomstepx
l2339:
	push $6
	push $4
	cmpja
	cmp0
	je l2342
	push $4
	push $6
	pop $b
	popax
	div $a,$b
	psax
	pop rzoomy
	push $6
	push $4
	pop $b
	popax
	sub $a,$b
	push $6
	pop $b
	popax
	div $a,$b
	psax
	pop rzoomstepy
	jmp l2341
l2342:
	push $6
	push $4
	pop $b
	popax
	div $a,$b
	psax
	pop rzoomy
	push 1.0
	push rzoomy
	pop $b
	popax
	sub $a,$b
	push ilerotos
	pop $b
	popax
	div $a,$b
	psax
	pop rzoomstepy
l2341:
	cthis getname
	call ftroto,link
	push 0
	pop idrotos
	cthis rototaker_setroto
	cmp0
	je l2344
	call timrotocenter,play
l2344:
	end method
	end class

	class CalcFPS
	method init
	new real,rfps1
	new real,rfps2
	new real,rfps3
	new real,rsec
	push 1000.0
	pop rsec
	new real,rstart
	push 1.0
	pop rstart
	push "tickfps"
	push "CalcFPS0"
	cthis cycle=
	end method
	method CalcFPS0
	cthis getbuildername
	spushs
	spop $a
	call [$a],tick
	cthis play
	end method
	method stdset
	localint $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	cthis stdfont
	cthis white
	push $2
	push $3
	push 1000
	cthis set
	end method
	method set
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	localint $7
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push "txtfps"
	push 0
	push $1
	push $2
	push $3
	push $4
	cthis newtext
	push $7
	call txtfps,setz
	push $5
	push $6
	cthis setpos
	end method
	method setpos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call txtfps,setpos
	end method
	method tick
	localreal $1
	call engine,getticks
	pop $1
	push $1
	push rstart
	cmpja
	cmp0
	je l2346
	push rfps2
	pop rfps1
	push rfps3
	pop rfps2
	push rsec
	push $1
	push rstart
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	div $a,$b
	psax
	pop rfps3
	push "delay: "
	push $1
	push rstart
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	add $a,$b
	push " fps: "
	pop $b
	popax
	add $a,$b
	push rfps1
	push rfps2
	pop $b
	popax
	add $a,$b
	push rfps3
	pop $b
	popax
	add $a,$b
	push 3
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	call txtfps,txtset
	jmp l2345
l2346:
	push "inf"
	call txtfps,txtset
l2345:
	push $1
	pop rstart
	end method
	method play
	call tickfps,play
	end method
	method stop
	push 0
	call tickfps,stop
	end method
	end class

	class Film
	parent gfxObject
	method init
	new img,imfilm
	call imfilm,buildfullname
	push "imfilm"
	clparent gfxObject,init
	new string,sfilmpath
	new db,dbfilm
	new db,dbfilm2
	new int,istartklatka
	new int,iklatka
	new int,iendklatka
	new string,sprefilm
	new int,ifilmcycle
	new string,smusic
	new int,igameloopdelay
	push igmdelay
	pop igameloopdelay
	new gmobjvec,grsfx
	new gmimgvec,grbuf
	push A
	push "bcenter"
	push 0
	push "bborders"
	push 0
	push "musicclass"
	push "null"
	push "bbuffer"
	push 0
	push "sfileformat"
	push "jpg"
	cthis vars2
	push "timfilm"
	push "Film0"
	cthis cycle=
	end method
	method Film0
	cthis nextframe
	push iklatka
	push iendklatka
	cmpjle
	cmp0
	je l2348
	call timfilm,play
	jmp l2347
l2348:
	cthis retfps
	localdef $1
	cthis getbuildername
	pop $1
	push $1
	spushs
	push "onfinish"
	spop $a
	call [$a],hasaddedmet
	cmp0
	je l2350
	push $1
	spushs
	spop $a
	call [$a],onfinish
l2350:
l2347:
	end method
	method bufferfilm
	end method
	method retfps
	push igameloopdelay
	call engine,setloopdelay
	end method
	method setfilmfps
	call engine,getloopdelay
	pop igameloopdelay
	localint $1
	push "fps:"
	call dbfilm,dbgetint
	pop $1
	push $1
	push 0
	cmpja
	cmp0
	je l2352
	push $1
	call engine,setfps
l2352:
	end method
	method setcycle
	localint $1
	pop $1
	push $1
	call timfilm,setcycle
	push $1
	pop ifilmcycle
	end method
	method nextframe
	cthis loadframe
	add iklatka,1
	pop iklatka
	end method
	method loadframe
	localdef $1
	push iklatka
	call dbfilm,findbyrow
	pop $1
	push $1
	push 0
	cmpjae
	cmp0
	je l2354
	localint $2
	push 1
	pop $2
l2355:
	push $2
	push $1
	call dbfilm,getcolsno
	cmpjl
	cmp0
	je l2356
	jmp l2358
l2357:
	add $2,1
	pop $2
	jmp l2355
l2358:
	push $1
	push $2
	call dbfilm,get
	spushs
	push "fadeout:"
	cmpst
	jne l2360
	spop $a
	add $2,1
	pop $2
	push musicclass
	push "null"
	cmpjne
	cmp0
	je l2362
	push musicclass
	spushs
	push $1
	push $2
	call dbfilm,get
	spop $a
	call [$a],fadeout
l2362:
	jmp l2359
l2360:
	spop $a
	localdef $3
	push $1
	push $2
	call dbfilm,get
	pop $3
	push $3
	spushs
	push "volume_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_"
	pop $b
	popax
	add $a,$b
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	call dbfilm,[$d]
	spop $a
	call [$a],setvol
	push $3
	spushs
	spop $a
	call [$a],play
l2359:
	jmp l2357
l2356:
l2354:
	localdef $4
	call imfilm,getz
	pop $4
	localdef $5
	call imfilm,getpx
	pop $5
	localdef $6
	call imfilm,getpy
	pop $6
	push bbuffer
	cmp0
	je l2364
	localdef $3
	push iklatka
	push istartklatka
	pop $b
	popax
	sub $a,$b
	call grbuf,get
	pop $3
	push $3
	spushs
	spop $a
	call [$a],createfrombuffer
	push $3
	call imfilm,copy
	push $3
	spushs
	spop $a
	call [$a],hide
	call imfilm,show
	push iklatka
	push istartklatka
	cmpja
	cmp0
	je l2366
	push iklatka
	push istartklatka
	pop $b
	popax
	sub $a,$b
	push 1
	pop $b
	popax
	sub $a,$b
	call grbuf,get
	spushs
	spop $a
	call [$a],free
l2366:
	jmp l2363
l2364:
	push sfilmpath
	push sprefilm
	pop $b
	popax
	add $a,$b
	push iklatka
	pop $b
	popax
	add $a,$b
	push "."
	pop $b
	popax
	add $a,$b
	push sfileformat
	pop $b
	popax
	add $a,$b
	call imfilm,load
	call imfilm,show
l2363:
	push $4
	call imfilm,setz
	push bcenter
	cmp0
	je l2368
	push igmappw
	call imfilm,getw
	pop $b
	popax
	sub $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push igmapph
	call imfilm,geth
	pop $b
	popax
	sub $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	call imfilm,setpos
	jmp l2367
l2368:
	push $5
	push $6
	call imfilm,setpos
l2367:
	end method
	method playfilm
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	cthis load
	cthis play
	end method
	method load
	localstring $1
	localstring $2
	pop $2
	pop $1
	cthis isplaying
	cmp0
	je l2370
	cthis free
l2370:
	push $1
	pop sfilmpath
	push $1
	push $2
	pop $b
	popax
	add $a,$b
	push ".db"
	pop $b
	popax
	add $a,$b
	call dbfilm,load
	push "start:"
	call dbfilm,dbgetint
	pop istartklatka
	push istartklatka
	pop iklatka
	push "end:"
	call dbfilm,dbgetint
	pop iendklatka
	push "prefix:"
	call dbfilm,dbget
	pop sprefilm
	push "music:"
	call dbfilm,dbget
	pop smusic
	localdef $3
	push "format:"
	call dbfilm,findbyrow
	pop $3
	push $3
	push 0
	cmpjae
	cmp0
	je l2372
	push $3
	push 1
	call dbfilm,get
	pop sfileformat
l2372:
	push "buffer:"
	call dbfilm,dbgetint
	pop bbuffer
	push bbuffer
	cmp0
	je l2374
	localint $4
	push istartklatka
	pop $4
l2375:
	push $4
	push iendklatka
	cmpjle
	cmp0
	je l2376
	jmp l2378
l2377:
	add $4,1
	pop $4
	jmp l2375
l2378:
	localdef $5
	push "imbuf"
	push $4
	pop $b
	popax
	add $a,$b
	pop $5
	push $5
	spushs
	spop $e
	new img,[$e]
	push $5
	spushs
	push sfilmpath
	push sprefilm
	pop $b
	popax
	add $a,$b
	push $4
	pop $b
	popax
	add $a,$b
	push "."
	pop $b
	popax
	add $a,$b
	push sfileformat
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],loadbuffer
	push $5
	call grbuf,add
	jmp l2377
l2376:
l2374:
	localint $4
	push 0
	pop $4
l2379:
	push $4
	call dbfilm,getrowsno
	cmpjl
	cmp0
	je l2380
	jmp l2382
l2381:
	add $4,1
	pop $4
	jmp l2379
l2382:
	localdef $5
	push $4
	push 0
	call dbfilm,get
	pop $5
	push $5
	clparent StringChecker,isdigit
	cmp0
	je l2384
	localint $6
	push 1
	pop $6
l2385:
	push $6
	push $4
	call dbfilm,getcolsno
	cmpjl
	cmp0
	je l2386
	jmp l2388
l2387:
	add $6,1
	pop $6
	jmp l2385
l2388:
	localdef $7
	push $4
	push $6
	call dbfilm,get
	pop $7
	push $7
	spushs
	push "fadeout:"
	cmpst
	jne l2390
	spop $a
	add $6,1
	pop $6
	jmp l2389
l2390:
	spop $a
	push "fx"
	push " "
	call $7,strgetto
	pop $b
	popax
	add $a,$b
	pop $5
	localint $8
	push 100
	pop $8
	push $5
	cthis hasvar
	neg
	cmp0
	je l2392
	push $7
	cthis sfx=
	jmp l2391
l2392:
	push " "
	call $7,contains
	cmp0
	je l2394
	push " "
	call $7,strgetfrom
	pop $8
l2394:
l2391:
	push "volume_"
	push $4
	pop $b
	popax
	add $a,$b
	push "_"
	pop $b
	popax
	add $a,$b
	push $6
	pop $b
	popax
	add $a,$b
	push $8
	call dbfilm,var2
	push $4
	push $6
	push $5
	call dbfilm,set
	push $5
	call grsfx,addonce
l2389:
	jmp l2387
l2386:
l2384:
	jmp l2381
l2380:
	end method
	method play
	push istartklatka
	pop iklatka
	cthis nextframe
	push bborders
	cmp0
	je l2396
	push "imramkaup"
	cthis hasvar
	neg
	jmp l2398
l2396:
	push 0
	jmp l2398
l2397:
	push 1
l2398:
	cmp0
	je l2399
	new img,imramkaup
	new img,imramkadown
	new img,imramkaleft
	new img,imramkaright
	localint $1
	push 0.5
	push igmapph
	call imfilm,geth
	pop $b
	popax
	sub $a,$b
	spushs
	spop $h
	call $h,to_r
	push 2.0
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	pop $1
	localdef $2
	cthis getz
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
	push $1
	push 0
	cmpja
	cmp0
	je l2401
	push igmappw
	push $1
	cthis black
	push 255
	call imramkaup,create
	push $2
	call imramkaup,setz
	push "imramkaup"
	call imramkadown,copy
	push 0
	push igmapph
	push $1
	pop $b
	popax
	sub $a,$b
	call imramkadown,setpos
l2401:
	localint $3
	push 0.5
	push igmappw
	call imfilm,getw
	pop $b
	popax
	sub $a,$b
	spushs
	spop $h
	call $h,to_r
	push 2.0
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	pop $3
	push $3
	push 0
	cmpja
	cmp0
	je l2403
	push $3
	push igmapph
	cthis black
	push 255
	call imramkaleft,create
	push $2
	call imramkaleft,setz
	push "imramkaleft"
	call imramkaright,copy
	push igmappw
	push $3
	pop $b
	popax
	sub $a,$b
	push 0
	call imramkaright,setpos
l2403:
l2399:
	push smusic
	push "null"
	cmpjne
	cmp0
	je l2405
	push musicclass
	push "null"
	cmpjne
	jmp l2407
l2405:
	push 0
	jmp l2407
l2406:
	push 1
l2407:
	cmp0
	je l2408
	push musicclass
	spushs
	push smusic
	spop $a
	call [$a],playstr
l2408:
	cthis setfilmfps
	call timfilm,play
	end method
	method free
	call imfilm,free
	localint $1
	push 0
	pop $1
l2409:
	push $1
	call grsfx,size
	cmpjl
	cmp0
	je l2410
	jmp l2412
l2411:
	add $1,1
	pop $1
	jmp l2409
l2412:
	push $1
	call grsfx,get
	spushs
	spop $d
	delete [$d]
	jmp l2411
l2410:
	push 0
	pop $1
l2413:
	push $1
	call grbuf,size
	cmpjl
	cmp0
	je l2414
	jmp l2416
l2415:
	add $1,1
	pop $1
	jmp l2413
l2416:
	push $1
	call grbuf,get
	spushs
	spop $d
	delete [$d]
	jmp l2415
l2414:
	call grbuf,free
	call grsfx,free
	cthis retfps
	end method
	method showframe
	localint $1
	pop $1
	push $1
	push istartklatka
	cmpjl
	cmp0
	je l2418
	push istartklatka
	pop $1
	jmp l2417
l2418:
	push $1
	push iendklatka
	cmpja
	cmp0
	je l2420
	push iendklatka
	pop $1
l2420:
l2417:
	push $1
	pop iklatka
	cthis loadframe
	end method
	method showfirstframe
	push istartklatka
	cthis showframe
	end method
	method showlastframe
	push iendklatka
	cthis showframe
	end method
	method isplaying
	call timfilm,isplaying
	end method
	method stop
	localint $1
	pop $1
	cthis retfps
	push $1
	cmp0
	je l2422
	push iendklatka
	pop iklatka
l2422:
	push $1
	call timfilm,stop
	end method
	method getimg
	call imfilm,getfullname
	end method
	end class

	class classadvobject
	method init
	cthis addasadvobject
	end method
	method addasadvobject
	push AdventureGame
	neg
	cmp0
	je l2424
	ret
l2424:
	localstring $1
	cthis getname
	pop $1
	push $1
	call grmsmove,addonce
	push $1
	call grmslrel,addonce
	push $1
	call grmslclick,addonce
	push $1
	call grmsrclick,addonce
	end method
	method removefromadvobjs
	push AdventureGame
	neg
	cmp0
	je l2426
	ret
l2426:
	localstring $1
	cthis getname
	pop $1
	push $1
	call grmsmove,remove
	push $1
	call grmslrel,remove
	push $1
	call grmslclick,remove
	push $1
	call grmsrclick,remove
	end method
	method onmousemove
	localint $1
	localint $2
	pop $2
	pop $1
	end method
	method onmouselclick
	localint $1
	localint $2
	pop $2
	pop $1
	end method
	method onmouselrel
	localint $1
	localint $2
	pop $2
	pop $1
	end method
	method onmouserclick
	localint $1
	localint $2
	pop $2
	pop $1
	end method
	end class

	class advDelayMover
	parent DelayImgMover
	parent classadvobject
	method init
	clparent classadvobject,init
	clparent DelayImgMover,init
	push 1
	pop b2clicks
	end method
	method onmousemove
	localint $1
	localint $2
	pop $2
	pop $1
	clparent DelayImgMover,onmousemove
	end method
	method onmouselclick
	localint $1
	localint $2
	pop $2
	pop $1
	clparent DelayImgMover,onmouselclick
	end method
	method onmouselrel
	localint $1
	localint $2
	pop $2
	pop $1
	clparent DelayImgMover,onmouselrel
	end method
	end class

	class classadvanhero
	method init
	end method
	method setashero
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	push "buildhero"
	push "buildhero"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "onendframe"
	push "heroendframe1"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	spop $a
	call [$a],buildhero
	push $1
	spushs
	push "buildheroframe"
	push "buildheroframe"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "onfinish"
	push "herofinish"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "getdir"
	push "getdir"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setdir"
	push "setdir"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "thisfinish"
	push "thisfinish"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "playspec"
	push "playspec"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "playspec2"
	push "playspec2"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "herostop"
	push "herostop"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "herostart"
	push "herostart"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "herostand"
	push "herostand"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setstdfin"
	push "setstdfin"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "getpocket"
	push "getpocket"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "haspocket"
	push "haspocket"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setstandbase"
	push "setstandbase"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push $2
	spop $a
	call [$a],setstdfin
	end method
	method buildheroframe
	localstring $1
	pop $1
	push $1
	spushs
	push "onendframe"
	push "heroendframe"
	spop $a
	call [$a],addmethod
	end method
	method setstdfin
	localstring $1
	pop $1
	push "onstdfinish"
	push $1
	cthis addmethod
	end method
	method setstandbase
	localstring $1
	pop $1
	push $1
	pop _sstandbase
	end method
	method buildhero
	new string,_sbase
	new int,_istate
	push 0
	pop _istate
	push A
	push "_sobfin"
	push "null"
	push "_sfinfun"
	push "null"
	cthis vars2
	new int,_bplaystop
	new int,_iiloscsek
	new int,_itypsort
	new int,idsort
	new string,_sobstart
	new string,_sfunfinstart
	new int,bthisfin
	push 0
	pop bthisfin
	new string,_sstandbase
	push "stand"
	pop _sstandbase
	end method
	method getpocket
	push _spocketpref
	cthis getname
	pop $b
	popax
	add $a,$b
	end method
	method haspocket
	push _spocketpref
	cthis getname
	pop $b
	popax
	add $a,$b
	call engine,varexist
	end method
	method thisfinish
	localint $1
	pop $1
	push $1
	pop bthisfin
	end method
	method getdir
	cthis actionname
	spushs
	push 0
	push 2
	spop $h
	call $h,gete
	end method
	method setdir
	localstring $1
	pop $1
	cthis actionname
	spushs
	push 2
	spop $h
	call $h,strsube
	push $1
	pop $b
	popax
	add $a,$b
	cthis framenr
	cthis setframe
	end method
	method playspec
	localstring $1
	localint $2
	localint $3
	localint $4
	localstring $5
	localstring $6
	localint $7
	localstring $8
	localstring $9
	localstring $10
	pop $10
	pop $9
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	pop _sbase
	push $2
	pop _iiloscsek
	push $3
	pop _itypsort
	push $7
	pop _bplaystop
	push $8
	pop _sobfin
	push $9
	pop _sfinfun
	push $5
	pop _sobstart
	push $6
	pop _sfunfinstart
	push $2
	push 0
	cmpja
	cmp0
	je l2428
	push $3
	push 0
	cmpje
	cmp0
	je l2430
	push 1
	pop idsort
	jmp l2429
l2430:
	push $3
	push 1
	cmpje
	cmp0
	je l2432
	call $2,rand
	push 1
	pop $b
	popax
	add $a,$b
	pop idsort
l2432:
l2429:
l2428:
	push $4
	cmp0
	je l2434
	push 1
	pop _istate
	push $1
	push "start"
	pop $b
	popax
	add $a,$b
	push $10
	pop $b
	popax
	add $a,$b
	cthis play
	jmp l2433
l2434:
	push $1
	push $2
	push 0
	cmpja
	cmp0
	je l2436
	push "1"
	push $10
	pop $b
	popax
	add $a,$b
	jmp l2435
l2436:
	push $10
l2435:
	pop $b
	popax
	add $a,$b
	push 0
	cthis setframe
	cthis herostart
l2433:
	end method
	method playspec2
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	localstring $4
	call $1,length
	push 2
	cmpjl
	cmp0
	je l2438
	push ""
	jmp l2437
l2438:
	push 2
	call $1,strsube
l2437:
	pop $4
	push $4
	push 0
	push 0
	push 0
	push "null"
	push "null"
	push 0
	push $2
	push $3
	push 0
	push 2
	call $1,gete
	cthis playspec
	end method
	method herostop
	push 3
	pop _istate
	push _bplaystop
	cmp0
	je l2440
	push 0
	pop _bplaystop
	push 1
	cthis thisfinish
	push _sbase
	push "stop"
	pop $b
	popax
	add $a,$b
	cthis getdir
	pop $b
	popax
	add $a,$b
	cthis play
	jmp l2439
l2440:
	push 1
	cthis stop
l2439:
	end method
	method herostart
	push 2
	pop _istate
	push _sbase
	push _iiloscsek
	push 0
	cmpja
	cmp0
	je l2442
	push idsort
	jmp l2441
l2442:
	push ""
l2441:
	pop $b
	popax
	add $a,$b
	cthis getdir
	pop $b
	popax
	add $a,$b
	cthis play
	end method
	method herofinish
	push _istate
	push 2
	cmpje
	cmp0
	je l2444
	push bthisfin
	jmp l2446
l2444:
	push 0
	jmp l2446
l2445:
	push 1
l2446:
	cmp0
	je l2447
	push 3
	pop _istate
l2447:
	push _istate
	push 0
	cmpje
	cmp0
	je l2449
	cthis herostand
	cthis onstdfinish
	localstring $1
	cthis getname
	pop $1
	localstring $2
	push $1
	spushs
	spop $a
	call [$a],actionname
	pop $2
	push $1
	push "_FINISH"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	push $1
	push "_ACTION_"
	pop $b
	popax
	add $a,$b
	push $2
	pop $b
	popax
	add $a,$b
	push "_FINISH"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	jmp l2448
l2449:
	push _istate
	push 1
	cmpje
	cmp0
	je l2451
	cthis herostart
	push _sobstart
	push _sfunfinstart
	cthis callfun
	jmp l2450
l2451:
	push _istate
	push 2
	cmpje
	cmp0
	je l2453
	localstring $3
	push _iiloscsek
	push 0
	cmpja
	cmp0
	je l2455
	push _itypsort
	push 0
	cmpje
	cmp0
	je l2457
	push idsort
	push _iiloscsek
	pop $b
	popax
	div $a,$b
	push $d
	push 1
	pop $b
	popax
	add $a,$b
	pop idsort
	jmp l2456
l2457:
	push _itypsort
	push 1
	cmpje
	cmp0
	je l2459
	call _iiloscsek,rand
	push 1
	pop $b
	popax
	add $a,$b
	pop idsort
l2459:
l2456:
	push _sbase
	push idsort
	pop $b
	popax
	add $a,$b
	cthis getdir
	pop $b
	popax
	add $a,$b
	pop $3
	jmp l2454
l2455:
	cthis actionname
	pop $3
l2454:
	push $3
	cthis play
	jmp l2452
l2453:
	push _istate
	push 3
	cmpje
	cmp0
	je l2461
	push 0
	pop _istate
	cthis herostand
	push 1
	cthis thisfinish
	push _sobfin
	push _sfinfun
	cthis callfun
l2461:
l2452:
l2450:
l2448:
	end method
	method herostand
	localstring $1
	push _sstndpref
	cthis getname
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	call engine,varexist
	cmp0
	je l2463
	push _sstandbase
	cthis actionname
	spushs
	push 0
	push 2
	spop $h
	call $h,gete
	pop $b
	popax
	add $a,$b
	cthis play
	push $1
	spushs
	spop $a
	call [$a],play
l2463:
	end method
	method heroendframe1
	cthis getname
	push "_ENDFRAME"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method heroendframe
	cthis getposy
	call clcamera,getposy
	pop $b
	popax
	sub $a,$b
	cthis setz
	cthis haspocket
	cmp0
	je l2465
	cthis getpocket
	spushs
	cthis getposx
	cthis getposy
	cthis geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],pocketpos
l2465:
	cthis getname
	push "_ENDFRAME"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	end class

	class classadvhero
	method init
	new string,_sanim
	new int,_bisvecile
	push 0
	pop _bisvecile
	new string,_sbase
	push "null"
	pop _sbase
	new string,_sbase2
	push "null"
	pop _sbase2
	new int,izakres
	push 0
	pop izakres
	new string,_sbs2
	new string,_sbutoper
	new string,_smetpart
	new string,_simgbut
	new string,_sptfname
	cthis getname
	pop _sptfname
	end method
	method getptfname
	push _sptfname
	end method
	method link
	localstring $1
	pop $1
	push $1
	pop _sanim
	end method
	method link2
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	cthis link
	push $2
	cthis checkamounts
	end method
	method anstand
	push _sanim
	spushs
	push "stand"
	cthis getdir
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],play
	end method
	method ansay
	push _sanim
	spushs
	push "talk"
	cthis getdir
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],play
	end method
	method getdir
	push _sanim
	spushs
	spop $a
	call [$a],actionname
	spushs
	push 0
	push 2
	spop $h
	call $h,gete
	end method
	method nofpieces
	cthis getdir
	cthis nofpiecesdir
	end method
	method nofpiecesdir
	localstring $1
	pop $1
	push _bisvecile
	cmp0
	je l2467
	push $1
	call vecdirs,find
	call vecile,get
	jmp l2466
l2467:
	push 0
l2466:
	end method
	method setbase2
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	cthis setbase
	push $2
	pop _sbase2
	end method
	method setbase
	localstring $1
	pop $1
	push $1
	pop _sbase
	call $1,length
	pop izakres
	end method
	method getpropdir
	localstring $1
	pop $1
	push $1
	push "auto"
	cmpje
	cmp0
	je l2469
	cthis getdir
	jmp l2468
l2469:
	push $1
l2468:
	end method
	method _buildamounts
	push _bisvecile
	neg
	cmp0
	je l2471
	push 1
	pop _bisvecile
	new vector,vecdirs
	push "string"
	call vecdirs,type
	push "begin"
	push "uu"
	push "ru"
	push "rr"
	push "rd"
	push "dd"
	push "ld"
	push "ll"
	push "lu"
	call vecdirs,beginadd
	new vector,vecile
l2471:
	end method
	method _clearvecile
	call vecile,free
	push 8
	push 0
	call vecile,resize
	end method
	method checkamounts
	localstring $1
	pop $1
	push $1
	cthis setbase
	cthis _buildamounts
	cthis _clearvecile
	push _sanim
	push "null"
	cmpje
	cmp0
	je l2473
	ret
l2473:
	localint $2
	push _sanim
	spushs
	spop $a
	call [$a],nofactions
	pop $2
	localstring $3
	localint $4
	localint $5
	push 0
	pop $5
l2474:
	push $5
	push $2
	cmpjl
	cmp0
	je l2475
	jmp l2477
l2476:
	add $5,1
	pop $5
	jmp l2474
l2477:
	push _sanim
	spushs
	push $5
	spop $a
	call [$a],nameofaction
	pop $3
	push 0
	push izakres
	call $3,getb
	push $1
	cmpje
	cmp0
	je l2479
	push izakres
	push 10
	call $3,getb
	pop $4
	push $4
	push 0
	cmpja
	cmp0
	je l2481
	push 0
	push 2
	call $3,gete
	call vecdirs,find
	call vecile,vecinc
l2481:
l2479:
	jmp l2476
l2475:
	end method
	method getanim
	push _sanim
	end method
	method calllastfun
	cthis getcallfin
	spushs
	spop $d
	cthis [$d]
	push _simgbut
	spushs
	spop $a
	call [$a],checkonce
	end method
	method _calllastfunfin
	cthis calllastfunfin
	cthis advmsunlock
	end method
	method calllastfunfin
	cthis getcallfin
	push "_FINISH"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method getcallfin
	push _sanim
	push _smetpart
	pop $b
	popax
	add $a,$b
	push _sbutoper
	pop $b
	popax
	add $a,$b
	end method
	method _cplay
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	cthis advmslock
	push _sanim
	spushs
	push 1
	spop $a
	call [$a],thisfinish
	push $1
	push "null"
	cmpje
	cmp0
	je l2483
	push _sanim
	spushs
	push $3
	cthis getpropdir
	spop $a
	call [$a],setdir
	push $2
	push "null"
	cmpjne
	cmp0
	je l2485
	push $2
	spushs
	spop $d
	cthis [$d]
l2485:
	jmp l2482
l2483:
	push _sanim
	spushs
	push $1
	push 0
	push 0
	push 0
	push "null"
	push "null"
	push 0
	cthis getname
	push $2
	push $3
	cthis getpropdir
	spop $a
	call [$a],playspec
l2482:
	end method
	method _cplay1
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push "_cplay1_2"
	push $2
	cthis _cplay
	end method
	method _cplay1_2
	cthis calllastfun
	cthis _callbehs
	end method
	method _callbehs
	cthis advmsunlock
	cthis callbehs
	end method
	method callbehs
	localstring $1
	cthis getcallfin
	pop $1
	push "beh_"
	push $1
	pop $b
	popax
	add $a,$b
	cthis behexist
	cmp0
	je l2487
	push "beh_"
	push $1
	pop $b
	popax
	add $a,$b
	cthis getname
	push "_calllastfunfin"
	cthis playbehobfin
	jmp l2486
l2487:
	cthis _calllastfunfin
l2486:
	end method
	method _cplay2_2
	cthis calllastfun
	push _sbs2
	push "_callbehs"
	cthis getdir
	cthis _cplay
	end method
	method _cplay2
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $2
	pop _sbs2
	push $1
	push "_cplay2_2"
	push $3
	cthis _cplay
	end method
	method no_turn
	localstring $1
	pop $1
	localstring $2
	push _spathpref
	push _sanim
	pop $b
	popax
	add $a,$b
	pop $2
	localstring $3
	push _simgbut
	spushs
	spop $a
	call [$a],getbutdir
	cthis getpropdir
	pop $3
	push $2
	call engine,varexist
	cmp0
	je l2489
	cthis getdir
	push $3
	cmpjne
	jmp l2491
l2489:
	push 0
	jmp l2491
l2490:
	push 1
l2491:
	cmp0
	je l2492
	push $2
	spushs
	push $3
	cthis getname
	push $1
	spop $a
	call [$a],heroturn
	push 0
	jmp l2488
l2492:
	push 1
l2488:
	end method
	method _heroplay1
	push _simgbut
	cthis heroplay1
	end method
	method _heroplay2
	push _simgbut
	cthis heroplay2
	end method
	method heroplay1
	localstring $1
	pop $1
	push $1
	pop _simgbut
	push "_heroplay1"
	cthis no_turn
	cmp0
	je l2494
	push $1
	spushs
	spop $a
	call [$a],getbutname
	pop _sbutoper
	push $1
	spushs
	spop $a
	call [$a],getbase1
	push $1
	spushs
	spop $a
	call [$a],getbutdir
	cthis getpropdir
	cthis _cplay1
l2494:
	end method
	method heroplay2
	localstring $1
	pop $1
	push $1
	pop _simgbut
	push "_heroplay2"
	cthis no_turn
	cmp0
	je l2496
	push $1
	spushs
	spop $a
	call [$a],getbutname
	pop _sbutoper
	push $1
	spushs
	spop $a
	call [$a],getbase1
	push $1
	spushs
	spop $a
	call [$a],getbase2
	push $1
	spushs
	spop $a
	call [$a],getbutdir
	cthis getpropdir
	cthis _cplay2
l2496:
	end method
	method _setbase2
	localstring $1
	pop $1
	push $1
	push 1
	call modadv,get
	push $1
	push 2
	call modadv,get
	cthis setbase2
	end method
	method _setbase
	localstring $1
	pop $1
	push $1
	push 1
	call modadv,get
	cthis setbase
	end method
	method heroplay3
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	push $2
	push 1
	call modadv,get
	spop $a
	call [$a],setbutbase1
	push $1
	spushs
	push $2
	push 2
	call modadv,get
	spop $a
	call [$a],setbutbase2
	push $1
	cthis heroplay2
	end method
	end class

	new snd,_fxtakeitem
	class classherotaker
	parent classadvhero
	method init
	clparent classadvhero,init
	push "_PICKUP_"
	pop _smetpart
	end method
	method herotake
	localstring $1
	pop $1
	push $1
	cthis heroplay2
	end method
	method calllastfun
	push _sanim
	spushs
	spop $a
	call [$a],haspocket
	cmp0
	je l2498
	call _fxtakeitem,play
	push _simgbut
	spushs
	spop $a
	call [$a],hideontake
	cmp0
	je l2500
	push _simgbut
	spushs
	spop $a
	call [$a],hide
	jmp l2499
l2500:
	push _simgbut
	spushs
	push "but"
	spop $a
	call [$a],setbuttyp
l2499:
	push _sanim
	spushs
	spop $a
	call [$a],getpocket
	spushs
	push _sbutoper
	push _simgbut
	spushs
	spop $a
	call [$a],getpocket
	spop $a
	call [$a],additem
l2498:
	clparent classadvhero,calllastfun
	end method
	end class

	class classherolooker
	parent classadvhero
	method init
	clparent classadvhero,init
	push "_OPERATE_"
	pop _smetpart
	end method
	method herolook
	localstring $1
	pop $1
	push $1
	cthis heroplay2
	end method
	method herooperate
	localstring $1
	pop $1
	push $1
	cthis heroplay2
	end method
	method heroopendoor
	localstring $1
	pop $1
	push $1
	push "open:"
	cthis heroplay3
	end method
	method heroclosedoor
	localstring $1
	pop $1
	push $1
	push "close:"
	cthis heroplay3
	end method
	end class

	class classherouser
	parent classadvhero
	method init
	clparent classadvhero,init
	new string,_stool
	end method
	method herouse
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	pop _stool
	push "_USE_"
	push _stool
	pop $b
	popax
	add $a,$b
	push "_ON_"
	pop $b
	popax
	add $a,$b
	pop _smetpart
	push _sanim
	spushs
	spop $a
	call [$a],getpocket
	spushs
	spop $a
	call [$a],itemhide
	push $2
	pop _simgbut
	push $2
	spushs
	spop $a
	call [$a],getbutname
	pop _sbutoper
	push $2
	spushs
	spop $a
	call [$a],baseuse1
	push $2
	spushs
	spop $a
	call [$a],baseuse2
	push $2
	spushs
	spop $a
	call [$a],getbutdir
	cthis getpropdir
	cthis _cplay2
	end method
	method calllastfun
	push _sanim
	push "_USE_"
	pop $b
	popax
	add $a,$b
	push _stool
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	push _sanim
	push "_USE_ON_"
	pop $b
	popax
	add $a,$b
	push _sbutoper
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	cthis getcallfin
	spushs
	spop $d
	cthis [$d]
	end method
	method calllastfunfin
	push _sanim
	push "_USE_"
	pop $b
	popax
	add $a,$b
	push _stool
	pop $b
	popax
	add $a,$b
	push "_FINISH"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	push _sanim
	push "_USE_ON_"
	pop $b
	popax
	add $a,$b
	push _sbutoper
	pop $b
	popax
	add $a,$b
	push "_FINISH"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	cthis getcallfin
	push "_FINISH"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method callbehs
	localstring $1
	cthis getname
	pop $1
	push "beh_"
	cthis getcallfin
	pop $b
	popax
	add $a,$b
	cthis behexist
	cmp0
	je l2502
	push "beh_"
	cthis getcallfin
	pop $b
	popax
	add $a,$b
	push $1
	push "_calllastfunfin"
	cthis playbehobfin
	jmp l2501
l2502:
	push "beh_"
	push _sanim
	pop $b
	popax
	add $a,$b
	push "_USE_ON_"
	pop $b
	popax
	add $a,$b
	push _sbutoper
	pop $b
	popax
	add $a,$b
	cthis behexist
	cmp0
	je l2504
	push "beh_"
	push _sanim
	pop $b
	popax
	add $a,$b
	push "_USE_ON_"
	pop $b
	popax
	add $a,$b
	push _sbutoper
	pop $b
	popax
	add $a,$b
	push $1
	push "_calllastfunfin"
	cthis playbehobfin
	jmp l2503
l2504:
	push "beh_"
	push _sanim
	pop $b
	popax
	add $a,$b
	push "_USE_"
	pop $b
	popax
	add $a,$b
	push _stool
	pop $b
	popax
	add $a,$b
	cthis behexist
	cmp0
	je l2506
	push "beh_"
	push _sanim
	pop $b
	popax
	add $a,$b
	push "_USE_"
	pop $b
	popax
	add $a,$b
	push _stool
	pop $b
	popax
	add $a,$b
	push $1
	push "_calllastfunfin"
	cthis playbehobfin
	jmp l2505
l2506:
	push "beh_"
	push _sanim
	pop $b
	popax
	add $a,$b
	push "_USE"
	pop $b
	popax
	add $a,$b
	cthis behexist
	cmp0
	je l2508
	push "beh_"
	push _sanim
	pop $b
	popax
	add $a,$b
	push "_USE"
	pop $b
	popax
	add $a,$b
	push $1
	push "_calllastfunfin"
	cthis playbehobfin
	jmp l2507
l2508:
	cthis _calllastfunfin
l2507:
l2505:
l2503:
l2501:
	end method
	end class

	class classpathf
	parent classadvhero
	method init
	clparent classadvhero,init
	new path,ptf
	new string,swalkto
	push "null"
	pop swalkto
	new string,_sfunnopath
	push "null"
	pop _sfunnopath
	new string,_sfunvisit
	push "null"
	pop _sfunvisit
	new int,destx
	new int,desty
	new int,bzmien
	push 0
	pop bzmien
	new int,bzatrzym
	push 0
	pop bzatrzym
	new string,_sitem
	push "null"
	pop _sitem
	new string,_sobzmien
	push "null"
	pop _sobzmien
	new string,_sfunzmien
	push "null"
	pop _sfunzmien
	new int,_istep
	new int,_itmpspeed
	push A
	push "ispathto"
	push 1
	cthis vars2
	push "onfinish"
	push "_cptffin"
	call ptf,addmethod
	push "onvisit"
	push "_cptvisit"
	call ptf,addmethod
	push "_cptfstdreach"
	push "_cptfstdarrive"
	cthis addsigs
	push "go:"
	cthis _setbase
	end method
	method _buildan
	localstring $1
	pop $1
	push $1
	call ptf,linkanima
	push $1
	cthis link
	end method
	method build
	localstring $1
	localstring $2
	localint $3
	localint $4
	localint $5
	localint $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $5
	pop _istep
	push $2
	push $3
	push $4
	push $5
	push $6
	call ptf,build
	push $1
	cthis _buildan
	end method
	method buildfrom
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $3
	pop _istep
	push $2
	push $3
	call ptf,copy
	push $1
	cthis _buildan
	end method
	method addsigs
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l2510
	push "onreach"
	push $1
	call ptf,addmethod
l2510:
	push $2
	push "null"
	cmpjne
	cmp0
	je l2512
	push "onarrive"
	push $2
	call ptf,addmethod
l2512:
	end method
	method sigonnopath
	localstring $1
	pop $1
	push $1
	pop _sfunnopath
	end method
	method sigonvisit
	localstring $1
	pop $1
	push $1
	pop _sfunvisit
	end method
	method _cptfstdreach
	localstring $1
	pop $1
	end method
	method _cptfstdarrive
	end method
	method move
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call ptf,move
	end method
	method setpos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call ptf,setpos
	end method
	method show
	call ptf,show
	end method
	method hide
	call ptf,hide
	end method
	method enable
	localint $1
	pop $1
	push $1
	call ptf,enable
	end method
	method disable
	localint $1
	pop $1
	push $1
	call ptf,disable
	end method
	method setanstep
	localint $1
	pop $1
	push $1
	pop _istep
	push $1
	call ptf,setanstep
	end method
	method mulspeed
	localint $1
	pop $1
	push $1
	push _istep
	pop $b
	popax
	mul $a,$b
	pop _itmpspeed
	push _itmpspeed
	call ptf,setanstep
	end method
	method retstep
	push _istep
	cthis setanstep
	end method
	method getanstep
	push _istep
	ret
	end method
	method getposx
	call ptf,getposx
	ret
	end method
	method getposy
	call ptf,getposy
	ret
	end method
	method getpx
	call ptf,getpx
	ret
	end method
	method getpy
	call ptf,getpy
	ret
	end method
	method getidan
	call ptf,getidan
	ret
	end method
	method getidan2
	call ptf,getidan2
	ret
	end method
	method getidgo
	call ptf,getidgo
	ret
	end method
	method getidanpath
	call ptf,getidanpath
	ret
	end method
	method getidan2path
	call ptf,getidan2path
	ret
	end method
	method getidgopath
	call ptf,getidgopath
	ret
	end method
	method excludev
	localint $1
	pop $1
	push $1
	call ptf,excludev
	end method
	method linkfilter
	call ptf,linkfilter
	end method
	method unlinkfilter
	call ptf,unlinkfilter
	end method
	method unlinkanima
	call ptf,unlinkanima
	end method
	method linkanima
	localstring $1
	pop $1
	push $1
	call ptf,linkanima
	end method
	method setscalepower
	localreal $1
	pop $1
	push $1
	call ptf,setscalepower
	end method
	method setzsize
	localreal $1
	pop $1
	push $1
	call ptf,setzsize
	end method
	method iswayto
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call ptf,iswayto
	ret
	end method
	method scalean
	call ptf,scalean
	end method
	method getfromver
	localint $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	call ptf,getfromver
	ret
	end method
	method getgover
	localint $1
	pop $1
	push $1
	call ptf,getgover
	ret
	end method
	method getanver
	localint $1
	pop $1
	push $1
	call ptf,getanver
	ret
	end method
	method getxver
	localint $1
	pop $1
	push $1
	call ptf,getxver
	ret
	end method
	method getyver
	localint $1
	pop $1
	push $1
	call ptf,getyver
	ret
	end method
	method getbyname
	localint $1
	pop $1
	push $1
	call ptf,getbyname
	ret
	end method
	method walkbase
	localstring $1
	pop $1
	push $1
	call ptf,setbase
	end method
	method letturn
	localint $1
	pop $1
	push $1
	call ptf,letturn
	end method
	method canturn
	call ptf,canturn
	end method
	method vecdir
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call ptf,vecdir
	end method
	method ptfgoto
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call ptf,goto
	end method
	method setmovetype
	localint $1
	pop $1
	push $1
	call ptf,setmovetype
	end method
	method walkto2
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	pop swalkto
	push $2
	push $3
	cthis cangoto
	cmp0
	je l2514
	push $2
	push $3
	call ptf,goto
	pop $2
	jmp l2513
l2514:
	push _sfunnopath
	push "null"
	cmpjne
	cmp0
	je l2516
	push _sfunnopath
	spushs
	spop $d
	cthis [$d]
l2516:
l2513:
	end method
	method walkto
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	pop swalkto
	push $1
	push "null"
	cmpje
	cthis letturn
	cthis iswalking
	cmp0
	je l2518
	push $2
	push $3
	call ptf,iswayto
	cmp0
	je l2520
	push 1
	pop bzmien
	push $2
	pop destx
	push $3
	pop desty
	push 0
	ret
	jmp l2519
l2520:
	push 1
	pop bzatrzym
	push 1
	popax
	sub 0,$a
	ret
l2519:
	jmp l2517
l2518:
	push $2
	push $3
	call ptf,goto
	ret
l2517:
	end method
	method iswaytover
	localint $1
	pop $1
	push slastpathf
	spushs
	push $1
	spop $a
	call [$a],getbyname
	pop $1
	push $1
	cthis getxver
	cthis getposx
	pop $b
	popax
	sub $a,$b
	push $1
	cthis getyver
	cthis getposy
	pop $b
	popax
	sub $a,$b
	call ptf,iswayto
	end method
	method length
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call ptf,length
	end method
	method lengthver
	localint $1
	pop $1
	push slastpathf
	spushs
	push $1
	spop $a
	call [$a],getbyname
	pop $1
	push $1
	cthis getxver
	cthis getposx
	pop $b
	popax
	sub $a,$b
	push $1
	cthis getyver
	cthis getposy
	pop $b
	popax
	sub $a,$b
	cthis length
	end method
	method goto
	localint $1
	localint $2
	pop $2
	pop $1
	push "null"
	push $1
	push $2
	cthis walkto
	ret
	end method
	method gotorel
	localint $1
	localint $2
	pop $2
	pop $1
	push _sanim
	spushs
	spop $a
	call [$a],getpx
	push $1
	pop $b
	popax
	add $a,$b
	push _sanim
	spushs
	spop $a
	call [$a],getey
	push $2
	pop $b
	popax
	add $a,$b
	cthis goto
	ret
	end method
	method turn
	localstring $1
	pop $1
	push $1
	call ptf,turn
	end method
	method iswalking
	call ptf,iswalking
	ret
	end method
	method stand
	call ptf,stand
	end method
	method stop
	localint $1
	pop $1
	push $1
	call ptf,stop
	end method
	method getidpath
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call ptf,getidpath
	ret
	end method
	method cangoto
	localint $1
	localint $2
	pop $2
	pop $1
	localint $3
	push $1
	push $2
	call ptf,getidpath
	pop $3
	push $3
	push 1
	popax
	sub 0,$a
	cmpje
	cmp0
	je l2522
	push 0
	jmp l2521
l2522:
	push $3
	call ptf,isenabled
l2521:
	ret
	end method
	method _cptfreachpocket
	cthis getptfname
	push "look"
	pop $b
	popax
	add $a,$b
	spushs
	push swalkto
	spop $a
	call [$a],herolook
	end method
	method _cptfreachbut
	cthis getptfname
	push "look"
	pop $b
	popax
	add $a,$b
	spushs
	push swalkto
	spop $a
	call [$a],herolook
	end method
	method _cptfreachdoors
	cthis getptfname
	push "look"
	pop $b
	popax
	add $a,$b
	spushs
	push swalkto
	spop $a
	call [$a],herooperate
	end method
	method _cptfreachitem
	cthis getptfname
	push "take"
	pop $b
	popax
	add $a,$b
	spushs
	push swalkto
	spop $a
	call [$a],herotake
	end method
	method _cptfherofin
	cthis herostand
	push swalkto
	push "null"
	cmpjne
	cmp0
	je l2524
	push _sanim
	push "_REACH_"
	pop $b
	popax
	add $a,$b
	push swalkto
	spushs
	spop $a
	call [$a],getbutname
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	push _sanim
	cthis ismainhero
	cmp0
	je l2526
	localstring $1
	push "null"
	pop $1
	push _sanim
	spushs
	spop $a
	call [$a],haspocket
	cmp0
	je l2528
	push _sanim
	spushs
	spop $a
	call [$a],getpocket
	spushs
	spop $a
	call [$a],getitem
	pop $1
l2528:
	push $1
	push "null"
	cmpjne
	cmp0
	je l2530
	cthis getptfname
	push "use"
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	push swalkto
	spop $a
	call [$a],herouse
	jmp l2529
l2530:
	push "_cptfreach"
	push swalkto
	spushs
	spop $a
	call [$a],gettyp
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
l2529:
l2526:
	push "null"
	pop swalkto
	jmp l2523
l2524:
	push _sanim
	push "_ARRIVE"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	cthis _cptheroendpath
l2523:
	end method
	method sigonzmien
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	pop _sobzmien
	push $2
	pop _sfunzmien
	end method
	method _cptheroendpath
	push _sfinob
	push _sfinfun
	cthis callfun
	push _bylfin
	cmp0
	je l2532
	push 0
	pop _bylfin
	jmp l2531
l2532:
	push "null"
	pop _sfinfun
	push "null"
	pop _sfinob
l2531:
	end method
	method _cptfnopath
	push _sanim
	push "_NOPATH"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method _cptfvisit
	push _sanim
	push "_VISIT"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method prepareforhero
	push "onfinish"
	push "_cptfherofin"
	call ptf,addmethod
	new string,_sfinob
	new string,_sfinfun
	new int,_bylfin
	push "_cptfnopath"
	cthis sigonnopath
	push "_cptfvisit"
	cthis sigonvisit
	end method
	method herowalkto2
	localint $1
	localint $2
	localstring $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push "null"
	push $1
	push $2
	push $3
	push $4
	cthis herowalkto
	end method
	method herowalkto
	localstring $1
	localint $2
	localint $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push _sstndpref
	push _sanim
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],stop
	push $4
	pop _sfinob
	push $5
	pop _sfinfun
	push $5
	push "null"
	cmpjne
	cmp0
	je l2534
	push 1
	pop _bylfin
l2534:
	push $1
	push $2
	push $3
	cthis walkto
	push 1
	popax
	sub 0,$a
	cmpje
	cmp0
	je l2536
	push 0
	pop ispathto
	jmp l2535
l2536:
	push 1
	pop ispathto
l2535:
	end method
	method heroturn
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $2
	pop _sfinob
	push $3
	pop _sfinfun
	push $3
	push "null"
	cmpjne
	cmp0
	je l2538
	push 1
	pop _bylfin
l2538:
	push $1
	cthis turn
	end method
	method advgoto
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push "null"
	push "null"
	cthis herowalkto2
	end method
	method advwalkto
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push "null"
	push "null"
	cthis herowalkto
	end method
	method advvisit
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],reachable
	cmp0
	je l2540
	push $1
	push $1
	spushs
	spop $a
	call [$a],getgox
	push $1
	spushs
	spop $a
	call [$a],getgoy
	cthis advwalkto
l2540:
	end method
	method herostand
	cthis retstep
	cthis stand
	push _sanim
	spushs
	spop $a
	call [$a],herostand
	end method
	method stophero
	cthis herostand
	push 1
	pop bzatrzym
	end method
	method _cptvisit
	push _sfunvisit
	spushs
	spop $d
	cthis [$d]
	push bzmien
	cmp0
	je l2542
	push 0
	pop bzmien
	push destx
	push desty
	cthis goto
	push 1
	popax
	sub 0,$a
	cmpje
	cmp0
	je l2544
	push _sfunnopath
	spushs
	spop $d
	cthis [$d]
	jmp l2543
l2544:
	push _sobzmien
	push _sfunzmien
	cthis callfun
l2543:
	jmp l2541
l2542:
	push bzatrzym
	cmp0
	je l2546
	push 0
	pop bzatrzym
	push 1
	cthis stop
l2546:
l2541:
	end method
	method _cptffin
	push swalkto
	push "null"
	cmpjne
	cmp0
	je l2548
	push swalkto
	call ptf,onreach
	push "null"
	pop swalkto
	jmp l2547
l2548:
	call ptf,onarrive
l2547:
	end method
	method anposx
	push _sanim
	spushs
	spop $a
	call [$a],getposx
	end method
	method anposy
	push _sanim
	spushs
	spop $a
	call [$a],getposy
	end method
	method bzmien
	push bzmien
	end method
	method bzmien=
	localint $1
	pop $1
	push $1
	pop bzmien
	end method
	method checkreach
	localstring $1
	pop $1
	push ispathto
	neg
	cmp0
	je l2550
	push $1
	push "null"
	cmpjne
	cmp0
	je l2550
	cthis behplaying
	neg
	jmp l2552
l2550:
	push 0
	jmp l2552
l2551:
	push 1
l2552:
	cmp0
	je l2553
	push "beh_"
	push _sanim
	pop $b
	popax
	add $a,$b
	push "_NOPATH_"
	pop $b
	popax
	add $a,$b
	push $1
	spushs
	spop $a
	call [$a],getbutname
	pop $b
	popax
	add $a,$b
	cthis playbehif
	neg
	pop _b_rewind
l2553:
	end method
	end class

	class classwalkerqueue
	method init
	new timer,timwq
	push 1
	call timwq,settick
	push 1
	call timwq,setcycle
	push "onfinish"
	push "_timwqfin"
	call timwq,addmethod
	new vector,vecpt
	push "string"
	call vecpt,type
	new int,iverlen
	push 1
	pop iverlen
	new int,igox
	new int,igoy
	new string,_simg
	new int,bniezmien
	push 1
	pop bniezmien
	end method
	method _timwqfin
	cthis checkqueue
	cthis play
	end method
	method start
	end method
	method ptpos
	localstring $1
	pop $1
	push $1
	call vecpt,find
	end method
	method remove
	localstring $1
	pop $1
	localint $2
	push $1
	cthis ptpos
	pop $2
	push $2
	push 0
	cmpjae
	cmp0
	je l2555
	push $2
	push 0
	cmpje
	cmp0
	je l2557
	call vecpt,first
	spushs
	push "null"
	push "null"
	spop $a
	call [$a],sigonzmien
	push 0
	call vecpt,removeat
	call vecpt,size
	cmp0
	je l2559
	call vecpt,first
	spushs
	cthis getname
	push "ptzmien"
	spop $a
	call [$a],sigonzmien
l2559:
	jmp l2556
l2557:
	push $2
	call vecpt,removeat
l2556:
l2555:
	end method
	method stop
	push 0
	call timwq,stop
	end method
	method add
	localstring $1
	pop $1
	push $1
	spushs
	push $1
	spushs
	spop $a
	call [$a],anposx
	push $1
	spushs
	spop $a
	call [$a],anposy
	spop $a
	call [$a],iswayto
	popax
	push $1
	call vecpt,add
	call vecpt,size
	push 1
	cmpje
	cmp0
	je l2561
	call vecpt,first
	spushs
	cthis getname
	push "ptzmien"
	spop $a
	call [$a],sigonzmien
l2561:
	end method
	method ptzmien
	push 0
	pop bniezmien
	push _simg
	push igox
	call clcamera,getposx
	pop $b
	popax
	add $a,$b
	push igoy
	call clcamera,getposy
	pop $b
	popax
	add $a,$b
	cthis walkto
	call vecpt,first
	spushs
	push 0
	spop $a
	call [$a],bzmien=
	push 1
	pop bniezmien
	end method
	method goto
	localint $1
	localint $2
	pop $2
	pop $1
	push "null"
	push $1
	push $2
	cthis walkto
	end method
	method visit
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],reachable
	cmp0
	je l2563
	call vecpt,size
	jmp l2565
l2563:
	push 0
	jmp l2565
l2564:
	push 1
l2565:
	cmp0
	je l2566
	call vecpt,first
	push "_WALKTO_"
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	push $1
	push $1
	spushs
	spop $a
	call [$a],getgox
	push $1
	spushs
	spop $a
	call [$a],getgoy
	cthis walkto
l2566:
	end method
	method setverlen
	localint $1
	pop $1
	push $1
	pop iverlen
	end method
	method stand
	localint $1
	push 0
	pop $1
l2567:
	push $1
	call vecpt,size
	cmpjl
	cmp0
	je l2568
	jmp l2570
l2569:
	add $1,1
	pop $1
	jmp l2567
l2570:
	push $1
	call vecpt,get
	spushs
	push 0
	spop $a
	call [$a],stop
	push $1
	call vecpt,get
	spushs
	spop $a
	call [$a],herostand
	jmp l2569
l2568:
	end method
	method mulspeed
	localint $1
	pop $1
	localint $2
	push 0
	pop $2
l2571:
	push $2
	call vecpt,size
	cmpjl
	cmp0
	je l2572
	jmp l2574
l2573:
	add $2,1
	pop $2
	jmp l2571
l2574:
	push $2
	call vecpt,get
	spushs
	push $1
	spop $a
	call [$a],mulspeed
	jmp l2573
l2572:
	end method
	method walkto
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $2
	call clcamera,getposx
	pop $b
	popax
	sub $a,$b
	pop igox
	push $3
	call clcamera,getposy
	pop $b
	popax
	sub $a,$b
	pop igoy
	push $1
	pop _simg
	push 1
	pop iverlen
	localint $4
	call vecpt,size
	pop $4
	push $4
	push 0
	cmpjle
	cmp0
	je l2576
	ret
l2576:
	localstring $5
	call vecpt,first
	pop $5
	push $5
	spushs
	push $1
	push $2
	push $3
	spop $a
	call [$a],advwalkto
	localint $6
	localint $7
	localstring $8
	localint $9
	push 1
	pop $9
l2577:
	push $9
	push $4
	cmpjl
	cmp0
	je l2578
	jmp l2580
l2579:
	add $9,1
	pop $9
	jmp l2577
l2580:
	push $9
	call vecpt,get
	pop $8
	push $5
	spushs
	spop $a
	call [$a],getidgo
	pop $7
	push bniezmien
	cmp0
	je l2582
	push $5
	spushs
	push iverlen
	spop $a
	call [$a],getgover
	pop $6
	jmp l2581
l2582:
	push $8
	spushs
	push $1
	push $2
	push $3
	spop $a
	call [$a],advwalkto
	push $8
	spushs
	push $9
	push iverlen
	pop $b
	popax
	mul $a,$b
	spop $a
	call [$a],getgover
	pop $6
l2581:
	push $6
	push 0
	cmpjl
	cmp0
	je l2584
	push $5
	spushs
	push iverlen
	spop $a
	call [$a],getgover
	pop $6
	push $6
	push 0
	cmpjl
	cmp0
	je l2586
	push $5
	spushs
	spop $a
	call [$a],getidan
	pop $6
l2586:
l2584:
	push $6
	push $7
	cmpje
	cmp0
	je l2588
	push bniezmien
	jmp l2590
l2588:
	push 0
	jmp l2590
l2589:
	push 1
l2590:
	cmp0
	je l2591
	push 1
	popax
	sub 0,$a
	pop $6
l2591:
	push $8
	pop $5
	push $6
	push 0
	cmpjae
	cmp0
	je l2593
	push $8
	spushs
	push "null"
	push $8
	spushs
	push $6
	spop $a
	call [$a],getxver
	push $8
	spushs
	push $6
	spop $a
	call [$a],getyver
	spop $a
	call [$a],advwalkto
	jmp l2592
l2593:
	push $8
	spushs
	push 0
	spop $a
	call [$a],stop
	push $8
	spushs
	spop $a
	call [$a],herostand
l2592:
	jmp l2579
l2578:
	push $5
	spushs
	push $1
	spop $a
	call [$a],checkreach
	end method
	method checkqueue
	localint $1
	call vecpt,size
	pop $1
	push $1
	push 1
	cmpjle
	cmp0
	je l2595
	ret
l2595:
	localint $2
	localstring $3
	localstring $4
	localint $5
	localint $6
	localint $7
	push 0
	pop $7
l2596:
	push $7
	push $1
	cmpjl
	cmp0
	je l2597
	jmp l2599
l2598:
	add $7,1
	pop $7
	jmp l2596
l2599:
	push $7
	call vecpt,get
	pop $3
	push $3
	spushs
	spop $a
	call [$a],iswalking
	cmp0
	je l2601
	push $3
	spushs
	spop $a
	call [$a],getidan
	pop $5
	push $3
	spushs
	spop $a
	call [$a],getidan2
	pop $6
	push $7
	push 1
	pop $b
	popax
	add $a,$b
	pop $2
l2602:
	push $2
	push $1
	cmpjl
	cmp0
	je l2603
	jmp l2605
l2604:
	add $2,1
	pop $2
	jmp l2602
l2605:
	push $2
	call vecpt,get
	pop $4
	push $4
	spushs
	spop $a
	call [$a],iswalking
	cmp0
	je l2607
	push $4
	spushs
	push $5
	spop $a
	call [$a],excludev
	push $4
	spushs
	push $6
	spop $a
	call [$a],excludev
l2607:
	jmp l2604
l2603:
l2601:
	jmp l2598
l2597:
	end method
	end class

	class classstndgroup
	method init
	new gmobjvec,grstnd
	end method
	method pause
	push "lock"
	call grstnd,eval
	cthis stop
	end method
	method resume
	cthis advstdstate
	cmp0
	je l2609
	push "unlock"
	call grstnd,eval
	cthis play
l2609:
	end method
	method add
	localstring $1
	pop $1
	push $1
	call grstnd,add
	end method
	method remove
	localstring $1
	pop $1
	push $1
	call grstnd,remove
	end method
	method stop
	push "stop"
	call grstnd,eval
	end method
	method play
	push "play"
	call grstnd,eval
	end method
	method reset
	push "reset"
	call grstnd,eval
	end method
	end class

	class classadvstander
	parent classlocker
	method init
	clparent classlocker,init
	new timer,timstand
	push 1
	call timstand,settick
	new int,_i_idle
	push 12000
	pop _i_idle
	push "onfinish"
	push "_timstandfin"
	call timstand,addmethod
	new string,sanim
	cthis getname
	pop sanim
	push _sstndpref
	call sanim,strsubbs
	pop sanim
	cthis _make_idle
	new string,_sbeh
	push "beh_"
	push sanim
	pop $b
	popax
	add $a,$b
	push "_IDLE"
	pop $b
	popax
	add $a,$b
	pop _sbeh
	cthis getname
	call modstnd,add
	end method
	method _make_idle
	push _i_idle
	call _i_idle,rand
	pop $b
	popax
	add $a,$b
	call timstand,delay
	end method
	method _timstandfin
	cthis _make_idle
	localstring $1
	call gameapi,getgamename
	pop $1
	push $1
	spushs
	push _sbeh
	spop $a
	call [$a],behexist
	cmp0
	je l2611
	cthis getlock
	neg
	jmp l2613
l2611:
	push 0
	jmp l2613
l2612:
	push 1
l2613:
	cmp0
	je l2614
	push $1
	spushs
	push _sbeh
	spop $a
	call [$a],playbeh
l2614:
	end method
	method play
	cthis getlock
	neg
	cmp0
	je l2616
	call timstand,isplaying
	neg
	jmp l2618
l2616:
	push 0
	jmp l2618
l2617:
	push 1
l2618:
	cmp0
	je l2619
	call timstand,play
l2619:
	end method
	method stop
	push 0
	call timstand,stop
	end method
	method setdelay
	localint $1
	pop $1
	push $1
	pop _i_idle
	push _i_idle
	push 0
	cmpjle
	cmp0
	je l2621
	push 1
	pop _i_idle
l2621:
	push $1
	call timstand,setdelay
	end method
	method reset
	cthis stop
	cthis play
	end method
	end class

	class classtalker
	parent classadvhero
	method init
	clparent classadvhero,init
	push "talk:"
	cthis _setbase
	new snd,sndtalk
	call sndtalk,buildfullname
	push 0
	push 1
	call sndtalk,setstartstopflag
	push "onfinish"
	push "_ctalkfin"
	call sndtalk,addmethod
	new timer,timtalk
	push 1
	call timtalk,settick
	new real,rdelay
	push 1.0
	pop rdelay
	push "onfinish"
	push "_ctalkfin"
	call timtalk,addmethod
	new gmimgvec,txttalk
	new int,_iletxt
	push 10
	pop _iletxt
	localstring $1
	localint $2
	push 0
	pop $2
l2622:
	push $2
	push _iletxt
	cmpjl
	cmp0
	je l2623
	jmp l2625
l2624:
	add $2,1
	pop $2
	jmp l2622
l2625:
	push "txttalk"
	push $2
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	spushs
	spop $e
	new text,[$e]
	push $1
	call txttalk,add
	jmp l2624
l2623:
	new font,fonttalk
	call txttalk,hide
	new vector,vecpom
	push "string"
	call vecpom,type
	new int,iTxtLim
	push 30
	pop iTxtLim
	new int,irtxt
	new int,igtxt
	new int,ibtxt
	new string,stextdb
	new string,_swav
	cthis buildfullname
	new string,stalktype
	push "snd"
	cthis settalktype
	end method
	method set
	localstring $1
	pop $1
	push $1
	cthis link
	end method
	method settextdb
	localstring $1
	pop $1
	push $1
	pop stextdb
	end method
	method setfont
	localstring $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call fonttalk,load
	push "setfont"
	push "fonttalk"
	call txttalk,eval1
	end method
	method setsnd
	localstring $1
	pop $1
	push $1
	call sndtalk,advloadsnd
	end method
	method herosay1
	localstring $1
	pop $1
	push 1
	push 1
	push 1
	push "null"
	push $1
	cthis herosay
	end method
	method herosay
	localint $1
	localint $2
	localint $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	push $4
	push $5
	cthis getdir
	cthis herosaydir
	end method
	method herosaydir
	localint $1
	localint $2
	localint $3
	localstring $4
	localstring $5
	localstring $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push _sanim
	spushs
	push 0
	spop $a
	call [$a],thisfinish
	push $2
	neg
	cmp0
	je l2627
	push _sanim
	spushs
	push _sbase
	push $6
	cthis nofpiecesdir
	push $1
	push $2
	push "null"
	push "null"
	push $3
	push $4
	push $5
	push $6
	spop $a
	call [$a],playspec
	push stalktype
	spushs
	spop $d
	cthis [$d]
	jmp l2626
l2627:
	push _sanim
	spushs
	push _sbase
	push $6
	cthis nofpiecesdir
	push $1
	push $2
	cthis getfullname
	push "_ctalkstart"
	push $3
	push $4
	push $5
	push $6
	spop $a
	call [$a],playspec
l2626:
	end method
	method thisfinish
	localint $1
	pop $1
	push _sanim
	spushs
	push $1
	spop $a
	call [$a],thisfinish
	end method
	method stop
	localint $1
	pop $1
	push "snd"
	call stalktype,contains
	cmp0
	je l2629
	call sndtalk,getfullname
	cthis cisactsnd
	cmp0
	je l2631
	push $1
	cthis cactsndstop
	jmp l2630
l2631:
	push $1
	call sndtalk,stop
l2630:
	push 0
	call timtalk,stop
	jmp l2628
l2629:
	push $1
	call timtalk,stop
l2628:
	end method
	method settalktype
	localstring $1
	pop $1
	push "_cplay"
	pop stalktype
	push "snd"
	call $1,contains
	cmp0
	je l2633
	push "snd"
	popax
	add stalktype,$a
	pop stalktype
l2633:
	push "txt"
	call $1,contains
	cmp0
	je l2635
	push "txt"
	popax
	add stalktype,$a
	pop stalktype
l2635:
	push "film"
	call $1,contains
	cmp0
	je l2637
	push "film"
	popax
	add stalktype,$a
	pop stalktype
l2637:
	end method
	method _csay
	push stextdb
	push "null"
	cmpjne
	cmp0
	je l2639
	localint $1
	push stextdb
	spushs
	push _swav
	spop $a
	call [$a],findbyrow
	pop $1
	push $1
	push 0
	cmpjl
	cmp0
	je l2641
	ret
l2641:
	push stextdb
	spushs
	push $1
	push 2
	spop $a
	call [$a],get
	push " "
	call vecpom,vecbuildfromstring
	localstring $2
	push ""
	pop $2
	localint $3
	push 0
	pop $3
	localint $4
	localint $5
	push "txt"
	call stalktype,contains
	cmp0
	je l2643
	push _sanim
	spushs
	spop $a
	call [$a],getcx
	pop $4
	push _sanim
	spushs
	spop $a
	call [$a],getpy
	pop $5
	jmp l2642
l2643:
	push 400
	pop $4
	push 590
	pop $5
l2642:
	localint $6
	push 0
	pop $6
	localint $7
	push iResX
	pop $7
	localint $8
	push 0
	pop $8
	localint $9
	push iResY
	pop $9
	localstring $10
	localint $11
	push 0
	pop $11
l2644:
	push $11
	call vecpom,size
	cmpjl
	cmp0
	je l2645
	jmp l2647
l2646:
	add $11,1
	pop $11
	jmp l2644
l2647:
	push $11
	call vecpom,get
	push " "
	pop $b
	popax
	add $a,$b
	popax
	add $2,$a
	pop $2
	call $2,length
	push iTxtLim
	cmpja
	cmp0
	je l2649
	push "txttalk"
	push $3
	pop $b
	popax
	add $a,$b
	pop $10
	push $10
	spushs
	push $2
	push $4
	push $5
	push $3
	spop $a
	call [$a],_cprinttxt
	push $10
	spushs
	spop $a
	call [$a],getpx
	push $6
	cmpjl
	cmp0
	je l2651
	push $10
	spushs
	spop $a
	call [$a],getpx
	pop $6
l2651:
	push $10
	spushs
	spop $a
	call [$a],getex
	push $7
	cmpja
	cmp0
	je l2653
	push $10
	spushs
	spop $a
	call [$a],getex
	pop $7
l2653:
	push $10
	spushs
	spop $a
	call [$a],getpy
	push $8
	cmpjl
	cmp0
	je l2655
	push $10
	spushs
	spop $a
	call [$a],getpy
	pop $8
l2655:
	push $10
	spushs
	spop $a
	call [$a],getey
	push $9
	cmpja
	cmp0
	je l2657
	push $10
	spushs
	spop $a
	call [$a],getey
	pop $9
l2657:
	push ""
	pop $2
	add $3,1
	pop $3
l2649:
	jmp l2646
l2645:
	call $2,length
	push 0
	cmpja
	cmp0
	je l2659
	push "txttalk"
	push $3
	pop $b
	popax
	add $a,$b
	pop $10
	push $10
	spushs
	push $2
	push $4
	push $5
	push $3
	spop $a
	call [$a],_cprinttxt
	push $10
	spushs
	spop $a
	call [$a],getpx
	push $6
	cmpjl
	cmp0
	je l2661
	push $10
	spushs
	spop $a
	call [$a],getpx
	pop $6
l2661:
	push $10
	spushs
	spop $a
	call [$a],getex
	push $7
	cmpja
	cmp0
	je l2663
	push $10
	spushs
	spop $a
	call [$a],getex
	pop $7
l2663:
	push $10
	spushs
	spop $a
	call [$a],getpy
	push $8
	cmpjl
	cmp0
	je l2665
	push $10
	spushs
	spop $a
	call [$a],getpy
	pop $8
l2665:
	push $10
	spushs
	spop $a
	call [$a],getey
	push $9
	cmpja
	cmp0
	je l2667
	push $10
	spushs
	spop $a
	call [$a],getey
	pop $9
l2667:
	add $3,1
	pop $3
l2659:
	push iResX
	popax
	sub $7,$a
	pop $7
	push iResY
	popax
	sub $9,$a
	pop $9
	push $6
	push 0
	cmpja
	cmp0
	je l2669
	push 0
	pop $6
l2669:
	push $8
	push 0
	cmpja
	cmp0
	je l2671
	push 0
	pop $6
l2671:
	push 0
	push $6
	pop $b
	popax
	sub $a,$b
	push $7
	pop $b
	popax
	add $a,$b
	push $3
	popax
	sub 0,$a
	call txttalk0,geth
	pop $b
	popax
	mul $a,$b
	push $8
	pop $b
	popax
	sub $a,$b
	push $9
	pop $b
	popax
	add $a,$b
	call txttalk,move
	call txttalk0,getpy
	push 0
	cmpjl
	cmp0
	je l2673
	push 0
	call txttalk0,getpy
	popax
	sub 0,$a
	call txttalk,move
l2673:
	push rdelay
	push 500
	pop $b
	popax
	mul $a,$b
	call vecpom,size
	pop $b
	popax
	mul $a,$b
	call timtalk,delay
l2639:
	end method
	method _cprinttxt
	localstring $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	cthis set
	push irtxt
	push igtxt
	push ibtxt
	cthis createtxt
	push $2
	cthis getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push $3
	push $4
	cthis geth
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	cthis setpos
	push 2000
	cthis setz
	cthis show
	end method
	method _cplaysnd
	call sndtalk,getfullname
	cthis cbsplay
	end method
	method _cplaysndtxt
	cthis _cplaysnd
	cthis _csay
	end method
	method _cplaysndtxtfilm
	cthis _cplaysnd
	cthis _csay
	end method
	method _cplaysndfilm
	cthis _csay
	end method
	method _cplaytxt
	cthis _csay
	call timtalk,play
	end method
	method _cplaytxtfilm
	cthis _csay
	call timtalk,play
	end method
	method _cplayfilm
	cthis _csay
	call timtalk,play
	end method
	method setdelay
	localreal $1
	pop $1
	push $1
	pop rdelay
	end method
	method settxtcolor
	localint $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	pop irtxt
	push $2
	pop igtxt
	push $3
	pop ibtxt
	end method
	method _ctalkstart
	push stalktype
	spushs
	spop $d
	cthis [$d]
	end method
	method _ctalkfin
	call txttalk,hide
	push _sanim
	spushs
	spop $a
	call [$a],herostop
	end method
	end class

	class classtxttalker
	parent classadvhero
	method init
	clparent classadvhero,init
	push "talk:"
	cthis _setbase
	new int,iR
	new int,iG
	new int,iB
	new int,ibR
	new int,ibG
	new int,ibB
	new int,ibA
	new int,ibrr
	new int,ibrg
	new int,ibrb
	new int,ibra
	new int,ibw
	new db,dbtxt
	new int,iSize
	new gmimgvec,grtxt
	new gmimgvec,grtxt2
	localstring $1
	localint $2
	push 0
	pop $2
l2674:
	push $2
	push 25
	cmpjl
	cmp0
	je l2675
	jmp l2677
l2676:
	add $2,1
	pop $2
	jmp l2674
l2677:
	push "txt"
	push $2
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	spushs
	spop $e
	new text,[$e]
	push $1
	call grtxt,add
	push $1
	spushs
	spop $a
	call [$a],hide
	jmp l2676
l2675:
	new text,imgtxt
	call imgtxt,hide
	new int,bplaying
	push 0
	pop bplaying
	new string,slang
	push "pol"
	cthis setlang
	end method
	method setlang
	localstring $1
	pop $1
	push $1
	pop slang
	end method
	method isplaying
	push bplaying
	end method
	method setfont
	localstring $1
	pop $1
	push "setfont"
	push $1
	call grtxt,eval1
	push $1
	spushs
	spop $a
	call [$a],getsize
	pop iSize
	end method
	method setfontcolor
	localint $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	pop iR
	push $2
	pop iG
	push $3
	pop iB
	end method
	method setfontbg
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	pop ibR
	push $2
	pop ibG
	push $3
	pop ibB
	push $4
	pop ibA
	end method
	method setbgframe
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $2
	pop ibrr
	push $3
	pop ibrg
	push $4
	pop ibrb
	push 255
	pop ibra
	push $1
	pop ibw
	end method
	method set
	localstring $1
	localint $2
	pop $2
	pop $1
	push $1
	cthis link
	push $2
	call grtxt,setz
	push $2
	push 1
	pop $b
	popax
	sub $a,$b
	call imgtxt,setz
	end method
	method herosay
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	cthis getdir
	cthis herosaydir
	end method
	method herosaydir
	localstring $1
	localint $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $4
	push "auto"
	cmpje
	cmp0
	je l2679
	cthis getdir
	pop $4
l2679:
	push 1
	pop bplaying
	cthis getgraphpath
	push $1
	pop $b
	popax
	add $a,$b
	push "."
	pop $b
	popax
	add $a,$b
	push slang
	pop $b
	popax
	add $a,$b
	call dbtxt,load
	localstring $5
	call grtxt2,free
	localint $6
	push 0
	pop $6
	localint $7
	call dbtxt,getrowsno
	pop $7
	localint $8
	push 0
	pop $8
l2680:
	push $8
	push $7
	cmpjl
	cmp0
	je l2681
	jmp l2683
l2682:
	add $8,1
	pop $8
	jmp l2680
l2683:
	push "txt"
	push $8
	pop $b
	popax
	add $a,$b
	pop $5
	push $5
	spushs
	push $8
	push 0
	call dbtxt,get
	spop $a
	call [$a],set
	push $5
	spushs
	push iR
	push iG
	push iB
	spop $a
	call [$a],createtxt
	push $5
	spushs
	push $2
	push $3
	spop $a
	call [$a],setpos
	push iSize
	popax
	add $3,$a
	pop $3
	push $5
	spushs
	spop $a
	call [$a],show
	push $5
	spushs
	spop $a
	call [$a],getw
	push $6
	cmpja
	cmp0
	je l2685
	push $5
	spushs
	spop $a
	call [$a],getw
	pop $6
l2685:
	push $5
	call grtxt2,add
	jmp l2682
l2681:
	call txt0,getpx
	push iSize
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call txt0,getpy
	push iSize
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push $6
	push iSize
	pop $b
	popax
	add $a,$b
	push iSize
	push $7
	push 1
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	mul $a,$b
	push ibR
	push ibG
	push ibB
	push ibA
	call imgtxt,setbkg
	push ibw
	push ibrr
	push ibrg
	push ibrb
	push ibra
	call imgtxt,setborders
	call imgtxt,show
	push _sanim
	push "null"
	cmpjne
	cmp0
	je l2687
	push _sanim
	spushs
	push 0
	spop $a
	call [$a],thisfinish
	push _sanim
	spushs
	push _sbase
	push 0
	push 0
	push 0
	push "null"
	push "null"
	push 0
	push "null"
	push "null"
	push $4
	spop $a
	call [$a],playspec
l2687:
	end method
	method stop
	push 0
	pop bplaying
	call grtxt2,hide
	call imgtxt,hide
	push _sanim
	push "null"
	cmpjne
	cmp0
	je l2689
	push _sanim
	spushs
	push 1
	spop $a
	call [$a],thisfinish
	push _sanim
	spushs
	push "stand"
	cthis getdir
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],play
l2689:
	end method
	end class

	class classbgplan
	parent gmobjvec
	method init
	clparent gmobjvec,init
	new real,rpx
	new real,rpy
	new real,scalex
	new real,scaley
	new int,_ix
	new int,_iy
	end method
	method setscale
	localreal $1
	localreal $2
	pop $2
	pop $1
	push $1
	push $2
	pop scaley
	pop scalex
	end method
	method move
	localreal $1
	localreal $2
	pop $2
	pop $1
	push $1
	popax
	add rpx,$a
	pop rpx
	push $2
	popax
	add rpy,$a
	pop rpy
	localint $3
	push rpx
	pop $3
	localint $4
	push rpy
	pop $4
	push $3
	popax
	sub rpx,$a
	pop rpx
	push $4
	popax
	sub rpy,$a
	pop rpy
	push $3
	cmp0
	jne l2692
	push $4
	jmp l2693
l2691:
	push 0
	jmp l2693
l2692:
	push 1
l2693:
	cmp0
	je l2694
	push $3
	popax
	add _ix,$a
	pop _ix
	push $4
	popax
	add _iy,$a
	pop _iy
	push $3
	push $4
	clparent gmobjvec,move
l2694:
	end method
	method movebgr
	localreal $1
	localreal $2
	pop $2
	pop $1
	push scalex
	push $1
	pop $b
	popax
	mul $a,$b
	push scaley
	push $2
	pop $b
	popax
	mul $a,$b
	cthis move
	end method
	method getpx
	push _ix
	end method
	method getpy
	push _iy
	end method
	end class

	class classgrplans
	parent gmobjvec
	method init
	clparent gmobjvec,init
	new real,_rxp
	new real,_ryp
	end method
	method move
	localreal $1
	localreal $2
	pop $2
	pop $1
	push $1
	popax
	add _rxp,$a
	pop _rxp
	push $2
	popax
	add _ryp,$a
	pop _ryp
	push "movebgr"
	push $1
	push $2
	cthis eval2
	end method
	method getposx
	push _rxp
	ret
	end method
	method getposy
	push _ryp
	ret
	end method
	method shift
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	popax
	add _rxp,$a
	pop _rxp
	push $2
	popax
	add _ryp,$a
	pop _ryp
	push "move"
	push $1
	push $2
	cthis eval2
	end method
	end class

	class CameraPos
	method init
	localreal $1
	localreal $2
	pop $2
	pop $1
	new real,_x
	new real,_y
	push $1
	push $2
	cthis setpos
	end method
	method setpos
	localreal $1
	localreal $2
	pop $2
	pop $1
	push $1
	pop _x
	push $2
	pop _y
	end method
	method getposx
	push _x
	end method
	method getposy
	push _y
	end method
	end class

	class classadvcamera
	method init
	new classgrplans,grbgrs
	new string,sancamera
	push "null"
	pop sancamera
	new string,smsmvfun
	push "null"
	pop smsmvfun
	new real,_rxmod
	new real,_rymod
	push 0.05
	push 0.05
	pop _rymod
	pop _rxmod
	new real,rleft
	new real,rtop
	new real,rright
	new real,rbottom
	push 0.0
	push 0.0
	push igmappw
	push 1
	pop $b
	popax
	sub $a,$b
	push igmapph
	push 1
	pop $b
	popax
	sub $a,$b
	pop rbottom
	pop rright
	pop rtop
	pop rleft
	new int,icamx
	new int,icamy
	push igmappw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push igmapph
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop icamy
	pop icamx
	new real,rborx
	new real,rbory
	push igmappw
	push 1
	pop $b
	popax
	sub $a,$b
	push igmapph
	push 1
	pop $b
	popax
	sub $a,$b
	pop rbory
	pop rborx
	new real,_lastx
	push 0
	pop _lastx
	new real,_lasty
	push 0
	pop _lasty
	new string,_sfunxedge
	push "null"
	pop _sfunxedge
	new string,_sfunyedge
	push "null"
	pop _sfunyedge
	push 0
	push 0
	new CameraPos,_campos
	new timer,timcamera
	push 1
	call timcamera,settick
	push 1
	call timcamera,setcycle
	push "onfinish"
	push "_camerafin"
	call timcamera,addmethod
	end method
	method _camerafin
	cthis checkcamera
	cthis play
	end method
	method setscreen
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	pop rleft
	push $2
	pop rtop
	push $3
	pop rright
	push $4
	pop rbottom
	push $3
	pop rborx
	push $4
	pop rbory
	push $1
	pop _lastx
	push $2
	pop _lasty
	push $1
	push $3
	pop $b
	popax
	add $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop icamx
	push $2
	push $4
	pop $b
	popax
	add $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop icamy
	end method
	method remove
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l2695:
	push $2
	call grbgrs,size
	cmpjl
	cmp0
	je l2696
	jmp l2698
l2697:
	add $2,1
	pop $2
	jmp l2695
l2698:
	push $2
	call grbgrs,get
	spushs
	push $1
	spop $a
	call [$a],remove
	jmp l2697
l2696:
	end method
	method funxedge
	localstring $1
	pop $1
	push $1
	pop _sfunxedge
	end method
	method funyedge
	localstring $1
	pop $1
	push $1
	pop _sfunyedge
	end method
	method setcenter
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	pop icamy
	pop icamx
	end method
	method setborders
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push 1
	pop $b
	popax
	sub $a,$b
	push $2
	push 1
	pop $b
	popax
	sub $a,$b
	pop rbottom
	pop rright
	end method
	method countcenter
	push rleft
	push rright
	push rleft
	pop $b
	popax
	sub $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	push rtop
	push rbottom
	push rtop
	pop $b
	popax
	sub $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	cthis setcenter
	end method
	method getposx
	call grbgrs,getposx
	ret
	end method
	method getposy
	call grbgrs,getposy
	ret
	end method
	method setmetonmsmove
	localstring $1
	pop $1
	push $1
	pop smsmvfun
	end method
	method start
	call timcamera,play
	end method
	method stop
	push 0
	call timcamera,stop
	end method
	method setactor
	localstring $1
	pop $1
	push $1
	pop sancamera
	end method
	method setcampos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call _campos,setpos
	push "_campos"
	cthis setactor
	end method
	method isactor
	localstring $1
	pop $1
	push $1
	push sancamera
	cmpje
	ret
	end method
	method getactor
	push sancamera
	ret
	end method
	method scalemodifiers
	localreal $1
	localreal $2
	pop $2
	pop $1
	push $1
	push $2
	pop _rymod
	pop _rxmod
	end method
	method newbgr
	localstring $1
	localreal $2
	localreal $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $e
	new classbgplan,[$e]
	push $1
	push $2
	push $3
	cthis addbgr
	end method
	method addbgr
	localstring $1
	localreal $2
	localreal $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],setscale
	push $1
	call grbgrs,add
	end method
	method findinbgr
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l2699:
	push $2
	call grbgrs,size
	cmpjl
	cmp0
	je l2700
	jmp l2702
l2701:
	add $2,1
	pop $2
	jmp l2699
l2702:
	push $2
	call grbgrs,get
	spushs
	push $1
	spop $a
	call [$a],contains
	cmp0
	je l2704
	push $2
	call grbgrs,get
	ret
l2704:
	jmp l2701
l2700:
	push "null"
	end method
	method removefrombgr
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
l2705:
	push $2
	call grbgrs,size
	cmpjl
	cmp0
	je l2706
	jmp l2708
l2707:
	add $2,1
	pop $2
	jmp l2705
l2708:
	push $2
	call grbgrs,get
	spushs
	push $1
	spop $a
	call [$a],remove
	jmp l2707
l2706:
	end method
	method addtobgr
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	spushs
	push $2
	spop $a
	call [$a],add
	end method
	method setscene
	push 1.0
	push 1.0
	cthis _setscene
	end method
	method _setscene
	localreal $1
	localreal $2
	pop $2
	pop $1
	push sancamera
	push "null"
	cmpje
	cmp0
	je l2710
	ret
l2710:
	localreal $3
	push icamx
	push sancamera
	spushs
	spop $a
	call [$a],getposx
	pop $b
	popax
	sub $a,$b
	pop $3
	push $1
	popax
	mul $3,$a
	pop $3
	localreal $4
	push icamy
	push sancamera
	spushs
	spop $a
	call [$a],getposy
	pop $b
	popax
	sub $a,$b
	pop $4
	push $2
	popax
	mul $4,$a
	pop $4
	localreal $5
	cthis getposx
	push $3
	pop $b
	popax
	add $a,$b
	pop $5
	localreal $6
	cthis getposy
	push $4
	pop $b
	popax
	add $a,$b
	pop $6
	push $5
	push rleft
	cmpjae
	cmp0
	je l2712
	cthis getposx
	popax
	sub 0,$a
	pop $3
	jmp l2711
l2712:
	push $5
	push rright
	pop $b
	popax
	add $a,$b
	push rborx
	cmpjle
	cmp0
	je l2714
	push rborx
	cthis getposx
	push rright
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	sub $a,$b
	pop $3
l2714:
l2711:
	push $6
	push rtop
	cmpjae
	cmp0
	je l2716
	cthis getposy
	popax
	sub 0,$a
	pop $4
	jmp l2715
l2716:
	push $6
	push rbottom
	pop $b
	popax
	add $a,$b
	push rbory
	cmpjle
	cmp0
	je l2718
	push rbory
	cthis getposy
	push rbottom
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	sub $a,$b
	pop $4
l2718:
l2715:
	push $3
	cmp0
	jne l2721
	push $4
	jmp l2722
l2720:
	push 0
	jmp l2722
l2721:
	push 1
l2722:
	cmp0
	je l2723
	push $3
	push $4
	call grbgrs,move
	push smsmvfun
	push "null"
	cmpjne
	cmp0
	je l2725
	push smsmvfun
	spushs
	spop $d
	cthis [$d]
l2725:
l2723:
	push $3
	push 0
	cmpje
	cmp0
	je l2727
	push _lastx
	push 0
	cmpjne
	cmp0
	je l2727
	push _sfunxedge
	push "null"
	cmpjne
	jmp l2729
l2727:
	push 0
	jmp l2729
l2728:
	push 1
l2729:
	cmp0
	je l2730
	push _sfunxedge
	spushs
	spop $d
	cthis [$d]
l2730:
	push $4
	push 0
	cmpje
	cmp0
	je l2732
	push _lasty
	push 0
	cmpjne
	cmp0
	je l2732
	push _sfunyedge
	push "null"
	cmpjne
	jmp l2734
l2732:
	push 0
	jmp l2734
l2733:
	push 1
l2734:
	cmp0
	je l2735
	push _sfunyedge
	spushs
	spop $d
	cthis [$d]
l2735:
	push $3
	pop _lastx
	push $4
	pop _lasty
	end method
	method checkcamera
	push sancamera
	push "null"
	cmpje
	cmp0
	je l2737
	ret
l2737:
	push _rxmod
	push _rymod
	cthis _setscene
	end method
	method moveplans
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	popax
	add rleft,$a
	pop rleft
	push $1
	popax
	add rright,$a
	pop rright
	push $2
	popax
	add rtop,$a
	pop rtop
	push $2
	popax
	add rbottom,$a
	pop rbottom
	push $1
	popax
	add rborx,$a
	pop rborx
	push $2
	popax
	add rbory,$a
	pop rbory
	push $1
	popax
	add icamx,$a
	pop icamx
	push $2
	popax
	add icamy,$a
	pop icamy
	push $1
	push $2
	call grbgrs,shift
	end method
	end class

	class classadvbut
	method init
	localstring $1
	pop $1
	push $1
	push "but"
	cthis setadvbutmets
	end method
	method setasbutton
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push "but"
	clparent classadvbut,setasbutton2
	end method
	method setasbutton2
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	push "setadvbutmets"
	push "setadvbutmets"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setbuttyp"
	push "setbuttyp"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "updatemousecursor"
	push "updatemousecursor"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "refreshmousecursor"
	push "refreshmousecursor"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setadvbutpos"
	push "setadvbutpos"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setbutdir"
	push "setbutdir"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setbutbase1"
	push "setbutbase1"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setbutbase2"
	push "setbutbase2"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setbutbase"
	push "setbutbase"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "getbase1"
	push "getbase1"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "getbase2"
	push "getbase2"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "getbutdir"
	push "getbutdir"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "getbutname"
	push "getbutname"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "gettyp"
	push "gettyp"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "reachable"
	push "reachable"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setreach"
	push "setreach"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "getgox"
	push "getgox"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "getgoy"
	push "getgoy"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "enable"
	push "enable"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "disable"
	push "disable"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "enabled"
	push "enabled"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setonce"
	push "setonce"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "checkonce"
	push "checkonce"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setpocket"
	push "classadvbut0"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "getpocket"
	push "classadvbut1"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "moveon"
	push "moveon"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "moveoff"
	push "moveoff"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "clickon"
	push "clickon"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "butlrel"
	push "butlrel"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "becomebut"
	push "classadvbut2"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "becomeitem"
	push "classadvbut3"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "becomedoors"
	push "classadvbut4"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "copyposfrompt"
	push "classadvbut5"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "butisin"
	push "classadvbut6"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "ismask"
	push "classadvbut7"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "setbmask"
	push "classadvbut8"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "preparetosort"
	push "preparetosort"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],setadvbutmets
	push $1
	spushs
	push 1
	spop $a
	call [$a],setreach
	end method
	method classadvbut0
	localstring $1
	pop $1
	push $1
	pop _spocket
	end method
	method classadvbut1
	push _spocket
	end method
	method classadvbut2
	cthis getname
	clparent classadvbut,setasbut
	end method
	method classadvbut3
	cthis getname
	clparent classadvbut,setasitem
	end method
	method classadvbut4
	cthis getname
	clparent classadvbut,setasdoors
	end method
	method classadvbut5
	localstring $1
	localint $2
	pop $2
	pop $1
	localint $3
	push $1
	spushs
	push $2
	spop $a
	call [$a],getbyname
	pop $3
	push $1
	spushs
	push $3
	spop $a
	call [$a],getxver
	push $1
	spushs
	spop $a
	call [$a],getposx
	pop $b
	popax
	sub $a,$b
	push $1
	spushs
	push $3
	spop $a
	call [$a],getyver
	push $1
	spushs
	spop $a
	call [$a],getposy
	pop $b
	popax
	sub $a,$b
	cthis setadvbutpos
	end method
	method classadvbut6
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push balpha
	push 1
	popax
	sub 0,$a
	cmpje
	cmp0
	je l2739
	push $1
	push $2
	push $3
	push $4
	cthis isin
	jmp l2738
l2739:
	push $1
	push $2
	push $3
	push balpha
	cthis isin
l2738:
	end method
	method classadvbut7
	push bismask
	end method
	method classadvbut8
	localint $1
	pop $1
	push $1
	pop bismask
	end method
	method setonce
	localstring $1
	pop $1
	push $1
	pop _sonce
	end method
	method checkonce
	push _sonce
	push "null"
	cmpjne
	cmp0
	je l2741
	push _sonce
	call clsave,bis
	neg
	jmp l2743
l2741:
	push 0
	jmp l2743
l2742:
	push 1
l2743:
	cmp0
	je l2744
	push _sonce
	call clsave,bset
	cthis disable
l2744:
	end method
	method setadvbutmets
	localstring $1
	localstring $2
	pop $2
	pop $1
	new string,_styp
	push $2
	pop _styp
	new string,_sname
	push $1
	pop _sname
	new int,igox
	cthis getposx
	pop igox
	new int,igoy
	cthis getposy
	pop igoy
	new string,sgox
	push "null"
	pop sgox
	new string,sgoy
	push "null"
	pop sgoy
	new string,_sbutdir
	push "auto"
	pop _sbutdir
	new string,_sbase1
	push "look:"
	push 1
	call modadv,get
	pop _sbase1
	new string,_sbase2
	push "look:"
	push 2
	call modadv,get
	pop _sbase2
	new int,breachable
	push 0
	pop breachable
	new string,_spocket
	push $1
	pop _spocket
	new string,_sonce
	push "null"
	pop _sonce
	new int,bismask
	push 0
	pop bismask
	push A
	push "baseuse1"
	push _sbase1
	push "baseuse2"
	push _sbase2
	push "hideontake"
	push 1
	push "smousecursor"
	push "active"
	push "balpha"
	push 1
	popax
	sub 0,$a
	push "bautohint"
	push 1
	push "bshownonvis"
	push 0
	cthis vars2
	cthis updatemousecursor
	cthis enable
	end method
	method setasmask
	localstring $1
	pop $1
	push $1
	spushs
	push "butisin"
	push "classadvbut9"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push 1
	spop $a
	call [$a],setbmask
	end method
	method classadvbut9
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push balpha
	push 1
	popax
	sub 0,$a
	cmpje
	cmp0
	je l2746
	push $1
	push $2
	push 0
	push $4
	cthis isin
	jmp l2745
l2746:
	push $1
	push $2
	push 0
	push balpha
	cthis isin
l2745:
	end method
	method enable
	push AdventureGame
	cmp0
	je l2748
	cthis getname
	call grbuts,addonce
l2748:
	end method
	method disable
	push AdventureGame
	cmp0
	je l2750
	cthis getname
	call grbuts,remove
l2750:
	end method
	method enabled
	push AdventureGame
	cmp0
	je l2752
	cthis getname
	call grbuts,contains
	jmp l2751
l2752:
	push 0
l2751:
	end method
	method setbutbase
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	cthis setbutbase1
	push $2
	cthis setbutbase2
	end method
	method setreach
	localint $1
	pop $1
	push $1
	pop breachable
	end method
	method reachable
	push breachable
	end method
	method setbuttyp
	localstring $1
	pop $1
	push $1
	pop _styp
	end method
	method updatemousecursor
	push _styp
	spushs
	push "but"
	cmpst
	jne l2754
	spop $a
	push "active"
	jmp l2753
l2754:
	push "doors"
	cmpst
	jne l2755
	spop $a
	push "exit"
	jmp l2753
l2755:
	push "item"
	cmpst
	jne l2756
	spop $a
	push "take"
	jmp l2753
l2756:
	spop $a
	push smousecursor
l2753:
	pop smousecursor
	end method
	method refreshmousecursor
	localstring $1
	pop $1
	push $1
	pop smousecursor
	cthis updatemousecursor
	push _slastms
	cthis getname
	cmpje
	cmp0
	je l2758
	push smousecursor
	call advmouse,set
l2758:
	end method
	method butlrel
	end method
	method clickon
	cthis reachable
	cmp0
	je l2760
	cthis getname
	call clwalkq,visit
l2760:
	end method
	method moveon
	push sItemMover
	push "null"
	cmpje
	cmp0
	je l2762
	push smousecursor
	call advmouse,set
	jmp l2761
l2762:
	push sItemMover
	spushs
	cthis getname
	push "setactive"
	spop $a
	call [$a],checkusebutton
l2761:
	end method
	method moveoff
	call advmouse,setstd
	end method
	method setadvbutpos
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	pop sgox
	push $2
	pop sgoy
	push $1
	pop igox
	push $2
	pop igoy
	end method
	method setbutdir
	localstring $1
	pop $1
	push $1
	pop _sbutdir
	end method
	method setbutbase1
	localstring $1
	pop $1
	push $1
	pop _sbase1
	push $1
	pop baseuse1
	end method
	method setbutbase2
	localstring $1
	pop $1
	push $1
	pop _sbase2
	push $1
	pop baseuse2
	end method
	method getbase1
	push _sbase1
	end method
	method getbase2
	push _sbase2
	end method
	method getbutdir
	push _sbutdir
	end method
	method getbutname
	push _sname
	end method
	method gettyp
	push _styp
	end method
	method getgox
	push sgox
	push "-hero"
	cmpje
	cmp0
	je l2764
	push sgoy
	push "-main"
	cmpje
	cmp0
	je l2766
	push smainhero
	spushs
	spop $a
	call [$a],getposx
	jmp l2765
l2766:
	push sgoy
	spushs
	spop $a
	call [$a],getposx
l2765:
	jmp l2763
l2764:
	push sgox
	push "-but"
	cmpje
	cmp0
	je l2768
	push sgoy
	spushs
	spop $a
	call [$a],getcx
	jmp l2767
l2768:
	push igox
	call clcamera,getposx
	pop $b
	popax
	add $a,$b
l2767:
l2763:
	end method
	method getgoy
	push sgox
	push "-hero"
	cmpje
	cmp0
	je l2770
	push sgoy
	push "-main"
	cmpje
	cmp0
	je l2772
	push smainhero
	spushs
	spop $a
	call [$a],getposy
	jmp l2771
l2772:
	push sgoy
	spushs
	spop $a
	call [$a],getposy
l2771:
	jmp l2769
l2770:
	push sgox
	push "-but"
	cmpje
	cmp0
	je l2774
	push sgoy
	spushs
	spop $a
	call [$a],getey
	jmp l2773
l2774:
	push igoy
	call clcamera,getposy
	pop $b
	popax
	add $a,$b
l2773:
l2769:
	end method
	method getposx
	push 0
	end method
	method getposy
	push 0
	end method
	method getz
	push 0
	end method
	method butisin
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push 0
	end method
	method preparetosort
	localint $1
	localint $2
	pop $2
	pop $1
	end method
	method endsort
	end method
	method setasbut
	localstring $1
	pop $1
	push $1
	spushs
	push "active"
	spop $a
	call [$a],smousecursor=
	end method
	method setasitem
	localstring $1
	pop $1
	push $1
	spushs
	push "take:"
	push 1
	call modadv,get
	push "take:"
	push 2
	call modadv,get
	spop $a
	call [$a],setbutbase
	push $1
	spushs
	push "take"
	spop $a
	call [$a],smousecursor=
	end method
	method setasdoors
	localstring $1
	pop $1
	push $1
	spushs
	push "doors:"
	push 1
	call modadv,get
	push "doors:"
	push 2
	call modadv,get
	spop $a
	call [$a],setbutbase
	push $1
	spushs
	push "exit"
	spop $a
	call [$a],smousecursor=
	end method
	end class

	class classadvitem
	parent classadvbut
	method init
	localstring $1
	pop $1
	push $1
	push "item"
	clparent classadvbut,init
	push "take:"
	push 1
	call modadv,get
	push "take:"
	push 2
	call modadv,get
	cthis setbutbase
	end method
	method setasbutton
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push "item"
	clparent classadvbut,setasbutton2
	push $1
	spushs
	push "take:"
	push 1
	call modadv,get
	push "take:"
	push 2
	call modadv,get
	spop $a
	call [$a],setbutbase
	end method
	end class

	class classadvdoors
	parent classadvbut
	method init
	localstring $1
	pop $1
	push $1
	push "doors"
	clparent classadvbut,init
	push "doors:"
	push 1
	call modadv,get
	push "doors:"
	push 2
	call modadv,get
	cthis setbutbase
	end method
	method setasbutton
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	push "doors"
	clparent classadvbut,setasbutton2
	push $1
	spushs
	push "active"
	spop $a
	call [$a],smousecursor=
	push $1
	spushs
	push "doors:"
	push 1
	call modadv,get
	push "doors:"
	push 2
	call modadv,get
	spop $a
	call [$a],setbutbase
	end method
	end class

	class classbehhero
	method init
	new string,_snextbeh
	push "null"
	pop _snextbeh
	new string,_stdfinfun
	push "null"
	pop _stdfinfun
	new string,_stdfinobj
	push "null"
	pop _stdfinobj
	new string,_stype
	push "null"
	pop _stype
	new string,_scaller
	new int,bblock
	push 1
	pop bblock
	new int,bparal
	push 0
	pop bparal
	push A
	push "bskip"
	push 0
	cthis vars2
	end method
	method skip
	push bskip
	cmp0
	je l2776
	cthis gettyp
	spushs
	push "sndplay"
	cmpst
	jne l2778
	spop $a
	call sndp,getfullname
	cthis cisactsnd
	cmp0
	je l2780
	push 0
	cthis csplaystop
	jmp l2779
l2780:
	push 0
	call sndp,stop
l2779:
	cthis behreturn
	jmp l2777
l2778:
	push "talk"
	cmpst
	jne l2781
	spop $a
	push _stalkpref
	push _san
	pop $b
	popax
	add $a,$b
	spushs
	push 0
	spop $a
	call [$a],stop
	push _san
	cthis advanstand
	cthis behreturn
	jmp l2777
l2781:
	spop $a
l2777:
l2776:
	end method
	method behreturn
	push _scaller
	cthis finishbeh
	end method
	method gonext
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
	push bparal
	cmp0
	je l2783
	push _sstarter
	spushs
	cthis getname
	spop $a
	call [$a],behret
	pop $2
	jmp l2782
l2783:
	push _sstarter
	spushs
	spop $a
	call [$a],isenumer
	cmp0
	je l2785
	push _sstarter
	cthis getname
	cmpjne
	jmp l2787
l2785:
	push 0
	jmp l2787
l2786:
	push 1
l2787:
	cmp0
	je l2788
	push 1
	pop $2
	jmp l2784
l2788:
	push _snextbeh
	push "null"
	cmpjne
	cmp0
	je l2790
	cthis classbehhero_preeval
	push _snextbeh
	spushs
	push $1
	spop $a
	call [$a],eval
	cthis classbehhero_posteval
	jmp l2789
l2790:
	push 1
	pop $2
l2789:
l2784:
l2782:
	push $2
	cmp0
	je l2792
	push $1
	cthis finishbeh
l2792:
	end method
	method finishbeh
	localstring $1
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l2794
	push $1
	spushs
	spop $a
	call [$a],reteval
	jmp l2793
l2794:
	call modstnd,resume
	localstring $2
	cthis getactbeh
	pop $2
	push _sstarter
	spushs
	spop $a
	call [$a],callbehfin
	cthis getactbeh
	push $2
	cmpje
	cmp0
	je l2796
	push "null"
	cthis setactbeh
l2796:
l2793:
	end method
	method playfin
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push $2
	cthis setfinfun
	cthis advgetlock
	pop _bmslock
	push bblock
	cmp0
	je l2798
	push bblock
	cthis advmssetlock
l2798:
	call modstnd,pause
	push "null"
	cthis eval
	end method
	method eval
	localstring $1
	pop $1
	cthis getname
	cthis setactbeh
	push $1
	pop _scaller
	cthis _eval
	end method
	method rewind
	push "_rew"
	cthis hasaddedmet
	cmp0
	je l2800
	cthis _rew
l2800:
	end method
	method reteval
	push _scaller
	cthis gonext
	end method
	method callbehfin
	push bblock
	cmp0
	je l2802
	push _bmslock
	cthis advmssetlock
l2802:
	push _stdfinobj
	push _stdfinfun
	cthis callfun
	push "null"
	pop _stdfinobj
	push "null"
	pop _stdfinfun
	cthis getname
	spushs
	push _sbeh
	spop $a
	call $a,strsubbs
	push "_FINISH"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method _evalenter
	cthis getname
	push "reteval"
	call ccs,obenter
	end method
	method _evalclose
	cthis getname
	push "reteval"
	call ccs,obclose
	end method
	method _evalmusic
	call vmus,getfullname
	push 0
	call _music,playvec
	cthis reteval
	end method
	method _evalreturn
	cthis behreturn
	end method
	method _evalscript
	push _id
	push 0
	cmpjae
	cmp0
	je l2804
	localint $1
	push _id
	pop $1
	localdef $2
	push _sdb
	spushs
	push _row
	push $1
	spop $a
	call [$a],get
	pop $2
l2805:
	push $2
	push ")"
	cmpjne
	cmp0
	je l2806
	push _sscr
	spushs
	push $1
	push _id
	pop $b
	popax
	sub $a,$b
	push $2
	spop $a
	call [$a],ARG=
	add $1,1
	pop $1
	push _sdb
	spushs
	push _row
	push $1
	spop $a
	call [$a],get
	pop $2
	jmp l2805
l2806:
l2804:
	push _sscr
	spushs
	push _sfun2
	spop $a
	call [$a],call
	cthis reteval
	end method
	method _evalmet
	push _icol
	push 0
	cmpjae
	cmp0
	je l2808
	localint $1
	push _icol
	pop $1
	localdef $2
	push _sdb
	spushs
	push _irow
	push $1
	spop $a
	call [$a],get
	pop $2
l2809:
	push $2
	push ")"
	cmpjne
	cmp0
	je l2810
	push $2
	add $1,1
	pop $1
	push _sdb
	spushs
	push _irow
	push $1
	spop $a
	call [$a],get
	pop $2
	jmp l2809
l2810:
l2808:
	push _stypecall
	push "::"
	cmpje
	cmp0
	je l2812
	push _sob2
	spushs
	push _sfun2
	spushs
	spop $d
	spop $a
	 clparent [$a],[$d]
	jmp l2811
l2812:
	push _sob2
	push _sfun2
	cthis callfun
l2811:
	cthis reteval
	end method
	method _evalsave
	push 0
	push 1
	call ssavval,getb
	push "@"
	cmpje
	cmp0
	je l2814
	localint $1
	push 1
	call ssavval,strsubb
	pop $1
	push ssavvar
	push $1
	push ssavvar
	call clsave,get
	pop $b
	popax
	add $a,$b
	call clsave,set
	jmp l2813
l2814:
	push ssavvar
	push ssavval
	call clsave,set
l2813:
	cthis reteval
	end method
	method _evalgame
	localstring $1
	call gameapi,getgamename
	pop $1
	push _styp
	spushs
	push "-def"
	cmpst
	jne l2816
	spop $a
	push $1
	spushs
	push _spath
	push _sgame
	spop $a
	call [$a],playfromscript
	jmp l2815
l2816:
	push "-adv"
	cmpst
	jne l2817
	spop $a
	push $1
	spushs
	push _sgame
	push _spath
	spop $a
	call [$a],playnewgamepath
	jmp l2815
l2817:
	spop $a
	push $1
	spushs
	push _sgame
	spop $a
	call [$a],playnewgame
l2815:
	cthis reteval
	end method
	method _evalread
	push _sread
	push _ix
	push _iy
	push _sdir
	call clhilarytxt,herosaydir
	end method
	method _rewread
	call clhilarytxt,stop
	cthis reteval
	end method
	method _evalwait
	call timwait,play
	end method
	method _evaltalk
	localstring $1
	push _spathpref
	push _san
	pop $b
	popax
	add $a,$b
	pop $1
	localstring $2
	push _stalkpref
	push _san
	pop $b
	popax
	add $a,$b
	pop $2
	push $1
	call engine,varexist
	cmp0
	je l2819
	push $2
	spushs
	spop $a
	call [$a],getdir
	push $2
	spushs
	push _sdir
	spop $a
	call [$a],getpropdir
	cmpjne
	jmp l2821
l2819:
	push 0
	jmp l2821
l2820:
	push 1
l2821:
	cmp0
	je l2822
	push $1
	spushs
	push _sdir
	cthis getname
	push "_evaltalk"
	spop $a
	call [$a],heroturn
	ret
l2822:
	push _san
	cthis advanstand
	push $2
	spushs
	call modadv,gettalktype
	spop $a
	call [$a],settalktype
	push $2
	spushs
	push __swav
	spop $a
	call [$a],setsnd
	push $2
	spushs
	push __sbase
	spop $a
	call [$a],checkamounts
	push $2
	spushs
	push isort
	push bstt
	push bstp
	cthis getname
	push "reteval"
	push $2
	spushs
	push _sdir
	spop $a
	call [$a],getpropdir
	spop $a
	call [$a],herosaydir
	end method
	method _rewtalk
	push _stalkpref
	push _san
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	spop $a
	call [$a],stop
	end method
	method _evalsetpos
	localint $1
	localint $2
	localstring $3
	push _spathpref
	push _san
	pop $b
	popax
	add $a,$b
	pop $3
	push _idestx
	push "-id"
	cmpje
	cmp0
	je l2824
	push $3
	spushs
	push _idesty
	spop $a
	call [$a],getbyname
	pop $2
	push $3
	spushs
	push $2
	spop $a
	call [$a],getxver
	pop $1
	push $3
	spushs
	push $2
	spop $a
	call [$a],getyver
	pop $2
	push _san
	spushs
	push $1
	push $2
	spop $a
	call [$a],setpos
	jmp l2823
l2824:
	push _idestx
	pop $1
	push _idesty
	pop $2
	push _san
	spushs
	push $1
	call clcamera,getposx
	pop $b
	popax
	add $a,$b
	push $2
	call clcamera,getposy
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
l2823:
	push _bssc
	cmp0
	je l2826
	call clcamera,setscene
l2826:
	push $3
	call engine,varexist
	cmp0
	je l2828
	push $3
	spushs
	spop $a
	call [$a],scalean
l2828:
	push _san
	spushs
	push _san
	spushs
	spop $a
	call [$a],getposy
	spop $a
	call [$a],setz
	push _sdir
	push "auto"
	cmpjne
	cmp0
	je l2830
	push _san
	spushs
	push _sdir
	spop $a
	call [$a],setdir
l2830:
	cthis reteval
	end method
	method _evalwalk
	localint $1
	localint $2
	push _idestx
	push "-id"
	cmpje
	cmp0
	je l2832
	push _sptf
	spushs
	push _idesty
	spop $a
	call [$a],getbyname
	pop $2
	push _sptf
	spushs
	push $2
	spop $a
	call [$a],getxver
	push _sptf
	spushs
	spop $a
	call [$a],getposx
	pop $b
	popax
	sub $a,$b
	pop $1
	push _sptf
	spushs
	push $2
	spop $a
	call [$a],getyver
	push _sptf
	spushs
	spop $a
	call [$a],getposy
	pop $b
	popax
	sub $a,$b
	pop $2
	jmp l2831
l2832:
	push _idestx
	push "-hero"
	cmpje
	cmp0
	je l2834
	push _idesty
	spushs
	spop $a
	call [$a],getposx
	pop $1
	push _idesty
	spushs
	spop $a
	call [$a],getposy
	pop $2
	localint $3
	push 1
	pop $3
	push _sptf
	spushs
	push $1
	push $2
	spop $a
	call [$a],ptfgoto
	push 0
	cmpjae
	cmp0
	je l2836
	push _sptf
	spushs
	push 1
	spop $a
	call [$a],getgover
	pop $2
	push $2
	push 0
	cmpjae
	cmp0
	je l2838
	push _sptf
	spushs
	push $2
	spop $a
	call [$a],getxver
	pop $1
	push _sptf
	spushs
	push $2
	spop $a
	call [$a],getyver
	pop $2
	push 0
	pop $3
l2838:
l2836:
	push _sptf
	spushs
	push 0
	spop $a
	call [$a],stop
	push $3
	cmp0
	je l2840
	localdef $4
	push _spathpref
	call _sptf,strsubbs
	pop $4
	push $4
	spushs
	spop $a
	call [$a],getposx
	pop $1
	push $4
	spushs
	spop $a
	call [$a],getposy
	pop $2
l2840:
	jmp l2833
l2834:
	push _idestx
	pop $1
	push _idesty
	pop $2
l2833:
l2831:
	push _sptf
	spushs
	push $1
	call clcamera,getposx
	pop $b
	popax
	add $a,$b
	push $2
	call clcamera,getposy
	pop $b
	popax
	add $a,$b
	cthis getname
	push "reteval"
	spop $a
	call [$a],herowalkto2
	end method
	method _evalturn
	localstring $1
	push _sdir
	pop $1
	push A
	push "uu"
	push "ru"
	push "rr"
	push "rd"
	push "dd"
	push "ld"
	push "ll"
	push "lu"
	call $1,in
	neg
	cmp0
	je l2842
	localstring $2
	push _sptf
	spushs
	spop $a
	call [$a],getanim
	pop $2
	push _sptf
	spushs
	push $1
	spushs
	spop $a
	call [$a],getposx
	push $2
	spushs
	spop $a
	call [$a],getposx
	pop $b
	popax
	sub $a,$b
	push $1
	spushs
	spop $a
	call [$a],getposy
	push $2
	spushs
	spop $a
	call [$a],getposy
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],vecdir
	pop $1
l2842:
	push _sptf
	spushs
	push $1
	cthis getname
	push "reteval"
	spop $a
	call [$a],heroturn
	end method
	method _evalanorder
	push _san
	cthis advanstand
	push _sdb
	push _irow
	push _icol
	push _san
	cthis analizeaninstr
	popax
	cthis reteval
	end method
	method _evalanplay
	push _san
	spushs
	push "bthisfin"
	spop $a
	call [$a],hasvar
	neg
	cmp0
	je l2844
	push _san
	spushs
	spop $a
	call [$a],setasadvanima
l2844:
	push _san
	cthis advanstand
	push _san
	spushs
	push 1
	spop $a
	call [$a],thisfinish
	push _sact
	clparent StringChecker,isdigit
	cmp0
	je l2846
	push _san
	spushs
	push _sact
	spop $a
	call [$a],nameofaction
	pop _sact
l2846:
	push _san
	spushs
	push _sact
	cthis getname
	push "reteval"
	spop $a
	call [$a],playspec2
	end method
	method _evalanfin
	push _san
	spushs
	push _time
	cthis getname
	push "reteval"
	cthis fullname_callfun
	spop $a
	call [$a],anfadein
	end method
	method _evalanfout
	push _san
	spushs
	push _time
	cthis getname
	push "reteval"
	cthis fullname_callfun
	spop $a
	call [$a],anfadeout
	end method
	method _rewanplay
	end method
	method _evalsndbg
	call _sndbg,getfullname
	cthis cbsplay
	cthis reteval
	end method
	method _evalsndplay
	localint $1
	push igmlektor
	pop $1
	call sndp,file_loaded
	neg
	cmp0
	je l2848
	push 0
	pop igmlektor
l2848:
	call sndp,getfullname
	cthis cbsplay
	push $1
	pop igmlektor
	end method
	method _rewsndplay
	call sndp,getfullname
	cthis cisactsnd
	cmp0
	je l2850
	push 1
	cthis csplaystop
	jmp l2849
l2850:
	push 1
	call sndp,stop
l2849:
	end method
	method _evalcall
	localstring $1
	push scallobj
	pop $1
	push "$"
	call $1,contains
	cmp0
	je l2852
	push 1
	call $1,strsubb
	pop $1
	push $1
	call engine,varexist
	cmp0
	je l2854
	push $1
	popax
	mov $a,[$a]
	psax
	jmp l2853
l2854:
	push sscript
	spushs
	push $1
	spop $a
	call [$a],get
l2853:
	pop $1
	push $1
	push "null"
	cmpje
	cmp0
	je l2856
	cthis reteval
	ret
l2856:
l2852:
	push $1
	cthis getbeh
	pop $1
	push $1
	spushs
	cthis getname
	spop $a
	call [$a],eval
	end method
	method _evalnull
	cthis reteval
	end method
	method _evalstart
	localint $1
	localstring $2
	call vbif,free
	push bonce
	push "null"
	cmpjne
	cmp0
	je l2858
	push bonce
	call clsave,bis
	neg
	cmp0
	je l2860
	push bonce
	call clsave,bset
	jmp l2859
l2860:
	cthis behreturn
	ret
l2859:
l2858:
	push iisifsave
	push 0
	cmpje
	cmp0
	je l2862
	push sisifsave
	push sisifvar
	call clsave,is
	jmp l2864
l2862:
	push 0
	jmp l2864
l2863:
	push 1
l2864:
	cmp0
	jne l2866
	push iisifsave
	push 1
	cmpje
	cmp0
	je l2867
	push sisifsave
	push sisifvar
	call clsave,is
	neg
	jmp l2869
l2867:
	push 0
	jmp l2869
l2868:
	push 1
l2869:
	jmp l2870
l2865:
	push 0
	jmp l2870
l2866:
	push 1
l2870:
	cmp0
	je l2871
	cthis behreturn
	ret
l2871:
	push brand
	cmp0
	je l2873
	call vecbehs,size
	pop $1
	push $1
	push 0
	cmpja
	cmp0
	je l2875
	call $1,rand
	call vecbehs,get
	spushs
	push _scaller
	spop $a
	call [$a],eval
	jmp l2874
l2875:
	cthis reteval
l2874:
	jmp l2872
l2873:
	push bparal
	cmp0
	je l2877
	push "vecbehs"
	call vecbehs2,veccopy
	push 0
	pop $1
l2878:
	push $1
	call vecbehs,size
	cmpjl
	cmp0
	je l2879
	jmp l2881
l2880:
	add $1,1
	pop $1
	jmp l2878
l2881:
	push $1
	call vecbehs,get
	spushs
	push _scaller
	spop $a
	call [$a],eval
	jmp l2880
l2879:
	jmp l2876
l2877:
	push ienumer
	push 0
	cmpja
	cmp0
	je l2883
	cthis nextenum
	push 1
	pop $b
	popax
	sub $a,$b
	call vecbehs,get
	spushs
	push _scaller
	spop $a
	call [$a],eval
	jmp l2882
l2883:
	cthis reteval
l2882:
l2876:
l2872:
	end method
	method _ifst
	localint $1
	localint $2
	pop $2
	pop $1
	push ifst
	spushs
	push 1
	cmpst
	jne l2885
	spop $a
	push $1
	cmp0
	je l2886
	push $2
	jmp l2888
l2886:
	push 0
	jmp l2888
l2887:
	push 1
l2888:
	jmp l2884
l2885:
	push 2
	cmpst
	jne l2889
	spop $a
	push $1
	cmp0
	jne l2891
	push $2
	jmp l2892
l2890:
	push 0
	jmp l2892
l2891:
	push 1
l2892:
	jmp l2884
l2889:
	spop $a
	push $1
l2884:
	end method
	method _oper_check
	localstring $1
	pop $1
	push $1
	spushs
	push "|"
	cmpst
	jne l2894
	spop $a
	push 2
	jmp l2893
l2894:
	push "&"
	cmpst
	jne l2895
	spop $a
	push 1
	jmp l2893
l2895:
	spop $a
	push 0
l2893:
	end method
	method _ifcheck
	localint $1
	localint $2
	localstring $3
	localstring $4
	localint $5
	push istart
	pop $5
	push 0
	pop ifst
l2896:
	push $5
	push istop
	cmpjl
	cmp0
	je l2897
	push _db
	spushs
	push irow
	push $5
	spop $a
	call [$a],get
	pop $3
	push _db
	spushs
	push irow
	push $5
	spop $a
	call [$a],dbchecknext
	pop $4
	push $4
	spushs
	push "="
	cmpst
	je l2900
	push "!="
	cmpst
	je l2900
	push "<"
	cmpst
	je l2900
	push "<="
	cmpst
	je l2900
	push ">"
	cmpst
	je l2900
	push ">="
	cmpst
	je l2900
	jmp l2899
l2900:
	spop $a
	push 2
	popax
	add $5,$a
	pop $5
	push $4
	spushs
	push "="
	cmpst
	jne l2902
	spop $a
	push $3
	cthis _getifvar
	push _db
	spushs
	push irow
	push $5
	spop $a
	call [$a],get
	cmpje
	pop $2
	jmp l2901
l2902:
	push "!="
	cmpst
	jne l2903
	spop $a
	push $3
	cthis _getifvar
	push _db
	spushs
	push irow
	push $5
	spop $a
	call [$a],get
	cmpjne
	pop $2
	jmp l2901
l2903:
	push "<"
	cmpst
	jne l2904
	spop $a
	push $3
	cthis _getifvar
	spushs
	spop $h
	call $h,to_r
	push _db
	spushs
	push irow
	push $5
	spop $a
	call [$a],get
	spushs
	spop $h
	call $h,to_r
	cmpjl
	pop $2
	jmp l2901
l2904:
	push "<="
	cmpst
	jne l2905
	spop $a
	push $3
	cthis _getifvar
	spushs
	spop $h
	call $h,to_r
	push _db
	spushs
	push irow
	push $5
	spop $a
	call [$a],get
	spushs
	spop $h
	call $h,to_r
	cmpjle
	pop $2
	jmp l2901
l2905:
	push ">"
	cmpst
	jne l2906
	spop $a
	push $3
	cthis _getifvar
	spushs
	spop $h
	call $h,to_r
	push _db
	spushs
	push irow
	push $5
	spop $a
	call [$a],get
	spushs
	spop $h
	call $h,to_r
	cmpja
	pop $2
	jmp l2901
l2906:
	push ">="
	cmpst
	jne l2907
	spop $a
	push $3
	cthis _getifvar
	spushs
	spop $h
	call $h,to_r
	push _db
	spushs
	push irow
	push $5
	spop $a
	call [$a],get
	spushs
	spop $h
	call $h,to_r
	cmpjae
	pop $2
	jmp l2901
l2907:
	spop $a
l2901:
	push $2
	push $1
	cthis _ifst
	pop $1
	push _db
	spushs
	push irow
	push $5
	spop $a
	call [$a],dbchecknext
	cthis _oper_check
	pop ifst
	push ifst
	cmp0
	je l2909
	add $5,1
	pop $5
l2909:
	jmp l2898
l2899:
	push "&"
	cmpst
	jne l2910
	spop $a
	add $5,1
	pop $5
	push $3
	cthis _is_ifvar
	push $1
	cthis _ifst
	pop $1
	push 1
	pop ifst
	jmp l2898
l2910:
	push "|"
	cmpst
	jne l2911
	spop $a
	add $5,1
	pop $5
	push $3
	cthis _is_ifvar
	push $1
	cthis _ifst
	pop $1
	push 2
	pop ifst
	jmp l2898
l2911:
	spop $a
	push $3
	cthis _is_ifvar
	push $1
	cthis _ifst
	pop $1
l2898:
	add $5,1
	pop $5
	jmp l2896
l2897:
	push _sstarter
	spushs
	push $1
	spop $a
	call [$a],bif=
	push $1
	end method
	method _getifvar
	localstring $1
	pop $1
	push 0
	push 1
	call $1,getb
	push "."
	cmpje
	cmp0
	je l2913
	call gameapi,getgamename
	spushs
	push 1
	call $1,strsubb
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	jmp l2912
l2913:
	push $1
	call clsave,get
l2912:
	end method
	method _is_ifvar
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
	push 0
	push 1
	call $1,getb
	push "!"
	cmpje
	cmp0
	je l2915
	push 1
	pop $2
	push 1
	call $1,strsubb
	pop $1
l2915:
	push $1
	cthis _getifvar
	pop $1
	localint $3
	push $1
	push "null"
	cmpje
	cmp0
	jne l2917
	push $1
	push "0"
	cmpje
	jmp l2918
l2916:
	push 0
	jmp l2918
l2917:
	push 1
l2918:
	cmp0
	je l2920
	push 0
	jmp l2919
l2920:
	push 1
l2919:
	pop $3
	push $2
	cmp0
	je l2922
	push $3
	neg
	jmp l2921
l2922:
	push $3
l2921:
	end method
	method _checkif
	cthis _ifcheck
	cmp0
	je l2924
	cthis reteval
	jmp l2923
l2924:
	push _sstarter
	spushs
	cthis getname
	spop $a
	call [$a],classbehhero0
l2923:
	end method
	method classbehhero0
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
	localint $3
	call vecbehs,size
	pop $3
	localint $4
	push 0
	pop $4
	localint $5
	push $1
	call vecbehs,find
	push 1
	pop $b
	popax
	add $a,$b
	pop $5
l2925:
	push $5
	push $3
	cmpjl
	cmp0
	je l2926
	jmp l2928
l2927:
	add $5,1
	pop $5
	jmp l2925
l2928:
	push $5
	call vecbehs,get
	spushs
	spop $a
	call [$a],gettyp
	spushs
	push "IF"
	cmpst
	jne l2930
	spop $a
	add $2,1
	pop $2
	jmp l2929
l2930:
	push "FI"
	cmpst
	jne l2931
	spop $a
	push $2
	push 0
	cmpje
	cmp0
	je l2933
	push $5
	pop $4
	push $3
	pop $5
	jmp l2932
l2933:
	sub $2,1
	pop $2
l2932:
	jmp l2929
l2931:
	push "ELSE"
	cmpst
	je l2935
	push "ELIF"
	cmpst
	je l2935
	jmp l2934
l2935:
	spop $a
	push $2
	push 0
	cmpje
	cmp0
	je l2937
	push $5
	pop $4
	push $3
	pop $5
l2937:
	jmp l2929
l2934:
	spop $a
l2929:
	jmp l2927
l2926:
	push $4
	call vecbehs,get
	spushs
	push _scaller
	spop $a
	call [$a],eval
	end method
	method _evalIF
	push _sstarter
	spushs
	spop $a
	call [$a],ifpush
	cthis _checkif
	end method
	method _gotofi
	localstring $1
	pop $1
	localint $2
	push 0
	pop $2
	localint $3
	push $1
	call vecbehs,find
	push 1
	pop $b
	popax
	add $a,$b
	pop $3
l2938:
	push $3
	call vecbehs,size
	cmpjl
	cmp0
	je l2939
	jmp l2941
l2940:
	add $3,1
	pop $3
	jmp l2938
l2941:
	push $3
	call vecbehs,get
	spushs
	spop $a
	call [$a],gettyp
	spushs
	push "IF"
	cmpst
	jne l2943
	spop $a
	add $2,1
	pop $2
	jmp l2942
l2943:
	push "FI"
	cmpst
	jne l2944
	spop $a
	push $2
	push 0
	cmpje
	cmp0
	je l2946
	push $3
	call vecbehs,get
	spushs
	push _scaller
	spop $a
	call [$a],eval
	ret
	jmp l2945
l2946:
	sub $2,1
	pop $2
l2945:
	jmp l2942
l2944:
	spop $a
l2942:
	jmp l2940
l2939:
	end method
	method _evalELIF
	push _sstarter
	spushs
	spop $a
	call [$a],bif
	cmp0
	je l2948
	push _sstarter
	spushs
	cthis getname
	spop $a
	call [$a],_gotofi
	jmp l2947
l2948:
	cthis _checkif
l2947:
	end method
	method _evalELSE
	push _sstarter
	spushs
	spop $a
	call [$a],bif
	cmp0
	je l2950
	push _sstarter
	spushs
	cthis getname
	spop $a
	call [$a],_gotofi
	jmp l2949
l2950:
	cthis reteval
l2949:
	end method
	method _evalFI
	push _sstarter
	spushs
	spop $a
	call [$a],ifpop
	cthis reteval
	end method
	method gettyp
	push _stype
	end method
	method settype
	localstring $1
	pop $1
	push $1
	pop _stype
	push "_eval"
	push "_eval"
	push $1
	pop $b
	popax
	add $a,$b
	cthis addmethod
	push "_rew"
	push $1
	pop $b
	popax
	add $a,$b
	cthis hasmet
	cmp0
	je l2952
	push "_rew"
	push "_rew"
	push $1
	pop $b
	popax
	add $a,$b
	cthis addmethod
l2952:
	end method
	method setflags
	localstring $1
	pop $1
	push $1
	pop _snextbeh
	end method
	method setfinfun
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	pop _stdfinobj
	push $2
	pop _stdfinfun
	end method
	method setasstarter
	localstring $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	localstring $7
	localstring $8
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push "start"
	cthis settype
	new string,_sstarter
	cthis getname
	pop _sstarter
	new int,brand
	push $2
	pop brand
	new int,_bmslock
	new vector,vecbehs
	push $4
	pop bblock
	push "string"
	call vecbehs,type
	new string,bonce
	push $1
	pop bonce
	push $3
	pop bparal
	new int,ienumer
	push $5
	pop ienumer
	push $5
	push 0
	cmpja
	cmp0
	je l2954
	new int,_iencnt
	push 1
	pop _iencnt
	jmp l2953
l2954:
	push $3
	cmp0
	je l2956
	new vector,vecbehs2
	push "string"
	call vecbehs2,type
l2956:
l2953:
	new int,iisifsave
	push $6
	pop iisifsave
	push $6
	push 0
	cmpjae
	cmp0
	je l2958
	new string,sisifsave
	push $7
	pop sisifsave
	push $8
	push "null"
	cmpjne
	cmp0
	je l2960
	new string,sisifvar
	push $8
	pop sisifvar
l2960:
l2958:
	new vector,vbif
	end method
	method bif
	call vbif,last
	end method
	method bif=
	localint $1
	pop $1
	call vbif,size
	push 1
	pop $b
	popax
	sub $a,$b
	push $1
	call vbif,set
	end method
	method ifpush
	push 1
	call vbif,add
	end method
	method ifpop
	call vbif,pop
	popax
	end method
	method isenumer
	push ienumer
	end method
	method nextenum
	push _iencnt
	call vecbehs,size
	cmpja
	cmp0
	je l2962
	push ienumer
	push 1
	pop $b
	popax
	add $a,$b
	pop _iencnt
	jmp l2961
l2962:
	add _iencnt,1
	pop _iencnt
l2961:
	push _iencnt
	push 1
	pop $b
	popax
	sub $a,$b
	end method
	method addtostarter
	localstring $1
	pop $1
	push $1
	call vecbehs,add
	push $1
	spushs
	push "behstarter"
	cthis getname
	spop $a
	call [$a],var2
	push $1
	spushs
	push bskip
	spop $a
	call [$a],bskip=
	end method
	method getblock
	push bblock
	end method
	method addflags
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	new string,_sstarter
	push $1
	pop _sstarter
	push _stype
	push "read"
	cmpje
	cmp0
	je l2964
	push 0
	jmp l2963
l2964:
	push $2
l2963:
	pop bblock
	push $3
	pop bparal
	end method
	method behret
	localstring $1
	pop $1
	push $1
	call vecbehs2,remove
	call vecbehs2,size
	push 0
	cmpje
	end method
	method _setasif
	localstring $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	new int,istart
	push $3
	pop istart
	new int,istop
	push $4
	pop istop
	new string,_db
	push $1
	pop _db
	new int,irow
	push $2
	pop irow
	new int,ifst
	push 0
	pop ifst
	end method
	method setasIF
	localstring $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push "IF"
	cthis settype
	push $1
	push $2
	push $3
	push $4
	cthis _setasif
	end method
	method setasELIF
	localstring $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push "ELIF"
	cthis settype
	push $1
	push $2
	push $3
	push $4
	cthis _setasif
	end method
	method setas
	localstring $1
	pop $1
	push $1
	cthis settype
	end method
	method setasscript
	localstring $1
	localstring $2
	localstring $3
	localint $4
	localint $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push "script"
	cthis settype
	new string,_sscr
	push $1
	pop _sscr
	new string,_sfun2
	push $2
	pop _sfun2
	new int,_id
	push $5
	pop _id
	new string,_sdb
	push $3
	pop _sdb
	new int,_row
	push $4
	pop _row
	end method
	method setasuse
	localstring $1
	pop $1
	push "use"
	cthis settype
	new string,_sitem
	push $1
	pop _sitem
	end method
	method _evaluse
	push _spocketpref
	cthis getmainhero
	pop $b
	popax
	add $a,$b
	spushs
	push _sitem
	spop $a
	call [$a],pckremove
	cthis reteval
	end method
	method _evaltopck
	push _spocketpref
	cthis getmainhero
	pop $b
	popax
	add $a,$b
	spushs
	push _sitem
	push _sfile
	spop $a
	call [$a],additem
	cthis reteval
	end method
	method setastopck
	localstring $1
	localstring $2
	pop $2
	pop $1
	push "topck"
	cthis settype
	new string,_sitem
	push $1
	pop _sitem
	new string,_sfile
	push $2
	pop _sfile
	end method
	method setasmet
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	localint $5
	localint $6
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push "met"
	cthis settype
	new string,_sob2
	push $1
	pop _sob2
	new string,_sfun2
	push $2
	pop _sfun2
	new string,_sdb
	push $4
	pop _sdb
	new string,_stypecall
	push $3
	pop _stypecall
	new int,_irow
	push $5
	pop _irow
	new int,_icol
	push $6
	pop _icol
	end method
	method setassaver
	localstring $1
	localstring $2
	pop $2
	pop $1
	push "save"
	cthis settype
	new string,ssavvar
	push $1
	pop ssavvar
	new string,ssavval
	push $2
	pop ssavval
	end method
	method setasnewgamer
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push "game"
	cthis settype
	new string,_sgame
	push $3
	pop _sgame
	new string,_styp
	push $1
	pop _styp
	new string,_spath
	push $2
	pop _spath
	end method
	method setasreader
	localstring $1
	localint $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push "read"
	cthis settype
	new string,_sread
	push $1
	pop _sread
	new int,_ix
	push $2
	pop _ix
	new int,_iy
	push $3
	pop _iy
	new string,_sdir
	push $4
	pop _sdir
	end method
	method setaswaiter
	localint $1
	pop $1
	push "wait"
	cthis settype
	new timer,timwait
	push 1
	call timwait,settick
	push $1
	call timwait,delay
	cthis getname
	push "reteval"
	call timwait,_csplbuild
	push "onfinish"
	push "_csplfinish"
	call timwait,addmethod
	end method
	method setassndbg
	localstring $1
	localint $2
	pop $2
	pop $1
	push "sndbg"
	cthis settype
	new snd,_sndbg
	call _sndbg,buildfullname
	push 0
	push 1
	call _sndbg,setstartstopflag
	localdef $3
	push $1
	push ".wav"
	pop $b
	popax
	add $a,$b
	pop $3
	push $3
	call engine,fileexist
	neg
	cmp0
	je l2966
	push $1
	push ".ogg"
	pop $b
	popax
	add $a,$b
	pop $3
l2966:
	push $3
	call _sndbg,advloadsnd
	push $2
	call _sndbg,setvol
	end method
	method _loadsnd
	end method
	method setasanorder
	localstring $1
	localint $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push "anorder"
	cthis settype
	new string,_sdb
	push $1
	pop _sdb
	new int,_irow
	push $2
	pop _irow
	new int,_icol
	push $3
	pop _icol
	new string,_san
	push $4
	pop _san
	end method
	method setascaller
	localstring $1
	localstring $2
	pop $2
	pop $1
	push "call"
	cthis settype
	new string,scallobj
	push $1
	pop scallobj
	new string,sscript
	push $2
	pop sscript
	end method
	method _csplbuild
	localstring $1
	localstring $2
	pop $2
	pop $1
	new string,_sobj
	push $1
	pop _sobj
	new string,_sfinfun
	push $2
	pop _sfinfun
	end method
	method _csplfinish
	push _sobj
	push _sfinfun
	cthis callfun
	end method
	method setassndplayer
	localstring $1
	localint $2
	pop $2
	pop $1
	push "sndplay"
	cthis settype
	new snd,sndp
	call sndp,buildfullname
	push 0
	push 1
	call sndp,setstartstopflag
	localdef $3
	push $1
	push ".wav"
	pop $b
	popax
	add $a,$b
	pop $3
	push $3
	call engine,fileexist
	neg
	cmp0
	je l2968
	push $1
	push ".ogg"
	pop $b
	popax
	add $a,$b
	pop $3
l2968:
	push $3
	call sndp,advloadsnd
	cthis getname
	push "reteval"
	call sndp,_csplbuild
	push "onfinish"
	push "_csplfinish"
	call sndp,addmethod
	push $2
	call sndp,setvol
	end method
	method setasposer
	localstring $1
	localstring $2
	localint $3
	localint $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push "setpos"
	cthis settype
	new string,_san
	push $1
	pop _san
	new string,_idestx
	push $2
	pop _idestx
	new int,_idesty
	push $3
	pop _idesty
	new int,_bssc
	push $4
	pop _bssc
	new string,_sdir
	push $5
	pop _sdir
	end method
	method setasturn
	localstring $1
	localstring $2
	pop $2
	pop $1
	push "turn"
	cthis settype
	new string,_sptf
	push $1
	pop _sptf
	new string,_sdir
	push $2
	pop _sdir
	end method
	method setaswalker
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push "walk"
	cthis settype
	new string,_sptf
	push $1
	pop _sptf
	new string,_idestx
	push $2
	pop _idestx
	new string,_idesty
	push $3
	pop _idesty
	end method
	method setasanplayer
	localstring $1
	localstring $2
	pop $2
	pop $1
	push "anplay"
	cthis settype
	new string,_san
	push $1
	pop _san
	new string,_sact
	push $2
	pop _sact
	end method
	method setasanfin
	localstring $1
	localint $2
	pop $2
	pop $1
	push "anfin"
	cthis settype
	new string,_san
	push $1
	pop _san
	new int,_time
	push $2
	pop _time
	end method
	method setasanfout
	localstring $1
	localint $2
	pop $2
	pop $1
	push "anfout"
	cthis settype
	new string,_san
	push $1
	pop _san
	new int,_time
	push $2
	pop _time
	end method
	method setastalker
	localstring $1
	localstring $2
	localstring $3
	localint $4
	localint $5
	localint $6
	localstring $7
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push "talk"
	cthis settype
	new string,_san
	push $1
	pop _san
	new string,__swav
	push $2
	push ".wav"
	pop $b
	popax
	add $a,$b
	pop __swav
	push __swav
	call engine,fileexist
	neg
	cmp0
	je l2970
	push $2
	push ".ogg"
	pop $b
	popax
	add $a,$b
	pop __swav
l2970:
	new string,__sbase
	push $3
	pop __sbase
	new int,isort
	push $4
	pop isort
	new int,bstt
	push $5
	pop bstt
	new int,bstp
	push $6
	pop bstp
	new string,_sdir
	push $7
	pop _sdir
	end method
	method setasenter
	push "enter"
	cthis settype
	end method
	method setasclose
	push "close"
	cthis settype
	end method
	method setasmusic
	localstring $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push "music"
	cthis settype
	new vector,vmus
	push "string"
	call vmus,type
	call vmus,buildfullname
l2971:
	push $3
	push 0
	cmpjae
	cmp0
	je l2972
	push $3
	push $4
	cmpjl
	jmp l2974
l2972:
	push 0
	jmp l2974
l2973:
	push 1
l2974:
	cmp0
	je l2975
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	call vmus,add
	add $3,1
	pop $3
	jmp l2971
l2975:
	end method
	method setasreturn
	push "return"
	cthis settype
	end method
	end class

	new snd,_fx_pocket
	push "sounds/sfx/harfa.wav"
	call _fx_pocket,load
	new string,sItemMover
	push "null"
	pop sItemMover
	class classadvpocket
	parent classadvobject
	parent classadvbut
	parent gmimgvec
	method init
	localstring $1
	pop $1
	clparent classadvobject,init
	push $1
	clparent classadvbut,init
	clparent gmimgvec,init
	push "pocket"
	cthis setbuttyp
	push 1
	cthis setreach
	push "-hero"
	push "-main"
	cthis setadvbutpos
	new int,iX
	new int,iY
	new int,iNumItems
	push 0
	pop iNumItems
	new int,iMaxItems
	push 14
	pop iMaxItems
	new int,iScale
	new string,sState
	push "closed"
	pop sState
	new string,_sanim
	cthis getname
	pop _sanim
	push _spocketpref
	call _sanim,strsubbs
	pop _sanim
	new string,sItem
	push "null"
	pop sItem
	new string,sFocusItem
	push "null"
	pop sFocusItem
	new string,_sbase
	push "anpocket"
	pop _sbase
	new int,_ibase
	call _sbase,length
	pop _ibase
	new int,_ipcz
	push 1000
	pop _ipcz
	push _ipcz
	cthis setz
	new string,sitempath
	new vector,arPocket
	push "string"
	call arPocket,type
	new vector,arPocketFile
	push "string"
	call arPocketFile,type
	push "tim"
	push 1
	push 1
	push "evalpocket"
	cthis cnewtimercyclefin
	push "itempath:"
	push 1
	call modadv,get
	pop sitempath
	localint $2
	cthis getz
	pop $2
	new anima,imitem
	call imitem,anloopfin
	push $2
	push 1
	pop $b
	popax
	add $a,$b
	call imitem,setz
	new img,immarker
	push sitempath
	push "itemmarker.png"
	pop $b
	popax
	add $a,$b
	call immarker,load
	push $2
	push 1
	pop $b
	popax
	sub $a,$b
	call immarker,setz
	call immarker,hide
	cthis hide
	new int,bskip
	push 0
	pop bskip
	end method
	method addtoadv
	cthis getname
	cthis addtogamevars
	cthis enable
	cthis addasadvobject
	end method
	method removefromadv
	cthis disable
	cthis removefromadvobjs
	end method
	method hidepocket
	push sState
	push "closed"
	cmpjne
	cmp0
	je l2977
	push sState
	push "close"
	cmpjne
	cmp0
	je l2979
	cthis pockettoggle
	push 0
	call tim,stop
l2979:
l2980:
	push sState
	push "closed"
	cmpjne
	cmp0
	je l2981
	call tim,evalpocket
	push 0
	call tim,stop
	jmp l2980
l2981:
l2977:
	end method
	method exitpocket
	push "closed"
	pop sState
	push 0
	call tim,stop
	cthis hide
	end method
	method skip
	push 1
	pop bskip
	end method
	method skipitem
	push sItem
	push "null"
	cmpjne
	cmp0
	je l2983
	push 1
	pop bskip
l2983:
	end method
	method additem
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	call arPocket,contains
	cmp0
	je l2985
	ret
l2985:
	push $1
	call arPocket,add
	push $2
	call arPocketFile,add
	localstring $3
	push _sbase
	push $1
	pop $b
	popax
	add $a,$b
	pop $3
	push $3
	spushs
	spop $e
	new anima,[$e]
	push $3
	cthis add
	push $3
	spushs
	push sitempath
	push $2
	pop $b
	popax
	add $a,$b
	push ".pyz"
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],load
	push $3
	spushs
	push 0
	spop $a
	call [$a],play
	push $3
	spushs
	cthis getz
	spop $a
	call [$a],setz
	push $3
	spushs
	spop $a
	call [$a],hide
	add iNumItems,1
	pop iNumItems
	end method
	method savestate
	localstring $1
	pop $1
	push "saves/"
	cthis getname
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	add $a,$b
	push "_name.txt"
	pop $b
	popax
	add $a,$b
	call arPocket,vecsave
	push "saves/"
	cthis getname
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	add $a,$b
	push "_file.txt"
	pop $b
	popax
	add $a,$b
	call arPocketFile,vecsave
	end method
	method loadstate
	localstring $1
	pop $1
	new vector,vpcp
	push "string"
	call vpcp,type
	new vector,vpcf
	push "string"
	call vpcf,type
	push "saves/"
	cthis getname
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	add $a,$b
	push "_name.txt"
	pop $b
	popax
	add $a,$b
	call vpcp,vecload
	push "saves/"
	cthis getname
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	add $a,$b
	push "_file.txt"
	pop $b
	popax
	add $a,$b
	call vpcf,vecload
	localint $2
	push 0
	pop $2
l2986:
	push $2
	call vpcp,size
	cmpjl
	cmp0
	je l2987
	jmp l2989
l2988:
	add $2,1
	pop $2
	jmp l2986
l2989:
	push $2
	call vpcp,get
	push $2
	call vpcf,get
	cthis additem
	jmp l2988
l2987:
	delete vpcp
	delete vpcf
	end method
	method removeitem
	localstring $1
	pop $1
	localdef $2
	push _sbase
	call $1,strsubbs
	call arPocket,find
	pop $2
	push $2
	push 0
	cmpjl
	cmp0
	je l2991
	ret
l2991:
	push $2
	call arPocket,removeat
	push $2
	call arPocketFile,removeat
	push $1
	cthis remove
	push $1
	spushs
	spop $d
	delete [$d]
	sub iNumItems,1
	pop iNumItems
	push sState
	push "opened"
	cmpje
	cmp0
	je l2993
	cthis hide
l2993:
	end method
	method useitem
	push sItem
	push "null"
	cmpjne
	cmp0
	je l2995
	push sItem
	cthis removeitem
	cthis itemhide
l2995:
	end method
	method pckremove
	localstring $1
	pop $1
	push _sbase
	push $1
	pop $b
	popax
	add $a,$b
	cthis removeitem
	end method
	method evalpocket
	cthis play
	push sState
	push "open"
	cmpje
	cmp0
	je l2997
	push 16
	popax
	add iScale,$a
	pop iScale
	jmp l2996
l2997:
	push sState
	push "close"
	cmpje
	cmp0
	je l2999
	push 16
	popax
	sub iScale,$a
	pop iScale
l2999:
l2996:
	push iScale
	push 116
	cmpja
	cmp0
	je l3001
	push 0
	cthis stop
	push 116
	pop iScale
	push "opened"
	pop sState
	jmp l3000
l3001:
	push iScale
	push 0
	cmpjl
	cmp0
	je l3003
	push 0
	cthis stop
	push 0
	pop iScale
	push "closed"
	pop sState
l3003:
l3000:
	localreal $1
	push iScale
	push iScale
	pop $b
	popax
	mul $a,$b
	push 550
	pop $b
	popax
	div $a,$b
	psax
	pop $1
	localreal $2
	localstring $3
	localint $4
	push 0
	pop $4
l3004:
	push $4
	push iNumItems
	cmpjl
	cmp0
	je l3005
	jmp l3007
l3006:
	add $4,1
	pop $4
	jmp l3004
l3007:
	push $1
	push $4
	pop $b
	popax
	mul $a,$b
	push $1
	push iNumItems
	pop $b
	popax
	mul $a,$b
	push 2.0
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push 90.0
	pop $b
	popax
	sub $a,$b
	push $1
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	pop $2
	push $4
	cthis get
	pop $3
	push $3
	spushs
	call $2,cos
	push iScale
	pop $b
	popax
	mul $a,$b
	push iX
	pop $b
	popax
	add $a,$b
	push 76
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call $2,sin
	push iScale
	pop $b
	popax
	mul $a,$b
	push iY
	pop $b
	popax
	add $a,$b
	push 75
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setpos
	push $3
	spushs
	spop $a
	call [$a],isvisible
	cmp0
	je l3009
	push $3
	spushs
	push 0
	spop $a
	call [$a],play
l3009:
	jmp l3006
l3005:
	push sState
	push "closed"
	cmpje
	cmp0
	je l3011
	cthis hide
l3011:
	end method
	method pocketpos
	localint $1
	localint $2
	pop $2
	pop $1
	localint $3
	push $1
	push iX
	pop $b
	popax
	sub $a,$b
	pop $3
	localint $4
	push $2
	push iY
	pop $b
	popax
	sub $a,$b
	pop $4
	push $3
	push $4
	cthis move
	push $1
	pop iX
	push $2
	pop iY
	end method
	method pockettoggle
	push sState
	push "opened"
	cmpje
	cmp0
	je l3013
	push "close"
	pop sState
	call immarker,hide
	call tim,play
	jmp l3012
l3013:
	push sState
	push "closed"
	cmpje
	cmp0
	je l3015
	push "open"
	pop sState
	call arPocket,size
	push 0
	cmpja
	cmp0
	je l3017
	call _fx_pocket,play
l3017:
	push _sanim
	spushs
	spop $a
	call [$a],getposx
	pop iX
	push _sanim
	spushs
	spop $a
	call [$a],getposy
	push _sanim
	spushs
	spop $a
	call [$a],geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	pop iY
	cthis itemhide
	cthis show
	call tim,evalpocket
	call tim,play
	jmp l3014
l3015:
	push sState
	push "open"
	cmpje
	cmp0
	je l3019
	push "close"
	pop sState
	jmp l3018
l3019:
	push sState
	push "close"
	cmpje
	cmp0
	je l3021
	push "open"
	pop sState
l3021:
l3018:
l3014:
l3012:
	end method
	method getitem
	push sItem
	push "null"
	cmpjne
	cmp0
	je l3023
	push _sbase
	call sItem,strsubbs
	jmp l3022
l3023:
	push "null"
l3022:
	ret
	end method
	method itemhide
	push "null"
	pop sFocusItem
	push "null"
	pop sItem
	push 0
	call imitem,stop
	call imitem,hide
	push "null"
	pop sItemMover
	end method
	method printstate
	call sState,print
	call bskip,print
	end method
	method itemclick
	cthis skip
	push sState
	push "closed"
	cmpje
	cmp0
	je l3025
	cthis pockettoggle
	jmp l3024
l3025:
	push sState
	push "opened"
	cmpje
	cmp0
	je l3027
	push sFocusItem
	push "null"
	cmpjne
	cmp0
	je l3029
	push sItem
	push "null"
	cmpjne
	cmp0
	je l3031
	cthis pockettoggle
	push "beh_"
	push _sanim
	pop $b
	popax
	add $a,$b
	push "_USE_"
	pop $b
	popax
	add $a,$b
	push _sbase
	call sItem,strsubbs
	pop $b
	popax
	add $a,$b
	push "_ON_"
	pop $b
	popax
	add $a,$b
	push _sbase
	call sFocusItem,strsubbs
	pop $b
	popax
	add $a,$b
	cthis playbehif
	neg
	pop _b_rewind
	cthis itemhide
	jmp l3030
l3031:
	push sFocusItem
	pop sItem
	push sItem
	call imitem,copy
	push sFocusItem
	spushs
	spop $a
	call [$a],hide
	push 1
	call imitem,play
	cthis getz
	push 1
	pop $b
	popax
	add $a,$b
	call imitem,setz
	cthis setitempos
	cthis getname
	pop sItemMover
l3030:
	jmp l3028
l3029:
	cthis pockettoggle
l3028:
	jmp l3026
l3027:
	push sState
	push "open"
	cmpje
	cmp0
	je l3033
	cthis pockettoggle
	jmp l3032
l3033:
	push sState
	push "close"
	cmpje
	cmp0
	je l3035
	cthis pockettoggle
l3035:
l3032:
l3026:
l3024:
	end method
	method preparetosort
	localint $1
	localint $2
	pop $2
	pop $1
	localint $3
	push $1
	push $2
	push 1
	push 1
	clparent gmimgvec,isin
	pop $3
	push $3
	push 0
	cmpje
	cmp0
	je l3037
	push _sanim
	spushs
	spop $a
	call [$a],getz
	cthis setz
l3037:
	end method
	method endsort
	push _ipcz
	cthis setz
	end method
	method butisin
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	localint $5
	push $1
	push $2
	push $3
	push $4
	clparent gmimgvec,isin
	pop $5
	push $5
	cmp0
	je l3039
	push $5
	push 1
	pop $b
	popax
	sub $a,$b
	cthis get
	pop sFocusItem
	jmp l3038
l3039:
	push "null"
	pop sFocusItem
	push _sanim
	spushs
	push $1
	push $2
	push $3
	push $4
	spop $a
	call [$a],isin
	pop $5
l3038:
	push $5
	ret
	end method
	method hide
	push "stop"
	push 0
	cthis eval1
	push "hide"
	cthis eval
	call immarker,hide
	end method
	method setitempos
	call mouse,getpx
	push 76
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call mouse,getpy
	push 75
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call imitem,setpos
	end method
	method itemmoveoff
	push sState
	push "opened"
	cmpje
	cmp0
	je l3041
	call immarker,hide
l3041:
	end method
	method itemmoveon
	push sState
	push "opened"
	cmpje
	cmp0
	je l3043
	push sFocusItem
	push "null"
	cmpjne
	cmp0
	je l3045
	call immarker,show
	push sFocusItem
	spushs
	spop $a
	call [$a],getcx
	call immarker,getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push sFocusItem
	spushs
	spop $a
	call [$a],getcy
	call immarker,geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call immarker,setpos
l3045:
l3043:
	end method
	method checkusebutton
	localstring $1
	localstring $2
	pop $2
	pop $1
	push "beh_"
	push _sanim
	pop $b
	popax
	add $a,$b
	push "_USE_"
	pop $b
	popax
	add $a,$b
	push _sbase
	call sItem,strsubbs
	pop $b
	popax
	add $a,$b
	push "_ON_"
	pop $b
	popax
	add $a,$b
	push $1
	spushs
	spop $a
	call [$a],getbutname
	pop $b
	popax
	add $a,$b
	cthis behexist
	cmp0
	jne l3048
	push sFocusItem
	push "null"
	cmpjne
	cmp0
	je l3049
	push "beh_"
	push _sanim
	pop $b
	popax
	add $a,$b
	push "_USE_"
	pop $b
	popax
	add $a,$b
	push _sbase
	call sItem,strsubbs
	pop $b
	popax
	add $a,$b
	push "_ON_"
	pop $b
	popax
	add $a,$b
	push _sbase
	call sFocusItem,strsubbs
	pop $b
	popax
	add $a,$b
	cthis behexist
	jmp l3051
l3049:
	push 0
	jmp l3051
l3050:
	push 1
l3051:
	jmp l3052
l3047:
	push 0
	jmp l3052
l3048:
	push 1
l3052:
	cmp0
	je l3053
	push $2
	spushs
	spop $d
	call advmouse,[$d]
l3053:
	end method
	method moveon
	push sItemMover
	push "null"
	cmpje
	cmp0
	je l3055
	cthis ismainhero
	cmp0
	jne l3058
	push "beh_"
	cthis getmainhero
	pop $b
	popax
	add $a,$b
	push "_OPERATE_"
	pop $b
	popax
	add $a,$b
	push _sanim
	pop $b
	popax
	add $a,$b
	cthis behexist
	jmp l3059
l3057:
	push 0
	jmp l3059
l3058:
	push 1
l3059:
	cmp0
	je l3060
	call advmouse,setactive
l3060:
	jmp l3054
l3055:
	push sItemMover
	spushs
	cthis getname
	push "setactive"
	spop $a
	call [$a],checkusebutton
l3054:
	end method
	method onmouselclick
	localint $1
	localint $2
	pop $2
	pop $1
	push bskip
	cmp0
	je l3062
	push 0
	pop bskip
	push sItem
	push "null"
	cmpjne
	cmp0
	je l3064
	push sState
	push "opened"
	cmpje
	cmp0
	je l3064
	push sFocusItem
	push "null"
	cmpje
	jmp l3066
l3064:
	push 0
	jmp l3066
l3065:
	push 1
l3066:
	cmp0
	je l3067
	cthis pockettoggle
l3067:
	jmp l3061
l3062:
	cthis ismainhero
	cmp0
	je l3069
	push sState
	push "opened"
	cmpje
	cmp0
	jne l3071
	push sState
	push "open"
	cmpje
	jmp l3072
l3070:
	push 0
	jmp l3072
l3071:
	push 1
l3072:
	cmp0
	je l3074
	cthis pockettoggle
	jmp l3073
l3074:
	cthis itemhide
l3073:
l3069:
l3061:
	end method
	method onmouserclick
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 1
	cthis butisin
	cmp0
	je l3076
	push sState
	push "opened"
	cmpje
	cmp0
	je l3078
	push sFocusItem
	push "null"
	cmpjne
	jmp l3080
l3078:
	push 0
	jmp l3080
l3079:
	push 1
l3080:
	cmp0
	je l3081
	push "beh_"
	push _sanim
	pop $b
	popax
	add $a,$b
	push "_ITEM_"
	pop $b
	popax
	add $a,$b
	push _sbase
	call sFocusItem,strsubbs
	pop $b
	popax
	add $a,$b
	cthis playbehif
	popax
	jmp l3077
l3081:
	cthis ismainhero
	cmp0
	je l3083
	push "beh_RCLICK_"
	push _sanim
	pop $b
	popax
	add $a,$b
	cthis playbehif
	popax
l3083:
l3077:
l3076:
	end method
	method onmousemove
	localint $1
	localint $2
	pop $2
	pop $1
	push sItem
	push "null"
	cmpjne
	cmp0
	je l3085
	cthis setitempos
l3085:
	push sState
	push "opened"
	cmpje
	cmp0
	je l3087
	push $1
	push $2
	push 1
	push 1
	cthis butisin
	jmp l3089
l3087:
	push 0
	jmp l3089
l3088:
	push 1
l3089:
	cmp0
	je l3090
	cthis itemmoveon
l3090:
	end method
	method moveoff
	call advmouse,setstd
	cthis itemmoveoff
	end method
	method ismainhero
	cthis getmainhero
	push _sanim
	cmpje
	end method
	method clickon
	cthis ismainhero
	cmp0
	je l3092
	call clwalkq,stand
	cthis itemclick
	jmp l3091
l3092:
	cthis getname
	call clwalkq,visit
l3091:
	end method
	end class

	new string,sgmlastscene
	push "null"
	pop sgmlastscene
	new string,sgmglobpath
	push "null"
	pop sgmglobpath
	new string,sgmgame
	push "null"
	pop sgmgame
	new db,gdbsound
	new string,_slhpref
	push "cllh"
	pop _slhpref
	new string,_spathpref
	push "pt"
	pop _spathpref
	new string,_spocketpref
	push "pc"
	pop _spocketpref
	new string,_sstndpref
	push "stnd"
	pop _sstndpref
	new string,_stalkpref
	push "ctlk"
	pop _stalkpref
	new int,AdventureGame
	push 0
	push 0
	push igmappw
	push igmapph
	new CutScene,ccs
	push 2000
	call ccs,setz
	method advgetscreenshoot
	call gameapi,getgamename
	spushs
	cthis getsavepath
	push "slot"
	pop $b
	popax
	add $a,$b
	push PrzygodaNumer
	pop $b
	popax
	add $a,$b
	push ".bmp"
	pop $b
	popax
	add $a,$b
	push 0.3
	spop $a
	call [$a],cgetscreenshoot
	end method
	module modadv
	method init
	new db,dbload
	new string,stalktype
	push "snd"
	cthis settalktype
	push "null"
	new Script,scrl
	new string,_stalk
	end method
	method execute
	localstring $1
	pop $1
	push $1
	call scrl,call
	end method
	method loadscript
	localstring $1
	pop $1
	push $1
	call scrl,load
	end method
	method loadsounds
	localstring $1
	pop $1
	push $1
	call gdbsound,load
	push igmdebug
	cmp0
	je l3094
	push "exports/adv.dlg"
	call gdbsound,save
l3094:
	end method
	method gettalktype
	push stalktype
	end method
	method settalktype
	localstring $1
	pop $1
	push $1
	pop stalktype
	end method
	method load
	localstring $1
	pop $1
	push $1
	call dbload,loadscript
	push "talk:"
	push 1
	cthis get
	pop _stalk
	end method
	method get
	localstring $1
	localint $2
	pop $2
	pop $1
	localint $3
	push $1
	call dbload,findbyrow
	pop $3
	push $3
	push 0
	cmpjl
	cmp0
	je l3096
	push "modadv.dbload: can't find "
	push $1
	pop $b
	popax
	add $a,$b
	call engine,print
	push "null"
	jmp l3095
l3096:
	push $3
	push $2
	call dbload,get
l3095:
	end method
	end module

	module modadvglob
	method init
	new gmobjvec,grhero
	new gmobjvec,grfiles
	new gmobjvec,grpck
	end method
	method addhero
	localstring $1
	localstring $2
	localint $3
	pop $3
	pop $2
	pop $1
	push "hero_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_active"
	pop $b
	popax
	add $a,$b
	push 1
	call clsave,set
	localint $4
	push $1
	call grhero,find
	pop $4
	push $4
	push 0
	cmpjae
	cmp0
	je l3098
	push $4
	call grfiles,get
	push $2
	cmpjne
	cmp0
	je l3100
	push $4
	push $2
	call grfiles,set
	push $1
	spushs
	push $2
	cthis getpath
	spop $a
	call [$a],load
l3100:
	push $1
	spushs
	push $1
	spop $a
	call [$a],addtogamevars
	push $3
	cmp0
	je l3102
	push _spocketpref
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],addtoadv
l3102:
	push 0
	jmp l3097
l3098:
	push $1
	push $2
	push 0
	cthis newanima
	push $1
	spushs
	push $1
	spop $a
	call [$a],addtogamevars
	push $1
	call grhero,add
	push $2
	call grfiles,add
	push $3
	cmp0
	je l3104
	localstring $5
	push _spocketpref
	push $1
	pop $b
	popax
	add $a,$b
	pop $5
	push $5
	cthis hasvar
	neg
	cmp0
	je l3106
	push $5
	spushs
	push $1
	spop $e
	new classadvpocket,[$e]
	push $5
	call grpck,add
	push $5
	spushs
	spop $a
	call [$a],addtoadv
	jmp l3105
l3106:
	push $5
	spushs
	spop $a
	call [$a],addtoadv
l3105:
l3104:
	push 1
l3097:
	end method
	method reloadhero
	localstring $1
	pop $1
	localint $2
	push $1
	call grhero,find
	pop $2
	push $2
	push 0
	cmpjae
	cmp0
	je l3108
	localstring $3
	push $2
	call grfiles,get
	pop $3
	push $1
	push 0
	cthis _delhero
	push $1
	push $3
	push 0
	cthis addhero
	popax
l3108:
	end method
	method delhero
	localstring $1
	pop $1
	push $1
	push 1
	cthis _delhero
	end method
	method delheros
l3109:
	call grhero,size
	cmp0
	je l3110
	call grhero,first
	cthis delhero
	jmp l3109
l3110:
	end method
	method _delhero
	localstring $1
	localint $2
	pop $2
	pop $1
	push "hero_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_active"
	pop $b
	popax
	add $a,$b
	push 0
	call clsave,set
	localint $3
	push $1
	call grhero,find
	pop $3
	push $3
	push 0
	cmpjae
	cmp0
	je l3112
	localstring $4
	push _spocketpref
	push $1
	pop $b
	popax
	add $a,$b
	pop $4
	push $4
	cthis hasvar
	cmp0
	je l3114
	push $2
	jmp l3116
l3114:
	push 0
	jmp l3116
l3115:
	push 1
l3116:
	cmp0
	je l3117
	push $4
	call grpck,remove
	push $4
	spushs
	spop $a
	call [$a],removefromadv
	push $4
	spushs
	spop $d
	delete [$d]
l3117:
	push $3
	call grhero,removeat
	push $3
	call grfiles,removeat
	push $1
	spushs
	spop $d
	delete [$d]
l3112:
	end method
	method savepck
	localstring $1
	pop $1
	push "grpck_"
	push $1
	pop $b
	popax
	add $a,$b
	push ".txt"
	pop $b
	popax
	add $a,$b
	call grpck,vecsave
	localint $2
	push 0
	pop $2
l3118:
	push $2
	call grpck,size
	cmpjl
	cmp0
	je l3119
	jmp l3121
l3120:
	add $2,1
	pop $2
	jmp l3118
l3121:
	push $2
	call grpck,get
	spushs
	push $1
	spop $a
	call [$a],savestate
	jmp l3120
l3119:
	end method
	method loadpck
	localstring $1
	pop $1
	localdef $2
	localdef $3
	localint $4
	push 0
	pop $4
l3122:
	push $4
	call grpck,size
	cmpjl
	cmp0
	je l3123
	jmp l3125
l3124:
	add $4,1
	pop $4
	jmp l3122
l3125:
	push $4
	call grpck,get
	pop $2
	push $2
	spushs
	spop $a
	call [$a],removefromadv
	push $2
	spushs
	spop $d
	delete [$d]
	jmp l3124
l3123:
	push "grpck_"
	push $1
	pop $b
	popax
	add $a,$b
	push ".txt"
	pop $b
	popax
	add $a,$b
	call grpck,vecload
	push 0
	pop $4
l3126:
	push $4
	call grpck,size
	cmpjl
	cmp0
	je l3127
	jmp l3129
l3128:
	add $4,1
	pop $4
	jmp l3126
l3129:
	push $4
	call grpck,get
	pop $2
	push $2
	spushs
	push _spocketpref
	call $2,strsubbs
	spop $e
	new classadvpocket,[$e]
	push $2
	spushs
	push $1
	spop $a
	call [$a],loadstate
	push $2
	spushs
	spop $a
	call [$a],removefromadv
	jmp l3128
l3127:
	end method
	method onexit
	localstring $1
	localint $2
	push 0
	pop $2
l3130:
	push $2
	call grhero,size
	cmpjl
	cmp0
	je l3131
	jmp l3133
l3132:
	add $2,1
	pop $2
	jmp l3130
l3133:
	push $2
	call grhero,get
	pop $1
	push $1
	spushs
	push 0
	spop $a
	call [$a],stop
	push $1
	spushs
	spop $a
	call [$a],hide
	push _spocketpref
	push $1
	pop $b
	popax
	add $a,$b
	cthis hasvar
	cmp0
	je l3135
	push _spocketpref
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],exitpocket
l3135:
	push _spathpref
	push $1
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	spushs
	spop $a
	call [$a],unlinkanima
	jmp l3132
l3131:
	end method
	method print
	call grhero,print
	call grfiles,print
	call grpck,print
	end method
	end module

	class classloadedhero
	method init
	new string,sanhero
	new int,bplaystart
	push 0
	pop bplaystart
	new int,bplaystop
	push 0
	pop bplaystop
	end method
	method setplaystart
	localint $1
	pop $1
	push $1
	pop bplaystart
	end method
	method setplaystop
	localint $1
	pop $1
	push $1
	pop bplaystop
	end method
	method getstartstop
	push bplaystart
	push bplaystop
	ret
	end method
	end class

	class classadvcontroller
	parent classadv
	method init
	push 1
	pop AdventureGame
	clparent classadv,init
	push SNDPATH
	cthis setwavpath
	new snd,__sndplay
	call __sndplay,classadvcontroller0
	cthis advsetstdstate
	new classstndgroup,modstnd
	new Music,_music
	push "engine"
	call _music,smixer=
	new timer,_tim_dbclk
	push 200
	call _tim_dbclk,setdelay
	new int,_if_pos
	push 1
	popax
	sub 0,$a
	pop _if_pos
	push "_dbbh"
	new classobjcounter,clcbeh
	new string,_sbeh
	push "clbeh"
	pop _sbeh
	new int,iidbeh
	push "dbadv"
	new classobjcounter,clcadv
	new db,dbmacros
	new vector,_vecarg
	push "string"
	call _vecarg,type
	new classadvcamera,clcamera
	push "advmsmove"
	call clcamera,setmetonmsmove
	new classwalkerqueue,clwalkq
	new gmadvvec,grbuts
	new gmimgvec,grmsmove
	new gmimgvec,grmslclick
	new gmimgvec,grmsrclick
	new gmimgvec,grmslrel
	new gmobjvec,grsndsrcs
	push "csndsrc"
	new classobjcounter,csndsrc
	push "_timsndsrc"
	push "classadvcontroller2"
	cthis cycle=
	call _timsndsrc,play
	new string,_susetool
	push "null"
	pop _susetool
	new string,_slastms
	push "null"
	pop _slastms
	new int,_b_rewind
	push 1
	pop _b_rewind
	new string,sactbeh
	push "null"
	pop sactbeh
	new string,slastpathf
	new int,licznik
	push 0
	pop licznik
	new string,smainhero
	push "null"
	pop smainhero
	cthis advsaveonstart
	push sgmgame
	push "null"
	cmpje
	cmp0
	je l3141
	cthis getname
	pop sgmgame
l3141:
	new string,sprivgame
	push sgmgame
	pop sprivgame
	push "null"
	pop sgmgame
	end method
	method classadvcontroller0
	push A
	push "sfun"
	push "null"
	push "sob"
	push "null"
	cthis vars2
	push 0
	push 1
	cthis setstartstopflag
	push "onfinish"
	push "classadvcontroller1"
	cthis addmethod
	end method
	method classadvcontroller1
	push sob
	push sfun
	cthis callfun
	end method
	method classadvcontroller2
	push "classadvcontroller3"
	call grsndsrcs,eval
	cthis play
	end method
	method classadvcontroller3
	localint $1
	localint $2
	localdef $3
	cthis getmainhero
	pop $3
	push $3
	push "null"
	cmpje
	cmp0
	je l3137
	push iResX
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $1
	push iResY
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $2
	jmp l3136
l3137:
	push $3
	spushs
	spop $a
	call [$a],getposx
	pop $1
	push $3
	spushs
	spop $a
	call [$a],getposy
	pop $2
l3136:
	localreal $4
	push slinkedobj
	push "-pos"
	cmpje
	cmp0
	je l3139
	push iobjx
	push $1
	pop $b
	popax
	sub $a,$b
	call clcamera,getposx
	pop $b
	popax
	add $a,$b
	push iobjy
	push $2
	pop $b
	popax
	sub $a,$b
	call clcamera,getposy
	pop $b
	popax
	add $a,$b
	call $4,length
	pop $4
	jmp l3138
l3139:
	push slinkedobj
	spushs
	spop $a
	call [$a],getcx
	push $1
	pop $b
	popax
	sub $a,$b
	push slinkedobj
	spushs
	spop $a
	call [$a],getcy
	push $2
	pop $b
	popax
	sub $a,$b
	call $4,length
	pop $4
l3138:
	push slinkedfx
	push imaxvol
	push ioutervol
	push rradious
	push $4
	clparent SoundSource,setvol
	end method
	method initadventure
	localstring $1
	localstring $2
	push "game"
	call sprivgame,strsubbs
	pop $2
	push sgmglobpath
	push "null"
	cmpjne
	cmp0
	je l3143
	push sgmglobpath
	pop $1
	push "null"
	pop sgmglobpath
	jmp l3142
l3143:
	push $2
	pop $1
l3142:
	push "scripts/"
	push $1
	pop $b
	popax
	add $a,$b
	push "/"
	pop $b
	popax
	add $a,$b
	cthis setgraphpath
	push $2
	push ".adv"
	pop $b
	popax
	add $a,$b
	cthis loadadventure
	call grbuts,sortimgs
	push smainhero
	push "null"
	cmpje
	cmp0
	je l3145
	call clcamera,getactor
	pop smainhero
l3145:
	call clcamera,start
	call clcamera,setscene
	call clwalkq,start
	push 1
	call clwalkq,setverlen
	call advmouse,setstd
	call grbuts,sortimgs
	push "_advtimmove"
	push "classadvcontroller4"
	cthis cycle=
	call _advtimmove,play
	end method
	method classadvcontroller4
	cthis advbutrefresh
	cthis play
	end method
	method playbehoninit
	push "preinit"
	cthis behexist
	cmp0
	je l3147
	push "preinit"
	cthis getname
	push "playbehinit"
	cthis playbehobfin
	jmp l3146
l3147:
	cthis playbehinit
l3146:
	end method
	method playbehinit
	push sprivgame
	push "visited"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l3149
	push "behinit_FROM_"
	push sgmlastscene
	pop $b
	popax
	add $a,$b
	cthis playpostinit
	cmp0
	je l3151
	jmp l3150
l3151:
	push "behinit"
	cthis playpostinit
	cmp0
	je l3153
l3153:
l3150:
	jmp l3148
l3149:
	push sprivgame
	push "visited"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	push "behinit0_FROM_"
	push sgmlastscene
	pop $b
	popax
	add $a,$b
	cthis playpostinit
	cmp0
	je l3155
	jmp l3154
l3155:
	push "behinit0"
	cthis playpostinit
	cmp0
	je l3157
	jmp l3156
l3157:
	push "behinit_FROM_"
	push sgmlastscene
	pop $b
	popax
	add $a,$b
	cthis playpostinit
	cmp0
	je l3159
	jmp l3158
l3159:
	push "behinit"
	cthis playpostinit
	cmp0
	je l3161
l3161:
l3158:
l3156:
l3154:
l3148:
	end method
	method getmainhero
	push smainhero
	end method
	method setmainhero
	localstring $1
	pop $1
	push $1
	pop smainhero
	end method
	method ismainhero
	localstring $1
	pop $1
	push smainhero
	push $1
	cmpje
	end method
	method setactbeh
	localstring $1
	pop $1
	push $1
	pop sactbeh
	end method
	method getactbeh
	push sactbeh
	end method
	method skipactbeh
	cthis getactbeh
	push "null"
	cmpjne
	cmp0
	je l3163
	cthis getactbeh
	spushs
	spop $a
	call [$a],skip
l3163:
	end method
	method setusetool
	localstring $1
	pop $1
	push $1
	pop _susetool
	end method
	method getusetool
	push _susetool
	end method
	method ishintablebut
	push bautohint
	cmp0
	je l3164
	cthis isvisible
	cmp0
	jne l3167
	cthis ismask
	cmp0
	jne l3167
	push bshownonvis
	jmp l3168
l3166:
	push 0
	jmp l3168
l3167:
	push 1
l3168:
	jmp l3169
l3164:
	push 0
	jmp l3169
l3165:
	push 1
l3169:
	end method
	method playpostinit
	localstring $1
	pop $1
	push $1
	call gameapi,getgamename
	push "postinit"
	cthis playbehobfinif
	end method
	method playbeh
	localstring $1
	pop $1
	push $1
	push "null"
	cthis playbehfin
	end method
	method playbehif
	localstring $1
	pop $1
	push $1
	cthis behexist
	cmp0
	je l3171
	push $1
	push "null"
	cthis playbehfin
	push 1
	jmp l3170
l3171:
	push 0
l3170:
	end method
	method playbehfin
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push "null"
	push $2
	cthis playbehobfin
	end method
	method playbehfinif
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	cthis behexist
	cmp0
	je l3173
	push $1
	push $2
	cthis playbehfin
	push 1
	jmp l3172
l3173:
	push 0
l3172:
	end method
	method playbehobfin
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	cthis getbeh
	spushs
	push $2
	push $3
	spop $a
	call [$a],playfin
	end method
	method playbehobfinif
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	cthis behexist
	cmp0
	je l3175
	push $1
	push $2
	push $3
	cthis playbehobfin
	push 1
	jmp l3174
l3175:
	push 0
l3174:
	end method
	method playnewgamepath
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $2
	pop sgmglobpath
	push sprivgame
	pop sgmlastscene
	push "lastscene"
	push sgmlastscene
	call clsave,set
	push $1
	call gameapi,play
	end method
	method playnewgame
	localstring $1
	pop $1
	push $1
	push "null"
	cthis playnewgamepath
	end method
	method playfromscript
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $2
	pop sgmgame
	push "defaultadv:"
	push 1
	call modadv,get
	push $1
	cthis playnewgamepath
	end method
	method getheroloader
	localstring $1
	pop $1
	push _slhpref
	push $1
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	call engine,varexist
	cmp0
	je l3177
	push $1
	jmp l3176
l3177:
	push "null"
l3176:
	end method
	method advanstand
	localstring $1
	pop $1
	localstring $2
	push _spathpref
	push $1
	pop $b
	popax
	add $a,$b
	pop $2
	push $2
	call engine,varexist
	cmp0
	je l3179
	push $2
	spushs
	spop $a
	call [$a],iswalking
	jmp l3181
l3179:
	push 0
	jmp l3181
l3180:
	push 1
l3181:
	cmp0
	je l3182
	push $2
	spushs
	push 0
	spop $a
	call [$a],stop
	push $2
	spushs
	spop $a
	call [$a],stand
l3182:
	end method
	method reloadhero
	localstring $1
	pop $1
	push $1
	cthis _getheropath
	cthis anreload
	localstring $2
	push _spathpref
	cthis getname
	pop $b
	popax
	add $a,$b
	pop $2
	push $2
	spushs
	cthis getname
	spop $a
	call [$a],linkanima
	push $2
	spushs
	spop $a
	call [$a],linkfilter
	push $2
	spushs
	spop $a
	call [$a],scalean
	end method
	method analizeanopts
	localstring $1
	localint $2
	localint $3
	localint $4
	localstring $5
	localstring $6
	localstring $7
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	localreal $8
	localreal $9
	localstring $10
	localstring $11
	localint $12
	push 0
	pop $12
	localint $13
	push 0
	pop $13
	localint $14
	localint $15
	localint $16
	localint $17
	push 0
	pop $17
l3183:
	push $3
	push $4
	cmpjl
	cmp0
	je l3184
	add $3,1
	pop $3
	push $1
	spushs
	push $2
	push $3
	push 1
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],get
	spushs
	push "-stt"
	cmpst
	jne l3186
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $12
	add $3,1
	pop $3
	jmp l3185
l3186:
	push "-stp"
	cmpst
	jne l3187
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $13
	add $3,1
	pop $3
	jmp l3185
l3187:
	push "-wav"
	cmpst
	jne l3188
	spop $a
	push _slhpref
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $b
	popax
	add $a,$b
	pop $10
	add $3,1
	pop $3
	push $10
	spushs
	spop $e
	new classloadedhero,[$e]
	push $10
	spushs
	push "sanhero"
	push $5
	spop $a
	call [$a],varset
	push $6
	spushs
	push $10
	spop $a
	call [$a],add
	jmp l3185
l3188:
	push "-path"
	cmpst
	jne l3189
	spop $a
	push $5
	clparent classadvanhero,buildheroframe
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $10
	add $3,1
	pop $3
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $8
	add $3,1
	pop $3
	push _spathpref
	push $5
	pop $b
	popax
	add $a,$b
	pop $11
	push $11
	push $5
	push $10
	push $8
	cthis newclpathfcopy
	push $11
	spushs
	spop $a
	call [$a],prepareforhero
	push $11
	push "look"
	pop $b
	popax
	add $a,$b
	pop $10
	push $10
	spushs
	spop $e
	new classherolooker,[$e]
	push $10
	spushs
	push $5
	spop $a
	call [$a],link
	push $11
	push "use"
	pop $b
	popax
	add $a,$b
	pop $10
	push $10
	spushs
	spop $e
	new classherouser,[$e]
	push $10
	spushs
	push $5
	spop $a
	call [$a],link
	push $11
	push "take"
	pop $b
	popax
	add $a,$b
	pop $10
	push $10
	spushs
	spop $e
	new classherotaker,[$e]
	push $10
	spushs
	push $5
	spop $a
	call [$a],link
	jmp l3185
l3189:
	push "-ft"
	cmpst
	jne l3190
	spop $a
	push _spathpref
	push $5
	pop $b
	popax
	add $a,$b
	pop $11
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $8
	add $3,1
	pop $3
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $9
	add $3,1
	pop $3
	push $11
	spushs
	spop $a
	call [$a],linkfilter
	push $11
	spushs
	push $8
	spop $a
	call [$a],setzsize
	push $11
	spushs
	push $9
	spop $a
	call [$a],setscalepower
	jmp l3185
l3190:
	push "-stnd"
	cmpst
	jne l3191
	spop $a
	push _sstndpref
	push $5
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	spop $a
	call [$a],setdelay
	add $3,1
	pop $3
	jmp l3185
l3191:
	push "-txt"
	cmpst
	jne l3192
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $14
	add $3,1
	pop $3
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $15
	add $3,1
	pop $3
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $16
	add $3,1
	pop $3
	push _stalkpref
	push $5
	pop $b
	popax
	add $a,$b
	spushs
	push $14
	push $15
	push $16
	spop $a
	call [$a],settxtcolor
	jmp l3185
l3192:
	push "-font"
	cmpst
	jne l3193
	spop $a
	push 1
	pop $17
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $10
	add $3,1
	pop $3
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $11
	add $3,1
	pop $3
	push $7
	push "hero:"
	cmpje
	cmp0
	je l3195
	push _stalkpref
	push $5
	pop $b
	popax
	add $a,$b
	spushs
	push $10
	push $11
	spop $a
	call [$a],setfont
l3195:
	jmp l3185
l3193:
	spop $a
	push $1
	push $2
	push $3
	push 1
	pop $b
	popax
	sub $a,$b
	push $5
	cthis analizeaninstr
	pop $3
l3185:
	jmp l3183
l3184:
	push $17
	neg
	cmp0
	je l3197
	push $7
	push "hero:"
	cmpje
	jmp l3199
l3197:
	push 0
	jmp l3199
l3198:
	push 1
l3199:
	cmp0
	je l3200
	push _stalkpref
	push $5
	pop $b
	popax
	add $a,$b
	spushs
	push "font:"
	push 1
	call modadv,get
	push "font:"
	push 2
	call modadv,get
	spop $a
	call [$a],setfont
l3200:
	push $6
	spushs
	push "setplaystart"
	push $12
	spop $a
	call [$a],eval1
	push $6
	spushs
	push "setplaystop"
	push $13
	spop $a
	call [$a],eval1
	push $6
	spushs
	spop $a
	call [$a],free
	end method
	method setasadvanima
	cthis getname
	push "cadvherofinish"
	clparent classadvanhero,setashero
	end method
	method analizebut
	localstring $1
	localstring $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	localstring $5
	localstring $6
	localstring $7
	localint $8
	localint $9
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	pop $5
	add $4,1
	pop $4
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	pop $6
	add $4,1
	pop $4
	push ".pyz"
	call $6,contains
	cmp0
	je l3202
	push $6
	pop $7
	push "an"
	push 4
	call $6,strsube
	pop $b
	popax
	add $a,$b
	pop $6
	push $6
	push $7
	push 0
	cthis newanima
l3202:
	push 1
	call $1,strsube
	pop $1
	push $6
	push $5
	push $1
	clparent classadvbut,setasbutton2
	push "setas"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push $6
	spop $d
	clparent classadvbut,[$d]
	push $6
	spushs
	push $6
	spushs
	spop $a
	call [$a],getcx
	push $6
	spushs
	spop $a
	call [$a],getcy
	spop $a
	call [$a],setadvbutpos
l3203:
	push $4
	push $2
	spushs
	push $3
	spop $a
	call [$a],getcolsno
	cmpjl
	cmp0
	je l3204
	add $4,1
	pop $4
	push $2
	spushs
	push $3
	push $4
	push 1
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],get
	spushs
	push "-pos"
	cmpst
	jne l3206
	spop $a
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	pop $5
	add $4,1
	pop $4
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	pop $7
	add $4,1
	pop $4
	push $5
	push "-id"
	cmpje
	cmp0
	je l3208
	push slastpathf
	push "null"
	cmpjne
	jmp l3210
l3208:
	push 0
	jmp l3210
l3209:
	push 1
l3210:
	cmp0
	je l3211
	push slastpathf
	spushs
	push $7
	spop $a
	call [$a],getbyname
	pop $8
	push slastpathf
	spushs
	push $8
	spop $a
	call [$a],getxver
	push slastpathf
	spushs
	spop $a
	call [$a],getposx
	pop $b
	popax
	sub $a,$b
	pop $5
	push slastpathf
	spushs
	push $8
	spop $a
	call [$a],getyver
	push slastpathf
	spushs
	spop $a
	call [$a],getposy
	pop $b
	popax
	sub $a,$b
	pop $7
l3211:
	push $6
	spushs
	push $5
	push $7
	spop $a
	call [$a],setadvbutpos
	jmp l3205
l3206:
	push "-bs1"
	cmpst
	jne l3212
	spop $a
	push $6
	spushs
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	spop $a
	call [$a],setbutbase1
	add $4,1
	pop $4
	jmp l3205
l3212:
	push "-bs2"
	cmpst
	jne l3213
	spop $a
	push $6
	spushs
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	spop $a
	call [$a],setbutbase2
	add $4,1
	pop $4
	jmp l3205
l3213:
	push "-us1"
	cmpst
	jne l3214
	spop $a
	push $6
	spushs
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	spop $a
	call [$a],baseuse1=
	add $4,1
	pop $4
	jmp l3205
l3214:
	push "-us2"
	cmpst
	jne l3215
	spop $a
	push $6
	spushs
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	spop $a
	call [$a],baseuse2=
	add $4,1
	pop $4
	jmp l3205
l3215:
	push "-useon"
	cmpst
	jne l3216
	spop $a
	push $6
	spushs
	push "use:"
	push 1
	call modadv,get
	spop $a
	call [$a],setbutbase1
	push $6
	spushs
	push "use:"
	push 2
	call modadv,get
	spop $a
	call [$a],setbutbase2
	jmp l3205
l3216:
	push "-dir"
	cmpst
	jne l3217
	spop $a
	push $6
	spushs
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	spop $a
	call [$a],setbutdir
	add $4,1
	pop $4
	jmp l3205
l3217:
	push "-noreach"
	cmpst
	jne l3218
	spop $a
	push $6
	spushs
	push 0
	spop $a
	call [$a],setreach
	jmp l3205
l3218:
	push "-nh"
	cmpst
	jne l3219
	spop $a
	push $6
	spushs
	push 0
	spop $a
	call [$a],hideontake=
	jmp l3205
l3219:
	push "-pck"
	cmpst
	jne l3220
	spop $a
	push $6
	spushs
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	spop $a
	call [$a],setpocket
	add $4,1
	pop $4
	jmp l3205
l3220:
	push "-mask"
	cmpst
	jne l3221
	spop $a
	push $6
	clparent classadvbut,setasmask
	push $6
	spushs
	spop $a
	call [$a],hide
	jmp l3205
l3221:
	push "-inpck"
	cmpst
	jne l3222
	spop $a
	push $6
	spushs
	spop $a
	call [$a],hideontake
	cmp0
	je l3224
	push $6
	spushs
	spop $a
	call [$a],hide
	jmp l3223
l3224:
	push $6
	spushs
	push "but"
	spop $a
	call [$a],setbuttyp
l3223:
	cthis getmainhero
	pop $5
	push $5
	push "null"
	cmpje
	cmp0
	je l3226
	call clcamera,getactor
	pop $5
l3226:
	push $5
	spushs
	spop $a
	call [$a],getpocket
	spushs
	push $6
	spushs
	spop $a
	call [$a],getbutname
	push $6
	spushs
	spop $a
	call [$a],getpocket
	spop $a
	call [$a],additem
	jmp l3205
l3222:
	push "-disable"
	cmpst
	jne l3227
	spop $a
	push $6
	spushs
	spop $a
	call [$a],disable
	jmp l3205
l3227:
	push "-once"
	cmpst
	jne l3228
	spop $a
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	pop $5
	add $4,1
	pop $4
	push $6
	spushs
	push $5
	spop $a
	call [$a],setonce
	push $5
	call clsave,bis
	cmp0
	je l3230
	push $6
	spushs
	spop $a
	call [$a],disable
l3230:
	jmp l3205
l3228:
	push "-cursor"
	cmpst
	jne l3231
	spop $a
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	pop $5
	add $4,1
	pop $4
	push $6
	spushs
	push $5
	spop $a
	call [$a],smousecursor=
	jmp l3205
l3231:
	push "-balpha"
	cmpst
	jne l3232
	spop $a
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	pop $8
	add $4,1
	pop $4
	push $6
	spushs
	push $8
	spop $a
	call [$a],balpha=
	jmp l3205
l3232:
	push "-noautohint"
	cmpst
	jne l3233
	spop $a
	push $6
	spushs
	push 0
	spop $a
	call [$a],bautohint=
	jmp l3205
l3233:
	spop $a
	push $6
	push $2
	push $3
	push $4
	push $2
	spushs
	push $3
	push $4
	push 1
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],get
	cthis subanalizebut
	pop $4
l3205:
	jmp l3203
l3204:
	end method
	method subanalizebut
	localstring $1
	localstring $2
	localint $3
	localint $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $4
	end method
	method _getheropath
	localstring $1
	pop $1
	localstring $2
	push $1
	cthis getpath
	pop $2
	push $2
	call engine,fileexist
	cmp0
	je l3235
	push "$"
	push $2
	pop $b
	popax
	add $a,$b
	jmp l3234
l3235:
	push "$"
	push "heropath:"
	push 1
	call modadv,get
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	add $a,$b
l3234:
	end method
	method loadadventure
	localstring $1
	pop $1
	localstring $2
	call clcadv,get
	pop $2
	localstring $3
	push "grpers"
	call clcadv,size
	pop $b
	popax
	add $a,$b
	pop $3
	push $2
	spushs
	spop $e
	new db,[$e]
	push $2
	spushs
	push $1
	cthis getpath
	spop $a
	call [$a],loadbeh
	localint $4
	push $2
	spushs
	spop $a
	call [$a],getrowsno
	pop $4
	localint $5
	localint $6
	localint $7
	localint $8
	localstring $9
	localstring $10
	localstring $11
	localint $12
	localint $13
	localint $14
	localreal $15
	localreal $16
	push $2
	push "script"
	pop $b
	popax
	add $a,$b
	pop $9
	push $9
	spushs
	push $2
	spop $e
	new Script,[$e]
	localstring $17
	push ""
	pop $17
	push $3
	spushs
	spop $e
	new gmobjvec,[$e]
	localint $18
	push 0
	pop $18
l3236:
	push $18
	push $4
	cmpjl
	cmp0
	je l3237
	jmp l3239
l3238:
	add $18,1
	pop $18
	jmp l3236
l3239:
	push 0
	pop $5
	push $2
	spushs
	push $18
	spop $a
	call [$a],getcolsno
	pop $6
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $9
	add $5,1
	pop $5
	push $9
	spushs
	push "setpath:"
	cmpst
	jne l3241
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $17
	add $5,1
	pop $5
	push $17
	cthis setgraphpath
	jmp l3240
l3241:
	push "nopath:"
	cmpst
	jne l3242
	spop $a
	push ""
	pop $17
	push $17
	cthis setgraphpath
	jmp l3240
l3242:
	push "func"
	cmpst
	jne l3243
	spop $a
l3244:
	push $2
	spushs
	push $18
	push 0
	spop $a
	call [$a],get
	push "end"
	cmpjne
	cmp0
	je l3245
	add $18,1
	pop $18
	jmp l3244
l3245:
	jmp l3240
l3243:
	push "sndpath:"
	cmpst
	jne l3246
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $9
	add $5,1
	pop $5
	push $9
	cthis setwavpath
	jmp l3240
l3246:
	push "hero:"
	cmpst
	je l3248
	push "an:"
	cmpst
	je l3248
	jmp l3247
l3248:
	spop $a
	push $2
	spushs
	push $18
	push "-global"
	spop $a
	call [$a],dbdelvar
	pop $7
	push $2
	spushs
	push $18
	push "-pck"
	spop $a
	call [$a],dbdelvar
	pop $8
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $11
	add $5,1
	pop $5
	push ".pyz"
	call $11,contains
	cmp0
	je l3250
	push $11
	pop $10
	push "an"
	push ".pyz"
	call $11,strsubes
	pop $b
	popax
	add $a,$b
	pop $11
	jmp l3249
l3250:
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $10
	add $5,1
	pop $5
l3249:
	push $9
	push "hero:"
	cmpje
	cmp0
	je l3252
	push ".pyz"
	call $10,contains
	cmp0
	je l3254
	push $10
	cthis _getheropath
	pop $10
l3254:
l3252:
	push ".pyz"
	call $10,contains
	cmp0
	je l3256
	push $7
	cmp0
	je l3258
	push $11
	push $10
	push $8
	call modadvglob,addhero
	cmp0
	je l3260
	push $11
	spushs
	spop $a
	call [$a],setasadvanima
l3260:
	sub $6,1
	pop $6
	jmp l3257
l3258:
	push $11
	push $10
	push 0
	cthis newanima
	push $11
	spushs
	spop $a
	call [$a],setasadvanima
	push $9
	push "hero:"
	cmpje
	cmp0
	je l3262
	push $8
	jmp l3264
l3262:
	push 0
	jmp l3264
l3263:
	push 1
l3264:
	cmp0
	je l3265
	push _spocketpref
	push $11
	pop $b
	popax
	add $a,$b
	spushs
	push $11
	spop $e
	new classadvpocket,[$e]
l3265:
l3257:
	jmp l3255
l3256:
	push $10
	push $11
	cthis copyanima
	push $11
	spushs
	spop $a
	call [$a],setasadvanima
	push $9
	push "hero:"
	cmpje
	cmp0
	je l3267
	push $8
	jmp l3269
l3267:
	push 0
	jmp l3269
l3268:
	push 1
l3269:
	cmp0
	je l3270
	push _spocketpref
	push $11
	pop $b
	popax
	add $a,$b
	spushs
	push $11
	spop $e
	new classadvpocket,[$e]
l3270:
l3255:
	push $8
	cmp0
	je l3272
	sub $6,1
	pop $6
l3272:
	push $9
	push "hero:"
	cmpje
	cmp0
	je l3274
	push _sstndpref
	push $11
	pop $b
	popax
	add $a,$b
	spushs
	spop $e
	new classadvstander,[$e]
	push _stalkpref
	push $11
	pop $b
	popax
	add $a,$b
	pop $10
	push $10
	spushs
	spop $e
	new classtalker,[$e]
	push $10
	spushs
	push $11
	spop $a
	call [$a],set
	push $10
	spushs
	push "gdbsound"
	spop $a
	call [$a],settextdb
l3274:
	push $2
	push $18
	push $5
	push $6
	push $11
	push $3
	push $9
	cthis analizeanopts
	jmp l3240
l3247:
	push "rect:"
	cmpst
	jne l3275
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $9
	add $5,1
	pop $5
	push $9
	spushs
	spop $e
	new ImgRect,[$e]
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $10
	push $10
	clparent StringChecker,isdigit
	neg
	cmp0
	je l3277
	push $9
	spushs
	push $10
	spop $a
	call [$a],operator=
	add $5,1
	pop $5
	jmp l3276
l3277:
	push $9
	spushs
	call $10,to_r
	push igmappw
	pop $b
	popax
	mul $a,$b
	push $2
	spushs
	push $18
	push $5
	push 1
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],get
	spushs
	spop $h
	call $h,to_r
	push igmapph
	pop $b
	popax
	mul $a,$b
	push $2
	spushs
	push $18
	push $5
	push 2
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],get
	spushs
	spop $h
	call $h,to_r
	push igmappw
	pop $b
	popax
	mul $a,$b
	push $2
	spushs
	push $18
	push $5
	push 3
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],get
	spushs
	spop $h
	call $h,to_r
	push igmapph
	pop $b
	popax
	mul $a,$b
	spop $a
	call [$a],setrect
	push 4
	popax
	add $5,$a
	pop $5
l3276:
	jmp l3240
l3275:
	push "anaac:"
	cmpst
	jne l3278
	spop $a
	push $2
	spushs
	push $18
	push "-mask"
	spop $a
	call [$a],dbdelvar
	pop $7
	push 0
	pop $8
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $9
	add $5,1
	pop $5
	push ".pyz"
	call $9,contains
	cmp0
	je l3280
	push $9
	pop $10
	push "an"
	push ".pyz"
	call $9,strsubes
	pop $b
	popax
	add $a,$b
	pop $9
	jmp l3279
l3280:
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $10
	add $5,1
	pop $5
l3279:
	push $7
	cmp0
	je l3282
	sub $6,1
	pop $6
	push $9
	spushs
	spop $e
	new gmmaskvec,[$e]
	jmp l3281
l3282:
	push $9
	spushs
	spop $e
	new gmadvvec,[$e]
l3281:
	push ".pyz"
	call $10,contains
	cmp0
	je l3284
	push "_"
	push $9
	pop $b
	popax
	add $a,$b
	push $10
	push 0
	cthis newanima
	push "_"
	push $9
	pop $b
	popax
	add $a,$b
	pop $10
	push 1
	pop $8
l3284:
	push $10
	push $9
	push $9
	cthis newanactionsgr
	pop $7
	push $2
	push $18
	push $5
	push $9
	cthis analizeaninstr
	pop $5
	push $8
	cmp0
	je l3286
	push $10
	spushs
	spop $a
	call [$a],hide
l3286:
	jmp l3240
l3278:
	push "anaf:"
	cmpst
	jne l3287
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $9
	add $5,1
	pop $5
	push ".pyz"
	call $9,contains
	cmp0
	je l3289
	push $9
	pop $10
	push "an"
	push ".pyz"
	call $9,strsubes
	pop $b
	popax
	add $a,$b
	pop $9
	jmp l3288
l3289:
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $10
	add $5,1
	pop $5
l3288:
	push $9
	spushs
	spop $e
	new gmimgvec,[$e]
	push ".pyz"
	call $10,contains
	cmp0
	je l3291
	push "_"
	push $9
	pop $b
	popax
	add $a,$b
	push $10
	push 0
	cthis newanima
	push "_"
	push $9
	pop $b
	popax
	add $a,$b
	pop $10
l3291:
	push $10
	push $9
	push $9
	cthis newanfrbyactgr
	pop $7
	push $2
	push $18
	push $5
	push $9
	cthis analizeaninstr
	pop $5
	jmp l3240
l3287:
	push "anfac:"
	cmpst
	jne l3292
	spop $a
	push $2
	spushs
	push $18
	push "-mask"
	spop $a
	call [$a],dbdelvar
	pop $7
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $9
	add $5,1
	pop $5
	push $7
	cmp0
	je l3294
	sub $6,1
	pop $6
	push $9
	spushs
	spop $e
	new gmmaskvec,[$e]
	jmp l3293
l3294:
	push $9
	spushs
	spop $e
	new gmadvvec,[$e]
l3293:
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $10
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $11
	add $5,1
	pop $5
	push $10
	push $9
	push $10
	spushs
	push $11
	spop $a
	call [$a],actionnr
	push $9
	cthis newanframesgr
	pop $7
	push $2
	push $18
	push $5
	push $9
	cthis analizeaninstr
	pop $5
	jmp l3240
l3292:
	push "anac:"
	cmpst
	jne l3295
	spop $a
	push $2
	spushs
	push $18
	push "-adv"
	spop $a
	call [$a],dbdelvar
	pop $7
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $9
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $10
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $11
	add $5,1
	pop $5
	push $11
	clparent StringChecker,isdigit
	cmp0
	je l3297
	push $10
	spushs
	push $11
	spop $a
	call [$a],nameofaction
	pop $11
l3297:
	push $10
	push $9
	push $11
	cthis copyanimaact
	push $7
	cmp0
	je l3299
	sub $6,1
	pop $6
	push $9
	spushs
	spop $a
	call [$a],setasadvanima
l3299:
	push $2
	push $18
	push $5
	push $9
	cthis analizeaninstr
	pop $5
	jmp l3240
l3295:
	push "anf:"
	cmpst
	jne l3300
	spop $a
	push $2
	spushs
	push $18
	push "-mask"
	spop $a
	call [$a],dbdelvar
	pop $7
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $9
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $10
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $11
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $8
	add $5,1
	pop $5
	push $10
	push $9
	cthis copyanima
	push $9
	spushs
	push $11
	push $8
	spop $a
	call [$a],setframe
	push $7
	cmp0
	je l3302
	sub $6,1
	pop $6
	push $9
	spushs
	spop $a
	call [$a],setasadvanima
l3302:
	push $2
	push $18
	push $5
	push $9
	cthis analizeaninstr
	pop $5
	jmp l3240
l3300:
	push "anorder:"
	cmpst
	jne l3303
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $9
	add $5,1
	pop $5
	push $2
	push $18
	push $5
	push $9
	cthis analizeaninstr
	pop $5
	jmp l3240
l3303:
	push "behfile:"
	cmpst
	jne l3304
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	cthis loadbehaviours
	add $5,1
	pop $5
	jmp l3240
l3304:
	push "include:"
	cmpst
	jne l3305
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	cthis loadadventure
	add $5,1
	pop $5
	jmp l3240
l3305:
	push "walkqueue:"
	cmpst
	jne l3306
	spop $a
l3307:
	push $5
	push $6
	cmpjl
	cmp0
	je l3308
	push _spathpref
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $b
	popax
	add $a,$b
	call clwalkq,add
	add $5,1
	pop $5
	jmp l3307
l3308:
	jmp l3240
l3306:
	push "font:"
	cmpst
	jne l3309
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $9
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $10
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $7
	add $5,1
	pop $5
	push $9
	spushs
	spop $e
	new font,[$e]
	push $9
	spushs
	push $10
	push $7
	spop $a
	call [$a],load
	jmp l3240
l3309:
	push "bkg:"
	cmpst
	jne l3310
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $9
	add $5,1
	pop $5
	push ".pyz"
	call $9,contains
	cmp0
	je l3312
	push "imgbkg"
	push $9
	push 0
	cthis newanima
	jmp l3311
l3312:
	push "imgbkg"
	push $9
	push 0
	cthis newimg
l3311:
	push $2
	push $18
	push $5
	push "imgbkg"
	cthis analizeaninstr
	pop $5
	jmp l3240
l3310:
	push "img:"
	cmpst
	jne l3313
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $9
	add $5,1
	pop $5
	push 0
	push 4
	call $9,gete
	spushs
	push A
	push ".jpg"
	push ".png"
	spop $h
	call $h,in
	cmp0
	je l3315
	push $9
	pop $10
	push "img"
	push 4
	call $9,strsube
	pop $b
	popax
	add $a,$b
	pop $9
	jmp l3314
l3315:
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $10
	add $5,1
	pop $5
l3314:
	push $9
	push $10
	push 0
	cthis newimg
	push $2
	push $18
	push $5
	push $9
	cthis analizeaninstr
	pop $5
	jmp l3240
l3313:
	push "but:"
	cmpst
	je l3317
	push "doors:"
	cmpst
	je l3317
	push "item:"
	cmpst
	je l3317
	jmp l3316
l3317:
	spop $a
	push $9
	push $2
	push $18
	push $5
	cthis analizebut
	jmp l3240
l3316:
	push "camera:"
	cmpst
	jne l3318
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $15
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $16
	add $5,1
	pop $5
	push $15
	push $16
	call clcamera,scalemodifiers
l3319:
	push $5
	push $6
	cmpjl
	cmp0
	je l3320
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $9
	add $5,1
	pop $5
	push $9
	push "-size"
	cmpje
	cmp0
	je l3322
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $7
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $8
	add $5,1
	pop $5
	push $7
	push $8
	call clcamera,setborders
	jmp l3321
l3322:
	push $9
	push "-center"
	cmpje
	cmp0
	je l3324
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $7
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $8
	add $5,1
	pop $5
	push $7
	push $8
	call clcamera,setcenter
	jmp l3323
l3324:
	push $9
	push "-sizebg"
	cmpje
	cmp0
	je l3326
	call imgbkg,getw
	call imgbkg,geth
	call clcamera,setborders
	jmp l3325
l3326:
	push $9
	push "-sizescreen"
	cmpje
	cmp0
	je l3328
	push igmappw
	push igmapph
	call clcamera,setborders
l3328:
l3325:
l3323:
l3321:
	jmp l3319
l3320:
	jmp l3240
l3318:
	push "actor:"
	cmpst
	jne l3329
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	call clcamera,setactor
	add $5,1
	pop $5
	jmp l3240
l3329:
	push "bgr:"
	cmpst
	jne l3330
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $9
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $15
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $16
	add $5,1
	pop $5
	push $9
	spushs
	spop $e
	new classbgplan,[$e]
	push $9
	push $15
	push $16
	call clcamera,addbgr
	jmp l3240
l3330:
	push "pathfinder:"
	cmpst
	jne l3331
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop slastpathf
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $10
	add $5,1
	pop $5
	push ".ptf"
	call $10,contains
	cmp0
	je l3333
	push 20
	pop $7
	push 20
	pop $8
	jmp l3332
l3333:
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $7
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $8
	add $5,1
	pop $5
l3332:
	push slastpathf
	push $10
	push $7
	push $8
	cthis newpathf
	jmp l3240
l3331:
	push "script:"
	cmpst
	jne l3334
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $9
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $10
	add $5,1
	pop $5
	push $9
	spushs
	push $10
	spop $e
	new Script,[$e]
	jmp l3240
l3334:
	push "func:"
	cmpst
	jne l3335
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $10
	add $5,1
	pop $5
	sub $6,1
	pop $6
	call clcadv,size
	push 1
	pop $b
	popax
	sub $a,$b
	pop $7
l3336:
	push $7
	push 0
	cmpjae
	cmp0
	je l3337
	jmp l3339
l3338:
	sub $7,1
	pop $7
	jmp l3336
l3339:
	push $7
	call clcadv,getid
	push "script"
	pop $b
	popax
	add $a,$b
	pop $9
	push $9
	spushs
	push $10
	spop $a
	call [$a],containsfun
	cmp0
	je l3341
	push 3
	pop $7
l3342:
	push $7
	push $6
	cmpjl
	cmp0
	je l3343
	jmp l3345
l3344:
	add $7,1
	pop $7
	jmp l3342
l3345:
	push $9
	spushs
	push $7
	push 3
	pop $b
	popax
	sub $a,$b
	push $2
	spushs
	push $18
	push $7
	spop $a
	call [$a],get
	spop $a
	call [$a],ARG=
	jmp l3344
l3343:
	push 1
	popax
	sub 0,$a
	pop $7
	push $9
	spushs
	push $10
	spop $a
	call [$a],call
l3341:
	jmp l3338
l3337:
	jmp l3240
l3335:
	push "IF"
	cmpst
	jne l3346
	spop $a
	add _if_pos,1
	pop _if_pos
	push $2
	push $18
	push $5
	push $6
	cthis _found_if
	pop $18
	jmp l3240
l3346:
	push "ELSE"
	cmpst
	jne l3347
	spop $a
	push $2
	push $18
	push 1
	pop $b
	popax
	add $a,$b
	cthis _goto_fi
	pop $18
	jmp l3240
l3347:
	push "FI"
	cmpst
	jne l3348
	spop $a
	sub _if_pos,1
	pop _if_pos
	push _if_pos
	push 1
	popax
	sub 0,$a
	cmpjl
	cmp0
	je l3350
	push "FI error! "
	cthis getname
	pop $b
	popax
	add $a,$b
	push "."
	pop $b
	popax
	add $a,$b
	cthis methodname
	pop $b
	popax
	add $a,$b
	spushs
	spop $h
	call $h,print
l3350:
	jmp l3240
l3348:
	push "bsave:"
	cmpst
	jne l3351
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	call clsave,bset
	add $5,1
	pop $5
	jmp l3240
l3351:
	push "save:"
	cmpst
	jne l3352
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $9
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $10
	add $5,1
	pop $5
	push $9
	push $10
	call clsave,set
	jmp l3240
l3352:
	push "stdptf:"
	cmpst
	jne l3353
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop slastpathf
	add $5,1
	pop $5
	jmp l3240
l3353:
	push "sfxs:"
	cmpst
	jne l3354
	spop $a
l3355:
	push $5
	push $6
	cmpjl
	cmp0
	je l3356
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $11
	push "fx"
	push $11
	pop $b
	popax
	add $a,$b
	pop $9
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],dbchecknext
	push "-f"
	cmpje
	cmp0
	je l3358
	push 2
	popax
	add $5,$a
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $11
l3358:
	add $5,1
	pop $5
	push $9
	push $11
	cthis newsfx
	push 1
	pop $7
l3359:
	push $7
	cmp0
	je l3360
	push $5
	push $6
	cmpjl
	jmp l3362
l3360:
	push 0
	jmp l3362
l3361:
	push 1
l3362:
	cmp0
	je l3363
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	spushs
	push "-v"
	cmpst
	jne l3365
	spop $a
	add $5,1
	pop $5
	push $9
	spushs
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	spop $a
	call [$a],setvol
	jmp l3364
l3365:
	push "-l"
	cmpst
	jne l3366
	spop $a
	push $9
	spushs
	push "onfinish"
	push "_stdsndloop"
	spop $a
	call [$a],addmethod
	jmp l3364
l3366:
	push "-p"
	cmpst
	jne l3367
	spop $a
	push $9
	spushs
	spop $a
	call [$a],play
	jmp l3364
l3367:
	push "-pl"
	cmpst
	je l3369
	push "-lp"
	cmpst
	je l3369
	push "-n"
	cmpst
	je l3369
	jmp l3368
l3369:
	spop $a
	push $9
	spushs
	spop $a
	call [$a],playloop
	jmp l3364
l3368:
	push "-tp"
	cmpst
	jne l3370
	spop $a
	push $9
	spushs
	spop $a
	call [$a],classadvcontroller5
	jmp l3364
l3370:
	push "-tp1"
	cmpst
	jne l3371
	spop $a
	push $9
	spushs
	spop $a
	call [$a],classadvcontroller6
	jmp l3364
l3371:
	push "-t"
	cmpst
	jne l3372
	spop $a
	add $5,1
	pop $5
	push $9
	spushs
	push "timpauza"
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	push "classadvcontroller7"
	spop $a
	call [$a],timer=
	push $9
	spushs
	spop $a
	call [$a],classadvcontroller8
	jmp l3364
l3372:
	spop $a
	sub $5,1
	pop $5
	push 0
	pop $7
l3364:
	add $5,1
	pop $5
	jmp l3359
l3363:
	jmp l3355
l3356:
	jmp l3240
l3354:
	push "met:"
	cmpst
	jne l3377
	spop $a
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $10
	add $5,1
	pop $5
	push "."
	call $10,contains
	cmp0
	je l3379
	push "."
	call $10,strgetto
	pop $11
	push "."
	call $10,strgetfrom
	pop $10
	push $11
	push ""
	cmpje
	cmp0
	jne l3382
	push $11
	push "this"
	cmpje
	jmp l3383
l3381:
	push 0
	jmp l3383
l3382:
	push 1
l3383:
	cmp0
	je l3384
	call gameapi,getgamename
	pop $11
l3384:
	jmp l3378
l3379:
	call gameapi,getgamename
	pop $11
l3378:
	push $11
	call gameapi,getgamename
	cmpje
	cmp0
	je l3386
	push $11
	spushs
	push $10
	spushs
	spop $d
	spop $a
	 clparent [$a],[$d]
	jmp l3385
l3386:
	push $11
	spushs
	push $10
	spushs
	spop $d
	spop $a
	call [$a],[$d]
l3385:
	jmp l3240
l3377:
	push "sndsrc:"
	cmpst
	jne l3387
	spop $a
	call csndsrc,get
	pop $11
	push $11
	spushs
	spop $e
	new int,[$e]
	push $11
	spushs
	push A
	push "slinkedfx"
	push "null"
	push "ioutervol"
	push 0
	push "rradious"
	push 0.0
	push "slinkedobj"
	push "null"
	push "iobjx"
	push 0
	push "iobjy"
	push 0
	push "imaxvol"
	push 0
	spop $a
	call [$a],vars2
	push $11
	spushs
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	spop $a
	call [$a],slinkedfx=
	add $5,1
	pop $5
	push $11
	spushs
	push $11
	spushs
	spop $a
	call [$a],slinkedfx
	spushs
	spop $a
	call [$a],getvol
	spop $a
	call [$a],imaxvol=
	push $11
	spushs
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	spop $a
	call [$a],ioutervol=
	add $5,1
	pop $5
	push $11
	spushs
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	spop $a
	call [$a],rradious=
	add $5,1
	pop $5
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	pop $10
	push $11
	spushs
	push $10
	spop $a
	call [$a],slinkedobj=
	push $10
	push "-pos"
	cmpje
	cmp0
	je l3389
	add $5,1
	pop $5
	push $11
	spushs
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	spop $a
	call [$a],iobjx=
	add $5,1
	pop $5
	push $11
	spushs
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	spop $a
	call [$a],iobjy=
l3389:
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],dbchecknext
	spushs
	push "-v"
	cmpst
	jne l3391
	spop $a
	push 2
	popax
	add $5,$a
	pop $5
	push $11
	spushs
	push $2
	spushs
	push $18
	push $5
	spop $a
	call [$a],get
	spop $a
	call [$a],imaxvol=
	jmp l3390
l3391:
	spop $a
l3390:
	add $5,1
	pop $5
	push $11
	call grsndsrcs,add
	push 1
	call _timsndsrc,stop
	jmp l3240
l3387:
	spop $a
	call gameapi,getgamename
	spushs
	push $2
	push $18
	push $5
	push $9
	spop $a
	call [$a],subloadadventure
	pop $5
l3240:
	jmp l3238
l3237:
	push $2
	spushs
	spop $a
	call [$a],readonly
	end method
	method classadvcontroller5
	call timpauza,play
	end method
	method classadvcontroller6
	push 0
	call timpauza,bloop=
	call timpauza,play
	end method
	method classadvcontroller7
	localint $1
	push 1
	pop $1
	push bfirst
	cmp0
	je l3374
	push 0
	pop bfirst
	jmp l3373
l3374:
	push bloop
	pop $1
l3373:
	push $1
	cmp0
	je l3376
	cthis getbuildername
	spushs
	spop $a
	call [$a],play
l3376:
	end method
	method classadvcontroller8
	push "onfinish"
	push "classadvcontroller9"
	cthis addmethod
	push A
	push "bloop"
	push 1
	push "bfirst"
	push 1
	call timpauza,vars2
	end method
	method classadvcontroller9
	call timpauza,play
	end method
	method subloadadventure
	localstring $1
	localint $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $3
	end method
	method _found_if
	localstring $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	add $3,1
	pop $3
	localint $5
	push 0
	pop $5
	localint $6
	push 0
	pop $6
	sub $4,1
	pop $4
	localstring $7
	localstring $8
l3392:
	push $3
	push $4
	cmpjl
	cmp0
	je l3393
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $7
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],dbchecknext
	pop $8
	push $8
	spushs
	push ")"
	cmpst
	je l3396
	push "|"
	cmpst
	je l3396
	push "&"
	cmpst
	je l3396
	jmp l3395
l3396:
	spop $a
	push $5
	push $6
	push 0
	push 1
	call $7,getb
	push "!"
	cmpje
	cmp0
	je l3398
	push 1
	call $7,strsubb
	push 1
	cthis _check_if_var
	neg
	jmp l3397
l3398:
	push $7
	push 1
	cthis _check_if_var
l3397:
	cthis _check_if
	pop $6
	push $8
	push "|"
	cmpje
	cmp0
	je l3400
	push 1
	pop $5
	jmp l3399
l3400:
	push $8
	push "&"
	cmpje
	cmp0
	je l3402
	push 2
	pop $5
l3402:
l3399:
	jmp l3394
l3395:
	push "="
	cmpst
	jne l3403
	spop $a
	push 2
	popax
	add $3,$a
	pop $3
	push $5
	push $6
	push $7
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	cthis _check_if_var
	cthis _check_if
	pop $6
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],dbchecknext
	cthis _check_if2
	pop $5
	jmp l3394
l3403:
	push "!="
	cmpst
	jne l3404
	spop $a
	push 2
	popax
	add $3,$a
	pop $3
	push $5
	push $6
	push $7
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	cthis _check_if_var
	neg
	cthis _check_if
	pop $6
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],dbchecknext
	cthis _check_if2
	pop $5
	jmp l3394
l3404:
	push "<"
	cmpst
	jne l3405
	spop $a
	push 2
	popax
	add $3,$a
	pop $3
	push $5
	push $6
	push $7
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	cthis _check_if_lessvar
	cthis _check_if
	pop $6
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],dbchecknext
	cthis _check_if2
	pop $5
	jmp l3394
l3405:
	push ">"
	cmpst
	jne l3406
	spop $a
	push 2
	popax
	add $3,$a
	pop $3
	push $5
	push $6
	push $7
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	cthis _check_if_greatervar
	cthis _check_if
	pop $6
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],dbchecknext
	cthis _check_if2
	pop $5
	jmp l3394
l3406:
	push "<="
	cmpst
	jne l3407
	spop $a
	push 2
	popax
	add $3,$a
	pop $3
	push $5
	push $6
	push $7
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	cthis _check_if_lesseqvar
	cthis _check_if
	pop $6
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],dbchecknext
	cthis _check_if2
	pop $5
	jmp l3394
l3407:
	push ">="
	cmpst
	jne l3408
	spop $a
	push 2
	popax
	add $3,$a
	pop $3
	push $5
	push $6
	push $7
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	cthis _check_if_greatereqvar
	cthis _check_if
	pop $6
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],dbchecknext
	cthis _check_if2
	pop $5
	jmp l3394
l3408:
	spop $a
l3394:
	push 2
	popax
	add $3,$a
	pop $3
	jmp l3392
l3393:
	push $6
	neg
	cmp0
	je l3410
	push $1
	push $2
	push 1
	pop $b
	popax
	add $a,$b
	cthis _goto_fi
	jmp l3409
l3410:
	push $2
l3409:
	end method
	method _check_if_var
	localstring $1
	localstring $2
	pop $2
	pop $1
	push 0
	push 1
	call $1,getb
	push "."
	cmpje
	cmp0
	je l3412
	call gameapi,getgamename
	spushs
	push 1
	call $1,strsubb
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	push $2
	cmpje
	jmp l3411
l3412:
	push $1
	push $2
	call clsave,is
l3411:
	end method
	method _check_if_lessvar
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	call clsave,get
	spushs
	spop $h
	call $h,to_r
	call $2,to_r
	cmpjl
	end method
	method _check_if_greatervar
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	call clsave,get
	spushs
	spop $h
	call $h,to_r
	call $2,to_r
	cmpja
	end method
	method _check_if_lesseqvar
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	call clsave,get
	spushs
	spop $h
	call $h,to_r
	call $2,to_r
	cmpjle
	end method
	method _check_if_greatereqvar
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	call clsave,get
	spushs
	spop $h
	call $h,to_r
	call $2,to_r
	cmpjae
	end method
	method _goto_fi
	localstring $1
	localint $2
	pop $2
	pop $1
	localint $3
	push _if_pos
	pop $3
l3413:
	push 1
	cmp0
	je l3414
	push $1
	spushs
	push $2
	push 0
	spop $a
	call [$a],get
	spushs
	push "IF"
	cmpst
	jne l3416
	spop $a
	add $3,1
	pop $3
	jmp l3415
l3416:
	push "ELSE"
	cmpst
	jne l3417
	spop $a
	push $3
	push _if_pos
	cmpje
	cmp0
	je l3419
	push $2
	ret
l3419:
	jmp l3415
l3417:
	push "FI"
	cmpst
	jne l3420
	spop $a
	push $3
	push _if_pos
	cmpje
	cmp0
	je l3422
	sub _if_pos,1
	pop _if_pos
	push $2
	ret
	jmp l3421
l3422:
	sub $3,1
	pop $3
l3421:
	jmp l3415
l3420:
	spop $a
l3415:
	add $2,1
	pop $2
	jmp l3413
l3414:
	end method
	method _check_if2
	localstring $1
	pop $1
	push $1
	spushs
	push "|"
	cmpst
	jne l3424
	spop $a
	push 1
	jmp l3423
l3424:
	push "&"
	cmpst
	jne l3425
	spop $a
	push 2
	jmp l3423
l3425:
	spop $a
	push 0
l3423:
	end method
	method _check_if
	localint $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	push 1
	cmpst
	jne l3427
	spop $a
	push $2
	cmp0
	jne l3429
	push $3
	jmp l3430
l3428:
	push 0
	jmp l3430
l3429:
	push 1
l3430:
	jmp l3426
l3427:
	push 2
	cmpst
	jne l3431
	spop $a
	push $2
	cmp0
	je l3432
	push $3
	jmp l3434
l3432:
	push 0
	jmp l3434
l3433:
	push 1
l3434:
	jmp l3426
l3431:
	spop $a
	push $3
l3426:
	end method
	method behrewind
	push sactbeh
	push "null"
	cmpjne
	cmp0
	je l3436
	push sactbeh
	spushs
	spop $a
	call [$a],rewind
l3436:
	end method
	method behplaying
	push sactbeh
	push "null"
	cmpjne
	end method
	method behempty
	push sactbeh
	push "null"
	cmpje
	end method
	method behexist
	localstring $1
	pop $1
	push $1
	cthis getbeh
	call engine,varexist
	end method
	method getbeh
	localstring $1
	pop $1
	push _sbeh
	push $1
	pop $b
	popax
	add $a,$b
	end method
	method newbehname
	localstring $1
	push _sbeh
	push "_"
	pop $b
	popax
	add $a,$b
	push iidbeh
	pop $b
	popax
	add $a,$b
	pop $1
	add iidbeh,1
	pop iidbeh
	push $1
	end method
	method newbeh
	localstring $1
	cthis newbehname
	pop $1
	push $1
	spushs
	spop $e
	new classbehhero,[$e]
	push $1
	end method
	method _checkvol
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],dbchecknext
	push "-v"
	cmpje
	cmp0
	je l3438
	push 2
	popax
	add $3,$a
	pop $3
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	push $3
	push 1
	pop $b
	popax
	add $a,$b
	ret
	jmp l3437
l3438:
	push 100
	push $3
	push 1
	pop $b
	popax
	add $a,$b
	ret
l3437:
	end method
	method loadbeh
	localstring $1
	localint $2
	localint $3
	localint $4
	localstring $5
	localstring $6
	localint $7
	localint $8
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	localstring $9
	localstring $10
	localstring $11
	localstring $12
	localint $13
	push $5
	spushs
	spop $a
	call [$a],getblock
	pop $13
	localint $14
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $9
	add $4,1
	pop $4
	cthis newbeh
	pop $10
	localint $15
	localint $16
	push $9
	spushs
	push "IF"
	cmpst
	je l3441
	push "ELIF"
	cmpst
	je l3441
	jmp l3440
l3441:
	spop $a
	push $4
	push 1
	pop $b
	popax
	add $a,$b
	pop $15
l3442:
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	push ")"
	cmpjne
	cmp0
	je l3443
	add $4,1
	pop $4
	jmp l3442
l3443:
	push $10
	spushs
	push "setas"
	push $9
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	push $2
	push $15
	push $4
	spop $d
	spop $a
	call [$a],[$d]
	add $4,1
	pop $4
	jmp l3439
l3440:
	push "FI"
	cmpst
	je l3445
	push "ELSE"
	cmpst
	je l3445
	jmp l3444
l3445:
	spop $a
	push $10
	spushs
	push $9
	spop $a
	call [$a],setas
	jmp l3439
l3444:
	push "call:"
	cmpst
	jne l3446
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $9
	add $4,1
	pop $4
	push $10
	spushs
	push $9
	push $1
	push "script"
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setascaller
	jmp l3439
l3446:
	push "walk:"
	cmpst
	jne l3447
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $9
	add $4,1
	pop $4
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $11
	add $4,1
	pop $4
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $12
	add $4,1
	pop $4
	push $10
	spushs
	push _spathpref
	push $9
	pop $b
	popax
	add $a,$b
	push $11
	push $12
	spop $a
	call [$a],setaswalker
	jmp l3439
l3447:
	push "turn:"
	cmpst
	jne l3448
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $9
	add $4,1
	pop $4
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $11
	add $4,1
	pop $4
	push $10
	spushs
	push _spathpref
	push $9
	pop $b
	popax
	add $a,$b
	push $11
	spop $a
	call [$a],setasturn
	jmp l3439
l3448:
	push "setpos:"
	cmpst
	jne l3449
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $9
	add $4,1
	pop $4
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $11
	add $4,1
	pop $4
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $16
	push 0
	pop $15
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],dbchecknext
	pop $12
	push $12
	push "-ssc"
	cmpje
	cmp0
	je l3451
	push 1
	pop $15
	add $4,1
	pop $4
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],dbchecknext
	pop $12
l3451:
	push $12
	push "-dir"
	cmpje
	cmp0
	je l3453
	push 2
	popax
	add $4,$a
	pop $4
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $12
	jmp l3452
l3453:
	push "auto"
	pop $12
l3452:
	add $4,1
	pop $4
	push $10
	spushs
	push $9
	push $11
	push $16
	push $15
	push $12
	spop $a
	call [$a],setasposer
	jmp l3439
l3449:
	push "game:"
	cmpst
	jne l3454
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $9
	add $4,1
	pop $4
	push $9
	spushs
	push "-def"
	cmpst
	je l3457
	push "-adv"
	cmpst
	je l3457
	jmp l3456
l3457:
	spop $a
	push $10
	spushs
	push $9
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	push $1
	spushs
	push $2
	push $4
	push 1
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],get
	spop $a
	call [$a],setasnewgamer
	push 2
	popax
	add $4,$a
	pop $4
	jmp l3455
l3456:
	spop $a
	push $10
	spushs
	push "null"
	push "null"
	push $9
	spop $a
	call [$a],setasnewgamer
l3455:
	jmp l3439
l3454:
	push "ref:"
	cmpst
	jne l3458
	spop $a
	push "_"
	push iidbeh
	pop $b
	popax
	add $a,$b
	push $1
	push $2
	push $4
	cthis buildbeh
	pop $4
	cthis newbehname
	pop $9
	push $10
	spushs
	push _sbeh
	call $9,strsubbs
	push $1
	push "script"
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setascaller
	jmp l3439
l3458:
	push "anplay:"
	cmpst
	jne l3459
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $9
	add $4,1
	pop $4
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $11
	add $4,1
	pop $4
	push $10
	spushs
	push $9
	push $11
	spop $a
	call [$a],setasanplayer
	jmp l3439
l3459:
	push "anfin:"
	cmpst
	jne l3460
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $9
	add $4,1
	pop $4
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $15
	add $4,1
	pop $4
	push $10
	spushs
	push $9
	push $15
	spop $a
	call [$a],setasanfin
	jmp l3439
l3460:
	push "anfout:"
	cmpst
	jne l3461
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $9
	add $4,1
	pop $4
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $15
	add $4,1
	pop $4
	push $10
	spushs
	push $9
	push $15
	spop $a
	call [$a],setasanfout
	jmp l3439
l3461:
	push "anorder:"
	cmpst
	jne l3462
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $11
	add $4,1
	pop $4
	push $10
	spushs
	push $1
	push $2
	push $4
	push $11
	spop $a
	call [$a],setasanorder
	push $1
	push $2
	push $4
	push "null"
	cthis analizeaninstr
	pop $4
	jmp l3439
l3462:
	push "sndbg:"
	cmpst
	jne l3463
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $9
	push $1
	push $2
	push $4
	cthis _checkvol
	pop $4
	pop $15
	push $10
	spushs
	push SNDPATH
	push $9
	pop $b
	popax
	add $a,$b
	push $15
	spop $a
	call [$a],setassndbg
	jmp l3439
l3463:
	push "sndplay:"
	cmpst
	jne l3464
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $9
	push $1
	push $2
	push $4
	cthis _checkvol
	pop $4
	pop $15
	push $10
	spushs
	push SNDPATH
	push $9
	pop $b
	popax
	add $a,$b
	push $15
	spop $a
	call [$a],setassndplayer
	jmp l3439
l3464:
	push "fxplay:"
	cmpst
	jne l3465
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $9
	push $1
	push $2
	push $4
	cthis _checkvol
	pop $4
	pop $15
	push $10
	spushs
	push SFXPATH
	push $9
	pop $b
	popax
	add $a,$b
	push $15
	spop $a
	call [$a],setassndplayer
	jmp l3439
l3465:
	push "fxbg:"
	cmpst
	jne l3466
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $11
	push $1
	push $2
	push $4
	cthis _checkvol
	pop $4
	pop $15
	push $10
	spushs
	push SFXPATH
	push $11
	pop $b
	popax
	add $a,$b
	push $15
	spop $a
	call [$a],setassndbg
	jmp l3439
l3466:
	push "wait:"
	cmpst
	jne l3467
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $15
	add $4,1
	pop $4
	push $10
	spushs
	push $15
	spop $a
	call [$a],setaswaiter
	jmp l3439
l3467:
	push "read:"
	cmpst
	jne l3468
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $9
	add $4,1
	pop $4
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $15
	add $4,1
	pop $4
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $16
	add $4,1
	pop $4
	push "auto"
	pop $11
	push $1
	spushs
	push $2
	spop $a
	call [$a],getcolsno
	push $4
	cmpja
	cmp0
	je l3470
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $11
	push $11
	push "-dir"
	cmpje
	cmp0
	je l3472
	add $4,1
	pop $4
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $11
	add $4,1
	pop $4
l3472:
l3470:
	push $10
	spushs
	push $9
	push $15
	push $16
	push $11
	spop $a
	call [$a],setasreader
	jmp l3439
l3468:
	push "met:"
	cmpst
	jne l3473
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $9
	add $4,1
	pop $4
	call gameapi,getgamename
	pop $12
	localdef $17
	push "null"
	pop $17
	push "."
	call $9,contains
	cmp0
	je l3475
	push "."
	pop $17
l3475:
	push "::"
	call $9,contains
	cmp0
	je l3477
	push "::"
	pop $17
l3477:
	push $17
	push "null"
	cmpjne
	cmp0
	je l3479
	push $17
	call $9,strgetto
	pop $11
	push $17
	call $9,strgetfrom
	pop $9
	push $11
	push ""
	cmpje
	cmp0
	jne l3482
	push $11
	push "this"
	cmpje
	jmp l3483
l3481:
	push 0
	jmp l3483
l3482:
	push 1
l3483:
	cmp0
	je l3484
	push $12
	pop $11
l3484:
	jmp l3478
l3479:
	push $12
	pop $11
l3478:
	push $1
	spushs
	push $2
	push $4
	push 1
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],dbchecknext
	pop $12
	push $12
	push "("
	cmpje
	cmp0
	je l3486
	add $4,1
	pop $4
	push $4
	pop $15
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $12
	add $4,1
	pop $4
l3487:
	push $12
	push ")"
	cmpjne
	cmp0
	je l3488
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $12
	add $4,1
	pop $4
	jmp l3487
l3488:
	jmp l3485
l3486:
	push 1
	popax
	sub 0,$a
	pop $15
l3485:
	push $10
	spushs
	push $11
	push $9
	push $17
	push $1
	push $2
	push $15
	spop $a
	call [$a],setasmet
	jmp l3439
l3473:
	push "bsave:"
	cmpst
	jne l3489
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $9
	add $4,1
	pop $4
	push $10
	spushs
	push $9
	push "1"
	spop $a
	call [$a],setassaver
	jmp l3439
l3489:
	push "save:"
	cmpst
	jne l3490
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $9
	add $4,1
	pop $4
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $11
	add $4,1
	pop $4
	push $10
	spushs
	push $9
	push $11
	spop $a
	call [$a],setassaver
	jmp l3439
l3490:
	push "script:"
	cmpst
	jne l3491
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $9
	add $4,1
	pop $4
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $11
	add $4,1
	pop $4
	push $10
	spushs
	push $9
	push $11
	spop $a
	call [$a],setasscript
	jmp l3439
l3491:
	push "func:"
	cmpst
	jne l3492
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $11
	call clcbeh,size
	push 1
	pop $b
	popax
	sub $a,$b
	pop $16
l3493:
	push $16
	push 0
	cmpjae
	cmp0
	je l3494
	jmp l3496
l3495:
	sub $16,1
	pop $16
	jmp l3493
l3496:
	push $16
	call clcbeh,getid
	push "script"
	pop $b
	popax
	add $a,$b
	pop $9
	push $9
	spushs
	push $11
	spop $a
	call [$a],containsfun
	cmp0
	je l3498
	push 1
	popax
	sub 0,$a
	pop $16
l3498:
	jmp l3495
l3494:
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],dbchecknext
	push "("
	cmpje
	cmp0
	je l3500
	push $4
	push 2
	pop $b
	popax
	add $a,$b
	pop $16
l3501:
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	push ")"
	cmpjne
	cmp0
	je l3502
	add $4,1
	pop $4
	jmp l3501
l3502:
	jmp l3499
l3500:
	push 1
	popax
	sub 0,$a
	pop $16
l3499:
	add $4,1
	pop $4
	push $10
	spushs
	push $9
	push $11
	push $1
	push $2
	push $16
	spop $a
	call [$a],setasscript
	jmp l3439
l3492:
	push "use:"
	cmpst
	jne l3503
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $9
	add $4,1
	pop $4
	push $10
	spushs
	push $9
	spop $a
	call [$a],setasuse
	jmp l3439
l3503:
	push "topck:"
	cmpst
	jne l3504
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $11
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],dbchecknext
	push "-pck"
	cmpje
	cmp0
	je l3506
	push 2
	popax
	add $4,$a
	pop $4
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $12
	jmp l3505
l3506:
	push $11
	pop $12
l3505:
	add $4,1
	pop $4
	push $10
	spushs
	push $11
	push $12
	spop $a
	call [$a],setastopck
	jmp l3439
l3504:
	push "enter:"
	cmpst
	jne l3507
	spop $a
	push $10
	spushs
	spop $a
	call [$a],setasenter
	jmp l3439
l3507:
	push "close:"
	cmpst
	jne l3508
	spop $a
	push $10
	spushs
	spop $a
	call [$a],setasclose
	jmp l3439
l3508:
	push "music:"
	cmpst
	jne l3509
	spop $a
	push $4
	push 1
	pop $b
	popax
	add $a,$b
	pop $16
l3510:
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	push ")"
	cmpjne
	cmp0
	je l3511
	add $4,1
	pop $4
	jmp l3510
l3511:
	push $10
	spushs
	push $1
	push $2
	push $16
	push $4
	spop $a
	call [$a],setasmusic
	add $4,1
	pop $4
	jmp l3439
l3509:
	push "return"
	cmpst
	jne l3512
	spop $a
	push $10
	spushs
	spop $a
	call [$a],setasreturn
	jmp l3439
l3512:
	spop $a
	push $9
	push $10
	push $1
	push $2
	push $4
	cthis subloadbeh
	pop $16
	push $16
	push $4
	cmpjae
	cmp0
	je l3514
	push $16
	pop $4
	jmp l3513
l3514:
	push "_"
	call $9,strgetto
	pop $12
	push $12
	cthis getheroloader
	pop $11
	push $11
	push "null"
	cmpje
	cmp0
	je l3516
	push igmdebug
	cmp0
	je l3518
	push $10
	push ": "
	pop $b
	popax
	add $a,$b
	push $9
	pop $b
	popax
	add $a,$b
	push " loadbeh error: no hero linked to "
	pop $b
	popax
	add $a,$b
	push $12
	pop $b
	popax
	add $a,$b
	call engine,print
l3518:
	push $10
	push $3
	ret
	jmp l3515
l3516:
	localint $18
	localint $19
	push $11
	spushs
	spop $a
	call [$a],getstartstop
	pop $19
	pop $18
	localstring $20
	push "auto"
	pop $20
	localstring $21
	push "_stalk"
	call modadv,varget
	pop $21
	localint $22
	push 1
	pop $22
	push $4
	push $3
	cmpjl
	pop $14
l3519:
	push $14
	cmp0
	je l3520
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $12
	add $4,1
	pop $4
	push $12
	spushs
	push "-stt"
	cmpst
	jne l3522
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $18
	add $4,1
	pop $4
	jmp l3521
l3522:
	push "-stp"
	cmpst
	jne l3523
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $19
	add $4,1
	pop $4
	jmp l3521
l3523:
	push "-base"
	cmpst
	jne l3524
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $21
	add $4,1
	pop $4
	jmp l3521
l3524:
	push "-r"
	cmpst
	jne l3525
	spop $a
	push 1
	pop $22
	jmp l3521
l3525:
	push "-nr"
	cmpst
	jne l3526
	spop $a
	push 0
	pop $22
	jmp l3521
l3526:
	push "-dir"
	cmpst
	jne l3527
	spop $a
	push $1
	spushs
	push $2
	push $4
	spop $a
	call [$a],get
	pop $20
	add $4,1
	pop $4
	jmp l3521
l3527:
	spop $a
	push 0
	pop $14
	sub $4,1
	pop $4
l3521:
	push $14
	cmp0
	je l3529
	push $4
	push $3
	cmpjae
	jmp l3531
l3529:
	push 0
	jmp l3531
l3530:
	push 1
l3531:
	cmp0
	je l3532
	push 0
	pop $14
l3532:
	jmp l3519
l3520:
	push $10
	spushs
	push $11
	spushs
	push "sanhero"
	spop $a
	call [$a],varget
	push SNDPATH
	push $9
	pop $b
	popax
	add $a,$b
	push $21
	push $22
	push $18
	push $19
	push $20
	spop $a
	call [$a],setastalker
l3515:
l3513:
l3439:
	push $5
	spushs
	push $10
	spop $a
	call [$a],addtostarter
	push $7
	push 0
	cmpje
	cmp0
	je l3534
	push $6
	spushs
	push $10
	spop $a
	call [$a],setflags
	push $10
	spushs
	push $5
	push $13
	push $8
	spop $a
	call [$a],addflags
	jmp l3533
l3534:
	push $6
	spushs
	push "null"
	spop $a
	call [$a],setflags
	push $10
	spushs
	push $5
	push $13
	push 0
	spop $a
	call [$a],addflags
l3533:
	push $10
	push $4
	ret
	end method
	method subloadbeh
	localstring $1
	localstring $2
	localstring $3
	localint $4
	localint $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $5
	end method
	method buildbeh
	localstring $1
	localstring $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	localint $5
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	call dbmacros,findbyrow
	pop $5
	push $5
	push 0
	cmpjl
	cmp0
	je l3536
	push "no such macro: "
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	pop $b
	popax
	add $a,$b
	call engine,print
	push 1
	popax
	sub 0,$a
	ret
l3536:
l3537:
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	push "("
	cmpjne
	cmp0
	je l3538
	add $4,1
	pop $4
	jmp l3537
l3538:
	add $4,1
	pop $4
	localint $6
	push $2
	spushs
	spop $a
	call [$a],addrow
	push 1
	pop $b
	popax
	sub $a,$b
	pop $6
	localstring $7
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	pop $7
	add $4,1
	pop $4
	call _vecarg,free
l3539:
	push $7
	push ")"
	cmpjne
	cmp0
	je l3540
	push $7
	call _vecarg,add
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	pop $7
	add $4,1
	pop $4
	jmp l3539
l3540:
	localint $8
	push $5
	call dbmacros,getcolsno
	pop $8
	localint $9
	push $2
	spushs
	push $6
	push $1
	spop $a
	call [$a],add
	localstring $10
	localint $11
	push 1
	pop $11
l3541:
	push $11
	push $8
	cmpjl
	cmp0
	je l3542
	jmp l3544
l3543:
	add $11,1
	pop $11
	jmp l3541
l3544:
	push $5
	push $11
	call dbmacros,get
	pop $7
	push ""
	pop $10
l3545:
	push "$"
	call $7,contains
	cmp0
	je l3546
	push "$"
	call $7,strgetto
	popax
	add $10,$a
	pop $10
	push "$"
	call $7,strgetfrom
	pop $7
	push 0
	push 1
	call $7,getb
	push "["
	cmpje
	cmp0
	je l3548
	push "["
	call $7,strgetfrom
	pop $9
	push "]"
	call $7,strgetfrom
	pop $7
	jmp l3547
l3548:
	push $7
	pop $9
	push ""
	pop $7
l3547:
	push $9
	push 1
	pop $b
	popax
	sub $a,$b
	call _vecarg,get
	popax
	add $10,$a
	pop $10
	jmp l3545
l3546:
	push $7
	push ""
	cmpjne
	cmp0
	je l3550
	push $7
	popax
	add $10,$a
	pop $10
l3550:
	push $2
	spushs
	push $6
	push $10
	spop $a
	call [$a],add
	jmp l3543
l3542:
	push $4
	end method
	method loadbehaviours
	localstring $1
	pop $1
	localstring $2
	call clcbeh,get
	pop $2
	push $2
	spushs
	spop $e
	new db,[$e]
	push $2
	spushs
	push $1
	cthis getpath
	spop $a
	call [$a],loadbeh
	localstring $3
	push $2
	push "script"
	pop $b
	popax
	add $a,$b
	pop $3
	push $3
	spushs
	push $2
	spop $e
	new Script,[$e]
	localint $4
	localint $5
	localstring $6
	localstring $7
	localstring $8
	localstring $9
	localint $10
	localint $11
	localstring $12
	localint $13
	localint $14
	localint $15
	localint $16
	localstring $17
	localstring $18
	localint $19
	push 0
	pop $19
l3551:
	push $19
	push $2
	spushs
	spop $a
	call [$a],getrowsno
	cmpjl
	cmp0
	je l3552
	jmp l3554
l3553:
	add $19,1
	pop $19
	jmp l3551
l3554:
	push 0
	pop $5
	push $2
	spushs
	push $19
	push $5
	spop $a
	call [$a],get
	pop $6
	add $5,1
	pop $5
	push $6
	spushs
	push "macro:"
	cmpst
	jne l3556
	spop $a
	push $2
	push $19
	push 1
	call dbmacros,dbaddrowfrom
	jmp l3555
l3556:
	push "include:"
	cmpst
	jne l3557
	spop $a
	push $2
	spushs
	push $19
	push $5
	spop $a
	call [$a],get
	cthis loadbehaviours
	add $5,1
	pop $5
	jmp l3555
l3557:
	push "build:"
	cmpst
	jne l3558
	spop $a
	push $2
	spushs
	push $19
	push $5
	spop $a
	call [$a],get
	push $2
	push $19
	push $5
	push 1
	pop $b
	popax
	add $a,$b
	cthis buildbeh
	pop $5
	jmp l3555
l3558:
	push "func"
	cmpst
	jne l3559
	spop $a
l3560:
	push $2
	spushs
	push $19
	push 0
	spop $a
	call [$a],get
	push "end"
	cmpjne
	cmp0
	je l3561
	add $19,1
	pop $19
	jmp l3560
l3561:
	jmp l3555
l3559:
	push "IF"
	cmpst
	jne l3562
	spop $a
	add _if_pos,1
	pop _if_pos
	push $2
	push $19
	push $5
	push $2
	spushs
	push $19
	spop $a
	call [$a],getcolsno
	cthis _found_if
	pop $19
	jmp l3555
l3562:
	push "ELSE"
	cmpst
	jne l3563
	spop $a
	push $2
	push $19
	push 1
	pop $b
	popax
	add $a,$b
	cthis _goto_fi
	pop $19
	jmp l3555
l3563:
	push "FI"
	cmpst
	jne l3564
	spop $a
	sub _if_pos,1
	pop _if_pos
	push _if_pos
	push 1
	popax
	sub 0,$a
	cmpjl
	cmp0
	je l3566
	push "FI error! "
	cthis getname
	pop $b
	popax
	add $a,$b
	push "."
	pop $b
	popax
	add $a,$b
	cthis methodname
	pop $b
	popax
	add $a,$b
	spushs
	spop $h
	call $h,print
l3566:
	jmp l3555
l3564:
	spop $a
	push $2
	spushs
	push $19
	spop $a
	call [$a],getcolsno
	pop $4
	push $6
	cthis getbeh
	pop $6
	push $6
	spushs
	spop $e
	new classbehhero,[$e]
	push 0
	pop $10
	push 1
	pop $11
	push "null"
	pop $12
	push 0
	pop $13
	push 1
	pop $14
	push "null"
	pop $18
	push 1
	popax
	sub 0,$a
	pop $16
	push 0
	pop $15
l3567:
	push $11
	cmp0
	je l3568
	push $2
	spushs
	push $19
	push $5
	spop $a
	call [$a],get
	pop $7
	add $5,1
	pop $5
	push $7
	spushs
	push "-nr"
	cmpst
	jne l3570
	spop $a
	push 0
	pop $10
	jmp l3569
l3570:
	push "-once"
	cmpst
	jne l3571
	spop $a
	push $2
	spushs
	push $19
	push $5
	spop $a
	call [$a],get
	pop $12
	add $5,1
	pop $5
	jmp l3569
l3571:
	push "-par"
	cmpst
	jne l3572
	spop $a
	push 1
	pop $13
	jmp l3569
l3572:
	push "-r"
	cmpst
	jne l3573
	spop $a
	push 1
	pop $10
	jmp l3569
l3573:
	push "-nb"
	cmpst
	jne l3574
	spop $a
	push 0
	pop $14
	jmp l3569
l3574:
	push "-b"
	cmpst
	jne l3575
	spop $a
	push 1
	pop $14
	jmp l3569
l3575:
	push "-en"
	cmpst
	jne l3576
	spop $a
	push $2
	spushs
	push $19
	push $5
	spop $a
	call [$a],get
	pop $15
	add $5,1
	pop $5
	jmp l3569
l3576:
	push "-bif"
	cmpst
	jne l3577
	spop $a
	push 1
	pop $16
	push $2
	spushs
	push $19
	push $5
	spop $a
	call [$a],get
	pop $17
	add $5,1
	pop $5
	push 1
	pop $18
	jmp l3569
l3577:
	push "-bnif"
	cmpst
	jne l3578
	spop $a
	push 0
	pop $16
	push $2
	spushs
	push $19
	push $5
	spop $a
	call [$a],get
	pop $17
	add $5,1
	pop $5
	push 1
	pop $18
	jmp l3569
l3578:
	push "-if"
	cmpst
	jne l3579
	spop $a
	push 1
	pop $16
	push $2
	spushs
	push $19
	push $5
	spop $a
	call [$a],get
	pop $17
	add $5,1
	pop $5
	push $2
	spushs
	push $19
	push $5
	spop $a
	call [$a],get
	pop $18
	add $5,1
	pop $5
	jmp l3569
l3579:
	push "-nif"
	cmpst
	jne l3580
	spop $a
	push 0
	pop $16
	push $2
	spushs
	push $19
	push $5
	spop $a
	call [$a],get
	pop $17
	add $5,1
	pop $5
	push $2
	spushs
	push $19
	push $5
	spop $a
	call [$a],get
	pop $18
	add $5,1
	pop $5
	jmp l3569
l3580:
	spop $a
	push 0
	pop $11
	push $6
	spushs
	push $12
	push $10
	push $13
	push $14
	push $15
	push $16
	push $17
	push $18
	spop $a
	call [$a],setasstarter
	sub $5,1
	pop $5
l3581:
	push 0
	push 1
	call $7,getb
	push "-"
	cmpje
	cmp0
	je l3582
	push $7
	spushs
	push "-skip"
	cmpst
	jne l3584
	spop $a
	push $6
	spushs
	push 1
	spop $a
	call [$a],bskip=
	add $5,1
	pop $5
	jmp l3583
l3584:
	spop $a
	push $6
	push $2
	push $19
	push $5
	push $7
	cthis behstarteropt
	pop $5
l3583:
	push $2
	spushs
	push $19
	push $5
	spop $a
	call [$a],get
	pop $7
	jmp l3581
l3582:
	push $6
	pop $7
l3585:
	push $5
	push $4
	cmpjl
	cmp0
	je l3586
	push $2
	push $19
	push $4
	push $5
	push $6
	push $7
	push $10
	push $13
	cthis loadbeh
	pop $5
	pop $7
	jmp l3585
l3586:
l3569:
	jmp l3567
l3568:
l3555:
	jmp l3553
l3552:
	push $2
	spushs
	spop $a
	call [$a],readonly
	end method
	method behstarteropt
	localstring $1
	localstring $2
	localint $3
	localint $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $4
	push 1
	pop $b
	popax
	add $a,$b
	end method
	method analizeaninstr
	localstring $1
	localint $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	localint $5
	push 1
	pop $5
	push $3
	push $1
	spushs
	push $2
	spop $a
	call [$a],getcolsno
	cmpjae
	cmp0
	je l3588
	push 0
	pop $5
l3588:
	localint $6
	push 0
	pop $6
	push $4
	push "null"
	cmpjne
	cmp0
	je l3590
	push 1
	pop $6
	push $4
	cthis advanstand
l3590:
	localint $7
	localint $8
	localint $9
	localstring $10
	localstring $11
	localreal $12
	localreal $13
	localreal $14
l3591:
	push $5
	cmp0
	je l3592
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $11
	add $3,1
	pop $3
	push $11
	spushs
	push "-z"
	cmpst
	jne l3594
	spop $a
	push $6
	cmp0
	je l3596
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $10
	push $10
	clparent StringChecker,isdigit
	cmp0
	je l3598
	push $4
	spushs
	push $10
	spop $a
	call [$a],setz
	jmp l3597
l3598:
	push $4
	spushs
	push $10
	spushs
	spop $a
	call [$a],getz
	spop $a
	call [$a],setz
l3597:
l3596:
	add $3,1
	pop $3
	jmp l3593
l3594:
	push "-pos"
	cmpst
	jne l3599
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $10
	add $3,1
	pop $3
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $9
	add $3,1
	pop $3
	push $6
	cmp0
	je l3601
	push $10
	push "-id"
	cmpje
	cmp0
	je l3603
	push _spathpref
	push $4
	pop $b
	popax
	add $a,$b
	pop $10
	push $10
	spushs
	push $9
	spop $a
	call [$a],getbyname
	pop $7
	push $10
	spushs
	push $7
	spop $a
	call [$a],getxver
	push $10
	spushs
	spop $a
	call [$a],getposx
	pop $b
	popax
	sub $a,$b
	pop $8
	push $10
	spushs
	push $7
	spop $a
	call [$a],getyver
	push $10
	spushs
	spop $a
	call [$a],getposy
	pop $b
	popax
	sub $a,$b
	pop $9
	jmp l3602
l3603:
	push rgmscalex
	call $10,to_i
	pop $b
	popax
	mul $a,$b
	pop $8
	push rgmscaley
	push $9
	pop $b
	popax
	mul $a,$b
	pop $9
l3602:
	push $4
	spushs
	push $8
	push $9
	spop $a
	call [$a],setpos
l3601:
	jmp l3593
l3599:
	push "-move"
	cmpst
	jne l3604
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $8
	add $3,1
	pop $3
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $9
	add $3,1
	pop $3
	push $6
	cmp0
	je l3606
	push $4
	spushs
	push rgmscalex
	push $8
	pop $b
	popax
	mul $a,$b
	push rgmscaley
	push $9
	pop $b
	popax
	mul $a,$b
	spop $a
	call [$a],move
l3606:
	jmp l3593
l3604:
	push "-putgr"
	cmpst
	jne l3607
	spop $a
	push $6
	cmp0
	je l3609
	push $4
	spushs
	spop $a
	call [$a],anputgr
l3609:
	jmp l3593
l3607:
	push "-vis"
	cmpst
	jne l3610
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $7
	add $3,1
	pop $3
	push $6
	cmp0
	je l3612
	push $7
	push 0
	cmpje
	cmp0
	je l3614
	push $4
	spushs
	spop $a
	call [$a],hide
	jmp l3613
l3614:
	push $4
	spushs
	spop $a
	call [$a],show
l3613:
l3612:
	jmp l3593
l3610:
	push "-show"
	cmpst
	jne l3615
	spop $a
	push $6
	cmp0
	je l3617
	push $4
	spushs
	spop $a
	call [$a],show
l3617:
	jmp l3593
l3615:
	push "-hide"
	cmpst
	jne l3618
	spop $a
	push $6
	cmp0
	je l3620
	push $4
	spushs
	spop $a
	call [$a],hide
l3620:
	jmp l3593
l3618:
	push "-dir"
	cmpst
	jne l3621
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $10
	add $3,1
	pop $3
	push $6
	cmp0
	je l3623
	push $4
	spushs
	spop $a
	call [$a],actionname
	pop $11
	push $4
	spushs
	spop $a
	call [$a],framenr
	pop $7
	push $4
	spushs
	push 2
	call $11,strsube
	push $10
	pop $b
	popax
	add $a,$b
	push 0
	spop $a
	call [$a],setframe
l3623:
	jmp l3593
l3621:
	push "-smooth"
	cmpst
	jne l3624
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $7
	add $3,1
	pop $3
	push $6
	cmp0
	je l3626
	push $4
	spushs
	push $7
	spop $a
	call [$a],setsmooth
l3626:
	jmp l3593
l3624:
	push "-play"
	cmpst
	je l3628
	push "-smplay"
	cmpst
	je l3628
	jmp l3627
l3628:
	spop $a
	push $6
	cmp0
	je l3630
	push $11
	push "-play"
	cmpje
	cmp0
	je l3632
	push "play"
	jmp l3631
l3632:
	push "playsmooth"
l3631:
	pop $10
	push $4
	spushs
	push $10
	spushs
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	spop $d
	spop $a
	call [$a],[$d]
l3630:
	add $3,1
	pop $3
	jmp l3593
l3627:
	push "-nplay"
	cmpst
	je l3634
	push "-nsmplay"
	cmpst
	je l3634
	jmp l3633
l3634:
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $7
	add $3,1
	pop $3
	push $6
	cmp0
	je l3636
	push $11
	push "-nplay"
	cmpje
	cmp0
	je l3638
	push "play"
	jmp l3637
l3638:
	push "playsmooth"
l3637:
	pop $10
	push $4
	spushs
	spop $a
	call [$a],gettype
	push "anima"
	cmpje
	cmp0
	je l3640
	push $4
	spushs
	push $10
	spushs
	push $7
	spop $d
	spop $a
	call [$a],[$d]
	jmp l3639
l3640:
	push $4
	spushs
	push $7
	spop $a
	call [$a],nplay
l3639:
l3636:
	jmp l3593
l3633:
	push "-nplayif"
	cmpst
	jne l3641
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $7
	add $3,1
	pop $3
	push $6
	cmp0
	je l3643
	push $4
	spushs
	push $7
	spop $a
	call [$a],anplayif
l3643:
	jmp l3593
l3641:
	push "-conplay"
	cmpst
	jne l3644
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $7
	add $3,1
	pop $3
	push $6
	cmp0
	je l3646
	push $4
	spushs
	spop $a
	call [$a],framenr
	pop $8
	push $4
	spushs
	push $7
	spop $a
	call [$a],play
	push $4
	spushs
	push 1
	popax
	sub 0,$a
	push $8
	spop $a
	call [$a],setframe
l3646:
	jmp l3593
l3644:
	push "-lplay"
	cmpst
	jne l3647
	spop $a
	push $6
	cmp0
	je l3649
	push $4
	spushs
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	spop $a
	call [$a],anloopsplay
l3649:
	add $3,1
	pop $3
	jmp l3593
l3647:
	push "-bgr"
	cmpst
	jne l3650
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $11
	add $3,1
	pop $3
	push $6
	cmp0
	je l3652
	push $11
	spushs
	push $4
	spop $a
	call [$a],add
	push _spathpref
	push $4
	pop $b
	popax
	add $a,$b
	call engine,varexist
	cmp0
	je l3654
	push $11
	spushs
	push _spathpref
	push $4
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],add
l3654:
l3652:
	jmp l3593
l3650:
	push "-sc"
	cmpst
	jne l3655
	spop $a
	push $6
	cmp0
	je l3657
	push _spathpref
	push $4
	pop $b
	popax
	add $a,$b
	pop $11
	push $11
	call engine,varexist
	cmp0
	je l3659
	push $11
	spushs
	spop $a
	call [$a],scalean
l3659:
l3657:
	jmp l3593
l3655:
	push "-ssc"
	cmpst
	jne l3660
	spop $a
	push $6
	cmp0
	je l3662
	call clcamera,setscene
l3662:
	jmp l3593
l3660:
	push "-actor"
	cmpst
	jne l3663
	spop $a
	push $6
	cmp0
	je l3665
	push $4
	call clcamera,setactor
l3665:
	jmp l3593
l3663:
	push "-mhero"
	cmpst
	jne l3666
	spop $a
	push $6
	cmp0
	je l3668
	push $4
	cthis setmainhero
l3668:
	jmp l3593
l3666:
	push "-puty"
	cmpst
	jne l3669
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $10
	add $3,1
	pop $3
	push $6
	cmp0
	je l3671
	push $10
	push "resy"
	cmpje
	cmp0
	je l3673
	push $4
	spushs
	push iResY
	push 1
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],anputy
	jmp l3672
l3673:
	push $4
	spushs
	push $10
	spop $a
	call [$a],anputy
l3672:
l3671:
	jmp l3593
l3669:
	push "-stopf"
	cmpst
	jne l3674
	spop $a
	push $6
	cmp0
	je l3676
	push $4
	spushs
	push 0
	spop $a
	call [$a],stop
l3676:
	jmp l3593
l3674:
	push "-stoph"
	cmpst
	jne l3677
	spop $a
	push $6
	cmp0
	je l3679
	push $4
	spushs
	push 0
	spop $a
	call [$a],stop
	push $4
	spushs
	spop $a
	call [$a],hide
l3679:
	jmp l3593
l3677:
	push "-setaction"
	cmpst
	jne l3680
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $10
	add $3,1
	pop $3
	push $6
	cmp0
	je l3682
	push $10
	clparent StringChecker,isdigit
	cmp0
	je l3684
	push $4
	spushs
	call $10,to_i
	push 0
	spop $a
	call [$a],setframe
	jmp l3683
l3684:
	push $4
	spushs
	push $10
	push 0
	spop $a
	call [$a],setframe
l3683:
	push $4
	spushs
	push 0
	spop $a
	call [$a],stop
l3682:
	jmp l3593
l3680:
	push "-setframe"
	cmpst
	jne l3685
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $10
	add $3,1
	pop $3
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $11
	add $3,1
	pop $3
	push $6
	cmp0
	je l3687
	push $11
	push "-act"
	cmpje
	cmp0
	je l3689
	cthis framenr
	jmp l3688
l3689:
	push $11
l3688:
	pop $7
	push $10
	clparent StringChecker,isdigit
	cmp0
	je l3691
	push $4
	spushs
	call $10,to_i
	push $7
	spop $a
	call [$a],setframe
	jmp l3690
l3691:
	push $4
	spushs
	push $10
	push $7
	spop $a
	call [$a],setframe
l3690:
	push $4
	spushs
	push 0
	spop $a
	call [$a],stop
l3687:
	jmp l3593
l3685:
	push "-randfr"
	cmpst
	jne l3692
	spop $a
	push $6
	cmp0
	je l3694
	push $4
	spushs
	spop $a
	call [$a],ansetrandfr
l3694:
	jmp l3593
l3692:
	push "-stand"
	cmpst
	jne l3695
	spop $a
	push $6
	cmp0
	je l3697
	push $4
	spushs
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	spop $a
	call [$a],setstandbase
l3697:
	add $3,1
	pop $3
	jmp l3593
l3695:
	push "-delay"
	cmpst
	jne l3698
	spop $a
	push $6
	cmp0
	je l3700
	push $4
	spushs
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	spop $a
	call [$a],setdelay
l3700:
	add $3,1
	pop $3
	jmp l3593
l3698:
	push "-opshow"
	cmpst
	jne l3701
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $10
	add $3,1
	pop $3
	push $6
	cmp0
	je l3703
	push $4
	spushs
	push $10
	push "null"
	spop $a
	call [$a],anfadein
l3703:
	jmp l3593
l3701:
	push "-ophide"
	cmpst
	jne l3704
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $10
	add $3,1
	pop $3
	push $6
	cmp0
	je l3706
	push $4
	spushs
	push $10
	push "null"
	spop $a
	call [$a],anfadeout
l3706:
	jmp l3593
l3704:
	push "-step"
	cmpst
	jne l3707
	spop $a
	push $6
	cmp0
	je l3709
	push _spathpref
	push $4
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	spop $a
	call [$a],setanstep
l3709:
	add $3,1
	pop $3
	jmp l3593
l3707:
	push "-sb1"
	cmpst
	jne l3710
	spop $a
	push $6
	cmp0
	je l3712
	push $4
	spushs
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	spop $a
	call [$a],setbutbase1
l3712:
	add $3,1
	pop $3
	jmp l3593
l3710:
	push "-sb2"
	cmpst
	jne l3713
	spop $a
	push $6
	cmp0
	je l3715
	push $4
	spushs
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	spop $a
	call [$a],setbutbase2
l3715:
	add $3,1
	pop $3
	jmp l3593
l3713:
	push "-lineardodge"
	cmpst
	jne l3716
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $10
	add $3,1
	pop $3
	push $6
	cmp0
	je l3718
	push "_ft"
	push $4
	pop $b
	popax
	add $a,$b
	pop $11
	push $11
	cthis hasvar
	neg
	cmp0
	je l3720
	push $11
	spushs
	spop $e
	new filter,[$e]
	push $11
	spushs
	push $4
	spop $a
	call [$a],link
l3720:
	push $11
	spushs
	push $10
	spop $a
	call [$a],lineardodge
l3718:
	jmp l3593
l3716:
	push "-drawmode"
	cmpst
	jne l3721
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $10
	add $3,1
	pop $3
	push $6
	cmp0
	je l3723
	push $10
	push "lineardodge"
	cmpje
	cmp0
	je l3725
	push $4
	spushs
	push 1
	spop $a
	call [$a],setdrawmode
l3725:
l3723:
	jmp l3593
l3721:
	push "-anmover"
	cmpst
	jne l3726
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $10
	add $3,1
	pop $3
	push $10
	push "-loop"
	cmpje
	cmp0
	je l3728
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $12
	add $3,1
	pop $3
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $13
	add $3,1
	pop $3
	push 1
	pop $9
	jmp l3727
l3728:
	push $10
	pop $12
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $13
	add $3,1
	pop $3
	push 0
	pop $9
l3727:
	push $6
	cmp0
	je l3730
	push $4
	push $12
	push $13
	clparent SetAnMover,setas
	push $9
	cmp0
	je l3732
	push $4
	spushs
	spop $a
	call [$a],sam_copy
l3732:
	push $4
	spushs
	spop $a
	call [$a],sam_addtimer
	push $4
	spushs
	spop $a
	call [$a],sam_playtimer
l3730:
	jmp l3593
l3726:
	push "-hideonstart"
	cmpst
	jne l3733
	spop $a
	push $6
	cmp0
	je l3735
	push $4
	spushs
	spop $a
	call [$a],anhideonsetframe
l3735:
	jmp l3593
l3733:
	push "-transparency"
	cmpst
	jne l3736
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $10
	add $3,1
	pop $3
	push $6
	cmp0
	je l3738
	push $4
	spushs
	push $10
	spop $a
	call [$a],transparency
l3738:
	jmp l3593
l3736:
	push "-roto"
	cmpst
	jne l3739
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $13
	add $3,1
	pop $3
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $12
	add $3,1
	pop $3
	localreal $15
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $15
	add $3,1
	pop $3
	localint $16
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $16
	add $3,1
	pop $3
	push $6
	cmp0
	je l3741
	push $4
	spushs
	spop $a
	call [$a],getpx
	pop $7
	push $4
	spushs
	spop $a
	call [$a],getpy
	pop $8
	push $4
	spushs
	push 1
	push 0
	spop $a
	call [$a],setframe
	push $4
	spushs
	push $7
	push $8
	spop $a
	call [$a],ansetbpos
	push $4
	spushs
	push "idopframe"
	push 0
	spop $a
	call [$a],var2
	push $4
	spushs
	push "setopacityframe"
	push "classadvcontroller10"
	spop $a
	call [$a],addmethod
	push $4
	spushs
	spop $a
	call [$a],internal_filter
	spushs
	spop $a
	call [$a],getfullname
	pop $11
	push $11
	spushs
	push 2
	spop $a
	call [$a],setpivottype
	push $11
	spushs
	push 1
	spop $a
	call [$a],setsmooth
	push $4
	spushs
	spop $a
	call [$a],setopacityframe
	push "_timroto"
	push $4
	pop $b
	popax
	add $a,$b
	pop $10
	push $10
	push "classadvcontroller11"
	cthis cycle=
	push $10
	spushs
	push $16
	spop $a
	call [$a],setcycle
	push $10
	spushs
	push A
	push "san"
	push $4
	push "ftsan"
	push $11
	push "mkat"
	push $12
	push "pkat"
	push $13
	push "speed"
	push $15
	spop $a
	call [$a],vars2
	push $10
	spushs
	spop $a
	call [$a],play
l3741:
	jmp l3593
l3739:
	push "-buildroto"
	cmpst
	je l3757
	push "-buildrotorle"
	cmpst
	je l3757
	jmp l3756
l3757:
	spop $a
	localint $17
	push $11
	push "-buildrotorle"
	cmpje
	cmp0
	je l3759
	push 1
	jmp l3758
l3759:
	push 0
l3758:
	pop $17
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $13
	add $3,1
	pop $3
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $12
	add $3,1
	pop $3
	localreal $15
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $15
	add $3,1
	pop $3
	localint $16
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $16
	add $3,1
	pop $3
	push $6
	cmp0
	je l3761
	push $4
	spushs
	spop $a
	call [$a],getpx
	pop $7
	push $4
	spushs
	spop $a
	call [$a],getpy
	pop $8
	push $4
	spushs
	push 1
	push 0
	spop $a
	call [$a],setframe
	push $4
	spushs
	push $7
	push $8
	spop $a
	call [$a],ansetbpos
	localreal $18
	push 0.0
	pop $18
	call $15,abs
	pop $15
	push 0
	pop $7
	localstring $19
	push "null"
	pop $19
	localreal $14
	push $12
	pop $14
l3762:
	push $14
	push $13
	cmpjle
	cmp0
	je l3763
	jmp l3765
l3764:
	push $18
	popax
	add $14,$a
	pop $14
	jmp l3762
l3765:
	localreal $20
	push $14
	push $12
	pop $b
	popax
	sub $a,$b
	push $13
	push $12
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	div $a,$b
	psax
	spushs
	spop $h
	call $h,abs
	pop $20
	push 0.1
	call $20,_rin1
	cmp0
	je l3767
	push 0.4
	push $15
	pop $b
	popax
	mul $a,$b
	pop $18
	jmp l3766
l3767:
	push 0.2
	call $20,_rin1
	cmp0
	je l3769
	push 0.8
	push $15
	pop $b
	popax
	mul $a,$b
	pop $18
	jmp l3768
l3769:
	push $15
	pop $18
l3768:
l3766:
	push "_imgroto"
	push $7
	pop $b
	popax
	add $a,$b
	push $4
	pop $b
	popax
	add $a,$b
	pop $11
	push $11
	spushs
	spop $e
	new img,[$e]
	push $11
	spushs
	push $4
	push $14
	push 1.0
	push 1.0
	spop $a
	call [$a],buildrotozoom
l3770:
	push $19
	push "null"
	cmpjne
	cmp0
	je l3771
	push $11
	spushs
	spop $a
	call [$a],getw
	push $19
	spushs
	spop $a
	call [$a],getw
	cmpje
	cmp0
	je l3771
	push $11
	spushs
	spop $a
	call [$a],geth
	push $19
	spushs
	spop $a
	call [$a],geth
	cmpje
	cmp0
	je l3771
	push $11
	spushs
	spop $a
	call [$a],getpx
	push $19
	spushs
	spop $a
	call [$a],getpx
	cmpje
	cmp0
	je l3771
	push $11
	spushs
	spop $a
	call [$a],getpy
	push $19
	spushs
	spop $a
	call [$a],getpy
	cmpje
	jmp l3773
l3771:
	push 0
	jmp l3773
l3772:
	push 1
l3773:
	cmp0
	je l3774
	push 0.2
	pop $20
	push $20
	push $18
	pop $b
	popax
	mul $a,$b
	popax
	add $14,$a
	pop $14
	push $20
	push 1.0
	pop $b
	popax
	add $a,$b
	popax
	mul $18,$a
	pop $18
	push $11
	spushs
	push $4
	push $14
	push 1.0
	push 1.0
	spop $a
	call [$a],buildrotozoom
	jmp l3770
l3774:
	push $11
	spushs
	push $4
	spushs
	spop $a
	call [$a],getz
	spop $a
	call [$a],setz
	push $11
	spushs
	spop $a
	call [$a],hide
	push $17
	cmp0
	je l3776
	push $11
	spushs
	spop $a
	call [$a],rle
l3776:
	push $11
	pop $19
	add $7,1
	pop $7
	jmp l3764
l3763:
	push "_timroto"
	push $4
	pop $b
	popax
	add $a,$b
	pop $10
	push $10
	push "classadvcontroller12"
	cthis cycle=
	push $10
	spushs
	push $16
	spop $a
	call [$a],setcycle
	push $10
	spushs
	push A
	push "san"
	push $4
	push "ileimgs"
	push $7
	push "slastimg"
	push $11
	push "idimg"
	push 0
	push "dir"
	push 1
	spop $a
	call [$a],vars2
	push $4
	spushs
	spop $a
	call [$a],hide
	push "_imgroto0"
	push $4
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],show
	push $10
	spushs
	spop $a
	call [$a],play
l3761:
	jmp l3593
l3756:
	push "-opacityframe"
	cmpst
	jne l3781
	spop $a
	push $6
	cmp0
	je l3783
	push $4
	spushs
	spop $a
	call [$a],anopacityframe
l3783:
	jmp l3593
l3781:
	push "-rle"
	cmpst
	jne l3784
	spop $a
	push $6
	cmp0
	je l3786
	push $4
	spushs
	spop $a
	call [$a],rle
l3786:
	jmp l3593
l3784:
	push "-bitmask"
	cmpst
	jne l3787
	spop $a
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],get
	pop $7
	add $3,1
	pop $3
	push $6
	cmp0
	je l3789
	push $4
	spushs
	push $7
	spop $a
	call [$a],bitmask
l3789:
	jmp l3593
l3787:
	spop $a
	push $3
	pop $7
	push $4
	push $1
	push $2
	push $3
	push $11
	cthis subanalizeaninstr
	pop $3
	push $7
	push $3
	push 1
	pop $b
	popax
	add $a,$b
	cmpje
	cmp0
	je l3791
	push 0
	pop $5
l3791:
l3593:
	push $5
	cmp0
	je l3793
	push $3
	push $1
	spushs
	push $2
	spop $a
	call [$a],getcolsno
	cmpjae
	jmp l3795
l3793:
	push 0
	jmp l3795
l3794:
	push 1
l3795:
	cmp0
	je l3796
	push 0
	pop $5
l3796:
	jmp l3591
l3592:
	push $3
	ret
	end method
	method classadvcontroller10
	push 0
	cthis nofframes
	push 1
	cmpja
	cmp0
	je l3743
	localdef $1
	push 0
	push idopframe
	cthis nameofframe
	pop $1
	push 0
	push 2
	call $1,getb
	push "op"
	cmpje
	cmp0
	je l3745
	cthis internal_filter
	spushs
	push 2
	call $1,strsubb
	spushs
	spop $h
	call $h,to_r
	push 100.0
	pop $b
	popax
	div $a,$b
	psax
	push 255.0
	pop $b
	popax
	mul $a,$b
	push 0.5
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setopacity
l3745:
	push idopframe
	push 1
	pop $b
	popax
	add $a,$b
	push 0
	cthis nofframes
	pop $b
	popax
	div $a,$b
	push $d
	pop idopframe
l3743:
	end method
	method classadvcontroller11
	localreal $1
	push pkat
	push mkat
	pop $b
	popax
	sub $a,$b
	pop $1
	localreal $2
	push 1.0
	pop $2
	localreal $3
	push ftsan
	spushs
	spop $a
	call [$a],getangle
	pop $3
	push speed
	push 0.0
	cmpjl
	cmp0
	je l3747
	push $3
	push mkat
	cmpjle
	cmp0
	je l3749
	push speed
	popax
	sub 0,$a
	pop speed
l3749:
	push $3
	push mkat
	pop $b
	popax
	sub $a,$b
	push $1
	pop $b
	popax
	div $a,$b
	psax
	pop $3
	jmp l3746
l3747:
	push $3
	push pkat
	cmpjae
	cmp0
	je l3751
	push speed
	popax
	sub 0,$a
	pop speed
l3751:
	push pkat
	push $3
	pop $b
	popax
	sub $a,$b
	push $1
	pop $b
	popax
	div $a,$b
	psax
	pop $3
l3746:
	push 0.1
	call $3,_rin1
	cmp0
	je l3753
	push 0.4
	pop $2
	jmp l3752
l3753:
	push 0.2
	call $3,_rin1
	cmp0
	je l3755
	push 0.8
	pop $2
l3755:
l3752:
	push ftsan
	spushs
	push $2
	push speed
	pop $b
	popax
	mul $a,$b
	spop $a
	call [$a],rotate
	push san
	spushs
	spop $a
	call [$a],setopacityframe
	cthis play
	end method
	method classadvcontroller12
	push slastimg
	spushs
	spop $a
	call [$a],hide
	push "_imgroto"
	push idimg
	pop $b
	popax
	add $a,$b
	push san
	pop $b
	popax
	add $a,$b
	pop slastimg
	push slastimg
	spushs
	spop $a
	call [$a],show
	push idimg
	push dir
	pop $b
	popax
	add $a,$b
	pop idimg
	push idimg
	push 0
	cmpjl
	cmp0
	je l3778
	push 0
	pop idimg
	push 1
	pop dir
	jmp l3777
l3778:
	push idimg
	push ileimgs
	cmpjae
	cmp0
	je l3780
	push ileimgs
	push 1
	pop $b
	popax
	sub $a,$b
	pop idimg
	push 1
	popax
	sub 0,$a
	pop dir
l3780:
l3777:
	cthis play
	end method
	method _rin1
	localreal $1
	pop $1
	cthis get
	push $1
	cmpjl
	cmp0
	jne l3798
	cthis get
	push 1.0
	push $1
	pop $b
	popax
	sub $a,$b
	cmpja
	jmp l3799
l3797:
	push 0
	jmp l3799
l3798:
	push 1
l3799:
	end method
	method subanalizeaninstr
	localstring $1
	localstring $2
	localint $3
	localint $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $4
	push 1
	pop $b
	popax
	sub $a,$b
	end method
	method cadvherofinish
	end method
	method butmoveoff
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],moveoff
	push $1
	spushs
	spop $a
	call [$a],getbutname
	push "_MOVEOFF"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	cthis behplaying
	neg
	cmp0
	je l3801
	push "beh_"
	push $1
	spushs
	spop $a
	call [$a],getbutname
	pop $b
	popax
	add $a,$b
	push "_MOVEOFF"
	pop $b
	popax
	add $a,$b
	cthis playbehif
	neg
	pop _b_rewind
l3801:
	end method
	method butmoveon
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],moveon
	push $1
	spushs
	spop $a
	call [$a],getbutname
	push "_MOVEON"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	cthis behplaying
	neg
	cmp0
	je l3803
	push "beh_"
	push $1
	spushs
	spop $a
	call [$a],getbutname
	pop $b
	popax
	add $a,$b
	push "_MOVEON"
	pop $b
	popax
	add $a,$b
	cthis playbehif
	neg
	pop _b_rewind
l3803:
	end method
	method advfocusedbut
	push _slastms
	end method
	method advbutrefresh
	localint $1
	localint $2
	call mouse,getpos
	pop $2
	pop $1
	localint $3
	push $1
	push $2
	push 1
	push 1
	call grbuts,butisin
	pop $3
	push $3
	cmp0
	je l3805
	localstring $4
	push $3
	push 1
	pop $b
	popax
	sub $a,$b
	call grbuts,get
	pop $4
	push $4
	push _slastms
	cmpjne
	cmp0
	je l3807
	push _slastms
	push "null"
	cmpjne
	cmp0
	je l3809
	push _slastms
	cthis butmoveoff
l3809:
	push $4
	pop _slastms
	push $4
	cthis butmoveon
l3807:
	jmp l3804
l3805:
	push _slastms
	push "null"
	cmpjne
	cmp0
	je l3811
	push _slastms
	cthis butmoveoff
	push "null"
	pop _slastms
l3811:
l3804:
	push "onmousemove"
	push $1
	push $2
	call grmsmove,eval2
	call moddbg,msmove
	end method
	method advmsmove
	cthis advgetlock
	neg
	cmp0
	je l3813
	cthis advbutrefresh
l3813:
	end method
	method butclickon
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],clickon
	cthis behplaying
	neg
	cmp0
	je l3815
	push "beh_"
	push $1
	spushs
	spop $a
	call [$a],getbutname
	pop $b
	popax
	add $a,$b
	push "_LCLICK"
	pop $b
	popax
	add $a,$b
	cthis playbehif
	neg
	pop _b_rewind
l3815:
	end method
	method butrelease
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],butlrel
	end method
	method advmsclick
	call _tim_dbclk,isplaying
	cmp0
	je l3817
	push 2
	call clwalkq,mulspeed
	ret
	jmp l3816
l3817:
	call _tim_dbclk,play
l3816:
	push 1
	pop _b_rewind
	push bmslock
	neg
	cmp0
	je l3819
	localint $1
	localint $2
	call mouse,getpos
	pop $2
	pop $1
	push "preparetosort"
	push $1
	push $2
	call grbuts,eval2
	call grbuts,sortimgs
	localint $3
	push $1
	push $2
	push 1
	push 1
	call grbuts,butisin
	pop $3
	push "endsort"
	call grbuts,eval
	push $3
	cmp0
	je l3821
	push $3
	push 1
	pop $b
	popax
	sub $a,$b
	call grbuts,get
	cthis butclickon
	jmp l3820
l3821:
	localstring $4
	push _spocketpref
	cthis getmainhero
	pop $b
	popax
	add $a,$b
	pop $4
	push $4
	call engine,varexist
	cmp0
	je l3823
	push $4
	spushs
	spop $a
	call [$a],itemhide
l3823:
	push $1
	push $2
	call clwalkq,goto
l3820:
	push "onmouselclick"
	push $1
	push $2
	call grmslclick,eval2
l3819:
	push _b_rewind
	cmp0
	je l3825
	cthis behrewind
l3825:
	call moddbg,mslclick
	end method
	method advmsrclick
	push bmslock
	neg
	cmp0
	je l3827
	push "onmouserclick"
	call mouse,getpos
	call grmsrclick,eval2
l3827:
	end method
	method advmslrel
	push bmslock
	neg
	cmp0
	je l3829
	localint $1
	localint $2
	call mouse,getpos
	pop $2
	pop $1
	localint $3
	push $1
	push $2
	push 1
	push 1
	call grbuts,butisin
	pop $3
	push $3
	cmp0
	je l3831
	push $3
	push 1
	pop $b
	popax
	sub $a,$b
	call grbuts,get
	cthis butrelease
l3831:
	push "onmouselrel"
	push $1
	push $2
	call grmslrel,eval2
l3829:
	call moddbg,mslrel
	end method
	method mousemove
	cthis advstdstate
	cmp0
	je l3833
	cthis advmsmove
l3833:
	cthis mouse_MOVE
	end method
	method mouselclick
	cthis advstdstate
	cmp0
	je l3835
	cthis advmsclick
l3835:
	cthis mouse_LCLICK
	end method
	method mouselrel
	cthis advstdstate
	cmp0
	je l3837
	cthis advmslrel
l3837:
	cthis mouse_LREL
	end method
	method mouserclick
	cthis advstdstate
	cmp0
	je l3839
	cthis advmsrclick
l3839:
	cthis mouse_RCLICK
	end method
	method keydown
	call moddbg,dbkeydown
	cthis keyboard_KEYDOWN
	end method
	method exit
	call modadvglob,onexit
	push igmsubtitle
	cmp0
	je l3841
	call subtitle,reset
l3841:
	end method
	method onmusicfin
	call _music,play
	end method
	method sndplayobfin
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	cthis getsndpath
	push $1
	pop $b
	popax
	add $a,$b
	push ".wav"
	pop $b
	popax
	add $a,$b
	call __sndplay,load
	push igmsubtitle
	cmp0
	je l3843
	push "__sndplay"
	cthis getsndpath
	push $1
	pop $b
	popax
	add $a,$b
	push ".wav"
	pop $b
	popax
	add $a,$b
	call subtitle,register
l3843:
	push $2
	call __sndplay,sob=
	push $3
	call __sndplay,sfun=
	push "__sndplay"
	cthis cbsplay
	end method
	method sndplayfin
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	push "null"
	push $2
	cthis sndplayobfin
	end method
	method sndplay
	localstring $1
	pop $1
	push $1
	push "null"
	push "null"
	cthis sndplayobfin
	end method
	method advloadsnd
	localstring $1
	pop $1
	push "file_loaded"
	cthis hasvar
	neg
	cmp0
	je l3845
	push "file_loaded"
	push 1
	cthis var2
l3845:
	push $1
	call engine,fileexist
	cmp0
	je l3847
	push $1
	cthis load
	jmp l3846
l3847:
	push 0
	pop file_loaded
l3846:
	push igmsubtitle
	cmp0
	je l3849
	cthis getfullname
	push $1
	call subtitle,register
l3849:
	end method
	end class

	module moddbg
	parent classlocker
	method init
	clparent classlocker,init
	new string,sstate
	push "init"
	pop sstate
	new int,ilastx
	new int,ilasty
	new text,txtpos
	push 5000
	call txtpos,setz
	push 0
	push 0
	call txtpos,setpos
	push 0
	push 0
	push 64
	push 16
	push 0
	push 0
	push 0
	push 192
	call txtpos,setbkg
	new text,txtmsg
	push 5000
	call txtmsg,setz
	push 120
	push 10
	call txtmsg,setpos
	push 0
	push 0
	push 300
	push 16
	push 0
	push 0
	push 0
	push 192
	call txtmsg,setbkg
	call txtmsg,hide
	new timer,timmsg
	push 4000
	call timmsg,setdelay
	push "onfinish"
	push "moddbg0"
	call timmsg,addmethod
	new text,txtpod
	push 5000
	call txtpod,setz
	push 0
	push 0
	push 128
	push 16
	push 0
	push 0
	push 0
	push 192
	call txtpod,setbkg
	new img,impod
	new string,slastimpod
	push "null"
	pop slastimpod
	cthis disable
	end method
	method moddbg0
	call txtmsg,hide
	end method
	method enable
	cthis unlock
	call txtpos,show
	call txtpod,show
	end method
	method disable
	cthis lock
	call txtpos,hide
	call txtpod,hide
	end method
	method updatetxtpos
	localint $1
	localint $2
	pop $2
	pop $1
	push "clcamera"
	call engine,varexist
	cmp0
	je l3851
	push ""
	push $1
	call clcamera,getposx
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	add $a,$b
	push ","
	pop $b
	popax
	add $a,$b
	push $2
	call clcamera,getposy
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	add $a,$b
	call txtpos,set
	jmp l3850
l3851:
	push ""
	push $1
	pop $b
	popax
	add $a,$b
	push ","
	pop $b
	popax
	add $a,$b
	push $2
	pop $b
	popax
	add $a,$b
	call txtpos,set
l3850:
	push $1
	call txtpos,getw
	pop $b
	popax
	sub $a,$b
	call advmouse,lodx
	pop $b
	popax
	sub $a,$b
	push $2
	call txtpos,geth
	pop $b
	popax
	sub $a,$b
	call advmouse,lody
	pop $b
	popax
	sub $a,$b
	call txtpos,setpos
	push $1
	call txtpod,getw
	pop $b
	popax
	sub $a,$b
	call advmouse,lodx
	pop $b
	popax
	sub $a,$b
	push $2
	push 2
	call txtpod,geth
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	sub $a,$b
	call advmouse,lody
	pop $b
	popax
	sub $a,$b
	call txtpod,setpos
	localstring $3
	push $1
	push $2
	push 1
	push 1
	push 2000
	popax
	sub 0,$a
	push 2000
	call engine,getimg
	pop $3
	push $3
	call txtpod,set
	push $3
	push "null"
	cmpje
	cmp0
	jne l3854
	push $3
	push "imgbkg"
	cmpje
	jmp l3855
l3853:
	push 0
	jmp l3855
l3854:
	push 1
l3855:
	cmp0
	je l3856
	call impod,hide
	jmp l3852
l3856:
	push $3
	call engine,varexist
	cmp0
	je l3858
	push $3
	push slastimpod
	cmpjne
	cmp0
	jne l3861
	push $3
	push slastimpod
	cmpje
	cmp0
	je l3862
	call impod,isvisible
	neg
	jmp l3864
l3862:
	push 0
	jmp l3864
l3863:
	push 1
l3864:
	cmp0
	jne l3861
	push $3
	spushs
	spop $a
	call [$a],getw
	call impod,getw
	cmpjne
	cmp0
	jne l3861
	push $3
	spushs
	spop $a
	call [$a],geth
	call impod,geth
	cmpjne
	jmp l3865
l3860:
	push 0
	jmp l3865
l3861:
	push 1
l3865:
	cmp0
	je l3866
	push $3
	spushs
	spop $a
	call [$a],getw
	push $3
	spushs
	spop $a
	call [$a],geth
	push 255
	push 255
	push 0
	push 64
	call impod,create
	call impod,show
	push 2010
	call impod,setz
	push $3
	pop slastimpod
l3866:
	push $3
	spushs
	spop $a
	call [$a],getpx
	push $3
	spushs
	spop $a
	call [$a],getpy
	call impod,setpos
l3858:
l3852:
	call txtpos,getey
	push iResY
	pop $b
	popax
	sub $a,$b
	pop $2
	push $2
	push 0
	cmpja
	cmp0
	je l3868
	push 0
	push $2
	popax
	sub 0,$a
	call txtpos,move
	push 0
	push $2
	popax
	sub 0,$a
	call txtpod,move
l3868:
	call txtpod,getex
	push iResX
	pop $b
	popax
	sub $a,$b
	pop $1
	push $1
	push 0
	cmpja
	cmp0
	je l3870
	push $1
	popax
	sub 0,$a
	push 0
	call txtpos,move
	push $1
	popax
	sub 0,$a
	push 0
	call txtpod,move
l3870:
	call txtpod,getpx
	popax
	sub 0,$a
	pop $1
	push $1
	push 0
	cmpja
	cmp0
	je l3872
	push $1
	push 0
	call txtpos,move
	push $1
	push 0
	call txtpod,move
l3872:
	end method
	method msminit
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	cthis updatetxtpos
	end method
	method msmmove
	localint $1
	localint $2
	pop $2
	pop $1
	push "clcamera"
	call engine,varexist
	cmp0
	je l3874
	push $1
	push ilastx
	pop $b
	popax
	sub $a,$b
	push $2
	push ilasty
	pop $b
	popax
	sub $a,$b
	call clcamera,moveplans
l3874:
	push $1
	push $2
	cthis updatetxtpos
	end method
	method msmove
	cthis getlock
	cmp0
	je l3876
	ret
l3876:
	localint $1
	call mouse,getpx
	pop $1
	localint $2
	call mouse,getpy
	pop $2
	push "msm"
	push sstate
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	push $2
	spop $d
	cthis [$d]
	push $1
	pop ilastx
	push $2
	pop ilasty
	end method
	method mslclick
	cthis getlock
	cmp0
	je l3878
	ret
l3878:
	push "space"
	call keyboard,iskeydown
	cmp0
	je l3880
	push "move"
	pop sstate
l3880:
	end method
	method mslrel
	cthis getlock
	cmp0
	je l3882
	ret
l3882:
	push "init"
	pop sstate
	end method
	method msrclick
	localint $1
	call mouse,getpx
	pop $1
	localint $2
	call mouse,getpy
	pop $2
	localint $3
	push $1
	push $2
	push 1
	push 1
	call grbuts,isin
	pop $3
	push $3
	push 0
	cmpjne
	cmp0
	je l3884
	localstring $4
	push $3
	push 1
	pop $b
	popax
	sub $a,$b
	call grbuts,get
	pop $4
	call $4,print
l3884:
	end method
	method msg
	localstring $1
	pop $1
	call txtmsg,show
	push $1
	call txtmsg,set
	call timmsg,play
	end method
	method dbkeydown
	push igmdebug
	neg
	cmp0
	je l3886
	ret
l3886:
	push "lctrl"
	call keyboard,iskeydown
	cmp0
	je l3888
	push "l"
	call keyboard,iskey
	cmp0
	je l3890
	localdef $1
	push "cache"
	pop $1
	push "1"
	call keyboard,iskeydown
	cmp0
	je l3892
	push "1"
	popax
	add $1,$a
	pop $1
	jmp l3891
l3892:
	push "2"
	call keyboard,iskeydown
	cmp0
	je l3894
	push "2"
	popax
	add $1,$a
	pop $1
	jmp l3893
l3894:
	push "3"
	call keyboard,iskeydown
	cmp0
	je l3896
	push "3"
	popax
	add $1,$a
	pop $1
	jmp l3895
l3896:
	push "4"
	call keyboard,iskeydown
	cmp0
	je l3898
	push "4"
	popax
	add $1,$a
	pop $1
	jmp l3897
l3898:
	push "5"
	call keyboard,iskeydown
	cmp0
	je l3900
	push "5"
	popax
	add $1,$a
	pop $1
	jmp l3899
l3900:
	push "6"
	call keyboard,iskeydown
	cmp0
	je l3902
	push "6"
	popax
	add $1,$a
	pop $1
	jmp l3901
l3902:
	push "7"
	call keyboard,iskeydown
	cmp0
	je l3904
	push "7"
	popax
	add $1,$a
	pop $1
	jmp l3903
l3904:
	push "8"
	call keyboard,iskeydown
	cmp0
	je l3906
	push "8"
	popax
	add $1,$a
	pop $1
	jmp l3905
l3906:
	push "9"
	call keyboard,iskeydown
	cmp0
	je l3908
	push "9"
	popax
	add $1,$a
	pop $1
l3908:
l3905:
l3903:
l3901:
l3899:
l3897:
l3895:
l3893:
l3891:
	push $1
	cthis _load_game
	push "game loaded from "
	push $1
	pop $b
	popax
	add $a,$b
	cthis msg
	jmp l3889
l3890:
	push "s"
	call keyboard,iskey
	cmp0
	je l3910
	localdef $1
	push "cache"
	pop $1
	cthis can_save
	cmp0
	je l3912
	push "1"
	call keyboard,iskeydown
	cmp0
	je l3914
	push "1"
	popax
	add $1,$a
	pop $1
	jmp l3913
l3914:
	push "2"
	call keyboard,iskeydown
	cmp0
	je l3916
	push "2"
	popax
	add $1,$a
	pop $1
	jmp l3915
l3916:
	push "3"
	call keyboard,iskeydown
	cmp0
	je l3918
	push "3"
	popax
	add $1,$a
	pop $1
	jmp l3917
l3918:
	push "4"
	call keyboard,iskeydown
	cmp0
	je l3920
	push "4"
	popax
	add $1,$a
	pop $1
	jmp l3919
l3920:
	push "5"
	call keyboard,iskeydown
	cmp0
	je l3922
	push "5"
	popax
	add $1,$a
	pop $1
	jmp l3921
l3922:
	push "6"
	call keyboard,iskeydown
	cmp0
	je l3924
	push "6"
	popax
	add $1,$a
	pop $1
	jmp l3923
l3924:
	push "7"
	call keyboard,iskeydown
	cmp0
	je l3926
	push "7"
	popax
	add $1,$a
	pop $1
	jmp l3925
l3926:
	push "8"
	call keyboard,iskeydown
	cmp0
	je l3928
	push "8"
	popax
	add $1,$a
	pop $1
	jmp l3927
l3928:
	push "9"
	call keyboard,iskeydown
	cmp0
	je l3930
	push "9"
	popax
	add $1,$a
	pop $1
l3930:
l3927:
l3925:
l3923:
l3921:
l3919:
l3917:
l3915:
l3913:
	push $1
	cthis _save_game
	push "game saved to "
	push $1
	pop $b
	popax
	add $a,$b
	cthis msg
	jmp l3911
l3912:
	push "could not save game to "
	push $1
	pop $b
	popax
	add $a,$b
	push " , sgmstate="
	pop $b
	popax
	add $a,$b
	push sgmstate
	pop $b
	popax
	add $a,$b
	cthis msg
l3911:
	jmp l3909
l3910:
	push "b"
	call keyboard,iskey
	cmp0
	je l3932
	call gameapi,getgamename
	spushs
	push "saves/cache.bmp"
	push 1
	spop $a
	call [$a],cgetscreenshoot
	push "screenshoot in saves/cache.bmp"
	cthis msg
l3932:
l3909:
l3889:
l3888:
	push "d"
	call keyboard,iskey
	cmp0
	je l3934
	cthis getlock
	cmp0
	je l3936
	cthis enable
	push "debug mode on: ^c-b: screenshoot, ^c-s: save, ^c-l: load, d: debug on/off"
	cthis msg
	jmp l3935
l3936:
	cthis disable
	push "debug mode off"
	cthis msg
l3935:
l3934:
	end method
	end module

	game Tclassmenu
	method init
	new db,_dbl
	new gmobjvec,gr1
	push "bkg"
	call gr1,add
	end method
	method tload
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	cthis setgraphpath
	push $3
	push "null"
	cmpjne
	cmp0
	je l3938
	cthis getgraphpath
	push $3
	pop $b
	popax
	add $a,$b
	call _dbl,loadscript
	localint $4
	push 0
	pop $4
l3939:
	push $4
	call _dbl,getrowsno
	cmpjl
	cmp0
	je l3940
	jmp l3942
l3941:
	add $4,1
	pop $4
	jmp l3939
l3942:
	push "snd"
	push $4
	push 0
	call _dbl,get
	pop $b
	popax
	add $a,$b
	push $4
	push 1
	call _dbl,get
	push ".wav"
	pop $b
	popax
	add $a,$b
	cthis newsnd
	jmp l3941
l3940:
l3938:
	new classbutton,_clb
	cthis getgraphpath
	push $2
	pop $b
	popax
	add $a,$b
	push 10
	push "imglobcurs"
	push "gr1"
	call _clb,build2
	push "_gmbutclick"
	call _clb,clickfunc
	push "_gmbutmove"
	call _clb,movonfunc
	push "sndintro"
	call engine,varexist
	cmp0
	je l3944
	push "sndintro"
	cthis cbplay
l3944:
	end method
	method mouselclick
	push 1
	cthis cactsndstop
	end method
	method _gmbutmove
	localstring $1
	pop $1
	call sndakskermovon,play
	push "sndintro"
	call engine,varexist
	cmp0
	je l3946
	call sndintro,isplaying
	jmp l3948
l3946:
	push 0
	jmp l3948
l3947:
	push 1
l3948:
	cmp0
	je l3949
	ret
l3949:
	push "snd"
	push $1
	pop $b
	popax
	add $a,$b
	call engine,varexist
	cmp0
	je l3951
	push "snd"
	push $1
	pop $b
	popax
	add $a,$b
	cthis crselfplay
l3951:
	end method
	method _gmbutclick
	localstring $1
	pop $1
	push $1
	push "_BUTCLICK"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	end game

	class TMenu
	method init
	end method
	method tinit
	localstring $1
	pop $1
	push $1
	new Buttons,but1
	end method
	method mousel_click
	push 1
	cthis cactsndstop
	end method
	method but1_moveon
	localstring $1
	call but1,sobject
	pop $1
	call sndakskermovon,play
	push "sndintro"
	call engine,varexist
	cmp0
	je l3953
	call sndintro,isplaying
	jmp l3955
l3953:
	push 0
	jmp l3955
l3954:
	push 1
l3955:
	neg
	cmp0
	je l3956
	push "snd"
	push $1
	pop $b
	popax
	add $a,$b
	call engine,varexist
	cmp0
	je l3958
	push "snd"
	push $1
	pop $b
	popax
	add $a,$b
	cthis cbselfplay
l3958:
l3956:
	push $1
	push "_MOVEON"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method but1_moveoff
	call but1,sobject
	push "_MOVEOFF"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method but1_lclick
	call but1,sobject
	push "_BUTCLICK"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	end class

	class TPainter
	method init
	end method
	method tinit
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	localstring $5
	localstring $6
	localdef $7
	localstring $8
	pop $8
	pop $7
	pop $6
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l3960
	push $1
	clparent GameController,init
l3960:
	cthis unlock
	push $2
	push "null"
	cmpjne
	cmp0
	je l3962
	push $2
	cthis setgraphpath
l3962:
	push $3
	push "null"
	cmpjne
	cmp0
	je l3964
	push "anbkg"
	push $3
	push 0
	cthis newanima
l3964:
	push "anbrush1"
	push $4
	push 3000
	cthis newanima
	push "anbrush1"
	push "anbrush2"
	cthis copyanima
	push 0
	push 1
	call anbrush2,setframe
	call anbrush1,getz
	push 1
	pop $b
	popax
	sub $a,$b
	call anbrush2,setz
	push "anbrush1"
	clparent anima_pack,resizemethods
	push "anbrush2"
	clparent anima_pack,resizemethods
	localint $9
	localint $10
	push $7
	spushs
	push "ru"
	cmpst
	jne l3966
	spop $a
	call anbrush2,getex
	pop $9
	call anbrush2,getpy
	pop $10
	jmp l3965
l3966:
	push "rd"
	cmpst
	jne l3967
	spop $a
	call anbrush2,getex
	pop $9
	call anbrush2,getey
	pop $10
	jmp l3965
l3967:
	push "ld"
	cmpst
	jne l3968
	spop $a
	call anbrush2,getpx
	pop $9
	call anbrush2,getey
	pop $10
	jmp l3965
l3968:
	spop $a
	call anbrush2,getpx
	pop $9
	call anbrush2,getpy
	pop $10
l3965:
	push $9
	push $10
	call anbrush1,saverelpos
	push $9
	push $10
	call anbrush2,saverelpos
	call mouse,hide
	push "anfg"
	push $5
	push 100
	cthis newanima
	push "foreground"
	push 0
	call anfg,setframe
	new gmimgvec,grdraw
	push "anfg"
	push "andraw"
	push "draw"
	call anfg,actionnr
	push "grdraw"
	cthis newanframesgr
	popax
	push 10
	call grdraw,setz
	new gmimgvec,grpaleta
	push "grpaleta"
	push $6
	popax
	pop $b
	psax
	call [$b],operator<
	push 20
	call grpaleta,setz
	new int,_ibrx
	call anbrush2,getpx
	pop _ibrx
	new int,_ibry
	call anbrush2,getpy
	pop _ibry
l3969:
	push _ibrx
	push _ibry
	push 0
	push 1
	call anbrush2,isin
	neg
	cmp0
	je l3970
	add _ibrx,1
	pop _ibrx
	push _ibrx
	call anbrush2,getex
	cmpje
	cmp0
	je l3972
	call anbrush2,getpx
	pop _ibrx
	add _ibry,1
	pop _ibry
l3972:
	jmp l3969
l3970:
	call anbrush2,getpx
	popax
	sub _ibrx,$a
	pop _ibrx
	call anbrush2,getpy
	popax
	sub _ibry,$a
	pop _ibry
	clparent TPainter,tp_mouse_move
	push $8
	push "null"
	cmpjne
	cmp0
	je l3974
	new string,savefile
	push $8
	pop savefile
	new db,dbkolory
	localdef $11
	push $8
	pop $11
	push $11
	cthis saveexist
	cmp0
	je l3976
	push $11
	call dbkolory,vecload
	push "TPainter0"
	call grdraw,each
	jmp l3975
l3976:
	push "TPainter1"
	call grdraw,each
	cthis tp_savekols
l3975:
l3974:
	end method
	method TPainter0
	localdef $1
	pop $1
	push $1
	push 0
	call dbkolory,get
	push $1
	push 1
	call dbkolory,get
	push $1
	push 2
	call dbkolory,get
	push 255
	push 0
	cthis paint
	end method
	method TPainter1
	localdef $1
	pop $1
	cthis white
	push 255
	push 0
	cthis paint
	push "255 255 255"
	push " "
	call dbkolory,dbaddstringrow
	end method
	method game_exit
	call mouse,show
	clparent GameController,game_exit
	end method
	method tp_exit
	call mouse,show
	end method
	method tp_mouse_move
	call anbrush1,mssetrelpos
	call anbrush2,mssetrelpos
	end method
	method tp_mouse_lclick
	cthis getlock
	neg
	cmp0
	je l3978
	localint $1
	localint $2
	call mouse,getpos
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 1
	call grdraw,isin
	cmp0
	je l3980
	call grdraw,getsfound
	spushs
	call anbrush2,getpx
	push _ibrx
	pop $b
	popax
	add $a,$b
	call anbrush2,getpy
	push _ibry
	pop $b
	popax
	add $a,$b
	call anbrush2,getrgba
	push 0
	spop $a
	call [$a],paint
	cthis onpaint
	jmp l3979
l3980:
	push $1
	push $2
	push 0
	push 1
	call grpaleta,isin
	cmp0
	je l3982
	localdef $3
	localdef $4
	localdef $5
	localdef $6
	call grpaleta,getsfound
	spushs
	push $1
	push $2
	spop $a
	call [$a],getrgba
	pop $6
	pop $5
	pop $4
	pop $3
	push 255
	pop $6
	push $3
	push $4
	push $5
	push $6
	push 0
	call anbrush2,paint
	cthis onsetbrush
l3982:
l3979:
l3978:
	end method
	method tp_savekols
	push GAME
	spushs
	push "dbkolory"
	spop $a
	call [$a],hasvar
	neg
	cmp0
	je l3984
	ret
l3984:
	push "TPainter2"
	call grdraw,each
	push savefile
	call dbkolory,vecsave
	end method
	method TPainter2
	localdef $1
	pop $1
	localint $2
	localint $3
	localint $4
	localint $5
	localint $6
	cthis getex
	pop $6
	localint $7
	cthis getey
	pop $7
	localint $8
	cthis getpx
	pop $8
	localint $9
	cthis getpy
	pop $9
l3985:
	push $8
	push $6
	cmpjne
	cmp0
	je l3986
	push $9
	push $7
	cmpjne
	jmp l3988
l3986:
	push 0
	jmp l3988
l3987:
	push 1
l3988:
	cmp0
	je l3989
	push $8
	push $9
	push 0
	push 1
	cthis isin
	cmp0
	je l3991
	push $8
	pop $2
	push $9
	pop $3
	push $6
	pop $8
	jmp l3990
l3991:
	add $8,1
	pop $8
l3990:
	jmp l3985
l3989:
	push $2
	push $3
	cthis getrgba
	popax
	pop $4
	pop $3
	pop $2
	push $1
	push 0
	push $2
	call dbkolory,set
	push $1
	push 1
	push $3
	call dbkolory,set
	push $1
	push 2
	push $4
	call dbkolory,set
	end method
	method tp_default_erase
	cthis white
	push 255
	cthis tp_erase
	end method
	method tp_erase
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	localint $5
	push 0
	pop $5
l3992:
	push $5
	call grdraw,size
	cmpjl
	cmp0
	je l3993
	jmp l3995
l3994:
	add $5,1
	pop $5
	jmp l3992
l3995:
	push $5
	call grdraw,get
	spushs
	push $1
	push $2
	push $3
	push $4
	push 0
	spop $a
	call [$a],paint
	push $5
	push 0
	push 255
	call dbkolory,set
	push $5
	push 1
	push 255
	call dbkolory,set
	push $5
	push 2
	push 255
	call dbkolory,set
	jmp l3994
l3993:
	cthis tp_savekols
	end method
	end class

	class TPainterCon
	parent TPainter
	parent GameController
	method init
	end method
	end class

	new int,iMemoTryb
	push 1
	pop iMemoTryb
	new int,iMemoW
	new int,iMemoH
	new int,iMemoAI
	push 0
	pop iMemoAI
	class TMemo
	method init
	end method
	method tinit
	localstring $1
	localstring $2
	localstring $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push 0
	push 3
	call $1,gete
	push "pyz"
	cmpje
	cmp0
	je l3997
	push "anbkg"
	push $1
	push 0
	cthis newanima
	jmp l3996
l3997:
	push "anbkg"
	push $1
	push 0
	cthis newimg
l3996:
	push "antaf"
	push $2
	push 20
	cthis newanima
	push "annak"
	push $3
	push 20
	cthis newanima
	new int,ipredkosc
	push 25
	pop ipredkosc
	new gmimgvec,grtaf
	new gmimgvec,grnak
	new vector,veci
	call veci,TMemo0
	localstring $5
	localint $6
	localint $7
	localint $8
	localint $9
	push 0
	pop $6
	localint $10
	push 0
	pop $10
l3998:
	push $10
	push iMemoW
	cmpjl
	cmp0
	je l3999
	jmp l4001
l4000:
	add $10,1
	pop $10
	jmp l3998
l4001:
	push 0
	pop $9
l4002:
	push $9
	push iMemoH
	cmpjl
	cmp0
	je l4003
	jmp l4005
l4004:
	add $9,1
	pop $9
	jmp l4002
l4005:
	push "antaf"
	push $6
	pop $b
	popax
	add $a,$b
	spushs
	push $6
	spop $e
	new anima,[$e]
	call [$e],TMemo1
	push "annak"
	push $6
	pop $b
	popax
	add $a,$b
	spushs
	push $6
	spop $e
	new anima,[$e]
	call [$e],TMemo2
	add $6,1
	pop $6
	jmp l4004
l4003:
	jmp l4000
l3999:
	call antaf,hide
	call annak,hide
	call grtaf,hash
	push 0
	pop $6
	call antaf,getw
	push $4
	pop $b
	popax
	add $a,$b
	pop $7
	call antaf,geth
	push $4
	pop $b
	popax
	add $a,$b
	pop $8
	push 0
	pop $10
l4006:
	push $10
	push iMemoW
	cmpjl
	cmp0
	je l4007
	jmp l4009
l4008:
	add $10,1
	pop $10
	jmp l4006
l4009:
	push 0
	pop $9
l4010:
	push $9
	push iMemoH
	cmpjl
	cmp0
	je l4011
	jmp l4013
l4012:
	add $9,1
	pop $9
	jmp l4010
l4013:
	push $6
	call grtaf,get
	pop $5
	push $5
	spushs
	push $7
	push $10
	pop $b
	popax
	mul $a,$b
	push $8
	push $9
	pop $b
	popax
	mul $a,$b
	spop $a
	call [$a],ansetbpos
	push $5
	spushs
	push $7
	push $10
	pop $b
	popax
	mul $a,$b
	push $8
	push $9
	pop $b
	popax
	mul $a,$b
	spop $a
	call [$a],ansetbpos
	push $5
	spushs
	push A
	push "col"
	push $10
	push "row"
	push $9
	spop $a
	call [$a],vars2
	push $5
	spushs
	push 10
	push 2
	push $6
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	push 1
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setz
	push $6
	call grnak,get
	spushs
	push 10
	push 2
	push $6
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setz
	add $6,1
	pop $6
	jmp l4012
l4011:
	jmp l4008
l4007:
	push "link"
	call grtaf,eval
	push "link"
	call grnak,eval
	push iResX
	call grtaf,getw
	pop $b
	popax
	sub $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $7
	push iResY
	call grtaf,geth
	pop $b
	popax
	sub $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $8
	push $7
	push $8
	call grtaf,move
	push $7
	push $8
	call grnak,move
	new int,iplayer
	push 1
	pop iplayer
	new int,icompplayer
	push 0
	pop icompplayer
	new classfadeinout,clfio
	new classfadeinout,clfio2
	new int,imemostate
	push 0
	pop imemostate
	new string,staf1
	new string,staf2
	new string,snak1
	new string,snak2
	new int,ileai
	push 1
	push 5
	push iMemoW
	push iMemoH
	pop $b
	popax
	mul $a,$b
	push 0.2
	pop $b
	popax
	mul $a,$b
	push 10
	cthis between
	push iMemoAI
	pop $b
	popax
	add $a,$b
	push 20
	cthis between
	pop ileai
	new string,sset1
	new string,sset2
	new vector,vecai
	call vecai,TMemo3
	new int,iaistate
	push 0
	pop iaistate
	push "timwait"
	push 500
	push 1
	cthis newtimer
	call timwait,mresize
	push "timpoka"
	push 500
	push 1
	push "endset22"
	cthis cnewtimerfin
	end method
	method TMemo0
	push 0
	call antaf,nofframes
	cthis vecnewint
	cthis hash
	end method
	method TMemo1
	localint $1
	pop $1
	push "antaf"
	cthis copy
	push 0
	push $1
	push 2
	pop $b
	popax
	div $a,$b
	psax
	call veci,get
	cthis setframe
	cthis anaddfilter
	cthis unlink
	cthis getname
	call grtaf,add
	end method
	method TMemo2
	localint $1
	pop $1
	push "annak"
	cthis copy
	cthis anaddfilter
	cthis unlink
	cthis getname
	call grnak,add
	end method
	method TMemo3
	cthis mresize
	push "string"
	cthis type
	end method
	method tm_start
	push 1
	pop imemostate
	push iMemoTryb
	push 1
	cmpje
	cmp0
	je l4015
	push 2
	pop icompplayer
l4015:
	end method
	method aigo
	push 11
	pop imemostate
	push sset1
	cthis tclicks
	end method
	method aigo2
	push sset2
	cthis tclicks
	end method
	method aifind1
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	push "null"
	cmpje
	cmp0
	je l4017
	push 1
	popax
	sub 0,$a
	ret
l4017:
	localint $4
	push $1
	spushs
	spop $a
	call [$a],framenr
	pop $4
	localstring $5
l4018:
	push $2
	push $3
	cmpjl
	cmp0
	je l4019
	jmp l4021
l4020:
	add $2,1
	pop $2
	jmp l4018
l4021:
	push $2
	cthis get
	pop $5
	push $5
	push "null"
	cmpjne
	cmp0
	je l4023
	push $5
	push $1
	cmpjne
	cmp0
	je l4023
	push $4
	push $5
	spushs
	spop $a
	call [$a],framenr
	cmpje
	cmp0
	je l4023
	push $2
	cthis tstats
	jmp l4025
l4023:
	push 0
	jmp l4025
l4024:
	push 1
l4025:
	cmp0
	je l4026
	push $2
	ret
l4026:
	jmp l4020
l4019:
	push 1
	popax
	sub 0,$a
	end method
	method tstats
	localint $1
	pop $1
	push 100
	push $1
	push 10
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	sub $a,$b
	cthis stats
	end method
	method startai
	localstring $1
	pop $1
	push iplayer
	push icompplayer
	cmpje
	cmp0
	je l4028
	localint $2
	call vecai,size
	push ileai
	cthis min
	pop $2
	push $1
	push "aigo"
	cmpje
	cmp0
	je l4030
	push 11
	pop imemostate
	localint $3
	localint $4
	localint $5
	push 1
	popax
	sub 0,$a
	pop $5
	push 0
	pop $3
l4031:
	push $3
	push $2
	cmpjl
	cmp0
	je l4032
	jmp l4034
l4033:
	add $3,1
	pop $3
	jmp l4031
l4034:
	push $3
	call vecai,get
	push $3
	push 1
	pop $b
	popax
	add $a,$b
	push $2
	call vecai,aifind1
	pop $5
	push $5
	push 0
	cmpjae
	cmp0
	je l4036
	push $3
	cthis tstats
	jmp l4038
l4036:
	push 0
	jmp l4038
l4037:
	push 1
l4038:
	cmp0
	je l4039
	push $3
	pop $4
	push $2
	pop $3
	jmp l4035
l4039:
	push 1
	popax
	sub 0,$a
	pop $5
l4035:
	jmp l4033
l4032:
	push $5
	push 0
	cmpjae
	cmp0
	je l4041
	push $4
	call vecai,get
	pop sset1
	push $5
	call vecai,get
	pop sset2
	jmp l4040
l4041:
	call grtaf,rand
	pop sset1
	push "null"
	pop sset2
l4040:
	jmp l4029
l4030:
	push sset2
	push "null"
	cmpje
	cmp0
	je l4043
	localint $6
	push sset1
	push 0
	push $2
	call vecai,aifind1
	pop $6
	push $6
	push 0
	cmpjae
	cmp0
	je l4045
	push $6
	cthis tstats
	jmp l4047
l4045:
	push 0
	jmp l4047
l4046:
	push 1
l4047:
	cmp0
	je l4048
	push $6
	call vecai,get
	pop sset2
	jmp l4044
l4048:
	push sset1
	call grtaf,randdiff
	pop sset2
l4044:
l4043:
l4029:
	push "timwait"
	push $1
	popax
	pop $b
	psax
	call [$b],operator<
	call timwait,play
l4028:
	end method
	method endset3
	push 1
	pop imemostate
	push iMemoTryb
	push 0
	cmpja
	cmp0
	je l4050
	cthis tnextplayer
	push "aigo"
	cthis startai
l4050:
	end method
	method endset2
	call timpoka,play
	end method
	method endset22
	push 3
	pop imemostate
	push snak2
	spushs
	spop $a
	call [$a],hide
	push staf1
	spushs
	spop $a
	call [$a],framenr
	push staf2
	spushs
	spop $a
	call [$a],framenr
	cmpje
	cmp0
	je l4052
	push "grnak"
	push snak1
	popax
	pop $b
	psax
	call [$b],operator-
	push snak2
	popax
	pop $b
	psax
	call [$b],operator-
	popax
	push "grtaf"
	push staf1
	popax
	pop $b
	psax
	call [$b],operator-
	push staf2
	popax
	pop $b
	psax
	call [$b],operator-
	popax
	push staf1
	call vecai,find
	push "null"
	call vecai,set
	push staf2
	call vecai,find
	push "null"
	call vecai,set
	call grtaf,empty
	cmp0
	je l4054
	push 5
	pop imemostate
	push 1
	push ipredkosc
	popax
	sub 0,$a
	push staf1
	push "null"
	call clfio,setopacity
	push 1
	push ipredkosc
	popax
	sub 0,$a
	push staf2
	push "null"
	call clfio2,setopacity
	cthis tfinish
	jmp l4053
l4054:
	push 1
	push ipredkosc
	popax
	sub 0,$a
	push staf1
	push "TMemo4"
	call clfio,setopacity
	push 1
	push ipredkosc
	popax
	sub 0,$a
	push staf2
	push "null"
	call clfio2,setopacity
	cthis tpoint
l4053:
	jmp l4051
l4052:
	push snak1
	spushs
	spop $a
	call [$a],show
	push snak2
	spushs
	spop $a
	call [$a],show
	push 1
	push ipredkosc
	push snak1
	push "endset3"
	call clfio,setopacity
	push 1
	push ipredkosc
	push snak2
	push "null"
	call clfio2,setopacity
	cthis terror
l4051:
	end method
	method TMemo4
	push staf1
	spushs
	spop $a
	call [$a],hide
	push staf2
	spushs
	spop $a
	call [$a],hide
	push iplayer
	push icompplayer
	cmpjne
	cmp0
	je l4056
	push 1
	pop imemostate
l4056:
	push "aigo"
	cthis startai
	end method
	method tclicks
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getcx
	push $1
	spushs
	spop $a
	call [$a],getcy
	cthis tclick
	end method
	method tclick
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 1
	call grnak,isin
	cmp0
	je l4058
	localstring $3
	call grnak,getsfound
	pop $3
	jmp l4057
l4058:
	ret
l4057:
	cthis tchoose
	push imemostate
	push 1
	cmpje
	cmp0
	jne l4061
	push imemostate
	push 11
	cmpje
	jmp l4062
l4060:
	push 0
	jmp l4062
l4061:
	push 1
l4062:
	cmp0
	je l4063
	sub imemostate,1
	pop imemostate
	push $3
	pop snak1
	push $3
	spushs
	spop $a
	call [$a],getcx
	push $3
	spushs
	spop $a
	call [$a],getcy
	push 1
	push 1
	call grtaf,getimg
	pop staf1
	push staf1
	push "null"
	call vecai,vecset
	push staf1
	call vecai,addbegin
	push 30
	call vecai,veclimes
	push 1
	push ipredkosc
	popax
	sub 0,$a
	push $3
	push "TMemo5"
	call clfio,setopacity
	jmp l4059
l4063:
	push imemostate
	push 2
	cmpje
	cmp0
	jne l4066
	push imemostate
	push 12
	cmpje
	jmp l4067
l4065:
	push 0
	jmp l4067
l4066:
	push 1
l4067:
	cmp0
	je l4068
	push 2
	popax
	sub imemostate,$a
	pop imemostate
	push $3
	pop snak2
	push $3
	spushs
	spop $a
	call [$a],getcx
	push $3
	spushs
	spop $a
	call [$a],getcy
	push 1
	push 1
	call grtaf,getimg
	pop staf2
	push staf2
	push "null"
	call vecai,vecset
	push staf2
	call vecai,addbegin
	push 30
	call vecai,veclimes
	push 1
	push ipredkosc
	popax
	sub 0,$a
	push $3
	push "endset2"
	call clfio,setopacity
l4068:
l4059:
	end method
	method TMemo5
	push snak1
	spushs
	spop $a
	call [$a],hide
	push 2
	popax
	add imemostate,$a
	pop imemostate
	push "aigo2"
	cthis startai
	end method
	method tnextplayer
	push iplayer
	push 1
	cmpje
	cmp0
	je l4070
	push 2
	jmp l4069
l4070:
	push 1
l4069:
	pop iplayer
	end method
	method tfitinsurf
	localint $1
	localint $2
	pop $2
	pop $1
	push "unlink"
	call grtaf,eval
	push "unlink"
	call grnak,eval
	localdef $3
	push $1
	push iMemoW
	pop $b
	popax
	div $a,$b
	psax
	pop $3
	localdef $4
	push $2
	push iMemoH
	pop $b
	popax
	div $a,$b
	psax
	pop $4
	localdef $5
	call grtaf,first
	spushs
	spop $a
	call [$a],getw
	pop $5
	localdef $6
	call grtaf,first
	spushs
	spop $a
	call [$a],geth
	pop $6
	localdef $7
	push $4
	push $6
	pop $b
	popax
	sub $a,$b
	pop $7
	localdef $8
	push $3
	push $5
	pop $b
	popax
	sub $a,$b
	pop $8
	localdef $9
	push 0
	pop $9
	localint $10
	push 0
	pop $10
l4071:
	push $10
	push iMemoW
	cmpjl
	cmp0
	je l4072
	jmp l4074
l4073:
	add $10,1
	pop $10
	jmp l4071
l4074:
	localint $11
	push 0
	pop $11
l4075:
	push $11
	push iMemoH
	cmpjl
	cmp0
	je l4076
	jmp l4078
l4077:
	add $11,1
	pop $11
	jmp l4075
l4078:
	localdef $12
	push $9
	call grtaf,get
	pop $12
	push $12
	spushs
	push $3
	push $10
	pop $b
	popax
	mul $a,$b
	push $4
	push $11
	pop $b
	popax
	mul $a,$b
	spop $a
	call [$a],ansetbpos
	push $8
	push 0
	cmpjl
	cmp0
	je l4080
	push $10
	push 2
	pop $b
	popax
	div $a,$b
	push $d
	jmp l4082
l4080:
	push 0
	jmp l4082
l4081:
	push 1
l4082:
	cmp0
	je l4083
	push $12
	spushs
	push 0
	push $7
	push 2
	pop $b
	popax
	div $a,$b
	psax
	spop $a
	call [$a],move
l4083:
	push $9
	call grnak,get
	spushs
	push $12
	spushs
	spop $a
	call [$a],getpx
	push $12
	spushs
	spop $a
	call [$a],getpy
	spop $a
	call [$a],ansetbpos
	add $9,1
	pop $9
	jmp l4077
l4076:
	jmp l4073
l4072:
	push iResX
	call grnak,getex
	pop $b
	popax
	sub $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $1
	push iResY
	call grnak,getey
	pop $b
	popax
	sub $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $2
	push $1
	push $2
	call grnak,move
	push $1
	push $2
	call grtaf,move
	push "link"
	call grtaf,eval
	push "link"
	call grnak,eval
	end method
	method tm_mouselclick
	push A
	push 1
	push 2
	call imemostate,in
	cmp0
	je l4085
	call mouse,getpos
	cthis tclick
l4085:
	end method
	method tfinish
	end method
	method tpoint
	end method
	method terror
	end method
	method tchoose
	end method
	end class

	class classadvstdgame
	parent classadvcontroller
	method init
	call clbuts,reset
	clparent classadvcontroller,init
	cthis advsave_game
	new img,_im_podbg
	push iResX
	push 1
	cthis black
	push 255
	call _im_podbg,create
	push 0
	push iResY
	push 1
	pop $b
	popax
	sub $a,$b
	call _im_podbg,setpos
	push 2000
	popax
	sub 0,$a
	call _im_podbg,setz
	new img,_im_podbg2
	push 1
	push iResY
	cthis black
	push 255
	call _im_podbg2,create
	push iResX
	push 1
	pop $b
	popax
	sub $a,$b
	push 0
	call _im_podbg2,setpos
	push 2000
	popax
	sub 0,$a
	call _im_podbg2,setz
	end method
	method add_helps
	new gmimgvec,__grhelp
	new anima,__anhp
	push "scripts/common/aktywny.pyz"
	call __anhp,load
	call __anhp,hide
	localint $1
	push 0
	pop $1
l4086:
	push $1
	push 100
	cmpjl
	cmp0
	je l4087
	jmp l4089
l4088:
	add $1,1
	pop $1
	jmp l4086
l4089:
	localstring $2
	push "__anhp"
	push $1
	pop $b
	popax
	add $a,$b
	pop $2
	push "__anhp"
	push $2
	cthis copyanima
	push $2
	spushs
	push 2700
	spop $a
	call [$a],setz
	push $2
	call __grhelp,add
	jmp l4088
l4087:
	end method
	method clbuts_help_butclick
	localint $1
	push 0
	pop $1
	localint $2
	push 0
	pop $2
l4090:
	push $2
	call grbuts,size
	cmpjl
	cmp0
	je l4091
	jmp l4093
l4092:
	add $2,1
	pop $2
	jmp l4090
l4093:
	localstring $3
	push $2
	call grbuts,get
	pop $3
	localstring $4
	localstring $5
	push $3
	spushs
	spop $a
	call [$a],gettyp
	pop $5
	push $5
	push "item"
	cmpje
	cmp0
	jne l4096
	push $5
	push "but"
	cmpje
	cmp0
	jne l4096
	push $5
	push "doors"
	cmpje
	jmp l4097
l4095:
	push 0
	jmp l4097
l4096:
	push 1
l4097:
	cmp0
	je l4098
	push $3
	spushs
	spop $a
	call [$a],enabled
	cmp0
	je l4098
	push $3
	spushs
	spop $a
	call [$a],isvisible
	cmp0
	jne l4101
	push $3
	spushs
	spop $a
	call [$a],ismask
	jmp l4102
l4100:
	push 0
	jmp l4102
l4101:
	push 1
l4102:
	jmp l4103
l4098:
	push 0
	jmp l4103
l4099:
	push 1
l4103:
	cmp0
	je l4104
	push $1
	call __grhelp,get
	pop $4
	add $1,1
	pop $1
	push $4
	spushs
	push $3
	spushs
	spop $a
	call [$a],getcx
	push $3
	spushs
	spop $a
	call [$a],getcy
	spop $a
	call [$a],setpos
	push $5
	push "doors"
	cmpje
	cmp0
	je l4106
	push $4
	spushs
	push 1
	spop $a
	call [$a],play
	jmp l4105
l4106:
	call gameapi,getgamename
	spushs
	push _stalkpref
	push $3
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],hasvar
	cmp0
	je l4108
	push $4
	spushs
	push 2
	spop $a
	call [$a],play
	jmp l4107
l4108:
	push $4
	spushs
	push 0
	spop $a
	call [$a],play
l4107:
l4105:
	push $4
	call clcamera,removefrombgr
	push $3
	call clcamera,findinbgr
	pop $5
	push $5
	push "null"
	cmpjne
	cmp0
	je l4110
	push $5
	push $4
	call clcamera,addtobgr
l4110:
l4104:
	jmp l4092
l4091:
	end method
	end class

	new string,sAskerGame
	class StdGame
	parent classadv
	parent GameController
	parent Localize
	method init
	localstring $1
	pop $1
	push 0
	pop AdventureGame
	push 0
	pop igmstate
	push "init"
	pop sgmstate
	clparent classadv,init
	push $1
	clparent GameController,init
	clparent Localize,init
	push 0
	push 0
	call clbuts,setcursorpos
	push 0
	push 0
	call claskexit,setcursorpos
	push $1
	cthis path=
	push SNDPATH
	cthis setwavpath
	call clmusic,play
	call clbuts,reset
	call claskexit,reset
	call advmouse,setstd
	new Music,mus
	new Button,butgame
	new string,sNextGamePath
	new string,sNextGame
	new string,sNextGameType
	push PrzygodaMode
	cmp0
	je l4112
	cthis advsaveonstart
	cthis advsave_game
l4112:
	end method
	method butenable
	cthis getname
	call butgame,addonce
	end method
	method butdisable
	cthis getname
	call butgame,removebut
	end method
	method cutscene
	push 0
	push 0
	push iResX
	push iResY
	new CutScene,ccs
	push 2000
	call ccs,setz
	end method
	method stdstart
	push "advsetstdstate"
	call ccs,enter
	end method
	method stdexitdefadv
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $2
	pop sNextGame
	push $1
	pop sNextGamePath
	push "-def"
	pop sNextGameType
	cthis _stdexit
	end method
	method stdexitadvadv
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $2
	pop sNextGame
	push $1
	pop sNextGamePath
	push "-adv"
	pop sNextGameType
	cthis _stdexit
	end method
	method stdexit
	localstring $1
	pop $1
	push $1
	pop sNextGame
	push "null"
	pop sNextGamePath
	push "-mg"
	pop sNextGameType
	cthis _stdexit
	end method
	method _stdexit
	push "end"
	pop sgmstate
	push sNextGameType
	spushs
	push "-def"
	cmpst
	jne l4114
	spop $a
	push sNextGamePath
	push sNextGame
	cthis gotoadv
	jmp l4113
l4114:
	push "-adv"
	cmpst
	jne l4115
	spop $a
	push sNextGamePath
	push sNextGame
	cthis gotoadv2
	jmp l4113
l4115:
	spop $a
	push sNextGame
	call gameapi,play
l4113:
	call ccs,buildfromscreen
	end method
	method gotoadv
	localstring $1
	localstring $2
	pop $2
	pop $1
	call gameapi,getgamename
	pop sgmlastscene
	push $1
	pop sgmglobpath
	push $2
	pop sgmgame
	push "gameadvdef"
	call gameapi,play
	end method
	method gotoadv2
	localstring $1
	localstring $2
	pop $2
	pop $1
	call gameapi,getgamename
	pop sgmlastscene
	push $1
	pop sgmglobpath
	push "null"
	pop sgmgame
	push $2
	call gameapi,play
	end method
	method Button_stdoff
	push "butmoveoff"
	push "StdGame0"
	cthis addmethod
	end method
	method StdGame0
	cthis advstdstate
	cmp0
	je l4117
	call advmouse,setstd
l4117:
	end method
	method crect
	push 600
	push 196
	push 403
	push 497
	new Rect,rec
	end method
	method crect2
	push 6
	push 174
	push 1012
	push 530
	new Rect,rec2
	end method
	method cshowbut
	localstring $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	call clbuts,StdGame1
	end method
	method StdGame1
	localstring $1
	localdef $2
	pop $2
	pop $1
	push $1
	push "getcx"
	call buts,callimgfun
	push $1
	push "getcy"
	call buts,callimgfun
	push $2
	call clp,show
	end method
	method key_down
	push igmdebug
	cmp0
	je l4119
	push "lctrl"
	call keyboard,iskeydown
	cmp0
	je l4119
	push "r"
	call keyboard,iskey
	jmp l4121
l4119:
	push 0
	jmp l4121
l4120:
	push 1
l4121:
	cmp0
	je l4122
	cthis crestart
l4122:
	end method
	method askrestart
	call claskexit,askrestart
	end method
	method onmusicfin
	call mus,play
	end method
	method exit
	cthis game_exit
	push igmsubtitle
	cmp0
	je l4124
	call subtitle,reset
l4124:
	end method
	end class

	new string,HiddenPath
	push "null"
	pop HiddenPath
	new string,HiddenExclude
	push "null"
	pop HiddenExclude
	new string,HiddenEls
	push "null"
	pop HiddenEls
	new int,HiddenShape
	push 0
	pop HiddenShape
	class Hidden
	method init_hidden
	push HiddenPath
	push "null"
	cmpjne
	cmp0
	je l4126
	push HiddenPath
	cthis path=
	push "null"
	pop HiddenPath
l4126:
	new int,bhoshape
	push HiddenShape
	pop bhoshape
	push 0
	pop HiddenShape
	new int,ihoclickdelay
	push "hoclick_delay:"
	call dbconf,dbget
	pop ihoclickdelay
	new int,ihoclicktimes
	push "hoclick_times:"
	call dbconf,dbget
	pop ihoclicktimes
	new int,ihoclickkara
	push "hoclick_kara:"
	call dbconf,dbget
	pop ihoclickkara
	new int,ihotxtz
	push 507
	pop ihotxtz
	new int,ihoclicker
	push 0
	pop ihoclicker
	push "timhoclicker"
	push ihoclickdelay
	push "Hidden0"
	cthis timer=
	push "timhokara"
	push ihoclickkara
	push "Hidden1"
	cthis timer=
	new img,imgkara
	push igmappw
	push igmapph
	cthis black
	push 128
	call imgkara,create
	push 2222
	call imgkara,setz
	call imgkara,hide
	push A
	push "tolist0 70"
	push "tolist1 70"
	push "tolist2 50"
	cthis sfxs=
	push "grels"
	push "els"
	push 10
	cthis newgrimg
	new gmimgvec,grelscopy
	push "grels"
	call grelscopy,copy
	push HiddenExclude
	push "null"
	cmpjne
	cmp0
	je l4128
	new gmimgvec,grexclude
	push "dbexc"
	push HiddenExclude
	cthis lang_db
	localint $1
	push 0
	pop $1
l4129:
	push $1
	call dbexc,getrowsno
	cmpjl
	cmp0
	je l4130
	jmp l4132
l4131:
	add $1,1
	pop $1
	jmp l4129
l4132:
	localdef $2
	push $1
	push 0
	call dbexc,get
	call grels,getsac
	pop $2
	push $2
	spushs
	spop $a
	call [$a],hide
	push $2
	call grels,remove
	push $2
	call grexclude,add
	jmp l4131
l4130:
	push "null"
	pop HiddenExclude
l4128:
	cthis mpanel
	new string,sclickedho
	push "null"
	pop sclickedho
	localint $3
	localint $4
	localint $5
	localint $6
	localstring $7
	localstring $8
	localstring $9
	localstring $10
	new gmimgvec,grtxt
	push bhoshape
	cmp0
	je l4134
	localint $1
	push 0
	pop $1
l4135:
	push $1
	call grels,size
	cmpjl
	cmp0
	je l4136
	jmp l4138
l4137:
	add $1,1
	pop $1
	jmp l4135
l4138:
	push $1
	call grels,get
	pop $9
	push $9
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],nofframes
	push 2
	cmpja
	cmp0
	je l4140
	push "anshadow_"
	push $9
	pop $b
	popax
	add $a,$b
	pop $7
	push $9
	push $7
	cthis copyanima
	push $7
	spushs
	push 1
	popax
	sub 0,$a
	push 2
	spop $a
	call [$a],setframe
	push $7
	spushs
	push ihotxtz
	spop $a
	call [$a],setz
	push $7
	spushs
	spop $a
	call [$a],show
	push $9
	spushs
	push "stxtview"
	push $7
	spop $a
	call [$a],var2
	push $7
	call grtxt,add
l4140:
	jmp l4137
l4136:
	jmp l4133
l4134:
	push HiddenEls
	push "null"
	cmpjne
	cmp0
	je l4142
	push "dbtxts"
	push HiddenEls
	cthis lang_db
	push "null"
	pop HiddenEls
	jmp l4141
l4142:
	push "dbtxts"
	push "els_"
	cthis lang_db
l4141:
	new vector,vtexts
	push "string"
	call vtexts,type
	new gmimgvec,grtxtgrey
	localint $11
	new int,itxtheight
	push 16
	pop itxtheight
	push "hoguifont:"
	call dbconf,dbget
	pop $7
	push $7
	push "null"
	cmpje
	cmp0
	je l4144
	push sgmfontitalic
	pop $7
l4144:
	push "fnttxts"
	push $7
	push itxtheight
	cthis newfont
	localint $1
	push 0
	pop $1
l4145:
	push $1
	call dbtxts,getrowsno
	cmpjl
	cmp0
	je l4146
	jmp l4148
l4147:
	add $1,1
	pop $1
	jmp l4145
l4148:
	push $1
	call dbtxts,getcolsno
	push 1
	cmpja
	cmp0
	je l4150
	push 0
	pop $11
	push $1
	push 0
	call dbtxts,get
	pop $7
	push $7
	push "<external>"
	cmpje
	cmp0
	je l4152
	push $1
	push 1
	call dbtxts,get
	pop $9
	push $1
	push 2
	call dbtxts,get
	pop $8
	push $9
	pop $7
	push 1
	popax
	sub 0,$a
	pop $3
	jmp l4151
l4152:
	push $7
	push "<virtual>"
	cmpje
	cmp0
	je l4154
	push 1
	pop $11
	push $1
	push 1
	call dbtxts,get
	pop $7
	push $7
	call grels,getsac
	pop $9
	push 1
	popax
	sub 0,$a
	pop $3
	jmp l4153
l4154:
	push $7
	call grels,getsac
	pop $9
	push $1
	push 1
	call dbtxts,get
	pop $8
	push $8
	call vtexts,find
	pop $3
l4153:
l4151:
	push $3
	push 0
	cmpjae
	cmp0
	je l4156
	push 0
	pop $4
l4157:
	push $4
	call grtxt,size
	cmpjl
	cmp0
	je l4158
	jmp l4160
l4159:
	add $4,1
	pop $4
	jmp l4157
l4160:
	push $4
	call grtxt,get
	pop $10
	push $10
	spushs
	spop $a
	call [$a],idvtext
	push $3
	cmpje
	cmp0
	je l4162
	push $9
	spushs
	push "stxtview"
	push $10
	spop $a
	call [$a],var2
	push $10
	spushs
	push 1
	spop $a
	call [$a],mupdatetxt
l4162:
	jmp l4159
l4158:
	jmp l4155
l4156:
	push $11
	cmp0
	je l4164
	push $9
	spushs
	push "stxtview"
	push "<virtual>"
	spop $a
	call [$a],var2
	jmp l4163
l4164:
	push $8
	call vtexts,add
	push "txtel_"
	push $7
	pop $b
	popax
	add $a,$b
	pop $7
	push $1
	push 0
	call dbtxts,get
	push "<external>"
	cmpje
	cmp0
	je l4166
	push $7
	push $8
	push "fnttxts"
	cthis hoexternalcol
	cthis newtext
	jmp l4165
l4166:
	push $7
	push $8
	push "fnttxts"
	cthis guifontcolor
	cthis newtext
l4165:
	push $7
	spushs
	spop $a
	call [$a],hide
	push $7
	spushs
	push ihotxtz
	spop $a
	call [$a],setz
	push $7
	spushs
	push A
	push "stekst"
	push $8
	push "icnt"
	push 1
	push "iidtxt"
	push 0
	push "idvtext"
	call vtexts,size
	push 1
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],vars2
	push $7
	spushs
	push "mupdatetxt"
	push "Hidden2"
	spop $a
	call [$a],addmethod
	push $7
	spushs
	push "mupdatetxt2"
	push "Hidden3"
	spop $a
	call [$a],addmethod
	push $7
	call grtxt,add
	push $9
	spushs
	push "stxtview"
	push $7
	spop $a
	call [$a],var2
l4163:
l4155:
l4150:
	jmp l4147
l4146:
	push A
	push "irows"
	push 3
	push "icols"
	push 4
	call grtxt,vars2
	push "lastid"
	push "Hidden4"
	call grtxt,addmethod
	push "shownext"
	push "Hidden5"
	call grtxt,addmethod
	push 0
	pop $1
l4176:
	push $1
	push 12
	cmpjl
	cmp0
	je l4177
	jmp l4179
l4178:
	add $1,1
	pop $1
	jmp l4176
l4179:
	call grtxt,shownext
	jmp l4178
l4177:
l4133:
	new int,ilehonaraz
	push 35
	pop ilehonaraz
	new classancounter,ctcen
	push "timcenter"
	push ilehonaraz
	call ctcen,set
	new int,idtimcenter
	push 0
	pop idtimcenter
	new real,rcykcenter
	push 16.0
	pop rcykcenter
	new string,shidenmov
	push "null"
	pop shidenmov
	localint $1
	push 0
	pop $1
l4180:
	push $1
	push ilehonaraz
	cmpjl
	cmp0
	je l4181
	jmp l4183
l4182:
	add $1,1
	pop $1
	jmp l4180
l4183:
	localdef $12
	push 3
	pop $12
	push "timcenter"
	push $1
	pop $b
	popax
	add $a,$b
	push "Hidden6"
	cthis cycle=
	push "timcenter"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push "mstart"
	push "Hidden7"
	spop $a
	call [$a],addmethod
	push "timcenter"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	spop $a
	call [$a],Hidden8
	push "timcenterb"
	push $1
	pop $b
	popax
	add $a,$b
	push 500
	push "Hidden9"
	cthis timer=
	push "timcenterb"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push A
	push "myid"
	push $1
	spop $a
	call [$a],vars2
	jmp l4182
l4181:
	localdef $2
	cthis getgraphpath
	pop $2
	push "common"
	cthis path=
	localdef $13
	push 60
	pop $13
	push "anhodym"
	push "dymki.pyz"
	push 600
	cthis newanima
	call anhodym,hide
	new gmimgvec,grdym
	push "anhodym"
	push $13
	call grdym,ancopies
	new classancounter,ctdym
	push "anhodym_"
	push $13
	call ctdym,set
	push A
	push "gwiazdkif.pyzH"
	push "gwiazdki1.pyzGH"
	push "bable.pyzH"
	cthis imgs=
	push "anbable"
	push "anbable2"
	cthis copyanima
	new gmimgvec,grgwiazdkif
	localint $1
	push 0
	pop $1
l4229:
	push $1
	push 4
	cmpjl
	cmp0
	je l4230
	jmp l4232
l4231:
	add $1,1
	pop $1
	jmp l4229
l4232:
	push "angwiazdkif"
	push "angwiazdkif"
	push $1
	pop $b
	popax
	add $a,$b
	cthis copyanima
	push "angwiazdkif"
	push $1
	pop $b
	popax
	add $a,$b
	call grgwiazdkif,add
	jmp l4231
l4230:
	push $2
	cthis setgraphpath
	new int,izels
	push 10
	pop izels
	push "Hidden10"
	call grelscopy,each
	push "Hidden11"
	call grels,each
	push igmdebug
	cmp0
	je l4234
	new string,smovedfont
	push 14
	cthis stdfont
	pop smovedfont
	push "txtmovedho"
	push ""
	push smovedfont
	push 240
	cthis grey
	cthis newtext
	push 1500
	call txtmovedho,setz
	push "txtmovedho2"
	push ""
	push smovedfont
	push 2
	cthis grey
	cthis newtext
	push 1499
	call txtmovedho2,setz
l4234:
	end method
	method Hidden0
	push 0
	pop ihoclicker
	end method
	method Hidden1
	call imgkara,hide
	push 1
	pop igmstate
	end method
	method Hidden2
	localint $1
	pop $1
	push $1
	popax
	add icnt,$a
	pop icnt
	push stekst
	push " 0/"
	pop $b
	popax
	add $a,$b
	push icnt
	pop $b
	popax
	add $a,$b
	cthis txtset
	end method
	method Hidden3
	localint $1
	pop $1
	push $1
	popax
	add iidtxt,$a
	pop iidtxt
	push stekst
	push " "
	pop $b
	popax
	add $a,$b
	push iidtxt
	pop $b
	popax
	add $a,$b
	push "/"
	pop $b
	popax
	add $a,$b
	push icnt
	pop $b
	popax
	add $a,$b
	cthis txtset
	end method
	method Hidden4
	localint $1
	push 0
	pop $1
l4167:
	push $1
	cthis size
	cmpjl
	cmp0
	je l4168
	push $1
	cthis get
	spushs
	spop $a
	call [$a],isvisible
	jmp l4170
l4168:
	push 0
	jmp l4170
l4169:
	push 1
l4170:
	cmp0
	je l4171
	add $1,1
	pop $1
	jmp l4167
l4171:
	push $1
	end method
	method Hidden5
	localint $1
	cthis lastid
	pop $1
	push $1
	cthis size
	cmpje
	cmp0
	je l4173
	ret
l4173:
	push $1
	push irows
	push icols
	pop $b
	popax
	mul $a,$b
	cmpjl
	cmp0
	je l4175
	localdef $2
	push $1
	cthis get
	pop $2
	localint $3
	push $1
	push icols
	pop $b
	popax
	div $a,$b
	psax
	pop $3
	localint $4
	push $1
	push icols
	pop $b
	popax
	div $a,$b
	push $d
	pop $4
	push $2
	spushs
	push igmappw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	call icols,to_r
	push 2.0
	pop $b
	popax
	div $a,$b
	psax
	call $4,to_r
	pop $b
	popax
	sub $a,$b
	push 0.5
	pop $b
	popax
	sub $a,$b
	push 120
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	sub $a,$b
	push $2
	spushs
	spop $a
	call [$a],getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call guihoinventory,getpy
	push 50
	pop $b
	popax
	add $a,$b
	push $3
	push itxtheight
	push 2
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	push $2
	spushs
	spop $a
	call [$a],show
l4175:
	end method
	method Hidden6
	add icyk,1
	pop icyk
	push rpx
	popax
	add rdx,$a
	pop rdx
	push rpy
	popax
	add rdy,$a
	pop rdy
	push ietap
	push 2
	cmpje
	cmp0
	je l4185
	push shidenmov
	spushs
	push icyk
	call vhox,get
	push icyk
	call vhoy,get
	spop $a
	call [$a],ansetbpos
	push icyk
	call vhox,get
	push icyk
	call vhoy,get
	call grgwiazdki1,setpos
	jmp l4184
l4185:
	push shidenmov
	spushs
	push rdx
	push rdy
	spop $a
	call [$a],move
l4184:
	push rdx
	spushs
	spop $h
	call $h,to_i
	popax
	sub rdx,$a
	pop rdx
	push rdy
	spushs
	spop $h
	call $h,to_i
	popax
	sub rdy,$a
	pop rdy
	localdef $1
	call ctdym,get
	pop $1
	push $1
	spushs
	push shidenmov
	spushs
	spop $a
	call [$a],getcx
	push shidenmov
	spushs
	spop $a
	call [$a],getcy
	spop $a
	call [$a],setpos
	push $1
	spushs
	push shidenmov
	spushs
	spop $a
	call [$a],getz
	push 1
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setz
	push icyk
	push rcykcenter
	cmpjae
	cmp0
	je l4187
	push ietap
	push 1
	cmpje
	cmp0
	je l4189
	push idestx2
	pop idestx
	push idesty2
	pop idesty
	push 2
	pop ietap
	push shidenmov
	spushs
	spop $a
	call [$a],getcx
	push shidenmov
	spushs
	spop $a
	call [$a],getcy
	call grgwiazdki1,setpos
	push shidenmov
	spushs
	spop $a
	call [$a],getz
	push 1
	pop $b
	popax
	sub $a,$b
	call grgwiazdki1,setz
	push 1
	popax
	sub 0,$a
	call grgwiazdki1,nplay
	push shidenmov
	spushs
	spop $a
	call [$a],getcx
	push shidenmov
	spushs
	spop $a
	call [$a],getcy
	call anbable2,setpos
	push shidenmov
	spushs
	spop $a
	call [$a],getz
	push 1
	pop $b
	popax
	sub $a,$b
	call anbable2,setz
	push 0
	call anbable2,play
	call fxtolist2,playif
	cthis mstart
	push "timcenterb"
	push myid
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],play
	jmp l4188
l4189:
	cthis getname
	call ctcen,retf
	call ctcen,allfree
	cmp0
	je l4191
	cthis advsetstdstate
	push 1
	pop igmstate
l4191:
	push shidenmov
	spushs
	spop $a
	call [$a],hide
	push shidenmov
	call grels,remove
	push bhoshape
	cmp0
	je l4193
	push sclickedho
	cthis mputshadow
	jmp l4192
l4193:
	localdef $2
	call grtxt,irows
	call grtxt,icols
	pop $b
	popax
	mul $a,$b
	pop $2
	localdef $3
	push shidenmov
	spushs
	spop $a
	call [$a],actionname
	pop $3
	push sclickedho
	spushs
	spop $a
	call [$a],icnt
	push sclickedho
	spushs
	spop $a
	call [$a],iidtxt
	push 1
	pop $b
	popax
	add $a,$b
	cmpja
	cmp0
	je l4195
	push sclickedho
	spushs
	push 1
	spop $a
	call [$a],mupdatetxt2
	jmp l4194
l4195:
	push sclickedho
	spushs
	spop $a
	call [$a],icnt
	push 1
	cmpja
	cmp0
	je l4197
	push sclickedho
	spushs
	push 1
	spop $a
	call [$a],mupdatetxt2
l4197:
	push sclickedho
	call grtxt,remove
	push sclickedho
	call grtxtgrey,add
	push sclickedho
	spushs
	push 128
	cthis grey
	spop $a
	call [$a],createtxt
	call grtxtgrey,size
	push $2
	cmpje
	cmp0
	je l4199
	call grtxt,size
	push 0
	cmpja
	jmp l4201
l4199:
	push 0
	jmp l4201
l4200:
	push 1
l4201:
	cmp0
	je l4202
	call grtxtgrey,hide
	call grtxtgrey,free
	localint $4
	push 0
	pop $4
l4203:
	push $4
	push $2
	cmpjl
	cmp0
	je l4204
	call grtxt,size
	push 0
	cmpja
	jmp l4206
l4204:
	push 0
	jmp l4206
l4205:
	push 1
l4206:
	cmp0
	je l4207
	call grtxt,shownext
	add $4,1
	pop $4
	jmp l4203
l4207:
l4202:
l4194:
l4192:
	push $1
	spushs
	push sclickedho
	spushs
	spop $a
	call [$a],getpx
	push sclickedho
	spushs
	spop $a
	call [$a],getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	push sclickedho
	spushs
	spop $a
	call [$a],getpy
	push sclickedho
	spushs
	spop $a
	call [$a],geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	push $1
	spushs
	push "end"
	spop $a
	call [$a],play
	push $3
	push "_put"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	cthis hiddenobj_put
l4188:
	jmp l4186
l4187:
	push ietap
	push 1
	cmpje
	cmp0
	jne l4210
	push ietap
	push 2
	cmpje
	jmp l4211
l4209:
	push 0
	jmp l4211
l4210:
	push 1
l4211:
	cmp0
	je l4212
	push $1
	spushs
	push "go"
	spop $a
	call [$a],play
l4212:
	cthis play
l4186:
	end method
	method Hidden7
	localdef $1
	push shidenmov
	spushs
	spop $a
	call [$a],getcx
	pop $1
	localdef $2
	push shidenmov
	spushs
	spop $a
	call [$a],getcy
	pop $2
	push idestx
	push $1
	pop $b
	popax
	sub $a,$b
	spushs
	spop $h
	call $h,to_r
	push rcykcenter
	pop $b
	popax
	div $a,$b
	psax
	pop rpx
	push idesty
	push $2
	pop $b
	popax
	sub $a,$b
	spushs
	spop $h
	call $h,to_r
	push rcykcenter
	pop $b
	popax
	div $a,$b
	psax
	pop rpy
	push 0.0
	pop rdx
	push 0.0
	pop rdy
	push 0
	pop icyk
	push ietap
	push 2
	cmpje
	cmp0
	je l4214
	push 0
	push $1
	push $1
	push shidenmov
	spushs
	spop $a
	call [$a],getpx
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	sub $a,$b
	call vhox,set
	push 0
	push $2
	push $2
	push shidenmov
	spushs
	spop $a
	call [$a],getpy
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	sub $a,$b
	call vhoy,set
	push rpx
	push 0
	cmpjl
	cmp0
	je l4216
	localint $3
	push 1
	pop $3
l4217:
	push $3
	push rcykcenter
	cmpjle
	cmp0
	je l4218
	jmp l4220
l4219:
	add $3,1
	pop $3
	jmp l4217
l4220:
	push $3
	push rpx
	push $3
	push 1
	pop $b
	popax
	sub $a,$b
	call vhox,get
	pop $b
	popax
	add $a,$b
	push $3
	call rcykcenter,to_i
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push 5
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	sub $a,$b
	call vhox,set
	push $3
	push rpy
	push $3
	push 1
	pop $b
	popax
	sub $a,$b
	call vhoy,get
	pop $b
	popax
	add $a,$b
	push $3
	call rcykcenter,to_i
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push 5
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	sub $a,$b
	call vhoy,set
	jmp l4219
l4218:
	jmp l4215
l4216:
	localint $3
	push 1
	pop $3
l4221:
	push $3
	push rcykcenter
	cmpjle
	cmp0
	je l4222
	jmp l4224
l4223:
	add $3,1
	pop $3
	jmp l4221
l4224:
	push $3
	push rpx
	push $3
	push 1
	pop $b
	popax
	sub $a,$b
	call vhox,get
	pop $b
	popax
	add $a,$b
	push $3
	call rcykcenter,to_i
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push 5
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	call vhox,set
	push $3
	push rpy
	push $3
	push 1
	pop $b
	popax
	sub $a,$b
	call vhoy,get
	pop $b
	popax
	add $a,$b
	push $3
	call rcykcenter,to_i
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push 5
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	sub $a,$b
	call vhoy,set
	jmp l4223
l4222:
l4215:
	localreal $4
	localreal $5
	localreal $6
	localreal $7
	push idesty
	push $2
	pop $b
	popax
	sub $a,$b
	pop $4
	push rcykcenter
	push 1
	pop $b
	popax
	sub $a,$b
	call vhoy,get
	push 0
	call vhoy,get
	pop $b
	popax
	sub $a,$b
	pop $5
	push $4
	push $5
	pop $b
	popax
	div $a,$b
	psax
	pop $6
	push 1
	pop $3
l4225:
	push $3
	push rcykcenter
	cmpjle
	cmp0
	je l4226
	jmp l4228
l4227:
	add $3,1
	pop $3
	jmp l4225
l4228:
	push $3
	push $3
	call vhoy,get
	push $6
	pop $b
	popax
	mul $a,$b
	call vhoy,set
	jmp l4227
l4226:
l4214:
	end method
	method Hidden8
	localdef $1
	pop $1
	new vector,vhox
	push "real"
	call vhox,type
	push rcykcenter
	push 1
	pop $b
	popax
	add $a,$b
	push 0.0
	call vhox,resize
	new vector,vhoy
	push "real"
	call vhoy,type
	push rcykcenter
	push 1
	pop $b
	popax
	add $a,$b
	push 0.0
	call vhoy,resize
	push A
	push "rdx"
	push "rdy"
	push "rpx"
	push "rpy"
	push "icyk"
	push "idestx"
	push "idesty"
	push "idestx2"
	push "idesty2"
	push "ietap"
	push "shidenmov"
	push "myid"
	push "sclickedho"
	cthis vars
	push $1
	pop myid
	push "null"
	pop shidenmov
	push "null"
	pop sclickedho
	end method
	method Hidden9
	push "timcenter"
	push myid
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],mstart
	call fxtolist1,playif
	push "timcenter"
	push myid
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],play
	end method
	method Hidden10
	localdef $1
	pop $1
	push izels
	push $1
	push 5
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	cthis setz
	end method
	method Hidden11
	localdef $1
	pop $1
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	cthis mhobut
	end method
	method hoexternalcol
	push 255
	push 220
	push 0
	ret
	end method
	method mhobutmask
	push 0
	cthis _mhobut
	end method
	method mhobut
	push 1
	cthis _mhobut
	end method
	method _mhobut
	localint $1
	pop $1
	push $1
	cmp0
	je l4236
	push "isbutin"
	push "Hidden12"
	cthis addmethod
	jmp l4235
l4236:
	push "isbutin"
	push "Hidden13"
	cthis addmethod
l4235:
	push "butmoveon"
	push "Hidden14"
	cthis addmethod
	push "butmoveoff"
	push "Hidden15"
	cthis addmethod
	push "myz"
	cthis getz
	cthis var2
	push "butclick"
	push "Hidden16"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method Hidden12
	localdef $1
	localdef $2
	pop $2
	pop $1
	push 1
	popax
	sub 0,$a
	cthis nofframes
	push 1
	cmpja
	cmp0
	je l4238
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	push $1
	push $2
	push 1
	push 1
	cthis isin
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	jmp l4237
l4238:
	push $1
	push $2
	push 1
	push 1
	cthis isin
l4237:
	end method
	method Hidden13
	localdef $1
	localdef $2
	pop $2
	pop $1
	push 1
	popax
	sub 0,$a
	cthis nofframes
	push 1
	cmpja
	cmp0
	je l4240
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	push $1
	push $2
	push 0
	push 1
	cthis isin
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	jmp l4239
l4240:
	push $1
	push $2
	push 1
	push 0
	cthis isin
l4239:
	end method
	method Hidden14
	push igmdebug
	cmp0
	je l4242
	localdef $1
	cthis actionname
	pop $1
	call txtmovedho,get
	push $1
	cmpjne
	cmp0
	je l4244
	push $1
	call txtmovedho,txtset
	push $1
	call txtmovedho2,txtset
l4244:
	call mouse,getpx
	call mouse,getpy
	call txtmovedho,geth
	pop $b
	popax
	sub $a,$b
	push 1
	pop $b
	popax
	sub $a,$b
	call txtmovedho,setpos
	call mouse,getpx
	push 1
	pop $b
	popax
	add $a,$b
	call mouse,getpy
	call txtmovedho,geth
	pop $b
	popax
	sub $a,$b
	call txtmovedho2,setpos
	call txtmovedho,show
	call txtmovedho2,show
l4242:
	end method
	method Hidden15
	push igmdebug
	cmp0
	je l4246
	call txtmovedho,hide
	call txtmovedho2,hide
l4246:
	end method
	method Hidden16
	localdef $1
	cthis actionname
	pop $1
	push GAME
	spushs
	push $1
	push "_preclick"
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],hasmet
	cmp0
	je l4248
	push $1
	push "_preclick"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	jmp l4247
l4248:
	push igmstate
	push 1
	cmpje
	cmp0
	jne l4251
	push sgmstate
	push "hoout"
	cmpje
	jmp l4252
l4250:
	push 0
	jmp l4252
l4251:
	push 1
l4252:
	cmp0
	je l4253
	cthis mho_click
	push $1
	push "_click"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	call butgame,onmousemove
l4253:
l4247:
	end method
	method mmasks
	cthis getgraphpath
	push "masks.pyz"
	pop $b
	popax
	add $a,$b
	call engine,fileexist
	cmp0
	je l4255
	push "grmasks"
	push "masks"
	push 0
	cthis newgrimg
	push "Hidden17"
	call grmasks,eval
	jmp l4254
l4255:
	new gmimgvec,grmasks
l4254:
	end method
	method Hidden17
	cthis actionname
	cthis mmask
	push 1
	popax
	sub 0,$a
	cthis nofframes
	push 1
	cmpja
	cmp0
	je l4257
	push 1
	popax
	sub 0,$a
	cthis play
l4257:
	end method
	method mmask
	localstring $1
	pop $1
	push 0
	push 5
	call $1,getb
	push "_prev"
	cmpje
	cmp0
	je l4259
	localdef $2
	cthis getname
	call grmasks,find
	pop $2
	push $2
	push 0
	cmpja
	cmp0
	je l4261
	push $2
	push 1
	pop $b
	popax
	sub $a,$b
	call grmasks,get
	spushs
	spop $a
	call [$a],getz
	cthis setz
	jmp l4260
l4261:
	push 2
	cthis setz
l4260:
	jmp l4258
l4259:
	localstring $3
	localdef $2
	push $1
	call grelscopy,findsac
	pop $2
	push $2
	push 0
	cmpjl
	cmp0
	je l4263
	push $1
	call grexclude,getsac
	pop $3
	jmp l4262
l4263:
	push $2
	call grelscopy,get
	pop $3
l4262:
	push $3
	spushs
	spop $a
	call [$a],getz
	push 2
	pop $b
	popax
	add $a,$b
	cthis setz
l4258:
	end method
	method mhider
	localstring $1
	pop $1
	localdef $2
	push $1
	call grels,getsac
	pop $2
	push $2
	spushs
	spop $a
	call [$a],getz
	push 2
	pop $b
	popax
	sub $a,$b
	cthis setz
	push $2
	spushs
	spop $a
	call [$a],hide
	push "maskedobj"
	push $2
	cthis var2
	push "hidemask"
	push "Hidden18"
	cthis addmethod
	push "showmask"
	push "Hidden19"
	cthis addmethod
	end method
	method Hidden18
	push maskedobj
	call grels,contains
	cmp0
	je l4265
	push maskedobj
	spushs
	spop $a
	call [$a],hide
l4265:
	end method
	method Hidden19
	push maskedobj
	call grels,contains
	cmp0
	je l4267
	push maskedobj
	spushs
	spop $a
	call [$a],show
l4267:
	end method
	method mhiderclick
	push 1
	popax
	sub 0,$a
	cthis actionnr
	push 0
	cmpje
	cmp0
	je l4269
	push 1
	push 0
	cthis setframe
	cthis showmask
	jmp l4268
l4269:
	push 0
	push 0
	cthis setframe
	cthis hidemask
l4268:
	end method
	method mho_click
	push "stxtview"
	cthis hasvar
	cmp0
	je l4271
	push stxtview
	spushs
	spop $a
	call [$a],isvisible
	jmp l4273
l4271:
	push 0
	jmp l4273
l4272:
	push 1
l4273:
	cmp0
	je l4274
	push stxtview
	pop sclickedho
	jmp l4270
l4274:
	push "null"
	pop sclickedho
l4270:
	push sclickedho
	push "null"
	cmpjne
	cmp0
	je l4276
	push igmstate
	push 1
	cmpje
	cmp0
	jne l4279
	push sgmstate
	push "hoout"
	cmpje
	jmp l4280
l4278:
	push 0
	jmp l4280
l4279:
	push 1
l4280:
	jmp l4281
l4276:
	push 0
	jmp l4281
l4277:
	push 1
l4281:
	cmp0
	je l4282
	localdef $1
	call ctcen,getf
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l4284
	push 0
	pop ihoclicker
	cthis getname
	call butgame,removebut
	push "anhide"
	call grgwiazdkif,eval
	cthis getname
	pop shidenmov
	push $1
	spushs
	cthis getname
	spop $a
	call [$a],shidenmov=
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	push 600
	cthis setz
	push 2
	pop igmstate
	push GAME
	spushs
	cthis actionname
	push "_put"
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],hasmet
	cmp0
	je l4286
	cthis advsetstdstate
	jmp l4285
l4286:
	push "hoout"
	pop sgmstate
l4285:
	push $1
	spushs
	push igmappw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	spop $a
	call [$a],idestx=
	push $1
	spushs
	push igmapph
	push 2
	pop $b
	popax
	div $a,$b
	psax
	spop $a
	call [$a],idesty=
	push $1
	spushs
	push sclickedho
	spushs
	spop $a
	call [$a],getpx
	push sclickedho
	spushs
	spop $a
	call [$a],getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],idestx2=
	push $1
	spushs
	push sclickedho
	spushs
	spop $a
	call [$a],getpy
	push sclickedho
	spushs
	spop $a
	call [$a],geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],idesty2=
	push $1
	spushs
	push 1
	spop $a
	call [$a],ietap=
	push $1
	spushs
	push sclickedho
	spop $a
	call [$a],sclickedho=
	push $1
	spushs
	spop $a
	call [$a],mstart
	localdef $2
	call ctdym,get
	pop $2
	push $2
	spushs
	push shidenmov
	spushs
	spop $a
	call [$a],getcx
	push shidenmov
	spushs
	spop $a
	call [$a],getcy
	spop $a
	call [$a],setpos
	push $2
	spushs
	push "start"
	spop $a
	call [$a],play
	call fxtolist0,playif
	push $1
	spushs
	spop $a
	call [$a],play
	jmp l4283
l4284:
	push "null"
	pop sclickedho
l4283:
l4282:
	end method
	method butgame_lclick
	push igmstate
	push 1
	cmpje
	cmp0
	je l4288
	call grtxt,empty
	neg
	jmp l4290
l4288:
	push 0
	jmp l4290
l4289:
	push 1
l4290:
	cmp0
	je l4291
	call timhoclicker,isplaying
	cmp0
	je l4293
	add ihoclicker,1
	pop ihoclicker
l4293:
	push ihoclicker
	push ihoclicktimes
	cmpje
	cmp0
	je l4295
	push 0
	pop ihoclicker
	push 0
	call timhoclicker,stop
	push "null"
	pop sobject
	push 12345
	pop igmstate
	call imgkara,show
	call timhokara,play
	push "ho_ukarany"
	call clsave,bis
	neg
	cmp0
	je l4297
	push "ho_ukarany"
	call clsave,bset
l4297:
	jmp l4294
l4295:
	call timhoclicker,play
l4294:
	jmp l4287
l4291:
	push 0
	pop ihoclicker
l4287:
	end method
	method HINT_CLICK
	new gmobjvec,_grtmp
	localstring $1
	localint $2
	push 0
	pop $2
l4298:
	push $2
	call grels,size
	cmpjl
	cmp0
	je l4299
	jmp l4301
l4300:
	add $2,1
	pop $2
	jmp l4298
l4301:
	push $2
	call grels,get
	pop $1
	push $1
	spushs
	push "stxtview"
	spop $a
	call [$a],hasvar
	cmp0
	je l4303
	push $1
	spushs
	spop $a
	call [$a],stxtview
	spushs
	push 0
	push 1
	spop $h
	call $h,getb
	push "<"
	cmpjne
	cmp0
	je l4303
	push $1
	spushs
	spop $a
	call [$a],stxtview
	spushs
	spop $a
	call [$a],isvisible
	jmp l4305
l4303:
	push 0
	jmp l4305
l4304:
	push 1
l4305:
	cmp0
	je l4306
	push $1
	call _grtmp,add
l4306:
	jmp l4300
l4299:
	call _grtmp,rand
	cthis mhintonobj
	delete _grtmp
	end method
	method mgetfirsthint
	localstring $1
	call grgwiazdkif,first
	pop $1
	localint $2
	push 1
	pop $2
l4307:
	push $1
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],isplaying
	push 0
	cmpjne
	cmp0
	je l4308
	push $2
	call grgwiazdkif,size
	cmpjl
	jmp l4310
l4308:
	push 0
	jmp l4310
l4309:
	push 1
l4310:
	cmp0
	je l4311
	push $2
	call grgwiazdkif,get
	pop $1
	add $2,1
	pop $2
	jmp l4307
l4311:
	push $2
	call grgwiazdkif,size
	cmpje
	cmp0
	je l4313
	call grgwiazdkif,first
	jmp l4312
l4313:
	push $1
l4312:
	end method
	method mishintplaying
	localint $1
	push 0
	pop $1
l4314:
	push $1
	call grgwiazdkif,size
	cmpjl
	cmp0
	je l4315
	jmp l4317
l4316:
	add $1,1
	pop $1
	jmp l4314
l4317:
	push $1
	call grgwiazdkif,get
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],isplaying
	cmp0
	je l4319
	push 1
	ret
l4319:
	jmp l4316
l4315:
	push 0
	end method
	method mhintonobj
	localstring $1
	pop $1
	push $1
	push "null"
	cmpje
	cmp0
	je l4321
	ret
l4321:
	localdef $2
	push $1
	spushs
	spop $a
	call [$a],framenr
	pop $2
	push $1
	spushs
	push 1
	popax
	sub 0,$a
	push 0
	spop $a
	call [$a],setframe
	localstring $3
	cthis mgetfirsthint
	pop $3
	push $3
	spushs
	push $1
	spushs
	spop $a
	call [$a],getcx
	push $1
	spushs
	spop $a
	call [$a],getcy
	spop $a
	call [$a],setpos
	push $1
	spushs
	push 1
	popax
	sub 0,$a
	push $2
	spop $a
	call [$a],setframe
	push $3
	spushs
	push 600
	spop $a
	call [$a],setz
	push $3
	spushs
	push 0
	spop $a
	call [$a],play
	end method
	method mgetel
	localstring $1
	pop $1
	localdef $2
	push $1
	call grels,findsac
	pop $2
	push $2
	push 0
	cmpjae
	cmp0
	je l4323
	push $2
	call grels,get
	jmp l4322
l4323:
	push "null"
l4322:
	end method
	method mouse_move
	clparent StdGame,mouse_move
	end method
	method mputshadow
	localstring $1
	pop $1
	push $1
	call grtxt,remove
	push $1
	spushs
	push 1
	popax
	sub 0,$a
	push 3
	spop $a
	call [$a],setframe
	end method
	method advstdstate
	push igmstate
	push 1
	cmpje
	end method
	end class

	new real,rBehPopupStep
	push "popup_speed:"
	call dbconf,dbget
	pop rBehPopupStep
	push rBehPopupStep
	push 0
	cmpjle
	cmp0
	je l4325
	push 0.1
	pop rBehPopupStep
l4325:
	class advbanbeh
	parent classbehhero
	method init
	clparent classbehhero,init
	end method
	method _evalpopup
	push _icol
	push 0
	cmpjae
	cmp0
	je l4327
	localint $1
	push _icol
	pop $1
	localdef $2
	push _sdb
	spushs
	push _irow
	push $1
	spop $a
	call [$a],get
	pop $2
l4328:
	push $2
	push ")"
	cmpjne
	cmp0
	je l4329
	push ".pyz"
	call $2,contains
	cmp0
	je l4331
	localint $3
	push 0
	pop $3
	push "@"
	call $2,contains
	cmp0
	je l4333
	push "@"
	call $2,strgetfrom
	pop $3
	push "@"
	call $2,strgetto
	pop $2
l4333:
	push "antmpanim"
	push $2
	push iPopupZ
	cthis newanima
	push "antmpanim"
	pop $2
	push $2
	spushs
	push $3
	push 0
	spop $a
	call [$a],setframe
	push $2
	spushs
	spop $a
	call [$a],hide
l4331:
	push $1
	push _icol
	cmpje
	cmp0
	je l4335
	push $2
	call imgpopup,clone
	jmp l4334
l4335:
	push $2
	call imgpopup,blit
l4334:
	push "antmpanim"
	cthis hasvar
	cmp0
	je l4337
	delete antmpanim
l4337:
	add $1,1
	pop $1
	push _sdb
	spushs
	push _irow
	push $1
	spop $a
	call [$a],get
	pop $2
	jmp l4328
l4329:
	call imgpopup,hide
	push $1
	push _icol
	cmpja
	cmp0
	je l4339
	push "imgpopup"
	call ftpopup,link
	push 0
	call ftpopup,setpivottype
	call timpopup,setstart
	call timpopup,play
	jmp l4338
l4339:
	cthis reteval
l4338:
	jmp l4326
l4327:
	cthis reteval
l4326:
	end method
	method setaspopup
	localstring $1
	localint $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push "popup"
	cthis settype
	new string,_spoptype
	push $4
	pop _spoptype
	new string,_sdb
	push $1
	pop _sdb
	new int,_irow
	push $2
	pop _irow
	new int,_icol
	push $3
	pop _icol
	push "timpopup"
	push "advbanbeh0"
	cthis cycle=
	push A
	push "rzoom"
	push rBehPopupStep
	push "sbehaviour"
	cthis getname
	push "idir"
	push $4
	push "popin"
	cmpje
	cmp0
	je l4354
	push 1
	jmp l4353
l4354:
	push 1
	popax
	sub 0,$a
l4353:
	call timpopup,vars2
	push "setstart"
	push "advbanbeh1"
	call timpopup,addmethod
	new img,imgpopup
	push iPopupZ
	call imgpopup,setz
	new filter,ftpopup
	end method
	method advbanbeh0
	push idir
	push 0
	cmpja
	cmp0
	je l4341
	push rzoom
	push 1.0
	cmpja
	jmp l4343
l4341:
	push 0
	jmp l4343
l4342:
	push 1
l4343:
	cmp0
	jne l4345
	push idir
	push 0
	cmpjl
	cmp0
	je l4346
	push rzoom
	push rBehPopupStep
	cmpjle
	jmp l4348
l4346:
	push 0
	jmp l4348
l4347:
	push 1
l4348:
	jmp l4349
l4344:
	push 0
	jmp l4349
l4345:
	push 1
l4349:
	cmp0
	je l4350
	call ftpopup,unlink
	push idir
	push 0
	cmpja
	cmp0
	je l4352
	push "imgpopup"
	call imglastpopup,clone
	push iPopupZ
	call imglastpopup,setz
l4352:
	push 2
	push 2
	cthis transparent
	call imgpopup,create
	call imgpopup,hide
	push sbehaviour
	spushs
	spop $a
	call [$a],reteval
	call engine,redraw
	jmp l4340
l4350:
	push rzoom
	call ftpopup,setzoom
	call imgpopup,show
	push rBehPopupStep
	push idir
	pop $b
	popax
	mul $a,$b
	popax
	add rzoom,$a
	pop rzoom
	cthis play
l4340:
	end method
	method advbanbeh1
	push idir
	push 0
	cmpja
	cmp0
	je l4356
	push rBehPopupStep
	jmp l4355
l4356:
	push 1.0
l4355:
	pop rzoom
	end method
	method _evalopenbook
	cthis getname
	call ansysbook,sbehaviour=
	push schapter
	push "-last"
	cmpjne
	cmp0
	je l4358
	push "guibook_lastchapter"
	push schapter
	call clsave,set
	push "guibook_enabled_"
	push schapter
	pop $b
	popax
	add $a,$b
	call clsave,bset
l4358:
	cthis gui_openbook
	end method
	method _evalclosebook
	cthis getname
	call ansysbook,sbehaviour=
	cthis gui_closebook
	end method
	method setasopenbook
	localstring $1
	pop $1
	push "openbook"
	cthis settype
	new string,schapter
	push $1
	pop schapter
	end method
	method setasclosebook
	push "closebook"
	cthis settype
	end method
	end class

	class classbanadvmouse
	parent classadvmouse
	method init
	clparent classadvmouse,init
	end method
	method set
	localstring $1
	pop $1
	push PrzygodaMode
	cmp0
	je l4360
	call gameapi,getgamename
	spushs
	push "guiloupe"
	spop $a
	call [$a],hasvar
	cmp0
	je l4360
	call guiloupe,isvisible
	jmp l4362
l4360:
	push 0
	jmp l4362
l4361:
	push 1
l4362:
	cmp0
	je l4363
	push $1
	push "normal"
	cmpje
	cmp0
	je l4365
	push "glass"
	jmp l4364
l4365:
	push "glassac"
l4364:
	clparent classadvmouse,set
	jmp l4359
l4363:
	push $1
	clparent classadvmouse,set
l4359:
	end method
	end class

	delete advmouse
	new classbanadvmouse,advmouse
	call advmouse,stdload
	new gmimgvec,grguipck
	new int,iSzkielkoZ
	push 1340
	pop iSzkielkoZ
	new int,iHintStarZ
	push iSzkielkoZ
	push 5
	pop $b
	popax
	sub $a,$b
	pop iHintStarZ
	new int,iTakeZ
	push iSzkielkoZ
	push 10
	pop $b
	popax
	sub $a,$b
	pop iTakeZ
	new int,iPopupZ
	push iSzkielkoZ
	push 20
	pop $b
	popax
	sub $a,$b
	pop iPopupZ
	new int,iGuiBookZ
	push iSzkielkoZ
	push 35
	pop $b
	popax
	sub $a,$b
	pop iGuiBookZ
	new int,iGuiZ
	push iSzkielkoZ
	push 40
	pop $b
	popax
	sub $a,$b
	pop iGuiZ
	new int,iBookZ
	push iSzkielkoZ
	push 50
	pop $b
	popax
	sub $a,$b
	pop iBookZ
	new int,iSlotZ
	push iSzkielkoZ
	push 70
	pop $b
	popax
	sub $a,$b
	pop iSlotZ
	new int,iTxtButtonZ
	push iSzkielkoZ
	push 80
	pop $b
	popax
	sub $a,$b
	pop iTxtButtonZ
	new int,iSzkielkoPodZ
	push iSzkielkoZ
	push 90
	pop $b
	popax
	sub $a,$b
	pop iSzkielkoPodZ
	new int,iRotoIleRot
	push 20
	pop iRotoIleRot
	new int,iRotoIleObrotow
	push 2
	pop iRotoIleObrotow
	new int,bHOInventory
	new int,ishowpouptime
	push "showpopup_time:"
	call dbconf,dbget
	pop ishowpouptime
	call ishowpouptime,to_r
	push 1000.0
	pop $b
	popax
	mul $a,$b
	call igmdelay,to_r
	pop $b
	popax
	div $a,$b
	psax
	push 255.0
	pop $b
	popax
	div $a,$b
	psax
	call ccs,delay
	new img,imglastpopup
	new db,dbgame
	push LANGDIR
	push "gametxts.db"
	pop $b
	popax
	add $a,$b
	call dbgame,load
	new db,dbobject
	push LANGDIR
	push "objectives.db"
	pop $b
	popax
	add $a,$b
	call dbobject,load
	method guifontcolor
	push 240
	cthis grey
	end method
	method globsfx
	localstring $1
	localint $2
	pop $2
	pop $1
	localstring $3
	push "sfx"
	push $1
	pop $b
	popax
	add $a,$b
	pop $3
	push $3
	spushs
	spop $e
	new snd,[$e]
	push $3
	spushs
	push SFXPATH
	push $1
	pop $b
	popax
	add $a,$b
	push ".ogg"
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],load
	push $3
	spushs
	push $2
	spop $a
	call [$a],setvol
	end method
	push "magic1"
	push 60
	cthis globsfx
	push "hint1"
	push 25
	cthis globsfx
	push "hint2"
	push 50
	cthis globsfx
	push "popitem"
	push 80
	cthis globsfx
	push "retitem"
	push 30
	cthis globsfx
	push "openpopup"
	push 30
	cthis globsfx
	push "closepopup"
	push 30
	cthis globsfx
	push "butclick2"
	push 50
	cthis globsfx
	push "wysun2"
	push 100
	cthis globsfx
	class BanGuiSrc
	method init
	new anima,guihint
	push "scripts/sys_gui/hint.pyz"
	call guihint,load
	call guihint,hide
	push iGuiZ
	call guihint,setz
	new anima,guirose
	push "scripts/sys_gui/roza.pyz"
	call guirose,load
	push iGuiZ
	call guirose,setz
	call guirose,hide
	new anima,gguimenu
	push "scripts/sys_gui/menu.pyz"
	call gguimenu,load
	push iGuiZ
	call gguimenu,setz
	call gguimenu,hide
	new anima,gguishowhint
	push "scripts/sys_gui/showhintb.pyz"
	call gguishowhint,load
	push iHintStarZ
	call gguishowhint,setz
	call gguishowhint,hide
	new anima,guiloupe
	new anima,anpopexit
	push "scripts/sys_gui/popexit.pyz"
	call anpopexit,load
	call anpopexit,hide
	new anima,guipiorko
	push "scripts/sys_gui/piorko.pyz"
	call guipiorko,load
	call guipiorko,hide
	push iGuiBookZ
	push 2
	pop $b
	popax
	add $a,$b
	call guipiorko,setz
	new anima,gguiglass
	push "scripts/sys_gui/szkielko.pyz"
	call gguiglass,load
	push iSzkielkoZ
	call gguiglass,setz
	call gguiglass,hide
	new anima,gguipopup
	push "scripts/sys_gui/popup.pyz"
	call gguipopup,load
	push iPopupZ
	call gguipopup,setz
	call gguipopup,hide
	push A
	push "guihint"
	push "guirose"
	push "gguiglass"
	push "movoffsetl"
	cthis with
	push A
	push "gguimenu"
	push "guipiorko"
	push "movoffsetr"
	cthis with
	new db,dbitems
	push LANGDIR
	push "popup_items.db"
	pop $b
	popax
	add $a,$b
	call dbitems,load
	new font,fnthogui
	push "hoguifont:"
	call dbconf,dbget
	push "item_txtname_size:"
	call dbconf,dbget
	call fnthogui,load
	new anima,guimigot
	push "scripts/sys_gui/migot.pyz"
	call guimigot,load
	call guimigot,rle
	push iSzkielkoPodZ
	push 2
	pop $b
	popax
	add $a,$b
	call guimigot,setz
	call guimigot,hide
	new text,gtxtskipitem
	push "fnthogui"
	call gtxtskipitem,setfont
	push "skipdialog"
	call dbgame,dbget
	cthis guifontcolor
	call gtxtskipitem,txtsetcol
	call gtxtskipitem,hide
	new img,imgobjective
	push "scripts/sys_gui/podobjective.png"
	call imgobjective,load
	call imgobjective,hide
	end method
	method load
	push "dbitems"
	call dbitems,addtogamevars
	push "globalhint"
	call guihint,addtogamevars
	push "globalrose"
	call guirose,addtogamevars
	push "globalmenu"
	call gguimenu,addtogamevars
	push "globalshowhint"
	call gguishowhint,addtogamevars
	push "globalloupe"
	call guiloupe,addtogamevars
	push "globalpopexit"
	call anpopexit,addtogamevars
	push "globalpiorko"
	call guipiorko,addtogamevars
	push "globalpopup"
	call gguipopup,addtogamevars
	push "globalglass"
	call gguiglass,addtogamevars
	push "fnthogui"
	call fnthogui,addtogamevars
	push "globalmigot"
	call guimigot,addtogamevars
	push "gtxtskipitem"
	call gtxtskipitem,addtogamevars
	push "imgobjective"
	call imgobjective,addtogamevars
	cthis loadguiloupe
	call banbook,load
	end method
	method loadguiloupe
	push "e1_mg09_szkielko_finished"
	call clsave,bis
	cmp0
	je l4367
	push "scripts/sys_gui/reka2.pyz"
	call guiloupe,load
	jmp l4366
l4367:
	push "scripts/sys_gui/reka.pyz"
	call guiloupe,load
l4366:
	call guiloupe,hide
	end method
	end class

	new BanGuiSrc,banguisrc
	class BanBook
	method init
	new anima,ansysbook
	push "scripts/sys_book/book2.pyz"
	call ansysbook,load
	call ansysbook,hide
	new db,dbbook
	push LANGDIR
	push "sys_book_story.db"
	pop $b
	popax
	add $a,$b
	call dbbook,loadscript
	new img,imgrozkladl
	new img,imgrozkladr
	new int,bookfontsize
	push "bookfontsize:"
	call dbconf,dbgetint
	pop bookfontsize
	new int,ibookodstep
	push "ibookodstep:"
	call dbconf,dbgetint
	pop ibookodstep
	new int,ilettersinrow
	push "ilettersinrow:"
	call dbconf,dbgetint
	pop ilettersinrow
	new font,ftbook
	push "bookfont:"
	call dbconf,dbget
	push bookfontsize
	call ftbook,load
	new font,ftitalic
	push "bookitalic:"
	call dbconf,dbget
	push bookfontsize
	call ftitalic,load
	new font,ftbold
	push "bookbold:"
	call dbconf,dbget
	push bookfontsize
	call ftbold,load
	new font,ftitalicbold
	push "bookitalicbold:"
	call dbconf,dbget
	push bookfontsize
	call ftitalicbold,load
	new int,irbook
	push "bookfontcolor:"
	push 1
	call dbconf,dbgets
	pop irbook
	new int,igbook
	push "bookfontcolor:"
	push 2
	call dbconf,dbgets
	pop igbook
	new int,ibbook
	push "bookfontcolor:"
	push 3
	call dbconf,dbgets
	pop ibbook
	new real,rmargin
	push "bookmargin:"
	call dbconf,dbget
	pop rmargin
	new text,txttest
	push "ftbook"
	call txttest,setfont
	new int,icurpage
	push 1
	pop icurpage
	new vector,vakap
	push "string"
	call vakap,type
	new string,sakappref
	push "s"
	pop sakappref
	new int,ilepages
	push 0
	pop ilepages
	new vector,vparse
	push "string"
	call vparse,type
	new int,ipagew
	push 1.0
	push rmargin
	push 2
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	sub $a,$b
	call ansysbook,getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	mul $a,$b
	pop ipagew
	new int,ipageh
	push 1.0
	push rmargin
	push 2
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	sub $a,$b
	call ansysbook,geth
	pop $b
	popax
	mul $a,$b
	pop ipageh
	new int,ilpagex
	call ansysbook,getpx
	push rmargin
	call ansysbook,getw
	pop $b
	popax
	mul $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	pop ilpagex
	new int,ilpagey
	call ansysbook,getpy
	push rmargin
	call ansysbook,geth
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	pop ilpagey
	localint $1
	call ansysbook,getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $1
	localint $2
	call ansysbook,geth
	pop $2
	new int,irpagex
	call ansysbook,getcx
	push rmargin
	call ansysbook,getw
	pop $b
	popax
	mul $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	add $a,$b
	pop irpagex
	new int,irpagey
	push ilpagey
	pop irpagey
	push $1
	push $2
	cthis transparent
	call imgrozkladl,create
	call ansysbook,getpx
	call ansysbook,getpy
	call imgrozkladl,setpos
	push $1
	push $2
	cthis transparent
	call imgrozkladr,create
	call imgrozkladl,getex
	call imgrozkladl,getpy
	call imgrozkladr,setpos
	new anima,angguibook
	push "scripts/sys_book/guibook.pyz"
	call angguibook,load
	call angguibook,hide
	push iGuiBookZ
	call angguibook,setz
	call angguibook,movoffsetr
	end method
	method load
	push "globalsysbook"
	call ansysbook,addtogamevars
	push "bookpagel"
	call imgrozkladl,addtogamevars
	push "bookpager"
	call imgrozkladr,addtogamevars
	push A
	push "ipagelw"
	call imgrozkladl,getw
	push "ipagerw"
	call imgrozkladr,getw
	cthis vars2
	push "globalguibook"
	call angguibook,addtogamevars
	end method
	method parse
	localint $1
	push 0
	pop $1
	localint $2
	push 0
	pop $2
	localint $3
	push 1
	pop $3
	localint $4
	localint $5
	localint $6
	localint $7
	localint $8
	localint $9
	localint $10
	localstring $11
	localstring $12
	localstring $13
	localstring $14
	push ""
	pop $12
	push ""
	pop $13
	localint $15
	push 0
	pop $15
	localint $16
	push ipageh
	cthis rowh
	pop $b
	popax
	div $a,$b
	psax
	pop $16
	localint $17
	push 0
	pop $17
l4368:
	push $17
	call dbbook,getrowsno
	cmpjl
	cmp0
	je l4369
	jmp l4371
l4370:
	add $17,1
	pop $17
	jmp l4368
l4371:
	localint $18
	push 0
	pop $18
l4372:
	push $18
	push $17
	call dbbook,getcolsno
	cmpjl
	cmp0
	je l4373
	jmp l4375
l4374:
	add $18,1
	pop $18
	jmp l4372
l4375:
	push $17
	push $18
	call dbbook,get
	pop $11
	push $1
	push 0
	cmpje
	cmp0
	je l4377
	push 0
	push 1
	call $11,getb
	push "<"
	cmpje
	cmp0
	je l4379
	push sakappref
	push 1
	call $11,strsubb
	spushs
	push 1
	spop $h
	call $h,strsube
	pop $b
	popax
	add $a,$b
	pop $14
	push 0
	pop $6
	push 0
	pop $7
	push " "
	call $14,contains
	cmp0
	je l4381
	push $14
	push " "
	call vparse,vecbuildfromstring
	push "italic"
	call vparse,contains
	pop $6
	push "bold"
	call vparse,contains
	pop $7
l4381:
	push $14
	spushs
	spop $e
	new string,[$e]
	push "    "
	pop $12
	push $12
	pop $13
	push 0
	pop $7
	push $14
	spushs
	push A
	push "sakapit"
	push sakappref
	call $14,strsubbs
	push "pageside"
	push $2
	push "page"
	push $3
	push "irow"
	push $15
	push "bitalic"
	push $6
	push "bbold"
	push $7
	push "stresc"
	push ""
	push "ilines"
	push 0
	spop $a
	call [$a],vars2
	push $14
	call vakap,add
	push 1
	pop $1
l4379:
	jmp l4376
l4377:
	push $1
	push 1
	cmpje
	cmp0
	je l4383
	push $11
	push "<end>"
	cmpje
	cmp0
	je l4385
	push 0
	pop $1
	push $14
	spushs
	push $12
	spop $a
	call [$a],stresc=
	push $14
	spushs
	push "sline"
	push $7
	pop $b
	popax
	add $a,$b
	push $13
	spop $a
	call [$a],var2
	push $14
	spushs
	push $7
	push 1
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],ilines=
	push ""
	pop $12
	push $14
	spushs
	spop $a
	call [$a],irow
	push $7
	pop $b
	popax
	add $a,$b
	push $16
	cmpja
	cmp0
	je l4387
	push $14
	spushs
	push 0
	spop $a
	call [$a],irow=
	push $2
	push 0
	cmpje
	cmp0
	je l4389
	push 1
	pop $2
	push $14
	spushs
	push 1
	spop $a
	call [$a],pageside=
	jmp l4388
l4389:
	push 0
	pop $2
	push $14
	spushs
	push 0
	spop $a
	call [$a],pageside=
	add $3,1
	pop $3
	push $14
	spushs
	push $3
	spop $a
	call [$a],page=
l4388:
	push $7
	push 2
	pop $b
	popax
	add $a,$b
	pop $15
	jmp l4386
l4387:
	push $14
	spushs
	spop $a
	call [$a],irow
	push $7
	pop $b
	popax
	add $a,$b
	push 2
	pop $b
	popax
	add $a,$b
	pop $15
l4386:
	push 0
	pop $7
	push $3
	pop ilepages
	jmp l4384
l4385:
	push $11
	push " "
	pop $b
	popax
	add $a,$b
	popax
	add $12,$a
	pop $12
	push $13
	push $11
	pop $b
	popax
	add $a,$b
	spushs
	spop $h
	call $h,length
	push ilettersinrow
	cmpja
	cmp0
	je l4391
	push $14
	spushs
	push "sline"
	push $7
	pop $b
	popax
	add $a,$b
	push $13
	spop $a
	call [$a],var2
	push $11
	push " "
	pop $b
	popax
	add $a,$b
	pop $13
	add $7,1
	pop $7
	jmp l4390
l4391:
	push $11
	push " "
	pop $b
	popax
	add $a,$b
	popax
	add $13,$a
	pop $13
l4390:
l4384:
l4383:
l4376:
	jmp l4374
l4373:
	jmp l4370
l4369:
	end method
	method rowh
	push bookfontsize
	push ibookodstep
	pop $b
	popax
	add $a,$b
	end method
	method nextpage
	push icurpage
	push 1
	pop $b
	popax
	add $a,$b
	cthis openpage
	end method
	method prevpage
	push icurpage
	push 1
	pop $b
	popax
	sub $a,$b
	cthis openpage
	end method
	method openpage
	localint $1
	pop $1
	push ilepages
	push 0
	cmpjle
	cmp0
	je l4393
	ret
l4393:
	push $1
	push 0
	cmpjle
	cmp0
	je l4395
	push ilepages
	pop $1
	jmp l4394
l4395:
	push $1
	push ilepages
	cmpja
	cmp0
	je l4397
	push 1
	pop $1
l4397:
l4394:
	push $1
	pop icurpage
	localint $2
	push 0
	pop $2
l4398:
	push $2
	call vakap,size
	cmpjl
	cmp0
	je l4399
	jmp l4401
l4400:
	add $2,1
	pop $2
	jmp l4398
l4401:
	push $2
	call vakap,get
	spushs
	spop $a
	call [$a],page
	push $1
	cmpje
	cmp0
	je l4403
	push $2
	call vakap,get
	cthis open
	call imgrozkladl,show
	call imgrozkladr,show
	ret
l4403:
	jmp l4400
l4399:
	end method
	method openlastpage
	push "guibook_curpage"
	call clsave,get
	pop icurpage
	push icurpage
	push 0
	cmpjle
	cmp0
	je l4405
	push 1
	pop icurpage
l4405:
	push icurpage
	cthis openpage
	end method
	method openchapter
	localstring $1
	pop $1
	push sakappref
	push $1
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	call vakap,contains
	neg
	cmp0
	je l4407
	ret
l4407:
	push $1
	cthis open
	end method
	method openlast
	call vakap,empty
	cmp0
	je l4409
	ret
l4409:
	localdef $1
	push "guibook_lastchapter"
	call clsave,get
	pop $1
	push $1
	push "null"
	cmpje
	cmp0
	je l4411
	call vakap,first
	spushs
	push sakappref
	spop $h
	call $h,strsubbs
	pop $1
l4411:
	push $1
	cthis openchapter
	end method
	method open
	localstring $1
	pop $1
	push $1
	spushs
	spop $a
	call [$a],page
	pop icurpage
	push "guibook_curpage"
	push icurpage
	call clsave,set
	new text,txt1
	localdef $2
	call imgrozkladl,getpx
	pop $2
	localdef $3
	call imgrozkladl,getpy
	pop $3
	call imgrozkladl,getw
	call imgrozkladl,geth
	cthis transparent
	call imgrozkladl,create
	push iBookZ
	push 1
	pop $b
	popax
	add $a,$b
	call imgrozkladl,setz
	push $2
	push $3
	call imgrozkladl,setpos
	call imgrozkladl,hide
	localdef $2
	call imgrozkladr,getpx
	pop $2
	localdef $3
	call imgrozkladr,getpy
	pop $3
	call imgrozkladr,getw
	call imgrozkladr,geth
	cthis transparent
	call imgrozkladr,create
	call imgrozkladr,hide
	push iBookZ
	push 1
	pop $b
	popax
	add $a,$b
	call imgrozkladr,setz
	push $2
	push $3
	call imgrozkladr,setpos
	localdef $4
	push $1
	spushs
	spop $a
	call [$a],page
	pop $4
	localint $5
	push 0
	pop $5
l4412:
	push $5
	call vakap,size
	cmpjl
	cmp0
	je l4413
	jmp l4415
l4414:
	add $5,1
	pop $5
	jmp l4412
l4415:
	localdef $6
	push $5
	call vakap,get
	pop $6
	push $6
	spushs
	spop $a
	call [$a],page
	push $4
	cmpje
	cmp0
	je l4417
	push "guibook_enabled_"
	push $6
	spushs
	spop $a
	call [$a],sakapit
	pop $b
	popax
	add $a,$b
	call clsave,bis
	jmp l4419
l4417:
	push 0
	jmp l4419
l4418:
	push 1
l4419:
	cmp0
	je l4420
	push $6
	spushs
	spop $a
	call [$a],bitalic
	cmp0
	je l4422
	push $6
	spushs
	spop $a
	call [$a],bbold
	cmp0
	je l4424
	push "ftitalicbold"
	call txt1,setfont
	jmp l4423
l4424:
	push "ftitalic"
	call txt1,setfont
l4423:
	jmp l4421
l4422:
	push $6
	spushs
	spop $a
	call [$a],bbold
	cmp0
	je l4426
	push "ftbold"
	call txt1,setfont
	jmp l4425
l4426:
	push "ftbook"
	call txt1,setfont
l4425:
l4421:
	localdef $7
	push $6
	spushs
	spop $a
	call [$a],ilines
	pop $7
	localint $8
	push 0
	pop $8
l4427:
	push $8
	push $7
	cmpjl
	cmp0
	je l4428
	jmp l4430
l4429:
	add $8,1
	pop $8
	jmp l4427
l4430:
	push $6
	spushs
	push "sline"
	push $8
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	call txt1,set
	push irbook
	push igbook
	push ibbook
	call txt1,createtxt
	push $6
	spushs
	spop $a
	call [$a],pageside
	push 0
	cmpje
	cmp0
	je l4432
	push ilpagex
	push ilpagey
	push $6
	spushs
	spop $a
	call [$a],irow
	push $8
	pop $b
	popax
	add $a,$b
	cthis rowh
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	call txt1,setpos
	push "txt1"
	call imgrozkladl,blit
	jmp l4431
l4432:
	push irpagex
	push ilpagey
	push $6
	spushs
	spop $a
	call [$a],irow
	push $8
	pop $b
	popax
	add $a,$b
	cthis rowh
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	call txt1,setpos
	push "txt1"
	call imgrozkladr,blit
l4431:
	jmp l4429
l4428:
l4420:
	jmp l4414
l4413:
	delete txt1
	end method
	method close
	call imgrozkladl,hide
	call imgrozkladr,hide
	end method
	end class

	new BanBook,banbook
	class BanGui
	method init
	new gmimgvec,grguiloupe
	push 2
	push 2
	cthis transparent
	call imglastpopup,create
	call imglastpopup,hide
	push iPopupZ
	call imglastpopup,setz
	end method
	method isadvclass
	call gameapi,getgamename
	spushs
	push "clcamera"
	spop $a
	call [$a],hasvar
	end method
	method initgui
	localdef $1
	cthis getgraphpath
	pop $1
	new int,gui_skipclick
	push 0
	pop gui_skipclick
	push "sys_gui"
	cthis path=
	new int,iItemSlots
	push 8
	pop iItemSlots
	push "guinventory"
	push "inventory.pyz"
	push iGuiZ
	cthis newanima
	push "guitemslot"
	push "items.pyz"
	push iGuiZ
	cthis newanima
	push "guileft"
	push "itemleft.pyz"
	push iGuiZ
	cthis newanima
	push "guiright"
	push "itemright.pyz"
	push iGuiZ
	cthis newanima
	call guileft,hide
	call guiright,hide
	push "globalhint"
	push "guihint"
	cthis copyanima
	call guihint,show
	push iGuiZ
	call guihint,setz
	push "guihint"
	push "guihinsub"
	cthis copyanima
	push 1
	call guihinsub,play
	push "globalrose"
	push "guirose"
	cthis copyanima
	call guirose,show
	push "globalmenu"
	push "guimenu"
	cthis copyanima
	call guimenu,show
	push "globalshowhint"
	push "guishowhint"
	cthis copyanima
	call guishowhint,hide
	push "guishowhint"
	push "guishowhint2"
	cthis copyanima
	push "guishowhint"
	push "guishowhint3"
	cthis copyanima
	push "globalglass"
	push "guiglass"
	cthis copyanima
	push iGuiZ
	call guiglass,setz
	call guiglass,show
	push "globalloupe"
	push "guiloupe"
	cthis copyanima
	push "enabled"
	push 1
	call guiloupe,var2
	push "disable"
	push "BanGui0"
	call guiloupe,addmethod
	push "enable"
	push "BanGui1"
	call guiloupe,addmethod
	push iSzkielkoZ
	call guiloupe,setz
	call guiloupe,hide
	push "guiloupe"
	push "guiloupemask"
	cthis copyanima
	push 1
	push 0
	call guiloupemask,setframe
	push iSzkielkoPodZ
	call guiloupemask,setz
	new filter,ftguiloupe
	new gmimgvec,grgotopckstack
	new gmimgvec,grguitemslots
	localdef $2
	push 3
	pop $2
	call guitemslot,hide
	push A
	push "bdokuj"
	push "guinventory_dokuj"
	call clsave,bis
	call guinventory,vars2
	push bHOInventory
	cmp0
	je l4434
	push "guihoinventory"
	push "hoinventory.pyz"
	push 505
	cthis newanima
	push 505
	call guinventory,setz
	call guinventory,hide
	jmp l4433
l4434:
	localint $3
	push 0
	pop $3
l4435:
	push $3
	push iItemSlots
	cmpjl
	cmp0
	je l4436
	jmp l4438
l4437:
	add $3,1
	pop $3
	jmp l4435
l4438:
	cthis additemslot
	jmp l4437
l4436:
	push A
	push "blockout"
	push 0
	push "sitemshow"
	push "null"
	call guinventory,vars2
	call guinventory,show
l4433:
	push "guinventory"
	push "guinventorydok"
	cthis copyanima
	cthis inventory_dock
	localstring $4
	push "butclick"
	pop $4
	cthis isadvclass
	cmp0
	je l4440
	push "clickon"
	pop $4
	push "guinventory"
	push "guinventory"
	push "guinventory"
	clparent classadvbut,setasbutton2
	push 0
	call guinventory,bautohint=
	push "butisin"
	push "BanGui2"
	call guinventory,addmethod
	push "guileft"
	push "guileft"
	push "guileft"
	clparent classadvbut,setasbutton2
	push 0
	call guileft,bautohint=
	push "guiright"
	push "guiright"
	push "guiright"
	clparent classadvbut,setasbutton2
	push 0
	call guiright,bautohint=
	jmp l4439
l4440:
	push bHOInventory
	neg
	cmp0
	je l4445
	call guinventory,BanGui3
	call guileft,Button_stdms
	call guiright,Button_stdms
	push "guileft"
	call butgame,add
	push "guiright"
	call butgame,add
	push "butclick"
	pop $4
l4445:
l4439:
	push $4
	push "BanGui6"
	call guinventory,addmethod
	push "_timrevinv"
	push "BanGui7"
	cthis cycle=
	push A
	push "speed"
	push 20
	push "actspeed"
	push 0
	call _timrevinv,vars2
	push "startrew"
	push "BanGui8"
	call _timrevinv,addmethod
	push $4
	push "BanGui9"
	call guileft,addmethod
	push $4
	push "BanGui10"
	call guiright,addmethod
	push "butlrel"
	push "stoprewinventory"
	call guileft,addmethod
	push "butlrel"
	push "stoprewinventory"
	call guiright,addmethod
	push "_timinv"
	push "BanGui11"
	cthis cycle=
	push A
	push "dir"
	push 1
	popax
	sub 0,$a
	push "speed"
	push 15
	call _timinv,vars2
	push "timunblockinventory"
	push 2000
	push "BanGui12"
	cthis timer=
	cthis isadvclass
	cmp0
	je l4473
	push "clickon"
	pop $4
	push "guihint"
	push "guihint"
	push "guihint"
	clparent classadvbut,setasbutton2
	push "guiglass"
	push "guiglass"
	push "guiglass"
	clparent classadvbut,setasbutton2
	push "loupe"
	call guiglass,smousecursor=
	push 0
	call guiglass,bautohint=
	push 0
	call guihint,bautohint=
	jmp l4472
l4473:
	call guinventory,BanGui13
	call guiglass,BanGui16
	call guihint,BanGui19
	push "butclick"
	pop $4
l4472:
	push $4
	push "BanGui22"
	call guiglass,addmethod
	push $4
	push "BanGui23"
	call guihint,addmethod
	push "onfinish"
	push "BanGui24"
	call guihint,addmethod
	push "globalmigot"
	push "guimigot"
	cthis copyanima
	push $1
	cthis setgraphpath
	new string,_clicked_guiitem
	cthis freeactitem
	cthis isadvclass
	cmp0
	je l4502
	new advDelayMover,guimov
	jmp l4501
l4502:
	new DelayMover,guimov
	push 1
	call guimov,b2clicks=
l4501:
	call guimov,unlock
	new gmimgvec,grguitems
	new string,sanitemprefix
	push "anitem_"
	pop sanitemprefix
	cthis book_load
	push bHOInventory
	neg
	cmp0
	je l4504
	localint $3
	push 0
	pop $3
l4505:
	push $3
	call grguipck,size
	cmpjl
	cmp0
	je l4506
	jmp l4508
l4507:
	add $3,1
	pop $3
	jmp l4505
l4508:
	push $3
	call grguipck,get
	cthis _addtopck
	jmp l4507
l4506:
	cthis inventory_show
	push 0
	push 0
	push 0
	push 0
	new Rect,invhide
	push 0
	call guinventory,getpy
	push igmappw
	push igmapph
	call invhide,setborders
	localint $5
	call guinventory,bdokuj
	pop $5
	push 0
	call guinventory,bdokuj=
	cthis inventory_hide
	push 0
	push 0
	push 0
	push 0
	new Rect,invshow
	call guileft,getex
	call guinventory,getpy
	call guiright,getpx
	push igmapph
	call invshow,setborders
	push $5
	call guinventory,bdokuj=
	push $5
	cmp0
	je l4510
	cthis inventory_show
l4510:
l4504:
	new gmimgvec,grhints
	cthis isadvclass
	cmp0
	je l4512
	push "BanGui25"
	pop $4
	push "_tim_autohint"
	push "autohintdelay:"
	call dbconf,dbget
	push $4
	cthis timplay
l4512:
	cthis isadvclass
	cmp0
	je l4522
	new img,imgskipdialog
	call gtxtskipitem,getw
	call gtxtskipitem,geth
	cthis transparent
	call imgskipdialog,create
	push "gtxtskipitem"
	call imgskipdialog,blit
	push iTxtButtonZ
	call imgskipdialog,setz
	call imgskipdialog,hide
	call imgskipdialog,Button_isin
	call imgskipdialog,Button_moveonms
	call imgskipdialog,Button_moveoffms
	push "butclick"
	push "BanGui26"
	call imgskipdialog,addmethod
	push "imgskipdialog"
	call butgame,add
l4522:
	new img,imgobject
	call imgobject,BanGui27
	push "txtobject1"
	push ""
	push "fntsubtitle"
	call subtitle,getcolor
	cthis newtext
	push "txtobject2"
	push ""
	push "fntsubtitle"
	call subtitle,getcolor
	cthis newtext
	push "txtobject3"
	push ""
	push "fntsubtitle"
	call subtitle,getcolor
	cthis newtext
	new gmimgvec,grobjectives
	push A
	push "imgobject"
	push "txtobject1"
	push "txtobject2"
	push "txtobject3"
	call grobjectives,addlist
	call grobjectives,hide
	new vector,_vecobjective
	push "string"
	call _vecobjective,type
	cthis save_game
	end method
	method BanGui0
	push 0
	pop enabled
	end method
	method BanGui1
	push 1
	pop enabled
	end method
	method BanGui2
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	cthis getpx
	cmpjae
	cmp0
	je l4441
	push $1
	cthis getex
	cmpjl
	cmp0
	je l4441
	push $2
	cthis getpy
	cmpjae
	jmp l4443
l4441:
	push 0
	jmp l4443
l4442:
	push 1
l4443:
	end method
	method BanGui3
	cthis Button_isin
	push "butmoveon"
	push "BanGui4"
	cthis addmethod
	push "butmoveoff"
	push "BanGui5"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method BanGui4
	cthis advstdstate
	neg
	cmp0
	je l4447
	ret
l4447:
	call advmouse,setact
	end method
	method BanGui5
	cthis advstdstate
	neg
	cmp0
	je l4449
	ret
l4449:
	call advmouse,setstd
	end method
	method BanGui6
	call mouse,getpos
	push 1
	push 0
	call guinventorydok,isin
	cmp0
	je l4451
	push bdokuj
	neg
	pop bdokuj
	push "guinventory_dokuj"
	push bdokuj
	call clsave,set
	cthis inventory_dock
	call sfxbutclick2,play
	push bdokuj
	push 0
	cmpje
	cmp0
	je l4453
	cthis inventory_check
l4453:
l4451:
	end method
	method BanGui7
	push actspeed
	cthis moveslots
	cthis play
	end method
	method BanGui8
	localint $1
	pop $1
	push $1
	push speed
	pop $b
	popax
	mul $a,$b
	pop actspeed
	push 1
	cthis stop
	end method
	method BanGui9
	cthis advstdstate
	neg
	cmp0
	je l4455
	ret
l4455:
	push 1
	call _timrevinv,startrew
	end method
	method BanGui10
	cthis advstdstate
	neg
	cmp0
	je l4457
	ret
l4457:
	push 1
	popax
	sub 0,$a
	call _timrevinv,startrew
	end method
	method BanGui11
	localdef $1
	push dir
	push speed
	pop $b
	popax
	mul $a,$b
	pop $1
	push dir
	push 0
	cmpja
	cmp0
	je l4459
	cthis inventory_hidden
	cmp0
	je l4461
	jmp l4460
l4461:
	push $1
	cthis inventory_move
	cthis play
l4460:
	jmp l4458
l4459:
	cthis inventory_showed
	cmp0
	je l4463
	localint $2
	push 0
	pop $2
l4464:
	push $2
	call grgotopckstack,size
	cmpjl
	cmp0
	je l4465
	jmp l4467
l4466:
	add $2,1
	pop $2
	jmp l4464
l4467:
	push $2
	call grgotopckstack,get
	spushs
	spop $a
	call [$a],_item_gotopck2
	jmp l4466
l4465:
	cthis isretitemstate
	cmp0
	je l4469
	cthis item_gotopck
	jmp l4468
l4469:
	call guinventory,sitemshow
	push "null"
	cmpjne
	cmp0
	je l4471
	call guinventory,sitemshow
	cthis getanitem
	cthis showhint
	push "null"
	call guinventory,sitem=
l4471:
l4468:
	jmp l4462
l4463:
	push $1
	cthis inventory_move
	cthis inventory_showed
	popax
	cthis play
l4462:
l4458:
	end method
	method BanGui12
	push 0
	call guinventory,blockout=
	end method
	method BanGui13
	cthis Button_isinalpha
	push "butmoveon"
	push "BanGui14"
	cthis addmethod
	push "butmoveoff"
	push "BanGui15"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method BanGui14
	cthis advstdstate
	neg
	cmp0
	je l4475
	ret
l4475:
	call advmouse,setact
	end method
	method BanGui15
	cthis advstdstate
	neg
	cmp0
	je l4477
	ret
l4477:
	call advmouse,setstd
	end method
	method BanGui16
	cthis Button_isinalpha
	push "butmoveon"
	push "BanGui17"
	cthis addmethod
	push "butmoveoff"
	push "BanGui18"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method BanGui17
	cthis advstdstate
	neg
	cmp0
	je l4479
	ret
l4479:
	call advmouse,setact
	end method
	method BanGui18
	cthis advstdstate
	neg
	cmp0
	je l4481
	ret
l4481:
	call advmouse,setstd
	end method
	method BanGui19
	cthis Button_isinalpha
	push "butmoveon"
	push "BanGui20"
	cthis addmethod
	push "butmoveoff"
	push "BanGui21"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method BanGui20
	cthis advstdstate
	neg
	cmp0
	je l4483
	ret
l4483:
	call advmouse,setact
	end method
	method BanGui21
	cthis advstdstate
	neg
	cmp0
	je l4485
	ret
l4485:
	call advmouse,setstd
	end method
	method BanGui22
	cthis LOUPE_CLICK
	cthis isadvclass
	cmp0
	je l4487
	push "beh_LOUPE_CLICK"
	cthis playbehif
	popax
l4487:
	push 1
	popax
	sub 0,$a
	cthis actionnr
	push 0
	cmpje
	cmp0
	je l4489
	cthis show_loupe
	call sfxmagic1,playif
	jmp l4488
l4489:
	push 1
	popax
	sub 0,$a
	cthis actionnr
	push 1
	cmpje
	cmp0
	je l4491
	cthis hide_loupe
l4491:
l4488:
	end method
	method BanGui23
	cthis isadvclass
	cmp0
	je l4493
	cthis actionname
	push "hint"
	cmpje
	cmp0
	je l4495
	call guihinsub,anhide
	call guirose,anhide
	push "click"
	cthis play
	push "beh_HINT_CLICK"
	cthis playbehif
	popax
l4495:
	jmp l4492
l4493:
	cthis advstdstate
	neg
	cmp0
	je l4497
	ret
l4497:
	call gameapi,getgamename
	spushs
	spop $a
	call [$a],HINT_CLICK
l4492:
	end method
	method BanGui24
	cthis actionname
	spushs
	push "click"
	cmpst
	jne l4499
	spop $a
	push "grow"
	cthis play
	jmp l4498
l4499:
	push "grow"
	cmpst
	jne l4500
	spop $a
	push "hint"
	cthis play
	push 1
	call guihinsub,play
	push 0
	call guirose,play
	jmp l4498
l4500:
	spop $a
l4498:
	end method
	method BanGui25
	call grhints,free
	localint $1
	push 0
	pop $1
l4513:
	push $1
	call grbuts,size
	cmpjl
	cmp0
	je l4514
	jmp l4516
l4515:
	add $1,1
	pop $1
	jmp l4513
l4516:
	push $1
	call grbuts,get
	spushs
	spop $a
	call [$a],ishintablebut
	cmp0
	je l4518
	push $1
	call grbuts,get
	call grhints,add
l4518:
	jmp l4515
l4514:
	call grhints,size
	cmp0
	je l4520
	localdef $2
	call grhints,rand
	pop $2
	push $2
	spushs
	spop $a
	call [$a],getcx
	push $2
	spushs
	spop $a
	call [$a],getcy
	call guimigot,setpos
	push 0
	call guimigot,play
l4520:
	cthis play
	end method
	method BanGui26
	cthis skipactbeh
	end method
	method BanGui27
	push A
	push "sobject"
	push "null"
	cthis vars2
	push "timfinobj"
	push 5000
	push "BanGui28"
	cthis timer=
	end method
	method BanGui28
	push ishowpouptime
	push "null"
	call imgobject,anzoomfadeout
	end method
	method behstarteropt
	localstring $1
	localstring $2
	localint $3
	localint $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $5
	spushs
	push "-skip"
	cmpst
	jne l4524
	spop $a
	jmp l4523
l4524:
	spop $a
	add $4,1
	pop $4
l4523:
	push $4
	end method
	method loupe_visible
	call guiloupe,isvisible
	end method
	method update_loupepos
	cthis loupe_visible
	cmp0
	je l4526
	call guiloupe,enabled
	jmp l4528
l4526:
	push 0
	jmp l4528
l4527:
	push 1
l4528:
	cmp0
	je l4529
	call mouse,getpos
	cthis setpos_loupe
l4529:
	end method
	method setpos_loupe
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call guiloupe,setpos
	push $1
	push $2
	call guiloupemask,setpos
	end method
	method show_loupe
	push 1
	push 0
	call guiglass,setframe
	call guiloupe,show
	call grguiloupe,size
	cmp0
	je l4531
	call guiloupemask,show
	push "guiloupemask"
	call ftguiloupe,link
	localint $1
	push 0
	pop $1
l4532:
	push $1
	call grguiloupe,size
	cmpjl
	cmp0
	je l4533
	jmp l4535
l4534:
	add $1,1
	pop $1
	jmp l4532
l4535:
	localdef $2
	push $1
	call grguiloupe,get
	pop $2
	push $2
	spushs
	spop $a
	call [$a],mtype
	push "loupe"
	cmpje
	cmp0
	je l4537
	push $2
	call ftguiloupe,loupe
	jmp l4536
l4537:
	push $2
	spushs
	spop $a
	call [$a],mtype
	push "umask"
	cmpje
	cmp0
	je l4539
	push $2
	spushs
	spop $a
	call [$a],startumask
l4539:
l4536:
	jmp l4534
l4533:
l4531:
	cthis update_loupepos
	end method
	method hide_loupe
	call ftguiloupe,removeallblend
	call ftguiloupe,unlink
	call guiloupe,hide
	call guiloupemask,hide
	push "BanGui29"
	call grguiloupe,eval
	push 0
	push 0
	call guiglass,setframe
	call advmouse,setstd
	end method
	method BanGui29
	push mtype
	push "umask"
	cmpje
	cmp0
	je l4541
	cthis stopumask
l4541:
	end method
	method showhint
	localstring $1
	pop $1
	push $1
	push 0
	push 0
	cthis showhintdxdy
	end method
	method showhintdxdy
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $1
	spushs
	spop $a
	call [$a],getcx
	push $2
	pop $b
	popax
	add $a,$b
	push $1
	spushs
	spop $a
	call [$a],getcy
	push $3
	pop $b
	popax
	add $a,$b
	cthis showhintxy
	end method
	method showhintxy
	localint $1
	localint $2
	pop $2
	pop $1
	push 1
	popax
	sub 0,$a
	call guishowhint,isplaying
	cmp0
	je l4543
	push 1
	popax
	sub 0,$a
	call guishowhint2,isplaying
	cmp0
	je l4545
	push 1
	popax
	sub 0,$a
	call guishowhint3,isplaying
	cmp0
	je l4547
	push $1
	push $2
	call guishowhint,_showhint
	jmp l4546
l4547:
	push $1
	push $2
	call guishowhint3,_showhint
l4546:
	jmp l4544
l4545:
	push $1
	push $2
	call guishowhint2,_showhint
l4544:
	jmp l4542
l4543:
	push $1
	push $2
	call guishowhint,_showhint
l4542:
	end method
	method _showhint
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	cthis setpos
	push 1
	popax
	sub 0,$a
	cthis play
	end method
	method showhintitem
	localstring $1
	pop $1
	push 1
	call guinventory,blockout=
	push $1
	call guinventory,sitemshow=
	cthis inventory_playing
	cmp0
	jne l4550
	cthis inventory_hidden
	jmp l4551
l4549:
	push 0
	jmp l4551
l4550:
	push 1
l4551:
	cmp0
	je l4552
	cthis inventory_in
	jmp l4548
l4552:
	push $1
	cthis getanitem
	cthis showhint
l4548:
	end method
	method showhintitemif
	localstring $1
	pop $1
	push "ma_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l4554
	push $1
	cthis showhintitem
l4554:
	end method
	method book_load
	localdef $1
	cthis getgraphpath
	pop $1
	push "sys_book"
	cthis path=
	push "globalsysbook"
	push "ansysbook"
	cthis copyanima
	push iBookZ
	call ansysbook,setz
	call ansysbook,hide
	push "guibooknext"
	push "next.pyz"
	push iBookZ
	cthis newanima
	push "guibookprev"
	push "prev.pyz"
	push iBookZ
	cthis newanima
	push "guibookexit"
	push "exit.pyz"
	push iBookZ
	cthis newanima
	new gmimgvec,grguibook
	push A
	push "guibookexit"
	push "guibooknext"
	push "guibookprev"
	call grguibook,addlist
	call grguibook,hide
	push "Button_isin"
	call grguibook,eval
	call guibookexit,Button_moveonms
	call guibookexit,Button_moveoffms
	push "butclick"
	push "BanGui30"
	call guibookexit,addmethod
	push "butclick"
	push "BanGui31"
	call guibooknext,addmethod
	push "butclick"
	push "BanGui32"
	call guibookprev,addmethod
	push "grguibook"
	call butgame,addgroup
	push "globalguibook"
	push "anguibook"
	cthis copyanima
	call anguibook,show
	localstring $2
	cthis isadvclass
	cmp0
	je l4562
	push "clickon"
	pop $2
	push "anguibook"
	push "guibook"
	push "book"
	clparent classadvbut,setasbutton2
	push 0
	call anguibook,bautohint=
	jmp l4561
l4562:
	call anguibook,BanGui33
	push "butclick"
	pop $2
l4561:
	push $2
	push "BanGui37"
	call anguibook,addmethod
	push "ansysbook"
	push iRotoIleRot
	push iRotoIleObrotow
	clparent GuiItem,setasrototaker
	push "guibook_taken"
	call clsave,bis
	neg
	cmp0
	je l4570
	call anguibook,hide
l4570:
	new img,imbookpage1
	push iBookZ
	call imbookpage1,setz
	call ansysbook,BanGui38
	push $1
	cthis setgraphpath
	end method
	method BanGui30
	push sgmstate
	push "state_bookopened"
	cmpje
	cmp0
	je l4556
	cthis gui_closebook
l4556:
	end method
	method BanGui31
	push sgmstate
	push "state_bookopened"
	cmpje
	cmp0
	je l4558
	call banbook,nextpage
l4558:
	end method
	method BanGui32
	push sgmstate
	push "state_bookopened"
	cmpje
	cmp0
	je l4560
	call banbook,prevpage
l4560:
	end method
	method BanGui33
	push "isbutin"
	push "BanGui34"
	cthis addmethod
	push "butmoveon"
	push "BanGui35"
	cthis addmethod
	push "butmoveoff"
	push "BanGui36"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method BanGui34
	localdef $1
	localdef $2
	pop $2
	pop $1
	localdef $3
	push 1
	popax
	sub 0,$a
	cthis actionnr
	pop $3
	localdef $4
	cthis framenr
	pop $4
	push 0
	push 0
	cthis setframe
	push $1
	push $2
	push 1
	push 1
	cthis isin
	push $3
	push $4
	cthis setframe
	end method
	method BanGui35
	cthis advstdstate
	neg
	cmp0
	je l4564
	ret
l4564:
	call advmouse,setact
	end method
	method BanGui36
	cthis advstdstate
	neg
	cmp0
	je l4566
	ret
l4566:
	call advmouse,setstd
	end method
	method BanGui37
	cthis advstdstate
	cmp0
	je l4568
	cthis gui_openbook
l4568:
	end method
	method BanGui38
	push A
	push "bookstate"
	push "bookstate_init"
	push "sbehaviour"
	push "null"
	cthis vars2
	push "showbook"
	push "BanGui39"
	cthis addmethod
	push "hidebook"
	push "BanGui41"
	cthis addmethod
	end method
	method BanGui39
	push bookstate
	push "bookstate_init"
	cmpje
	cmp0
	je l4572
	push "bookstate_open"
	pop bookstate
	call banbook,openlastpage
	cthis buildimgbook
	call bookpagel,hide
	call bookpager,hide
	push ishowpouptime
	push "BanGui40"
	call imbookpage1,anzoomfadein
l4572:
	end method
	method BanGui40
	cthis hide
	call ansysbook,show
	call bookpagel,show
	call bookpager,show
	localdef $1
	call ansysbook,sbehaviour
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l4574
	push "null"
	call ansysbook,sbehaviour=
	push $1
	spushs
	spop $a
	call [$a],reteval
	jmp l4573
l4574:
	push "state_bookopened"
	cthis advsetstate
	call grguibook,show
l4573:
	end method
	method BanGui41
	push "bookstate_close"
	pop bookstate
	cthis buildimgbook
	cthis hide
	call grguibook,hide
	call bookpagel,hide
	call bookpager,hide
	push ishowpouptime
	push "null"
	call anguibook,anfadein
	push ishowpouptime
	push "BanGui42"
	call imbookpage1,anzoomfadeout
	end method
	method BanGui42
	cthis hide
	push "bookstate_init"
	call ansysbook,bookstate=
	call ansysbook,sbehaviour
	push "null"
	cmpjne
	cmp0
	je l4576
	localdef $1
	call ansysbook,sbehaviour
	pop $1
	push "null"
	call ansysbook,sbehaviour=
	push $1
	spushs
	spop $a
	call [$a],reteval
	jmp l4575
l4576:
	cthis advinitial
l4575:
	end method
	method buildimgbook
	push A
	push "ansysbook"
	push "bookpagel"
	push "bookpager"
	push "guibooknext"
	push "guibookprev"
	push "guibookexit"
	call imbookpage1,imgbuildfromlist
	end method
	method gui_openbook
	cthis advmslock
	call globalpiorko,anhide
	call ansysbook,sbehaviour
	push "null"
	cmpje
	cmp0
	je l4578
	push "state_bookopen"
	cthis advsetstate
l4578:
	push ishowpouptime
	push "null"
	call anguibook,anfadeout
	call ansysbook,showbook
	end method
	method gui_closebook
	cthis advmslock
	call ansysbook,sbehaviour
	push "null"
	cmpje
	cmp0
	je l4580
	push "state_bookclose"
	cthis advsetstate
l4580:
	call bookpagel,hide
	call grguibook,hide
	call ansysbook,hidebook
	end method
	method gui_toloupe
	localstring $1
	pop $1
	push $1
	spushs
	push "mtype"
	push "loupe"
	spop $a
	call [$a],var2
	push $1
	call grguiloupe,add
	call grguiloupe,sortimgs
	cthis gui_refreshloupe
	end method
	method gui_removefromloupe
	localstring $1
	pop $1
	push $1
	call grguiloupe,remove
	cthis gui_refreshloupe
	end method
	method gui_refreshloupe
	call gameapi,getgamename
	spushs
	push "guiloupe"
	spop $a
	call [$a],hasvar
	cmp0
	je l4582
	cthis loupe_visible
	jmp l4584
l4582:
	push 0
	jmp l4584
l4583:
	push 1
l4584:
	cmp0
	je l4585
	cthis hide_loupe
	cthis show_loupe
l4585:
	end method
	method subanalizeaninstr
	localstring $1
	localstring $2
	localint $3
	localint $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	localint $6
	push $1
	push "null"
	cmpjne
	pop $6
	localint $7
	localint $8
	push $5
	spushs
	push "-toloupe"
	cmpst
	jne l4587
	spop $a
	push $6
	cmp0
	je l4589
	push $1
	cthis gui_toloupe
l4589:
	jmp l4586
l4587:
	push "-loupeumask"
	cmpst
	jne l4590
	spop $a
	push $6
	cmp0
	je l4592
	push $1
	spushs
	spop $a
	call [$a],BanGui43
	push $1
	call grguiloupe,add
l4592:
	jmp l4586
l4590:
	push "-popz"
	cmpst
	jne l4593
	spop $a
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	pop $7
	add $4,1
	pop $4
	push $6
	cmp0
	je l4595
	push $1
	spushs
	push iPopupZ
	push $7
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setz
l4595:
	jmp l4586
l4593:
	push "-loupez"
	cmpst
	jne l4596
	spop $a
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	pop $7
	add $4,1
	pop $4
	push $6
	cmp0
	je l4598
	push $1
	spushs
	push iSzkielkoPodZ
	push $7
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setz
l4598:
	jmp l4586
l4596:
	spop $a
	sub $4,1
	pop $4
l4586:
	push $4
	end method
	method BanGui43
	push "mtype"
	push "umask"
	cthis var2
	new filter,ftumask
	push "startumask"
	push "BanGui44"
	cthis addmethod
	push "stopumask"
	push "BanGui45"
	cthis addmethod
	end method
	method BanGui44
	cthis getname
	call ftumask,link
	push "guiloupemask"
	call ftumask,umask
	end method
	method BanGui45
	call ftumask,removeallblend
	call ftumask,unlink
	end method
	method subanalizebut
	localstring $1
	localstring $2
	localint $3
	localint $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	push $5
	spushs
	push "-inloupe"
	cmpst
	jne l4600
	spop $a
	push $1
	spushs
	push 1
	spop $a
	call [$a],bshownonvis=
	push $1
	spushs
	push "butisin"
	push "BanGui46"
	spop $a
	call [$a],addmethod
	jmp l4599
l4600:
	push "-rotopck"
	cmpst
	jne l4605
	spop $a
	push $1
	cthis setasitemtopck
	jmp l4599
l4605:
	push "-topck"
	cmpst
	jne l4606
	spop $a
	push $1
	cthis setasitemtopck
	push $1
	spushs
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	spop $a
	call [$a],sitemtopck=
	add $4,1
	pop $4
	jmp l4599
l4606:
	push "-popup"
	cmpst
	jne l4607
	spop $a
	push "globalpopexit"
	push $1
	push "popexit"
	pop $b
	popax
	add $a,$b
	cthis copyanima
	push $1
	spushs
	spop $a
	call [$a],BanGui47
	jmp l4599
l4607:
	spop $a
l4599:
	push $4
	end method
	method BanGui46
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	call guiloupe,isvisible
	cmp0
	je l4602
	push $1
	push $2
	push 0
	push balpha
	push 1
	popax
	sub 0,$a
	cmpje
	cmp0
	je l4604
	push $4
	jmp l4603
l4604:
	push balpha
l4603:
	cthis isin
	jmp l4601
l4602:
	push 0
l4601:
	end method
	method BanGui47
	push "loupe"
	pop smousecursor
	push 1
	pop bshownonvis
	push A
	push "state"
	push "hidden"
	push "spopexit"
	cthis getname
	push "popexit"
	pop $b
	popax
	add $a,$b
	push "spopwnd"
	cthis getname
	push "_window"
	pop $b
	popax
	add $a,$b
	cthis vars2
	cthis hide
	push spopwnd
	spushs
	spop $a
	call [$a],hide
	push spopwnd
	spushs
	push iPopupZ
	spop $a
	call [$a],setz
	push spopexit
	spushs
	push iPopupZ
	push 100
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setz
	push "butisin"
	push "BanGui48"
	cthis addmethod
	push "moveon"
	push "BanGui49"
	cthis addmethod
	push "moveoff"
	push "BanGui50"
	cthis addmethod
	push "clickon"
	push "BanGui51"
	cthis addmethod
	push "hidepopup"
	push "BanGui52"
	cthis addmethod
	push "showpopup"
	push "BanGui53"
	cthis addmethod
	end method
	method BanGui48
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push state
	push "hidden"
	cmpje
	cmp0
	je l4609
	push $1
	push $2
	push 0
	push $4
	cthis isin
	jmp l4608
l4609:
	push spopexit
	spushs
	push $1
	push $2
	push 1
	push 0
	spop $a
	call [$a],isin
	cmp0
	jne l4611
	push spopwnd
	spushs
	push $1
	push $2
	push 1
	push 0
	spop $a
	call [$a],isin
	neg
	jmp l4612
l4610:
	push 0
	jmp l4612
l4611:
	push 1
l4612:
l4608:
	end method
	method BanGui49
	push state
	push "shown"
	cmpje
	cmp0
	je l4614
	call advmouse,setbut
	push spopexit
	spushs
	push 0
	push 1
	spop $a
	call [$a],setframe
	jmp l4613
l4614:
	push smousecursor
	call advmouse,set
l4613:
	end method
	method BanGui50
	call advmouse,setstd
	push state
	push "shown"
	cmpje
	cmp0
	je l4616
	push spopexit
	spushs
	push 0
	push 0
	spop $a
	call [$a],setframe
l4616:
	end method
	method BanGui51
	push state
	push "shown"
	cmpje
	cmp0
	je l4618
	push "beh_"
	cthis getbutname
	pop $b
	popax
	add $a,$b
	push "_QUIT"
	pop $b
	popax
	add $a,$b
	cthis playbehif
	popax
l4618:
	end method
	method BanGui52
	push spopexit
	spushs
	spop $a
	call [$a],hide
	push spopwnd
	spushs
	spop $a
	call [$a],hide
	push "hidden"
	pop state
	end method
	method BanGui53
	push spopexit
	spushs
	spop $a
	call [$a],show
	push spopwnd
	spushs
	spop $a
	call [$a],show
	push spopexit
	spushs
	push spopwnd
	spushs
	spop $a
	call [$a],getex
	push 2
	pop $b
	popax
	sub $a,$b
	push spopwnd
	spushs
	spop $a
	call [$a],getpy
	spop $a
	call [$a],setpos
	call imglastpopup,hide
	push "shown"
	pop state
	end method
	method setasitemtopck
	localstring $1
	pop $1
	push $1
	push iRotoIleRot
	push iRotoIleObrotow
	clparent GuiItem,setasrototaker
	push $1
	spushs
	push A
	push "styperoto"
	push "init"
	push "sbehstate"
	push "behstate_playbeh"
	push "sitemtopck"
	push "null"
	spop $a
	call [$a],vars2
	push $1
	spushs
	push "rototaker_endroto"
	push "BanGui54"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "clickpopup"
	push "BanGui55"
	spop $a
	call [$a],addmethod
	cthis isadvclass
	cmp0
	je l4642
	push $1
	spushs
	push "clickon"
	push "BanGui56"
	spop $a
	call [$a],addmethod
	jmp l4641
l4642:
	push $1
	spushs
	spop $a
	call [$a],BanGui57
	push $1
	call butgame,add
l4641:
	end method
	method BanGui54
	push styperoto
	push "startroto"
	cmpje
	cmp0
	je l4620
	cthis isadvclass
	cmp0
	je l4622
	push sbehstate
	push "behstate_nobeh"
	cmpje
	cmp0
	je l4624
	cthis _item_gotopck
	jmp l4623
l4624:
	localdef $1
	push "beh_"
	cthis getbutname
	pop $b
	popax
	add $a,$b
	push "_TAKEN"
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	cthis behexist
	cmp0
	je l4626
	push $1
	cthis playbeh
	jmp l4625
l4626:
	push sgmstate
	push "state_itemgotocenter"
	cmpje
	cmp0
	je l4628
	push "state_itemgotopck"
	cthis advsetstate
l4628:
	cthis _item_gotopck
l4625:
l4623:
	jmp l4621
l4622:
	cthis _item_gotopck
l4621:
	jmp l4619
l4620:
	push styperoto
	push "endroto"
	cmpje
	cmp0
	je l4630
	cthis freeactitem
	push "inpck"
	pop styperoto
	cthis hide
	cthis isadvclass
	cmp0
	je l4632
	push sbehstate
	push "behstate_nobeh"
	cmpjne
	cmp0
	je l4634
	cthis advinitial
	localdef $2
	cthis getbutname
	pop $2
	localdef $1
	push "beh_"
	push $2
	pop $b
	popax
	add $a,$b
	push "_INPCK"
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	cthis behexist
	cmp0
	je l4636
	push $1
	cthis playbeh
	jmp l4635
l4636:
	push "beh_"
	cthis getname
	pop $b
	popax
	add $a,$b
	push "_INPCK"
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	cthis behexist
	cmp0
	je l4638
	push $1
	cthis playbeh
l4638:
l4635:
l4634:
	push sitemtopck
	push "null"
	cmpjne
	cmp0
	je l4640
	push sitemtopck
	cthis addtopck
l4640:
	cthis getname
	call grgotopckstack,remove
	jmp l4631
l4632:
	cthis advinitial
	push GAME
	spushs
	cthis getname
	push "_INPCK"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	spop $a
	call [$a],[$d]
l4631:
l4630:
l4619:
	end method
	method BanGui55
	push sitemtopck
	cthis hide_itempopup
	cthis getname
	cthis item_gotocenterobj
	push 1
	pop gui_skipclick
	cthis advbutrefresh
	end method
	method BanGui56
	push styperoto
	push "init"
	cmpje
	cmp0
	je l4644
	localdef $1
	push "beh_"
	cthis getbutname
	pop $b
	popax
	add $a,$b
	push "_TAKE"
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	cthis behexist
	cmp0
	je l4646
	push "behstate_playbeh"
	pop sbehstate
	push $1
	cthis playbeh
	jmp l4645
l4646:
	push "behstate_nobeh"
	pop sbehstate
	push sitemtopck
	push "null"
	cmpjne
	cmp0
	je l4648
	push sitemtopck
	cthis saveitemtopck
l4648:
	cthis _item_gotocenter
l4645:
	jmp l4643
l4644:
	push styperoto
	push "readytogo"
	cmpje
	cmp0
	je l4650
	cthis clickpopup
	jmp l4649
l4650:
	push styperoto
	push "inpck"
	cmpje
	cmp0
	je l4652
l4652:
l4649:
l4643:
	end method
	method BanGui57
	push A
	push "gettyp"
	push "itemtotake"
	push "disable"
	push 0
	push "bignoralpha"
	push 0
	cthis vars2
	cthis Button_isinalpha
	push "isbutin"
	push "BanGui58"
	cthis addmethod
	push "butmoveon"
	push "BanGui59"
	cthis addmethod
	push "butmoveoff"
	push "BanGui60"
	cthis addmethod
	push "butclick"
	push "BanGui61"
	cthis addmethod
	end method
	method BanGui58
	localdef $1
	localdef $2
	pop $2
	pop $1
	push disable
	neg
	cmp0
	je l4653
	push $1
	push $2
	push 1
	push bignoralpha
	cthis isin
	jmp l4655
l4653:
	push 0
	jmp l4655
l4654:
	push 1
l4655:
	end method
	method BanGui59
	cthis advstdstate
	neg
	cmp0
	je l4657
	ret
l4657:
	push "take"
	call advmouse,set
	end method
	method BanGui60
	cthis advstdstate
	neg
	cmp0
	je l4659
	ret
l4659:
	call advmouse,setstd
	end method
	method BanGui61
	cthis advstdstate
	neg
	cmp0
	je l4661
	ret
l4661:
	push styperoto
	push "readytogo"
	cmpje
	cmp0
	je l4663
	cthis clickpopup
	jmp l4662
l4663:
	push GAME
	spushs
	cthis getname
	push "_TAKE"
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],hasmet
	cmp0
	je l4665
	push GAME
	spushs
	cthis getname
	push "_TAKE"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	jmp l4664
l4665:
	cthis item_gotocenter
l4664:
l4662:
	end method
	method setactitem
	localstring $1
	pop $1
	push $1
	pop _clicked_guiitem
	end method
	method getactitem
	push _clicked_guiitem
	end method
	method freeactitem
	push "null"
	cthis setactitem
	end method
	method item_gotocenter
	cthis advmslock
	push "state_itemgotocenter"
	cthis advsetstate
	cthis _item_gotocenter
	end method
	method getitempopexit
	localstring $1
	pop $1
	push "anpopup_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_exit"
	pop $b
	popax
	add $a,$b
	end method
	method popitem_gotocenter
	localstring $1
	pop $1
	push $1
	cthis getclickedbut
	cthis popitem_gotocenterobj
	end method
	method popitem_gotocenterobj
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $2
	push "null"
	cmpjne
	cmp0
	je l4667
	push $2
	spushs
	push "readytogo"
	spop $a
	call [$a],styperoto=
	push $2
	spushs
	push $1
	spop $a
	call [$a],sitemtopck=
	push $2
	spushs
	push "rotostart"
	push 0
	spop $a
	call [$a],setframe
	push $1
	push $2
	cthis show_itempopup
	localdef $3
	push $1
	cthis getitempopexit
	pop $3
	push $3
	spushs
	push "sanitemtopck"
	push $2
	spop $a
	call [$a],var2
	push $3
	spushs
	push "clickexit"
	push "BanGui62"
	spop $a
	call [$a],addmethod
l4667:
	end method
	method BanGui62
	cthis isadvclass
	cmp0
	je l4669
	push sanitemtopck
	spushs
	spop $a
	call [$a],clickon
	jmp l4668
l4669:
	push sanitemtopck
	spushs
	spop $a
	call [$a],butclick
l4668:
	end method
	method item_gotocenterobj
	localstring $1
	pop $1
	cthis advmslock
	push "state_itemgotocenter"
	cthis advsetstate
	push $1
	cthis _obj_gotocenter
	end method
	method item_takecenter
	localstring $1
	pop $1
	push $1
	cthis saveitemtopck
	cthis item_gotocenter
	end method
	method saveitemtostack
	localstring $1
	pop $1
	localdef $2
	push "ile_item_"
	push $1
	pop $b
	popax
	add $a,$b
	pop $2
	localint $3
	push $2
	call clsave,get
	pop $3
	push $3
	push 0
	cmpja
	cmp0
	je l4671
	push $1
	push "_"
	pop $b
	popax
	add $a,$b
	push $3
	pop $b
	popax
	add $a,$b
	cthis saveitemoutpck
l4671:
	add $3,1
	pop $3
	push $2
	push $3
	call clsave,set
	push $1
	push "_"
	pop $b
	popax
	add $a,$b
	push $3
	pop $b
	popax
	add $a,$b
	cthis saveitemtopck
	end method
	method stackitemobj_topck
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	cthis saveitemtostack
	localint $3
	push "ile_item_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,get
	pop $3
	push $3
	push 1
	cmpje
	cmp0
	je l4673
	push $1
	push "_1"
	pop $b
	popax
	add $a,$b
	push $2
	cthis popitem_gotocenterobj
	jmp l4672
l4673:
	push $1
	push "_"
	pop $b
	popax
	add $a,$b
	push $3
	pop $b
	popax
	add $a,$b
	push $2
	cthis item_takecenterobj
l4672:
	end method
	method stackitem_topck
	localstring $1
	pop $1
	push $1
	cthis getclickedbut
	cthis stackitemobj_topck
	end method
	method additemtostack
	localstring $1
	pop $1
	localint $2
	push "ile_item_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,get
	pop $2
	push $2
	push 1
	cmpja
	cmp0
	je l4675
	push $1
	push "_"
	pop $b
	popax
	add $a,$b
	push $2
	push 1
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	add $a,$b
	cthis removefrompck
l4675:
	push $1
	push "_"
	pop $b
	popax
	add $a,$b
	push $2
	pop $b
	popax
	add $a,$b
	cthis addtopck
	end method
	method item_takecenterobj
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	cthis saveitemtopck
	push $2
	cthis item_gotocenterobj
	end method
	method getclickedbut
	cthis isadvclass
	cmp0
	je l4677
	call grbuts,getsfound
	jmp l4676
l4677:
	call butgame,sclicked
l4676:
	end method
	method _item_gotocenter
	localdef $1
	cthis getclickedbut
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l4679
	push $1
	cthis _obj_gotocenter
l4679:
	end method
	method _obj_gotocenter
	localstring $1
	pop $1
	push sgmstate
	push "state_itemgotocenter"
	cmpje
	cmp0
	je l4681
	push $1
	spushs
	push "behstate_playbeh"
	spop $a
	call [$a],sbehstate=
	push $1
	cthis setactitem
l4681:
	push $1
	call grguiloupe,contains
	cmp0
	je l4683
	push $1
	spushs
	spop $a
	call [$a],show
	push $1
	cthis remove_from_loupe
l4683:
	push $1
	spushs
	push "rotostart"
	push 0
	spop $a
	call [$a],setframe
	push $1
	spushs
	push "startroto"
	spop $a
	call [$a],styperoto=
	push $1
	spushs
	push iTakeZ
	spop $a
	call [$a],setz
	push $1
	spushs
	cthis getappcenter
	push "rotocenter"
	spop $a
	call [$a],rototaker_startact
	end method
	method item_gotopck
	localdef $1
	cthis getactitem
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l4685
	push $1
	spushs
	spop $a
	call [$a],_item_gotopck2
l4685:
	end method
	method _item_gotopck2
	cthis gettyp
	push "pckitem"
	cmpje
	cmp0
	je l4687
	cthis _pckitem_gotopck
	jmp l4686
l4687:
	cthis _item_gotopck
l4686:
	end method
	method _item_gotopck
	cthis isretitemstate
	cmp0
	je l4689
	cthis advmslock
	push "state_itemgotopck"
	cthis advsetstate
	jmp l4688
l4689:
	cthis getname
	call grgotopckstack,addonce
l4688:
	push bHOInventory
	neg
	cmp0
	je l4691
	cthis inventory_playing
	cmp0
	jne l4694
	cthis inventory_hidden
	jmp l4695
l4693:
	push 0
	jmp l4695
l4694:
	push 1
l4695:
	jmp l4696
l4691:
	push 0
	jmp l4696
l4692:
	push 1
l4696:
	cmp0
	je l4697
	cthis inventory_in
	jmp l4690
l4697:
	push bHOInventory
	cmp0
	je l4699
	localdef $1
	push "guihoinventory"
	pop $1
	jmp l4698
l4699:
	localdef $1
	cthis lastemptyslot
	pop $1
l4698:
	push "endroto"
	pop styperoto
	localdef $2
	cthis actionname
	pop $2
	push "rotopck"
	push 0
	cthis setframe
	localdef $3
	cthis getw
	pop $3
	localdef $4
	cthis geth
	pop $4
	push $2
	push 0
	cthis setframe
	push $1
	spushs
	spop $a
	call [$a],getpx
	call guileft,getex
	cmpjae
	cmp0
	je l4701
	push $1
	spushs
	spop $a
	call [$a],getex
	call guiright,getpx
	cmpjl
	jmp l4703
l4701:
	push 0
	jmp l4703
l4702:
	push 1
l4703:
	cmp0
	je l4704
	push $1
	spushs
	spop $a
	call [$a],getcx
	push $1
	spushs
	spop $a
	call [$a],getcy
	cthis getw
	cthis geth
	push $3
	push $4
	cthis rototaker_startwh
	jmp l4700
l4704:
	call guinventory,getcx
	call guinventory,getcy
	cthis getw
	cthis geth
	push $3
	push $4
	cthis rototaker_startwh
l4700:
l4690:
	end method
	method item_returntopck
	localstring $1
	pop $1
	push $1
	cthis getanitem
	spushs
	spop $a
	call [$a],_pckitem_gotopck
	end method
	method _pckitem_gotopck
	cthis isretitemstate
	cmp0
	je l4706
	cthis advmslock
	push "state_pckitemgotopck"
	cthis advsetstate
	jmp l4705
l4706:
	cthis getname
	call grgotopckstack,addonce
l4705:
	cthis inventory_playing
	cmp0
	jne l4709
	cthis inventory_hidden
	jmp l4710
l4708:
	push 0
	jmp l4710
l4709:
	push 1
l4710:
	cmp0
	je l4711
	cthis inventory_in
	jmp l4707
l4711:
	call sfxretitem,play
	cthis saveitemtolastslot
	cthis getname
	call grguitems,addonce
	push 0
	push 0
	cthis setframe
	localdef $1
	cthis getw
	pop $1
	localdef $2
	cthis geth
	pop $2
	push 1
	push 0
	cthis setframe
	push myslot
	spushs
	spop $a
	call [$a],getcx
	push myslot
	spushs
	spop $a
	call [$a],getcy
	cthis getw
	cthis geth
	push $1
	push $2
	cthis rototaker_startwh
l4707:
	end method
	method saveitemtolastslot
	cthis lastemptyslot
	cthis saveitemtoslot
	end method
	method saveitemtoslot
	localstring $1
	pop $1
	push $1
	push "null"
	cmpje
	cmp0
	je l4713
	push "sslot = null!"
	spushs
	spop $h
	call $h,print
	jmp l4712
l4713:
	push $1
	pop myslot
	push myslot
	spushs
	cthis getname
	spop $a
	call [$a],myitem=
l4712:
	end method
	method guimov_GET
	cthis advstdstate
	cmp0
	je l4715
	cthis advgetlock
	neg
	cmp0
	je l4715
	call mouse,getpos
	push "BanGui63"
	call grguitems,isinfunc
	jmp l4723
l4715:
	push 0
	jmp l4723
l4716:
	push 1
l4723:
	cmp0
	je l4724
	call sfxpopitem,play
	localdef $1
	call grguitems,getsfound
	pop $1
	push $1
	call grguitems,remove
	push $1
	spushs
	spop $a
	call [$a],myslot
	spushs
	push "null"
	spop $a
	call [$a],myitem=
	push $1
	spushs
	push "null"
	spop $a
	call [$a],myslot=
	push $1
	spushs
	push 1
	spop $a
	call [$a],play
	push $1
	spushs
	spop $a
	call [$a],anclipscreen
	push $1
	cthis setactitem
	push $1
	cthis mssetobj
	cthis isadvclass
	neg
	cmp0
	je l4726
	push "getitem"
	cthis advsetstate
l4726:
l4724:
	end method
	method BanGui63
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	cthis withincut
	cmp0
	je l4717
	push $1
	push $2
	push 1
	push 1
	cthis isin
	cmp0
	jne l4720
	push $1
	cthis getcx
	pop $b
	popax
	sub $a,$b
	push $2
	cthis getcy
	pop $b
	popax
	sub $a,$b
	call $1,length
	push 30
	cmpjle
	jmp l4721
l4719:
	push 0
	jmp l4721
l4720:
	push 1
l4721:
	jmp l4722
l4717:
	push 0
	jmp l4722
l4718:
	push 1
l4722:
	end method
	method guimov_PUT
	localdef $1
	cthis getfree
	pop $1
	cthis advgetlock
	neg
	cmp0
	je l4728
	cthis isadvclass
	cmp0
	je l4730
	localdef $2
	cthis advfocusedbut
	pop $2
	localdef $3
	push "beh_USE_"
	push $1
	spushs
	spop $a
	call [$a],getbutname
	pop $b
	popax
	add $a,$b
	pop $3
	push $2
	push "null"
	cmpjne
	cmp0
	je l4732
	push $3
	push "_ON_"
	pop $b
	popax
	add $a,$b
	push $2
	spushs
	spop $a
	call [$a],getbutname
	pop $b
	popax
	add $a,$b
	cthis playbehif
	jmp l4734
l4732:
	push 0
	jmp l4734
l4733:
	push 1
l4734:
	cmp0
	je l4735
	jmp l4731
l4735:
	push $3
	cthis playbehif
	neg
	cmp0
	je l4737
	push $1
	spushs
	push "behstate_nobeh"
	spop $a
	call [$a],sbehstate=
	cthis freeactitem
	push $1
	spushs
	spop $a
	call [$a],_pckitem_gotopck
l4737:
l4731:
	jmp l4729
l4730:
	localdef $4
	push "USE_"
	push $1
	spushs
	spop $a
	call [$a],getbutname
	pop $b
	popax
	add $a,$b
	pop $4
	push GAME
	spushs
	push $4
	spop $a
	call [$a],hasmet
	cmp0
	je l4739
	push GAME
	spushs
	push $4
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	jmp l4738
l4739:
	cthis advsetstdstate
	cthis item_gotopck
l4738:
l4729:
l4728:
	end method
	method getanitem
	localstring $1
	pop $1
	push sanitemprefix
	push $1
	pop $b
	popax
	add $a,$b
	end method
	method addtopck
	localstring $1
	pop $1
	call gameapi,getgamename
	spushs
	push $1
	spop $a
	call [$a],_addtopck
	end method
	method isaniteminpck
	localstring $1
	pop $1
	call gameapi,getgamename
	spushs
	push $1
	cthis getanitem
	spop $a
	call [$a],hasvar
	end method
	method isiteminpck
	localstring $1
	pop $1
	push "ma_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,bis
	end method
	method _addtopck
	localstring $1
	pop $1
	localdef $2
	push $1
	cthis getanitem
	pop $2
	push $2
	call grguitems,contains
	neg
	cmp0
	je l4741
	push bHOInventory
	neg
	cmp0
	je l4743
	push $2
	push "$scripts/adv_items/"
	push $1
	pop $b
	popax
	add $a,$b
	push ".pyz"
	pop $b
	popax
	add $a,$b
	push iTakeZ
	cthis newanima
	push $2
	push iRotoIleRot
	push iRotoIleObrotow
	clparent GuiItem,setasrototaker
	push $2
	spushs
	push A
	push "getbutname"
	push $1
	push "myslot"
	push "null"
	push "gettyp"
	push "pckitem"
	push "sbehstate"
	push "behstate_nobeh"
	spop $a
	call [$a],vars2
	push $2
	spushs
	spop $a
	call [$a],saveitemtolastslot
	push $2
	spushs
	push "rototaker_endroto"
	push "BanGui64"
	spop $a
	call [$a],addmethod
	push $2
	spushs
	spop $a
	call [$a],setposonmyslot
	push $2
	call grguitems,add
l4743:
l4741:
	push $1
	cthis saveitemtopck
	end method
	method BanGui64
	push sgmstate
	push "state_pckitemgotopck"
	cmpje
	cmp0
	jne l4746
	push sbehstate
	push "behstate_nobeh"
	cmpje
	jmp l4747
l4745:
	push 0
	jmp l4747
l4746:
	push 1
l4747:
	cmp0
	je l4748
	cthis getname
	call grgotopckstack,remove
	cthis freeactitem
	cthis setposonmyslot
	push sgmstate
	push "state_pckitemgotopck"
	cmpje
	cmp0
	je l4750
	cthis advinitial
l4750:
l4748:
	end method
	method setposonmyslot
	push myslot
	spushs
	spop $a
	call [$a],getcx
	push myslot
	spushs
	spop $a
	call [$a],getcy
	cthis setpos
	cthis cliptoguislot
	push 0
	cthis play
	end method
	method saveitemtopck
	localstring $1
	pop $1
	push "ma_"
	push $1
	pop $b
	popax
	add $a,$b
	push 1
	call clsave,set
	push "taken_"
	push $1
	pop $b
	popax
	add $a,$b
	push 1
	call clsave,set
	push $1
	call grguipck,addonce
	end method
	method saveitemoutpck
	localstring $1
	pop $1
	push $1
	call grguipck,remove
	push "ma_"
	push $1
	pop $b
	popax
	add $a,$b
	push 0
	call clsave,set
	end method
	method isretitemstate
	push sgmstate
	push "state_pckitemgotopck"
	cmpje
	cmp0
	jne l4752
	push sgmstate
	push "state_itemgotopck"
	cmpje
	jmp l4753
l4751:
	push 0
	jmp l4753
l4752:
	push 1
l4753:
	end method
	method removefrompck
	localstring $1
	pop $1
	localdef $2
	push sanitemprefix
	push $1
	pop $b
	popax
	add $a,$b
	pop $2
	push bHOInventory
	neg
	cmp0
	je l4755
	push GAME
	spushs
	push $2
	spop $a
	call [$a],hasvar
	jmp l4757
l4755:
	push 0
	jmp l4757
l4756:
	push 1
l4757:
	cmp0
	je l4758
	localdef $3
	cthis getactitem
	pop $3
	push $2
	push $3
	cmpje
	cmp0
	je l4760
	cthis freeactitem
l4760:
	push $2
	spushs
	spop $a
	call [$a],anhide
	push $2
	spushs
	spop $a
	call [$a],myslot
	push "null"
	cmpjne
	cmp0
	je l4762
	push $2
	spushs
	spop $a
	call [$a],myslot
	spushs
	spop $a
	call [$a],myitem
	push $2
	cmpje
	jmp l4764
l4762:
	push 0
	jmp l4764
l4763:
	push 1
l4764:
	cmp0
	je l4765
	push $2
	spushs
	spop $a
	call [$a],myslot
	spushs
	push "null"
	spop $a
	call [$a],myitem=
	push $2
	spushs
	push "null"
	spop $a
	call [$a],myslot=
l4765:
l4758:
	push $2
	call grguitems,remove
	push $1
	cthis saveitemoutpck
	end method
	method additemslot
	localdef $1
	call grguitemslots,size
	pop $1
	localdef $2
	push "guitemslot"
	push $1
	pop $b
	popax
	add $a,$b
	pop $2
	push "guitemslot"
	push $2
	cthis copyanima
	push $2
	spushs
	spop $a
	call [$a],setslotpos
	push $2
	spushs
	push "myitem"
	push "null"
	spop $a
	call [$a],var2
	cthis isadvclass
	cmp0
	je l4767
	push $2
	push "guislot"
	push $1
	pop $b
	popax
	add $a,$b
	push "guislot"
	clparent classadvbut,setasbutton2
	push $2
	spushs
	push "butisin"
	push "BanGui65"
	spop $a
	call [$a],addmethod
	push $2
	spushs
	push "normal"
	spop $a
	call [$a],smousecursor=
l4767:
	push $2
	call grguitemslots,add
	end method
	method BanGui65
	localint $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	cthis withincut
	cmp0
	je l4768
	push $1
	push $2
	push $3
	push $4
	cthis isin
	jmp l4770
l4768:
	push 0
	jmp l4770
l4769:
	push 1
l4770:
	end method
	method setslotpos
	cthis cliptoguislot
	call grguitemslots,size
	push 1
	cmpjae
	cmp0
	je l4772
	localdef $1
	push 0
	pop $1
	call grguitemslots,last
	spushs
	spop $a
	call [$a],getex
	push $1
	pop $b
	popax
	add $a,$b
	cthis getpy
	cthis ansetbpos
l4772:
	end method
	method stoprewinventory
	push 0
	call _timrevinv,stop
	end method
	method moveslots
	localint $1
	pop $1
	push $1
	cthis _moveslots
	call grguitemslots,first
	spushs
	spop $a
	call [$a],getpx
	call guileft,getex
	cmpja
	cmp0
	je l4774
	call guileft,getex
	call grguitemslots,first
	spushs
	spop $a
	call [$a],getpx
	pop $b
	popax
	sub $a,$b
	cthis _moveslots
l4774:
	call grguitemslots,last
	spushs
	spop $a
	call [$a],getex
	call guiright,getpx
	cmpjl
	cmp0
	je l4776
	call guiright,getpx
	call grguitemslots,last
	spushs
	spop $a
	call [$a],getex
	pop $b
	popax
	sub $a,$b
	cthis _moveslots
l4776:
	end method
	method _moveslots
	localint $1
	pop $1
	push $1
	push 0
	call grguitems,move
	push $1
	push 0
	call grguitemslots,move
	end method
	method cliptoguislot
	localdef $1
	push 3
	pop $1
	call guileft,getex
	push $1
	pop $b
	popax
	add $a,$b
	push 0
	call guiright,getpx
	push $1
	pop $b
	popax
	sub $a,$b
	push igmapph
	cthis clip
	end method
	method lastemptyslot
	localint $1
	push 0
	pop $1
l4777:
	push $1
	call grguitemslots,size
	cmpjl
	cmp0
	je l4778
	jmp l4780
l4779:
	add $1,1
	pop $1
	jmp l4777
l4780:
	localdef $2
	push $1
	call grguitemslots,get
	pop $2
	push $2
	spushs
	spop $a
	call [$a],myitem
	push "null"
	cmpje
	cmp0
	je l4782
	push $2
	ret
l4782:
	jmp l4779
l4778:
	push GAME
	spushs
	spop $a
	call [$a],additemslot
	call guileft,show
	call guiright,show
	call grguitemslots,last
	end method
	method load_pocket
	localstring $1
	pop $1
	push $1
	push "_banguipck.db"
	pop $b
	popax
	add $a,$b
	call grguipck,vecload
	end method
	method save_pocket
	localstring $1
	pop $1
	push $1
	push "_banguipck.db"
	pop $b
	popax
	add $a,$b
	call grguipck,vecsave
	end method
	method inventory_check
	cthis inventory_hidden
	cmp0
	je l4784
	cthis inventory_in
	jmp l4783
l4784:
	cthis inventory_out
l4783:
	end method
	method inventory_dock
	push "guinventory_dokuj"
	call clsave,bis
	cmp0
	je l4786
	push "locked_gui"
	push 0
	call guinventorydok,setframe
	jmp l4785
l4786:
	push "unlocked_gui"
	push 0
	call guinventorydok,setframe
l4785:
	end method
	method inventory_out
	push 1
	cthis inventory_start
	end method
	method inventory_in
	push 1
	popax
	sub 0,$a
	cthis inventory_start
	end method
	method inventory_start
	localint $1
	pop $1
	call _timinv,isplaying
	cmp0
	je l4788
	call _timinv,dir
	push $1
	cmpje
	cmp0
	je l4790
	ret
l4790:
	push 0
	call _timinv,stop
l4788:
	push $1
	call _timinv,dir=
	call _timinv,play
	call sfxwysun2,play
	end method
	method inventory_playing
	call _timinv,isplaying
	end method
	method inventory_move
	localint $1
	pop $1
	push 0
	push $1
	call grguitemslots,move
	push 0
	push $1
	call guinventory,move
	push 0
	push $1
	call guinventorydok,move
	push 0
	push $1
	call guileft,move
	push 0
	push $1
	call guiright,move
	push 0
	push $1
	call grguitems,move
	end method
	method inventory_hidden
	localint $1
	call grguitemslots,first
	spushs
	spop $a
	call [$a],getpy
	push igmapph
	pop $b
	popax
	sub $a,$b
	pop $1
	push $1
	push 0
	cmpja
	cmp0
	je l4792
	push $1
	popax
	sub 0,$a
	cthis inventory_move
	push 1
	jmp l4791
l4792:
	push $1
	push 0
	cmpje
l4791:
	end method
	method inventory_showed
	call guinventory,getposy
	push 0
	cmpjl
	cmp0
	je l4794
	call guinventory,getposy
	popax
	sub 0,$a
	cthis inventory_move
	push 1
	jmp l4793
l4794:
	call guinventory,getposy
	push 0
	cmpje
l4793:
	end method
	method inventory_hide
	call guinventory,bdokuj
	neg
	cmp0
	je l4796
l4797:
	cthis inventory_hidden
	neg
	cmp0
	je l4798
	push 1
	cthis inventory_move
	jmp l4797
l4798:
l4796:
	end method
	method inventory_show
l4799:
	cthis inventory_showed
	neg
	cmp0
	je l4800
	push 1
	popax
	sub 0,$a
	cthis inventory_move
	jmp l4799
l4800:
	end method
	method gui_mousemove
	push bHOInventory
	neg
	cmp0
	je l4802
	cthis advstdstate
	cmp0
	je l4802
	call grgotopckstack,empty
	cmp0
	je l4802
	cthis inventory_playing
	neg
	jmp l4804
l4802:
	push 0
	jmp l4804
l4803:
	push 1
l4804:
	cmp0
	je l4805
	localint $1
	localint $2
	call mouse,getpos
	pop $2
	pop $1
	cthis inventory_hidden
	cmp0
	je l4807
	push $1
	push $2
	call invshow,isin
	jmp l4809
l4807:
	push 0
	jmp l4809
l4808:
	push 1
l4809:
	cmp0
	je l4810
	cthis inventory_in
	jmp l4806
l4810:
	call guinventory,bdokuj
	neg
	cmp0
	je l4812
	cthis inventory_showed
	cmp0
	je l4812
	push $1
	push $2
	call invhide,isin
	neg
	cmp0
	je l4812
	cthis inventory_unblocked
	jmp l4814
l4812:
	push 0
	jmp l4814
l4813:
	push 1
l4814:
	cmp0
	je l4815
	cthis inventory_out
l4815:
l4806:
l4805:
	cthis update_loupepos
	end method
	method inventory_unblocked
	call guinventory,blockout
	push 0
	cmpje
	end method
	method unblock_inventory
	localint $1
	pop $1
	push $1
	push 0
	cmpjle
	cmp0
	je l4817
	push 0
	call guinventory,blockout=
	jmp l4816
l4817:
	push $1
	call timunblockinventory,setdelay
	call timunblockinventory,play
l4816:
	end method
	method gui_mouselclick
	call guimov,moving
	cmp0
	je l4819
	cthis isadvclass
	cmp0
	je l4821
	push 0
	push 0
	call guimov,onmouselclick
	jmp l4820
l4821:
	call guimov,onmouselclick
l4820:
	push 0
	jmp l4818
l4819:
	push 1
l4818:
	end method
	method gui_mouserclick
	cthis loupe_visible
	cmp0
	je l4823
	cthis hide_loupe
	push 0
	jmp l4822
l4823:
	cthis show_loupe
	call sfxmagic1,playif
	push 1
l4822:
	end method
	method advinitial
	cthis advmsunlock
	cthis advsetstdstate
	end method
	method subloadadventure
	localstring $1
	localint $2
	localint $3
	localstring $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $4
	spushs
	push "hodoors:"
	cmpst
	jne l4825
	spop $a
	jmp l4824
l4825:
	spop $a
l4824:
	push $3
	end method
	method remove_from_loupe
	localstring $1
	pop $1
	push $1
	call ftguiloupe,removeblend
	push $1
	call grguiloupe,remove
	call grguiloupe,empty
	cmp0
	je l4827
	call guiloupemask,hide
l4827:
	end method
	method show_itempopup
	localstring $1
	localstring $2
	pop $2
	pop $1
	call gameapi,getgamename
	spushs
	push $1
	push $2
	spop $a
	call [$a],BanGui66
	end method
	method BanGui66
	localstring $1
	localstring $2
	pop $2
	pop $1
	push $1
	cthis saveitemtopck
	localdef $3
	push "anpopup_"
	push $1
	pop $b
	popax
	add $a,$b
	pop $3
	localdef $4
	push $3
	push "_blysk"
	pop $b
	popax
	add $a,$b
	pop $4
	localdef $5
	push "_img"
	push $1
	pop $b
	popax
	add $a,$b
	pop $5
	localdef $6
	push "_txtnewitem"
	push $1
	pop $b
	popax
	add $a,$b
	pop $6
	localdef $7
	push "_txtitem"
	push $1
	pop $b
	popax
	add $a,$b
	pop $7
	localdef $8
	push "_gr_"
	push $1
	pop $b
	popax
	add $a,$b
	pop $8
	localdef $9
	push $3
	push "_exit"
	pop $b
	popax
	add $a,$b
	pop $9
	localdef $10
	push "_gr2_"
	push $1
	pop $b
	popax
	add $a,$b
	pop $10
	push $3
	cthis hasvar
	neg
	cmp0
	je l4829
	push "globalpopup"
	push $3
	cthis copyanima
	push $3
	spushs
	spop $a
	call [$a],Button_isin
	push $3
	call butgame,add
	push "globalpopup"
	push $4
	cthis copyanima
	push $4
	spushs
	push 1
	push 0
	spop $a
	call [$a],setframe
	push $5
	spushs
	spop $e
	new img,[$e]
	push $5
	spushs
	push A
	push "swnd"
	push $3
	push "sblysk"
	push $4
	push "sanima"
	push $2
	push "sgr"
	push $8
	push "sitem"
	push $1
	push "spopexit"
	push $9
	spop $a
	call [$a],vars2
	push $6
	push "newitem"
	call dbgame,dbget
	push "fnthogui"
	cthis guifontcolor
	cthis newtext
	push $7
	push $1
	call dbitems,dbget
	push "fnthogui"
	cthis guifontcolor
	cthis newtext
	push $8
	spushs
	spop $e
	new gmimgvec,[$e]
	push $8
	spushs
	push A
	push $3
	push $4
	push $6
	push $7
	spop $a
	call [$a],addlist
	push $10
	spushs
	spop $e
	new gmimgvec,[$e]
	push $10
	spushs
	push A
	push $8
	push $9
	push $2
	spop $a
	call [$a],addlist
	push "globalpopup"
	push $9
	cthis copyanima
	push $9
	spushs
	push 2
	push 0
	spop $a
	call [$a],setframe
	push $9
	spushs
	spop $a
	call [$a],hide
	push $9
	spushs
	push $3
	push $1
	spop $a
	call [$a],BanGui67
l4829:
	localint $11
	push $2
	spushs
	spop $a
	call [$a],getcx
	push $3
	spushs
	spop $a
	call [$a],getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	pop $11
	localint $12
	push $2
	spushs
	spop $a
	call [$a],getcy
	push $3
	spushs
	spop $a
	call [$a],geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	pop $12
	push $3
	spushs
	push $11
	push $12
	spop $a
	call [$a],setpos
	push $4
	spushs
	push $11
	push $12
	spop $a
	call [$a],setpos
	push $9
	spushs
	push $11
	push $12
	spop $a
	call [$a],setpos
	localdef $13
	push 0.12
	pop $13
	push $6
	spushs
	push $3
	spushs
	spop $a
	call [$a],getcx
	push $6
	spushs
	spop $a
	call [$a],getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push $3
	spushs
	spop $a
	call [$a],getpy
	push $13
	push $3
	spushs
	spop $a
	call [$a],geth
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	push $7
	spushs
	push $3
	spushs
	spop $a
	call [$a],getcx
	push $7
	spushs
	spop $a
	call [$a],getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push $3
	spushs
	spop $a
	call [$a],getey
	push $13
	push $3
	spushs
	spop $a
	call [$a],geth
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	sub $a,$b
	push $7
	spushs
	spop $a
	call [$a],geth
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setpos
	localdef $14
	push $4
	spushs
	spop $a
	call [$a],getz
	push 5
	pop $b
	popax
	add $a,$b
	pop $14
	push $2
	spushs
	push $14
	spop $a
	call [$a],setz
	push $5
	spushs
	push $14
	spop $a
	call [$a],setz
	push $6
	spushs
	push $14
	spop $a
	call [$a],setz
	push $7
	spushs
	push $14
	spop $a
	call [$a],setz
	push $9
	spushs
	push $14
	spop $a
	call [$a],setz
	call butgame,sort
	push $8
	spushs
	spop $a
	call [$a],show
	push $3
	spushs
	spop $a
	call [$a],getpx
	push igmoffsetx
	cmpjl
	cmp0
	je l4838
	push $10
	spushs
	push igmoffsetx
	push $3
	spushs
	spop $a
	call [$a],getpx
	pop $b
	popax
	sub $a,$b
	push 0
	spop $a
	call [$a],move
l4838:
	push $3
	spushs
	spop $a
	call [$a],getex
	push iResX
	push igmoffsetx
	pop $b
	popax
	add $a,$b
	cmpja
	cmp0
	je l4840
	push $10
	spushs
	push iResX
	push igmoffsetx
	pop $b
	popax
	add $a,$b
	push $3
	spushs
	spop $a
	call [$a],getex
	pop $b
	popax
	sub $a,$b
	push 0
	spop $a
	call [$a],move
l4840:
	push $3
	spushs
	spop $a
	call [$a],getpy
	push igmoffsety
	cmpjl
	cmp0
	je l4842
	push $10
	spushs
	push 0
	push igmoffsety
	push $3
	spushs
	spop $a
	call [$a],getpy
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],move
l4842:
	push $3
	spushs
	spop $a
	call [$a],getey
	push iResY
	push igmoffsety
	pop $b
	popax
	add $a,$b
	cmpja
	cmp0
	je l4844
	push $10
	spushs
	push 0
	push iResY
	push igmoffsety
	pop $b
	popax
	add $a,$b
	push $3
	spushs
	spop $a
	call [$a],getey
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],move
l4844:
	push $5
	spushs
	push A
	push $3
	push $4
	push $6
	push $7
	push $2
	spop $a
	call [$a],imgbuildfromlist
	push $8
	spushs
	spop $a
	call [$a],hide
	push $2
	spushs
	spop $a
	call [$a],hide
	call sfxopenpopup,play
	push $5
	spushs
	push ishowpouptime
	push 1
	push 1
	push "BanGui72"
	spop $a
	call [$a],anzoomfadeinout
	end method
	method BanGui67
	localdef $1
	localdef $2
	pop $2
	pop $1
	push A
	push "swnd"
	push $1
	push "sitem"
	push $2
	cthis vars2
	push "isbutin"
	push "BanGui68"
	cthis addmethod
	push "butmoveon"
	push "BanGui69"
	cthis addmethod
	push "butmoveoff"
	push "BanGui70"
	cthis addmethod
	push "butclick"
	push "BanGui71"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method BanGui68
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 1
	cthis isin
	cmp0
	jne l4831
	push swnd
	spushs
	spop $a
	call [$a],isvisible
	jmp l4832
l4830:
	push 0
	jmp l4832
l4831:
	push 1
l4832:
	end method
	method BanGui69
	call advmouse,setact
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	end method
	method BanGui70
	call advmouse,setstd
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	end method
	method BanGui71
	call advmouse,setstd
	localdef $1
	push "popup_"
	push sitem
	pop $b
	popax
	add $a,$b
	push "_clickexit"
	pop $b
	popax
	add $a,$b
	pop $1
	call gameapi,getgamename
	spushs
	push $1
	spop $a
	call [$a],hasmet
	cmp0
	je l4834
	call gameapi,getgamename
	spushs
	push $1
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	jmp l4833
l4834:
	push "clickexit"
	cthis hasaddedmet
	cmp0
	je l4836
	cthis clickexit
	jmp l4835
l4836:
	push sitem
	cthis hide_itempopup
l4835:
l4833:
	end method
	method BanGui72
	cthis hide
	push sgr
	spushs
	spop $a
	call [$a],show
	push sanima
	spushs
	spop $a
	call [$a],show
	push spopexit
	spushs
	spop $a
	call [$a],show
	call butgame,onmousemove
	call gameapi,getgamename
	spushs
	push "popup_"
	push sitem
	pop $b
	popax
	add $a,$b
	push "_in"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	end method
	method hide_itempopup
	localstring $1
	pop $1
	call gameapi,getgamename
	spushs
	push $1
	spop $a
	call [$a],BanGui73
	end method
	method BanGui73
	localstring $1
	pop $1
	localdef $2
	push "anpopup_"
	push $1
	pop $b
	popax
	add $a,$b
	pop $2
	localdef $3
	push $2
	push "_blysk"
	pop $b
	popax
	add $a,$b
	pop $3
	localdef $4
	push "_img"
	push $1
	pop $b
	popax
	add $a,$b
	pop $4
	localdef $5
	push "_txtnewitem"
	push $1
	pop $b
	popax
	add $a,$b
	pop $5
	localdef $6
	push "_txtitem"
	push $1
	pop $b
	popax
	add $a,$b
	pop $6
	localdef $7
	push "_gr_"
	push $1
	pop $b
	popax
	add $a,$b
	pop $7
	localdef $8
	push $2
	push "_exit"
	pop $b
	popax
	add $a,$b
	pop $8
	push "taken_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l4846
	push $4
	spushs
	push A
	push $2
	push $5
	push $6
	spop $a
	call [$a],imgbuildfromlist
	jmp l4845
l4846:
	push $4
	spushs
	push A
	push $2
	push $3
	push $5
	push $6
	push $4
	spushs
	spop $a
	call [$a],sanima
	spop $a
	call [$a],imgbuildfromlist
	push $4
	spushs
	spop $a
	call [$a],sanima
	spushs
	spop $a
	call [$a],hide
l4845:
	push $7
	spushs
	spop $a
	call [$a],hide
	push $8
	spushs
	spop $a
	call [$a],hide
	call sfxclosepopup,play
	push $4
	spushs
	push ishowpouptime
	push 1
	popax
	sub 0,$a
	push 1
	popax
	sub 0,$a
	push "BanGui74"
	spop $a
	call [$a],anzoomfadeinout
	end method
	method BanGui74
	cthis hide
	call gameapi,getgamename
	spushs
	push "popup_"
	push sitem
	pop $b
	popax
	add $a,$b
	push "_out"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	spop $a
	call [$a],[$d]
	end method
	method isvisible_itempopup
	localstring $1
	pop $1
	call gameapi,getgamename
	spushs
	push "anpopup_"
	push $1
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],hasvar
	cmp0
	je l4847
	push "anpopup_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],isvisible
	cmp0
	jne l4850
	push "_img"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],isvisible
	jmp l4851
l4849:
	push 0
	jmp l4851
l4850:
	push 1
l4851:
	jmp l4852
l4847:
	push 0
	jmp l4852
l4848:
	push 1
l4852:
	end method
	method getitempopupshadow
	localstring $1
	pop $1
	push "anpopup_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_blysk"
	pop $b
	popax
	add $a,$b
	end method
	method hideitempopupshadow
	localstring $1
	pop $1
	push $1
	cthis getitempopupshadow
	spushs
	spop $a
	call [$a],hide
	end method
	method show_objective
	localstring $1
	pop $1
	localint $2
	push $1
	call dbobject,findbyrow
	pop $2
	push $2
	push 0
	cmpjl
	cmp0
	je l4854
	ret
l4854:
	localint $3
	push $2
	call dbobject,getcolsno
	pop $3
	push $3
	push 2
	cmpjl
	cmp0
	je l4856
	ret
l4856:
	call _vecobjective,free
	push "imgobjective"
	call _vecobjective,add
	localint $4
	push 1
	pop $4
l4857:
	push $4
	push $3
	cmpjl
	cmp0
	je l4858
	jmp l4860
l4859:
	add $4,1
	pop $4
	jmp l4857
l4860:
	localdef $5
	push "txtobject"
	push $4
	pop $b
	popax
	add $a,$b
	pop $5
	push $5
	spushs
	push $2
	push $4
	call dbobject,get
	call subtitle,getcolor
	spop $a
	call [$a],txtsetcol
	push $5
	spushs
	call imgobjective,getcx
	push $5
	spushs
	spop $a
	call [$a],getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call imgobjective,getcy
	push 2
	push $4
	pop $b
	popax
	sub $a,$b
	push $5
	spushs
	spop $a
	call [$a],geth
	push 2
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	sub $a,$b
	spop $a
	call [$a],setpos
	push $5
	call _vecobjective,add
	jmp l4859
l4858:
	push "_vecobjective"
	call imgobject,imgbuildfromvec
	call imgobjective,hide
	call imgobject,show
	push iGuiZ
	call imgobject,setz
	call anguibook,getex
	push 10
	pop $b
	popax
	add $a,$b
	call anguibook,getpy
	push 10
	pop $b
	popax
	sub $a,$b
	call imgobject,geth
	pop $b
	popax
	sub $a,$b
	call imgobject,setpos
	push ishowpouptime
	push "BanGui75"
	call imgobject,anzoomfadein
	end method
	method BanGui75
	call timfinobj,play
	end method
	method load_2nd_view
	localstring $1
	pop $1
	call gameapi,getgamename
	spushs
	push $1
	spop $a
	call [$a],BanGui76
	end method
	method BanGui76
	localdef $1
	pop $1
	push "anczachy2w"
	cthis hasvar
	neg
	cmp0
	je l4862
	push "anczachy2w"
	push "$scripts/ad02_brama/czachy2w.pyz"
	push 0
	cthis newanima
	push "anczachy2w"
	call bgr1,add
	call anczachy2w,anhideonsetframe
	push 0
	call anczachy2w,play
	push "anczachy2w"
	cthis gui_toloupe
l4862:
	end method
	method watch_film
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push "filmpath"
	push $1
	call clsave,set
	push "filmdb"
	push "film"
	call clsave,set
	push "nextgame_type"
	push $2
	call clsave,set
	push "nextgame_path"
	push $3
	call clsave,set
	push $2
	push "-def"
	cmpje
	cmp0
	jne l4865
	push $2
	push "-adv"
	cmpje
	jmp l4866
l4864:
	push 0
	jmp l4866
l4865:
	push 1
l4866:
	cmp0
	je l4867
	push "nextgame"
	push "game"
	push "nextgame_path"
	call clsave,get
	pop $b
	popax
	add $a,$b
	push "0"
	pop $b
	popax
	add $a,$b
	call clsave,set
	jmp l4863
l4867:
	push "nextgame"
	push "nextgame_path"
	call clsave,get
	call clsave,set
l4863:
	push "BanFilm"
	call gameapi,play
	end method
	method znaklclick
	localstring $1
	pop $1
	push "guibook_taken"
	call clsave,bis
	cmp0
	je l4869
	push $1
	cthis gui_removefromloupe
	push $1
	push "b"
	pop $b
	popax
	add $a,$b
	cthis gui_removefromloupe
	push $1
	spushs
	spop $a
	call [$a],anhide
	push $1
	push "b"
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],anhide
	push $1
	spushs
	spop $a
	call [$a],disable
	push "e1_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_wziety"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	push "anznakout"
	cthis gui_toloupe
	push $1
	spushs
	spop $a
	call [$a],getcx
	push $1
	spushs
	spop $a
	call [$a],getcy
	call anznakout,setpos
	push 0
	push "BanGui77"
	call anznakout,anplayfin
	call anznakout,hide
	push GAME
	spushs
	push "fxfounditem2"
	spop $a
	call [$a],hasvar
	neg
	cmp0
	je l4871
	push GAME
	spushs
	push "founditem2 50"
	spop $a
	call [$a],sfx=
l4871:
	call fxfounditem2,play
l4869:
	end method
	method BanGui77
	cthis hide
	cthis getname
	cthis gui_removefromloupe
	end method
	method loadznakout
	push "$scripts/sys_gui/znakout.pyzH"
	cthis img=
	push 1000
	popax
	sub 0,$a
	push 1000
	popax
	sub 0,$a
	call anznakout,setpos
	end method
	method setasznakbut
	localstring $1
	pop $1
	push "e1_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_wziety"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l4873
	push $1
	spushs
	spop $a
	call [$a],hide
	push $1
	push "b"
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],hide
	jmp l4872
l4873:
	push $1
	spushs
	push 10
	spop $a
	call [$a],setz
	push $1
	cthis gui_toloupe
	push $1
	push "b"
	pop $b
	popax
	add $a,$b
	cthis gui_toloupe
	push $1
	push "b"
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],anhideonsetframe
	push $1
	push "b"
	pop $b
	popax
	add $a,$b
	spushs
	push 0
	spop $a
	call [$a],play
	push $1
	spushs
	spop $a
	call [$a],hide
	push $1
	spushs
	spop $a
	call [$a],Button_moveonms
	push $1
	spushs
	spop $a
	call [$a],Button_moveoffms
	push $1
	spushs
	push "isbutin"
	push "BanGui78"
	spop $a
	call [$a],addmethod
	push $1
	spushs
	push "butclick"
	push "BanGui79"
	spop $a
	call [$a],addmethod
	push $1
	call butgame,add
l4872:
	end method
	method BanGui78
	localdef $1
	localdef $2
	pop $2
	pop $1
	cthis loupe_visible
	cmp0
	je l4875
	push $1
	push $2
	push 0
	push 0
	cthis isin
	jmp l4877
l4875:
	push 0
	jmp l4877
l4876:
	push 1
l4877:
	cmp0
	je l4878
	push 1
	jmp l4874
l4878:
	push 0
l4874:
	end method
	method BanGui79
	cthis advstdstate
	neg
	cmp0
	je l4880
	ret
l4880:
	cthis getname
	cthis znaklclick
	cthis setadvstdstate
	end method
	method keydown
	cthis gmcontrol_keydown
	push igmdebug
	cmp0
	je l4882
	call moddbg,dbkeydown
	push "f"
	call keyboard,iskeydown
	cmp0
	je l4884
	push ifullscreen
	neg
	pop ifullscreen
	push ifullscreen
	call engine,setfullscreen
l4884:
l4882:
	end method
	method _save_game
	localstring $1
	pop $1
	push $1
	cthis save_pocket
	clparent classadv,advautosave
	push $1
	clparent classadv,_advsave
	end method
	method _load_game
	localstring $1
	pop $1
	push $1
	cthis load_pocket
	push $1
	clparent classadv,_advload
	end method
	method save_game
	cthis getsavename
	cthis _save_game
	end method
	method load_game
	cthis getsavename
	cthis _load_game
	end method
	method can_save
	push PrzygodaMode
	cmp0
	je l4885
	cthis advstdstate
	jmp l4887
l4885:
	push 0
	jmp l4887
l4886:
	push 1
l4887:
	end method
	method autosave_game
	cthis can_save
	cmp0
	je l4889
	cthis save_game
l4889:
	end method
	method autoload_game
	cthis can_save
	cmp0
	je l4891
	cthis load_game
l4891:
	end method
	end class

	class classadvstdgame2
	parent ClassGameController
	parent classadvstdgame
	parent BanGui
	method init
	push 0
	pop bHOInventory
	clparent ClassGameController,init
	new Button,butgame
	clparent BanGui,init
	call banguisrc,load
	clparent classadvstdgame,init
	cthis initadventure
	cthis initgui
	new Film,film1
	push "onfinish"
	push "classadvstdgame20"
	call film1,addmethod
	cthis playbehoninit
	end method
	method classadvstdgame20
	cthis advsetstdstate
	cthis free
	push "beh_END_FILM"
	cthis playbehif
	popax
	end method
	method playfilm
	localstring $1
	localstring $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push "state_playfilm"
	cthis advsetstate
	push "film"
	push $1
	call clsave,set
	push $3
	push $4
	call film1,setpos
	push "scripts/"
	push $1
	pop $b
	popax
	add $a,$b
	push "/"
	pop $b
	popax
	add $a,$b
	push $2
	call film1,playfilm
	end method
	method playfilmob
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $1
	push $2
	push $3
	spushs
	spop $a
	call [$a],getpx
	push $3
	spushs
	spop $a
	call [$a],getpy
	cthis playfilm
	end method
	method setasbanbeh
	localstring $1
	pop $1
	push "setas"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	clparent advbanbeh,[$d]
	end method
	method subloadbeh
	localstring $1
	localstring $2
	localstring $3
	localint $4
	localint $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	localstring $6
	localstring $7
	localint $8
	localint $9
	push ":"
	call $1,strsubes
	pop $1
	push $1
	spushs
	push "popin"
	cmpst
	je l4894
	push "popout"
	cmpst
	je l4894
	jmp l4893
l4894:
	spop $a
	push $3
	spushs
	push $4
	push $5
	spop $a
	call [$a],get
	pop $7
	add $5,1
	pop $5
	push $7
	push "("
	cmpje
	cmp0
	je l4896
	push $5
	pop $8
	push $3
	spushs
	push $4
	push $5
	spop $a
	call [$a],get
	pop $7
l4897:
	push $7
	push ")"
	cmpjne
	cmp0
	je l4898
	push $3
	spushs
	push $4
	push $5
	spop $a
	call [$a],get
	pop $7
	add $5,1
	pop $5
	jmp l4897
l4898:
	jmp l4895
l4896:
	push "beh popin: no ( error"
	spushs
	spop $h
	call $h,print
l4895:
	push $2
	spushs
	push $3
	push $4
	push $8
	push $1
	push "popup"
	spop $a
	call [$a],setasbanbeh
	jmp l4892
l4893:
	push "openbook"
	cmpst
	jne l4899
	spop $a
	push $3
	spushs
	push $4
	push $5
	spop $a
	call [$a],get
	pop $7
	add $5,1
	pop $5
	push $2
	spushs
	push $7
	push $1
	spop $a
	call [$a],setasbanbeh
	jmp l4892
l4899:
	push "closebook"
	cmpst
	jne l4900
	spop $a
	push $2
	spushs
	push $1
	spop $a
	call [$a],setasbanbeh
	jmp l4892
l4900:
	spop $a
	sub $5,1
	pop $5
l4892:
	push $5
	end method
	method classbehhero_preeval
	end method
	method classbehhero_posteval
	localdef $1
	cthis gettyp
	pop $1
	push bskip
	cmp0
	je l4902
	push $1
	push "talk"
	cmpje
	cmp0
	jne l4905
	push $1
	push "sndplay"
	cmpje
	jmp l4906
l4904:
	push 0
	jmp l4906
l4905:
	push 1
l4906:
	jmp l4907
l4902:
	push 0
	jmp l4907
l4903:
	push 1
l4907:
	cmp0
	je l4908
	call imgskipdialog,show
	push iResX
	push igmoffsetx
	pop $b
	popax
	add $a,$b
	call imgskipdialog,getw
	pop $b
	popax
	sub $a,$b
	push igmoffsety
	call subtitle,geth
	pop $b
	popax
	add $a,$b
	call imgskipdialog,setpos
	jmp l4901
l4908:
	call imgskipdialog,hide
l4901:
	end method
	method mousemove
	clparent ClassGameController,mousemove
	cthis gui_mousemove
	clparent classadvstdgame,mousemove
	end method
	method mouselclick
	push "onmouselclick"
	call __grobj,eval
	push gui_skipclick
	cmp0
	je l4910
	push 0
	pop gui_skipclick
	jmp l4909
l4910:
	cthis advstdstate
	cmp0
	je l4912
	cthis gui_mouselclick
	jmp l4914
l4912:
	push 0
	jmp l4914
l4913:
	push 1
l4914:
	cmp0
	je l4915
	cthis advmsclick
l4915:
l4909:
	cthis mouse_LCLICK
	end method
	method mouserclick
	push "onmouselclick"
	call __grobj,eval
	cthis advstdstate
	cmp0
	je l4917
	cthis gui_mouserclick
	jmp l4919
l4917:
	push 0
	jmp l4919
l4918:
	push 1
l4919:
	cmp0
	je l4920
	cthis advmsrclick
l4920:
	cthis mouse_RCLICK
	end method
	method mouselrel
	push "onmouselrel"
	call __grobj,eval
	clparent classadvcontroller,mouselrel
	end method
	end class

	class BansheeStd
	parent StdGame
	parent BanGui
	method init
	localstring $1
	pop $1
	push $1
	clparent StdGame,init
	push PrzygodaMode
	cmp0
	je l4922
	clparent BanGui,init
	call banguisrc,load
	cthis initgui
	push bHOInventory
	neg
	cmp0
	je l4924
	cthis inventory_show
l4924:
	new string,save_prefix
	push "epizod"
	call clsave,get
	spushs
	push 0
	push 2
	spop $h
	call $h,getb
	push "_"
	pop $b
	popax
	add $a,$b
	push GAME
	pop $b
	popax
	add $a,$b
	push "_"
	pop $b
	popax
	add $a,$b
	pop save_prefix
l4922:
	end method
	method butpopexit
	call anpopexit,BansheeStd0
	end method
	method BansheeStd0
	cthis Button_isinalpha
	push A
	push "bholdon"
	push 0
	cthis vars2
	push "butmoveon"
	push "BansheeStd1"
	cthis addmethod
	push "butmoveoff"
	push "BansheeStd2"
	cthis addmethod
	push "butclick"
	push "BansheeStd3"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method BansheeStd1
	call advmouse,setbut
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	end method
	method BansheeStd2
	call advmouse,setstd
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	end method
	method BansheeStd3
	cthis advstdstate
	neg
	cmp0
	jne l4927
	push bholdon
	jmp l4928
l4926:
	push 0
	jmp l4928
l4927:
	push 1
l4928:
	cmp0
	je l4929
	ret
l4929:
	call sfxbutclick2,play
	cthis mend
	end method
	method butpopexitisinramka
	push "isbutin"
	push "BansheeStd4"
	call anpopexit,addmethod
	end method
	method BansheeStd4
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 1
	cthis isin
	cmp0
	jne l4931
	push $1
	push $2
	push 1
	push 0
	call anramka,isin
	neg
	jmp l4932
l4930:
	push 0
	jmp l4932
l4931:
	push 1
l4932:
	end method
	method loadimgexitbut
	call imgbkg,Button_isin
	push "butclick"
	push "BansheeStd5"
	call imgbkg,addmethod
	push "imgbkg"
	call butgame,add
	end method
	method BansheeStd5
	cthis advstdstate
	cmp0
	je l4934
	cthis mend
l4934:
	end method
	method loadhoexit
	push "anhoexit"
	push "$scripts/sys_gui/popexit.pyz"
	push 1000
	cthis newanima
	push igmoffsetx
	push iResX
	pop $b
	popax
	add $a,$b
	call anhoexit,getw
	pop $b
	popax
	sub $a,$b
	push igmoffsety
	call anhoexit,ansetbpos
	call anhoexit,Button_stdalpha
	push "butclick"
	push "BansheeStd6"
	call anhoexit,addmethod
	push "anhoexit"
	call butgame,add
	end method
	method BansheeStd6
	cthis advstdstate
	cmp0
	je l4936
	push GAME
	spushs
	push "mexit_hidden"
	spop $a
	call [$a],hasmet
	cmp0
	je l4938
	cthis mexit_hidden
	jmp l4937
l4938:
	localdef $1
	push "GAME_sgmlastscene"
	call clsave,get
	pop $1
	push $1
	spushs
	push "game"
	spop $h
	call $h,strsubbs
	spushs
	push "0"
	spop $h
	call $h,strsubes
	push $1
	cthis stdexitdefadv
l4937:
l4936:
	end method
	method get_mg_save
	push save_prefix
	push "finished"
	pop $b
	popax
	add $a,$b
	end method
	method set_mg_finished
	cthis get_mg_save
	call clsave,bset
	end method
	method is_mg_finished
	cthis get_mg_save
	call clsave,bis
	end method
	method mousemove
	cthis gmcontrol_mousemove
	push PrzygodaMode
	cmp0
	je l4940
	cthis gui_mousemove
l4940:
	call moddbg,msmove
	end method
	method mouserclick
	cthis gmcontrol_mouserclick
	push PrzygodaMode
	cmp0
	je l4942
	cthis advstdstate
	jmp l4944
l4942:
	push 0
	jmp l4944
l4943:
	push 1
l4944:
	cmp0
	je l4945
	cthis gui_mouserclick
	popax
l4945:
	end method
	end class

	class Banshee
	parent BansheeStd
	method init
	localstring $1
	pop $1
	push 0
	pop bHOInventory
	push $1
	clparent BansheeStd,init
	end method
	end class

	class HOBanshee
	parent Hidden
	parent BansheeStd
	method init
	localstring $1
	pop $1
	push 1
	pop bHOInventory
	push $1
	clparent BansheeStd,init
	cthis init_hidden
	cthis loadhoexit
	end method
	method mtoloupe
	localstring $1
	pop $1
	localstring $2
	push GAME
	spushs
	push $1
	spop $a
	call [$a],hasvar
	cmp0
	je l4947
	push $1
	pop $2
	jmp l4946
l4947:
	push $1
	cthis mgetel
	pop $2
l4946:
	push $2
	cthis gui_toloupe
	call grguiloupe,last
	spushs
	spop $a
	call [$a],getz
	call guiloupemask,setz
	push $2
	spushs
	spop $a
	call [$a],hide
	push $2
	spushs
	push "myz"
	push $2
	spushs
	spop $a
	call [$a],getz
	spop $a
	call [$a],var2
	push $2
	spushs
	spop $a
	call [$a],stxtview
	spushs
	cthis holoupecol
	spop $a
	call [$a],createtxt
	push $2
	spushs
	push "isbutin"
	push "HOBanshee0"
	spop $a
	call [$a],addmethod
	push $2
	spushs
	push "butmoveon"
	push "HOBanshee1"
	spop $a
	call [$a],addmethod
	push $2
	spushs
	push "butmoveoff"
	push "HOBanshee2"
	spop $a
	call [$a],addmethod
	end method
	method HOBanshee0
	localdef $1
	localdef $2
	pop $2
	pop $1
	cthis loupe_visible
	cmp0
	je l4949
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	push $1
	push $2
	push 0
	push 1
	cthis isin
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	jmp l4948
l4949:
	push 0
l4948:
	end method
	method holoupecol
	push 0
	push 202
	push 1
	ret
	end method
	end class

	game BanFilm
	parent StdGame
	method init
	push "film"
	clparent StdGame,init
	push "empty"
	call advmouse,set
	push PrzygodaMode
	cmp0
	je l4951
	cthis getsavename
	clparent BanGui,save_pocket
l4951:
	new Film,film1
	push 1
	call film1,bcenter=
	push 1
	call film1,bborders=
	push "mus"
	call film1,musicclass=
	push "onfinish"
	push "BanFilm0"
	call film1,addmethod
	new string,slastframe
	call film1,BanFilm1
	end method
	method BanFilm0
	call ccs,buildfromscreen
	localstring $1
	call gameapi,getgamename
	pop $1
	push "nextgame_type"
	call clsave,get
	spushs
	push "-def"
	cmpst
	jne l4953
	spop $a
	push "nextgame_path"
	call clsave,get
	push "nextgame"
	call clsave,get
	cthis gotoadv
	jmp l4952
l4953:
	push "-adv"
	cmpst
	jne l4954
	spop $a
	push "nextgame_path"
	call clsave,get
	push "nextgame"
	call clsave,get
	cthis gotoadv2
	jmp l4952
l4954:
	spop $a
	push "nextgame"
	call clsave,get
	call gameapi,play
l4952:
	end method
	method BanFilm1
	push "scripts/"
	push "filmpath"
	call clsave,get
	pop $b
	popax
	add $a,$b
	push "/"
	pop $b
	popax
	add $a,$b
	push "filmdb"
	call clsave,get
	cthis playfilm
	push sprefilm
	push iendklatka
	pop $b
	popax
	add $a,$b
	push ".jpg"
	pop $b
	popax
	add $a,$b
	pop slastframe
	end method
	method mouse_lclick
	call film1,isplaying
	cmp0
	je l4956
	push 1
	call film1,stop
l4956:
	end method
	method showfps
	push "cfps"
	cthis hasvar
	neg
	cmp0
	je l4958
	new CalcFPS,cfps
	push 14
	push 10
	push 10
	call cfps,stdset
l4958:
	call cfps,play
	end method
	end game

	game StartBanshee
	parent StdGame
	method init
	push "startbanshee"
	clparent StdGame,init
	push "ad001_kszew"
	push "gamead001_kszew0"
	cthis gotoadv
	end method
	end game

	new classgamepause,clpause
	new classgamemusic,clmusic
	push "sounds/bgr/"
	call clmusic,sndbgrpath
	push "sounds/music/"
	call clmusic,musicpath
	push "sounds/music.db"
	call clmusic,load
	new snd,sndakskermovon
	push "sounds/sfx/butmoveon.ogg"
	call sndakskermovon,load
	push 50
	call sndakskermovon,setvol
	class classasker2
	parent classasker
	method init
	clparent classasker,init
	new snd,sndaskexit
	push 0
	push 1
	call sndaskexit,setstartstopflag
	new snd,sndaskexitgame
	push 0
	push 1
	call sndaskexitgame,setstartstopflag
	new snd,sndyes
	push 0
	push 1
	call sndyes,setstartstopflag
	new snd,sndno
	push 0
	push 1
	call sndno,setstartstopflag
	new snd,sndaskrestart
	push 0
	push 1
	call sndaskrestart,setstartstopflag
	new snd,sndaskrestart2
	push 0
	push 1
	call sndaskrestart2,setstartstopflag
	cthis reload
	push "scripts/common/asker.pyz"
	push 12000
	cthis load
	push "sndakskermovon"
	cthis fxonmovon
	end method
	method reload
	push SNDPATH
	cthis setwavpath
	localdef $1
	cthis getsndpath
	pop $1
	push $1
	push "narexit.wav"
	pop $b
	popax
	add $a,$b
	call sndaskexit,load
	push $1
	push "narexitgame.wav"
	pop $b
	popax
	add $a,$b
	call sndaskexitgame,load
	push $1
	push "naryes.wav"
	pop $b
	popax
	add $a,$b
	call sndyes,load
	push $1
	push "narno.wav"
	pop $b
	popax
	add $a,$b
	call sndno,load
	push $1
	push "narrestart.wav"
	pop $b
	popax
	add $a,$b
	call sndaskrestart,load
	push $1
	push "narrestart.wav"
	pop $b
	popax
	add $a,$b
	call sndaskrestart2,load
	end method
	method askexittomenu
	push "sndaskexit"
	push "sndyes"
	push "sndno"
	push "myestomenu"
	push "mnotomenu"
	cthis ask
	end method
	method askexitgame
	push "sndaskexitgame"
	push "sndyes"
	push "sndno"
	push "myestomenu"
	push "mnotomenu"
	cthis ask
	end method
	method askrestart
	push "sndaskrestart"
	push "sndyes"
	push "sndno"
	push "myesrestart"
	push "mnorestart"
	cthis ask
	end method
	method askrestart2
	push "sndaskrestart2"
	push "sndyes"
	push "sndno"
	push "myesrestart"
	push "mnorestart"
	cthis ask
	end method
	method mnotomenu
	end method
	method myestomenu
	push GAME
	spushs
	push "clsave"
	spop $a
	call [$a],hasvar
	cmp0
	je l4960
	call clsave,free
l4960:
	call gameapi,getgamename
	spushs
	push "MainMenu"
	cmpst
	jne l4962
	spop $a
	push "exit"
	jmp l4961
l4962:
	spop $a
	push "MainMenu"
l4961:
	call gameapi,play
	end method
	method mnorestart
	call gameapi,getgamename
	spushs
	push "SubMenu"
	cmpst
	jne l4964
	spop $a
	push "MenuGry"
	jmp l4963
l4964:
	spop $a
	push "MainMenu"
l4963:
	call gameapi,play
	end method
	method myesrestart
	cthis crestart
	end method
	method ask
	localstring $1
	localstring $2
	localstring $3
	localstring $4
	localstring $5
	pop $5
	pop $4
	pop $3
	pop $2
	pop $1
	call ccs,isplaying
	neg
	cmp0
	je l4966
	push $1
	push $2
	push $3
	push $4
	push $5
	clparent classasker,ask
l4966:
	end method
	end class

	new classasker2,claskexit
	method LANG=
	localdef $1
	pop $1
	push $1
	pop LANG
	push "sounds/"
	pop SNDPATH
	push LANG
	push "pl"
	cmpje
	cmp0
	je l4968
	push ""
	pop LANG
l4968:
	call LANG,length
	push 0
	cmpja
	cmp0
	je l4970
	push LANG
	push "/"
	pop $b
	popax
	add $a,$b
	popax
	add SNDPATH,$a
	pop SNDPATH
l4970:
	call claskexit,reload
	end method
	new img,imglobcurs
	module clbuts
	method init
	end method
	method load
	new classbutton,buts
	push "scripts/common/buttons.pyz"
	push 4000
	push "imglobcurs"
	call buts,build
	call engine,actclassname
	push "butclick"
	call buts,transclickfunc
	call engine,actclassname
	push "butmovon"
	call buts,transmovonfunc
	call engine,actclassname
	push "butmovoff"
	call buts,transmovofffunc
	call buts,disableall
	new db,dbb
	push "scripts/common/buts.db"
	call dbb,load
	new snd,sndfxglobon
	push "sounds/sfx/globbutmovon.wav"
	call sndfxglobon,load
	push 50
	call sndfxglobon,setvol
	new def,bvisible
	push 1
	pop bvisible
	end method
	method reset
	call buts,disableall
	localdef $1
	call gameapi,getgamename
	pop $1
	localint $2
	push $1
	call dbb,findbyrow
	pop $2
	push $2
	push 0
	cmpjae
	cmp0
	je l4972
	localint $3
	push $2
	call dbb,getcolsno
	pop $3
	localint $4
	push 1
	pop $4
l4973:
	push $4
	push $3
	cmpjl
	cmp0
	je l4974
	jmp l4976
l4975:
	add $4,1
	pop $4
	jmp l4973
l4976:
	push $2
	push $4
	call dbb,get
	call buts,enable
	jmp l4975
l4974:
l4972:
	end method
	method setcursorpos
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	call buts,setcursorpos
	end method
	method enable
	localstring $1
	pop $1
	push $1
	call buts,enable
	end method
	method butmovon
	localstring $1
	pop $1
	call sndfxglobon,play
	call mouse,isvisible
	pop bvisible
	call mouse,show
	cthis getname
	push "_"
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	add $a,$b
	push "_butmoveon"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method butmovoff
	localstring $1
	pop $1
	push bvisible
	neg
	cmp0
	je l4978
	call mouse,hide
l4978:
	cthis getname
	push "_"
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	add $a,$b
	push "_butmoveoff"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	method butclick
	localstring $1
	pop $1
	push $1
	push "pause"
	cmpje
	cmp0
	je l4980
	call clpause,pause
	jmp l4979
l4980:
	push $1
	push "menu"
	cmpje
	cmp0
	je l4982
	call gameapi,getgamename
	spushs
	push "MainMenu"
	cmpst
	jne l4984
	spop $a
	call claskexit,askexitgame
	jmp l4983
l4984:
	spop $a
	call claskexit,askexittomenu
l4983:
	jmp l4981
l4982:
	push $1
	push "restart"
	cmpje
	cmp0
	je l4986
	call claskexit,askrestart
l4986:
l4981:
l4979:
	cthis getname
	push "_"
	pop $b
	popax
	add $a,$b
	push $1
	pop $b
	popax
	add $a,$b
	push "_butclick"
	pop $b
	popax
	add $a,$b
	spushs
	spop $d
	cthis [$d]
	end method
	end module

	class classplacepointer2
	parent classplacepointer
	method init
	clparent classplacepointer,init
	push "scripts/common/strzalka.pyz"
	cthis load
	end method
	end class

	call clbuts,load
	push "MainLoader"
	call gameapi,play
	game MainLoader
	parent StdGame
	method init
	push "mainloader"
	clparent StdGame,init
	push "scripts/scripts/defaults.adv"
	call modadv,load
	push "scripts/scripts/sounds.db"
	call modadv,loadsounds
	push "snd"
	call modadv,settalktype
	push "scripts/scripts/initscript.dsc"
	call modadv,loadscript
	push "saves/global.txt"
	call clsave,load
	cthis getname
	pop sgmlastscene
	call banbook,parse
	push "startgame:"
	call dbconf,dbget
	call gameapi,play
	end method
	end game

	game gameadvdef
	parent classadvstdgame2
	method init
	clparent classadvstdgame2,init
	new int,ifullscreen
	push 0
	pop ifullscreen
	end method
	method e1_load_loupe_brama
	call gameapi,getgamename
	spushs
	spop $a
	call [$a],gameadvdef0
	end method
	method gameadvdef0
	push "anczachy2w"
	cthis hasvar
	neg
	cmp0
	je l4988
	push "anczachy2w"
	push "$scripts/ad02_brama/czachy2w.pyz"
	push 0
	cthis newanima
	push "anczachy2w"
	call bgr1,add
	call anczachy2w,anhideonsetframe
	push 0
	call anczachy2w,play
	push "anczachy2w"
	cthis gui_toloupe
l4988:
	end method
	end game

	game gamead00_endintro0
	parent classadvstdgame2
	method init
	clparent classadvstdgame2,init
	push A
	push "e1rekator.pyzH"
	push "e1rekaset.pyzGH 20"
	cthis imgs=
	push "gamead00_endintro00"
	call gre1rekaset,each
	localint $1
	push 0
	pop $1
l4989:
	push $1
	push 4
	cmpjl
	cmp0
	je l4990
	jmp l4992
l4991:
	add $1,1
	pop $1
	jmp l4989
l4992:
	push "e1_reka_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_play"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l4994
	push $1
	cthis rekaplay
l4994:
	jmp l4991
l4990:
	end method
	method gamead00_endintro00
	localint $1
	pop $1
	push "myid"
	push $1
	push 1
	pop $b
	popax
	add $a,$b
	cthis var2
	push "onsetframe"
	push "gamead00_endintro01"
	cthis addmethod
	end method
	method gamead00_endintro01
	push myid
	push 1
	pop $b
	popax
	sub $a,$b
	push "ane1reka"
	push myid
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],framenr
	call ane1rekator,setframe
	call ane1rekator,getcx
	call ane1rekator,getcy
	cthis setpos
	end method
	method e1_getrekaid
	localstring $1
	pop $1
	push $1
	spushs
	push "zolty"
	cmpst
	jne l4996
	spop $a
	push 0
	jmp l4995
l4996:
	push "red"
	cmpst
	jne l4997
	spop $a
	push 1
	jmp l4995
l4997:
	push "blue"
	cmpst
	jne l4998
	spop $a
	push 2
	jmp l4995
l4998:
	push "miedz"
	cmpst
	jne l4999
	spop $a
	push 3
	jmp l4995
l4999:
	spop $a
	push 1
	popax
	sub 0,$a
l4995:
	end method
	method e1_dymki_loadhint
	new int,iddymekhint
	push 1
	pop iddymekhint
	push "onendframe"
	push "gamead00_endintro02"
	call andymki2,addmethod
	call andymki2,onendframe
	end method
	method gamead00_endintro02
	localint $1
	cthis framename
	cthis e1_getrekaid
	push 1
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	push 0
	cmpja
	cmp0
	je l5001
	push $1
	pop iddymekhint
l5001:
	end method
	method e1_click_dzwon
	localstring $1
	push "e1_click_dzwon"
	call clsave,get
	pop $1
	localint $2
	push "e1_dzwonki"
	call clsave,get
	pop $2
	push "e1_dzwon"
	push $2
	pop $b
	popax
	add $a,$b
	push $1
	call clsave,set
	push $2
	push 4
	cmpje
	cmp0
	je l5003
	push 1
	pop $2
	cthis recehide
	jmp l5002
l5003:
	push $1
	cthis e1_getrekaid
	localint $3
	pop $3
	push $3
	cthis rekaplay
	push "e1_reka_"
	push $3
	pop $b
	popax
	add $a,$b
	push "_play"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	add $2,1
	pop $2
l5002:
	push "e1_dzwonki"
	push $2
	call clsave,set
	localdef $4
	push "e1_dzwon1"
	call clsave,get
	pop $4
	localdef $5
	push "e1_dzwon2"
	call clsave,get
	pop $5
	localdef $6
	push "e1_dzwon3"
	call clsave,get
	pop $6
	localdef $7
	push "e1_dzwon4"
	call clsave,get
	pop $7
	push $4
	push "blue"
	cmpje
	cmp0
	je l5005
	push $5
	push "miedz"
	cmpje
	cmp0
	je l5005
	push $6
	push "red"
	cmpje
	cmp0
	je l5005
	push $7
	push "zolty"
	cmpje
	jmp l5007
l5005:
	push 0
	jmp l5007
l5006:
	push 1
l5007:
	cmp0
	jne l5009
	push $7
	push "blue"
	cmpje
	cmp0
	je l5010
	push $4
	push "miedz"
	cmpje
	cmp0
	je l5010
	push $5
	push "red"
	cmpje
	cmp0
	je l5010
	push $6
	push "zolty"
	cmpje
	jmp l5012
l5010:
	push 0
	jmp l5012
l5011:
	push 1
l5012:
	cmp0
	jne l5009
	push $6
	push "blue"
	cmpje
	cmp0
	je l5013
	push $7
	push "miedz"
	cmpje
	cmp0
	je l5013
	push $4
	push "red"
	cmpje
	cmp0
	je l5013
	push $5
	push "zolty"
	cmpje
	jmp l5015
l5013:
	push 0
	jmp l5015
l5014:
	push 1
l5015:
	cmp0
	jne l5009
	push $5
	push "blue"
	cmpje
	cmp0
	je l5016
	push $6
	push "miedz"
	cmpje
	cmp0
	je l5016
	push $7
	push "red"
	cmpje
	cmp0
	je l5016
	push $4
	push "zolty"
	cmpje
	jmp l5018
l5016:
	push 0
	jmp l5018
l5017:
	push 1
l5018:
	jmp l5019
l5008:
	push 0
	jmp l5019
l5009:
	push 1
l5019:
	cmp0
	je l5020
	push "e1_zgadla_dzwonki"
	call clsave,bset
	cthis recehide
l5020:
	end method
	method rekaplay
	localint $1
	pop $1
	push $1
	call gre1rekaset,get
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],play
	end method
	method recehide
	push "anhide"
	call gre1rekaset,eval
	localint $1
	push 0
	pop $1
l5021:
	push $1
	push 4
	cmpjl
	cmp0
	je l5022
	jmp l5024
l5023:
	add $1,1
	pop $1
	jmp l5021
l5024:
	push "e1_reka_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_play"
	pop $b
	popax
	add $a,$b
	push 0
	call clsave,set
	jmp l5023
l5022:
	end method
	method e1_hint_rece
	push "andymki2"
	cthis showhint
	push "ane1reka"
	push iddymekhint
	pop $b
	popax
	add $a,$b
	cthis showhint
	end method
	end game

	game gamead004_kspok0
	parent classadvstdgame2
	method init
	clparent classadvstdgame2,init
	end method
	method mousemove
	clparent classadvstdgame2,mousemove
	cthis advstdstate
	cmp0
	je l5026
	call mouse,getpos
	push 0
	push 1
	call anksiega,isin
	cmp0
	je l5026
	push "e1_ad004_najechana_ksiega"
	call clsave,bis
	neg
	jmp l5028
l5026:
	push 0
	jmp l5028
l5027:
	push 1
l5028:
	cmp0
	je l5029
	push "beh_ksiega_FOCUS"
	cthis playbehif
	popax
l5029:
	end method
	end game

	game mapTmp
	parent Banshee
	method init
	push "mapTmp"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "map_r1.pyz 2"
	push "popexit.pyz 3"
	cthis imgs=
	cthis butpopexit
	cthis stdstart
	end method
	method mend
	push "ad00_endintro"
	push "gamead00_endintro0"
	cthis stdexitdefadv
	end method
	end game

	game MainMenu
	parent StdGame
	method init
	push "mainmenu"
	clparent StdGame,init
	push "carmillas_masque.ogg -l"
	call mus,playstr
	push A
	push "bgrwiatrN 50"
	push "bgrlas2N 30"
	push "medalionleft 30"
	push "medalionright 30"
	cthis sfxs=
	push A
	push "bkg.jpg"
	push "szkielko.pyz 100"
	push "sciezka.pyz"
	push "buts.pyzG 50"
	push "maska.pyz 5"
	cthis imgs=
	call ansciezka,anhideonsetframe
	new filter,ftmaska
	push "anmaska"
	call ftmaska,link
	push "animy.adv"
	cthis animaloader_load
	localdef $1
	push "bonus"
	call grbuts,getsac
	pop $1
	push $1
	spushs
	spop $a
	call [$a],hide
	push $1
	call ftmaska,loupe
	push "credits"
	call grbuts,getsac
	pop $1
	push $1
	spushs
	spop $a
	call [$a],hide
	push $1
	call ftmaska,loupe
	push "MainMenu0"
	call grbuts,eval
	push "play"
	call grbuts,getsac
	spushs
	push "butclick"
	push "MainMenu2"
	spop $a
	call [$a],addmethod
	push "quit"
	call grbuts,getsac
	spushs
	push "butclick"
	push "MainMenu4"
	spop $a
	call [$a],addmethod
	push "onendframe"
	push "MainMenu6"
	call ansciezka,addmethod
	push "onfinish"
	push "MainMenu7"
	call ansciezka,addmethod
	new CalcFPS,cfps
	push 14
	push 10
	push 10
	call cfps,stdset
	new int,istep
	push 0
	pop istep
	push "timstep"
	push "MainMenu8"
	cthis cycle=
	call timstep,play
	push "advsetstdstate"
	call ccs,enter
	end method
	method MainMenu0
	push "isbutin"
	push "MainMenu1"
	cthis addmethod
	cthis Button_moveon
	cthis Button_moveoff
	cthis getname
	call butgame,add
	end method
	method MainMenu1
	localdef $1
	localdef $2
	pop $2
	pop $1
	localdef $3
	cthis actionname
	pop $3
	push $3
	push "bonus"
	cmpje
	cmp0
	jne l5032
	push $3
	push "credits"
	cmpje
	jmp l5033
l5031:
	push 0
	jmp l5033
l5032:
	push 1
l5033:
	cmp0
	je l5034
	push $1
	push $2
	push 0
	push 1
	call anmaska,isin
	cmp0
	je l5035
	push $1
	push $2
	push 0
	push 0
	cthis isin
	jmp l5037
l5035:
	push 0
	jmp l5037
l5036:
	push 1
l5037:
	jmp l5030
l5034:
	push $1
	push $2
	push 1
	push 0
	cthis isin
l5030:
	end method
	method MainMenu2
	cthis advstdstate
	cmp0
	je l5039
	push "MainMenu3"
	call ccs,close
l5039:
	end method
	method MainMenu3
	push "StartBanshee"
	call gameapi,play
	end method
	method MainMenu4
	cthis advstdstate
	cmp0
	je l5041
	push "MainMenu5"
	call ccs,close
l5041:
	end method
	method MainMenu5
	call gameapi,exit
	end method
	method MainMenu6
	cthis getcx
	call anszkielko,getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	cthis getcy
	call anszkielko,geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call anszkielko,ansetbpos
	call anszkielko,getposx
	call anszkielko,getposy
	call anmaska,setpos
	call butgame,onmousemove
	end method
	method MainMenu7
	push 1
	popax
	sub 0,$a
	cthis actionnr
	push 1
	pop $b
	popax
	add $a,$b
	cthis nofactions
	pop $b
	popax
	div $a,$b
	push $d
	cthis play
	end method
	method MainMenu8
	localint $1
	call ansciezka,getcx
	pop $1
	localint $2
	call ansciezka,getcy
	pop $2
	push istep
	push 2
	pop $b
	popax
	div $a,$b
	push $d
	cmp0
	je l5043
	call ansciezka,ansetnextfr
	push $1
	call ansciezka,getcx
	pop $b
	popax
	add $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $1
	push $2
	call ansciezka,getcy
	pop $b
	popax
	add $a,$b
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $2
l5043:
	push $1
	call anszkielko,getw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	push $2
	call anszkielko,geth
	push 2
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	call anszkielko,ansetbpos
	call anszkielko,getposx
	call anszkielko,getposy
	call anmaska,setpos
	call butgame,onmousemove
	add istep,1
	pop istep
	cthis play
	end method
	method animaloader_an
	localstring $1
	localstring $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push $2
	spushs
	push $3
	push $4
	spop $a
	call [$a],get
	spushs
	push "-toloupe"
	cmpst
	jne l5045
	spop $a
	push $1
	call ftmaska,loupe
	jmp l5044
l5045:
	spop $a
l5044:
	push $4
	end method
	end game

	game BanTest
	parent StdGame
	method init
	push "bantest"
	clparent StdGame,init
	push A
	push "niebo.pyz"
	push "slonce.pyz 1"
	push "chmury.pyzG 3"
	push "drzewo.pyzP 10"
	push "wdali1.pyz 12"
	push "wod1.pyzP 15"
	push "wod2.pyzP 20"
	push "wod3.pyzP 25"
	push "wod4.pyzP 30"
	push "wod5.pyzP 35"
	push "wod6.pyzP 40"
	push "wzgorze.pyz 45"
	push "wdali2.pyz 50"
	push "fog1.pyz 55"
	push "ogrodzenie.pyz 60"
	push "fire1.pyzP 65"
	push "fire2.pyzP 70"
	push "woda.pyzP 75"
	push "krople.pyzP 80"
	push "fogslow.pyzH 85"
	push "krzak1.pyzP 90"
	push "drzewo1.pyzP 95"
	push "altana.pyz 100"
	push "cien1.pyzP 105"
	push "galaz.pyzP 110"
	push "mglagora.pyz 115"
	push "liscie2.pyzG 116"
	push "lupamask.pyz 20"
	push "lupa.pyz 125"
	cthis imgs=
	push A
	push "bgrlas2N"
	push "bgrdeszczN 0"
	push "bgrrzeka1N 0"
	push "ogien2N 0"
	push "bgrwiatrN 0"
	cthis sfxs=
	call grliscie2,hide
	push 0
	push 50
	popax
	sub 0,$a
	call anslonce,move
	push "fxogien1"
	push "ogien2.ogg"
	cthis newsfx
	push 0
	call fxogien1,setvol
	call fxogien1,playloop
	new filter,ftlupa
	push "anlupamask"
	call ftlupa,link
	push 4
	call grchmury,get
	call ftlupa,loupe
	push 4
	call grchmury,get
	spushs
	spop $a
	call [$a],hide
	push "anwzgorze"
	call ftlupa,loupe
	call anwzgorze,hide
	push "angalaz"
	call ftlupa,loupe
	call angalaz,hide
	push "onfinish"
	push "BanTest0"
	call angalaz,addmethod
	push "andrzewo"
	call ftlupa,loupe
	call andrzewo,hide
	cthis ustaw_dzwieki
	push 1
	call grchmury,get
	push 0.25
	push 0
	clparent SetAnMover,setas
	push 3
	call grchmury,get
	push 0.5
	push 0
	clparent SetAnMover,setas
	push 4
	call grchmury,get
	push 1
	push 0
	clparent SetAnMover,setas
	push 5
	call grchmury,get
	push 1.5
	push 0
	clparent SetAnMover,setas
	push 1
	call grchmury,sortz
	push 1
	call grchmury,get
	spushs
	spop $a
	call [$a],sam_copy
	push 3
	call grchmury,get
	spushs
	spop $a
	call [$a],sam_copy
	push 4
	call grchmury,get
	spushs
	spop $a
	call [$a],sam_copy
	push "anfog1"
	push 0.55
	push 0
	clparent SetAnMover,setas
	call anfog1,sam_copy
	push "timgla"
	push "BanTest1"
	cthis cycle=
	call timgla,play
	call advmouse,setstd
	end method
	method BanTest0
	push 1
	popax
	sub 0,$a
	cthis play
	cthis hide
	end method
	method BanTest1
	call anfog1,sam_move
	push "sam_move"
	call grchmury,eval
	cthis ustaw_dzwieki
	cthis play
	end method
	method sam_move
	end method
	method ustaw_dzwieki
	push "fxbgrdeszcz"
	push 70
	push 22
	push 550
	push 0
	spushs
	call mouse,getposx
	call andrzewo,getcx
	pop $b
	popax
	sub $a,$b
	call mouse,getposy
	call andrzewo,getcy
	call andrzewo,geth
	push 4
	pop $b
	popax
	div $a,$b
	psax
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	sub $a,$b
	spop $h
	call $h,length
	clparent SoundSource,setvol
	push "fxbgrrzeka1"
	push 70
	push 12
	push 350
	push 0
	spushs
	call mouse,getposx
	push 343
	pop $b
	popax
	sub $a,$b
	call mouse,getposy
	push 574
	pop $b
	popax
	sub $a,$b
	spop $h
	call $h,length
	clparent SoundSource,setvol
	push "fxogien1"
	push 40
	push 2
	push 200
	push 0
	spushs
	call mouse,getposx
	call anfire1,getcx
	pop $b
	popax
	sub $a,$b
	call mouse,getposy
	call anfire1,getcy
	pop $b
	popax
	sub $a,$b
	spop $h
	call $h,length
	clparent SoundSource,setvol
	push "fxogien2"
	push 40
	push 2
	push 200
	push 0
	spushs
	call mouse,getposx
	call anfire2,getcx
	pop $b
	popax
	sub $a,$b
	call mouse,getposy
	call anfire2,getcy
	pop $b
	popax
	sub $a,$b
	spop $h
	call $h,length
	clparent SoundSource,setvol
	push "fxbgrwiatr"
	push 80
	push 12
	push 600
	push 0
	spushs
	call mouse,getposx
	push iResX
	pop $b
	popax
	sub $a,$b
	call mouse,getposy
	push 0.2
	push iResY
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	sub $a,$b
	spop $h
	call $h,length
	clparent SoundSource,setvol
	end method
	method key_down
	push "space"
	call keyboard,iskey
	cmp0
	je l5047
	localdef $1
	cthis getgraphpath
	push "chmura1/"
	pop $b
	popax
	add $a,$b
	pop $1
	call grchmury,srcanima
	spushs
	push $1
	spop $a
	call [$a],saveimages
l5047:
	end method
	method mouse_move
	call mouse,getpos
	call anlupa,setpos
	call mouse,getpos
	call anlupamask,setpos
	end method
	method mouse_lclick
	end method
	end game

	game TmpGame
	parent StdGame
	method init
	localstring $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push $3
	pop sNextGame
	push $2
	pop sNextGamePath
	push $1
	pop sNextGameType
	push "bantest"
	clparent StdGame,init
	push "$scripts/bantest/minigame.png"
	cthis img=
	push "timfin"
	push 2000
	push "_stdexit"
	cthis timplay
	end method
	end game

	game MojTest
	parent StdGame
	method init
	push "bantest"
	clparent StdGame,init
	new img,imgbg
	push igmappw
	push igmapph
	cthis black
	push 255
	call imgbg,create
	localdef $1
	push 5
	pop $1
	push "dupa"
	pop $1
	localdef $2
	push 20
	cthis stdfont
	pop $2
	push "txt1"
	push $1
	push $2
	cthis white
	cthis newtext
	push igmoffsetx
	push igmoffsety
	call txt1,setpos
	localdef $1
	push "dupa"
	pop $1
	push "txt2"
	push $1
	push $2
	cthis white
	cthis newtext
	push igmoffsetx
	push igmoffsety
	call txt1,geth
	pop $b
	popax
	add $a,$b
	call txt2,setpos
	end method
	end game

	game HO07_Gruz
	parent HOBanshee
	method init
	new anima,ankrasy
	push "scripts/ho07_gruz/krasy.pyz"
	call ankrasy,load
	call ankrasy,hide
	push "ho07_gruz"
	clparent HOBanshee,init
	push "banshee2.ogg -v 70 -l"
	call mus,playstr
	push A
	push "bkg.jpg"
	push "puszka.pyzH 600"
	cthis imgs=
	push "anpuszka"
	cthis setasitemtopck
	cthis mmasks
	new DelayMover,cmov
	call cmov,unlock
	new string,scmov
	push "null"
	pop scmov
	new int,bignoremsclick
	push 0
	pop bignoremsclick
	push "onfinish"
	push "HO07_Gruz0"
	call ankrasy,addmethod
	push "ho_shovel"
	cthis mtoloupe
	push "HO07_Gruz1"
	call ccs,enter
	end method
	method HO07_Gruz0
	push 0
	push 0
	cthis setframe
	push 1
	pop igmstate
	cthis mho_click
	end method
	method HO07_Gruz1
	push 1
	pop igmstate
	cthis advsetstdstate
	end method
	method ho_shovel_click
	cthis show
	cthis getname
	cthis remove_from_loupe
	end method
	method ho_dwarf_preclick
	cthis dwarfcrown_preclick
	end method
	method ho_crown_preclick
	cthis dwarfcrown_preclick
	end method
	method dwarfcrown_preclick
	localdef $1
	call cmov,getfree
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l5049
	push "null"
	pop scmov
	cthis hide
	push $1
	spushs
	spop $a
	call [$a],hide
	cthis getname
	call butgame,removebut
	push 1
	call ankrasy,play
	push 610
	call ankrasy,setz
	cthis getpx
	cthis getpy
	call ankrasy,ansetbpos
	jmp l5048
l5049:
	cthis getname
	pop scmov
	push 1
	pop bignoremsclick
	push 6
	pop igmstate
	push 600
	cthis setz
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	push scmov
	call cmov,mssetobj
	push scmov
	call butgame,removebut
l5048:
	end method
	method hiddenobj_put
	call grtxt,empty
	cmp0
	je l5051
	push 20
	pop igmstate
	push "puszka"
	cthis isvisible_itempopup
	neg
	cmp0
	je l5053
	push "puszka"
	push "anpuszka"
	cthis show_itempopup
l5053:
l5051:
	end method
	method mend
	cthis set_mg_finished
	push "ad03_placglowny"
	push "gamead03_placglowny0"
	cthis stdexitdefadv
	end method
	method mouse_lclick
	push bignoremsclick
	cmp0
	je l5055
	push 0
	pop bignoremsclick
	jmp l5054
l5055:
	push scmov
	push "null"
	cmpjne
	cmp0
	je l5057
	call cmov,getfree
	popax
	push 1
	pop igmstate
	push scmov
	spushs
	push 0
	push 0
	spop $a
	call [$a],setpos
	push scmov
	spushs
	push 1
	popax
	sub 0,$a
	push 1
	spop $a
	call [$a],setframe
	push scmov
	spushs
	push scmov
	spushs
	spop $a
	call [$a],myz
	spop $a
	call [$a],setz
	push scmov
	call butgame,add
	push "null"
	pop scmov
l5057:
l5054:
	end method
	method anpuszka_TAKE
	push "puszka"
	cthis hide_itempopup
	cthis item_gotocenter
	push "puszka"
	cthis saveitemtopck
	push "tim1"
	push 1500
	push "mend"
	cthis timer=
	call tim1,play
	end method
	method popup_puszka_clickexit
	push "anpuszka"
	call butgame,sclicked=
	cthis anpuszka_TAKE
	end method
	method HINT_CLICK
	clparent Hidden,HINT_CLICK
	cthis mishintplaying
	neg
	cmp0
	je l5059
	push "ho_dwarf"
	cthis mgetel
	cthis mhintonobj
	push "ho_crown"
	cthis mgetel
	cthis mhintonobj
l5059:
	end method
	end game

	game HO01_Altana
	parent HOBanshee
	method init
	new anima,ankonewka
	push "scripts/ho01_altana/water_can.pyz"
	call ankonewka,load
	push "ho01_altana"
	clparent HOBanshee,init
	push A
	push "bkg.jpg"
	push "popup1_bkg.pyzH 300"
	push "popup1_ramka.pyzH 301"
	push "popup1_cube_back.pyzH 302"
	push "poison.pyzH 303"
	push "popup1_cube_front.pyzH 304"
	push "popup1_ring.pyzH 305"
	push "popup1_key.pyzH 306"
	push "popup1_cube_open.pyzH 307"
	push "kawalek_rzezby3.pyzH 308"
	cthis imgs=
	push "anpoison"
	cthis setasitemtopck
	push 1
	call anpoison,disable=
	push "ankawalek_rzezby3"
	cthis setasitemtopck
	push "ankonewka"
	cthis setasitemtopck
	call ankonewka,mhobut
	push 10
	call ankonewka,setz
	push "kostka"
	cthis removefrompck
	cthis mmasks
	new int,keyflying
	push 0
	pop keyflying
	new int,ringflying
	push 0
	pop ringflying
	new int,popup_opened
	push 0
	pop popup_opened
	push "HO01_Altana0"
	call ccs,enter
	push "ankonewka"
	cthis mtoloupe
	new img,imgg
	call anpopup1_bkg,HO01_Altana1
	push "onfinish"
	push "HO01_Altana4"
	call anpopup1_key,addmethod
	push "onfinish"
	push "HO01_Altana5"
	call anpopup1_ring,addmethod
	localdef $1
	push "ho_key"
	cthis mgetel
	spushs
	spop $a
	call [$a],stxtview
	pop $1
	push $1
	spushs
	cthis hoexternalcol
	spop $a
	call [$a],createtxt
	push "ho_ring"
	cthis mgetel
	spushs
	spop $a
	call [$a],stxtview
	pop $1
	push $1
	spushs
	cthis hoexternalcol
	spop $a
	call [$a],createtxt
	push "e1_magic_box_opened"
	call clsave,bis
	cmp0
	je l5077
	push "taken_poison"
	call clsave,bis
	neg
	jmp l5079
l5077:
	push 0
	jmp l5079
l5078:
	push 1
l5079:
	cmp0
	je l5080
	push 0
	call anpoison,disable=
	push "poison"
	push "anpoison"
	cthis show_itempopup
l5080:
	end method
	method HO01_Altana0
	push 1
	pop igmstate
	cthis advsetstdstate
	end method
	method HO01_Altana1
	push "isbutin"
	push "HO01_Altana2"
	cthis addmethod
	push "butclick"
	push "HO01_Altana3"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method HO01_Altana2
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 0
	cthis isin
	end method
	method HO01_Altana3
	ret
	end method
	method HO01_Altana4
	cthis actionname
	push "fadeout"
	cmpje
	cmp0
	je l5061
	cthis hide
	jmp l5060
l5061:
	cthis actionname
	push "insert"
	cmpje
	cmp0
	je l5063
	push "e1_box_key_inserted"
	call clsave,bset
	push "e1_box_ring_inserted"
	call clsave,bis
	cmp0
	je l5065
	push ringflying
	neg
	cmp0
	je l5067
	cthis open_box
l5067:
	jmp l5064
l5065:
	cthis hide_popup
l5064:
	push 0
	pop keyflying
l5063:
l5060:
	end method
	method HO01_Altana5
	cthis actionname
	push "fadeout"
	cmpje
	cmp0
	je l5069
	cthis hide
	jmp l5068
l5069:
	cthis actionname
	push "insert"
	cmpje
	cmp0
	je l5071
	push 0
	pop ringflying
	push "e1_box_ring_inserted"
	call clsave,bset
	push "e1_box_key_inserted"
	call clsave,bis
	cmp0
	je l5073
	push keyflying
	neg
	cmp0
	je l5075
	cthis open_box
l5075:
	jmp l5072
l5073:
	cthis hide_popup
l5072:
	push 0
	pop ringflying
l5071:
l5068:
	end method
	method konewka_preclick
	push "konewka"
	cthis isvisible_itempopup
	neg
	cmp0
	je l5082
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	push "konewka"
	push "ankonewka"
	cthis show_itempopup
	push "ankonewka"
	cthis remove_from_loupe
	call ankonewka,Button_stdms
	call butgame,sort
	jmp l5081
l5082:
	push "konewka"
	cthis hide_itempopup
	push 1
	pop igmstate
	call ankonewka,mho_click
	call advmouse,setstd
l5081:
	end method
	method popup_konewka_clickexit
	push "ankonewka"
	call butgame,sclicked=
	cthis konewka_preclick
	end method
	method anpoison_TAKE
	push "e1_magic_box_opened"
	call clsave,bis
	neg
	cmp0
	je l5084
	ret
l5084:
	push "poison"
	cthis isvisible_itempopup
	neg
	cmp0
	je l5086
	cthis hide_popup
	push "poison"
	push "anpoison"
	cthis show_itempopup
	jmp l5085
l5086:
	push "poison"
	cthis hide_itempopup
	cthis item_gotocenter
	call grtxt,empty
	cmp0
	je l5088
	push "tim1"
	push 1500
	push "show_sculpture_part"
	cthis timer=
	call tim1,play
l5088:
	call butgame,onmousemove
l5085:
	end method
	method popup_poison_clickexit
	push "anpoison"
	call butgame,sclicked=
	cthis anpoison_TAKE
	end method
	method show_sculpture_part
	push "kawalek_rzezby3"
	cthis isvisible_itempopup
	neg
	cmp0
	je l5090
	push "kawalek_rzezby3"
	push "ankawalek_rzezby3"
	cthis show_itempopup
l5090:
	end method
	method ankawalek_rzezby3_TAKE
	cthis item_gotocenter
	push "kawalek_rzezby3"
	cthis hide_itempopup
	push "tim2"
	push 1500
	push "mend"
	cthis timer=
	call tim2,play
	end method
	method popup_kawalek_rzezby3_clickexit
	push "ankawalek_rzezby3"
	call butgame,sclicked=
	cthis ankawalek_rzezby3_TAKE
	end method
	method ankonewka_TAKE
	cthis item_gotocenter
	push "konewka"
	cthis hide_itempopup
	push "tim2"
	push 1500
	push "mend"
	cthis timer=
	call tim2,play
	end method
	method ho_key_click
	push 1
	pop keyflying
	push 800
	push "null"
	cthis anfadeout
	push "key"
	cthis show_popup
	end method
	method ho_ring_click
	push 1
	pop ringflying
	push 800
	push "null"
	cthis anfadeout
	push "ring"
	cthis show_popup
	end method
	method hiddenobj_put
	call grtxt,empty
	cmp0
	je l5092
	push 20
	pop igmstate
	push "taken_poison"
	call clsave,bis
	cmp0
	je l5094
	push "kawalek_rzezby3"
	cthis isvisible_itempopup
	neg
	cmp0
	je l5096
	push "kawalek_rzezby3"
	push "ankawalek_rzezby3"
	cthis show_itempopup
l5096:
l5094:
l5092:
	end method
	method show_popup
	localstring $1
	pop $1
	push popup_opened
	neg
	cmp0
	je l5098
	push 300
	call imgg,setz
	push A
	push "anpopup1_bkg"
	push "anpopup1_cube_back"
	push "anpoison"
	push "anpopup1_cube_front"
	push "anpopup1_ramka"
	call imgg,imgbuildfromlist
	push 500
	push "HO01_Altana6"
	call imgg,anzoomfadein
l5098:
	push $1
	push "key"
	cmpje
	cmp0
	je l5100
	push 800
	push "null"
	call anpopup1_key,anfadein
	push "e1_box_key_inserted"
	call clsave,bis
	neg
	cmp0
	je l5102
	push "insert"
	call anpopup1_key,play
	push "e1_box_key_inserted"
	call clsave,bset
l5102:
	push "e1_box_ring_inserted"
	call clsave,bis
	cmp0
	je l5104
	push 800
	push "null"
	call anpopup1_ring,anfadein
l5104:
l5100:
	push $1
	push "ring"
	cmpje
	cmp0
	je l5106
	push 800
	push "null"
	call anpopup1_ring,anfadein
	push "e1_box_ring_inserted"
	call clsave,bis
	neg
	cmp0
	je l5108
	push "insert"
	call anpopup1_ring,play
	push "e1_box_ring_inserted"
	call clsave,bset
l5108:
	push "e1_box_key_inserted"
	call clsave,bis
	cmp0
	je l5110
	push 800
	push "null"
	call anpopup1_key,anfadein
l5110:
l5106:
	push 1
	pop popup_opened
	end method
	method HO01_Altana6
	cthis hide
	cthis show_popup_elements
	end method
	method show_popup_elements
	push popup_opened
	cmp0
	je l5112
	call anpoison,show
	call anpopup1_cube_back,show
	call anpopup1_cube_front,show
	call anpopup1_bkg,show
	call anpopup1_ramka,show
l5112:
	end method
	method hide_popup
	new img,img
	push A
	push "anpopup1_bkg"
	push "anpopup1_ramka"
	push "anpopup1_cube_back"
	call img,imgbuildfromlist
	push 500
	push "null"
	call img,anzoomfadeout
	push 300
	call img,setz
	call anpopup1_key,hide
	call anpopup1_ring,hide
	call anpopup1_cube_back,hide
	call anpopup1_cube_front,hide
	call anpopup1_bkg,hide
	call anpopup1_ramka,hide
	call anpopup1_cube_open,hide
	call anpoison,hide
	push 0
	pop popup_opened
	end method
	method open_box
	push "e1_magic_box_opened"
	call clsave,bis
	neg
	cmp0
	je l5114
	push "e1_magic_box_opened"
	call clsave,bset
	push 800
	push "null"
	call anpopup1_cube_open,anfadein
	push 800
	push "null"
	call anpopup1_cube_back,anfadeout
	push 500
	push "null"
	call anpopup1_cube_front,anfadeout
	push 0
	call anpoison,disable=
l5114:
	end method
	method mend
	cthis set_mg_finished
	push "ad11_altana"
	push "gamead11_altana0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	clparent Hidden,HINT_CLICK
	cthis mishintplaying
	neg
	cmp0
	je l5116
	call anpoison,isvisible
	cmp0
	je l5118
	push "e1_magic_box_opened"
	call clsave,bis
	jmp l5120
l5118:
	push 0
	jmp l5120
l5119:
	push 1
l5120:
	cmp0
	je l5121
	push "anpoison"
	cthis showhint
	jmp l5117
l5121:
	push "txtel_ankonewka"
	call grtxt,contains
	cmp0
	je l5123
	push "ankonewka"
	cthis mhintonobj
	jmp l5122
l5123:
	call ankawalek_rzezby3,isvisible
	cmp0
	je l5125
	push "ankawalek_rzezby3"
	cthis showhint
l5125:
l5122:
l5117:
l5116:
	end method
	end game

	game HO09_Brzegjeziora
	parent HOBanshee
	method init
	new anima,bottle_anim
	push "scripts/ho09_brzegjeziora/bottle_anim.pyz"
	call bottle_anim,load
	call bottle_anim,hide
	new anima,andluto
	push "scripts/ho09_brzegjeziora/dluto.pyz"
	call andluto,load
	push "ho09_brzegjeziora"
	clparent HOBanshee,init
	push A
	push "bkg.png"
	push "ser.pyzH"
	push "swiatlo.pyz 12"
	cthis imgs=
	call answiatlo,anopacityframe
	push "new"
	call answiatlo,play
	call andluto,mhobut
	push 1000
	call andluto,setz
	push "anser"
	cthis setasitemtopck
	cthis mmasks
	new DelayMover,cmov
	call cmov,unlock
	new string,scmov
	push "null"
	pop scmov
	new int,bignoremsclick
	push 0
	pop bignoremsclick
	push "onfinish"
	push "HO09_Brzegjeziora0"
	call bottle_anim,addmethod
	push "andluto"
	cthis mtoloupe
	push "ho_letter"
	cthis mgetel
	spushs
	spop $a
	call [$a],hide
	push "maska_bag_open"
	cthis mgetel
	spushs
	spop $a
	call [$a],hide
	push "bag_open"
	cthis mgetel
	spushs
	spop $a
	call [$a],hide
	push "HO09_Brzegjeziora1"
	call ccs,enter
	end method
	method HO09_Brzegjeziora0
	push 0
	push 0
	cthis setframe
	push 1
	pop igmstate
	cthis mho_click
	end method
	method HO09_Brzegjeziora1
	push 1
	pop igmstate
	cthis advsetstdstate
	end method
	method ho_bag_preclick
	push "ho_letter"
	cthis mgetel
	spushs
	spop $a
	call [$a],show
	push "maska_bag_open"
	cthis mgetel
	spushs
	spop $a
	call [$a],show
	push "bag_open"
	cthis mgetel
	spushs
	spop $a
	call [$a],show
	push "ho_bag"
	cthis mgetel
	call butgame,removebut
	end method
	method dluto_preclick
	push "dluto"
	cthis isvisible_itempopup
	neg
	cmp0
	je l5127
	push "dluto"
	push "andluto"
	cthis show_itempopup
	push "andluto"
	cthis remove_from_loupe
	push "ma_dluto"
	call clsave,bset
	call andluto,Button_stdms
	call butgame,sort
	jmp l5126
l5127:
	push "dluto"
	cthis hide_itempopup
	push 1
	pop igmstate
	call andluto,mho_click
	call advmouse,setstd
l5126:
	end method
	method popup_dluto_clickexit
	push "andluto"
	call butgame,sclicked=
	cthis dluto_preclick
	end method
	method anser_TAKE
	push "ser"
	cthis hide_itempopup
	cthis item_gotocenter
	push "tim1"
	push 1500
	push "mend"
	cthis timer=
	call tim1,play
	end method
	method popup_ser_clickexit
	push "anser"
	call butgame,sclicked=
	cthis anser_TAKE
	end method
	method hiddenobj_put
	call grtxt,empty
	cmp0
	je l5129
	push 20
	pop igmstate
	push "ser"
	cthis isvisible_itempopup
	neg
	cmp0
	je l5131
	push "ser"
	push "anser"
	cthis show_itempopup
l5131:
l5129:
	end method
	method mend
	cthis set_mg_finished
	push "ad04_brzegjeziora"
	push "gamead04_brzegjeziora0"
	cthis stdexitdefadv
	end method
	method ho_bottle_preclick
	cthis bottleletter_preclick
	end method
	method ho_letter_preclick
	cthis bottleletter_preclick
	end method
	method bottleletter_preclick
	localdef $1
	call cmov,getfree
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l5133
	push "null"
	pop scmov
	cthis hide
	push $1
	spushs
	spop $a
	call [$a],hide
	cthis getname
	call butgame,removebut
	push 1
	call bottle_anim,play
	push 610
	call bottle_anim,setz
	cthis getpx
	cthis getpy
	call bottle_anim,ansetbpos
	jmp l5132
l5133:
	cthis getname
	pop scmov
	push 1
	pop bignoremsclick
	push 6
	pop igmstate
	push 600
	cthis setz
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	push scmov
	call cmov,mssetobj
	push scmov
	call butgame,removebut
l5132:
	end method
	method mouse_lclick
	push bignoremsclick
	cmp0
	je l5135
	push 0
	pop bignoremsclick
	jmp l5134
l5135:
	push scmov
	push "null"
	cmpjne
	cmp0
	je l5137
	call cmov,getfree
	popax
	push 1
	pop igmstate
	push scmov
	spushs
	push 0
	push 0
	spop $a
	call [$a],setpos
	push scmov
	spushs
	push 1
	popax
	sub 0,$a
	push 1
	spop $a
	call [$a],setframe
	push scmov
	spushs
	push scmov
	spushs
	spop $a
	call [$a],myz
	spop $a
	call [$a],setz
	push scmov
	call butgame,add
	push "null"
	pop scmov
l5137:
l5134:
	end method
	method HINT_CLICK
	clparent Hidden,HINT_CLICK
	cthis mishintplaying
	neg
	cmp0
	je l5139
	push "txtel_bottle_anim"
	call grtxt,contains
	cmp0
	je l5141
	push "ho_letter"
	cthis mgetel
	cthis mhintonobj
	push "ho_bottle"
	cthis mgetel
	cthis mhintonobj
	jmp l5140
l5141:
	push "txtel_andluto"
	call grtxt,contains
	cmp0
	je l5143
	push "andluto"
	cthis mhintonobj
l5143:
l5140:
l5139:
	end method
	end game

	game HO04_Wodospad
	parent HOBanshee
	method init
	new anima,bag_anim
	push "scripts/ho04_wodospad/bag_anim.pyz"
	call bag_anim,load
	call bag_anim,hide
	new anima,ankostka
	push "scripts/ho04_wodospad/kostka.pyz"
	call ankostka,load
	new anima,ankawalek_rzezby2
	push "scripts/ho04_wodospad/kawalek_rzezby2.pyz"
	call ankawalek_rzezby2,load
	push "ho04_wodospad"
	clparent HOBanshee,init
	call ankostka,mhobut
	push 1
	call ankostka,setz
	call ankawalek_rzezby2,mhobut
	push 1
	call ankawalek_rzezby2,setz
	push A
	push "bkg.jpg"
	push "lewy_bok.pyz 100"
	push "prawy_bok.pyz 110"
	push "kawalek_lwa4.pyzH 120"
	cthis imgs=
	cthis mmasks
	new DelayMover,cmov
	call cmov,unlock
	new string,scmov
	push "null"
	pop scmov
	new int,bignoremsclick
	push 0
	pop bignoremsclick
	push "ankostka"
	cthis mtoloupe
	push "ankawalek_lwa4"
	cthis setasitemtopck
	push "HO04_Wodospad0"
	call ccs,enter
	push "onfinish"
	push "HO04_Wodospad1"
	call bag_anim,addmethod
	call ankawalek_rzezby2,stxtview
	spushs
	cthis guifontcolor
	spop $a
	call [$a],createtxt
	end method
	method HO04_Wodospad0
	push 1
	pop igmstate
	cthis advsetstdstate
	end method
	method HO04_Wodospad1
	push 0
	push 0
	cthis setframe
	push 1
	pop igmstate
	cthis mho_click
	end method
	method hiddenobj_put
	call grtxt,empty
	cmp0
	je l5145
	push 20
	pop igmstate
	push "kawalek_lwa4"
	cthis isvisible_itempopup
	neg
	cmp0
	je l5147
	push "kawalek_lwa4"
	push "ankawalek_lwa4"
	cthis show_itempopup
l5147:
l5145:
	end method
	method mend
	cthis set_mg_finished
	push "ad08_latajacecospod"
	push "gamead08_latajacecospod0"
	cthis stdexitdefadv
	end method
	method ho_bag_preclick
	cthis bag_preclick
	end method
	method ho_coins_preclick
	cthis bag_preclick
	end method
	method bag_preclick
	localdef $1
	call cmov,getfree
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l5149
	push "null"
	pop scmov
	cthis hide
	push $1
	spushs
	spop $a
	call [$a],hide
	cthis getname
	call butgame,removebut
	push 1
	call bag_anim,play
	push 610
	call bag_anim,setz
	cthis getpx
	cthis getpy
	call bag_anim,ansetbpos
	jmp l5148
l5149:
	cthis getname
	pop scmov
	push 1
	pop bignoremsclick
	push 6
	pop igmstate
	push 600
	cthis setz
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	push scmov
	call cmov,mssetobj
	push scmov
	call butgame,removebut
l5148:
	end method
	method mouse_lclick
	push bignoremsclick
	cmp0
	je l5151
	push 0
	pop bignoremsclick
	jmp l5150
l5151:
	push scmov
	push "null"
	cmpjne
	cmp0
	je l5153
	call cmov,getfree
	popax
	push 1
	pop igmstate
	push scmov
	spushs
	push 0
	push 0
	spop $a
	call [$a],setpos
	push scmov
	spushs
	push 1
	popax
	sub 0,$a
	push 1
	spop $a
	call [$a],setframe
	push scmov
	spushs
	push scmov
	spushs
	spop $a
	call [$a],myz
	spop $a
	call [$a],setz
	push scmov
	call butgame,add
	push "null"
	pop scmov
l5153:
l5150:
	end method
	method kostka_preclick
	push "kostka"
	cthis isvisible_itempopup
	neg
	cmp0
	je l5155
	push "kostka"
	push "ankostka"
	cthis show_itempopup
	push 1
	popax
	sub 0,$a
	push 2
	call ankostka,setframe
	push "ankostka"
	cthis remove_from_loupe
	call ankostka,Button_stdms
	call butgame,sort
	jmp l5154
l5155:
	push "kostka"
	cthis hide_itempopup
	push 1
	pop igmstate
	call ankostka,mho_click
	call advmouse,setstd
l5154:
	end method
	method popup_kostka_clickexit
	push "ankostka"
	call butgame,sclicked=
	cthis kostka_preclick
	end method
	method kawalek_rzezby2_preclick
	push "kawalek_rzezby2"
	cthis isvisible_itempopup
	neg
	cmp0
	je l5157
	push "kawalek_rzezby2"
	push "ankawalek_rzezby2"
	cthis show_itempopup
	call ankawalek_rzezby2,Button_stdms
	call butgame,sort
	jmp l5156
l5157:
	push "kawalek_rzezby2"
	cthis hide_itempopup
	push 1
	pop igmstate
	call ankawalek_rzezby2,mho_click
	call advmouse,setstd
l5156:
	end method
	method popup_kawalek_rzezby2_clickexit
	push "ankawalek_rzezby2"
	call butgame,sclicked=
	cthis kawalek_rzezby2_preclick
	end method
	method ankawalek_lwa4_TAKE
	push "kawalek_lwa4"
	cthis hide_itempopup
	cthis item_gotocenter
	push "tim1"
	push 1500
	push "mend"
	cthis timer=
	call tim1,play
	end method
	method popup_kawalek_lwa4_clickexit
	push "ankawalek_lwa4"
	call butgame,sclicked=
	cthis ankawalek_lwa4_TAKE
	end method
	method HINT_CLICK
	clparent Hidden,HINT_CLICK
	cthis mishintplaying
	neg
	cmp0
	je l5159
	push "txtel_bag_anim"
	call grtxt,contains
	cmp0
	je l5161
	push "ho_bag"
	cthis mgetel
	cthis mhintonobj
	push "ho_coins"
	cthis mgetel
	cthis mhintonobj
	jmp l5160
l5161:
	push "txtel_ankostka"
	call grtxt,contains
	cmp0
	je l5163
	push "ankostka"
	cthis mhintonobj
	jmp l5162
l5163:
	push "txtel_ankawalek_rzezby2"
	call grtxt,contains
	cmp0
	je l5165
	push "ankawalek_rzezby2"
	cthis mhintonobj
l5165:
l5162:
l5160:
l5159:
	end method
	end game

	game HO06_Ogrodrozany
	parent HOBanshee
	method init
	new anima,playmusic_anim
	push "scripts/ho06_ogrodrozany/playmusic_anim.pyz"
	call playmusic_anim,load
	call playmusic_anim,hide
	new anima,ankawalek_rzezby1
	push "scripts/ho06_ogrodrozany/sculpture_part1.pyz"
	call ankawalek_rzezby1,load
	new anima,annote
	push "scripts/ho06_ogrodrozany/note.pyz"
	call annote,load
	push "ho06_ogrodrozany"
	clparent HOBanshee,init
	push A
	push "bkg.jpg"
	push "elixir.pyzH"
	cthis imgs=
	call ankawalek_rzezby1,mhobut
	push 1
	call ankawalek_rzezby1,setz
	call annote,hide
	cthis mmasks
	new DelayMover,cmov
	call cmov,unlock
	new string,scmov
	push "null"
	pop scmov
	new int,bignoremsclick
	push 0
	pop bignoremsclick
	push "ho_iron"
	cthis mtoloupe
	push "HO06_Ogrodrozany0"
	call ccs,enter
	call ankawalek_rzezby1,stxtview
	spushs
	cthis guifontcolor
	spop $a
	call [$a],createtxt
	end method
	method HO06_Ogrodrozany0
	push 1
	pop igmstate
	cthis advsetstdstate
	end method
	method ho_iron_click
	cthis show
	cthis getname
	cthis remove_from_loupe
	end method
	method hiddenobj_put
	call grtxt,empty
	cmp0
	je l5167
	push 20
	pop igmstate
	push "elixir"
	cthis isvisible_itempopup
	neg
	cmp0
	je l5169
	push "anelixir"
	cthis setasitemtopck
	push "elixir"
	cthis saveitemtopck
	push "elixir"
	push "anelixir"
	cthis show_itempopup
l5169:
l5167:
	end method
	method anelixir_TAKE
	push "elixir"
	cthis hide_itempopup
	cthis item_gotocenter
	push "tim1"
	push 1500
	push "mend"
	cthis timer=
	call tim1,play
	end method
	method popup_elixir_clickexit
	push "anelixir"
	call butgame,sclicked=
	cthis anelixir_TAKE
	end method
	method ho_gramophone_preclick
	cthis gramophone_preclick
	end method
	method ho_plyta_preclick
	cthis plyta_preclick
	end method
	method plyta_preclick
	localdef $1
	call cmov,getfree
	pop $1
	push $1
	push "null"
	cmpje
	cmp0
	je l5171
	cthis getname
	pop scmov
	push 1
	pop bignoremsclick
	push 6
	pop igmstate
	push 600
	cthis setz
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	push scmov
	call cmov,mssetobj
	push scmov
	call butgame,removebut
l5171:
	end method
	method gramophone_preclick
	localdef $1
	call cmov,getfree
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l5173
	push "null"
	pop scmov
	push $1
	spushs
	spop $a
	call [$a],hide
	cthis getname
	call butgame,removebut
	push 1
	call playmusic_anim,play
	push 180
	call playmusic_anim,setz
	push 1
	pop igmstate
	call annote,mhobut
	call annote,show
	call annote,mho_click
l5173:
	end method
	method mouse_lclick
	push bignoremsclick
	cmp0
	je l5175
	push 0
	pop bignoremsclick
	jmp l5174
l5175:
	push scmov
	push "null"
	cmpjne
	cmp0
	je l5177
	call cmov,getfree
	popax
	push 1
	pop igmstate
	push scmov
	spushs
	push 0
	push 0
	spop $a
	call [$a],setpos
	push scmov
	spushs
	push 1
	popax
	sub 0,$a
	push 1
	spop $a
	call [$a],setframe
	push scmov
	spushs
	push scmov
	spushs
	spop $a
	call [$a],myz
	spop $a
	call [$a],setz
	push scmov
	call butgame,add
	push "null"
	pop scmov
l5177:
l5174:
	end method
	method sculpture_part_preclick
	push "kawalek_rzezby1"
	cthis isvisible_itempopup
	neg
	cmp0
	je l5179
	push "kawalek_rzezby1"
	push "ankawalek_rzezby1"
	cthis show_itempopup
	call ankawalek_rzezby1,Button_stdms
	push "sculpture_part_rotostart"
	cthis play
	cthis getpx
	cthis getpy
	push 100
	pop $b
	popax
	add $a,$b
	cthis ansetbpos
	call butgame,sort
	jmp l5178
l5179:
	push "kawalek_rzezby1"
	cthis hide_itempopup
	push 1
	pop igmstate
	push 0
	call ankawalek_rzezby1,play
	call ankawalek_rzezby1,mho_click
	call advmouse,setstd
l5178:
	end method
	method sculpture_part_rotostart_preclick
	push "kawalek_rzezby1"
	cthis hide_itempopup
	push 1
	pop igmstate
	push 0
	call ankawalek_rzezby1,play
	call ankawalek_rzezby1,mho_click
	call advmouse,setstd
	end method
	method popup_kawalek_rzezby1_clickexit
	push "ankawalek_rzezby1"
	call butgame,sclicked=
	cthis sculpture_part_preclick
	end method
	method mend
	cthis set_mg_finished
	push "ad10_ogrodrozany"
	push "gamead10_ogrodrozany0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	clparent Hidden,HINT_CLICK
	cthis mishintplaying
	neg
	cmp0
	je l5181
	push "txtel_annote"
	call grtxt,contains
	cmp0
	je l5183
	push "ho_plyta"
	cthis mgetel
	cthis mhintonobj
	push "ho_gramophone"
	cthis mgetel
	cthis mhintonobj
	jmp l5182
l5183:
	call anelixir,isvisible
	cmp0
	je l5185
	push "anelixir"
	cthis showhint
	jmp l5184
l5185:
	call ankawalek_rzezby1,isvisible
	cmp0
	je l5187
	push "ankawalek_rzezby1"
	cthis showhint
l5187:
l5184:
l5182:
l5181:
	end method
	end game

	game HO12_Brama
	parent HOBanshee
	method init
	new anima,padlock_anim
	push "scripts/ho12_brama/padlock_anim.pyz"
	call padlock_anim,load
	call padlock_anim,hide
	new anima,anserce_part2
	push "scripts/ho12_brama/serce_part2.pyz"
	call anserce_part2,load
	push "ho12_brama"
	clparent HOBanshee,init
	push A
	push "bkg.jpg"
	push "rune1.pyzH 600"
	cthis imgs=
	push "anrune1"
	cthis setasitemtopck
	call anserce_part2,mhobut
	push 2
	call anserce_part2,setz
	cthis mmasks
	new DelayMover,cmov
	call cmov,unlock
	new string,scmov
	push "null"
	pop scmov
	new int,bignoremsclick
	push 0
	pop bignoremsclick
	push "HO12_Brama0"
	call ccs,enter
	push "anserce_part2"
	cthis mtoloupe
	push "onfinish"
	push "HO12_Brama1"
	call padlock_anim,addmethod
	end method
	method HO12_Brama0
	push 1
	pop igmstate
	cthis advsetstdstate
	end method
	method HO12_Brama1
	push 0
	push 0
	cthis setframe
	push 1
	pop igmstate
	cthis mho_click
	end method
	method hiddenobj_put
	call grtxt,empty
	cmp0
	je l5189
	push 20
	pop igmstate
	push "rune1"
	cthis isvisible_itempopup
	neg
	cmp0
	je l5191
	push "rune1"
	push "anrune1"
	cthis show_itempopup
l5191:
l5189:
	end method
	method ho_key_preclick
	cthis key_preclick
	end method
	method ho_padlock_preclick
	cthis padlock_preclick
	end method
	method key_preclick
	localdef $1
	call cmov,getfree
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l5193
	push "null"
	pop scmov
	cthis hide
	push $1
	spushs
	spop $a
	call [$a],hide
	cthis getname
	call butgame,removebut
	push 1
	call padlock_anim,play
	push 610
	call padlock_anim,setz
	cthis getpx
	cthis getpy
	call padlock_anim,ansetbpos
	jmp l5192
l5193:
	cthis getname
	pop scmov
	push 1
	pop bignoremsclick
	push 6
	pop igmstate
	push 600
	cthis setz
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	push scmov
	call cmov,mssetobj
	push scmov
	call butgame,removebut
l5192:
	end method
	method padlock_preclick
	localdef $1
	call cmov,getfree
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l5195
	push "null"
	pop scmov
	cthis hide
	push $1
	spushs
	spop $a
	call [$a],hide
	cthis getname
	call butgame,removebut
	push 1
	call padlock_anim,play
	push 610
	call padlock_anim,setz
	cthis getpx
	cthis getpy
	call padlock_anim,ansetbpos
l5195:
	end method
	method mouse_lclick
	push bignoremsclick
	cmp0
	je l5197
	push 0
	pop bignoremsclick
	jmp l5196
l5197:
	push scmov
	push "null"
	cmpjne
	cmp0
	je l5199
	call cmov,getfree
	popax
	push 1
	pop igmstate
	push scmov
	spushs
	push 0
	push 0
	spop $a
	call [$a],setpos
	push scmov
	spushs
	push 1
	popax
	sub 0,$a
	push 1
	spop $a
	call [$a],setframe
	push scmov
	spushs
	push scmov
	spushs
	spop $a
	call [$a],myz
	spop $a
	call [$a],setz
	push scmov
	call butgame,add
	push "null"
	pop scmov
l5199:
l5196:
	end method
	method serce_part2_preclick
	push "serce_part2"
	cthis isvisible_itempopup
	neg
	cmp0
	je l5201
	push "serce_part2"
	push "anserce_part2"
	cthis show_itempopup
	push "anserce_part2"
	cthis remove_from_loupe
	push "serce_part2_rotostart"
	push 0
	call anserce_part2,setframe
	call anserce_part2,Button_stdms
	call butgame,sort
	jmp l5200
l5201:
	push "serce_part2"
	cthis hide_itempopup
	push 1
	pop igmstate
	call anserce_part2,mho_click
	call advmouse,setstd
l5200:
	end method
	method serce_part2_rotostart_preclick
	cthis serce_part2_preclick
	end method
	method popup_serce_part2_clickexit
	push "anserce_part2"
	call butgame,sclicked=
	cthis serce_part2_preclick
	end method
	method anrune1_TAKE
	push "rune1"
	cthis hide_itempopup
	cthis item_gotocenter
	push "tim1"
	push 1500
	push "mend"
	cthis timer=
	call tim1,play
	end method
	method popup_rune1_clickexit
	push "anrune1"
	call butgame,sclicked=
	cthis anrune1_TAKE
	end method
	method mend
	cthis set_mg_finished
	push "ad12_latajacecosna"
	push "gamead12_latajacecosna0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	clparent Hidden,HINT_CLICK
	cthis mishintplaying
	neg
	cmp0
	je l5203
	push "txtel_padlock_anim"
	call grtxt,contains
	cmp0
	je l5205
	push "ho_key"
	cthis mgetel
	cthis mhintonobj
	push "ho_padlock"
	cthis mgetel
	cthis mhintonobj
	jmp l5204
l5205:
	push "txtel_anserce_part2"
	call grtxt,contains
	cmp0
	je l5207
	push "anserce_part2"
	cthis mhintonobj
l5207:
l5204:
l5203:
	end method
	end game

	game HO13_Wiszacymost
	parent HOBanshee
	method init
	new anima,fire_anim
	push "scripts/ho13_wiszacymost/fire_anim.pyz"
	call fire_anim,load
	call fire_anim,hide
	new anima,anrekawica_1
	push "scripts/ho13_wiszacymost/rekawica_1.pyz"
	call anrekawica_1,load
	new anima,anpan_bottom
	push "scripts/ho13_wiszacymost/pan_bottom.pyz"
	call anpan_bottom,load
	push "ho13_wiszacymost"
	clparent HOBanshee,init
	push A
	push "bkg.jpg"
	cthis imgs=
	push "anpan_bottom"
	cthis setasitemtopck
	push 1
	call anpan_bottom,disable=
	call anrekawica_1,mhobut
	push 20
	call anrekawica_1,setz
	cthis mmasks
	new DelayMover,cmov
	call cmov,unlock
	new string,scmov
	push "null"
	pop scmov
	new int,bignoremsclick
	push 0
	pop bignoremsclick
	push "HO13_Wiszacymost0"
	call ccs,enter
	push "anrekawica_1"
	cthis mtoloupe
	push "onfinish"
	push "HO13_Wiszacymost1"
	call fire_anim,addmethod
	end method
	method HO13_Wiszacymost0
	push 1
	pop igmstate
	cthis advsetstdstate
	end method
	method HO13_Wiszacymost1
	push 0
	push 0
	cthis setframe
	push 1
	pop igmstate
	cthis mho_click
	end method
	method hiddenobj_put
	call grtxt,empty
	cmp0
	je l5209
	push 20
	pop igmstate
	push "pan_bottom"
	cthis isvisible_itempopup
	neg
	cmp0
	je l5211
	push 0
	call anpan_bottom,disable=
l5211:
	push "pan_bottom"
	push "anpan_bottom"
	cthis show_itempopup
l5209:
	end method
	method ho_lighter_preclick
	cthis lighter_preclick
	end method
	method ho_nest_preclick
	cthis nest_preclick
	end method
	method lighter_preclick
	localdef $1
	call cmov,getfree
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l5213
	push "null"
	pop scmov
	cthis hide
	push $1
	spushs
	spop $a
	call [$a],hide
	cthis getname
	call butgame,removebut
	push 1
	call fire_anim,play
	push 610
	call fire_anim,setz
	cthis getpx
	cthis getpy
	call fire_anim,ansetbpos
	jmp l5212
l5213:
	cthis getname
	pop scmov
	push 1
	pop bignoremsclick
	push 6
	pop igmstate
	push 600
	cthis setz
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	push scmov
	call cmov,mssetobj
	push scmov
	call butgame,removebut
l5212:
	end method
	method nest_preclick
	localdef $1
	call cmov,getfree
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l5215
	push "null"
	pop scmov
	cthis hide
	push $1
	spushs
	spop $a
	call [$a],hide
	cthis getname
	call butgame,removebut
	push 1
	call fire_anim,play
	push 610
	call fire_anim,setz
	cthis getpx
	cthis getpy
	call fire_anim,ansetbpos
l5215:
	end method
	method mouse_lclick
	push bignoremsclick
	cmp0
	je l5217
	push 0
	pop bignoremsclick
	jmp l5216
l5217:
	push scmov
	push "null"
	cmpjne
	cmp0
	je l5219
	call cmov,getfree
	popax
	push 1
	pop igmstate
	push scmov
	spushs
	push 0
	push 0
	spop $a
	call [$a],setpos
	push scmov
	spushs
	push 1
	popax
	sub 0,$a
	push 1
	spop $a
	call [$a],setframe
	push scmov
	spushs
	push scmov
	spushs
	spop $a
	call [$a],myz
	spop $a
	call [$a],setz
	push scmov
	call butgame,add
	push "null"
	pop scmov
l5219:
l5216:
	end method
	method rekawica_1_preclick
	push "rekawica_1"
	cthis isvisible_itempopup
	neg
	cmp0
	je l5221
	push "rekawica_1_rotostart"
	push 0
	call anrekawica_1,setframe
	push "rekawica_1"
	push "anrekawica_1"
	cthis show_itempopup
	push "anrekawica_1"
	cthis remove_from_loupe
	call anrekawica_1,Button_stdms
	call butgame,sort
	jmp l5220
l5221:
	push "rekawica_1"
	cthis hide_itempopup
	push 1
	pop igmstate
	call anrekawica_1,mho_click
	call advmouse,setstd
l5220:
	end method
	method rekawica_1_rotostart_preclick
	cthis rekawica_1_preclick
	end method
	method popup_rekawica_1_clickexit
	push "anrekawica_1"
	call butgame,sclicked=
	cthis rekawica_1_preclick
	end method
	method anpan_bottom_TAKE
	push "pan_bottom"
	cthis hide_itempopup
	cthis item_gotocenter
	push "taken_rondel_bez_dna"
	call clsave,bis
	cmp0
	je l5223
	push "rondel_bez_dna"
	cthis removefrompck
	push "pan_bottom"
	cthis removefrompck
	push "rondel"
	cthis saveitemtopck
	jmp l5222
l5223:
	push "pan_bottom"
	cthis saveitemtopck
l5222:
	push "tim1"
	push 1500
	push "mend"
	cthis timer=
	call tim1,play
	end method
	method popup_pan_bottom_clickexit
	push "anpan_bottom"
	call butgame,sclicked=
	cthis anpan_bottom_TAKE
	end method
	method mend
	cthis set_mg_finished
	push "ad13_wiszacymost"
	push "gamead13_wiszacymost0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	clparent Hidden,HINT_CLICK
	cthis mishintplaying
	neg
	cmp0
	je l5225
	push "txtel_fire_anim"
	call grtxt,contains
	cmp0
	je l5227
	push "ho_lighter"
	cthis mgetel
	cthis mhintonobj
	push "ho_nest"
	cthis mgetel
	cthis mhintonobj
	jmp l5226
l5227:
	push "txtel_anrekawica_1"
	call grtxt,contains
	cmp0
	je l5229
	push "anrekawica_1"
	cthis mhintonobj
l5229:
l5226:
l5225:
	end method
	end game

	game HO19_Szopa
	parent HOBanshee
	method init
	new anima,tea_anim
	push "scripts/ho19_szopa/tea_anim.pyz"
	call tea_anim,load
	call tea_anim,hide
	new anima,anrune7
	push "scripts/ho19_szopa/rune7.pyz"
	call anrune7,load
	push "ho19_szopa"
	clparent HOBanshee,init
	push A
	push "bkg.jpg"
	push "rune8.pyzH 600"
	cthis imgs=
	push "anrune8"
	cthis setasitemtopck
	cthis mmasks
	call anrune7,mhobut
	push 20
	call anrune7,setz
	new DelayMover,cmov
	call cmov,unlock
	new string,scmov
	push "null"
	pop scmov
	new int,bignoremsclick
	push 0
	pop bignoremsclick
	push "HO19_Szopa0"
	call ccs,enter
	push "HO_hat"
	cthis mtoloupe
	cthis close_drawer
	push "onfinish"
	push "HO19_Szopa1"
	call tea_anim,addmethod
	call anrune7,stxtview
	spushs
	cthis guifontcolor
	spop $a
	call [$a],createtxt
	end method
	method HO19_Szopa0
	push 1
	pop igmstate
	cthis advsetstdstate
	end method
	method HO19_Szopa1
	push 0
	push 0
	cthis setframe
	push 1
	pop igmstate
	cthis mho_click
	end method
	method hiddenobj_put
	call grtxt,empty
	cmp0
	je l5231
	push 20
	pop igmstate
	push "rune8"
	cthis isvisible_itempopup
	neg
	cmp0
	je l5233
	push "rune8"
	push "anrune8"
	cthis show_itempopup
l5233:
l5231:
	end method
	method anrune8_TAKE
	cthis item_gotocenter
	push "rune8"
	cthis hide_itempopup
	push "tim2"
	push 1500
	push "mend"
	cthis timer=
	call tim2,play
	end method
	method popup_rune8_clickexit
	push "anrune8"
	call butgame,sclicked=
	cthis anrune8_TAKE
	end method
	method HO_hat_click
	cthis show
	cthis getname
	cthis remove_from_loupe
	end method
	method close_drawer
	call anrune7,hide
	localint $1
	push 0
	pop $1
l5234:
	push $1
	call grels,size
	cmpjl
	cmp0
	je l5235
	jmp l5237
l5236:
	add $1,1
	pop $1
	jmp l5234
l5237:
	localdef $2
	push $1
	call grels,get
	pop $2
	push $2
	spushs
	spop $a
	call [$a],actionname
	spushs
	push "sz"
	spop $h
	call $h,contains
	cmp0
	je l5239
	push $2
	spushs
	spop $a
	call [$a],hide
l5239:
	jmp l5236
l5235:
	end method
	method open_drawer
	call anrune7,show
	push "drawer"
	cthis mgetel
	spushs
	push 1
	popax
	sub 0,$a
	push 0
	spop $a
	call [$a],setframe
	localint $1
	push 0
	pop $1
l5240:
	push $1
	call grels,size
	cmpjl
	cmp0
	je l5241
	jmp l5243
l5242:
	add $1,1
	pop $1
	jmp l5240
l5243:
	localdef $2
	push $1
	call grels,get
	pop $2
	push $2
	spushs
	spop $a
	call [$a],actionname
	spushs
	push "sz"
	spop $h
	call $h,contains
	cmp0
	je l5245
	push $2
	spushs
	spop $a
	call [$a],show
l5245:
	jmp l5242
l5241:
	push "drawer"
	cthis mgetel
	call butgame,removebut
	end method
	method drawer_preclick
	cthis open_drawer
	end method
	method HO_herbs_preclick
	cthis herbs_preclick
	end method
	method HO_kettle_preclick
	cthis kettle_preclick
	end method
	method herbs_preclick
	localdef $1
	call cmov,getfree
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l5247
	push "null"
	pop scmov
	cthis hide
	push $1
	spushs
	spop $a
	call [$a],hide
	cthis getname
	call butgame,removebut
	push 1
	call tea_anim,play
	push 610
	call tea_anim,setz
	cthis getpx
	cthis getpy
	call tea_anim,ansetbpos
	jmp l5246
l5247:
	cthis getname
	pop scmov
	push 1
	pop bignoremsclick
	push 6
	pop igmstate
	push 600
	cthis setz
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	push scmov
	call cmov,mssetobj
	push scmov
	call butgame,removebut
l5246:
	end method
	method kettle_preclick
	localdef $1
	call cmov,getfree
	pop $1
	push $1
	push "null"
	cmpjne
	cmp0
	je l5249
	push "null"
	pop scmov
	cthis hide
	push $1
	spushs
	spop $a
	call [$a],hide
	cthis getname
	call butgame,removebut
	push 1
	call tea_anim,play
	push 610
	call tea_anim,setz
	cthis getpx
	cthis getpy
	call tea_anim,ansetbpos
l5249:
	end method
	method mouse_lclick
	push bignoremsclick
	cmp0
	je l5251
	push 0
	pop bignoremsclick
	jmp l5250
l5251:
	push scmov
	push "null"
	cmpjne
	cmp0
	je l5253
	call cmov,getfree
	popax
	push 1
	pop igmstate
	push scmov
	spushs
	push 0
	push 0
	spop $a
	call [$a],setpos
	push scmov
	spushs
	push 1
	popax
	sub 0,$a
	push 1
	spop $a
	call [$a],setframe
	push scmov
	spushs
	push scmov
	spushs
	spop $a
	call [$a],myz
	spop $a
	call [$a],setz
	push scmov
	call butgame,add
	push "null"
	pop scmov
l5253:
l5250:
	end method
	method rune7_preclick
	push "rune7"
	cthis isvisible_itempopup
	neg
	cmp0
	je l5255
	push "rune7"
	push "anrune7"
	cthis show_itempopup
	push "rune7_rotostart"
	push 0
	call anrune7,setframe
	call anrune7,Button_stdms
	call butgame,sort
	jmp l5254
l5255:
	push "rune7"
	cthis hide_itempopup
	push 1
	pop igmstate
	call anrune7,mho_click
	call advmouse,setstd
l5254:
	end method
	method rune7_rotostart_preclick
	cthis rune7_preclick
	end method
	method popup_rune7_clickexit
	push "anrune7"
	call butgame,sclicked=
	cthis rune7_preclick
	end method
	method mend
	cthis set_mg_finished
	push "ad12_latajacecosna"
	push "gamead12_latajacecosna0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	clparent Hidden,HINT_CLICK
	cthis mishintplaying
	neg
	cmp0
	je l5257
	push "txtel_anrune7"
	call grtxt,contains
	cmp0
	je l5259
	push "anrune7"
	cthis mhintonobj
	jmp l5258
l5259:
	push "HO_herbs"
	cthis mgetel
	cthis mhintonobj
	push "HO_kettle"
	cthis mgetel
	cthis mhintonobj
l5258:
l5257:
	end method
	end game

	game HO17_Fontanna
	parent HOBanshee
	method init
	new anima,anrekawica_2
	push "scripts/ho17_fontanna/rekawica_2.pyz"
	call anrekawica_2,load
	new anima,ankielich
	push "scripts/ho17_fontanna/kielich.pyz"
	call ankielich,load
	push "ho17_fontanna"
	clparent HOBanshee,init
	push A
	push "bkg.jpg"
	push "rune6.pyzH 600"
	cthis imgs=
	push "anrune6"
	cthis setasitemtopck
	call anrekawica_2,mhobut
	push 20
	call anrekawica_2,setz
	call ankielich,mhobut
	push 20
	call ankielich,setz
	cthis mmasks
	push "klatka_open"
	cthis mgetel
	spushs
	spop $a
	call [$a],hide
	push "anrekawica_2"
	cthis mtoloupe
	push "HO17_Fontanna0"
	call ccs,enter
	localdef $1
	push "HO_ring"
	cthis mgetel
	spushs
	spop $a
	call [$a],stxtview
	pop $1
	push $1
	spushs
	cthis hoexternalcol
	spop $a
	call [$a],createtxt
	end method
	method HO17_Fontanna0
	push 1
	pop igmstate
	cthis advsetstdstate
	end method
	method rekawica_2_preclick
	push "rekawica_2"
	cthis isvisible_itempopup
	neg
	cmp0
	je l5261
	push "rekawica_2_rotostart"
	push 0
	call anrekawica_2,setframe
	push "rekawica_2"
	push "anrekawica_2"
	cthis show_itempopup
	push "anrekawica_2"
	cthis remove_from_loupe
	call anrekawica_2,Button_stdms
	call butgame,sort
	jmp l5260
l5261:
	push "rekawica_2"
	cthis hide_itempopup
	push 1
	pop igmstate
	call anrekawica_2,mho_click
	call advmouse,setstd
l5260:
	end method
	method rekawica_2_rotostart_preclick
	cthis rekawica_2_preclick
	end method
	method popup_rekawica_2_clickexit
	push "anrekawica_2"
	call butgame,sclicked=
	cthis rekawica_2_preclick
	end method
	method kielich_preclick
	push "kielich"
	cthis isvisible_itempopup
	neg
	cmp0
	je l5263
	push "kielich_rotostart"
	push 0
	call ankielich,setframe
	push "kielich"
	push "ankielich"
	cthis show_itempopup
	call ankielich,Button_stdms
	call butgame,sort
	jmp l5262
l5263:
	push "kielich"
	cthis hide_itempopup
	push 1
	pop igmstate
	call ankielich,mho_click
	call advmouse,setstd
l5262:
	end method
	method kielich_rotostart_preclick
	cthis kielich_preclick
	end method
	method popup_kielich_clickexit
	push "ankielich"
	call butgame,sclicked=
	cthis kielich_preclick
	end method
	method klatka_closed_click
	cthis hide
	push "klatka_open"
	cthis mgetel
	spushs
	spop $a
	call [$a],show
	end method
	method hiddenobj_put
	call grtxt,empty
	cmp0
	je l5265
	push 20
	pop igmstate
	push "rune6"
	cthis isvisible_itempopup
	neg
	cmp0
	je l5267
	push "rune6"
	push "anrune6"
	cthis show_itempopup
l5267:
l5265:
	end method
	method anrune6_TAKE
	push "rune6"
	cthis hide_itempopup
	cthis item_gotocenter
	push "tim1"
	push 1500
	push "mend"
	cthis timer=
	call tim1,play
	end method
	method popup_rune6_clickexit
	push "anrune6"
	call butgame,sclicked=
	cthis anrune6_TAKE
	end method
	method mend
	cthis set_mg_finished
	push "ad17_fontanna"
	push "gamead17_fontanna0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	clparent Hidden,HINT_CLICK
	cthis mishintplaying
	neg
	cmp0
	je l5269
	call ankielich,isvisible
	cmp0
	je l5271
	push "ankielich"
	cthis showhint
	jmp l5270
l5271:
	push "anrekawica_2"
	cthis showhint
l5270:
l5269:
	end method
	end game

	game HO01a_ksmala
	parent HOBanshee
	method init
	push 1
	pop HiddenShape
	push "ho01a_ksmala"
	clparent HOBanshee,init
	push A
	push "anim_coord.pyzH"
	push "bkg.jpg"
	push "popup_bkg.pyz 4"
	push "herb.pyzH 5"
	push "ramka.pyzG 400"
	push "popexit.pyz 410"
	cthis imgs=
	cthis butpopexit
	call anhoexit,hide
	push "part1"
	cthis mtoloupe
	push "part2"
	cthis mtoloupe
	push "part3"
	cthis mtoloupe
	push "part4"
	cthis mtoloupe
	push "part5"
	cthis mtoloupe
	push "part6"
	cthis mtoloupe
	push "anherb"
	cthis setasitemtopck
	cthis mmasks
	call anpopup_bkg,HO01a_ksmala0
	call imgbkg,HO01a_ksmala1
	push "HO01a_ksmala3"
	call ccs,enter
	push "sndstart"
	push "kinnat_c0d65b"
	cthis newsnd
	push "onfinish"
	push "advsetstdstate"
	call sndstart,addmethod
	push "sndstart"
	cthis cbplay
	end method
	method HO01a_ksmala0
	cthis Button_isinalpha
	cthis getname
	call butgame,add
	end method
	method HO01a_ksmala1
	cthis Button_isinalpha
	push "butclick"
	push "HO01a_ksmala2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method HO01a_ksmala2
	cthis advstdstate
	neg
	cmp0
	je l5273
	ret
l5273:
	cthis mend
	end method
	method HO01a_ksmala3
	push 1
	pop igmstate
	cthis advsetstdstate
	end method
	method part1_click
	cthis show
	cthis getname
	cthis remove_from_loupe
	end method
	method part2_click
	cthis show
	cthis getname
	cthis remove_from_loupe
	end method
	method part3_click
	cthis show
	cthis getname
	cthis remove_from_loupe
	end method
	method part4_click
	cthis show
	cthis getname
	cthis remove_from_loupe
	end method
	method part5_click
	cthis show
	cthis getname
	cthis remove_from_loupe
	end method
	method part6_click
	cthis show
	cthis getname
	cthis remove_from_loupe
	end method
	method hiddenobj_put
	call grtxt,empty
	cmp0
	je l5275
	push 20
	pop igmstate
	cthis set_mg_finished
	push "herb"
	push "anherb"
	cthis show_itempopup
l5275:
	end method
	method anherb_TAKE
	push "herb"
	cthis hide_itempopup
	cthis item_gotocenter
	end method
	method anherb_INPCK
	cthis set_mg_finished
	cthis mend
	end method
	method popup_herb_clickexit
	push "anherb"
	call butgame,sclicked=
	cthis anherb_TAKE
	end method
	method mend
	push "ad002a_kdoors"
	push "gamead002a_kdoors0"
	cthis stdexitdefadv
	end method
	end game

	game mg00Dzban
	parent Banshee
	method init
	push "mg00_dzban"
	clparent Banshee,init
	push A
	push "bgdzban.jpg"
	push "elsc.pyzG 30"
	push "maski.pyzH 40"
	push "korek.pyz 5"
	push "dzbanspod.pyz 7"
	push "ksiezyc.pyzH 10"
	push "dzban.pyz 15"
	push "zlozone.pyzH 12"
	push "animopen.pyzH 14"
	push "blink.pyzH 35"
	push "dymek.pyzH 50"
	push "grall"
	cthis imgsgr=
	cthis loadhoexit
	push 0
	push 0
	call imgbgdzban,setpos
	push "andymek"
	push "andymek2"
	cthis copyanima
	push "ananimopen"
	push "animopen2"
	cthis copyanima
	call ananimopen,show
	push 40
	call ananimopen,setz
	push "onfinish"
	push "mopen_dzban"
	call animopen2,addmethod
	push "anksiezyc"
	cthis setasitemtopck
	push "anmaski"
	push "anmaski2"
	cthis copyanima
	push "anmaski1"
	call anmaski,addtogamevars
	new int,iilekat
	push 4
	pop iilekat
	call grelsc,first
	push "anrot1"
	cthis copyanima
	call grelsc,first
	push "anrot2"
	cthis copyanima
	call anrot1,hide
	call anrot2,hide
	new filter,ftrot1
	new filter,ftrot2
	new real,robrot
	new int,ilesteps
	call anzlozone,getcx
	call anzlozone,getcy
	call anrot1,setpos
	call anzlozone,getcx
	call anzlozone,getcy
	call anrot2,setpos
	new vector,vpos
	push "mg00Dzban0"
	call grelsc,eval
	push "e1_mg00dzban_hash"
	call clsave,bis
	cmp0
	je l5277
	localint $1
	push 0
	pop $1
l5278:
	push $1
	call vpos,size
	cmpjl
	cmp0
	je l5279
	jmp l5281
l5280:
	add $1,1
	pop $1
	jmp l5278
l5281:
	push $1
	push "e1_mg00dzban_pos_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,get
	call vpos,set
	push $1
	call grelsc,get
	spushs
	push 1
	popax
	sub 0,$a
	push $1
	call vpos,get
	spop $a
	call [$a],setframe
	jmp l5280
l5279:
	jmp l5276
l5277:
	call vpos,hash
	localint $1
	push 0
	pop $1
l5282:
	push $1
	call vpos,size
	cmpjl
	cmp0
	je l5283
	jmp l5285
l5284:
	add $1,1
	pop $1
	jmp l5282
l5285:
	push "e1_mg00dzban_pos_"
	push $1
	pop $b
	popax
	add $a,$b
	push $1
	call vpos,get
	call clsave,set
	jmp l5284
l5283:
	push "e1_mg00dzban_hash"
	call clsave,bset
	push "mg00Dzban1"
	call grelsc,each
l5276:
	new int,idclick
	push 0
	pop idclick
	new string,sclicked1
	new string,sclicked2
	push "mg00Dzban2"
	call grelsc,eval
	push "timcheck"
	push 500
	push "mg00Dzban6"
	cthis timer=
	push "timrot"
	push 50
	push "mg00Dzban7"
	cthis timer=
	push "e1_mg00dzban_ulozony"
	call clsave,bis
	cmp0
	je l5299
	cthis mshowmoon
l5299:
	cthis stdstart
	end method
	method mg00Dzban0
	push 1
	popax
	sub 0,$a
	push 1
	popax
	sub 0,$a
	cthis actionnr
	cthis setframe
	call vpos,size
	call vpos,add
	call anzlozone,getcx
	call anzlozone,getcy
	cthis setpos
	end method
	method mg00Dzban1
	localdef $1
	pop $1
	push $1
	push $1
	call vpos,get
	cthis mchange
	end method
	method mg00Dzban2
	cthis Button_isinalpha
	push "butmoveon"
	push "mg00Dzban3"
	cthis addmethod
	push "butmoveoff"
	push "mg00Dzban4"
	cthis addmethod
	push "butclick"
	push "mg00Dzban5"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg00Dzban3
	cthis advstdstate
	cmp0
	je l5287
	push 1
	popax
	sub 0,$a
	cthis framenr
	call anblink,setframe
	cthis getposx
	cthis getposy
	call anblink,setpos
	call anblink,show
l5287:
	end method
	method mg00Dzban4
	call anblink,hide
	end method
	method mg00Dzban5
	cthis advstdstate
	cmp0
	je l5289
	push idclick
	push 0
	cmpje
	cmp0
	je l5291
	add idclick,1
	pop idclick
	cthis getname
	cthis mmask
	jmp l5290
l5291:
	push idclick
	push 1
	cmpje
	cmp0
	je l5293
	push sclicked1
	cthis getname
	cmpjne
	cmp0
	je l5295
	add idclick,1
	pop idclick
	cthis getname
	cthis mmask
	push "check"
	pop sgmstate
	call timcheck,play
l5295:
l5293:
l5290:
l5289:
	end method
	method mg00Dzban6
	push 0
	pop idclick
	push sclicked1
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	push sclicked2
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	cthis mrot
	call anmaski1,hide
	call anmaski2,hide
	end method
	method mg00Dzban7
	push ilesteps
	push 0
	cmpja
	cmp0
	je l5297
	push robrot
	popax
	sub 0,$a
	call ftrot1,rotate
	push robrot
	call ftrot2,rotate
	call anzlozone,getcx
	call anzlozone,getcy
	call anrot1,setpos
	call anzlozone,getcx
	call anzlozone,getcy
	call anrot2,setpos
	sub ilesteps,1
	pop ilesteps
	cthis play
	jmp l5296
l5297:
	call ftrot1,unlink
	call ftrot2,unlink
	call anrot1,hide
	call anrot2,hide
	push sclicked1
	spushs
	spop $a
	call [$a],show
	push sclicked2
	spushs
	spop $a
	call [$a],show
	push sclicked1
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	push sclicked2
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	cthis mchange
	cthis mcheckend
l5296:
	end method
	method mcheckend
	localint $1
	push 1
	pop $1
	localint $2
	push 0
	pop $2
l5300:
	push $2
	call grelsc,size
	cmpjl
	cmp0
	je l5301
	jmp l5303
l5302:
	add $2,1
	pop $2
	jmp l5300
l5303:
	localdef $3
	push $2
	call grelsc,get
	pop $3
	push $3
	spushs
	spop $a
	call [$a],framenr
	push $2
	cmpjne
	cmp0
	je l5305
	push 0
	pop $1
l5305:
	jmp l5302
l5301:
	push $1
	cmp0
	je l5307
	push "e1_mg00dzban_ulozony"
	call clsave,bset
	cthis mshowmoon
	push "state_open"
	pop sgmstate
	push 1
	call animopen2,play
	jmp l5306
l5307:
	cthis advsetstdstate
l5306:
	end method
	method mshowmoon
	push "grelsc"
	call butgame,remove
	call grelsc,hide
	call anksiezyc,show
	push 1
	push 1
	call animopen2,nofframes
	push 1
	pop $b
	popax
	sub $a,$b
	call animopen2,setframe
	end method
	method mchange
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	cmpje
	cmp0
	je l5309
	ret
l5309:
	localdef $3
	push $1
	call grelsc,get
	pop $3
	localdef $4
	push $2
	call grelsc,get
	pop $4
	localdef $5
	push $3
	spushs
	spop $a
	call [$a],framenr
	pop $5
	push $3
	spushs
	push 1
	popax
	sub 0,$a
	push $4
	spushs
	spop $a
	call [$a],framenr
	spop $a
	call [$a],setframe
	push $4
	spushs
	push 1
	popax
	sub 0,$a
	push $5
	spop $a
	call [$a],setframe
	push "e1_mg00dzban_pos_"
	push $4
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	pop $b
	popax
	add $a,$b
	push $5
	call clsave,set
	push "e1_mg00dzban_pos_"
	push $3
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	pop $b
	popax
	add $a,$b
	push $3
	spushs
	spop $a
	call [$a],framenr
	call clsave,set
	end method
	method mrot
	localint $1
	localint $2
	pop $2
	pop $1
	localdef $3
	push $1
	call grelsc,get
	pop $3
	localdef $4
	push $2
	call grelsc,get
	pop $4
	push $3
	spushs
	spop $a
	call [$a],hide
	push $4
	spushs
	spop $a
	call [$a],hide
	call anrot1,show
	call anrot2,show
	localdef $5
	push sclicked1
	spushs
	spop $a
	call [$a],framenr
	pop $5
	localdef $6
	push sclicked2
	spushs
	spop $a
	call [$a],framenr
	pop $6
	push $3
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	push $5
	call anrot1,setframe
	push $4
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	push $6
	call anrot2,setframe
	push "anrot1"
	call ftrot1,link
	push "anrot2"
	call ftrot2,link
	push 2
	call ftrot1,setpivottype
	push 2
	call ftrot2,setpivottype
	localdef $7
	push 1
	popax
	sub 0,$a
	call anrot1,nofframes
	pop $7
	push $5
	push $6
	cmpja
	cmp0
	je l5311
	localdef $8
	push $5
	push $6
	pop $b
	popax
	sub $a,$b
	pop $8
	localdef $9
	push $6
	push $7
	push $5
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	add $a,$b
	pop $9
	push $8
	push $9
	cmpjl
	cmp0
	je l5313
	push $8
	push 1
	popax
	sub 0,$a
	cthis mupdate
	jmp l5312
l5313:
	push $9
	push 1
	cthis mupdate
l5312:
	jmp l5310
l5311:
	localdef $8
	push $6
	push $5
	pop $b
	popax
	sub $a,$b
	pop $8
	localdef $9
	push $5
	push $7
	push $6
	pop $b
	popax
	sub $a,$b
	pop $b
	popax
	add $a,$b
	pop $9
	push $8
	push $9
	cmpjl
	cmp0
	je l5315
	push $8
	push 1
	cthis mupdate
	jmp l5314
l5315:
	push $9
	push 1
	popax
	sub 0,$a
	cthis mupdate
l5314:
l5310:
	call timrot,play
	end method
	method mupdate
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push iilekat
	pop $b
	popax
	mul $a,$b
	pop ilesteps
	push $2
	push 360
	pop $b
	popax
	mul $a,$b
	push 1
	popax
	sub 0,$a
	call anrot1,nofframes
	push iilekat
	pop $b
	popax
	mul $a,$b
	pop $b
	popax
	div $a,$b
	psax
	pop robrot
	end method
	method mmask
	localstring $1
	pop $1
	localint $2
	localint $3
	call mouse,getpos
	pop $3
	pop $2
	push idclick
	push 1
	cmpje
	cmp0
	je l5317
	push $2
	push $3
	call andymek,setpos
	push 0
	call andymek,play
	jmp l5316
l5317:
	push $2
	push $3
	call andymek2,setpos
	push 0
	call andymek2,play
l5316:
	push "sclicked"
	push idclick
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	spop $a
	call [$a],set
	localdef $4
	push "anmaski"
	push idclick
	pop $b
	popax
	add $a,$b
	pop $4
	push $4
	spushs
	push 0
	push $1
	spushs
	spop $a
	call [$a],framenr
	spop $a
	call [$a],setframe
	push $4
	spushs
	spop $a
	call [$a],show
	end method
	method mopen_dzban
	cthis advsetstdstate
	end method
	method anksiezyc_TAKE
	push "kolatka"
	cthis popitem_gotocenter
	end method
	method anksiezyc_INPCK
	push "kolatka"
	cthis addtopck
	push "e1_wyciagnela_kolatke"
	call clsave,bset
	push "end"
	pop sgmstate
	push "timend"
	push 1000
	push "mg00Dzban8"
	cthis timplay
	end method
	method mg00Dzban8
	push "ad00_endintro"
	push "gamead00_endintro0"
	cthis gotoadv
	call ccs,buildfromscreen
	end method
	method mend
	push "ad00_endintro"
	push "gamead00_endintro0"
	cthis gotoadv
	end method
	end game

	game TestFilm2
	parent StdGame
	method init
	push "film"
	clparent StdGame,init
	push "empty"
	call advmouse,set
	new Film,film1
	push 1
	call film1,bcenter=
	push 1
	call film1,bborders=
	push "mus"
	call film1,musicclass=
	push "scripts/cs01_barghest/"
	push "film"
	call film1,playfilm
	end method
	method mouse_lclick
	call film1,isplaying
	cmp0
	je l5319
	push 1
	call film1,stop
l5319:
	end method
	end game

	game TestFilm
	parent StdGame
	method init
	push "testfilm2"
	clparent StdGame,init
	new Film,film1
	push "onfinish"
	push "film1_filmend"
	call film1,addmethod
	cthis showfps
	new TicksCounter,tc1
	new img,imgbg
	push iResX
	push iResY
	cthis black
	push 255
	call imgbg,create
	push 1
	popax
	sub 0,$a
	call imgbg,setz
	end method
	method key_down
	push "1"
	call keyboard,iskey
	cmp0
	je l5321
	push 2
	call film1,setcycle
	call tc1,start
	push "scripts/testfilm/"
	push "film"
	call film1,playfilm
	jmp l5320
l5321:
	push "2"
	call keyboard,iskey
	cmp0
	je l5323
	push 2
	call film1,setcycle
	call tc1,start
	push "scripts/testfilm2/"
	push "film"
	call film1,playfilm
	jmp l5322
l5323:
	push "3"
	call keyboard,iskey
	cmp0
	je l5325
	call film1,play
l5325:
l5322:
l5320:
	end method
	method showfps
	push "cfps"
	cthis hasvar
	neg
	cmp0
	je l5327
	new CalcFPS,cfps
	push 14
	push 10
	push 10
	call cfps,stdset
l5327:
	call cfps,play
	end method
	method film1_filmend
	cthis free
	push "film time: "
	call tc1,print
	end method
	end game

	game mg01Fontanna
	parent Banshee
	method init
	push "mg01_fontanna"
	clparent Banshee,init
	push A
	push "bkg.jpg"
	push "woda.pyzP 5"
	push "wodamask.pyz 10"
	push "dzwonekblue.pyz 60"
	push "oczy.pyzG 25"
	push "czachy.pyzGH 30"
	push "bluszcz.pyz 35"
	push "medalfontanna.pyz 40"
	push "popexit.pyz 45"
	push "ramka.pyz 42"
	cthis imgs=
	push "e1_dzwonekblue_taken"
	call clsave,bis
	cmp0
	je l5329
	call andzwonekblue,hide
	jmp l5328
l5329:
	push "andzwonekblue"
	cthis setasitemtopck
l5328:
	push "e1_medalfontanna_taken"
	call clsave,bis
	cmp0
	je l5331
	call anmedalfontanna,hide
	jmp l5330
l5331:
	push "anmedalfontanna"
	cthis setasitemtopck
l5330:
	push A
	push "woda2PL 10"
	cthis sfxs=
	cthis butpopexit
	cthis butpopexitisinramka
	new int,idclick
	push 0
	pop idclick
	call grczachy,first
	spushs
	spop $a
	call [$a],show
	call grczachy,first
	spushs
	push 31
	spop $a
	call [$a],setz
	push "mg01Fontanna0"
	call grczachy,eval
	push 0
	call grczachy,removeat
	localint $1
	push 1
	pop $1
l5352:
	push $1
	push 3
	cmpjle
	cmp0
	je l5353
	jmp l5355
l5354:
	add $1,1
	pop $1
	jmp l5352
l5355:
	push "e1_czaszka"
	push $1
	pop $b
	popax
	add $a,$b
	push "_put"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l5357
	push $1
	push "e1_czaszka"
	push $1
	pop $b
	popax
	add $a,$b
	push "_putplace"
	pop $b
	popax
	add $a,$b
	call clsave,get
	cthis wstaw_czaszke
l5357:
	jmp l5354
l5353:
	push "banshee1.ogg -v 30 -l"
	call mus,playstr
	cthis stdstart
	end method
	method mg01Fontanna0
	push "isbutin"
	push "mg01Fontanna1"
	cthis addmethod
	push "butmoveon"
	push "mg01Fontanna2"
	cthis addmethod
	push "butmoveoff"
	push "mg01Fontanna3"
	cthis addmethod
	push "butclick"
	push "mg01Fontanna4"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg01Fontanna1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	end method
	method mg01Fontanna2
	cthis advstdstate
	neg
	cmp0
	je l5333
	push sgmstate
	push "getitem"
	cmpjne
	jmp l5335
l5333:
	push 0
	jmp l5335
l5334:
	push 1
l5335:
	cmp0
	je l5336
	ret
l5336:
	push "take"
	call advmouse,set
	end method
	method mg01Fontanna3
	cthis advstdstate
	neg
	cmp0
	je l5338
	push sgmstate
	push "getitem"
	cmpjne
	jmp l5340
l5338:
	push 0
	jmp l5340
l5339:
	push 1
l5340:
	cmp0
	je l5341
	ret
l5341:
	call advmouse,setstd
	end method
	method mg01Fontanna4
	cthis advstdstate
	neg
	cmp0
	jne l5344
	cthis isvisible
	neg
	jmp l5345
l5343:
	push 0
	jmp l5345
l5344:
	push 1
l5345:
	cmp0
	je l5346
	ret
l5346:
	localdef $1
	cthis framenr
	push 1
	pop $b
	popax
	add $a,$b
	push 1
	popax
	sub 0,$a
	cthis nofframes
	pop $b
	popax
	div $a,$b
	push $d
	pop $1
	localdef $2
	push 1
	popax
	sub 0,$a
	cthis actionnr
	pop $2
	push 1
	popax
	sub 0,$a
	push $1
	cthis setframe
	push $2
	call groczy,get
	spushs
	push 1
	popax
	sub 0,$a
	push $1
	spop $a
	call [$a],setframe
	localdef $3
	push ""
	push $2
	pop $b
	popax
	add $a,$b
	push "_"
	pop $b
	popax
	add $a,$b
	push idclick
	pop $b
	popax
	add $a,$b
	pop $3
	push $3
	spushs
	push "2_0"
	cmpst
	jne l5348
	spop $a
	push 1
	cthis mgoclick
	jmp l5347
l5348:
	push "1_1"
	cmpst
	jne l5349
	spop $a
	push 2
	cthis mgoclick
	jmp l5347
l5349:
	push "3_2"
	cmpst
	jne l5350
	spop $a
	push 3
	cthis mgoclick
	jmp l5347
l5350:
	push "0_3"
	cmpst
	jne l5351
	spop $a
	call anwoda,anhide
	add idclick,1
	pop idclick
	push 0
	push idclick
	call anmedalfontanna,setframe
	jmp l5347
l5351:
	spop $a
	push 0
	call anwoda,play
	push 0
	pop idclick
	push 0
	push idclick
	call anmedalfontanna,setframe
l5347:
	end method
	method mgoclick
	localint $1
	pop $1
	cthis framenr
	push 1
	cmpje
	cmp0
	je l5359
	push $1
	call anwoda,play
	add idclick,1
	pop idclick
	jmp l5358
l5359:
	push 0
	call anwoda,play
	push 0
	pop idclick
l5358:
	push 0
	push idclick
	call anmedalfontanna,setframe
	end method
	method USE_czaszka1
	push 1
	cthis _check_use
	end method
	method USE_czaszka2
	push 2
	cthis _check_use
	end method
	method USE_czaszka3
	push 3
	cthis _check_use
	end method
	method _check_use
	localint $1
	pop $1
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call grczachy,isin
	cmp0
	je l5361
	push "czaszka"
	push $1
	pop $b
	popax
	add $a,$b
	cthis removefrompck
	push $1
	call grczachy,getsfound
	cthis wstaw_czaszke
	jmp l5360
l5361:
	cthis item_gotopck
l5360:
	end method
	method wstaw_czaszke
	localint $1
	localstring $2
	pop $2
	pop $1
	push $2
	call grczachy,remove
	push $2
	spushs
	spop $a
	call [$a],show
	push "e1_czaszka"
	push $1
	pop $b
	popax
	add $a,$b
	push "_put"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	push "e1_czaszka"
	push $1
	pop $b
	popax
	add $a,$b
	push "_putplace"
	pop $b
	popax
	add $a,$b
	push $2
	call clsave,set
	end method
	method anmedalfontanna_TAKE
	call anmedalfontanna,framenr
	push 4
	cmpje
	cmp0
	je l5363
	push "medalfontanna"
	cthis popitem_gotocenter
l5363:
	end method
	method anmedalfontanna_INPCK
	push "e1_medalfontanna_taken"
	call clsave,bset
	push "medalfontanna"
	cthis addtopck
	end method
	method andzwonekblue_TAKE
	push "dzwonekblue"
	cthis popitem_gotocenter
	end method
	method andzwonekblue_INPCK
	push "e1_dzwonekblue_taken"
	call clsave,bset
	push "dzwonekblue"
	cthis addtopck
	end method
	method mend
	push "ad01_widokogolny"
	push "gamead01_widokogolny0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "e1_wyciagnela_kolatke"
	call clsave,bis
	neg
	cmp0
	je l5365
	push "e1_dzwonekblue_taken"
	call clsave,bis
	neg
	cmp0
	je l5367
	push "andzwonekblue"
	cthis showhint
	jmp l5366
l5367:
	push "anpopexit"
	cthis showhint
l5366:
	jmp l5364
l5365:
	push "e1_medalfontanna_taken"
	call clsave,bis
	cmp0
	je l5369
	push "anpopexit"
	cthis showhint
	jmp l5368
l5369:
	push "anmedalfontanna"
	cthis showhint
l5368:
l5364:
	end method
	end game

	game mg01Schody
	parent Banshee
	method init
	push "mg01_schody"
	clparent Banshee,init
	push A
	push "bkg.jpg"
	push "jezyk.pyzP 5"
	push "jaszczur.pyz 10"
	push "przycisk.pyz 20"
	push "klucz.pyz 25"
	push "dolcien.pyz 30"
	push "klapa.pyz 35"
	push "klapamask.pyz 40"
	push "dolekputmedal.pyz 45"
	push "medalput.pyzH 50"
	push "medalpck.pyzH 55"
	push "lisc1.pyz 60"
	push "lisc2.pyz 60"
	push "lisc3.pyz 60"
	push "lisc4.pyz 60"
	push "cienmask.pyz 70"
	push "motyl.pyzP 115"
	push "ramka.pyz 80"
	push "popexit.pyz 90"
	cthis imgs=
	cthis butpopexit
	cthis butpopexitisinramka
	push "taken_kluczschodek"
	call clsave,bis
	neg
	cmp0
	je l5371
	new filter,ftklucz
	push "anklucz"
	call ftklucz,link
	push 90
	call ftklucz,rotate
	push "anklucz"
	cthis setasitemtopck
	jmp l5370
l5371:
	call anklucz,hide
l5370:
	push "e1_mg01_klucz_odkryty"
	call clsave,bis
	neg
	cmp0
	je l5373
	push 1
	call anklucz,disable=
	push "e1_medalfontanna_is_put"
	call clsave,bis
	cmp0
	jne l5376
	push "e1_mg01_klucz_przycisk_nacisniety"
	call clsave,bis
	jmp l5377
l5375:
	push 0
	jmp l5377
l5376:
	push 1
l5377:
	cmp0
	je l5378
	push 0
	push 70
	popax
	sub 0,$a
	call anklapa,move
l5378:
	jmp l5372
l5373:
	call anklapa,hide
l5372:
	push igmappw
	push 2
	pop $b
	popax
	div $a,$b
	psax
	push 250
	pop $b
	popax
	add $a,$b
	push igmapph
	push 2
	pop $b
	popax
	div $a,$b
	psax
	call anmotyl,ansetbpos
	new filter,ftmotyl
	push "anmotyl"
	call ftmotyl,link
	new int,ilicz
	push 0
	pop ilicz
	push "onendframe"
	push "mg01Schody0"
	call anmotyl,addmethod
	push "e1_zabrana_czaszka3"
	call clsave,bis
	neg
	cmp0
	je l5382
	push A
	push "czaszka3.pyz 75"
	cthis imgs=
	push "anczaszka3"
	cthis setasitemtopck
l5382:
	localint $1
	push 1
	pop $1
l5383:
	push $1
	push 4
	cmpjle
	cmp0
	je l5384
	jmp l5386
l5385:
	add $1,1
	pop $1
	jmp l5383
l5386:
	push "e1_mg01_lisc_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_odsuniety"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l5388
	push "anlisc"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	spop $a
	call [$a],ansetlastframe
	jmp l5387
l5388:
	push "anlisc"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],mg01Schody1
l5387:
	jmp l5385
l5384:
	call andolekputmedal,mg01Schody5
	push "e1_medalfontanna_is_put"
	call clsave,bis
	cmp0
	je l5413
	call anmedalput,show
l5413:
	push "e1_mg01_klucz_odkryty"
	call clsave,bis
	neg
	cmp0
	je l5415
	call anprzycisk,mg01Schody9
l5415:
	push "timzasuwa"
	push "mg01Schody14"
	cthis cycle=
	cthis stdstart
	end method
	method mg01Schody0
	add ilicz,1
	pop ilicz
	push ilicz
	push 1
	cmpje
	cmp0
	je l5380
	push 0
	pop ilicz
	localreal $1
	push 12
	push 21
	spushs
	spop $h
	call $h,rand
	pop $b
	popax
	sub $a,$b
	pop $1
	localreal $2
	push 5
	pop $2
	localreal $3
	call ftmotyl,getangle
	pop $3
	localreal $4
	push $3
	spushs
	spop $h
	call $h,sin
	push $2
	pop $b
	popax
	mul $a,$b
	pop $4
	localreal $5
	push $3
	spushs
	spop $h
	call $h,cos
	push $2
	pop $b
	popax
	mul $a,$b
	pop $5
	push $1
	call ftmotyl,rotate
	push $4
	popax
	sub 0,$a
	push $5
	popax
	sub 0,$a
	cthis move
l5380:
	end method
	method mg01Schody1
	cthis Button_isinalpha
	push "butmoveon"
	push "mg01Schody2"
	cthis addmethod
	push "butmoveoff"
	push "mg01Schody3"
	cthis addmethod
	push "butclick"
	push "mg01Schody4"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg01Schody2
	cthis advstdstate
	neg
	cmp0
	je l5390
	ret
l5390:
	call advmouse,setact
	end method
	method mg01Schody3
	cthis advstdstate
	neg
	cmp0
	je l5392
	ret
l5392:
	call advmouse,setstd
	end method
	method mg01Schody4
	cthis advstdstate
	neg
	cmp0
	je l5394
	ret
l5394:
	push 1
	popax
	sub 0,$a
	cthis actionnr
	push 0
	cmpje
	cmp0
	je l5396
	cthis getname
	call butgame,removebut
	call butgame,onmousemove
	push "e1_mg01_lisc_"
	cthis getname
	spushs
	push 0
	push 1
	spop $h
	call $h,gete
	pop $b
	popax
	add $a,$b
	push "_odsuniety"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	push 1
	cthis play
l5396:
	end method
	method mg01Schody5
	push "isbutin"
	push "mg01Schody6"
	cthis addmethod
	push "butmoveon"
	push "mg01Schody7"
	cthis addmethod
	push "butmoveoff"
	push "mg01Schody8"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg01Schody6
	localdef $1
	localdef $2
	pop $2
	pop $1
	push 1
	popax
	sub 0,$a
	call anlisc1,actionnr
	push 1
	cmpje
	cmp0
	je l5397
	push $1
	push $2
	push 0
	push 0
	cthis isin
	jmp l5399
l5397:
	push 0
	jmp l5399
l5398:
	push 1
l5399:
	end method
	method mg01Schody7
	cthis advstdstate
	neg
	cmp0
	je l5401
	push sgmstate
	push "getitem"
	cmpjne
	jmp l5403
l5401:
	push 0
	jmp l5403
l5402:
	push 1
l5403:
	cmp0
	je l5404
	ret
l5404:
	push "e1_medalfontanna_is_put"
	call clsave,bis
	neg
	cmp0
	je l5406
	push "use"
	call advmouse,set
l5406:
	end method
	method mg01Schody8
	cthis advstdstate
	neg
	cmp0
	je l5408
	push sgmstate
	push "getitem"
	cmpjne
	jmp l5410
l5408:
	push 0
	jmp l5410
l5409:
	push 1
l5410:
	cmp0
	je l5411
	ret
l5411:
	call advmouse,setstd
	end method
	method mg01Schody9
	push "isbutin"
	push "mg01Schody10"
	cthis addmethod
	push "butmoveon"
	push "mg01Schody11"
	cthis addmethod
	push "butmoveoff"
	push "mg01Schody12"
	cthis addmethod
	push "butclick"
	push "mg01Schody13"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg01Schody10
	localdef $1
	localdef $2
	pop $2
	pop $1
	cthis przyciskodkryty
	cmp0
	je l5416
	push $1
	push $2
	push 0
	push 0
	cthis isin
	jmp l5418
l5416:
	push 0
	jmp l5418
l5417:
	push 1
l5418:
	end method
	method mg01Schody11
	cthis advstdstate
	neg
	cmp0
	je l5420
	ret
l5420:
	push "e1_mg01_klucz_przycisk_nacisniety"
	call clsave,bis
	neg
	cmp0
	je l5422
	push "take"
	call advmouse,set
	jmp l5421
l5422:
	call advmouse,setstd
l5421:
	end method
	method mg01Schody12
	cthis advstdstate
	neg
	cmp0
	je l5424
	ret
l5424:
	call advmouse,setstd
	end method
	method mg01Schody13
	cthis advstdstate
	neg
	cmp0
	je l5426
	ret
l5426:
	push 1
	popax
	sub 0,$a
	cthis actionnr
	cmp0
	je l5428
	push 0
	push 0
	cthis setframe
	jmp l5427
l5428:
	push 1
	push 0
	cthis setframe
l5427:
	push "e1_mg01_klucz_przycisk_nacisniety"
	call clsave,bis
	neg
	cmp0
	je l5430
	push 1
	popax
	sub 0,$a
	cthis actionnr
	jmp l5432
l5430:
	push 0
	jmp l5432
l5431:
	push 1
l5432:
	cmp0
	je l5433
	push "anprzycisk"
	call butgame,removebut
	push "e1_mg01_klucz_przycisk_nacisniety"
	call clsave,bset
	cthis butmoveon
	push "odsun"
	pop sgmstate
	call timzasuwa,play
l5433:
	end method
	method mg01Schody14
	push 0
	push 10
	popax
	sub 0,$a
	call anklapa,move
	localdef $1
	push 140
	pop $1
	push "e1_medalfontanna_is_put"
	call clsave,bis
	cmp0
	je l5435
	push "e1_mg01_klucz_przycisk_nacisniety"
	call clsave,bis
	jmp l5437
l5435:
	push 0
	jmp l5437
l5436:
	push 1
l5437:
	cmp0
	je l5438
	push 0
	pop $1
l5438:
	call anklapa,getpy
	push $1
	cmpjl
	cmp0
	je l5440
	cthis advsetstdstate
	push $1
	push 0
	cmpje
	cmp0
	je l5442
	push 0
	call anklucz,disable=
	push "e1_mg01_klucz_odkryty"
	call clsave,bset
l5442:
	jmp l5439
l5440:
	cthis play
l5439:
	end method
	method anklucz_TAKE
	push 90
	popax
	sub 0,$a
	call ftklucz,rotate
	push "kluczschodek"
	cthis popitem_gotocenter
	end method
	method anklucz_INPCK
	push "kluczschodek"
	cthis addtopck
	push "e1_end_schody"
	call clsave,bset
	push "e1_zabrana_czaszka3"
	call clsave,bis
	cmp0
	je l5444
	cthis mend
l5444:
	end method
	method mend
	push "ad01_widokogolny"
	push "gamead01_widokogolny0"
	cthis stdexitdefadv
	end method
	method przyciskodkryty
	push 1
	popax
	sub 0,$a
	call anlisc2,actionnr
	cmp0
	je l5445
	push 1
	popax
	sub 0,$a
	call anlisc3,actionnr
	cmp0
	je l5445
	push 1
	popax
	sub 0,$a
	call anlisc4,actionnr
	jmp l5447
l5445:
	push 0
	jmp l5447
l5446:
	push 1
l5447:
	end method
	method anczaszka3_TAKE
	push "czaszka3"
	cthis popitem_gotocenter
	end method
	method anczaszka3_INPCK
	push "czaszka3"
	cthis addtopck
	push "e1_zabrana_czaszka3"
	call clsave,bset
	push "e1_end_schody"
	call clsave,bis
	cmp0
	je l5449
	cthis mend
l5449:
	end method
	method USE_medalfontanna
	cthis advsetstdstate
	call mouse,getpos
	call andolekputmedal,isbutin
	cmp0
	je l5451
	push "andolekputmedal"
	call butgame,removebut
	push "medalfontanna"
	cthis removefrompck
	call anmedalput,show
	push "e1_medalfontanna_is_put"
	call clsave,bset
	call advmouse,setstd
	cthis butmoveon
	push "odsun"
	pop sgmstate
	call timzasuwa,play
	jmp l5450
l5451:
	cthis item_gotopck
l5450:
	end method
	method HINT_CLICK
	push "e1_wyciagnela_kolatke"
	call clsave,bis
	neg
	cmp0
	je l5453
	push "anpopexit"
	cthis showhint
	jmp l5452
l5453:
	push "e1_medalfontanna_taken"
	call clsave,bis
	neg
	cmp0
	je l5455
	push "e1_zabrana_czaszka3"
	call clsave,bis
	cmp0
	je l5457
	push "anpopexit"
	cthis showhint
	jmp l5456
l5457:
	push "anczaszka3"
	cthis showhint
l5456:
	jmp l5454
l5455:
	push "e1_mg01_lisc_1_odsuniety"
	call clsave,bis
	neg
	cmp0
	je l5459
	push "anlisc1"
	cthis showhint
	jmp l5458
l5459:
	push "e1_mg01_lisc_2_odsuniety"
	call clsave,bis
	neg
	cmp0
	je l5461
	push "anlisc2"
	cthis showhint
	jmp l5460
l5461:
	push "e1_mg01_lisc_3_odsuniety"
	call clsave,bis
	neg
	cmp0
	je l5463
	push "anlisc3"
	cthis showhint
	jmp l5462
l5463:
	push "e1_mg01_lisc_4_odsuniety"
	call clsave,bis
	neg
	cmp0
	je l5465
	push "anlisc4"
	cthis showhint
	jmp l5464
l5465:
	push "e1_medalfontanna_is_put"
	call clsave,bis
	neg
	cmp0
	je l5467
	push "andolekputmedal"
	cthis showhint
	push "medalfontanna"
	cthis showhintitem
	jmp l5466
l5467:
	push "e1_mg01_klucz_odkryty"
	call clsave,bis
	neg
	cmp0
	je l5469
	push "anprzycisk"
	cthis showhint
	jmp l5468
l5469:
	push "e1_end_schody"
	call clsave,bis
	neg
	cmp0
	je l5471
	push "anklucz"
	cthis showhint
	jmp l5470
l5471:
	push "anpopexit"
	cthis showhint
l5470:
l5468:
l5466:
l5464:
l5462:
l5460:
l5458:
l5454:
l5452:
	end method
	end game

	game mg02Klodkabrama
	parent Banshee
	method init
	push "mg02_klodkabrama"
	clparent Banshee,init
	push A
	push "bkg.jpg"
	push "lew.pyz 30"
	push "oczy.pyzH 40"
	push "box.pyzH 5"
	push "els.pyzGH 10"
	push "forklucz.pyzH 15"
	push "kolatka.pyzH 40"
	push "klucz.pyzH 20"
	push "popexit.pyz 50"
	cthis imgs=
	cthis butpopexit
	call anlew,mg02Klodkabrama0
	call imgbkg,mg02Klodkabrama1
	push "e1_lew_losuj"
	call clsave,bis
	neg
	cmp0
	je l5475
	push "e1_lew_losuj"
	call clsave,bset
	localint $1
	push 0
	pop $1
l5476:
	push $1
	call grels,size
	cmpjl
	cmp0
	je l5477
	jmp l5479
l5478:
	add $1,1
	pop $1
	jmp l5476
l5479:
	localdef $2
	push $1
	call grels,get
	pop $2
	push $2
	spushs
	push $1
	push 1
	push $2
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],nofframes
	push 1
	pop $b
	popax
	sub $a,$b
	spushs
	spop $h
	call $h,rand
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setframe
	push "e1_lew_els_"
	push $1
	pop $b
	popax
	add $a,$b
	push $2
	spushs
	spop $a
	call [$a],framenr
	call clsave,set
	jmp l5478
l5477:
	jmp l5474
l5475:
	localint $1
	push 0
	pop $1
l5480:
	push $1
	call grels,size
	cmpjl
	cmp0
	je l5481
	jmp l5483
l5482:
	add $1,1
	pop $1
	jmp l5480
l5483:
	push $1
	call grels,get
	spushs
	push $1
	push "e1_lew_els_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,get
	spop $a
	call [$a],setframe
	jmp l5482
l5481:
l5474:
	push A
	push "odklucza2"
	cthis sfxs=
	new int,bkoniecmech
	cthis mcheckels
	push "onfinish"
	push "mg02Klodkabrama4"
	call anklucz,addmethod
	call ankolatka,mg02Klodkabrama5
	call anlew,mg02Klodkabrama8
	push "mg02Klodkabrama12"
	call grels,eval
	call anforklucz,mg02Klodkabrama15
	push "e1_lew_mech"
	call clsave,bis
	cmp0
	je l5523
	push "opened"
	push 0
	call anlew,setframe
	cthis mlewmech
	jmp l5522
l5523:
	push "e1_lew_kolatka"
	call clsave,bis
	cmp0
	je l5525
	push "sleep"
	push 0
	call anlew,setframe
	call ankolatka,show
	jmp l5524
l5525:
	push 0
	call anoczy,play
l5524:
l5522:
	cthis stdstart
	end method
	method mg02Klodkabrama0
	cthis Button_isinalpha
	cthis getname
	call butgame,add
	end method
	method mg02Klodkabrama1
	push "isbutin"
	push "mg02Klodkabrama2"
	cthis addmethod
	push "butclick"
	push "mg02Klodkabrama3"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg02Klodkabrama2
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anbox,isin
	neg
	end method
	method mg02Klodkabrama3
	cthis advstdstate
	neg
	cmp0
	je l5473
	ret
l5473:
	cthis mend
	end method
	method mg02Klodkabrama4
	push "e1_lew_otworzony"
	call clsave,bset
	cthis mend
	end method
	method mg02Klodkabrama5
	cthis Button_isin
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg02Klodkabrama6"
	cthis addmethod
	push "onfinish"
	push "mg02Klodkabrama7"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg02Klodkabrama6
	cthis advstdstate
	neg
	cmp0
	je l5485
	ret
l5485:
	push "lewopen"
	pop sgmstate
	push 0
	cthis play
	end method
	method mg02Klodkabrama7
	cthis hide
	push "e1_lew_mech"
	call clsave,bset
	cthis mlewmech
	push "open"
	call anlew,playsmooth
	end method
	method mg02Klodkabrama8
	push "isbutin"
	push "mg02Klodkabrama9"
	cthis addmethod
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg02Klodkabrama10"
	cthis addmethod
	push "onfinish"
	push "mg02Klodkabrama11"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg02Klodkabrama9
	localint $1
	localint $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 1
	cthis isin
	cmp0
	je l5486
	cthis actionname
	push "normal"
	cmpje
	cmp0
	jne l5489
	cthis actionname
	push "sleep"
	cmpje
	cmp0
	je l5490
	call ankolatka,isvisible
	neg
	jmp l5492
l5490:
	push 0
	jmp l5492
l5491:
	push 1
l5492:
	jmp l5493
l5488:
	push 0
	jmp l5493
l5489:
	push 1
l5493:
	jmp l5494
l5486:
	push 0
	jmp l5494
l5487:
	push 1
l5494:
	end method
	method mg02Klodkabrama10
	cthis advstdstate
	neg
	cmp0
	je l5496
	ret
l5496:
	cthis actionname
	push "normal"
	cmpje
	cmp0
	je l5498
	push "angrylew"
	pop sgmstate
	push "angry"
	cthis playsmooth
	push "angry"
	call anoczy,play
l5498:
	end method
	method mg02Klodkabrama11
	push 0
	cthis setsmooth
	cthis actionname
	push "angry"
	cmpje
	cmp0
	je l5500
	push "angry2"
	cthis play
	jmp l5499
l5500:
	cthis actionname
	push "angry2"
	cmpje
	cmp0
	je l5502
	push "angry3"
	cthis playsmooth
	jmp l5501
l5502:
	cthis actionname
	push "angry3"
	cmpje
	cmp0
	je l5504
	cthis advsetstdstate
	push "normal"
	cthis play
	push "normal"
	call anoczy,play
	jmp l5503
l5504:
	cthis actionname
	push "open"
	cmpje
	cmp0
	je l5506
	cthis advsetstdstate
	push "opened"
	push 0
	cthis setframe
	jmp l5505
l5506:
	cthis actionname
	push "sleep"
	cmpje
	cmp0
	je l5508
	cthis advsetstdstate
l5508:
l5505:
l5503:
l5501:
l5499:
	end method
	method mg02Klodkabrama12
	push "isbutin"
	push "mg02Klodkabrama13"
	cthis addmethod
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg02Klodkabrama14"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg02Klodkabrama13
	localint $1
	localint $2
	pop $2
	pop $1
	push bkoniecmech
	neg
	cmp0
	je l5509
	push $1
	push $2
	push 1
	push 1
	cthis isin
	jmp l5511
l5509:
	push 0
	jmp l5511
l5510:
	push 1
l5511:
	end method
	method mg02Klodkabrama14
	cthis advstdstate
	neg
	cmp0
	jne l5514
	push bkoniecmech
	jmp l5515
l5513:
	push 0
	jmp l5515
l5514:
	push 1
l5515:
	cmp0
	je l5516
	ret
l5516:
	cthis ansetnextfr
	push "e1_lew_els_"
	push 1
	popax
	sub 0,$a
	cthis actionnr
	pop $b
	popax
	add $a,$b
	cthis framenr
	call clsave,set
	cthis mcheckels
	push bkoniecmech
	cmp0
	je l5518
	call fxodklucza2,play
l5518:
	end method
	method mg02Klodkabrama15
	push "isbutin"
	push "mg02Klodkabrama16"
	cthis addmethod
	cthis Button_moveonms
	cthis Button_moveoffms
	cthis getname
	call butgame,add
	end method
	method mg02Klodkabrama16
	localint $1
	localint $2
	pop $2
	pop $1
	push bkoniecmech
	cmp0
	je l5519
	push $1
	push $2
	push 1
	push 0
	cthis isin
	jmp l5521
l5519:
	push 0
	jmp l5521
l5520:
	push 1
l5521:
	end method
	method mlewmech
	call anbox,show
	call grels,show
	call anforklucz,show
	end method
	method mcheckels
	localint $1
	push 0
	pop $1
l5526:
	push $1
	call grels,size
	cmpjl
	cmp0
	je l5527
	jmp l5529
l5528:
	add $1,1
	pop $1
	jmp l5526
l5529:
	push $1
	call grels,get
	spushs
	spop $a
	call [$a],framename
	spushs
	push "ok"
	spop $h
	call $h,contains
	neg
	cmp0
	je l5531
	push 0
	pop bkoniecmech
	ret
l5531:
	jmp l5528
l5527:
	push 1
	pop bkoniecmech
	end method
	method USE_kolatka
	call mouse,getpos
	push 1
	push 1
	call anlew,isin
	cmp0
	je l5533
	push "kolatka"
	cthis removefrompck
	push "sleep"
	call anlew,play
	call anoczy,anhide
	call ankolatka,show
	push "e1_lew_kolatka"
	call clsave,bset
	jmp l5532
l5533:
	cthis advsetstdstate
	cthis item_gotopck
l5532:
	end method
	method USE_kluczschodek
	push bkoniecmech
	cmp0
	je l5535
	call mouse,getpos
	push 1
	push 0
	call anforklucz,isin
	jmp l5537
l5535:
	push 0
	jmp l5537
l5536:
	push 1
l5537:
	cmp0
	je l5538
	push "kluczschodek"
	cthis removefrompck
	push "kluczotwiera"
	pop sgmstate
	push 0
	call anklucz,play
	jmp l5534
l5538:
	cthis advsetstdstate
	cthis item_gotopck
l5534:
	end method
	method mend
	push "ad02_brama"
	push "gamead02_brama0"
	cthis stdexitdefadv
	end method
	end game

	game mg01_barghest
	parent Banshee
	method init
	push "mg01_barghest"
	clparent Banshee,init
	push A
	push "bkg.jpg"
	push "anim_pos.pyz H"
	push "ramka.pyz 20"
	cthis imgs=
	new Film,filmb
	push "mus"
	call filmb,musicclass=
	push "onfinish"
	push "mend"
	call filmb,addmethod
	push "scripts/cs01_barghest/"
	push "film"
	call filmb,load
	call filmb,showfirstframe
	call ananim_pos,getpx
	call ananim_pos,getpy
	call filmb,setpos
	push "mg01_barghest0"
	call ccs,enter
	end method
	method mg01_barghest0
	call filmb,play
	end method
	method mend
	push "ad01_widokogolny"
	push "gamead01_widokogolny0"
	cthis stdexitdefadv
	end method
	end game

	game mg02Gniazdo
	parent Banshee
	method init
	push "mg02_gniazdo"
	clparent Banshee,init
	push A
	push "bkg.jpg"
	push "ptak.pyzH 20"
	push "ptak2.pyzH 10"
	push "tlo.pyz 5"
	push "jajko.pyzH 15"
	push "ziarno.pyzH 15"
	push "popexit.pyz 50"
	cthis imgs=
	call antlo,mg02Gniazdo0
	cthis loadimgexitbut
	push "e1_jajko_taken"
	call clsave,bis
	neg
	cmp0
	je l5540
	call anjajko,show
l5540:
	push "taken_ziarno"
	call clsave,bis
	neg
	cmp0
	je l5542
	call anziarno,show
	push "anziarno"
	cthis setasitemtopck
l5542:
	push "e1_ptok_odslonil_jajco"
	call clsave,bis
	cmp0
	je l5544
	push "anptak2"
	push "anptakcorp"
	cthis copyanima
	push 1
	call anptak2,play
	call anptakcorp,show
	jmp l5543
l5544:
	push 0
	call anptak,play
	push "onfinish"
	push "mg02Gniazdo1"
	call anptak,addmethod
l5543:
	cthis butpopexit
	call anptak,mg02Gniazdo2
	cthis stdstart
	end method
	method mg02Gniazdo0
	cthis Button_isinalpha
	cthis getname
	call butgame,add
	end method
	method mg02Gniazdo1
	push 0
	cthis play
	end method
	method mg02Gniazdo2
	cthis Button_isin
	push "butmoveon"
	push "mg02Gniazdo3"
	cthis addmethod
	push "butmoveoff"
	push "mg02Gniazdo4"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg02Gniazdo3
	cthis advstdstate
	neg
	cmp0
	je l5546
	ret
l5546:
	push "e1_ptok_odslonil_jajco"
	call clsave,bis
	neg
	cmp0
	je l5548
	push "use"
	call advmouse,set
	jmp l5547
l5548:
	call advmouse,setstd
l5547:
	end method
	method mg02Gniazdo4
	cthis advstdstate
	neg
	cmp0
	je l5550
	ret
l5550:
	call advmouse,setstd
	end method
	method anziarno_TAKE
	push "e1_ptok_odslonil_jajco"
	call clsave,bis
	cmp0
	je l5552
	push "ziarno"
	cthis popitem_gotocenter
	jmp l5551
l5552:
	push 1
	call anptak,isplaying
	neg
	cmp0
	je l5554
	push 1
	call anptak,play
l5554:
l5551:
	end method
	method anziarno_INPCK
	push "ziarno"
	cthis addtopck
	cthis mend
	end method
	method USE_jajo
	cthis advsetstdstate
	call advmouse,setstd
	call mouse,getpos
	push 1
	push 1
	call anptak,isin
	cmp0
	jne l5557
	call mouse,getpos
	push 1
	push 1
	call anjajko,isin
	cmp0
	jne l5557
	call mouse,getpos
	push 1
	push 1
	call anziarno,isin
	jmp l5558
l5556:
	push 0
	jmp l5558
l5557:
	push 1
l5558:
	cmp0
	je l5559
	push "jajo"
	cthis removefrompck
	push "anptak2"
	push "anptakcorp"
	cthis copyanima
	call anptak,anhide
	push 1
	call anptak2,play
	push 300
	push "null"
	call anptak2,anfadein
	call anptakcorp,show
	push "e1_ptok_odslonil_jajco"
	call clsave,bset
	call advmouse,setstd
	jmp l5555
l5559:
	cthis item_gotopck
l5555:
	end method
	method mend
	push "ad02_brama"
	push "gamead02_brama0"
	cthis stdexitdefadv
	end method
	end game

	method e1_check_mlotek_dluto
	push "ma_mlotek"
	call clsave,bis
	cmp0
	je l5561
	push "ma_dluto"
	call clsave,bis
	jmp l5563
l5561:
	push 0
	jmp l5563
l5562:
	push 1
l5563:
	cmp0
	je l5564
	push "mlotek"
	cthis removefrompck
	push "dluto"
	cthis removefrompck
	push "mlotek_dluto"
	cthis addtopck
l5564:
	end method
	game mg02SkrytkaL
	parent Banshee
	method init
	push "mg02_skrytkal"
	clparent Banshee,init
	push A
	push "$scripts/mg02_gniazdo/bkg.jpg"
	push "bgpop.pyz 5"
	push "sciana.pyz 15"
	push "mlotek.pyz 10"
	push "podgzyms1.pyz 20"
	push "podgzyms2.pyz 20"
	push "maskabg.pyz 30"
	push "popexit.pyz 40"
	cthis imgs=
	cthis butpopexit
	push "anramka"
	call anmaskabg,addtogamevars
	cthis butpopexitisinramka
	push "taken_mlotek"
	call clsave,bis
	cmp0
	je l5566
	call anmlotek,hide
	jmp l5565
l5566:
	push "anmlotek"
	cthis setasitemtopck
l5565:
	push "e1_ad02_gzyms1put"
	call clsave,bis
	cmp0
	je l5568
	call anpodgzyms1,hide
	jmp l5567
l5568:
	call anpodgzyms1,Button_stdms
	push "butmoveon"
	push "mg02SkrytkaL0"
	call anpodgzyms1,addmethod
	push "butmoveoff"
	push "mg02SkrytkaL1"
	call anpodgzyms1,addmethod
	push "anpodgzyms1"
	call butgame,add
l5567:
	push "e1_ad02_gzyms2put"
	call clsave,bis
	cmp0
	je l5576
	call anpodgzyms2,hide
	jmp l5575
l5576:
	call anpodgzyms2,Button_stdms
	push "butmoveon"
	push "mg02SkrytkaL2"
	call anpodgzyms2,addmethod
	push "butmoveoff"
	push "mg02SkrytkaL3"
	call anpodgzyms2,addmethod
	push "anpodgzyms2"
	call butgame,add
l5575:
	push "e1_ad02_skrytka_otwarta"
	call clsave,bis
	cmp0
	je l5584
	push "opened"
	push 0
	call ansciana,setframe
	jmp l5583
l5584:
	call anmlotek,hide
	push "isbutin"
	push "mg02SkrytkaL4"
	call ansciana,addmethod
	call ansciana,Button_moveonms
	call ansciana,Button_moveoffms
	push "butclick"
	push "mg02SkrytkaL5"
	call ansciana,addmethod
	push "ansciana"
	call butgame,add
l5583:
	cthis stdstart
	end method
	method mg02SkrytkaL0
	cthis advstdstate
	neg
	cmp0
	je l5570
	ret
l5570:
	push "e1_ad02_gzyms1put"
	call clsave,bis
	neg
	cmp0
	je l5572
	push "use"
	call advmouse,set
l5572:
	end method
	method mg02SkrytkaL1
	cthis advstdstate
	neg
	cmp0
	je l5574
	ret
l5574:
	call advmouse,setstd
	end method
	method mg02SkrytkaL2
	cthis advstdstate
	neg
	cmp0
	je l5578
	ret
l5578:
	push "e1_ad02_gzyms2put"
	call clsave,bis
	neg
	cmp0
	je l5580
	push "use"
	call advmouse,set
l5580:
	end method
	method mg02SkrytkaL3
	cthis advstdstate
	neg
	cmp0
	je l5582
	ret
l5582:
	call advmouse,setstd
	end method
	method mg02SkrytkaL4
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 1
	cthis isin
	cmp0
	je l5585
	call anpodgzyms1,isvisible
	neg
	cmp0
	je l5585
	call anpodgzyms2,isvisible
	neg
	jmp l5587
l5585:
	push 0
	jmp l5587
l5586:
	push 1
l5587:
	end method
	method mg02SkrytkaL5
	cthis advstdstate
	neg
	cmp0
	je l5589
	ret
l5589:
	cthis getname
	call butgame,removebut
	call butgame,onmousemove
	push "e1_ad02_skrytka_otwarta"
	call clsave,bset
	push "state_opensciana"
	pop sgmstate
	call anmlotek,show
	push "open"
	push "mg02SkrytkaL6"
	cthis anplaysmoothfin
	end method
	method mg02SkrytkaL6
	cthis advsetstdstate
	end method
	method anmlotek_TAKE
	push "mlotek"
	cthis popitem_gotocenter
	end method
	method anmlotek_INPCK
	push "mlotek"
	cthis addtopck
	end method
	method USE_gzyms1
	cthis advsetstdstate
	call mouse,getpos
	push 1
	push 0
	call anpodgzyms1,isin
	cmp0
	je l5591
	push "e1_ad02_gzyms1put"
	call clsave,bset
	call anpodgzyms1,hide
	push "gzyms1"
	cthis removefrompck
	call advmouse,setstd
	jmp l5590
l5591:
	cthis item_gotopck
l5590:
	end method
	method USE_gzyms2
	cthis advsetstdstate
	call mouse,getpos
	push 1
	push 0
	call anpodgzyms2,isin
	cmp0
	je l5593
	push "e1_ad02_gzyms2put"
	call clsave,bset
	call anpodgzyms2,hide
	push "gzyms2"
	cthis removefrompck
	call advmouse,setstd
	jmp l5592
l5593:
	cthis item_gotopck
l5592:
	end method
	method mend
	push "ad02_brama"
	push "gamead02_brama0"
	cthis stdexitdefadv
	end method
	end game

	game mg03_pnacza
	parent Banshee
	method init
	push "mg03_pnacza"
	clparent Banshee,init
	push A
	push "bkg.jpg 0"
	push "base.pyz 1"
	push "rama_win.pyzH 2"
	push "cegla_1.pyzH 3"
	push "cegla_2.pyzH 3"
	push "cegla_3.pyzH 3"
	push "cegla_1_fall.pyzH 3"
	push "cegla_2_fall.pyzH 3"
	push "cegla_3_fall.pyzH 3"
	push "diamond_1.pyzH 4"
	push "diamond_2.pyzH 5"
	push "diamond_3.pyzH 5"
	push "1.pyzH 6"
	push "2.pyzH 6"
	push "3.pyzH 6"
	push "4.pyzH 6"
	push "5.pyzH 6"
	push "6.pyzH 6"
	push "7.pyzH 6"
	push "8.pyzH 6"
	push "9.pyzH 6"
	push "rama.pyz 7"
	push "cut_1.pyz 8"
	push "cut_2.pyz 9"
	push "cut_3.pyz 10"
	push "cut_4.pyz 11"
	push "cut_5.pyz 12"
	push "cut_6.pyz 13"
	push "frame.pyz 14"
	push "popexit.pyz 15"
	cthis imgs=
	cthis butpopexit
	call imgbkg,mg03_pnacza0
	new int,computer_turn
	push 1
	pop computer_turn
	new int,shake1
	push 0
	pop shake1
	new int,shake2
	push 0
	pop shake2
	new int,shake3
	push 0
	pop shake3
	localint $1
	push 1
	pop $1
l5596:
	push $1
	push 6
	cmpjle
	cmp0
	je l5597
	jmp l5599
l5598:
	add $1,1
	pop $1
	jmp l5596
l5599:
	push "ancut_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],mg03_pnacza3
	jmp l5598
l5597:
	localint $1
	push 1
	pop $1
l5604:
	push $1
	push 9
	cmpjle
	cmp0
	je l5605
	jmp l5607
l5606:
	add $1,1
	pop $1
	jmp l5604
l5607:
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],mg03_pnacza6
	jmp l5606
l5605:
	localint $1
	push 1
	pop $1
l5626:
	push $1
	push 6
	cmpjle
	cmp0
	je l5627
	jmp l5629
l5628:
	add $1,1
	pop $1
	jmp l5626
l5629:
	push "ancut_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],mg03_pnacza8
	jmp l5628
l5627:
	call ancegla_1,mg03_pnacza9
	call ancegla_2,mg03_pnacza11
	call ancegla_3,mg03_pnacza13
	push "andiamond_1"
	cthis setasitemtopck
	push "andiamond_2"
	cthis setasitemtopck
	push "andiamond_3"
	cthis setasitemtopck
	localint $1
	push 1
	pop $1
l5642:
	push $1
	push 6
	cmpjle
	cmp0
	je l5643
	jmp l5645
l5644:
	add $1,1
	pop $1
	jmp l5642
l5645:
	push "e1_bn03pnacza_cuted_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l5647
	push "ancut_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],hide
l5647:
	jmp l5644
l5643:
	push "bn03pnacza_player_won"
	call clsave,bis
	cmp0
	je l5649
	call anrama,hide
	call anrama_win,show
	push "burned"
	call anrama_win,play
	push "bn03pnacza_cegla_1_pushed"
	call clsave,bis
	cmp0
	je l5651
	call ancegla_1,show
	push "pushed"
	call ancegla_1,play
	push "taken_krysztal_red_1"
	call clsave,bis
	neg
	cmp0
	je l5653
	call andiamond_1,show
l5653:
	jmp l5650
l5651:
	call ancegla_1,show
	push "ancegla_1"
	call butgame,add
l5650:
	push "bn03pnacza_cegla_2_pushed"
	call clsave,bis
	cmp0
	je l5655
	call ancegla_2,show
	push "pushed"
	call ancegla_2,play
	push "taken_krysztal_red_2"
	call clsave,bis
	neg
	cmp0
	je l5657
	call andiamond_2,show
l5657:
	jmp l5654
l5655:
	call ancegla_2,show
	push "ancegla_2"
	call butgame,add
l5654:
	push "bn03pnacza_cegla_3_pushed"
	call clsave,bis
	cmp0
	je l5659
	call ancegla_3,show
	push "pushed"
	call ancegla_3,play
	push "taken_krysztal_blue_1"
	call clsave,bis
	neg
	cmp0
	je l5661
	call andiamond_3,show
l5661:
	jmp l5658
l5659:
	call ancegla_3,show
	push "ancegla_3"
	call butgame,add
l5658:
	jmp l5648
l5649:
	cthis check_game_can_start
	cmp0
	je l5663
	cthis start_game
l5663:
l5648:
	cthis stdstart
	end method
	method mg03_pnacza0
	push "isbutin"
	push "mg03_pnacza1"
	cthis addmethod
	push "butclick"
	push "mg03_pnacza2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg03_pnacza1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anbase,isin
	neg
	end method
	method mg03_pnacza2
	cthis advstdstate
	neg
	cmp0
	je l5595
	ret
l5595:
	cthis mend
	end method
	method mg03_pnacza3
	cthis Button_isin
	push "butmoveon"
	push "mg03_pnacza4"
	cthis addmethod
	push "butmoveoff"
	push "mg03_pnacza5"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg03_pnacza4
	cthis advstdstate
	neg
	cmp0
	je l5601
	ret
l5601:
	push "use"
	call advmouse,set
	end method
	method mg03_pnacza5
	cthis advstdstate
	neg
	cmp0
	je l5603
	ret
l5603:
	call advmouse,setstd
	end method
	method mg03_pnacza6
	cthis Button_isin
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg03_pnacza7"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg03_pnacza7
	cthis advstdstate
	neg
	cmp0
	je l5609
	ret
l5609:
	push 1
	popax
	sub 0,$a
	cthis actionnr
	push 0
	cmpje
	cmp0
	je l5611
	push 1
	cthis play
	cthis check_won
	push 0
	cmpje
	cmp0
	je l5613
	cthis table_full
	neg
	cmp0
	je l5615
	cthis computer_move
l5615:
	cthis check_won
	push 0
	cmpja
	cmp0
	je l5617
	cthis check_won
	push 1
	cmpje
	cmp0
	je l5619
	cthis player_won
	jmp l5618
l5619:
	cthis start_game
l5618:
	jmp l5616
l5617:
	cthis table_full
	cmp0
	je l5621
	cthis start_game
l5621:
l5616:
	jmp l5612
l5613:
	cthis check_won
	push 1
	cmpje
	cmp0
	je l5623
	cthis player_won
	ret
	jmp l5622
l5623:
	cthis start_game
	ret
l5622:
	cthis table_full
	cmp0
	je l5625
	cthis start_game
l5625:
l5612:
l5611:
	end method
	method mg03_pnacza8
	call anrama_win,getpx
	call anrama_win,getpy
	call anrama_win,getex
	call anrama_win,getey
	cthis clip
	end method
	method mg03_pnacza9
	cthis Button_isin
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg03_pnacza10"
	cthis addmethod
	end method
	method mg03_pnacza10
	cthis advstdstate
	neg
	cmp0
	je l5631
	ret
l5631:
	push shake1
	push 2
	cmpjl
	cmp0
	je l5633
	push shake1
	push 1
	pop $b
	popax
	add $a,$b
	pop shake1
	push "shake"
	cthis play
	jmp l5632
l5633:
	push "push"
	cthis play
	call ancegla_1_fall,show
	push "fall"
	call ancegla_1_fall,play
	push 300
	push "null"
	call andiamond_1,anfadein
	push "bn03pnacza_cegla_1_pushed"
	call clsave,bset
	call advmouse,setstd
	cthis getname
	call butgame,removebut
	call butgame,onmousemove
l5632:
	end method
	method mg03_pnacza11
	cthis Button_isin
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg03_pnacza12"
	cthis addmethod
	end method
	method mg03_pnacza12
	cthis advstdstate
	neg
	cmp0
	je l5635
	ret
l5635:
	push shake2
	push 2
	cmpjl
	cmp0
	je l5637
	push shake2
	push 1
	pop $b
	popax
	add $a,$b
	pop shake2
	push "shake"
	cthis play
	jmp l5636
l5637:
	call ancegla_2_fall,show
	push "fall"
	call ancegla_2_fall,play
	push "push"
	cthis play
	push 300
	push "null"
	call andiamond_2,anfadein
	push "bn03pnacza_cegla_2_pushed"
	call clsave,bset
	call advmouse,setstd
	cthis getname
	call butgame,removebut
	call butgame,onmousemove
l5636:
	end method
	method mg03_pnacza13
	cthis Button_isin
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg03_pnacza14"
	cthis addmethod
	end method
	method mg03_pnacza14
	cthis advstdstate
	neg
	cmp0
	je l5639
	ret
l5639:
	push shake3
	push 2
	cmpjl
	cmp0
	je l5641
	push shake3
	push 1
	pop $b
	popax
	add $a,$b
	pop shake3
	push "shake"
	cthis play
	jmp l5640
l5641:
	push "push"
	cthis play
	call ancegla_3_fall,show
	push "fall"
	call ancegla_3_fall,play
	push 300
	push "null"
	call andiamond_3,anfadein
	push "bn03pnacza_cegla_3_pushed"
	call clsave,bset
	call advmouse,setstd
	cthis getname
	call butgame,removebut
	call butgame,onmousemove
l5640:
	end method
	method mend
	push "mend"
	cthis dprint
	push "ad03_placglowny"
	push "gamead03_placglowny0"
	cthis stdexitdefadv
	end method
	method check_game_can_start
	localint $1
	push 1
	pop $1
l5664:
	push $1
	push 6
	cmpjle
	cmp0
	je l5665
	jmp l5667
l5666:
	add $1,1
	pop $1
	jmp l5664
l5667:
	push "e1_bn03pnacza_cuted_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l5669
	push 0
	ret
l5669:
	jmp l5666
l5665:
	push 1
	ret
	end method
	method start_game
	localint $1
	push 1
	pop $1
l5670:
	push $1
	push 9
	cmpjle
	cmp0
	je l5671
	jmp l5673
l5672:
	add $1,1
	pop $1
	jmp l5670
l5673:
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],show
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push "empty"
	spop $a
	call [$a],play
	jmp l5672
l5671:
	localint $2
	push 7
	pop $2
	push computer_turn
	cmp0
	je l5675
	push "an"
	push $2
	spushs
	spop $a
	call $a,rand
	push 1
	pop $b
	popax
	add $a,$b
	pop $b
	popax
	add $a,$b
	spushs
	push "x"
	spop $a
	call [$a],play
	push 0
	pop computer_turn
	jmp l5674
l5675:
	push 1
	pop computer_turn
l5674:
	end method
	method act_anim
	localint $1
	pop $1
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	ret
	end method
	method check_won
	push 1
	cthis act_anim
	push 2
	cthis act_anim
	cmpje
	cmp0
	je l5677
	push 2
	cthis act_anim
	push 3
	cthis act_anim
	cmpje
	cmp0
	je l5677
	push 1
	cthis act_anim
	push 0
	cmpja
	jmp l5679
l5677:
	push 0
	jmp l5679
l5678:
	push 1
l5679:
	cmp0
	je l5680
	push 1
	cthis act_anim
	ret
l5680:
	push 4
	cthis act_anim
	push 5
	cthis act_anim
	cmpje
	cmp0
	je l5682
	push 5
	cthis act_anim
	push 6
	cthis act_anim
	cmpje
	cmp0
	je l5682
	push 4
	cthis act_anim
	push 0
	cmpja
	jmp l5684
l5682:
	push 0
	jmp l5684
l5683:
	push 1
l5684:
	cmp0
	je l5685
	push 4
	cthis act_anim
	ret
l5685:
	push 7
	cthis act_anim
	push 8
	cthis act_anim
	cmpje
	cmp0
	je l5687
	push 8
	cthis act_anim
	push 9
	cthis act_anim
	cmpje
	cmp0
	je l5687
	push 7
	cthis act_anim
	push 0
	cmpja
	jmp l5689
l5687:
	push 0
	jmp l5689
l5688:
	push 1
l5689:
	cmp0
	je l5690
	push 7
	cthis act_anim
	ret
l5690:
	push 1
	cthis act_anim
	push 4
	cthis act_anim
	cmpje
	cmp0
	je l5692
	push 4
	cthis act_anim
	push 7
	cthis act_anim
	cmpje
	cmp0
	je l5692
	push 1
	cthis act_anim
	push 0
	cmpja
	jmp l5694
l5692:
	push 0
	jmp l5694
l5693:
	push 1
l5694:
	cmp0
	je l5695
	push 1
	cthis act_anim
	ret
l5695:
	push 2
	cthis act_anim
	push 5
	cthis act_anim
	cmpje
	cmp0
	je l5697
	push 5
	cthis act_anim
	push 8
	cthis act_anim
	cmpje
	cmp0
	je l5697
	push 2
	cthis act_anim
	push 0
	cmpja
	jmp l5699
l5697:
	push 0
	jmp l5699
l5698:
	push 1
l5699:
	cmp0
	je l5700
	push 2
	cthis act_anim
	ret
l5700:
	push 3
	cthis act_anim
	push 6
	cthis act_anim
	cmpje
	cmp0
	je l5702
	push 6
	cthis act_anim
	push 9
	cthis act_anim
	cmpje
	cmp0
	je l5702
	push 3
	cthis act_anim
	push 0
	cmpja
	jmp l5704
l5702:
	push 0
	jmp l5704
l5703:
	push 1
l5704:
	cmp0
	je l5705
	push 3
	cthis act_anim
	ret
l5705:
	push 1
	cthis act_anim
	push 5
	cthis act_anim
	cmpje
	cmp0
	je l5707
	push 5
	cthis act_anim
	push 9
	cthis act_anim
	cmpje
	cmp0
	je l5707
	push 1
	cthis act_anim
	push 0
	cmpja
	jmp l5709
l5707:
	push 0
	jmp l5709
l5708:
	push 1
l5709:
	cmp0
	je l5710
	push 1
	cthis act_anim
	ret
l5710:
	push 3
	cthis act_anim
	push 5
	cthis act_anim
	cmpje
	cmp0
	je l5712
	push 5
	cthis act_anim
	push 7
	cthis act_anim
	cmpje
	cmp0
	je l5712
	push 3
	cthis act_anim
	push 0
	cmpja
	jmp l5714
l5712:
	push 0
	jmp l5714
l5713:
	push 1
l5714:
	cmp0
	je l5715
	push 3
	cthis act_anim
	ret
l5715:
	push 0
	ret
	end method
	method computer_move
	push 9
	spushs
	spop $h
	call $h,rand
	push 4
	cmpja
	cmp0
	je l5717
	push 1
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l5719
	push 2
	cthis act_anim
	push 0
	cmpje
	cmp0
	je l5719
	push 3
	cthis act_anim
	push 1
	cmpje
	jmp l5721
l5719:
	push 0
	jmp l5721
l5720:
	push 1
l5721:
	cmp0
	je l5722
	push "an2"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l5722:
	push 4
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l5724
	push 5
	cthis act_anim
	push 0
	cmpje
	cmp0
	je l5724
	push 6
	cthis act_anim
	push 1
	cmpje
	jmp l5726
l5724:
	push 0
	jmp l5726
l5725:
	push 1
l5726:
	cmp0
	je l5727
	push "an5"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l5727:
	push 7
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l5729
	push 8
	cthis act_anim
	push 0
	cmpje
	cmp0
	je l5729
	push 9
	cthis act_anim
	push 1
	cmpje
	jmp l5731
l5729:
	push 0
	jmp l5731
l5730:
	push 1
l5731:
	cmp0
	je l5732
	push "an8"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l5732:
	push 1
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l5734
	push 4
	cthis act_anim
	push 0
	cmpje
	cmp0
	je l5734
	push 7
	cthis act_anim
	push 1
	cmpje
	jmp l5736
l5734:
	push 0
	jmp l5736
l5735:
	push 1
l5736:
	cmp0
	je l5737
	push "an4"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l5737:
	push 2
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l5739
	push 5
	cthis act_anim
	push 0
	cmpje
	cmp0
	je l5739
	push 8
	cthis act_anim
	push 1
	cmpje
	jmp l5741
l5739:
	push 0
	jmp l5741
l5740:
	push 1
l5741:
	cmp0
	je l5742
	push "an5"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l5742:
	push 3
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l5744
	push 6
	cthis act_anim
	push 0
	cmpje
	cmp0
	je l5744
	push 9
	cthis act_anim
	push 1
	cmpje
	jmp l5746
l5744:
	push 0
	jmp l5746
l5745:
	push 1
l5746:
	cmp0
	je l5747
	push "an6"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l5747:
	push 1
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l5749
	push 5
	cthis act_anim
	push 0
	cmpje
	cmp0
	je l5749
	push 9
	cthis act_anim
	push 1
	cmpje
	jmp l5751
l5749:
	push 0
	jmp l5751
l5750:
	push 1
l5751:
	cmp0
	je l5752
	push "an5"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l5752:
	push 1
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l5754
	push 5
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l5754
	push 9
	cthis act_anim
	push 0
	cmpje
	jmp l5756
l5754:
	push 0
	jmp l5756
l5755:
	push 1
l5756:
	cmp0
	je l5757
	push "an9"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l5757:
	push 1
	cthis act_anim
	push 0
	cmpje
	cmp0
	je l5759
	push 5
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l5759
	push 9
	cthis act_anim
	push 1
	cmpje
	jmp l5761
l5759:
	push 0
	jmp l5761
l5760:
	push 1
l5761:
	cmp0
	je l5762
	push "an1"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l5762:
	push 3
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l5764
	push 5
	cthis act_anim
	push 0
	cmpje
	cmp0
	je l5764
	push 7
	cthis act_anim
	push 1
	cmpje
	jmp l5766
l5764:
	push 0
	jmp l5766
l5765:
	push 1
l5766:
	cmp0
	je l5767
	push "an5"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l5767:
	push 3
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l5769
	push 5
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l5769
	push 7
	cthis act_anim
	push 0
	cmpje
	jmp l5771
l5769:
	push 0
	jmp l5771
l5770:
	push 1
l5771:
	cmp0
	je l5772
	push "an7"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l5772:
	push 3
	cthis act_anim
	push 0
	cmpje
	cmp0
	je l5774
	push 5
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l5774
	push 7
	cthis act_anim
	push 1
	cmpje
	jmp l5776
l5774:
	push 0
	jmp l5776
l5775:
	push 1
l5776:
	cmp0
	je l5777
	push "an3"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l5777:
	push 1
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l5779
	push 2
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l5779
	push 3
	cthis act_anim
	push 0
	cmpje
	jmp l5781
l5779:
	push 0
	jmp l5781
l5780:
	push 1
l5781:
	cmp0
	je l5782
	push "an3"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l5782:
	push 1
	cthis act_anim
	push 0
	cmpje
	cmp0
	je l5784
	push 2
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l5784
	push 3
	cthis act_anim
	push 1
	cmpje
	jmp l5786
l5784:
	push 0
	jmp l5786
l5785:
	push 1
l5786:
	cmp0
	je l5787
	push "an1"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l5787:
	push 4
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l5789
	push 5
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l5789
	push 6
	cthis act_anim
	push 0
	cmpje
	jmp l5791
l5789:
	push 0
	jmp l5791
l5790:
	push 1
l5791:
	cmp0
	je l5792
	push "an6"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l5792:
	push 4
	cthis act_anim
	push 0
	cmpje
	cmp0
	je l5794
	push 5
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l5794
	push 6
	cthis act_anim
	push 1
	cmpje
	jmp l5796
l5794:
	push 0
	jmp l5796
l5795:
	push 1
l5796:
	cmp0
	je l5797
	push "an4"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l5797:
	push 7
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l5799
	push 8
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l5799
	push 9
	cthis act_anim
	push 0
	cmpje
	jmp l5801
l5799:
	push 0
	jmp l5801
l5800:
	push 1
l5801:
	cmp0
	je l5802
	push "an9"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l5802:
	push 7
	cthis act_anim
	push 0
	cmpje
	cmp0
	je l5804
	push 8
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l5804
	push 9
	cthis act_anim
	push 1
	cmpje
	jmp l5806
l5804:
	push 0
	jmp l5806
l5805:
	push 1
l5806:
	cmp0
	je l5807
	push "an7"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l5807:
	push 1
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l5809
	push 4
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l5809
	push 7
	cthis act_anim
	push 0
	cmpje
	jmp l5811
l5809:
	push 0
	jmp l5811
l5810:
	push 1
l5811:
	cmp0
	je l5812
	push "an7"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l5812:
	push 1
	cthis act_anim
	push 0
	cmpje
	cmp0
	je l5814
	push 4
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l5814
	push 7
	cthis act_anim
	push 1
	cmpje
	jmp l5816
l5814:
	push 0
	jmp l5816
l5815:
	push 1
l5816:
	cmp0
	je l5817
	push "an1"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l5817:
	push 2
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l5819
	push 5
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l5819
	push 8
	cthis act_anim
	push 0
	cmpje
	jmp l5821
l5819:
	push 0
	jmp l5821
l5820:
	push 1
l5821:
	cmp0
	je l5822
	push "an8"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l5822:
	push 2
	cthis act_anim
	push 0
	cmpje
	cmp0
	je l5824
	push 5
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l5824
	push 8
	cthis act_anim
	push 1
	cmpje
	jmp l5826
l5824:
	push 0
	jmp l5826
l5825:
	push 1
l5826:
	cmp0
	je l5827
	push "an2"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l5827:
	push 3
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l5829
	push 6
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l5829
	push 9
	cthis act_anim
	push 0
	cmpje
	jmp l5831
l5829:
	push 0
	jmp l5831
l5830:
	push 1
l5831:
	cmp0
	je l5832
	push "an9"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l5832:
	push 3
	cthis act_anim
	push 0
	cmpje
	cmp0
	je l5834
	push 6
	cthis act_anim
	push 1
	cmpje
	cmp0
	je l5834
	push 9
	cthis act_anim
	push 1
	cmpje
	jmp l5836
l5834:
	push 0
	jmp l5836
l5835:
	push 1
l5836:
	cmp0
	je l5837
	push "an3"
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l5837:
	localint $1
	push 1
	pop $1
l5838:
	push $1
	push 9
	cmpjle
	cmp0
	je l5839
	jmp l5841
l5840:
	add $1,1
	pop $1
	jmp l5838
l5841:
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	push 0
	cmpje
	cmp0
	je l5843
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push "x"
	spop $a
	call [$a],play
	ret
l5843:
	jmp l5840
l5839:
	jmp l5716
l5717:
	localint $2
	push 0
	pop $2
l5844:
	push $2
	neg
	cmp0
	je l5845
	localint $3
	push 9
	spushs
	spop $h
	call $h,rand
	push 1
	pop $b
	popax
	add $a,$b
	pop $3
	push "an"
	push $3
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	push 0
	cmpje
	cmp0
	je l5847
	push "an"
	push $3
	pop $b
	popax
	add $a,$b
	spushs
	push "x"
	spop $a
	call [$a],play
	push 1
	pop $2
l5847:
	jmp l5844
l5845:
l5716:
	end method
	method table_full
	localint $1
	push 1
	pop $1
l5848:
	push $1
	push 9
	cmpjle
	cmp0
	je l5849
	jmp l5851
l5850:
	add $1,1
	pop $1
	jmp l5848
l5851:
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	push 0
	cmpje
	cmp0
	je l5853
	push 0
	ret
l5853:
	jmp l5850
l5849:
	push 1
	ret
	end method
	method player_won
	cthis clear_table
	call anrama,hide
	call anrama_win,show
	push 0
	call anrama_win,play
	cthis show_bricks
	push "bn03pnacza_player_won"
	call clsave,bset
	end method
	method clear_table
	call advmouse,setstd
	localint $1
	push 1
	pop $1
l5854:
	push $1
	push 9
	cmpjle
	cmp0
	je l5855
	jmp l5857
l5856:
	add $1,1
	pop $1
	jmp l5854
l5857:
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],hide
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	call butgame,removebut
	jmp l5856
l5855:
	call butgame,onmousemove
	end method
	method show_bricks
	call advmouse,setstd
	call ancegla_1,show
	push "start"
	call ancegla_1,play
	call ancegla_2,show
	push "start"
	call ancegla_2,play
	call ancegla_3,show
	push "start"
	call ancegla_3,play
	push "ancegla_1"
	call butgame,add
	push "ancegla_2"
	call butgame,add
	push "ancegla_3"
	call butgame,add
	call butgame,onmousemove
	end method
	method andiamond_1_TAKE
	cthis check_finished
	push "krysztal_red_1"
	cthis item_gotocenter
	end method
	method andiamond_1_INPCK
	push "krysztal_red_1"
	cthis addtopck
	end method
	method andiamond_2_TAKE
	cthis check_finished
	push "krysztal_red_2"
	cthis item_gotocenter
	end method
	method andiamond_2_INPCK
	push "krysztal_red_2"
	cthis addtopck
	end method
	method andiamond_3_TAKE
	cthis check_finished
	push "krysztal_blue_1"
	cthis item_gotocenter
	end method
	method andiamond_3_INPCK
	push "krysztal_blue_1"
	cthis addtopck
	end method
	method check_finished
	push "taken_krysztal_blue_1"
	call clsave,bis
	cmp0
	je l5859
	push "taken_krysztal_red_1"
	call clsave,bis
	cmp0
	je l5859
	push "taken_krysztal_red_2"
	call clsave,bis
	jmp l5861
l5859:
	push 0
	jmp l5861
l5860:
	push 1
l5861:
	cmp0
	je l5862
	cthis set_mg_finished
l5862:
	end method
	method get_ancut
	localint $1
	push 1
	pop $1
l5863:
	push $1
	push 6
	cmpjle
	cmp0
	je l5864
	jmp l5866
l5865:
	add $1,1
	pop $1
	jmp l5863
l5866:
	push "ancut_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	call mouse,getpos
	push 1
	push 1
	spop $a
	call [$a],isin
	cmp0
	je l5868
	push "ancut_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],isvisible
	jmp l5870
l5868:
	push 0
	jmp l5870
l5869:
	push 1
l5870:
	cmp0
	je l5871
	push $1
	ret
l5871:
	jmp l5865
l5864:
	push 1
	popax
	sub 0,$a
	ret
	end method
	method USE_sekator
	cthis advsetstdstate
	call mouse,getpos
	push 1
	push 0
	call anbase,isin
	cmp0
	je l5873
	localint $1
	cthis get_ancut
	pop $1
	push $1
	push 1
	popax
	sub 0,$a
	cmpja
	cmp0
	je l5875
	push "ancut_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],hide
	push "e1_bn03pnacza_cuted_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,bset
	cthis check_game_can_start
	cmp0
	je l5877
	push "anitem_sekator"
	push "fake_anitem_sekator"
	cthis copyanima
	push "cut"
	call fake_anitem_sekator,play
	push 300
	push "null"
	call fake_anitem_sekator,anfadeout
	push "sekator"
	cthis removefrompck
	cthis start_game
	jmp l5876
l5877:
	push "cut"
	call anitem_sekator,play
	push "getitem"
	cthis advsetstate
	push "anitem_sekator"
	call guimov,setmoved
l5876:
	jmp l5874
l5875:
	cthis item_gotopck
l5874:
	jmp l5872
l5873:
	cthis item_gotopck
l5872:
	end method
	method HINT_CLICK
	localint $1
	push 1
	pop $1
l5878:
	push $1
	push 6
	cmpjle
	cmp0
	je l5879
	jmp l5881
l5880:
	add $1,1
	pop $1
	jmp l5878
l5881:
	push "e1_bn03pnacza_cuted_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l5883
	push "ancut_"
	push $1
	pop $b
	popax
	add $a,$b
	cthis showhint
	ret
l5883:
	jmp l5880
l5879:
	push "bn03pnacza_player_won"
	call clsave,bis
	neg
	cmp0
	je l5885
	push "anbase"
	cthis showhint
	jmp l5884
l5885:
	push "taken_krysztal_red_1"
	call clsave,bis
	neg
	cmp0
	je l5887
	push "andiamond_1"
	cthis showhint
	ret
l5887:
	push "taken_krysztal_red_2"
	call clsave,bis
	neg
	cmp0
	je l5889
	push "andiamond_2"
	cthis showhint
	ret
l5889:
	push "taken_krysztal_blue_1"
	call clsave,bis
	neg
	cmp0
	je l5891
	push "andiamond_3"
	cthis showhint
	ret
l5891:
	push "anpopexit"
	cthis showhint
l5884:
	end method
	end game

	game mg04_glowa1
	parent Banshee
	method init
	push "mg04_glowa1"
	clparent Banshee,init
	push "snd_brak_krysztalow"
	push "kinnat_28a"
	cthis newsnd
	push "onfinish"
	push "advsetstdstate"
	call snd_brak_krysztalow,addmethod
	push A
	push "bkg.jpg "
	push "bkg.pyz 0"
	push "wnetrze_czaszki.pyz 1"
	push "baza.pyz 2"
	push "grom_normal_g.pyzH 4"
	push "oko_l.pyz 5"
	push "oko_p.pyz 6"
	push "czaszka_l.pyz 7"
	push "czaszka_p.pyz 7"
	push "ramka.pyz 8"
	push "grom_normal_l.pyzH 10"
	push "grom_normal_p.pyzH 11"
	push "grom_normal_d.pyzH 12"
	push "krysztal.pyzH 13"
	push "krysztal_mask.pyzH 14"
	push "glowa1_element.pyzH 15"
	push "popexit.pyz 50"
	cthis imgs=
	call imgbkg,mg04_glowa10
	cthis butpopexit
	push "anglowa1_element"
	cthis setasitemtopck
	new vector,crystal_states
	push "string"
	call crystal_states,type
	push "begin"
	push "redblue"
	push "empty"
	push "blue"
	push "red"
	push "empty"
	push "blue"
	push "blue"
	push "blue"
	call crystal_states,beginadd
	new vector,crystal_states_2
	push "string"
	call crystal_states_2,type
	push "begin"
	push "red"
	push "empty"
	push "empty"
	push "blue"
	push "red"
	push "red"
	push "red"
	call crystal_states_2,beginadd
	new int,click_counter
	push 1
	popax
	sub 0,$a
	pop click_counter
	cthis init_crystals
	push "mg04_glowa1_saved"
	call clsave,bis
	cmp0
	je l5895
	cthis load_ring
l5895:
	push "bn_04_glowa_1_lewe_oko_zamkniete"
	call clsave,bis
	cmp0
	je l5897
	call anoko_l,hide
l5897:
	push "bn_04_glowa_1_prawe_oko_zamkniete"
	call clsave,bis
	cmp0
	je l5899
	call anoko_p,hide
l5899:
	push "bn_04_glowa_1_czaszka_otwarta"
	call clsave,bis
	cmp0
	je l5901
	push "taken_glowa1_element"
	call clsave,bis
	neg
	jmp l5903
l5901:
	push 0
	jmp l5903
l5902:
	push 1
l5903:
	cmp0
	je l5904
	call angrom_normal_g,show
	call angrom_normal_d,show
	call anczaszka_l,show
	push "opened"
	push 0
	call anczaszka_l,setframe
	call anczaszka_p,show
	push "opened"
	push 0
	call anczaszka_p,setframe
	push 500
	push "null"
	call anglowa1_element,anfadein
	jmp l5900
l5904:
	call angrom_normal_g,hide
	call angrom_normal_d,hide
l5900:
	call anoko_l,mg04_glowa13
	call anoko_p,mg04_glowa16
	cthis stdstart
	end method
	method mg04_glowa10
	push "isbutin"
	push "mg04_glowa11"
	cthis addmethod
	push "butclick"
	push "mg04_glowa12"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg04_glowa11
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anbkg,isin
	neg
	end method
	method mg04_glowa12
	cthis advstdstate
	neg
	cmp0
	je l5893
	ret
l5893:
	cthis mend
	end method
	method mg04_glowa13
	cthis Button_isin
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg04_glowa14"
	cthis addmethod
	push "onfinish"
	push "mg04_glowa15"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg04_glowa14
	cthis advstdstate
	neg
	cmp0
	je l5906
	ret
l5906:
	push "bn_04_glowa_1_lewe_oko_zamkniete"
	call clsave,bis
	cmp0
	je l5908
	ret
l5908:
	cthis nokrystal_warning
	push "bn_04_glowa_1_kregi_rozwiazane"
	call clsave,bis
	neg
	cmp0
	je l5910
	cthis rotate_circle_1
	jmp l5909
l5910:
	push "push"
	call anoko_l,play
l5909:
	end method
	method mg04_glowa15
	cthis hide
	push "bn_04_glowa_1_lewe_oko_zamkniete"
	call clsave,bset
	push "bn_04_glowa_1_prawe_oko_zamkniete"
	call clsave,bis
	cmp0
	je l5912
	push "bn_04_glowa_1_czaszka_otwarta"
	call clsave,bis
	neg
	jmp l5914
l5912:
	push 0
	jmp l5914
l5913:
	push 1
l5914:
	cmp0
	je l5915
	cthis open_skull
l5915:
	end method
	method mg04_glowa16
	cthis Button_isin
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg04_glowa17"
	cthis addmethod
	push "onfinish"
	push "mg04_glowa18"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg04_glowa17
	cthis advstdstate
	neg
	cmp0
	je l5917
	ret
l5917:
	push "bn_04_glowa_1_prawe_oko_zamkniete"
	call clsave,bis
	cmp0
	je l5919
	ret
l5919:
	cthis nokrystal_warning
	push "bn_04_glowa_1_kregi_rozwiazane"
	call clsave,bis
	neg
	cmp0
	je l5921
	cthis rotate_circle_2
	jmp l5920
l5921:
	push "push"
	call anoko_p,play
l5920:
	end method
	method mg04_glowa18
	cthis hide
	push "bn_04_glowa_1_prawe_oko_zamkniete"
	call clsave,bset
	push "bn_04_glowa_1_lewe_oko_zamkniete"
	call clsave,bis
	cmp0
	je l5923
	push "bn_04_glowa_1_czaszka_otwarta"
	call clsave,bis
	neg
	jmp l5925
l5923:
	push 0
	jmp l5925
l5924:
	push 1
l5925:
	cmp0
	je l5926
	cthis open_skull
l5926:
	end method
	method nokrystal_warning
	add click_counter,1
	pop click_counter
	cthis find_empty_slot
	push 0
	cmpja
	cmp0
	je l5928
	push click_counter
	push 0
	cmpje
	cmp0
	jne l5931
	push click_counter
	push 6
	pop $b
	popax
	div $a,$b
	push $d
	push 0
	cmpje
	jmp l5932
l5930:
	push 0
	jmp l5932
l5931:
	push 1
l5932:
	cmp0
	je l5928
	cthis advstdstate
	jmp l5933
l5928:
	push 0
	jmp l5933
l5929:
	push 1
l5933:
	cmp0
	je l5934
	push "snd_brak_krysztalow"
	cthis cbplay
l5934:
	end method
	method init_crystals
	push "ankrysztal_0"
	push 665
	push 278
	cthis init_crystal
	push "ankrysztal_1"
	push 636
	push 348
	cthis init_crystal
	push "ankrysztal_2"
	push 571
	push 376
	cthis init_crystal
	push "ankrysztal_3"
	push 500
	push 347
	cthis init_crystal
	push "ankrysztal_4"
	push 473
	push 279
	cthis init_crystal
	push "ankrysztal_5"
	push 502
	push 212
	cthis init_crystal
	push "ankrysztal_6"
	push 569
	push 184
	cthis init_crystal
	push "ankrysztal_7"
	push 637
	push 210
	cthis init_crystal
	push "ankrysztal_8"
	push 694
	push 212
	cthis init_crystal
	push "ankrysztal_9"
	push 761
	push 186
	cthis init_crystal
	push "ankrysztal_10"
	push 829
	push 212
	cthis init_crystal
	push "ankrysztal_11"
	push 857
	push 282
	cthis init_crystal
	push "ankrysztal_12"
	push 830
	push 351
	cthis init_crystal
	push "ankrysztal_13"
	push 761
	push 377
	cthis init_crystal
	push "ankrysztal_14"
	push 695
	push 351
	cthis init_crystal
	cthis update_crystals
	end method
	method update_crystals
	localint $1
	push 0
	pop $1
l5935:
	push $1
	call crystal_states,size
	cmpjl
	cmp0
	je l5936
	jmp l5938
l5937:
	add $1,1
	pop $1
	jmp l5935
l5938:
	localstring $2
	push $1
	call crystal_states,get
	pop $2
	push "ankrysztal_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push $2
	spop $a
	call [$a],play
	jmp l5937
l5936:
	localint $1
	push 0
	pop $1
l5939:
	push $1
	call crystal_states_2,size
	cmpjl
	cmp0
	je l5940
	jmp l5942
l5941:
	add $1,1
	pop $1
	jmp l5939
l5942:
	localstring $2
	push $1
	call crystal_states_2,get
	pop $2
	localint $3
	push $1
	push 8
	pop $b
	popax
	add $a,$b
	pop $3
	push "ankrysztal_"
	push $3
	pop $b
	popax
	add $a,$b
	spushs
	push $2
	spop $a
	call [$a],play
	jmp l5941
l5940:
	cthis check_rings
	end method
	method init_crystal
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push "ankrysztal"
	push $1
	cthis copyanima
	push "ankrysztal_mask"
	push $1
	push "_mask"
	pop $b
	popax
	add $a,$b
	cthis copyanima
	push $1
	spushs
	push $2
	push $3
	spop $a
	call [$a],setpos
	push $1
	spushs
	push "empty"
	spop $a
	call [$a],play
	push $1
	push "_mask"
	pop $b
	popax
	add $a,$b
	spushs
	push $2
	push 8
	pop $b
	popax
	add $a,$b
	push $3
	push 5
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	end method
	method rotate_circle_1
	localstring $1
	call crystal_states,size
	push 1
	pop $b
	popax
	sub $a,$b
	call crystal_states,get
	pop $1
	localint $2
	call crystal_states,size
	push 1
	pop $b
	popax
	sub $a,$b
	pop $2
l5943:
	push $2
	push 0
	cmpja
	cmp0
	je l5944
	jmp l5946
l5945:
	sub $2,1
	pop $2
	jmp l5943
l5946:
	push $2
	push $2
	push 1
	pop $b
	popax
	sub $a,$b
	call crystal_states,get
	call crystal_states,set
	jmp l5945
l5944:
	push 0
	push $1
	call crystal_states,set
	cthis update_crystals
	end method
	method rotate_circle_2
	localstring $1
	push 0
	call crystal_states,get
	pop $1
	localstring $2
	call crystal_states_2,size
	push 1
	pop $b
	popax
	sub $a,$b
	call crystal_states_2,get
	pop $2
	localint $3
	call crystal_states_2,size
	push 1
	pop $b
	popax
	sub $a,$b
	pop $3
l5947:
	push $3
	push 0
	cmpja
	cmp0
	je l5948
	jmp l5950
l5949:
	sub $3,1
	pop $3
	jmp l5947
l5950:
	push $3
	push $3
	push 1
	pop $b
	popax
	sub $a,$b
	call crystal_states_2,get
	call crystal_states_2,set
	jmp l5949
l5948:
	push 0
	push $2
	call crystal_states,set
	push 0
	push $1
	call crystal_states_2,set
	cthis update_crystals
	end method
	method check_rings
	push "bn_04_glowa_1_kregi_rozwiazane"
	call clsave,bis
	cmp0
	je l5952
	ret
l5952:
	localint $1
	push 1
	pop $1
l5953:
	push $1
	call crystal_states,size
	cmpjl
	cmp0
	je l5954
	jmp l5956
l5955:
	add $1,1
	pop $1
	jmp l5953
l5956:
	push $1
	call crystal_states,get
	push "red"
	cmpje
	neg
	cmp0
	je l5958
	ret
l5958:
	jmp l5955
l5954:
	localint $1
	push 0
	pop $1
l5959:
	push $1
	call crystal_states_2,size
	cmpjl
	cmp0
	je l5960
	jmp l5962
l5961:
	add $1,1
	pop $1
	jmp l5959
l5962:
	push $1
	call crystal_states_2,get
	push "blue"
	cmpje
	neg
	cmp0
	je l5964
	ret
l5964:
	jmp l5961
l5960:
	push "animacja_oczu"
	pop sgmstate
	push 1500
	push "mg04_glowa19"
	call angrom_normal_l,anfadein
	push 1500
	push "mg04_glowa111"
	call angrom_normal_p,anfadein
	push "bn_04_glowa_1_kregi_rozwiazane"
	call clsave,bset
	end method
	method mg04_glowa19
	push 1500
	push "mg04_glowa110"
	call angrom_normal_l,anfadeout
	end method
	method mg04_glowa110
	cthis advsetstdstate
	end method
	method mg04_glowa111
	push 1500
	push "null"
	call angrom_normal_p,anfadeout
	end method
	method open_skull
	push 700
	push "null"
	call anglowa1_element,anfadein
	push 700
	push "null"
	call angrom_normal_g,anfadein
	push 700
	push "null"
	call angrom_normal_d,anfadein
	push "open"
	call anczaszka_l,play
	push "open"
	call anczaszka_p,play
	push "bn_04_glowa_1_czaszka_otwarta"
	call clsave,bset
	end method
	method USE_krysztal_blue_1
	cthis advsetstdstate
	push "krysztal_blue_1"
	push "blue"
	cthis click_on_empty
	end method
	method USE_krysztal_blue_2
	cthis advsetstdstate
	push "krysztal_blue_2"
	push "blue"
	cthis click_on_empty
	end method
	method USE_krysztal_red_1
	cthis advsetstdstate
	push "krysztal_red_1"
	push "red"
	cthis click_on_empty
	end method
	method USE_krysztal_red_2
	cthis advsetstdstate
	push "krysztal_red_2"
	push "red"
	cthis click_on_empty
	end method
	method click_on_empty
	localstring $1
	localstring $2
	pop $2
	pop $1
	localint $3
	push 1
	popax
	sub 0,$a
	pop $3
	localint $4
	push 0
	pop $4
l5965:
	push $4
	push 15
	cmpjl
	cmp0
	je l5966
	jmp l5968
l5967:
	add $4,1
	pop $4
	jmp l5965
l5968:
	localdef $5
	push "ankrysztal_"
	push $4
	pop $b
	popax
	add $a,$b
	push "_mask"
	pop $b
	popax
	add $a,$b
	pop $5
	push $5
	spushs
	call mouse,getpos
	push 0
	push 1
	spop $a
	call [$a],isin
	cmp0
	je l5970
	push $4
	pop $3
l5970:
	jmp l5967
l5966:
	push $3
	push 1
	popax
	sub 0,$a
	cmpja
	cmp0
	je l5972
	push "ankrysztal_"
	push $3
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	push 3
	cmpje
	cmp0
	je l5974
	push $3
	push $1
	push $2
	cthis put_crystal
	jmp l5973
l5974:
	cthis item_gotopck
l5973:
	jmp l5971
l5972:
	cthis item_gotopck
l5971:
	end method
	method put_crystal
	localint $1
	localstring $2
	localstring $3
	pop $3
	pop $2
	pop $1
	push "ankrysztal_"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push $3
	spop $a
	call [$a],play
	push $2
	cthis removefrompck
	push $1
	push 8
	cmpjl
	cmp0
	je l5976
	push $1
	push $3
	call crystal_states,set
	jmp l5975
l5976:
	push $1
	push 8
	pop $b
	popax
	sub $a,$b
	push $3
	call crystal_states_2,set
l5975:
	cthis check_rings
	end method
	method save_ring
	localint $1
	push 0
	pop $1
l5977:
	push $1
	push 15
	cmpjl
	cmp0
	je l5978
	jmp l5980
l5979:
	add $1,1
	pop $1
	jmp l5977
l5980:
	push $1
	push 8
	cmpjl
	cmp0
	je l5982
	push "ankrysztal_"
	push $1
	pop $b
	popax
	add $a,$b
	push $1
	call crystal_states,get
	call clsave,set
	jmp l5981
l5982:
	push "ankrysztal_"
	push $1
	pop $b
	popax
	add $a,$b
	push $1
	push 8
	pop $b
	popax
	sub $a,$b
	call crystal_states_2,get
	call clsave,set
l5981:
	jmp l5979
l5978:
	push "mg04_glowa1_saved"
	call clsave,bset
	end method
	method load_ring
	localint $1
	push 0
	pop $1
l5983:
	push $1
	push 8
	cmpjl
	cmp0
	je l5984
	jmp l5986
l5985:
	add $1,1
	pop $1
	jmp l5983
l5986:
	push $1
	push "ankrysztal_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,get
	call crystal_states,set
	jmp l5985
l5984:
	push 0
	push "ankrysztal_0"
	call clsave,get
	call crystal_states_2,set
	localint $1
	push 8
	pop $1
l5987:
	push $1
	push 15
	cmpjl
	cmp0
	je l5988
	jmp l5990
l5989:
	add $1,1
	pop $1
	jmp l5987
l5990:
	push $1
	push 8
	pop $b
	popax
	sub $a,$b
	push "ankrysztal_"
	push $1
	pop $b
	popax
	add $a,$b
	call clsave,get
	call crystal_states_2,set
	jmp l5989
l5988:
	cthis update_crystals
	end method
	method find_empty_slot
	localint $1
	push 1
	popax
	sub 0,$a
	pop $1
	localint $2
	push 0
	pop $2
l5991:
	push $2
	push 15
	cmpjl
	cmp0
	je l5992
	jmp l5994
l5993:
	add $2,1
	pop $2
	jmp l5991
l5994:
	push "ankrysztal_"
	push $2
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	spop $a
	call [$a],actionnr
	push 3
	cmpje
	cmp0
	je l5996
	push $2
	ret
l5996:
	jmp l5993
l5992:
	push 1
	popax
	sub 0,$a
	ret
	end method
	method mend
	cthis save_ring
	push "ad04_brzegjeziora"
	push "gamead04_brzegjeziora0"
	cthis stdexitdefadv
	end method
	method anglowa1_element_TAKE
	push "glowa1_element"
	cthis isvisible_itempopup
	neg
	cmp0
	je l5998
	push "glowa1_element"
	push "anglowa1_element"
	cthis show_itempopup
	push "rotostart"
	push 0
	call anglowa1_element,setframe
	cthis set_mg_finished
	jmp l5997
l5998:
	push "glowa1_element"
	cthis hide_itempopup
	cthis item_gotocenter
	call butgame,onmousemove
	push 700
	push "null"
	call angrom_normal_g,anfadeout
	push 700
	push "null"
	call angrom_normal_d,anfadeout
	push "close"
	call anczaszka_l,play
	push "close"
	call anczaszka_p,play
l5997:
	end method
	method popup_glowa1_element_clickexit
	push "anglowa1_element"
	cthis setactitem
	push "anglowa1_element"
	call butgame,sclicked=
	cthis anglowa1_element_TAKE
	end method
	method anglowa1_element_INPCK
	push "glowa1_element"
	cthis addtopck
	cthis mend
	end method
	method HINT_CLICK
	localint $1
	cthis find_empty_slot
	pop $1
	push $1
	push 1
	popax
	sub 0,$a
	cmpja
	cmp0
	je l6000
	push "ankrysztal_"
	push $1
	pop $b
	popax
	add $a,$b
	push "_mask"
	pop $b
	popax
	add $a,$b
	cthis showhint
	jmp l5999
l6000:
	push "bn_04_glowa_1_lewe_oko_zamkniete"
	call clsave,bis
	neg
	cmp0
	je l6002
	push "anoko_l"
	cthis showhint
	ret
	jmp l6001
l6002:
	push "bn_04_glowa_1_prawe_oko_zamkniete"
	call clsave,bis
	neg
	cmp0
	je l6004
	push "anoko_p"
	cthis showhint
	ret
l6004:
l6001:
	push "taken_glowa1_element"
	call clsave,bis
	neg
	cmp0
	je l6006
	push "anglowa1_element"
	cthis showhint
	jmp l6005
l6006:
	push "anpopexit"
	cthis showhint
l6005:
l5999:
	end method
	end game

	game mg04_glowa2
	parent Banshee
	method init
	push "mg04_glowa2"
	clparent Banshee,init
	push "snd_brak_elementu"
	push "kinnat_28b"
	cthis newsnd
	push "onfinish"
	push "advsetstdstate"
	call snd_brak_elementu,addmethod
	push A
	push "bkg.jpg "
	push "bkg_game.pyz 1"
	push "base.pyz 2"
	push "diamenty.pyz 3"
	push "wnetrze_czaszki.pyz 4"
	push "grom_normal_g.pyz 5"
	push "oko.pyz 6"
	push "oko_l.pyz 7"
	push "oko_p.pyz 8"
	push "czaszka_l.pyz 9"
	push "czaszka_p.pyz 10"
	push "element.pyzH 11"
	push "grom_normal_l.pyzH 12"
	push "grom_normal_p.pyzH 13"
	push "grom_normal_d.pyzH 14"
	push "ramka.pyz 18"
	push "popexit.pyz 50"
	cthis imgs=
	cthis butpopexit
	call imgbkg,mg04_glowa20
	push "anoko"
	cthis setasitemtopck
	push 1
	call anoko,disable=
	call anelement,mg04_glowa23
	push "bn_04_glowa_2_element_on"
	call clsave,bis
	cmp0
	je l6016
	call anelement,show
l6016:
	push "bn_04_glowa_2_lewe_oko_zamkniete"
	call clsave,bis
	cmp0
	je l6018
	call anoko_l,hide
l6018:
	push "bn_04_glowa_2_prawe_oko_zamkniete"
	call clsave,bis
	cmp0
	je l6020
	call anoko_p,hide
l6020:
	push "bn_04_glowa2_czaszka_otwarta"
	call clsave,bis
	cmp0
	je l6022
	push "taken_oko"
	call clsave,bis
	neg
	jmp l6024
l6022:
	push 0
	jmp l6024
l6023:
	push 1
l6024:
	cmp0
	je l6025
	call angrom_normal_d,show
	call anczaszka_l,show
	push "opened"
	call anczaszka_l,play
	call anczaszka_p,show
	push "opened"
	call anczaszka_p,play
	call angrom_normal_g,show
	push 0
	call anoko,disable=
	jmp l6021
l6025:
	call angrom_normal_g,hide
	call angrom_normal_d,hide
l6021:
	call anoko_l,mg04_glowa26
	call anoko_p,mg04_glowa29
	cthis stdstart
	end method
	method mg04_glowa20
	push "isbutin"
	push "mg04_glowa21"
	cthis addmethod
	push "butclick"
	push "mg04_glowa22"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg04_glowa21
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anbkg_game,isin
	neg
	end method
	method mg04_glowa22
	cthis advstdstate
	neg
	cmp0
	je l6008
	ret
l6008:
	cthis mend
	end method
	method mg04_glowa23
	cthis Button_isinvis
	push "butmoveon"
	push "mg04_glowa24"
	cthis addmethod
	push "butmoveoff"
	push "mg04_glowa25"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg04_glowa24
	cthis advstdstate
	neg
	cmp0
	je l6010
	ret
l6010:
	push "bn_04_glowa_2_element_on"
	call clsave,bis
	neg
	cmp0
	je l6012
	push "use"
	call advmouse,set
	jmp l6011
l6012:
	call advmouse,setstd
l6011:
	end method
	method mg04_glowa25
	cthis advstdstate
	neg
	cmp0
	je l6014
	ret
l6014:
	call advmouse,setstd
	end method
	method mg04_glowa26
	cthis Button_isin
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg04_glowa27"
	cthis addmethod
	push "onfinish"
	push "mg04_glowa28"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg04_glowa27
	cthis advstdstate
	neg
	cmp0
	je l6027
	ret
l6027:
	push "bn_04_glowa_2_element_on"
	call clsave,bis
	cmp0
	je l6029
	push "bn_04_glowa_2_lewe_oko_zamkniete"
	call clsave,bis
	neg
	jmp l6031
l6029:
	push 0
	jmp l6031
l6030:
	push 1
l6031:
	cmp0
	je l6032
	push "push"
	call anoko_l,play
	push "bn_04_glowa_2_lewe_oko_zamkniete"
	call clsave,bset
	jmp l6028
l6032:
	push "snd_brak_elementu"
	cthis cbplay
l6028:
	end method
	method mg04_glowa28
	cthis hide
	push "bn_04_glowa_2_prawe_oko_zamkniete"
	call clsave,bis
	cmp0
	je l6034
	push "bn_04_glowa_2_czaszka_otwarta"
	call clsave,bis
	neg
	jmp l6036
l6034:
	push 0
	jmp l6036
l6035:
	push 1
l6036:
	cmp0
	je l6037
	cthis open_skull
l6037:
	end method
	method mg04_glowa29
	cthis Button_isin
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg04_glowa210"
	cthis addmethod
	push "onfinish"
	push "mg04_glowa211"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg04_glowa210
	cthis advstdstate
	neg
	cmp0
	je l6039
	ret
l6039:
	push "bn_04_glowa_2_element_on"
	call clsave,bis
	cmp0
	je l6041
	push "bn_04_glowa_2_prawe_oko_zamkniete"
	call clsave,bis
	neg
	jmp l6043
l6041:
	push 0
	jmp l6043
l6042:
	push 1
l6043:
	cmp0
	je l6044
	push "bn_04_glowa_2_prawe_oko_zamkniete"
	call clsave,bset
	push "push"
	call anoko_p,play
	jmp l6040
l6044:
	push "snd_brak_elementu"
	cthis cbplay
l6040:
	end method
	method mg04_glowa211
	cthis hide
	push "bn_04_glowa_2_lewe_oko_zamkniete"
	call clsave,bis
	cmp0
	je l6046
	push "bn_04_glowa_2_czaszka_otwarta"
	call clsave,bis
	neg
	jmp l6048
l6046:
	push 0
	jmp l6048
l6047:
	push 1
l6048:
	cmp0
	je l6049
	cthis open_skull
l6049:
	end method
	method open_skull
	push 800
	push "null"
	call angrom_normal_g,anfadein
	push 300
	push "null"
	call anoko,anfadein
	push "open"
	call anczaszka_l,play
	push "open"
	call anczaszka_p,play
	push 800
	push "null"
	call angrom_normal_d,anfadein
	push 0
	call anoko,disable=
	push "bn_04_glowa_2_czaszka_otwarta"
	call clsave,bset
	end method
	method mend
	push "ad04_brzegjeziora"
	push "gamead04_brzegjeziora0"
	cthis stdexitdefadv
	end method
	method anoko_TAKE
	push "oko"
	cthis isvisible_itempopup
	neg
	cmp0
	je l6051
	push "rotostart"
	push 0
	call anoko,setframe
	push "oko"
	push "anoko"
	cthis show_itempopup
	cthis set_mg_finished
	jmp l6050
l6051:
	push "oko"
	cthis hide_itempopup
	push "close"
	call anczaszka_l,play
	push "close"
	call anczaszka_p,play
	push 800
	push "null"
	call angrom_normal_g,anfadeout
	push 800
	push "null"
	call angrom_normal_d,anfadeout
	cthis item_gotocenter
	call butgame,onmousemove
l6050:
	end method
	method popup_oko_clickexit
	push "oko"
	cthis setactitem
	push "anoko"
	call butgame,sclicked=
	cthis anoko_TAKE
	end method
	method anoko_INPCK
	push "oko"
	cthis addtopck
	cthis mend
	end method
	method USE_glowa1_element
	cthis advsetstdstate
	call mouse,getpos
	push 1
	push 1
	call anbase,isin
	cmp0
	je l6053
	push "animacja_oczu"
	pop sgmstate
	push "glowa1_element"
	cthis removefrompck
	push 500
	push "null"
	call anelement,anfadein
	push 1500
	push "mg04_glowa212"
	call angrom_normal_l,anfadein
	push 1500
	push "mg04_glowa214"
	call angrom_normal_p,anfadein
	push "bn_04_glowa_2_element_on"
	call clsave,bset
	jmp l6052
l6053:
	cthis advsetstdstate
	cthis item_gotopck
l6052:
	end method
	method mg04_glowa212
	push 1500
	push "mg04_glowa213"
	call angrom_normal_l,anfadeout
	end method
	method mg04_glowa213
	cthis advsetstdstate
	end method
	method mg04_glowa214
	push 1500
	push "null"
	call angrom_normal_p,anfadeout
	end method
	method HINT_CLICK
	push "bn_04_glowa_2_element_on"
	call clsave,bis
	neg
	cmp0
	je l6055
	push "anelement"
	cthis showhint
	jmp l6054
l6055:
	push "bn_04_glowa_2_lewe_oko_zamkniete"
	call clsave,bis
	neg
	cmp0
	je l6057
	push "anoko_l"
	cthis showhint
	ret
	jmp l6056
l6057:
	push "bn_04_glowa_2_prawe_oko_zamkniete"
	call clsave,bis
	neg
	cmp0
	je l6059
	push "anoko_p"
	cthis showhint
	ret
l6059:
l6056:
	push "taken_oko"
	call clsave,bis
	neg
	cmp0
	je l6061
	push "anoko"
	cthis showhint
	jmp l6060
l6061:
	push "anpopexit"
	cthis showhint
l6060:
l6054:
	end method
	end game

	game mg04_glowa3
	parent Banshee
	method init
	push "mg04_glowa3"
	clparent Banshee,init
	push "snd_brak_oka"
	push "kinnat_28c"
	cthis newsnd
	push "onfinish"
	push "advsetstdstate"
	call snd_brak_oka,addmethod
	push A
	push "bkg.jpg"
	push "bkg_game.pyz 1"
	push "wnetrze_czaszki.pyz 2"
	push "baza.pyz 3"
	push "oko_l.pyz 4"
	push "oko_p.pyzH 4"
	push "szczeka_break.pyz 5"
	push "grom_normal_d.pyzH 6"
	push "grom_normal_g.pyzH 6"
	push "grom_normal_p.pyzH 7"
	push "grom_normal_l.pyzH 8"
	push "lopatka.pyzH 9"
	push "czaszka_l.pyz  10"
	push "czaszka_p.pyz 11"
	push "krysztaly.pyz 12"
	push "ramka.pyz 18"
	push "popexit.pyz 20"
	cthis imgs=
	cthis butpopexit
	push "anlopatka"
	cthis setasitemtopck
	call imgbkg,mg04_glowa30
	push "bn_04_glowa3_czaszka_otwarta"
	call clsave,bis
	cmp0
	je l6065
	push "taken_lopatka"
	call clsave,bis
	neg
	jmp l6067
l6065:
	push 0
	jmp l6067
l6066:
	push 1
l6067:
	cmp0
	je l6068
	call angrom_normal_d,show
	call anczaszka_l,show
	push "opened"
	call anczaszka_l,play
	call anczaszka_p,show
	push "opened"
	call anczaszka_p,play
	call angrom_normal_g,show
	call anlopatka,show
	jmp l6064
l6068:
	call angrom_normal_g,hide
	call angrom_normal_d,hide
l6064:
	push "bn_04_glowa_3_oko_on"
	call clsave,bis
	cmp0
	je l6070
	push "bn_04_glowa_3_prawe_oko_zamkniete"
	call clsave,bis
	neg
	jmp l6072
l6070:
	push 0
	jmp l6072
l6071:
	push 1
l6072:
	cmp0
	je l6073
	call anoko_p,show
	jmp l6069
l6073:
	call anoko_p,hide
l6069:
	push "bn_04_glowa_3_lewe_oko_zamkniete"
	call clsave,bis
	cmp0
	je l6075
	call anoko_l,hide
l6075:
	push "bn_04_glowa3_szczeka_faza"
	call clsave,bis
	cmp0
	je l6077
	localint $1
	push "bn_04_glowa3_szczeka_faza"
	call clsave,get
	pop $1
	push "faza"
	push $1
	pop $b
	popax
	add $a,$b
	call anszczeka_break,play
l6077:
	call anoko_l,mg04_glowa33
	call anoko_p,mg04_glowa36
	call anszczeka_break,mg04_glowa311
	cthis stdstart
	end method
	method mg04_glowa30
	push "isbutin"
	push "mg04_glowa31"
	cthis addmethod
	push "butclick"
	push "mg04_glowa32"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg04_glowa31
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anbkg_game,isin
	neg
	end method
	method mg04_glowa32
	cthis advstdstate
	neg
	cmp0
	je l6063
	ret
l6063:
	cthis mend
	end method
	method mg04_glowa33
	cthis Button_isin
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg04_glowa34"
	cthis addmethod
	push "onfinish"
	push "mg04_glowa35"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg04_glowa34
	cthis advstdstate
	neg
	cmp0
	je l6079
	ret
l6079:
	push "bn_04_glowa_3_oko_on"
	call clsave,bis
	cmp0
	je l6081
	push "bn_04_glowa_3_lewe_oko_zamkniete"
	call clsave,bis
	neg
	jmp l6083
l6081:
	push 0
	jmp l6083
l6082:
	push 1
l6083:
	cmp0
	je l6084
	push "push"
	call anoko_l,play
	push "bn_04_glowa_3_lewe_oko_zamkniete"
	call clsave,bset
	jmp l6080
l6084:
	push "snd_brak_oka"
	cthis cbplay
l6080:
	end method
	method mg04_glowa35
	cthis hide
	push "bn_04_glowa_3_prawe_oko_zamkniete"
	call clsave,bis
	cmp0
	je l6086
	push "bn_04_glowa_3_czaszka_otwarta"
	call clsave,bis
	neg
	jmp l6088
l6086:
	push 0
	jmp l6088
l6087:
	push 1
l6088:
	cmp0
	je l6089
	cthis open_skull
l6089:
	end method
	method mg04_glowa36
	cthis Button_isinvis
	push "butmoveon"
	push "mg04_glowa37"
	cthis addmethod
	push "butmoveoff"
	push "mg04_glowa38"
	cthis addmethod
	push "butclick"
	push "mg04_glowa39"
	cthis addmethod
	push "onfinish"
	push "mg04_glowa310"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg04_glowa37
	cthis advstdstate
	neg
	cmp0
	je l6091
	ret
l6091:
	push "bn_04_glowa_3_oko_on"
	call clsave,bis
	neg
	cmp0
	je l6093
	push "use"
	call advmouse,set
	jmp l6092
l6093:
	push "bn_04_glowa_3_prawe_oko_zamkniete"
	call clsave,bis
	neg
	cmp0
	je l6095
	push "take"
	call advmouse,set
	jmp l6094
l6095:
	call advmouse,setstd
l6094:
l6092:
	end method
	method mg04_glowa38
	cthis advstdstate
	neg
	cmp0
	je l6097
	ret
l6097:
	call advmouse,setstd
	end method
	method mg04_glowa39
	cthis advstdstate
	neg
	cmp0
	je l6099
	ret
l6099:
	push "bn_04_glowa_3_prawe_oko_zamkniete"
	call clsave,bis
	neg
	cmp0
	je l6101
	push "bn_04_glowa_3_prawe_oko_zamkniete"
	call clsave,bset
	push "push"
	call anoko_p,play
l6101:
	end method
	method mg04_glowa310
	cthis hide
	push "bn_04_glowa_3_lewe_oko_zamkniete"
	call clsave,bis
	cmp0
	je l6103
	push "bn_04_glowa_3_czaszka_otwarta"
	call clsave,bis
	neg
	jmp l6105
l6103:
	push 0
	jmp l6105
l6104:
	push 1
l6105:
	cmp0
	je l6106
	cthis open_skull
l6106:
	end method
	method mg04_glowa311
	cthis Button_isin
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg04_glowa312"
	cthis addmethod
	push "onfinish"
	push "mg04_glowa313"
	cthis addmethod
	push "bn_04_glowa3_szczeka_urwana"
	call clsave,bis
	neg
	cmp0
	je l6118
	cthis getname
	call butgame,add
l6118:
	end method
	method mg04_glowa312
	cthis advstdstate
	neg
	cmp0
	je l6108
	ret
l6108:
	localint $1
	push "bn_04_glowa3_szczeka_faza"
	call clsave,bis
	cmp0
	je l6110
	push "bn_04_glowa3_szczeka_faza"
	call clsave,get
	pop $1
	jmp l6109
l6110:
	push 1
	pop $1
l6109:
	push "bn_04_glowa3_szczeka_urwana"
	call clsave,bis
	neg
	cmp0
	je l6112
	push $1
	push 1
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	push 2
	cmpja
	cmp0
	je l6114
	push "bn_04_glowa3_szczeka_urwana"
	call clsave,bset
	push 3
	pop $1
	cthis getname
	call butgame,removebut
	call advmouse,setstd
l6114:
	push "break"
	push $1
	pop $b
	popax
	add $a,$b
	call anszczeka_break,play
	push "bn_04_glowa3_szczeka_faza"
	push $1
	call clsave,set
l6112:
	end method
	method mg04_glowa313
	push "bn_04_glowa3_szczeka_faza"
	call clsave,bis
	cmp0
	je l6116
	localint $1
	push "bn_04_glowa3_szczeka_faza"
	call clsave,get
	pop $1
	push "faza"
	push $1
	pop $b
	popax
	add $a,$b
	call anszczeka_break,play
l6116:
	end method
	method open_skull
	push 500
	push "null"
	call angrom_normal_g,anfadein
	call anlopatka,show
	push "open"
	call anczaszka_l,play
	push "open"
	call anczaszka_p,play
	push 800
	push "null"
	call angrom_normal_d,anfadein
	push "bn_04_glowa3_czaszka_otwarta"
	call clsave,bset
	end method
	method mend
	push "ad04_brzegjeziora"
	push "gamead04_brzegjeziora0"
	cthis stdexitdefadv
	end method
	method USE_oko
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call anoko_p,isin
	cmp0
	je l6120
	push "oko"
	cthis removefrompck
	call anoko_p,show
	push "animacja_oczu"
	pop sgmstate
	push 1500
	push "mg04_glowa314"
	call angrom_normal_l,anfadein
	push 1500
	push "mg04_glowa316"
	call angrom_normal_p,anfadein
	push "bn_04_glowa_3_oko_on"
	call clsave,bset
	push "take"
	call advmouse,set
	jmp l6119
l6120:
	cthis advsetstdstate
	cthis item_gotopck
l6119:
	end method
	method mg04_glowa314
	push 1500
	push "mg04_glowa315"
	call angrom_normal_l,anfadeout
	end method
	method mg04_glowa315
	cthis advsetstdstate
	end method
	method mg04_glowa316
	push 1500
	push "null"
	call angrom_normal_p,anfadeout
	end method
	method anlopatka_TAKE
	push "bn_04_glowa3_szczeka_urwana"
	call clsave,bis
	neg
	cmp0
	je l6122
	push "closeopen"
	call anczaszka_l,play
	push "closeopen"
	call anczaszka_p,play
	push "smile"
	call anszczeka_break,play
	ret
l6122:
	push "lopatka"
	cthis isvisible_itempopup
	neg
	cmp0
	je l6124
	push "lopatka"
	push "anlopatka"
	cthis show_itempopup
	cthis set_mg_finished
	push "rotostart"
	call anlopatka,play
	jmp l6123
l6124:
	push "lopatka"
	cthis hide_itempopup
	push "close"
	call anczaszka_l,play
	push "close"
	call anczaszka_p,play
	push 800
	push "null"
	call angrom_normal_d,anfadeout
	cthis item_gotocenter
	call butgame,onmousemove
l6123:
	end method
	method popup_lopatka_clickexit
	push "lopatka"
	cthis setactitem
	push "anlopatka"
	call butgame,sclicked=
	cthis anlopatka_TAKE
	end method
	method anlopatka_INPCK
	push "lopatka"
	cthis addtopck
	cthis mend
	end method
	method HINT_CLICK
	push "bn_04_glowa_3_oko_on"
	call clsave,bis
	neg
	cmp0
	je l6126
	push "anoko_p"
	cthis showhint
	jmp l6125
l6126:
	push "bn_04_glowa_3_lewe_oko_zamkniete"
	call clsave,bis
	neg
	cmp0
	je l6128
	push "anoko_l"
	cthis showhint
	ret
	jmp l6127
l6128:
	push "bn_04_glowa_3_prawe_oko_zamkniete"
	call clsave,bis
	neg
	cmp0
	je l6130
	push "anoko_p"
	cthis showhint
	ret
l6130:
l6127:
	push "bn_04_glowa3_szczeka_urwana"
	call clsave,bis
	neg
	cmp0
	je l6132
	push "anszczeka_break"
	cthis showhint
	ret
l6132:
	push "taken_lopatka"
	call clsave,bis
	neg
	cmp0
	je l6134
	push "anlopatka"
	cthis showhint
	jmp l6133
l6134:
	push "anpopexit"
	cthis showhint
l6133:
l6125:
	end method
	end game

	game mg04_tarcza
	parent Banshee
	method init
	push "mg04_tarcza"
	clparent Banshee,init
	push A
	push "bkg.jpg 0"
	push "base.pyz 1"
	push "kopanie_obszar.pyzH 2"
	push "tarcza.pyz 3"
	push "robaki.pyz 4"
	push "kopanie.pyzH 5"
	push "puszka_robakiH.pyz 6"
	push "maska.pyz 7"
	push "ramka.pyz 8"
	push "popexit.pyz 9"
	cthis imgs=
	call imgbkg,mg04_tarcza0
	cthis butpopexit
	push "antarcza"
	cthis setasitemtopck
	push 1
	call antarcza,disable=
	call anpuszka_robaki,anopacityframe
	push "anpuszka_robaki"
	cthis setasitemtopck
	push 1
	call anpuszka_robaki,disable=
	new int,ilicz
	push 0
	pop ilicz
	call ankopanie,mg04_tarcza3
	push "e1_robaki_wykopane"
	call clsave,bis
	cmp0
	je l6143
	push "taken_puszka_robaki"
	call clsave,bis
	neg
	cmp0
	je l6145
	push 0
	call anpuszka_robaki,disable=
	call anpuszka_robaki,show
l6145:
l6143:
	push "e1_tarcza_wykopana"
	call clsave,bis
	cmp0
	je l6147
	push "taken_tarcza"
	call clsave,bis
	cmp0
	je l6149
	call antarcza,hide
	jmp l6148
l6149:
	push 0
	call antarcza,disable=
l6148:
l6147:
	push "e1_robaki_wykopane"
	call clsave,bis
	cmp0
	je l6151
	push "e1_tarcza_wykopana"
	call clsave,bis
	neg
	cmp0
	je l6153
	push 3
	call anrobaki,play
	jmp l6152
l6153:
	push 4
	call anrobaki,play
l6152:
l6151:
	cthis stdstart
	push "snd_init"
	push "kinnat_28d"
	cthis newsnd
	push "onfinish"
	push "advsetstdstate"
	call snd_init,addmethod
	push "snd_robaki"
	push "kinnat_28e"
	cthis newsnd
	push "onfinish"
	push "advsetstdstate"
	call snd_robaki,addmethod
	push "e1_tarcza_wykopana"
	call clsave,bis
	neg
	cmp0
	je l6155
	call ankopanie_obszar,mg04_tarcza6
l6155:
	push "e1_robaki_snd_intro_done"
	call clsave,bis
	neg
	cmp0
	je l6163
	push "timeintro"
	push 1000
	push "mg04_tarcza9"
	cthis timplay
l6163:
	end method
	method mg04_tarcza0
	push "isbutin"
	push "mg04_tarcza1"
	cthis addmethod
	push "butclick"
	push "mg04_tarcza2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg04_tarcza1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anbase,isin
	neg
	end method
	method mg04_tarcza2
	cthis advstdstate
	neg
	cmp0
	je l6136
	ret
l6136:
	cthis mend
	end method
	method mg04_tarcza3
	push "onfinish"
	push "mg04_tarcza4"
	cthis addmethod
	push "onendframe"
	push "mg04_tarcza5"
	cthis addmethod
	end method
	method mg04_tarcza4
	push 30
	push 0
	cthis move
	push 0
	pop ilicz
	push 0
	call antarcza,disable=
	push 300
	push "null"
	cthis anfadeout
	call ankopanie_obszar,butmoveon
	end method
	method mg04_tarcza5
	add ilicz,1
	pop ilicz
	push ilicz
	push 15
	cmpje
	cmp0
	jne l6139
	push ilicz
	push 28
	cmpje
	jmp l6140
l6138:
	push 0
	jmp l6140
l6139:
	push 1
l6140:
	cmp0
	je l6141
	push 10
	popax
	sub 0,$a
	push 0
	cthis move
l6141:
	end method
	method mg04_tarcza6
	cthis Button_isinvis
	push "butmoveon"
	push "mg04_tarcza7"
	cthis addmethod
	push "butmoveoff"
	push "mg04_tarcza8"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg04_tarcza7
	cthis advstdstate
	neg
	cmp0
	je l6157
	ret
l6157:
	push "e1_tarcza_wykopana"
	call clsave,bis
	neg
	cmp0
	je l6159
	push "use"
	call advmouse,set
	jmp l6158
l6159:
	call advmouse,setstd
l6158:
	end method
	method mg04_tarcza8
	cthis advstdstate
	neg
	cmp0
	je l6161
	ret
l6161:
	call advmouse,setstd
	end method
	method mg04_tarcza9
	push "snd_init"
	cthis cbplay
	push "e1_robaki_snd_intro_done"
	call clsave,bset
	end method
	method mend
	push "ad04_brzegjeziora"
	push "gamead04_brzegjeziora0"
	cthis stdexitdefadv
	end method
	method USE_puszka
	call mouse,getpos
	push 0
	push 0
	call ankopanie_obszar,isin
	cmp0
	je l6165
	cthis advsetstdstate
	call advmouse,setstd
	push "puszka"
	cthis removefrompck
	push "e1_robaki_wykopane"
	call clsave,bset
	push 1
	call anrobaki,play
	push 0
	call anpuszka_robaki,disable=
	push 200
	push "null"
	call anpuszka_robaki,anfadein
	jmp l6164
l6165:
	cthis item_gotopck
l6164:
	end method
	method USE_lopatka
	cthis advsetstdstate
	call advmouse,setstd
	call mouse,getpos
	push 0
	push 0
	call ankopanie_obszar,isin
	cmp0
	je l6167
	push "e1_robaki_wykopane"
	call clsave,bis
	cmp0
	je l6169
	push "lopatka"
	cthis removefrompck
	push "e1_tarcza_wykopana"
	call clsave,bset
	call advmouse,setstd
	push 0
	call ankopanie,play
	push 2
	call anrobaki,play
	jmp l6168
l6169:
	cthis item_gotopck
l6168:
	jmp l6166
l6167:
	cthis item_gotopck
l6166:
	end method
	method anpuszka_robaki_TAKE
	push "puszka_robaki"
	cthis popitem_gotocenter
	end method
	method anpuszka_robaki_INPCK
	push "puszka_robaki"
	cthis addtopck
	end method
	method antarcza_TAKE
	push "rotostart"
	push 0
	call antarcza,setframe
	push "tarcza"
	cthis popitem_gotocenter
	cthis set_mg_finished
	end method
	method antarcza_INPCK
	push "tarcza"
	cthis addtopck
	push "taken_puszka_robaki"
	call clsave,bis
	cmp0
	je l6171
	cthis mend
l6171:
	end method
	method HINT_CLICK
	push "taken_tarcza"
	call clsave,bis
	neg
	cmp0
	je l6173
	push "e1_robaki_wykopane"
	call clsave,bis
	cmp0
	je l6175
	push "taken_puszka_robaki"
	call clsave,bis
	neg
	jmp l6177
l6175:
	push 0
	jmp l6177
l6176:
	push 1
l6177:
	cmp0
	je l6178
	push "anpuszka_robaki"
	cthis showhint
	jmp l6174
l6178:
	push "ma_puszka"
	call clsave,bis
	cmp0
	je l6180
	push "anrobaki"
	cthis showhint
	push "puszka"
	cthis showhintitem
	jmp l6179
l6180:
	push "ma_lopatka"
	call clsave,bis
	cmp0
	je l6182
	push "e1_robaki_wykopane"
	call clsave,bis
	jmp l6184
l6182:
	push 0
	jmp l6184
l6183:
	push 1
l6184:
	cmp0
	je l6185
	push "anrobaki"
	cthis showhint
	push "lopatka"
	cthis showhintitem
	jmp l6181
l6185:
	push "e1_tarcza_wykopana"
	call clsave,bis
	cmp0
	je l6187
	push "antarcza"
	cthis showhint
	jmp l6186
l6187:
	push "anpopexit"
	cthis showhint
l6186:
l6181:
l6179:
l6174:
	jmp l6172
l6173:
	push "anpopexit"
	cthis showhint
l6172:
	end method
	end game

	game mg04_lodz
	parent Banshee
	method init
	push "mg04_lodz"
	clparent Banshee,init
	push A
	push "$scripts/mg04_glowa1/bkg.jpg 1"
	push "base.pyz 2"
	push "krysztal_blue.pyzH 3"
	push "medalion.pyzH 4"
	push "ramka.pyz 5"
	push "popexit.pyz 6"
	push "medalion_wlozony.pyzH 7"
	push "kruk_idle.pyzH 8"
	push "flight.pyzH 9"
	push "medalion_w_dziobie.pyzH 10"
	cthis imgs=
	cthis butpopexit
	push "e1_kruk_odlecial"
	call clsave,bis
	neg
	cmp0
	je l6189
	push "loop"
	call ankruk_idle,play
	push "sndkrukodlecial"
	push "kinnat_28"
	cthis newsndfree
	push "onfinish"
	push "mg04_lodz0"
	call sndkrukodlecial,addmethod
l6189:
	push "taken_krysztal_blue_2"
	call clsave,bis
	neg
	cmp0
	je l6191
	call ankrysztal_blue,show
	push "ankrysztal_blue"
	cthis setasitemtopck
	push "e1_kruk_odlecial"
	call clsave,bis
	neg
	cmp0
	je l6193
	push 1
	call ankrysztal_blue,disable=
	jmp l6192
l6193:
	push 0
	call ankrysztal_blue,disable=
l6192:
l6191:
	call ankruk_idle,mg04_lodz1
	call anflight,mg04_lodz3
	push "sndlocked"
	push "kinnat_56"
	cthis newsndfree
	push "butmoveon"
	push "mg04_lodz5"
	call anmedalion_wlozony,addmethod
	push "butmoveoff"
	push "mg04_lodz6"
	call anmedalion_wlozony,addmethod
	push "isbutin"
	push "mg04_lodz7"
	call anmedalion_wlozony,addmethod
	push "butclick"
	push "mg04_lodz8"
	call anmedalion_wlozony,addmethod
	push "anmedalion_wlozony"
	call butgame,add
	push "GAME_sgmlastscene"
	push "gamead04b_lodz0"
	call clsave,is
	cmp0
	je l6211
	cthis advsetstdstate
	jmp l6210
l6211:
	push "mg04_lodz9"
	call ccs,enter
l6210:
	end method
	method mg04_lodz0
	cthis advsetstdstate
	push GAME
	spushs
	push "OB4"
	spop $a
	call [$a],show_objective
	end method
	method mg04_lodz1
	cthis Button_isin
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg04_lodz2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg04_lodz2
	cthis advstdstate
	neg
	cmp0
	jne l6196
	push "e1_kruk_odlecial"
	call clsave,bis
	jmp l6197
l6195:
	push 0
	jmp l6197
l6196:
	push 1
l6197:
	cmp0
	je l6198
	ret
l6198:
	cthis hide
	push "e1_kruk_odlecial"
	call clsave,bset
	push 0
	call ankruk_idle,stop
	push 0
	call anflight,play
	push "state_kruk_odlatuje"
	pop sgmstate
	push 0
	call ankrysztal_blue,disable=
	end method
	method mg04_lodz3
	push "onfinish"
	push "mg04_lodz4"
	cthis addmethod
	end method
	method mg04_lodz4
	cthis hide
	push "sndkrukodlecial"
	cthis cbplay
	end method
	method mg04_lodz5
	cthis advstdstate
	neg
	cmp0
	je l6200
	ret
l6200:
	push "e1_lodz_odblokowana"
	call clsave,bis
	neg
	cmp0
	je l6202
	push "use"
	call advmouse,set
	jmp l6201
l6202:
	call advmouse,setstd
l6201:
	end method
	method mg04_lodz6
	cthis advstdstate
	neg
	cmp0
	je l6204
	ret
l6204:
	call advmouse,setstd
	end method
	method mg04_lodz7
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	end method
	method mg04_lodz8
	cthis advstdstate
	cmp0
	je l6206
	push "e1_lodz_odblokowana"
	call clsave,bis
	neg
	jmp l6208
l6206:
	push 0
	jmp l6208
l6207:
	push 1
l6208:
	cmp0
	je l6209
	push "sndlocked"
	cthis crplay
l6209:
	end method
	method mg04_lodz9
	push "e1_lodz_1st_click"
	call clsave,bis
	neg
	cmp0
	je l6213
	push "e1_lodz_1st_click"
	call clsave,bset
	push "onfinish"
	push "mg04_lodz10"
	call sndlocked,addmethod
	push "sndlocked"
	cthis cbplay
	jmp l6212
l6213:
	push "onfinish"
	push "mg04_lodz11"
	call anbase,addmethod
	cthis advsetstdstate
l6212:
	end method
	method mg04_lodz10
	push "ad04b_lodz"
	push "gamead04b_lodz0"
	cthis gotoadv
	end method
	method mg04_lodz11
	push "ad05_lodz"
	push "gamead05_lodz0"
	cthis stdexitdefadv
	end method
	method ankrysztal_blue_TAKE
	cthis check_finished
	push "krysztal_blue_2"
	cthis item_gotocenter
	end method
	method ankrysztal_blue_INPCK
	push "krysztal_blue_2"
	cthis addtopck
	cthis mend
	end method
	method mend
	push "ad04_brzegjeziora"
	push "gamead04_brzegjeziora0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "e1_kruk_odlecial"
	call clsave,bis
	neg
	cmp0
	je l6215
	push "ankruk_idle"
	cthis showhint
	ret
l6215:
	push "anpopexit"
	cthis showhint
	end method
	method USE_kluczlodz
	call mouse,getpos
	push 0
	push 0
	call anmedalion_wlozony,isin
	cmp0
	je l6217
	push "e1_lodz_odblokowana"
	call clsave,bset
	push "anmedalion_wlozony"
	call butgame,removebut
	call butgame,onmousemove
	push "kluczlodz"
	cthis removefrompck
	push "state_openlodz"
	pop sgmstate
	push "open"
	call anbase,playsmooth
	push "open"
	call anmedalion_wlozony,playsmooth
	jmp l6216
l6217:
	cthis advsetstdstate
	cthis item_gotopck
l6216:
	end method
	end game

	game ho09intro
	parent Banshee
	method init
	push "ho09_intro"
	clparent Banshee,init
	push A
	push "bkg.pyz 1"
	push "robak1.pyzH 2"
	push "robak2.pyzH 3"
	push "robak3.pyzH 4"
	push "robak4.pyzH 5"
	push "robak5.pyzH 6"
	push "robak6.pyzH 7"
	push "robak7.pyz 8"
	push "idle.pyz 9"
	push "fight.pyzH 10"
	push "flight.pyzH 11"
	push "swiatlo.pyz 12"
	cthis imgs=
	push "loop"
	call anidle,play
	call answiatlo,anopacityframe
	push "new"
	call answiatlo,play
	call anbkg,ho09intro0
	call anfight,ho09intro4
	call anflight,ho09intro6
	new ImgRect,recexit
	call recexit,ho09intro9
	push "use"
	call advmouse,set
	cthis stdstart
	end method
	method ho09intro0
	cthis Button_isin
	push "butmoveon"
	push "ho09intro1"
	cthis addmethod
	push "butmoveoff"
	push "ho09intro2"
	cthis addmethod
	push "butclick"
	push "ho09intro3"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method ho09intro1
	cthis advstdstate
	neg
	cmp0
	je l6219
	ret
l6219:
	push "e1_robaki_zjedzone"
	call clsave,bis
	neg
	cmp0
	je l6221
	push "use"
	call advmouse,set
	jmp l6220
l6221:
	call advmouse,setstd
l6220:
	end method
	method ho09intro2
	cthis advstdstate
	neg
	cmp0
	je l6223
	ret
l6223:
	call advmouse,setstd
	end method
	method ho09intro3
	cthis advstdstate
	neg
	cmp0
	je l6225
	ret
l6225:
	call anfight,isvisible
	cmp0
	jne l6228
	push "e1_robaki_zjedzone"
	call clsave,bis
	jmp l6229
l6227:
	push 0
	jmp l6229
l6228:
	push 1
l6229:
	cmp0
	je l6230
	ret
l6230:
	call anidle,hide
	push 0
	call anidle,stop
	push 0
	call anfight,play
	end method
	method ho09intro4
	push "onfinish"
	push "ho09intro5"
	cthis addmethod
	end method
	method ho09intro5
	cthis hide
	push "e1_robaki_zjedzone"
	call clsave,bis
	neg
	cmp0
	je l6232
	push 0
	call anidle,play
l6232:
	end method
	method ho09intro6
	push "onfinish"
	push "ho09intro7"
	cthis addmethod
	push "onendframe"
	push "ho09intro8"
	cthis addmethod
	end method
	method ho09intro7
	cthis mend
	end method
	method ho09intro8
	localint $1
	cthis framenr
	pop $1
	localint $2
	push 1
	popax
	sub 0,$a
	cthis nofframes
	pop $2
	push $1
	push 35
	cmpje
	cmp0
	je l6234
	call anrobak1,hide
l6234:
	push $1
	push 55
	cmpje
	cmp0
	je l6236
	call anrobak2,hide
l6236:
	push $1
	push 72
	cmpje
	cmp0
	je l6238
	call anrobak3,hide
l6238:
	push $1
	push 82
	cmpje
	cmp0
	je l6240
	call anrobak4,hide
l6240:
	push $1
	push 94
	cmpje
	cmp0
	je l6242
	call anrobak5,hide
l6242:
	push $1
	push 110
	cmpje
	cmp0
	je l6244
	call anrobak6,hide
l6244:
	push $1
	push 125
	cmpje
	cmp0
	je l6246
	call anrobak7,hide
l6246:
	end method
	method ho09intro9
	cthis Button_isin
	cthis Button_moveoffms
	push "butmoveon"
	push "ho09intro10"
	cthis addmethod
	push 0
	push 0.8
	push igmapph
	pop $b
	popax
	mul $a,$b
	push igmappw
	push igmapph
	cthis setrect
	push 300
	cthis setz
	cthis getname
	call butgame,add
	push "butclick"
	push "ho09intro11"
	cthis addmethod
	end method
	method ho09intro10
	push "godd"
	call advmouse,set
	end method
	method ho09intro11
	cthis advstdstate
	neg
	cmp0
	je l6248
	ret
l6248:
	push "ad04_brzegjeziora"
	push "gamead04_brzegjeziora0"
	cthis stdexitdefadv
	end method
	method USE_puszka_robaki
	cthis advsetstdstate
	push "e1_HO09_Brzegjeziora_after_intro"
	call clsave,bset
	call mouse,getpos
	push 1
	push 1
	call anbkg,isin
	cmp0
	je l6250
	call anfight,isvisible
	cmp0
	je l6252
	cthis advsetstdstate
	cthis item_gotopck
	ret
l6252:
	push "puszka_robaki"
	cthis removefrompck
	push "e1_robaki_zjedzone"
	call clsave,bset
	call anidle,hide
	push 0
	call anidle,stop
	push 0
	call anflight,play
	localint $1
	push 1
	pop $1
l6253:
	push $1
	push 8
	cmpjl
	cmp0
	je l6254
	jmp l6256
l6255:
	add $1,1
	pop $1
	jmp l6253
l6256:
	push "anrobak"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 100
	push $1
	pop $b
	popax
	mul $a,$b
	push "null"
	spop $a
	call [$a],anfadein
	jmp l6255
l6254:
	jmp l6249
l6250:
	cthis advsetstdstate
	cthis item_gotopck
l6249:
	end method
	method mend
	push "HO09_Brzegjeziora"
	cthis stdexit
	end method
	method HINT_CLICK
	push "e1_HO09_Brzegjeziora_after_intro"
	call clsave,bis
	neg
	cmp0
	je l6258
	push "anidle"
	cthis showhint
	ret
l6258:
	push "recexit"
	cthis showhint
	end method
	end game

	game mg06krople
	parent Banshee
	method init
	push "mg06_krople"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "podklad.pyz 2"
	push "tor_4.pyz 3"
	push "tor_3.pyz 5"
	push "tor_2.pyz 6"
	push "tor_1.pyz 7"
	push "tor1_btn.pyz 8"
	push "tor2_btn.pyz 9"
	push "tor3_btn.pyz 10"
	push "tor4_btn.pyz 11"
	push "final_glow.pyzH 12"
	push "ramka.pyz 13"
	push "popexit.pyz 14"
	cthis imgs=
	cthis butpopexit
	push 1
	call anfinal_glow,setdrawmode
	new vector,right_sequence
	new int,good_sequence
	push 0
	pop good_sequence
	push "begin"
	push 0
	push 2200
	push 1050
	push 1975
	call right_sequence,beginadd
	new vector,sequence
	push "tim1"
	push 0
	call right_sequence,get
	push "mg06krople0"
	cthis timer=
	push "tim2"
	push 1
	call right_sequence,get
	push "mg06krople1"
	cthis timer=
	push "tim3"
	push 2
	call right_sequence,get
	push "mg06krople2"
	cthis timer=
	push "tim4"
	push 3
	call right_sequence,get
	push "mg06krople3"
	cthis timer=
	call anpodklad,mg06krople4
	call imgbkg,mg06krople5
	call antor1_btn,mg06krople7
	call antor2_btn,mg06krople11
	call antor3_btn,mg06krople15
	call antor4_btn,mg06krople19
	call antor_1,mg06krople23
	call antor_2,mg06krople25
	call antor_3,mg06krople27
	call antor_4,mg06krople29
	cthis stdstart
	end method
	method mg06krople0
	push 0
	call antor_1,play
	call antor1_btn,hide
	end method
	method mg06krople1
	push 0
	call antor_2,play
	call antor2_btn,hide
	end method
	method mg06krople2
	push 0
	call antor_3,play
	call antor3_btn,hide
	end method
	method mg06krople3
	push 0
	call antor_4,play
	call antor4_btn,hide
	end method
	method mg06krople4
	cthis Button_isinalpha
	cthis getname
	call butgame,add
	end method
	method mg06krople5
	cthis Button_isinalpha
	push "butclick"
	push "mg06krople6"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg06krople6
	cthis advstdstate
	neg
	cmp0
	je l6260
	ret
l6260:
	cthis mend
	end method
	method mg06krople7
	cthis Button_isinalpha
	push A
	push "selected"
	push 0
	cthis vars2
	push "butmoveon"
	push "mg06krople8"
	cthis addmethod
	push "butmoveoff"
	push "mg06krople9"
	cthis addmethod
	push "butclick"
	push "mg06krople10"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg06krople8
	call advmouse,setbut
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	end method
	method mg06krople9
	call advmouse,setstd
	push selected
	cmp0
	je l6262
	push 1
	popax
	sub 0,$a
	push 2
	cthis setframe
	jmp l6261
l6262:
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
l6261:
	end method
	method mg06krople10
	cthis advstdstate
	neg
	cmp0
	jne l6265
	push good_sequence
	jmp l6266
l6264:
	push 0
	jmp l6266
l6265:
	push 1
l6266:
	cmp0
	je l6267
	ret
l6267:
	push selected
	neg
	cmp0
	je l6269
	push 1
	pop selected
	push 1
	popax
	sub 0,$a
	push 2
	cthis setframe
	push 1
	cthis add_to_sequence
l6269:
	cthis play_all_selected
	end method
	method mg06krople11
	cthis Button_isinalpha
	push A
	push "selected"
	push 0
	cthis vars2
	push "butmoveon"
	push "mg06krople12"
	cthis addmethod
	push "butmoveoff"
	push "mg06krople13"
	cthis addmethod
	push "butclick"
	push "mg06krople14"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg06krople12
	call advmouse,setbut
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	end method
	method mg06krople13
	call advmouse,setstd
	push selected
	cmp0
	je l6271
	push 1
	popax
	sub 0,$a
	push 2
	cthis setframe
	jmp l6270
l6271:
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
l6270:
	end method
	method mg06krople14
	cthis advstdstate
	neg
	cmp0
	jne l6274
	push good_sequence
	jmp l6275
l6273:
	push 0
	jmp l6275
l6274:
	push 1
l6275:
	cmp0
	je l6276
	ret
l6276:
	push selected
	neg
	cmp0
	je l6278
	push 1
	pop selected
	push 1
	popax
	sub 0,$a
	push 2
	cthis setframe
	push 4
	cthis add_to_sequence
l6278:
	cthis play_all_selected
	end method
	method mg06krople15
	cthis Button_isinalpha
	push A
	push "selected"
	push 0
	cthis vars2
	push "butmoveon"
	push "mg06krople16"
	cthis addmethod
	push "butmoveoff"
	push "mg06krople17"
	cthis addmethod
	push "butclick"
	push "mg06krople18"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg06krople16
	call advmouse,setbut
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	end method
	method mg06krople17
	call advmouse,setstd
	push selected
	cmp0
	je l6280
	push 1
	popax
	sub 0,$a
	push 2
	cthis setframe
	jmp l6279
l6280:
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
l6279:
	end method
	method mg06krople18
	cthis advstdstate
	neg
	cmp0
	jne l6283
	push good_sequence
	jmp l6284
l6282:
	push 0
	jmp l6284
l6283:
	push 1
l6284:
	cmp0
	je l6285
	ret
l6285:
	push selected
	neg
	cmp0
	je l6287
	push 1
	pop selected
	push 1
	popax
	sub 0,$a
	push 2
	cthis setframe
	push 2
	cthis add_to_sequence
l6287:
	cthis play_all_selected
	end method
	method mg06krople19
	cthis Button_isinalpha
	push A
	push "selected"
	push 0
	cthis vars2
	push "butmoveon"
	push "mg06krople20"
	cthis addmethod
	push "butmoveoff"
	push "mg06krople21"
	cthis addmethod
	push "butclick"
	push "mg06krople22"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg06krople20
	call advmouse,setbut
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	end method
	method mg06krople21
	call advmouse,setstd
	push selected
	cmp0
	je l6289
	push 1
	popax
	sub 0,$a
	push 2
	cthis setframe
	jmp l6288
l6289:
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
l6288:
	end method
	method mg06krople22
	cthis advstdstate
	neg
	cmp0
	jne l6292
	push good_sequence
	jmp l6293
l6291:
	push 0
	jmp l6293
l6292:
	push 1
l6293:
	cmp0
	je l6294
	ret
l6294:
	push selected
	neg
	cmp0
	je l6296
	push 1
	pop selected
	push 1
	popax
	sub 0,$a
	push 2
	cthis setframe
	push 3
	cthis add_to_sequence
l6296:
	cthis play_all_selected
	end method
	method mg06krople23
	push "onfinish"
	push "mg06krople24"
	cthis addmethod
	end method
	method mg06krople24
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	call antor1_btn,show
	push 1
	popax
	sub 0,$a
	push 0
	call antor1_btn,setframe
	end method
	method mg06krople25
	push "onfinish"
	push "mg06krople26"
	cthis addmethod
	end method
	method mg06krople26
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	call antor2_btn,show
	push 1
	popax
	sub 0,$a
	push 0
	call antor2_btn,setframe
	end method
	method mg06krople27
	push "onfinish"
	push "mg06krople28"
	cthis addmethod
	end method
	method mg06krople28
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	call antor3_btn,show
	push 1
	popax
	sub 0,$a
	push 0
	call antor3_btn,setframe
	end method
	method mg06krople29
	push "onfinish"
	push "mg06krople30"
	cthis addmethod
	end method
	method mg06krople30
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	call antor4_btn,show
	push 1
	popax
	sub 0,$a
	push 0
	call antor4_btn,setframe
	end method
	method mend
	push "ad06_posagmamy"
	push "gamead06_posagmamy0"
	cthis stdexitdefadv
	end method
	method play_all_selected
	call antor1_btn,selected
	cmp0
	je l6298
	call antor2_btn,selected
	cmp0
	je l6298
	call antor3_btn,selected
	cmp0
	je l6298
	call antor4_btn,selected
	jmp l6300
l6298:
	push 0
	jmp l6300
l6299:
	push 1
l6300:
	cmp0
	je l6301
	push 1
	pop good_sequence
	localint $1
	push 1
	pop $1
l6302:
	push $1
	push 4
	cmpjle
	cmp0
	je l6303
	jmp l6305
l6304:
	add $1,1
	pop $1
	jmp l6302
l6305:
	push $1
	push 1
	pop $b
	popax
	sub $a,$b
	push $1
	push 1
	pop $b
	popax
	sub $a,$b
	call sequence,get
	cmpje
	neg
	cmp0
	je l6307
	push 0
	pop good_sequence
l6307:
	push "antor"
	push $1
	pop $b
	popax
	add $a,$b
	push "_btn"
	pop $b
	popax
	add $a,$b
	spushs
	push 0
	spop $a
	call [$a],selected=
	push "antor"
	push $1
	pop $b
	popax
	add $a,$b
	push "_btn"
	pop $b
	popax
	add $a,$b
	spushs
	push 1
	popax
	sub 0,$a
	push 0
	spop $a
	call [$a],setframe
	localint $2
	push $1
	push 1
	pop $b
	popax
	sub $a,$b
	call sequence,get
	pop $2
	localint $3
	push $2
	call right_sequence,get
	pop $3
	localdef $4
	push "tim"
	push $1
	pop $b
	popax
	add $a,$b
	pop $4
	push $4
	spushs
	push $3
	spop $a
	call [$a],delay
	push $4
	spushs
	spop $a
	call [$a],play
	jmp l6304
l6303:
	push good_sequence
	cmp0
	je l6309
	push "timfinish"
	push 4000
	push "mg06krople31"
	cthis timer=
	push "state_finish"
	pop sgmstate
	call timfinish,play
l6309:
	call sequence,free
l6301:
	end method
	method mg06krople31
	push 500
	push "mg06krople32"
	call anfinal_glow,anfadein
	end method
	method mg06krople32
	push "e1_krople_rozwiazane"
	call clsave,bset
	call anfinal_glow,hide
	call mouse,hide
	call engine,redrawnoblit
	push "e1_mg06_krople_adv"
	push 0
	call clsave,set
	cthis set_mg_finished
	push "mg06_huby"
	cthis stdexit
	call mouse,show
	end method
	method add_to_sequence
	localint $1
	pop $1
	push $1
	push 1
	pop $b
	popax
	sub $a,$b
	call sequence,add
	end method
	method HINT_CLICK
	push "e1_krople_rozwiazane"
	call clsave,bis
	neg
	cmp0
	je l6311
	localint $1
	push 4
	spushs
	spop $h
	call $h,rand
	push 1
	pop $b
	popax
	add $a,$b
	pop $1
	push "antor"
	push $1
	pop $b
	popax
	add $a,$b
	push "_btn"
	pop $b
	popax
	add $a,$b
	cthis showhint
	ret
l6311:
	push "taken_sekator"
	call clsave,bis
	neg
	cmp0
	je l6313
	push "anpopexit"
	cthis showhint
l6313:
	end method
	end game

	game mg06_huby
	parent Banshee
	method init
	push "mg06_huby"
	clparent Banshee,init
	push "popexit.pyz 7"
	cthis img=
	push "e1_mg06_krople_adv"
	call clsave,bis
	cmp0
	je l6315
	push "bkg.jpg 1"
	cthis img=
	jmp l6314
l6315:
	new img,imgbkg
	push "imgbkg"
	call ccs,cloneto
	push 1
	call imgbkg,setz
	push 255
	call imgbkg,transparency
	call imgbkg,show
l6314:
	cthis butpopexit
	push "null"
	cthis load_mg
	push "ansekator"
	cthis setasitemtopck
	push "onfinish"
	push "mg06_huby0"
	call anwypalanie,addmethod
	cthis stdstart
	end method
	method mg06_huby0
	push "e1_huby_wypalone"
	call clsave,bset
	cthis hide
	call anwypalone,show
	call ansekator,show
	end method
	method load_mg
	localstring $1
	pop $1
	push "scripts/mg06_huby/"
	cthis switch_path
	push A
	push "przed_wypaleniem.pyz 2"
	push "wypalanie.pyzH 3"
	push "wypalone.pyzH 4"
	push "sekator.pyzH 5"
	push "ramka.pyz 6"
	cthis imgs=
	push $1
	push "null"
	cmpjne
	cmp0
	je l6317
	call gameapi,getgamename
	spushs
	push "img"
	push $1
	spop $a
	call [$a],varnew
	push $1
	spushs
	push "anprzed_wypaleniem"
	spop $a
	call [$a],clone
	call anprzed_wypaleniem,hide
	call anramka,hide
l6317:
	push "taken_sekator"
	call clsave,bis
	cmp0
	je l6319
	jmp l6318
l6319:
	call ansekator,show
	push $1
	push "null"
	cmpjne
	cmp0
	je l6321
	push $1
	spushs
	push "ansekator"
	spop $a
	call [$a],blit
	call ansekator,hide
l6321:
l6318:
	push "e1_krople_rozwiazane"
	call clsave,bis
	cmp0
	je l6323
	push "e1_huby_wypalone"
	call clsave,bis
	neg
	jmp l6325
l6323:
	push 0
	jmp l6325
l6324:
	push 1
l6325:
	cmp0
	je l6326
	call anprzed_wypaleniem,hide
	push $1
	push "null"
	cmpjne
	cmp0
	je l6328
	push $1
	spushs
	push "anwypalanie"
	spop $a
	call [$a],blit
	jmp l6327
l6328:
	push "wypalanie"
	call anwypalanie,play
	push "e1_huby_wypalone"
	call clsave,bset
l6327:
	jmp l6322
l6326:
	push "e1_huby_wypalone"
	call clsave,bis
	cmp0
	je l6330
	call anprzed_wypaleniem,hide
	call anwypalanie,hide
	push $1
	push "null"
	cmpjne
	cmp0
	je l6332
	push $1
	spushs
	push "anwypalone"
	spop $a
	call [$a],blit
	jmp l6331
l6332:
	call anwypalone,show
l6331:
l6330:
l6322:
	push $1
	push "null"
	cmpjne
	cmp0
	je l6334
	push $1
	spushs
	push "anramka"
	spop $a
	call [$a],blit
	call anramka,hide
	push $1
	spushs
	spop $a
	call [$a],hide
l6334:
	cthis restore_path
	end method
	method ansekator_TAKE
	push "e1_huby_wypalone"
	call clsave,bis
	neg
	cmp0
	je l6336
	ret
l6336:
	push "sekator"
	cthis isvisible_itempopup
	neg
	cmp0
	je l6338
	push "rotostart"
	call ansekator,play
	push "sekator"
	push "ansekator"
	cthis show_itempopup
	cthis set_mg_finished
	jmp l6337
l6338:
	cthis item_gotocenter
	push "sekator"
	cthis hide_itempopup
l6337:
	end method
	method popup_sekator_clickexit
	push "ansekator"
	call butgame,sclicked=
	cthis ansekator_TAKE
	end method
	method ansekator_INPCK
	push "sekator"
	cthis addtopck
	end method
	method mend
	push "ad06_posagmamy"
	push "gamead06_posagmamy0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "taken_sekator"
	call clsave,bis
	neg
	cmp0
	je l6340
	push "e1_krople_rozwiazane"
	call clsave,bis
	jmp l6342
l6340:
	push 0
	jmp l6342
l6341:
	push 1
l6342:
	cmp0
	je l6343
	push "ansekator"
	cthis showhint
	ret
l6343:
	push "anpopexit"
	cthis showhint
	end method
	end game

	game mg07_gargulec
	parent Banshee
	method init
	push "mg07_gargulec"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "background.pyz 2"
	push "items_mask.pyzH 3"
	push "swiatelko.pyz 3"
	push "kawalek_rzezby_3.pyzH 4"
	push "kawalek_rzezby_2.pyzH 5"
	push "kawalek_rzezby_1.pyzH 6"
	push "efekt.pyzH 7"
	push "ramka.pyz 8"
	push "popexit.pyz 9"
	cthis imgs=
	push 1
	call anefekt,setdrawmode
	cthis butpopexit
	call answiatelko,anopacityframe
	push 1
	call answiatelko,play
	call imgbkg,mg07_gargulec0
	call anitems_mask,mg07_gargulec3
	cthis stdstart
	push "e1_ankawalek_rzezby_1_on"
	call clsave,bis
	cmp0
	je l6353
	call ankawalek_rzezby_1,show
l6353:
	push "e1_ankawalek_rzezby_2_on"
	call clsave,bis
	cmp0
	je l6355
	call ankawalek_rzezby_2,show
l6355:
	push "e1_ankawalek_rzezby_3_on"
	call clsave,bis
	cmp0
	je l6357
	call ankawalek_rzezby_3,show
l6357:
	end method
	method mg07_gargulec0
	push "isbutin"
	push "mg07_gargulec1"
	cthis addmethod
	push "butclick"
	push "mg07_gargulec2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg07_gargulec1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anbackground,isin
	neg
	end method
	method mg07_gargulec2
	cthis advstdstate
	neg
	cmp0
	je l6345
	ret
l6345:
	cthis mend
	end method
	method mg07_gargulec3
	cthis Button_isinvis
	push "butmoveon"
	push "mg07_gargulec4"
	cthis addmethod
	push "butmoveoff"
	push "mg07_gargulec5"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg07_gargulec4
	cthis advstdstate
	neg
	cmp0
	je l6347
	ret
l6347:
	push "e1_ad07_maska_naprawiona"
	call clsave,bis
	neg
	cmp0
	je l6349
	push "use"
	call advmouse,set
	jmp l6348
l6349:
	call advmouse,setstd
l6348:
	end method
	method mg07_gargulec5
	cthis advstdstate
	neg
	cmp0
	je l6351
	ret
l6351:
	call advmouse,setstd
	end method
	method USE_kawalek_rzezby1
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call anitems_mask,isin
	cmp0
	je l6359
	push "kawalek_rzezby1"
	cthis removefrompck
	push 800
	push "null"
	call ankawalek_rzezby_1,anfadein
	push "e1_ankawalek_rzezby_1_on"
	call clsave,bset
	cthis check_all_done
	cmp0
	je l6361
	cthis all_done
l6361:
	jmp l6358
l6359:
	cthis item_gotopck
l6358:
	call anitems_mask,butmoveon
	end method
	method USE_kawalek_rzezby2
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call anitems_mask,isin
	cmp0
	je l6363
	push "kawalek_rzezby2"
	cthis removefrompck
	push 800
	push "null"
	call ankawalek_rzezby_2,anfadein
	push "e1_ankawalek_rzezby_2_on"
	call clsave,bset
	cthis check_all_done
	cmp0
	je l6365
	cthis all_done
l6365:
	jmp l6362
l6363:
	cthis item_gotopck
l6362:
	call anitems_mask,butmoveon
	end method
	method USE_kawalek_rzezby3
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call anitems_mask,isin
	cmp0
	je l6367
	push "kawalek_rzezby3"
	cthis removefrompck
	push 800
	push "null"
	call ankawalek_rzezby_3,anfadein
	push "e1_ankawalek_rzezby_3_on"
	call clsave,bset
	cthis check_all_done
	cmp0
	je l6369
	cthis all_done
l6369:
	call anitems_mask,butmoveon
	jmp l6366
l6367:
	cthis item_gotopck
l6366:
	call anitems_mask,butmoveon
	end method
	method check_all_done
	push "e1_ankawalek_rzezby_1_on"
	call clsave,bis
	cmp0
	je l6371
	push "e1_ankawalek_rzezby_2_on"
	call clsave,bis
	cmp0
	je l6371
	push "e1_ankawalek_rzezby_3_on"
	call clsave,bis
	jmp l6373
l6371:
	push 0
	jmp l6373
l6372:
	push 1
l6373:
	cmp0
	je l6374
	push 1
	ret
	jmp l6370
l6374:
	push 0
	ret
l6370:
	end method
	method all_done
	push "e1_ad07_maska_naprawiona"
	call clsave,bset
	push 1600
	push "efekt_fadout"
	call anefekt,anfadein
	cthis set_mg_finished
	end method
	method efekt_fadout
	push 1000
	push "mend"
	call anefekt,anfadeout
	end method
	method HINT_CLICK
	call ankawalek_rzezby_1,isvisible
	neg
	cmp0
	je l6376
	push "ankawalek_rzezby_1"
	cthis showhint
	ret
l6376:
	call ankawalek_rzezby_2,isvisible
	neg
	cmp0
	je l6378
	push "ankawalek_rzezby_2"
	cthis showhint
	ret
l6378:
	call ankawalek_rzezby_3,isvisible
	neg
	cmp0
	je l6380
	push "ankawalek_rzezby_3"
	cthis showhint
	ret
l6380:
	push "anpopexit"
	cthis showhint
	end method
	method mend
	push "ad07_alejadrzew"
	push "gamead07_alejadrzew0"
	cthis stdexitdefadv
	end method
	end game

	game mg07_gargulecjajo
	parent Banshee
	method init
	push "mg07_gargulecjajo"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "base.pyz 2"
	push "oczy.pyzH 3"
	push "base2.pyzH 4"
	push "jajo.pyzH 6"
	push "ramka.pyz 6"
	push "popexit.pyz 7"
	cthis imgs=
	push 1
	call anoczy,setdrawmode
	cthis butpopexit
	cthis stdstart
	call anbase,mg07_gargulecjajo0
	call imgbkg,mg07_gargulecjajo1
	cthis butpopexit
	cthis stdstart
	call anjajo,mg07_gargulecjajo3
	new Film,filmb
	push "mus"
	call filmb,musicclass=
	push "onfinish"
	push "mg07_gargulecjajo6"
	call filmb,addmethod
	push "scripts/cs09_gargijajo/"
	push "film"
	call filmb,load
	call filmb,showfirstframe
	push 5
	call filmb,setz
	call anbase,getpx
	call anbase,getpy
	call filmb,setpos
	call filmb,hide
	push "taken_jajo"
	call clsave,bis
	neg
	cmp0
	je l6388
	push "e1_mg07_gargulec_finished"
	call clsave,bis
	jmp l6390
l6388:
	push 0
	jmp l6390
l6389:
	push 1
l6390:
	cmp0
	je l6391
	push "state_finish"
	pop sgmstate
	push "anjajo"
	cthis setasitemtopck
	push "anjajo"
	call butgame,removebut
	cthis animacja
	cthis set_mg_finished
l6391:
	end method
	method mg07_gargulecjajo0
	cthis Button_isinalpha
	cthis getname
	call butgame,add
	end method
	method mg07_gargulecjajo1
	cthis Button_isinalpha
	push "butclick"
	push "mg07_gargulecjajo2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg07_gargulecjajo2
	cthis advstdstate
	neg
	cmp0
	je l6382
	ret
l6382:
	cthis mend
	end method
	method mg07_gargulecjajo3
	push "isbutin"
	push "mg07_gargulecjajo4"
	cthis addmethod
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg07_gargulecjajo5"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg07_gargulecjajo4
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	cthis isin
	end method
	method mg07_gargulecjajo5
	cthis advstdstate
	neg
	cmp0
	je l6384
	ret
l6384:
	push "eye_anim"
	pop sgmstate
	push 700
	push "oczy_fadeout"
	call anoczy,anfadein
	end method
	method mg07_gargulecjajo6
	push "jajo"
	cthis isvisible_itempopup
	neg
	cmp0
	je l6386
	cthis hide
l6386:
	call anbase2,show
	push "jajo"
	push "anjajo"
	cthis show_itempopup
	end method
	method oczy_fadeout
	push 700
	push "mg07_gargulecjajo7"
	call anoczy,anfadeout
	end method
	method mg07_gargulecjajo7
	cthis advsetstdstate
	end method
	method animacja
	call anjajo,hide
	push "tim1"
	push 1000
	push "mg07_gargulecjajo8"
	cthis timplay
	end method
	method mg07_gargulecjajo8
	call filmb,play
	end method
	method anjajo_TAKE
	cthis item_gotocenter
	push "jajo"
	cthis hide_itempopup
	end method
	method popup_jajo_clickexit
	push "anjajo"
	call butgame,sclicked=
	cthis anjajo_TAKE
	end method
	method anjajo_INPCK
	push "jajo"
	cthis addtopck
	cthis mend
	end method
	method HINT_CLICK
	push "taken_jajo"
	call clsave,bis
	neg
	cmp0
	je l6393
	push "anjajo"
	cthis showhint
	ret
l6393:
	push "anpopexit"
	cthis showhint
	end method
	method mend
	push "ad07_alejadrzew"
	push "gamead07_alejadrzew0"
	cthis stdexitdefadv
	end method
	end game

	game mg07_skrzynia
	parent Banshee
	method init
	push "mg07_skrzynia"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "zasuwa1_open.pyzH 3"
	push "zasuwa2_open.pyzH 4"
	push "ramka.pyz 5"
	push "popexit.pyz 6"
	push "skrzynia_open.pyzH 7"
	push "kilof.pyzH 8"
	cthis imgs=
	push "ankilof"
	cthis setasitemtopck
	call anpopup_bkg,mg07_skrzynia0
	call imgbkg,mg07_skrzynia1
	cthis butpopexit
	cthis stdstart
	call anzasuwa1_open,mg07_skrzynia3
	call anzasuwa2_open,mg07_skrzynia6
	push "e1_mg07_skrzynia_opened"
	call clsave,bis
	cmp0
	je l6415
	push 1
	call anzasuwa1_open,disable=
	push 1
	call anzasuwa2_open,disable=
	call anskrzynia_open,show
	push "taken_kilof"
	call clsave,bis
	neg
	cmp0
	je l6417
	call ankilof,show
	push 1
	call ankilof,enabled=
l6417:
	jmp l6414
l6415:
	push "e1_mg07_skrzynia_zasuwa_1_opened"
	call clsave,bis
	cmp0
	je l6419
	call anzasuwa1_open,show
	push 1
	call anzasuwa1_open,disable=
l6419:
	push "e1_mg07_skrzynia_zasuwa_2_opened"
	call clsave,bis
	cmp0
	je l6421
	call anzasuwa2_open,show
	push 1
	call anzasuwa2_open,disable=
l6421:
l6414:
	end method
	method mg07_skrzynia0
	cthis Button_isinalpha
	cthis getname
	call butgame,add
	end method
	method mg07_skrzynia1
	cthis Button_isinalpha
	push "butclick"
	push "mg07_skrzynia2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg07_skrzynia2
	cthis advstdstate
	neg
	cmp0
	je l6395
	ret
l6395:
	cthis mend
	end method
	method mg07_skrzynia3
	push "isbutin"
	push "mg07_skrzynia4"
	cthis addmethod
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg07_skrzynia5"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg07_skrzynia4
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 1
	cthis isin
	end method
	method mg07_skrzynia5
	cthis advstdstate
	neg
	cmp0
	je l6397
	ret
l6397:
	push "e1_mg07_skrzynia_zasuwa_1_opened"
	call clsave,bis
	neg
	cmp0
	je l6399
	cthis show
	push "e1_mg07_skrzynia_zasuwa_1_opened"
	call clsave,bset
	push 1
	cthis disable=
	jmp l6398
l6399:
	push "e1_mg07_skrzynia_zasuwa_1_opened"
	call clsave,bis
	cmp0
	je l6401
	push "e1_mg07_skrzynia_zasuwa_2_opened"
	call clsave,bis
	jmp l6403
l6401:
	push 0
	jmp l6403
l6402:
	push 1
l6403:
	cmp0
	je l6404
	push "e1_mg07_skrzynia_opened"
	call clsave,bset
	cthis skrzynia_open
l6404:
l6398:
	end method
	method mg07_skrzynia6
	push "isbutin"
	push "mg07_skrzynia7"
	cthis addmethod
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg07_skrzynia8"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg07_skrzynia7
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 1
	cthis isin
	end method
	method mg07_skrzynia8
	cthis advstdstate
	neg
	cmp0
	je l6406
	ret
l6406:
	push "e1_mg07_skrzynia_zasuwa_2_opened"
	call clsave,bis
	neg
	cmp0
	je l6408
	cthis show
	push "e1_mg07_skrzynia_zasuwa_2_opened"
	call clsave,bset
	push 1
	cthis disable=
	jmp l6407
l6408:
	push "e1_mg07_skrzynia_zasuwa_1_opened"
	call clsave,bis
	cmp0
	je l6410
	push "e1_mg07_skrzynia_zasuwa_2_opened"
	call clsave,bis
	jmp l6412
l6410:
	push 0
	jmp l6412
l6411:
	push 1
l6412:
	cmp0
	je l6413
	push "e1_mg07_skrzynia_opened"
	call clsave,bset
	cthis skrzynia_open
l6413:
l6407:
	end method
	method ankilof_TAKE
	push "kilof"
	cthis popitem_gotocenter
	cthis set_mg_finished
	end method
	method ankilof_INPCK
	push "kilof"
	cthis addtopck
	cthis mend
	end method
	method skrzynia_open
	call anzasuwa1_open,hide
	call anzasuwa2_open,hide
	call anskrzynia_open,show
	call ankilof,show
	end method
	method HINT_CLICK
	push "anpopexit"
	cthis showhint
	end method
	method mend
	push "ad07_alejadrzew"
	push "gamead07_alejadrzew0"
	cthis stdexitdefadv
	end method
	end game

	game mg08_doniczki
	parent Banshee
	method init
	push "mg08_doniczki"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "doniczka1.pyz 3"
	push "doniczka2.pyz 4"
	push "doniczka3.pyz 5"
	push "ziarenko1.pyzH 5"
	push "ziarenko2.pyzH 6"
	push "ziarenko3.pyzH 7"
	push "elixir1.pyzH 8"
	push "roslinka1.pyzH 9"
	push "elixir2.pyzH 10"
	push "roslinka2.pyzH 11"
	push "elixir3.pyzH 12"
	push "roslinka3.pyzH 13"
	push "ramka.pyz 14"
	push "konewka1.pyzH 15"
	push "konewka2.pyzH 16"
	push "konewka3.pyzH 16"
	push "popexit.pyz 25"
	cthis imgs=
	call anpopup_bkg,mg08_doniczki0
	push "onfinish"
	push "mg08_doniczki1"
	call anelixir1,addmethod
	push "onfinish"
	push "mg08_doniczki2"
	call anelixir2,addmethod
	push "onfinish"
	push "mg08_doniczki3"
	call anelixir3,addmethod
	push "onfinish"
	push "mg08_doniczki4"
	call ankonewka1,addmethod
	push "onfinish"
	push "mg08_doniczki5"
	call ankonewka2,addmethod
	push "onfinish"
	push "mg08_doniczki6"
	call ankonewka3,addmethod
	call imgbkg,mg08_doniczki7
	cthis butpopexit
	cthis stdstart
	push "e1_ad08_doniczka1_ziarno_in"
	call clsave,bis
	cmp0
	je l6428
	call anziarenko1,show
l6428:
	push "e1_ad08_doniczka2_ziarno_in"
	call clsave,bis
	cmp0
	je l6430
	call anziarenko2,show
l6430:
	push "e1_ad08_doniczka3_ziarno_in"
	call clsave,bis
	cmp0
	je l6432
	call anziarenko3,show
l6432:
	push "e1_ad08_doniczka1_elixir_in"
	call clsave,bis
	cmp0
	je l6434
	call anziarenko1,hide
l6434:
	push "e1_ad08_doniczka2_elixi_in"
	call clsave,bis
	cmp0
	je l6436
	call anziarenko2,hide
l6436:
	push "e1_ad08_doniczka3_elixi_in"
	call clsave,bis
	cmp0
	je l6438
	call anziarenko3,hide
l6438:
	push "e1_ad08_doniczka1_elixi_in"
	call clsave,bis
	neg
	cmp0
	je l6440
	call andoniczka1,mg08_doniczki9
l6440:
	push "e1_ad08_doniczka2_elixi_in"
	call clsave,bis
	neg
	cmp0
	je l6448
	call andoniczka2,mg08_doniczki12
l6448:
	push "e1_ad08_doniczka3_elixi_in"
	call clsave,bis
	neg
	cmp0
	je l6456
	call andoniczka3,mg08_doniczki15
l6456:
	end method
	method mg08_doniczki0
	cthis Button_isinalpha
	cthis getname
	call butgame,add
	end method
	method mg08_doniczki1
	cthis hide
	cthis advsetstdstate
	end method
	method mg08_doniczki2
	cthis hide
	cthis advsetstdstate
	end method
	method mg08_doniczki3
	cthis hide
	cthis advsetstdstate
	end method
	method mg08_doniczki4
	cthis hide
	cthis advsetstdstate
	end method
	method mg08_doniczki5
	cthis hide
	cthis advsetstdstate
	end method
	method mg08_doniczki6
	cthis hide
	cthis advsetstdstate
	end method
	method mg08_doniczki7
	cthis Button_isinalpha
	push "butclick"
	push "mg08_doniczki8"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg08_doniczki8
	cthis advstdstate
	neg
	cmp0
	jne l6424
	push sgmstate
	push "getitem"
	cmpje
	cmp0
	jne l6424
	push sgmstate
	push "anim"
	cmpje
	jmp l6425
l6423:
	push 0
	jmp l6425
l6424:
	push 1
l6425:
	cmp0
	je l6426
	ret
l6426:
	cthis mend
	end method
	method mg08_doniczki9
	cthis Button_isinvis
	push "butmoveon"
	push "mg08_doniczki10"
	cthis addmethod
	push "butmoveoff"
	push "mg08_doniczki11"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg08_doniczki10
	cthis advstdstate
	neg
	cmp0
	je l6442
	ret
l6442:
	push "e1_ad08_doniczka1_elixi_in"
	call clsave,bis
	neg
	cmp0
	je l6444
	push "use"
	call advmouse,set
	jmp l6443
l6444:
	call advmouse,setstd
l6443:
	end method
	method mg08_doniczki11
	cthis advstdstate
	neg
	cmp0
	je l6446
	ret
l6446:
	call advmouse,setstd
	end method
	method mg08_doniczki12
	cthis Button_isinvis
	push "butmoveon"
	push "mg08_doniczki13"
	cthis addmethod
	push "butmoveoff"
	push "mg08_doniczki14"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg08_doniczki13
	cthis advstdstate
	neg
	cmp0
	je l6450
	ret
l6450:
	push "e1_ad08_doniczka2_elixi_in"
	call clsave,bis
	neg
	cmp0
	je l6452
	push "use"
	call advmouse,set
	jmp l6451
l6452:
	call advmouse,setstd
l6451:
	end method
	method mg08_doniczki14
	cthis advstdstate
	neg
	cmp0
	je l6454
	ret
l6454:
	call advmouse,setstd
	end method
	method mg08_doniczki15
	cthis Button_isinvis
	push "butmoveon"
	push "mg08_doniczki16"
	cthis addmethod
	push "butmoveoff"
	push "mg08_doniczki17"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg08_doniczki16
	cthis advstdstate
	neg
	cmp0
	je l6458
	ret
l6458:
	push "e1_ad08_doniczka3_elixi_in"
	call clsave,bis
	neg
	cmp0
	je l6460
	push "use"
	call advmouse,set
	jmp l6459
l6460:
	call advmouse,setstd
l6459:
	end method
	method mg08_doniczki17
	cthis advstdstate
	neg
	cmp0
	je l6462
	ret
l6462:
	call advmouse,setstd
	end method
	method ziarno_completed
	push "e1_ad08_doniczka1_ziarno_in"
	call clsave,bis
	cmp0
	je l6464
	push "e1_ad08_doniczka3_ziarno_in"
	call clsave,bis
	cmp0
	je l6464
	push "e1_ad08_doniczka3_ziarno_in"
	call clsave,bis
	jmp l6466
l6464:
	push 0
	jmp l6466
l6465:
	push 1
l6466:
	cmp0
	je l6467
	push 1
	ret
	jmp l6463
l6467:
	push 0
	ret
l6463:
	end method
	method elixir_completed
	push "e1_ad08_doniczka1_elixir_in"
	call clsave,bis
	cmp0
	je l6469
	push "e1_ad08_doniczka3_elixir_in"
	call clsave,bis
	cmp0
	je l6469
	push "e1_ad08_doniczka3_elixir_in"
	call clsave,bis
	jmp l6471
l6469:
	push 0
	jmp l6471
l6470:
	push 1
l6471:
	cmp0
	je l6472
	push 1
	ret
	jmp l6468
l6472:
	push 0
	ret
l6468:
	end method
	method konewka_completed
	push "e1_ad08_doniczka1_water_in"
	call clsave,bis
	cmp0
	je l6474
	push "e1_ad08_doniczka3_water_in"
	call clsave,bis
	cmp0
	je l6474
	push "e1_ad08_doniczka3_water_in"
	call clsave,bis
	jmp l6476
l6474:
	push 0
	jmp l6476
l6475:
	push 1
l6476:
	cmp0
	je l6477
	push 1
	ret
	jmp l6473
l6477:
	push 0
	ret
l6473:
	end method
	method USE_ziarno
	cthis advsetstdstate
	call mouse,getpos
	push 1
	push 0
	call andoniczka1,isin
	cmp0
	je l6479
	push "e1_ad08_doniczka1_ziarno_in"
	call clsave,bis
	neg
	jmp l6481
l6479:
	push 0
	jmp l6481
l6480:
	push 1
l6481:
	cmp0
	je l6482
	push "e1_ad08_doniczka1_ziarno_in"
	call clsave,bset
	push 1
	call anziarenko1,play
	push "getitem"
	cthis advsetstate
	push "anitem_ziarno"
	call guimov,setmoved
	cthis ziarno_completed
	cmp0
	je l6484
	push "ziarno"
	cthis removefrompck
	cthis advsetstdstate
	jmp l6483
l6484:
	push 200
	push "mg08_doniczki18"
	call anitem_ziarno,anfadeout
l6483:
	jmp l6478
l6482:
	call mouse,getpos
	push 1
	push 0
	call andoniczka2,isin
	cmp0
	je l6486
	push "e1_ad08_doniczka2_ziarno_in"
	call clsave,bis
	neg
	jmp l6488
l6486:
	push 0
	jmp l6488
l6487:
	push 1
l6488:
	cmp0
	je l6489
	push "e1_ad08_doniczka2_ziarno_in"
	call clsave,bset
	push 1
	call anziarenko2,play
	push "getitem"
	cthis advsetstate
	push "anitem_ziarno"
	call guimov,setmoved
	cthis ziarno_completed
	cmp0
	je l6491
	push "ziarno"
	cthis removefrompck
	cthis advsetstdstate
	jmp l6490
l6491:
	push 200
	push "mg08_doniczki20"
	call anitem_ziarno,anfadeout
l6490:
	jmp l6485
l6489:
	call mouse,getpos
	push 1
	push 0
	call andoniczka3,isin
	cmp0
	je l6493
	push "e1_ad08_doniczka3_ziarno_in"
	call clsave,bis
	neg
	jmp l6495
l6493:
	push 0
	jmp l6495
l6494:
	push 1
l6495:
	cmp0
	je l6496
	push "e1_ad08_doniczka3_ziarno_in"
	call clsave,bset
	push 1
	call anziarenko3,play
	push "getitem"
	cthis advsetstate
	push "anitem_ziarno"
	call guimov,setmoved
	cthis ziarno_completed
	cmp0
	je l6498
	push "ziarno"
	cthis removefrompck
	cthis advsetstdstate
	jmp l6497
l6498:
	push 200
	push "mg08_doniczki22"
	call anitem_ziarno,anfadeout
l6497:
	jmp l6492
l6496:
	cthis item_gotopck
l6492:
l6485:
l6478:
	end method
	method mg08_doniczki18
	push 800
	push "mg08_doniczki19"
	call anitem_ziarno,anfadein
	end method
	method mg08_doniczki19
	cthis advsetstdstate
	end method
	method mg08_doniczki20
	push 800
	push "mg08_doniczki21"
	call anitem_ziarno,anfadein
	end method
	method mg08_doniczki21
	cthis advsetstdstate
	end method
	method mg08_doniczki22
	push 800
	push "mg08_doniczki23"
	call anitem_ziarno,anfadein
	end method
	method mg08_doniczki23
	cthis advsetstdstate
	end method
	method USE_konewka
	cthis advsetstdstate
	call mouse,getpos
	push 1
	push 0
	call andoniczka1,isin
	cmp0
	je l6500
	push "e1_ad08_doniczka1_ziarno_in"
	call clsave,bis
	cmp0
	je l6500
	push "e1_ad08_doniczka1_water_in"
	call clsave,bis
	neg
	jmp l6502
l6500:
	push 0
	jmp l6502
l6501:
	push 1
l6502:
	cmp0
	je l6503
	push "e1_ad08_doniczka1_water_in"
	call clsave,bset
	push 1
	call ankonewka1,play
	push "getitem"
	cthis advsetstate
	push "anitem_konewka"
	call guimov,setmoved
	cthis konewka_completed
	cmp0
	je l6505
	push "konewka"
	cthis removefrompck
	cthis advsetstdstate
	jmp l6504
l6505:
	push 200
	push "mg08_doniczki24"
	call anitem_konewka,anfadeout
l6504:
	jmp l6499
l6503:
	call mouse,getpos
	push 1
	push 0
	call andoniczka2,isin
	cmp0
	je l6507
	push "e1_ad08_doniczka2_ziarno_in"
	call clsave,bis
	cmp0
	je l6507
	push "e1_ad08_doniczka2_water_in"
	call clsave,bis
	neg
	jmp l6509
l6507:
	push 0
	jmp l6509
l6508:
	push 1
l6509:
	cmp0
	je l6510
	push "e1_ad08_doniczka2_water_in"
	call clsave,bset
	push 1
	call ankonewka2,play
	push "getitem"
	cthis advsetstate
	push "anitem_konewka"
	call guimov,setmoved
	cthis konewka_completed
	cmp0
	je l6512
	push "konewka"
	cthis removefrompck
	cthis advsetstdstate
	jmp l6511
l6512:
	push 200
	push "mg08_doniczki26"
	call anitem_konewka,anfadeout
l6511:
	jmp l6506
l6510:
	call mouse,getpos
	push 1
	push 0
	call andoniczka3,isin
	cmp0
	je l6514
	push "e1_ad08_doniczka3_ziarno_in"
	call clsave,bis
	cmp0
	je l6514
	push "e1_ad08_doniczka3_water_in"
	call clsave,bis
	neg
	jmp l6516
l6514:
	push 0
	jmp l6516
l6515:
	push 1
l6516:
	cmp0
	je l6517
	push "e1_ad08_doniczka3_water_in"
	call clsave,bset
	push 1
	call ankonewka3,play
	push "getitem"
	cthis advsetstate
	push "anitem_konewka"
	call guimov,setmoved
	cthis konewka_completed
	cmp0
	je l6519
	push "konewka"
	cthis removefrompck
	cthis advsetstdstate
	jmp l6518
l6519:
	push 200
	push "mg08_doniczki28"
	call anitem_konewka,anfadeout
l6518:
	jmp l6513
l6517:
	cthis item_gotopck
l6513:
l6506:
l6499:
	end method
	method mg08_doniczki24
	push 800
	push "mg08_doniczki25"
	call anitem_konewka,anfadein
	end method
	method mg08_doniczki25
	cthis advsetstdstate
	end method
	method mg08_doniczki26
	push 800
	push "mg08_doniczki27"
	call anitem_konewka,anfadein
	end method
	method mg08_doniczki27
	cthis advsetstdstate
	end method
	method mg08_doniczki28
	push 800
	push "mg08_doniczki29"
	call anitem_konewka,anfadein
	end method
	method mg08_doniczki29
	cthis advsetstdstate
	end method
	method go_to_next_location
	push "timend"
	push 400
	push "mg08_doniczki30"
	cthis timplay
	end method
	method mg08_doniczki30
	push "ad12_latajacecosna"
	push "gamead12_latajacecosna0"
	cthis stdexitdefadv
	end method
	method USE_elixir
	cthis advsetstdstate
	call mouse,getpos
	push 1
	push 0
	call andoniczka1,isin
	cmp0
	je l6521
	push "e1_ad08_doniczka1_water_in"
	call clsave,bis
	cmp0
	je l6521
	push "e1_ad08_doniczka1_elixir_in"
	call clsave,bis
	neg
	jmp l6523
l6521:
	push 0
	jmp l6523
l6522:
	push 1
l6523:
	cmp0
	je l6524
	push "e1_ad08_doniczka1_elixir_in"
	call clsave,bset
	push 1
	call anelixir1,play
	push 1
	call anroslinka1,play
	push "getitem"
	cthis advsetstate
	push "anitem_elixir"
	call guimov,setmoved
	push "andoniczka1"
	call butgame,removebut
	cthis elixir_completed
	cmp0
	je l6526
	push "elixir"
	cthis removefrompck
	cthis advsetstdstate
	cthis set_mg_finished
	cthis go_to_next_location
	jmp l6525
l6526:
	push 200
	push "mg08_doniczki31"
	call anitem_elixir,anfadeout
l6525:
	jmp l6520
l6524:
	call mouse,getpos
	push 1
	push 0
	call andoniczka2,isin
	cmp0
	je l6528
	push "e1_ad08_doniczka2_ziarno_in"
	call clsave,bis
	cmp0
	je l6528
	push "e1_ad08_doniczka2_elixir_in"
	call clsave,bis
	neg
	jmp l6530
l6528:
	push 0
	jmp l6530
l6529:
	push 1
l6530:
	cmp0
	je l6531
	push "e1_ad08_doniczka2_elixir_in"
	call clsave,bset
	push 1
	call anelixir2,play
	push 1
	call anroslinka2,play
	push "getitem"
	cthis advsetstate
	push "anitem_elixir"
	call guimov,setmoved
	push "andoniczka2"
	call butgame,removebut
	cthis elixir_completed
	cmp0
	je l6533
	push "elixir"
	cthis removefrompck
	cthis advsetstdstate
	cthis set_mg_finished
	cthis go_to_next_location
	jmp l6532
l6533:
	push 200
	push "mg08_doniczki33"
	call anitem_elixir,anfadeout
l6532:
	jmp l6527
l6531:
	call mouse,getpos
	push 1
	push 0
	call andoniczka3,isin
	cmp0
	je l6535
	push "e1_ad08_doniczka3_ziarno_in"
	call clsave,bis
	cmp0
	je l6535
	push "e1_ad08_doniczka3_elixir_in"
	call clsave,bis
	neg
	jmp l6537
l6535:
	push 0
	jmp l6537
l6536:
	push 1
l6537:
	cmp0
	je l6538
	push 1
	call anelixir3,play
	push 1
	call anroslinka3,play
	push "getitem"
	cthis advsetstate
	push "anitem_elixir"
	call guimov,setmoved
	push "andoniczka3"
	call butgame,removebut
	push "e1_ad08_doniczka3_elixir_in"
	call clsave,bset
	cthis elixir_completed
	cmp0
	je l6540
	push "elixir"
	cthis removefrompck
	cthis advsetstdstate
	cthis set_mg_finished
	cthis go_to_next_location
	jmp l6539
l6540:
	push 200
	push "mg08_doniczki35"
	call anitem_elixir,anfadeout
l6539:
	jmp l6534
l6538:
	cthis item_gotopck
l6534:
l6527:
l6520:
	end method
	method mg08_doniczki31
	push 800
	push "mg08_doniczki32"
	call anitem_elixir,anfadein
	end method
	method mg08_doniczki32
	cthis advsetstdstate
	call advmouse,setstd
	end method
	method mg08_doniczki33
	push 800
	push "mg08_doniczki34"
	call anitem_elixir,anfadein
	end method
	method mg08_doniczki34
	cthis advsetstdstate
	call advmouse,setstd
	end method
	method mg08_doniczki35
	push 800
	push "mg08_doniczki36"
	call anitem_elixir,anfadein
	end method
	method mg08_doniczki36
	cthis advsetstdstate
	call advmouse,setstd
	end method
	method mend
	cthis is_mg_finished
	cmp0
	je l6542
	push "ad12_latajacecosna"
	push "gamead12_latajacecosna0"
	cthis stdexitdefadv
	jmp l6541
l6542:
	push "ad08_latajacecospod"
	push "gamead08_latajacecospod0"
	cthis stdexitdefadv
l6541:
	end method
	method HINT_CLICK
	push "e1_ad08_doniczka3_elixi_in"
	call clsave,bis
	neg
	cmp0
	je l6544
	push "andoniczka1"
	cthis showhint
	jmp l6543
l6544:
	push "e1_ad08_doniczka1_elixi_in"
	call clsave,bis
	neg
	cmp0
	je l6546
	push "andoniczka2"
	cthis showhint
	jmp l6545
l6546:
	push "e1_ad08_doniczka3_elixi_in"
	call clsave,bis
	neg
	cmp0
	je l6548
	push "andoniczka3"
	cthis showhint
	jmp l6547
l6548:
	push "anpopexit"
	cthis showhint
l6547:
l6545:
l6543:
	end method
	end game

	game mg09_reka
	parent Banshee
	method init
	push "mg09_reka"
	clparent Banshee,init
	push A
	push "bkg.jpg"
	push "ramka.pyz 20"
	push "klatka.pyz H"
	cthis imgs=
	new Film,filmb
	push "mus"
	call filmb,musicclass=
	push "onfinish"
	push "mend"
	call filmb,addmethod
	push "scripts/cs09_reka/"
	push "film"
	call filmb,load
	call filmb,showfirstframe
	call anklatka,getpx
	call anklatka,getpy
	call filmb,setpos
	push "mg09_reka0"
	call ccs,enter
	end method
	method mg09_reka0
	call filmb,play
	end method
	method mend
	push "ad09_polekoniczyny"
	push "gamead09_polekoniczyny0"
	cthis stdexitdefadv
	end method
	end game

	game mg09_szkielko
	parent Banshee
	method init
	new string,act_id
	push "null"
	pop act_id
	push "mg09_szkielko"
	clparent Banshee,init
	new ImgRect,recmask
	call recmask,mg09_szkielko0
	push A
	push "bkg.jpg 1"
	push "base.pyz 2"
	push "slot1.pyz 3"
	push "slot2.pyz 3"
	push "slot3.pyz 3"
	push "slot4.pyz 3"
	push "slot5.pyz 3"
	push "osmiornica.pyzH 4"
	push "pajak.pyzH 4"
	push "waz.pyzH 4"
	push "ptak.pyzH 4"
	push "kon.pyzH 4"
	push "kot.pyzH 4"
	push "ryba.pyzH 4"
	push "mis.pyzH 4"
	push "malpa.pyzH 4"
	push "slon.pyzH 4"
	push "mask.pyz 5"
	push "glow1.pyzH 6"
	push "glow2.pyzH 6"
	push "glow3.pyzH 6"
	push "glow4.pyzH 6"
	push "glow5.pyzH 6"
	push "final_anim.pyzH  9"
	push "popexit.pyz 10"
	cthis imgs=
	cthis butpopexit
	call imgbkg,mg09_szkielko1
	push 514
	push 488
	call anglow1,setpos
	push 1
	call anglow1,setdrawmode
	push 1
	call anglow2,setdrawmode
	push 656
	push 482
	call anglow2,setpos
	push 1
	call anglow3,setdrawmode
	push 792
	push 406
	call anglow3,setpos
	push 1
	call anglow4,setdrawmode
	push 866
	push 290
	call anglow4,setpos
	push 1
	call anglow5,setdrawmode
	push 868
	push 160
	call anglow5,setpos
	push "e1_monety_zwierzeta_uzyte"
	call clsave,bis
	cmp0
	je l6552
	push "osmiornica"
	push 774
	push 25
	pop $b
	popax
	add $a,$b
	push 306
	push 50
	pop $b
	popax
	add $a,$b
	push 1
	cthis init_coin
	push "kot"
	push 834
	push 248
	push 2
	cthis init_coin
	push "waz"
	push 788
	push 172
	push 3
	cthis init_coin
	push "ptak"
	push 586
	push 242
	push 4
	cthis init_coin
	push "kon"
	push 740
	push 258
	push 5
	cthis init_coin
	jmp l6551
l6552:
	push "snd_brak_monet"
	push "kinnat_51a"
	cthis newsnd
	push "onfinish"
	push "mg09_szkielko4"
	call snd_brak_monet,addmethod
	push "snd_brak_monet"
	cthis cbplay
	call anbase,mg09_szkielko5
l6551:
	push "pajak"
	push 565
	push 366
	push 0
	cthis init_coin
	push "ryba"
	push 624
	push 438
	push 0
	cthis init_coin
	push "mis"
	push 660
	push 312
	push 0
	cthis init_coin
	push "malpa"
	push 675
	push 185
	push 0
	cthis init_coin
	push "slon"
	push 720
	push 386
	push 0
	cthis init_coin
	push "e1_monety_zwierzeta_uzyte"
	call clsave,bis
	neg
	cmp0
	je l6560
	push 0
	cthis enable_buttons
l6560:
	call anslot1,mg09_szkielko8
	call anslot2,mg09_szkielko11
	call anslot3,mg09_szkielko14
	call anslot4,mg09_szkielko17
	call anslot5,mg09_szkielko20
	call anfinal_anim,mg09_szkielko23
	cthis stdstart
	end method
	method mg09_szkielko0
	cthis Button_isin
	cthis Button_moveoffms
	push 0
	push 0
	push igmappw
	push igmapph
	cthis setrect
	push 2
	cthis setz
	cthis hide
	cthis getname
	call butgame,add
	end method
	method mg09_szkielko1
	push "isbutin"
	push "mg09_szkielko2"
	cthis addmethod
	push "butclick"
	push "mg09_szkielko3"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg09_szkielko2
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anbase,isin
	neg
	end method
	method mg09_szkielko3
	cthis advstdstate
	neg
	cmp0
	je l6550
	ret
l6550:
	cthis mend
	end method
	method mg09_szkielko4
	cthis advsetstdstate
	call anbase,butmoveon
	end method
	method mg09_szkielko5
	cthis Button_isinvisalpha
	push "butmoveon"
	push "mg09_szkielko6"
	cthis addmethod
	push "butmoveoff"
	push "mg09_szkielko7"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg09_szkielko6
	cthis advstdstate
	neg
	cmp0
	je l6554
	ret
l6554:
	push "e1_monety_zwierzeta_uzyte"
	call clsave,bis
	neg
	cmp0
	je l6556
	push "use"
	call advmouse,set
l6556:
	end method
	method mg09_szkielko7
	cthis advstdstate
	neg
	cmp0
	je l6558
	ret
l6558:
	call advmouse,setstd
	end method
	method mg09_szkielko8
	cthis Button_isin
	push "butmoveon"
	push "mg09_szkielko9"
	cthis addmethod
	push "butmoveoff"
	push "mg09_szkielko10"
	cthis addmethod
	push A
	push "occupied"
	push 0
	push "obj_id"
	push "null"
	cthis vars2
	end method
	method mg09_szkielko9
	cthis advstdstate
	neg
	cmp0
	je l6562
	ret
l6562:
	push "use"
	call advmouse,set
	end method
	method mg09_szkielko10
	cthis advstdstate
	neg
	cmp0
	je l6564
	ret
l6564:
	call advmouse,setstd
	end method
	method mg09_szkielko11
	cthis Button_isin
	push "butmoveon"
	push "mg09_szkielko12"
	cthis addmethod
	push "butmoveoff"
	push "mg09_szkielko13"
	cthis addmethod
	push A
	push "occupied"
	push 0
	push "obj_id"
	push "null"
	cthis vars2
	end method
	method mg09_szkielko12
	cthis advstdstate
	neg
	cmp0
	je l6566
	ret
l6566:
	push "use"
	call advmouse,set
	end method
	method mg09_szkielko13
	cthis advstdstate
	neg
	cmp0
	je l6568
	ret
l6568:
	call advmouse,setstd
	end method
	method mg09_szkielko14
	cthis Button_isin
	push "butmoveon"
	push "mg09_szkielko15"
	cthis addmethod
	push "butmoveoff"
	push "mg09_szkielko16"
	cthis addmethod
	push A
	push "occupied"
	push 0
	push "obj_id"
	push "null"
	cthis vars2
	end method
	method mg09_szkielko15
	cthis advstdstate
	neg
	cmp0
	je l6570
	ret
l6570:
	push "use"
	call advmouse,set
	end method
	method mg09_szkielko16
	cthis advstdstate
	neg
	cmp0
	je l6572
	ret
l6572:
	call advmouse,setstd
	end method
	method mg09_szkielko17
	cthis Button_isin
	push "butmoveon"
	push "mg09_szkielko18"
	cthis addmethod
	push "butmoveoff"
	push "mg09_szkielko19"
	cthis addmethod
	push A
	push "occupied"
	push 0
	push "obj_id"
	push "null"
	cthis vars2
	end method
	method mg09_szkielko18
	cthis advstdstate
	neg
	cmp0
	je l6574
	ret
l6574:
	push "use"
	call advmouse,set
	end method
	method mg09_szkielko19
	cthis advstdstate
	neg
	cmp0
	je l6576
	ret
l6576:
	call advmouse,setstd
	end method
	method mg09_szkielko20
	cthis Button_isin
	push "butmoveon"
	push "mg09_szkielko21"
	cthis addmethod
	push "butmoveoff"
	push "mg09_szkielko22"
	cthis addmethod
	push A
	push "occupied"
	push 0
	push "obj_id"
	push "null"
	cthis vars2
	end method
	method mg09_szkielko21
	cthis advstdstate
	neg
	cmp0
	je l6578
	ret
l6578:
	push "use"
	call advmouse,set
	end method
	method mg09_szkielko22
	cthis advstdstate
	neg
	cmp0
	je l6580
	ret
l6580:
	call advmouse,setstd
	end method
	method mg09_szkielko23
	push "onfinish"
	push "mg09_szkielko24"
	cthis addmethod
	end method
	method mg09_szkielko24
	localint $1
	push 1
	pop $1
l6581:
	push $1
	push 6
	cmpjl
	cmp0
	je l6582
	jmp l6584
l6583:
	add $1,1
	pop $1
	jmp l6581
l6584:
	push "anglow"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 200
	push "null"
	spop $a
	call [$a],anfadeout
	jmp l6583
l6582:
	cthis mend
	end method
	method init_coin
	localstring $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	push $2
	push $3
	push $4
	spop $a
	call [$a],mg09_szkielko25
	end method
	method mg09_szkielko25
	localstring $1
	localint $2
	localint $3
	localint $4
	pop $4
	pop $3
	pop $2
	pop $1
	cthis show
	push $2
	push $3
	cthis setpos
	push A
	push "name"
	push $1
	push "start_x"
	push $2
	push "start_y"
	push $3
	push "index"
	push $4
	push "slot_id"
	push 0
	cthis vars2
	cthis Button_isin
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg09_szkielko26"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg09_szkielko26
	cthis advstdstate
	neg
	cmp0
	jne l6587
	cthis is_mg_finished
	jmp l6588
l6586:
	push 0
	jmp l6588
l6587:
	push 1
l6588:
	cmp0
	je l6589
	ret
l6589:
	call mouse,getpos
	push 1
	push 0
	call anslot1,isin
	cmp0
	je l6591
	call anslot1,occupied
	cmp0
	je l6593
	call anslot1,obj_id
	cthis name
	cmpje
	cmp0
	je l6595
	cthis getname
	pop act_id
	push 300
	cthis setz
	push 1
	cthis play
	push 5
	call recmask,setz
	call butgame,sort
	push 0
	call anslot1,occupied=
	push "null"
	call anslot1,obj_id=
	push 0
	cthis slot_id=
	call anglow1,hide
	cthis check_won
	ret
	jmp l6594
l6595:
	push 524
	push 37
	pop $b
	popax
	add $a,$b
	push 500
	push 38
	pop $b
	popax
	add $a,$b
	cthis setpos
	push "an"
	call anslot1,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	push 4
	spop $a
	call [$a],setz
	push "an"
	call anslot1,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	push "an"
	call anslot1,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],start_x
	push "an"
	call anslot1,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],start_y
	spop $a
	call [$a],setpos
	cthis name
	call anslot1,obj_id=
	push 1
	cthis slot_id=
	cthis index
	push 1
	cmpje
	cmp0
	je l6597
	push "green"
	push 0
	call anglow1,setframe
	push 800
	push "null"
	call anglow1,anfadein
	jmp l6596
l6597:
	push "red"
	push 0
	call anglow1,setframe
	push 800
	push "null"
	call anglow1,anfadein
l6596:
l6594:
	jmp l6592
l6593:
	push 1
	call anslot1,occupied=
	cthis name
	call anslot1,obj_id=
	cthis index
	cthis slot_id=
	cthis index
	push 1
	cmpje
	cmp0
	je l6599
	push "green"
	push 0
	call anglow1,setframe
	push 800
	push "null"
	call anglow1,anfadein
	jmp l6598
l6599:
	push "red"
	push 0
	call anglow1,setframe
	push 800
	push "null"
	call anglow1,anfadein
l6598:
	push 524
	push 37
	pop $b
	popax
	add $a,$b
	push 500
	push 38
	pop $b
	popax
	add $a,$b
	cthis setpos
l6592:
	push 4
	cthis setz
	push "null"
	pop act_id
	push 0
	cthis play
	push 2
	call recmask,setz
	cthis check_won
	jmp l6590
l6591:
	call mouse,getpos
	push 1
	push 0
	call anslot2,isin
	cmp0
	je l6601
	call anslot2,occupied
	cmp0
	je l6603
	call anslot2,obj_id
	cthis name
	cmpje
	cmp0
	je l6605
	cthis getname
	pop act_id
	push 300
	cthis setz
	push 1
	cthis play
	push 5
	call recmask,setz
	call butgame,sort
	push 0
	call anslot2,occupied=
	push "null"
	call anslot2,obj_id=
	push 0
	cthis slot_id=
	call anglow2,hide
	cthis check_won
	ret
	jmp l6604
l6605:
	push 672
	push 32
	pop $b
	popax
	add $a,$b
	push 494
	push 38
	pop $b
	popax
	add $a,$b
	cthis setpos
	push "an"
	call anslot2,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	push 4
	spop $a
	call [$a],setz
	push "an"
	call anslot2,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	push "an"
	call anslot2,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],start_x
	push "an"
	call anslot2,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],start_y
	spop $a
	call [$a],setpos
	cthis name
	call anslot2,obj_id=
	push 2
	cthis slot_id=
	cthis index
	push 2
	cmpje
	cmp0
	je l6607
	push "green"
	push 0
	call anglow2,setframe
	push 800
	push "null"
	call anglow2,anfadein
	jmp l6606
l6607:
	push "red"
	push 0
	call anglow2,setframe
	push 800
	push "null"
	call anglow2,anfadein
l6606:
l6604:
	jmp l6602
l6603:
	push 1
	call anslot2,occupied=
	cthis name
	call anslot2,obj_id=
	cthis index
	cthis slot_id=
	cthis index
	push 2
	cmpje
	cmp0
	je l6609
	push "green"
	push 0
	call anglow2,setframe
	push 800
	push "null"
	call anglow2,anfadein
	jmp l6608
l6609:
	push "red"
	push 0
	call anglow2,setframe
	push 800
	push "null"
	call anglow2,anfadein
l6608:
	push 672
	push 32
	pop $b
	popax
	add $a,$b
	push 494
	push 38
	pop $b
	popax
	add $a,$b
	cthis setpos
l6602:
	push 4
	cthis setz
	push "null"
	pop act_id
	push 0
	cthis play
	push 2
	call recmask,setz
	cthis check_won
	jmp l6600
l6601:
	call mouse,getpos
	push 1
	push 0
	call anslot3,isin
	cmp0
	je l6611
	call anslot3,occupied
	cmp0
	je l6613
	call anslot3,obj_id
	cthis name
	cmpje
	cmp0
	je l6615
	cthis getname
	pop act_id
	push 300
	cthis setz
	push 1
	cthis play
	push 5
	call recmask,setz
	call butgame,sort
	push 0
	call anslot3,occupied=
	push "null"
	call anslot3,obj_id=
	push 0
	cthis slot_id=
	call anglow3,hide
	cthis check_won
	ret
	jmp l6614
l6615:
	push 802
	push 37
	pop $b
	popax
	add $a,$b
	push 418
	push 38
	pop $b
	popax
	add $a,$b
	cthis setpos
	push "an"
	call anslot3,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	push 4
	spop $a
	call [$a],setz
	push "an"
	call anslot3,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	push "an"
	call anslot3,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],start_x
	push "an"
	call anslot3,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],start_y
	spop $a
	call [$a],setpos
	cthis name
	call anslot3,obj_id=
	push 3
	cthis slot_id=
	cthis index
	push 3
	cmpje
	cmp0
	je l6617
	push "green"
	push 0
	call anglow3,setframe
	push 800
	push "null"
	call anglow3,anfadein
	jmp l6616
l6617:
	push "red"
	push 0
	call anglow3,setframe
	push 800
	push "null"
	call anglow3,anfadein
l6616:
l6614:
	jmp l6612
l6613:
	push 1
	call anslot3,occupied=
	cthis name
	call anslot3,obj_id=
	cthis index
	cthis slot_id=
	cthis index
	push 3
	cmpje
	cmp0
	je l6619
	push "green"
	push 0
	call anglow3,setframe
	push 800
	push "null"
	call anglow3,anfadein
	jmp l6618
l6619:
	push "red"
	push 0
	call anglow3,setframe
	push 800
	push "null"
	call anglow3,anfadein
l6618:
	push 802
	push 37
	pop $b
	popax
	add $a,$b
	push 418
	push 38
	pop $b
	popax
	add $a,$b
	cthis setpos
l6612:
	push 4
	cthis setz
	push "null"
	pop act_id
	push 0
	cthis play
	push 2
	call recmask,setz
	cthis check_won
	jmp l6610
l6611:
	call mouse,getpos
	push 1
	push 0
	call anslot4,isin
	cmp0
	je l6621
	call anslot4,occupied
	cmp0
	je l6623
	call anslot4,obj_id
	cthis name
	cmpje
	cmp0
	je l6625
	cthis getname
	pop act_id
	push 300
	cthis setz
	push 1
	cthis play
	push 5
	call recmask,setz
	call butgame,sort
	push 0
	call anslot4,occupied=
	push "null"
	call anslot4,obj_id=
	push 0
	cthis slot_id=
	call anglow4,hide
	cthis check_won
	ret
	jmp l6624
l6625:
	push 876
	push 37
	pop $b
	popax
	add $a,$b
	push 304
	push 38
	pop $b
	popax
	add $a,$b
	cthis setpos
	push "an"
	call anslot4,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	push 4
	spop $a
	call [$a],setz
	push "an"
	call anslot4,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	push "an"
	call anslot4,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],start_x
	push "an"
	call anslot4,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],start_y
	spop $a
	call [$a],setpos
	cthis name
	call anslot4,obj_id=
	push 4
	cthis slot_id=
	cthis index
	push 4
	cmpje
	cmp0
	je l6627
	push "green"
	push 0
	call anglow4,setframe
	push 800
	push "null"
	call anglow4,anfadein
	jmp l6626
l6627:
	push "red"
	push 0
	call anglow4,setframe
	push 800
	push "null"
	call anglow4,anfadein
l6626:
l6624:
	jmp l6622
l6623:
	push 1
	call anslot4,occupied=
	cthis name
	call anslot4,obj_id=
	cthis index
	cthis slot_id=
	cthis index
	push 4
	cmpje
	cmp0
	je l6629
	push "green"
	push 0
	call anglow4,setframe
	push 800
	push "null"
	call anglow4,anfadein
	jmp l6628
l6629:
	push "red"
	push 0
	call anglow4,setframe
	push 800
	push "null"
	call anglow4,anfadein
l6628:
	push 876
	push 37
	pop $b
	popax
	add $a,$b
	push 304
	push 38
	pop $b
	popax
	add $a,$b
	cthis setpos
l6622:
	push 4
	cthis setz
	push "null"
	pop act_id
	push 0
	cthis play
	push 2
	call recmask,setz
	cthis check_won
	jmp l6620
l6621:
	call mouse,getpos
	push 1
	push 0
	call anslot5,isin
	cmp0
	je l6631
	call anslot5,occupied
	cmp0
	je l6633
	call anslot5,obj_id
	cthis name
	cmpje
	cmp0
	je l6635
	cthis getname
	pop act_id
	push 300
	cthis setz
	push 1
	cthis play
	push 5
	call recmask,setz
	call butgame,sort
	push 0
	call anslot5,occupied=
	push "null"
	call anslot5,obj_id=
	push 0
	cthis slot_id=
	call anglow5,hide
	cthis check_won
	ret
	jmp l6634
l6635:
	push 880
	push 37
	pop $b
	popax
	add $a,$b
	push 172
	push 38
	pop $b
	popax
	add $a,$b
	cthis setpos
	push "an"
	call anslot5,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	push 4
	spop $a
	call [$a],setz
	push "an"
	call anslot5,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	push "an"
	call anslot5,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],start_x
	push "an"
	call anslot5,obj_id
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],start_y
	spop $a
	call [$a],setpos
	cthis name
	call anslot5,obj_id=
	push 5
	cthis slot_id=
	cthis index
	push 5
	cmpje
	cmp0
	je l6637
	push "green"
	push 0
	call anglow5,setframe
	push 800
	push "null"
	call anglow5,anfadein
	jmp l6636
l6637:
	push "red"
	push 0
	call anglow5,setframe
	push 800
	push "null"
	call anglow5,anfadein
l6636:
l6634:
	jmp l6632
l6633:
	push 1
	call anslot5,occupied=
	cthis name
	call anslot5,obj_id=
	cthis index
	cthis slot_id=
	cthis index
	push 5
	cmpje
	cmp0
	je l6639
	push "green"
	push 0
	call anglow5,setframe
	push 800
	push "null"
	call anglow5,anfadein
	jmp l6638
l6639:
	push "red"
	push 0
	call anglow5,setframe
	push 800
	push "null"
	call anglow5,anfadein
l6638:
	push 880
	push 37
	pop $b
	popax
	add $a,$b
	push 172
	push 38
	pop $b
	popax
	add $a,$b
	cthis setpos
l6632:
	push 4
	cthis setz
	push "null"
	pop act_id
	push 0
	cthis play
	push 2
	call recmask,setz
	cthis check_won
	jmp l6630
l6631:
	push act_id
	push "null"
	cmpje
	cmp0
	je l6641
	cthis getname
	pop act_id
	push 300
	cthis setz
	push 1
	cthis play
	push 5
	call recmask,setz
	call butgame,sort
	cthis check_won
	ret
	jmp l6640
l6641:
	cthis start_x
	cthis start_y
	cthis setpos
	push 4
	cthis setz
	push "null"
	pop act_id
	push 0
	cthis play
	push 2
	call recmask,setz
l6640:
l6630:
l6620:
l6610:
l6600:
l6590:
	call butgame,sort
	end method
	method mouse_move
	push act_id
	push "null"
	cmpjne
	cmp0
	je l6643
	push act_id
	spushs
	call mouse,getpos
	spop $a
	call [$a],setpos
l6643:
	end method
	method check_all_done
	localint $1
	push 1
	pop $1
l6644:
	push $1
	push 6
	cmpjl
	cmp0
	je l6645
	jmp l6647
l6646:
	add $1,1
	pop $1
	jmp l6644
l6647:
	push "anglow"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],actionname
	push "green"
	cmpjne
	cmp0
	je l6649
	push 0
	ret
l6649:
	jmp l6646
l6645:
	push 1
	ret
	end method
	method check_won
	cthis check_all_done
	cmp0
	je l6651
	cthis set_mg_finished
	push 1
	call anfinal_anim,play
l6651:
	end method
	method enable_buttons
	localint $1
	pop $1
	push $1
	cmp0
	je l6653
	push "anpajak"
	call butgame,add
	push "anryba"
	call butgame,add
	push "anmis"
	call butgame,add
	push "anmalpa"
	call butgame,add
	push "anslon"
	call butgame,add
	push "anslot1"
	call butgame,add
	push "anslot2"
	call butgame,add
	push "anslot3"
	call butgame,add
	push "anslot4"
	call butgame,add
	push "anslot5"
	call butgame,add
	jmp l6652
l6653:
	push "anpajak"
	call butgame,removebut
	push "anryba"
	call butgame,removebut
	push "anmis"
	call butgame,removebut
	push "anmalpa"
	call butgame,removebut
	push "anslon"
	call butgame,removebut
	push "anslot1"
	call butgame,removebut
	push "anslot2"
	call butgame,removebut
	push "anslot3"
	call butgame,removebut
	push "anslot4"
	call butgame,removebut
	push "anslot5"
	call butgame,removebut
l6652:
	end method
	method USE_moneta_5
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call anbase,isin
	cmp0
	je l6655
	push "moneta_5"
	cthis removefrompck
	push "osmiornica"
	push 774
	push 25
	pop $b
	popax
	add $a,$b
	push 306
	push 50
	pop $b
	popax
	add $a,$b
	push 1
	cthis init_coin
	push "kot"
	push 834
	push 248
	push 2
	cthis init_coin
	push "waz"
	push 788
	push 172
	push 3
	cthis init_coin
	push "ptak"
	push 586
	push 242
	push 4
	cthis init_coin
	push "kon"
	push 740
	push 258
	push 5
	cthis init_coin
	push "anosmiornica"
	spushs
	spop $a
	call [$a],hide
	push "tim1"
	push 150
	push "mg09_szkielko27"
	cthis timplay
	push "ankot"
	spushs
	spop $a
	call [$a],hide
	push "tim2"
	push 200
	push "mg09_szkielko28"
	cthis timplay
	push "anwaz"
	spushs
	spop $a
	call [$a],hide
	push "tim3"
	push 250
	push "mg09_szkielko29"
	cthis timplay
	push "anptak"
	spushs
	spop $a
	call [$a],hide
	push "tim4"
	push 300
	push "mg09_szkielko30"
	cthis timplay
	push "ankon"
	spushs
	spop $a
	call [$a],hide
	push "tim5"
	push 350
	push "mg09_szkielko31"
	cthis timplay
	push "anbase"
	call butgame,removebut
	push 1
	cthis enable_buttons
	push "e1_monety_zwierzeta_uzyte"
	call clsave,bset
	jmp l6654
l6655:
	cthis item_gotopck
l6654:
	end method
	method mg09_szkielko27
	push "anosmiornica"
	spushs
	spop $a
	call [$a],show
	end method
	method mg09_szkielko28
	push "ankot"
	spushs
	spop $a
	call [$a],show
	end method
	method mg09_szkielko29
	push "anwaz"
	spushs
	spop $a
	call [$a],show
	end method
	method mg09_szkielko30
	push "anptak"
	spushs
	spop $a
	call [$a],show
	end method
	method mg09_szkielko31
	push "ankon"
	spushs
	spop $a
	call [$a],show
	end method
	method mend
	push "ad09_polekoniczyny"
	push "gamead09_polekoniczyny0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	call anslot1,occupied
	neg
	cmp0
	je l6657
	push "anosmiornica"
	cthis showhint
	push "anglow1"
	cthis showhint
	ret
	jmp l6656
l6657:
	call anslot2,occupied
	neg
	cmp0
	je l6659
	push "anpajak"
	cthis showhint
	push "anglow2"
	cthis showhint
	ret
	jmp l6658
l6659:
	call anslot3,occupied
	neg
	cmp0
	je l6661
	push "anwaz"
	cthis showhint
	push "anglow3"
	cthis showhint
	ret
	jmp l6660
l6661:
	call anslot4,occupied
	neg
	cmp0
	je l6663
	push "anptak"
	cthis showhint
	push "anglow4"
	cthis showhint
	ret
	jmp l6662
l6663:
	call anslot5,occupied
	neg
	cmp0
	je l6665
	push "ankon"
	cthis showhint
	push "anglow5"
	cthis showhint
	ret
l6665:
l6662:
l6660:
l6658:
l6656:
	push "anpopexit"
	cthis showhint
	end method
	end game

	game mg10_poison
	parent Banshee
	method init
	push "mg10_poison"
	clparent Banshee,init
	push A
	push "bkg.jpg"
	push "ramka.pyz 20"
	push "klatka.pyz H"
	cthis imgs=
	new Film,filmb
	push "mus"
	call filmb,musicclass=
	push "onfinish"
	push "mend"
	call filmb,addmethod
	push "scripts/cs10_poison/"
	push "film"
	call filmb,load
	call filmb,showfirstframe
	call anklatka,getpx
	call anklatka,getpy
	call filmb,setpos
	push "mg10_poison0"
	call ccs,enter
	end method
	method mg10_poison0
	call filmb,play
	end method
	method mend
	push "ad10_ogrodrozany"
	push "gamead10_ogrodrozany0"
	cthis stdexitdefadv
	end method
	end game

	game mg11_lew
	parent Banshee
	method init
	push "mg11_lew"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "base.pyz 2"
	push "4.pyz 3"
	push "3.pyz 4"
	push "2.pyz 5"
	push "1.pyz 6"
	push "mask.pyz 7"
	push "ramka.pyz 8"
	push "win.pyzH 9"
	push "popexit.pyz 10"
	push "2_hint_mask.pyzH 11"
	push "3_hint_mask.pyzH 12"
	push "4_hint_mask.pyzH 13"
	cthis imgs=
	call anbase,mg11_lew0
	call imgbkg,mg11_lew1
	cthis butpopexit
	push "kawalek_lwa2"
	cthis addtopck
	push "kawalek_lwa3"
	cthis addtopck
	push "kawalek_lwa4"
	cthis addtopck
	new int,center_x
	push rgmscalex
	push 666
	pop $b
	popax
	mul $a,$b
	pop center_x
	new int,center_y
	push rgmscaley
	push 374
	pop $b
	popax
	mul $a,$b
	pop center_y
	new int,rot1
	push 0
	pop rot1
	new int,rot2
	push 0
	pop rot2
	new int,rot3
	push 0
	pop rot3
	new int,rot4
	push 0
	pop rot4
	new filter,ftrot2
	push "an2"
	call ftrot2,link
	push 0
	call ftrot2,setpivottype
	new filter,ftrot3
	push "an3"
	call ftrot3,link
	push 0
	call ftrot3,setpivottype
	new filter,ftrot4
	push "an4"
	call ftrot4,link
	push 0
	call ftrot4,setpivottype
	new filter,frot2
	push "an2_hint_mask"
	call frot2,link
	push 2
	call frot2,setpivottype
	new filter,frot3
	push "an3_hint_mask"
	call frot3,link
	push 2
	call frot3,setpivottype
	new filter,frot4
	push "an4_hint_mask"
	call frot4,link
	push 2
	call frot4,setpivottype
	push center_x
	push center_y
	call an2_hint_mask,move
	push center_x
	push center_y
	call an3_hint_mask,move
	push center_x
	push center_y
	call an4_hint_mask,move
	call an2,mg11_lew3
	call an3,mg11_lew8
	call an4,mg11_lew13
	push "e1_kawalek_lwa2_inserted"
	call clsave,bis
	cmp0
	je l6708
	push "inserted"
	call an2,play
l6708:
	push "e1_kawalek_lwa3_inserted"
	call clsave,bis
	cmp0
	je l6710
	push "inserted"
	call an3,play
l6710:
	push "e1_kawalek_lwa4_inserted"
	call clsave,bis
	cmp0
	je l6712
	push "inserted"
	call an4,play
l6712:
	cthis random_rings
	push "e1_kawalek_lwa2_inserted"
	call clsave,bis
	neg
	cmp0
	jne l6715
	push "e1_kawalek_lwa3_inserted"
	call clsave,bis
	neg
	cmp0
	jne l6715
	push "e1_kawalek_lwa4_inserted"
	call clsave,bis
	neg
	jmp l6716
l6714:
	push 0
	jmp l6716
l6715:
	push 1
l6716:
	cmp0
	je l6717
	push "snd_brak_kawalkow"
	push "kinnat_54a"
	cthis newsnd
	push "onfinish"
	push "advsetstdstate"
	call snd_brak_kawalkow,addmethod
	push "snd_brak_kawalkow"
	cthis cbplay
l6717:
	cthis stdstart
	end method
	method mg11_lew0
	cthis Button_isinalpha
	cthis getname
	call butgame,add
	end method
	method mg11_lew1
	cthis Button_isinalpha
	push "butclick"
	push "mg11_lew2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg11_lew2
	cthis advstdstate
	neg
	cmp0
	je l6667
	ret
l6667:
	cthis mend
	end method
	method mg11_lew3
	push "isbutin"
	push "mg11_lew4"
	cthis addmethod
	push "butmoveon"
	push "mg11_lew5"
	cthis addmethod
	push "butmoveoff"
	push "mg11_lew6"
	cthis addmethod
	push "butclick"
	push "mg11_lew7"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg11_lew4
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 1
	cthis isin
	end method
	method mg11_lew5
	cthis advstdstate
	neg
	cmp0
	je l6669
	ret
l6669:
	push "e1_kawalek_lwa2_inserted"
	call clsave,bis
	neg
	cmp0
	je l6671
	push "use"
	call advmouse,set
	jmp l6670
l6671:
	cthis all_inserted
	cmp0
	je l6673
	push "take"
	call advmouse,set
	jmp l6672
l6673:
	push "normal"
	call advmouse,set
l6672:
l6670:
	end method
	method mg11_lew6
	cthis advstdstate
	neg
	cmp0
	je l6675
	ret
l6675:
	call advmouse,setstd
	end method
	method mg11_lew7
	cthis advstdstate
	neg
	cmp0
	jne l6678
	cthis is_mg_finished
	cmp0
	jne l6678
	cthis all_inserted
	neg
	jmp l6679
l6677:
	push 0
	jmp l6679
l6678:
	push 1
l6679:
	cmp0
	je l6680
	ret
l6680:
	push 30
	cthis rotate2
	end method
	method mg11_lew8
	push "isbutin"
	push "mg11_lew9"
	cthis addmethod
	push "butmoveon"
	push "mg11_lew10"
	cthis addmethod
	push "butmoveoff"
	push "mg11_lew11"
	cthis addmethod
	push "butclick"
	push "mg11_lew12"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg11_lew9
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 1
	cthis isin
	end method
	method mg11_lew10
	cthis advstdstate
	neg
	cmp0
	je l6682
	ret
l6682:
	push "e1_kawalek_lwa3_inserted"
	call clsave,bis
	neg
	cmp0
	je l6684
	push "use"
	call advmouse,set
	jmp l6683
l6684:
	cthis all_inserted
	cmp0
	je l6686
	push "take"
	call advmouse,set
	jmp l6685
l6686:
	push "normal"
	call advmouse,set
l6685:
l6683:
	end method
	method mg11_lew11
	cthis advstdstate
	neg
	cmp0
	je l6688
	ret
l6688:
	call advmouse,setstd
	end method
	method mg11_lew12
	cthis advstdstate
	neg
	cmp0
	jne l6691
	cthis is_mg_finished
	cmp0
	jne l6691
	cthis all_inserted
	neg
	jmp l6692
l6690:
	push 0
	jmp l6692
l6691:
	push 1
l6692:
	cmp0
	je l6693
	ret
l6693:
	push 30
	cthis rotate3
	end method
	method mg11_lew13
	push "isbutin"
	push "mg11_lew14"
	cthis addmethod
	push "butmoveon"
	push "mg11_lew15"
	cthis addmethod
	push "butmoveoff"
	push "mg11_lew16"
	cthis addmethod
	push "butclick"
	push "mg11_lew17"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg11_lew14
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 1
	cthis isin
	end method
	method mg11_lew15
	cthis advstdstate
	neg
	cmp0
	je l6695
	ret
l6695:
	push "e1_kawalek_lwa4_inserted"
	call clsave,bis
	neg
	cmp0
	je l6697
	push "use"
	call advmouse,set
	jmp l6696
l6697:
	cthis all_inserted
	cmp0
	je l6699
	push "take"
	call advmouse,set
	jmp l6698
l6699:
	push "normal"
	call advmouse,set
l6698:
l6696:
	end method
	method mg11_lew16
	cthis advstdstate
	neg
	cmp0
	je l6701
	ret
l6701:
	call advmouse,setstd
	end method
	method mg11_lew17
	cthis advstdstate
	neg
	cmp0
	jne l6704
	cthis is_mg_finished
	cmp0
	jne l6704
	cthis all_inserted
	neg
	jmp l6705
l6703:
	push 0
	jmp l6705
l6704:
	push 1
l6705:
	cmp0
	je l6706
	ret
l6706:
	push 30
	cthis rotate4
	end method
	method all_inserted
	push "e1_kawalek_lwa2_inserted"
	call clsave,bis
	neg
	cmp0
	jne l6720
	push "e1_kawalek_lwa3_inserted"
	call clsave,bis
	neg
	cmp0
	jne l6720
	push "e1_kawalek_lwa4_inserted"
	call clsave,bis
	neg
	jmp l6721
l6719:
	push 0
	jmp l6721
l6720:
	push 1
l6721:
	cmp0
	je l6722
	push 0
	ret
	jmp l6718
l6722:
	push 1
	ret
l6718:
	end method
	method rotate2
	localint $1
	pop $1
	push $1
	call ftrot2,rotate
	push $1
	popax
	add rot2,$a
	pop rot2
	call rot2,abs
	push 360
	cmpje
	cmp0
	je l6724
	push 0
	pop rot2
l6724:
	push $1
	call frot2,rotate
	cthis check_won
	cmp0
	je l6726
	cthis finish
l6726:
	end method
	method rotate3
	localint $1
	pop $1
	push $1
	call ftrot3,rotate
	push $1
	popax
	add rot3,$a
	pop rot3
	call rot3,abs
	push 360
	cmpje
	cmp0
	je l6728
	push 0
	pop rot3
l6728:
	push $1
	call frot3,rotate
	cthis check_won
	cmp0
	je l6730
	cthis finish
l6730:
	end method
	method rotate4
	localint $1
	pop $1
	push $1
	call ftrot4,rotate
	push $1
	popax
	add rot4,$a
	pop rot4
	call rot4,abs
	push 360
	cmpje
	cmp0
	je l6732
	push 0
	pop rot4
l6732:
	push $1
	call frot4,rotate
	cthis check_won
	cmp0
	je l6734
	cthis finish
l6734:
	end method
	method random_rings
	localint $1
	push 8
	spushs
	spop $h
	call $h,rand
	push 2
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	push 30
	pop $b
	popax
	mul $a,$b
	cthis rotate4
	localint $2
	push 8
	spushs
	spop $h
	call $h,rand
	push 2
	pop $b
	popax
	add $a,$b
	pop $2
	push $2
	popax
	sub 0,$a
	push 30
	pop $b
	popax
	mul $a,$b
	cthis rotate3
	localint $3
	push 8
	spushs
	spop $h
	call $h,rand
	push 2
	pop $b
	popax
	add $a,$b
	pop $3
	push $3
	push 30
	pop $b
	popax
	mul $a,$b
	cthis rotate2
	end method
	method check_won
	push "e1_kawalek_lwa2_inserted"
	call clsave,bis
	neg
	cmp0
	je l6736
	push 0
	ret
l6736:
	push "e1_kawalek_lwa3_inserted"
	call clsave,bis
	neg
	cmp0
	je l6738
	push 0
	ret
l6738:
	push "e1_kawalek_lwa4_inserted"
	call clsave,bis
	neg
	cmp0
	je l6740
	push 0
	ret
l6740:
	push rot2
	push 0
	cmpjne
	cmp0
	je l6742
	push 0
	ret
l6742:
	push rot3
	push 0
	cmpjne
	cmp0
	je l6744
	push 0
	ret
l6744:
	push rot4
	push 0
	cmpjne
	cmp0
	je l6746
	push 0
	ret
l6746:
	push 1
	ret
	end method
	method finish
	cthis set_mg_finished
	push 1200
	push "mg11_lew18"
	call anwin,anfadein
	end method
	method mg11_lew18
	push 1000
	push "mend"
	call anwin,anfadeout
	end method
	method mend
	push "ad11_altana"
	push "gamead11_altana0"
	cthis stdexitdefadv
	end method
	method USE_kawalek_lwa2
	cthis advsetstdstate
	call mouse,getpos
	push 1
	push 1
	call anbase,isin
	cmp0
	je l6748
	push "kawalek_lwa2"
	cthis removefrompck
	push "e1_kawalek_lwa2_inserted"
	call clsave,bset
	push "inserted"
	call an2,play
	call advmouse,setstd
	cthis check_buttons
	cthis check_won
	cmp0
	je l6750
	cthis finish
l6750:
	jmp l6747
l6748:
	cthis item_gotopck
l6747:
	end method
	method USE_kawalek_lwa3
	cthis advsetstdstate
	call mouse,getpos
	push 1
	push 1
	call anbase,isin
	cmp0
	je l6752
	push "kawalek_lwa3"
	cthis removefrompck
	push "e1_kawalek_lwa3_inserted"
	call clsave,bset
	push "inserted"
	call an3,play
	call advmouse,setstd
	cthis check_buttons
	cthis check_won
	cmp0
	je l6754
	cthis finish
l6754:
	jmp l6751
l6752:
	cthis item_gotopck
l6751:
	end method
	method USE_kawalek_lwa4
	cthis advsetstdstate
	call mouse,getpos
	push 1
	push 1
	call anbase,isin
	cmp0
	je l6756
	push "kawalek_lwa4"
	cthis removefrompck
	push "e1_kawalek_lwa4_inserted"
	call clsave,bset
	push "inserted"
	call an4,play
	call advmouse,setstd
	cthis check_buttons
	cthis check_won
	cmp0
	je l6758
	cthis finish
l6758:
	jmp l6755
l6756:
	cthis item_gotopck
l6755:
	end method
	method HINT_CLICK
	push "e1_kawalek_lwa2_inserted"
	call clsave,bis
	neg
	cmp0
	je l6760
	push "an2_hint_mask"
	cthis showhint
	ret
l6760:
	push "e1_kawalek_lwa3_inserted"
	call clsave,bis
	neg
	cmp0
	je l6762
	push "an3_hint_mask"
	cthis showhint
	ret
l6762:
	push "e1_kawalek_lwa4_inserted"
	call clsave,bis
	neg
	cmp0
	je l6764
	push "an4_hint_mask"
	cthis showhint
	ret
l6764:
	cthis is_mg_finished
	neg
	cmp0
	je l6766
	push "an1"
	cthis showhint
	ret
l6766:
	push "anpopexit"
	cthis showhint
	end method
	end game

	game mg12_aniol
	parent Banshee
	method init
	push "mg12_aniol"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "base.pyz 2"
	push "serce_part_2.pyzH 3"
	push "serce_part_1.pyzH 4"
	push "animacja.pyzH 5"
	push "ramka.pyz 6"
	push "popexit.pyz 7"
	cthis imgs=
	cthis butpopexit
	call anbase,mg12_aniol0
	call imgbkg,mg12_aniol1
	push 1
	call ananimacja,setdrawmode
	cthis stdstart
	push save_prefix
	push "serce_part_1_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l6770
	call anserce_part_1,show
l6770:
	push save_prefix
	push "serce_part_2_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l6772
	call anserce_part_2,show
l6772:
	push save_prefix
	push "intro_spoken"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l6774
	push "snd_intro"
	push "kinnat_012_2"
	cthis newsnd
	push "onfinish"
	push "advsetstdstate"
	call snd_intro,addmethod
	push "snd_intro"
	cthis cbplay
	push save_prefix
	push "intro_spoken"
	pop $b
	popax
	add $a,$b
	call clsave,bset
l6774:
	push save_prefix
	push "serce_part_1_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l6776
	call anserce_part_1,mg12_aniol3
l6776:
	call anserce_part_2,mg12_aniol6
	end method
	method mg12_aniol0
	cthis Button_isinalpha
	cthis getname
	call butgame,add
	end method
	method mg12_aniol1
	cthis Button_isinalpha
	push "butclick"
	push "mg12_aniol2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg12_aniol2
	cthis advstdstate
	neg
	cmp0
	je l6768
	ret
l6768:
	cthis mend
	end method
	method mg12_aniol3
	cthis Button_isinvisalpha
	push "butmoveon"
	push "mg12_aniol4"
	cthis addmethod
	push "butmoveoff"
	push "mg12_aniol5"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg12_aniol4
	cthis advstdstate
	neg
	cmp0
	je l6778
	ret
l6778:
	push save_prefix
	push "serce_part_1_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l6780
	push "use"
	call advmouse,set
l6780:
	end method
	method mg12_aniol5
	cthis advstdstate
	neg
	cmp0
	je l6782
	ret
l6782:
	call advmouse,setstd
	end method
	method mg12_aniol6
	cthis Button_isinvisalpha
	push "butmoveon"
	push "mg12_aniol7"
	cthis addmethod
	push "butmoveoff"
	push "mg12_aniol8"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg12_aniol7
	cthis advstdstate
	neg
	cmp0
	je l6784
	ret
l6784:
	push save_prefix
	push "serce_part_2_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	neg
	cmp0
	je l6786
	push "use"
	call advmouse,set
l6786:
	end method
	method mg12_aniol8
	cthis advstdstate
	neg
	cmp0
	je l6788
	ret
l6788:
	call advmouse,setstd
	end method
	method mend
	push "ad12_latajacecosna"
	push "gamead12_latajacecosna0"
	cthis stdexitdefadv
	end method
	method USE_serce_part1
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call anbase,isin
	cmp0
	je l6790
	push "serce_part1"
	cthis removefrompck
	push 800
	push "null"
	call anserce_part_1,anfadein
	push save_prefix
	push "serce_part_1_on"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	push "anserce_part_1"
	call butgame,removebut
	cthis check_all_done
	cmp0
	je l6792
	push "timend"
	push 1000
	push "all_done"
	cthis timplay
l6792:
	jmp l6789
l6790:
	cthis item_gotopck
l6789:
	call advmouse,setstd
	end method
	method USE_serce_part2
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call anbase,isin
	cmp0
	je l6794
	push "serce_part2"
	cthis removefrompck
	push 800
	push "null"
	call anserce_part_2,anfadein
	push save_prefix
	push "serce_part_2_on"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	push "anserce_part_2"
	call butgame,removebut
	cthis check_all_done
	cmp0
	je l6796
	push "timend"
	push 1000
	push "all_done"
	cthis timplay
l6796:
	jmp l6793
l6794:
	cthis item_gotopck
l6793:
	call advmouse,setstd
	end method
	method check_all_done
	push save_prefix
	push "serce_part_1_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	cmp0
	je l6798
	push save_prefix
	push "serce_part_2_on"
	pop $b
	popax
	add $a,$b
	call clsave,bis
	jmp l6800
l6798:
	push 0
	jmp l6800
l6799:
	push 1
l6800:
	cmp0
	je l6801
	cthis set_mg_finished
	push 1
	ret
	jmp l6797
l6801:
	push 0
	ret
l6797:
	end method
	method all_done
	push 1600
	push "animacja_fadout"
	call ananimacja,anfadein
	cthis set_mg_finished
	end method
	method animacja_fadout
	push 1000
	push "mend"
	call ananimacja,anfadeout
	end method
	method HINT_CLICK
	call anserce_part_1,isvisible
	neg
	cmp0
	je l6803
	push "serce_part1"
	cthis showhintitem
	push "anserce_part_1"
	cthis showhint
	ret
	jmp l6802
l6803:
	call anserce_part_2,isvisible
	neg
	cmp0
	je l6805
	push "serce_part2"
	cthis showhintitem
	push "anserce_part_2"
	cthis showhint
	ret
	jmp l6804
l6805:
	push "anpopexit"
	cthis showhint
l6804:
l6802:
	end method
	end game

	game mg12_winogrona
	parent Banshee
	method init
	push "mg12_winogrona"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "ramka.pyz 6"
	push "popexit.pyz 7"
	push "winogrona.pyz 8"
	cthis imgs=
	cthis butpopexit
	push "anwinogrona"
	cthis setasitemtopck
	cthis stdstart
	end method
	method anwinogrona_TAKE
	push "winogrona"
	cthis isvisible_itempopup
	neg
	cmp0
	je l6807
	push "winogrona"
	push "anwinogrona"
	cthis show_itempopup
	jmp l6806
l6807:
	push "winogrona"
	cthis hide_itempopup
	cthis item_gotocenter
l6806:
	end method
	method anwinogrona_INPCK
	cthis set_mg_finished
	cthis mend
	end method
	method mend
	push "ad12_latajacecosna"
	push "gamead12_latajacecosna0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "anpopexit"
	cthis showhint
	end method
	end game

	game mg12_jagody
	parent Banshee
	method init
	push "mg12_jagody"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "pop_bkg.pyz 6"
	push "maska_9.pyz 7"
	push "maska_8.pyz 8"
	push "maska_7.pyz 9"
	push "maska_6.pyz 10"
	push "maska_5.pyz 11"
	push "maska_4.pyz 12"
	push "maska_3.pyz 13"
	push "maska_2.pyz 14"
	push "maska_1.pyz 15"
	push "kielich_move.pyz 16"
	push "ramka.pyz 26"
	push "popexit.pyz 27"
	cthis imgs=
	cthis butpopexit
	cthis stdstart
	end method
	method mouse_move
	localint $1
	call mouse,getposx
	pop $1
	localint $2
	call anpop_bkg,getpx
	push 30
	pop $b
	popax
	add $a,$b
	pop $2
	localint $3
	call anpop_bkg,getpx
	call anpop_bkg,getw
	pop $b
	popax
	add $a,$b
	push 50
	pop $b
	popax
	sub $a,$b
	pop $3
	push $1
	push $2
	cmpjl
	cmp0
	je l6809
	push $2
	pop $1
l6809:
	push $1
	push $3
	cmpja
	cmp0
	je l6811
	push $3
	pop $1
l6811:
	push "ankielich_move"
	spushs
	push $1
	call anpop_bkg,getcy
	push 70
	pop $b
	popax
	add $a,$b
	spop $a
	call [$a],setpos
	end method
	method mend
	push "ad12_latajacecosna"
	push "gamead12_latajacecosna0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "anpopexit"
	cthis showhint
	end method
	end game

	game mg001_witryna
	parent Banshee
	method init
	push "mg001_witryna"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "popup_ramka.pyz 3"
	push "okladka_2v.pyzH 4"
	push "popexit.pyz 5"
	cthis imgs=
	cthis butpopexit
	push "e1_mg001_witryna_visited"
	call clsave,bset
	push A
	push "gwarludziN 40"
	cthis sfxs=
	call imgbkg,mg001_witryna0
	push "sndstart"
	push "kinnat_c0d58"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call sndstart,addmethod
	push "anokladka_2v"
	cthis gui_toloupe
	call anokladka_2v,anhideonsetframe
	call anokladka_2v,mg001_witryna3
	cthis stdstart
	end method
	method mg001_witryna0
	push "isbutin"
	push "mg001_witryna1"
	cthis addmethod
	push "butclick"
	push "mg001_witryna2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg001_witryna1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpopup_bkg,isin
	neg
	end method
	method mg001_witryna2
	cthis advstdstate
	neg
	cmp0
	je l6813
	ret
l6813:
	cthis mend
	end method
	method mg001_witryna3
	push "isbutin"
	push "mg001_witryna4"
	cthis addmethod
	push "butclick"
	push "mg001_witryna5"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg001_witryna4
	localint $1
	localint $2
	pop $2
	pop $1
	cthis advstdstate
	cmp0
	je l6814
	push $1
	push $2
	push 0
	push 0
	cthis isin
	cmp0
	je l6814
	cthis loupe_visible
	jmp l6816
l6814:
	push 0
	jmp l6816
l6815:
	push 1
l6816:
	end method
	method mg001_witryna5
	push "sndstart"
	cthis cbplay
	push "e1_mg001_witryna_okladka_2v_clicked"
	call clsave,bset
	end method
	method mend
	push "ad001_kszew"
	push "gamead001_kszew0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "e1_mg001_witryna_okladka_2v_clicked"
	call clsave,bis
	neg
	cmp0
	je l6818
	push "anokladka_2v"
	cthis showhint
	jmp l6817
l6818:
	push "anpopexit"
	cthis showhint
l6817:
	end method
	end game

	game mg002_drzwi
	parent Banshee
	method init
	push "mg002_drzwi"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "pop_bkg.pyz 2"
	push "klamka_obszar.pyzH 3"
	push "ramka.pyz 4"
	push "klamka.pyzH 5"
	push "popexit.pyz 6"
	cthis imgs=
	cthis butpopexit
	push A
	push "bgrszumN 30"
	push "bgrogienN 15"
	push "opendoor 60"
	push "szufladaklik"
	cthis sfxs=
	call imgbkg,mg002_drzwi0
	push "e1_ad002_kswew_klamka_wlozona"
	call clsave,bis
	neg
	cmp0
	je l6822
	call anklamka_obszar,mg002_drzwi3
l6822:
	call anklamka,mg002_drzwi6
	call anklamka,mg002_drzwi9
	push "e1_ad002_kswew_klamka_wlozona"
	call clsave,bis
	cmp0
	je l6833
	call anklamka,show
l6833:
	cthis stdstart
	end method
	method mg002_drzwi0
	push "isbutin"
	push "mg002_drzwi1"
	cthis addmethod
	push "butclick"
	push "mg002_drzwi2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg002_drzwi1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpop_bkg,isin
	neg
	end method
	method mg002_drzwi2
	cthis advstdstate
	neg
	cmp0
	je l6820
	ret
l6820:
	cthis mend
	end method
	method mg002_drzwi3
	cthis Button_isinvis
	push "butmoveon"
	push "mg002_drzwi4"
	cthis addmethod
	push "butmoveoff"
	push "mg002_drzwi5"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg002_drzwi4
	cthis advstdstate
	neg
	cmp0
	je l6824
	ret
l6824:
	push "use"
	call advmouse,set
	end method
	method mg002_drzwi5
	cthis advstdstate
	neg
	cmp0
	je l6826
	ret
l6826:
	call advmouse,setstd
	end method
	method mg002_drzwi6
	push "isbutin"
	push "mg002_drzwi7"
	cthis addmethod
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg002_drzwi8"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg002_drzwi7
	localint $1
	localint $2
	pop $2
	pop $1
	cthis advstdstate
	cmp0
	je l6827
	push $1
	push $2
	push 0
	push 0
	cthis isin
	cmp0
	je l6827
	call anklamka,isvisible
	jmp l6829
l6827:
	push 0
	jmp l6829
l6828:
	push 1
l6829:
	end method
	method mg002_drzwi8
	cthis advstdstate
	neg
	cmp0
	je l6831
	ret
l6831:
	call fxopendoor,play
	push "push"
	call anklamka,play
	end method
	method mg002_drzwi9
	push "onfinish"
	push "mg002_drzwi10"
	cthis addmethod
	end method
	method mg002_drzwi10
	cthis set_mg_finished
	push "e1_ad002_drzwi_otwarte"
	call clsave,bset
	cthis mend
	end method
	method USE_klamka
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call anklamka_obszar,isin
	cmp0
	je l6835
	push "klamka"
	cthis removefrompck
	call anklamka,show
	call fxszufladaklik,play
	push "anklamka_obszar"
	call butgame,removebut
	push "e1_ad002_kswew_klamka_wlozona"
	call clsave,bset
	jmp l6834
l6835:
	cthis advsetstdstate
	cthis item_gotopck
l6834:
	end method
	method mend
	push "ad002_kswew"
	push "gamead002_kswew0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "e1_ad002_kswew_klamka_wlozona"
	call clsave,bis
	neg
	cmp0
	je l6837
	push "taken_klamka"
	call clsave,bis
	jmp l6839
l6837:
	push 0
	jmp l6839
l6838:
	push 1
l6839:
	cmp0
	je l6840
	push "klamka"
	cthis showhintitem
	push "anpop_bkg"
	cthis showhint
	jmp l6836
l6840:
	push "anpopexit"
	cthis showhint
l6836:
	end method
	end game

	game mg003_drzwi
	parent Banshee
	method init
	push "mg003_drzwi"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "keyhole.pyz 3"
	push "klamka_mask.pyzH 4"
	push "klamka.pyz 5"
	push "herb.pyzH 6"
	push "popup_ramka.pyz 7"
	push "popexit.pyz 8"
	push "popup2_bkg.pyzH 9"
	push "popup2_herb.pyzH 10"
	push "popup2_symbol_2v.pyzH 13"
	push "popup2_symbol_2v_anim.pyzH 14"
	push "popup2_ramka.pyzH 15"
	push "popup2_popexit.pyzH 16"
	cthis imgs=
	cthis butpopexit
	cthis stdstart
	push A
	push "skrzypienie_podlogiN 15"
	push "wiatr_w_jaskiniN 50"
	push "szufladaclose"
	push "opendoor 60"
	push "przekrecaklucz"
	cthis sfxs=
	call anpopup2_symbol_2v,anhideonsetframe
	push 1
	call anpopup2_symbol_2v_anim,setdrawmode
	push "anpopup2_symbol_2vsnd"
	push "kinnat_c0d65g"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call anpopup2_symbol_2vsnd,addmethod
	push "anpopup2_symbol_shown"
	push "kinnat_c0d65j"
	cthis newsndfree
	push "onfinish"
	push "advsetstdstate"
	call anpopup2_symbol_shown,addmethod
	call imgbkg,mg003_drzwi0
	new int,popup2_open
	call anpopup2_bkg,mg003_drzwi3
	push "butmoveon"
	push "mg003_drzwi7"
	call anpopexit,addmethod
	call anpopup2_popexit,mg003_drzwi8
	call anpopup2_symbol_2v,mg003_drzwi12
	push "e1_mg003_drzwi_klucz_inserted"
	call clsave,bis
	neg
	cmp0
	je l6871
	call ankeyhole,mg003_drzwi15
l6871:
	call anherb,mg003_drzwi19
	call anklamka_mask,mg003_drzwi24
	call anklamka,mg003_drzwi27
	push "e1_mg003_drzwi_herb_inserted"
	call clsave,bis
	cmp0
	je l6899
	call anherb,show
l6899:
	push "e1_mg003_drzwi_klucz_inserted"
	call clsave,bis
	cmp0
	je l6901
	push 1
	push 1
	call ankeyhole,setframe
l6901:
	end method
	method mg003_drzwi0
	push "isbutin"
	push "mg003_drzwi1"
	cthis addmethod
	push "butclick"
	push "mg003_drzwi2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg003_drzwi1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpopup_bkg,isin
	neg
	end method
	method mg003_drzwi2
	cthis advstdstate
	neg
	cmp0
	je l6842
	ret
l6842:
	cthis mend
	end method
	method mg003_drzwi3
	push "isbutin"
	push "mg003_drzwi4"
	cthis addmethod
	push "butmoveon"
	push "mg003_drzwi5"
	cthis addmethod
	push "butmoveoff"
	push "mg003_drzwi6"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg003_drzwi4
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 1
	cthis isin
	cmp0
	je l6843
	push popup2_open
	jmp l6845
l6843:
	push 0
	jmp l6845
l6844:
	push 1
l6845:
	end method
	method mg003_drzwi5
	cthis advstdstate
	neg
	cmp0
	je l6847
	ret
l6847:
	push "e1_mg003_drzwi_herb_inserted"
	call clsave,bis
	neg
	cmp0
	je l6849
	push "use"
	call advmouse,set
l6849:
	end method
	method mg003_drzwi6
	cthis advstdstate
	neg
	cmp0
	je l6851
	ret
l6851:
	call advmouse,setstd
	end method
	method mg003_drzwi7
	push popup2_open
	cmp0
	je l6853
	ret
l6853:
	call advmouse,setbut
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	end method
	method mg003_drzwi8
	cthis Button_isinalpha
	push "butmoveon"
	push "mg003_drzwi9"
	cthis addmethod
	push "butmoveoff"
	push "mg003_drzwi10"
	cthis addmethod
	push "butclick"
	push "mg003_drzwi11"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg003_drzwi9
	push popup2_open
	neg
	cmp0
	je l6855
	ret
l6855:
	call advmouse,setbut
	push 1
	popax
	sub 0,$a
	push 1
	cthis setframe
	end method
	method mg003_drzwi10
	push popup2_open
	neg
	cmp0
	je l6857
	ret
l6857:
	call advmouse,setstd
	push 1
	popax
	sub 0,$a
	push 0
	cthis setframe
	end method
	method mg003_drzwi11
	push popup2_open
	neg
	cmp0
	je l6859
	ret
l6859:
	push "null"
	cthis close_popup2
	end method
	method mg003_drzwi12
	push "isbutin"
	push "mg003_drzwi13"
	cthis addmethod
	push "butmoveon"
	push "mg003_drzwi14"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg003_drzwi13
	localint $1
	localint $2
	pop $2
	pop $1
	cthis advstdstate
	cmp0
	je l6860
	push $1
	push $2
	push 0
	push 0
	cthis isin
	cmp0
	je l6860
	push "e1_mg003_drzwi_herb_inserted"
	call clsave,bis
	cmp0
	je l6860
	push popup2_open
	jmp l6862
l6860:
	push 0
	jmp l6862
l6861:
	push 1
l6862:
	end method
	method mg003_drzwi14
	push popup2_open
	neg
	cmp0
	je l6864
	ret
l6864:
	cthis loupe_visible
	cmp0
	je l6866
	push "taken_klucz_biblioteka"
	call clsave,bis
	neg
	jmp l6868
l6866:
	push 0
	jmp l6868
l6867:
	push 1
l6868:
	cmp0
	je l6869
	push "anpopup2_symbol_2vsnd"
	cthis cbplay
l6869:
	end method
	method mg003_drzwi15
	push "isbutin"
	push "mg003_drzwi16"
	cthis addmethod
	push "butmoveon"
	push "mg003_drzwi17"
	cthis addmethod
	push "butmoveoff"
	push "mg003_drzwi18"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg003_drzwi16
	localint $1
	localint $2
	pop $2
	pop $1
	cthis advstdstate
	cmp0
	je l6872
	push $1
	push $2
	push 0
	push 0
	cthis isin
	jmp l6874
l6872:
	push 0
	jmp l6874
l6873:
	push 1
l6874:
	end method
	method mg003_drzwi17
	push "e1_mg003_drzwi_klucz_inserted"
	call clsave,bis
	neg
	cmp0
	je l6876
	push "use"
	call advmouse,set
l6876:
	end method
	method mg003_drzwi18
	call advmouse,setstd
	end method
	method mg003_drzwi19
	push "isbutin"
	push "mg003_drzwi20"
	cthis addmethod
	push "butmoveon"
	push "mg003_drzwi21"
	cthis addmethod
	push "butmoveoff"
	push "mg003_drzwi22"
	cthis addmethod
	push "butclick"
	push "mg003_drzwi23"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg003_drzwi20
	localint $1
	localint $2
	pop $2
	pop $1
	cthis advstdstate
	cmp0
	je l6877
	push $1
	push $2
	push 0
	push 0
	cthis isin
	jmp l6879
l6877:
	push 0
	jmp l6879
l6878:
	push 1
l6879:
	end method
	method mg003_drzwi21
	push "loupe"
	call advmouse,set
	end method
	method mg003_drzwi22
	call advmouse,setstd
	end method
	method mg003_drzwi23
	cthis advstdstate
	neg
	cmp0
	jne l6882
	push popup2_open
	cmp0
	jne l6882
	push "e1_ad003_drzwi_otwarte"
	call clsave,bis
	jmp l6883
l6881:
	push 0
	jmp l6883
l6882:
	push 1
l6883:
	cmp0
	je l6884
	ret
l6884:
	cthis open_popup2
	end method
	method mg003_drzwi24
	push "isbutin"
	push "mg003_drzwi25"
	cthis addmethod
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg003_drzwi26"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg003_drzwi25
	localint $1
	localint $2
	pop $2
	pop $1
	cthis advstdstate
	cmp0
	je l6885
	push $1
	push $2
	push 0
	push 0
	cthis isin
	jmp l6887
l6885:
	push 0
	jmp l6887
l6886:
	push 1
l6887:
	end method
	method mg003_drzwi26
	cthis advstdstate
	neg
	cmp0
	jne l6890
	push popup2_open
	jmp l6891
l6889:
	push 0
	jmp l6891
l6890:
	push 1
l6891:
	cmp0
	je l6892
	ret
l6892:
	push "push"
	call anklamka,play
	call fxopendoor,play
	end method
	method mg003_drzwi27
	push "onfinish"
	push "mg003_drzwi28"
	cthis addmethod
	end method
	method mg003_drzwi28
	push "e1_mg003_drzwi_herb_inserted"
	call clsave,bis
	cmp0
	je l6894
	push "e1_mg003_drzwi_klucz_inserted"
	call clsave,bis
	jmp l6896
l6894:
	push 0
	jmp l6896
l6895:
	push 1
l6896:
	cmp0
	je l6897
	cthis set_mg_finished
	push "e1_ad003_drzwi_otwarte"
	call clsave,bset
	cthis mend
l6897:
	end method
	method open_popup2
	push 1
	pop popup2_open
	push 300
	push "null"
	call anpopup2_bkg,anfadein
	push 300
	push "null"
	call anpopup2_ramka,anfadein
	push 300
	push "null"
	call anpopup2_popexit,anfadein
	push "e1_mg003_drzwi_herb_inserted"
	call clsave,bis
	cmp0
	je l6903
	push 300
	push "null"
	call anpopup2_herb,anfadein
l6903:
	push "e1_mg003_drzwi_herb_inserted"
	call clsave,bis
	cmp0
	je l6905
	push "anpopup2_symbol_2v"
	cthis gui_toloupe
l6905:
	end method
	method close_popup2
	push 300
	push "null"
	call anpopup2_bkg,anfadeout
	push 300
	push "null"
	call anpopup2_ramka,anfadeout
	push 300
	push "null"
	call anpopup2_popexit,anfadeout
	push "anpopup2_symbol_2v"
	cthis gui_removefromloupe
	push "e1_mg003_drzwi_herb_inserted"
	call clsave,bis
	cmp0
	je l6907
	push 300
	push "null"
	call anpopup2_herb,anfadeout
l6907:
	push 0
	pop popup2_open
	cthis advsetstdstate
	end method
	method USE_herb
	cthis advsetstdstate
	push popup2_open
	cmp0
	je l6909
	call mouse,getpos
	push 0
	push 0
	call anpopup2_bkg,isin
	jmp l6911
l6909:
	push 0
	jmp l6911
l6910:
	push 1
l6911:
	cmp0
	je l6912
	push "herb"
	cthis removefrompck
	push 800
	push "null"
	call anpopup2_herb,anfadein
	call anherb,show
	push 800
	push "efekt_fadout"
	call anpopup2_symbol_2v_anim,anfadein
	push "anpopup2_symbol_2v"
	cthis gui_toloupe
	push "e1_mg003_drzwi_herb_inserted"
	call clsave,bset
	call fxszufladaclose,play
	call advmouse,setstd
	jmp l6908
l6912:
	call mouse,getpos
	push 0
	push 0
	call anherb,isin
	cmp0
	je l6914
	push 1
	pop popup2_open
	call anpopup2_bkg,show
	call anpopup2_ramka,show
	push 300
	push "null"
	call anpopup2_popexit,anfadein
	push "herb"
	cthis removefrompck
	push 800
	push "null"
	call anpopup2_herb,anfadein
	call anherb,show
	push 800
	push "efekt_fadout"
	call anpopup2_symbol_2v_anim,anfadein
	push "anpopup2_symbol_2v"
	cthis gui_toloupe
	push "e1_mg003_drzwi_herb_inserted"
	call clsave,bset
	jmp l6913
l6914:
	cthis advsetstdstate
	cthis item_gotopck
l6913:
l6908:
	end method
	method USE_klucz_biblioteka
	cthis advsetstdstate
	push popup2_open
	neg
	cmp0
	je l6916
	call mouse,getpos
	push 0
	push 0
	call ankeyhole,isin
	jmp l6918
l6916:
	push 0
	jmp l6918
l6917:
	push 1
l6918:
	cmp0
	je l6919
	push "klucz_biblioteka"
	cthis removefrompck
	push 800
	push "null"
	call ankeyhole,anfadein
	push "open"
	call ankeyhole,play
	call fxprzekrecaklucz,play
	push "ankeyhole"
	call butgame,removebut
	call advmouse,setstd
	push "e1_mg003_drzwi_klucz_inserted"
	call clsave,bset
	jmp l6915
l6919:
	cthis advsetstdstate
	cthis item_gotopck
l6915:
	end method
	method efekt_fadout
	push 800
	push "mg003_drzwi29"
	call anpopup2_symbol_2v_anim,anfadeout
	end method
	method mg003_drzwi29
	push "anpopup2_symbol_shown"
	cthis cbplay
	end method
	method mend
	push "ad003_ksrod"
	push "gamead003_ksrod0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "e1_mg003_drzwi_herb_inserted"
	call clsave,bis
	neg
	cmp0
	je l6921
	push "taken_herb"
	call clsave,bis
	jmp l6923
l6921:
	push 0
	jmp l6923
l6922:
	push 1
l6923:
	cmp0
	je l6924
	push popup2_open
	cmp0
	je l6926
	push "herb"
	cthis showhintitem
	push "anpopup2_herb"
	cthis showhint
	jmp l6925
l6926:
	push "anherb"
	cthis showhint
l6925:
	jmp l6920
l6924:
	push popup2_open
	neg
	cmp0
	je l6928
	push "e1_mg003_drzwi_klucz_inserted"
	call clsave,bis
	neg
	cmp0
	je l6928
	push "taken_klucz_biblioteka"
	call clsave,bis
	jmp l6930
l6928:
	push 0
	jmp l6930
l6929:
	push 1
l6930:
	cmp0
	je l6931
	push "klucz_biblioteka"
	cthis showhintitem
	push "ankeyhole"
	cthis showhint
	jmp l6927
l6931:
	push popup2_open
	neg
	cmp0
	je l6933
	push "e1_mg003_drzwi_klucz_inserted"
	call clsave,bis
	cmp0
	je l6933
	push "e1_mg003_drzwi_herb_inserted"
	call clsave,bis
	jmp l6935
l6933:
	push 0
	jmp l6935
l6934:
	push 1
l6935:
	cmp0
	je l6936
	push "anklamka_mask"
	cthis showhint
	jmp l6932
l6936:
	push popup2_open
	cmp0
	je l6938
	push "anpopup2_popexit"
	cthis showhint
	jmp l6937
l6938:
	push "anpopexit"
	cthis showhint
l6937:
l6932:
l6927:
l6920:
	end method
	end game

	game mg003_lustro
	parent Banshee
	method init
	push "mg003_lustro"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "anim.pyzH 3"
	push "blysk.pyzH 4"
	push "popup_maska.pyz 10"
	push "popup_ramka.pyz 11"
	push "spinka.pyzH 12"
	push "popexit.pyz 13"
	cthis imgs=
	push 1
	call anblysk,setdrawmode
	push "anspinka"
	cthis setasitemtopck
	cthis butpopexit
	cthis stdstart
	push A
	push "skrzypienie_podlogiN 15"
	push "wiatr_w_jaskiniN 50"
	push "przetrzyj"
	push "founditem1 30"
	cthis sfxs=
	call anpopup_bkg,mg003_lustro0
	call imgbkg,mg003_lustro4
	push "onfinish"
	push "mg003_lustro6"
	call ananim,addmethod
	push "e1_mg003_lustro_szmata_used"
	call clsave,bis
	cmp0
	je l6962
	call ananim,show
	push "e1_mg003_lustro_szmata_anim_shown"
	call clsave,bis
	cmp0
	je l6964
	push "taken_spinka"
	call clsave,bis
	neg
	jmp l6966
l6964:
	push 0
	jmp l6966
l6965:
	push 1
l6966:
	cmp0
	je l6967
	call anspinka,show
	push 1
	push 0
	call anspinka,setframe
	push "spinka"
	push "anspinka"
	cthis show_itempopup
	call fxfounditem1,play
l6967:
l6962:
	push "e1_mg003_lustro_szmata_used"
	call clsave,bis
	neg
	cmp0
	je l6969
	push "sndstart"
	push "kinnat_c0d66"
	cthis newsnd
	push "onfinish"
	push "advsetstdstate"
	call sndstart,addmethod
	push "sndstart"
	cthis cbplay
l6969:
	end method
	method mg003_lustro0
	cthis Button_isin
	push "butmoveon"
	push "mg003_lustro1"
	cthis addmethod
	push "butmoveoff"
	push "mg003_lustro2"
	cthis addmethod
	push "butclick"
	push "mg003_lustro3"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg003_lustro1
	cthis advstdstate
	neg
	cmp0
	je l6940
	ret
l6940:
	push "e1_mg003_lustro_szmata_used"
	call clsave,bis
	neg
	cmp0
	je l6942
	push "use"
	call advmouse,set
	jmp l6941
l6942:
	push "e1_mg003_lustro_szmata_anim_shown"
	call clsave,bis
	neg
	cmp0
	je l6944
	push "take"
	call advmouse,set
	jmp l6943
l6944:
	call advmouse,setstd
l6943:
l6941:
	end method
	method mg003_lustro2
	cthis advstdstate
	neg
	cmp0
	je l6946
	ret
l6946:
	call advmouse,setstd
	end method
	method mg003_lustro3
	cthis advstdstate
	neg
	cmp0
	jne l6949
	push "spinka"
	cthis isvisible_itempopup
	cmp0
	jne l6949
	push 1
	popax
	sub 0,$a
	call ananim,isplaying
	jmp l6950
l6948:
	push 0
	jmp l6950
l6949:
	push 1
l6950:
	cmp0
	je l6951
	ret
l6951:
	push "e1_mg003_lustro_szmata_used"
	call clsave,bis
	cmp0
	je l6953
	call advmouse,setstd
	push "lustro_anim"
	pop sgmstate
	push 1
	call ananim,play
	push "e1_mg003_lustro_szmata_anim_shown"
	call clsave,bset
l6953:
	end method
	method mg003_lustro4
	cthis Button_isinalpha
	push "butclick"
	push "mg003_lustro5"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg003_lustro5
	cthis advstdstate
	neg
	cmp0
	jne l6956
	push "spinka"
	cthis isvisible_itempopup
	cmp0
	jne l6956
	push 1
	popax
	sub 0,$a
	call ananim,isplaying
	jmp l6957
l6955:
	push 0
	jmp l6957
l6956:
	push 1
l6957:
	cmp0
	je l6958
	ret
l6958:
	cthis mend
	end method
	method mg003_lustro6
	push "spinka"
	cthis isvisible_itempopup
	neg
	cmp0
	je l6960
	cthis advsetstdstate
	call anspinka,show
	push "rotostart"
	push 0
	call anspinka,setframe
	push "spinka"
	push "anspinka"
	cthis show_itempopup
	call fxfounditem1,play
l6960:
	end method
	method mend
	push "ad003_ksrod"
	push "gamead003_ksrod0"
	cthis stdexitdefadv
	end method
	method HINT_CLICK
	push "taken_spinka"
	call clsave,bis
	neg
	cmp0
	je l6971
	push "taken_szmata"
	call clsave,bis
	jmp l6973
l6971:
	push 0
	jmp l6973
l6972:
	push 1
l6973:
	cmp0
	je l6974
	push "ananim"
	cthis showhint
	push "e1_mg003_lustro_szmata_used"
	call clsave,bis
	neg
	cmp0
	je l6976
	push "szmata"
	cthis showhintitem
l6976:
	jmp l6970
l6974:
	push "anpopexit"
	cthis showhint
l6970:
	end method
	method show_blink
	push "blink_anim"
	pop sgmstate
	push 1000
	push "hide_blink"
	call anblysk,anfadein
	end method
	method hide_blink
	push 1000
	push "mg003_lustro7"
	call anblysk,anfadeout
	end method
	method mg003_lustro7
	cthis advsetstdstate
	end method
	method anspinka_TAKE
	push "spinka"
	cthis isvisible_itempopup
	neg
	cmp0
	je l6978
	push "rotostart"
	push 0
	call anspinka,setframe
	push "spinka"
	push "anspinka"
	cthis show_itempopup
	call fxfounditem1,play
	jmp l6977
l6978:
	push "spinka"
	cthis hide_itempopup
	cthis item_gotocenter
l6977:
	end method
	method anspinka_INPCK
	cthis set_mg_finished
	cthis mend
	end method
	method popup_spinka_clickexit
	push "anspinka"
	call butgame,sclicked=
	cthis anspinka_TAKE
	end method
	method USE_szmata
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call ananim,isin
	cmp0
	je l6980
	push "e1_mg003_lustro_szmata_used"
	call clsave,bis
	neg
	jmp l6982
l6980:
	push 0
	jmp l6982
l6981:
	push 1
l6982:
	cmp0
	je l6983
	push "szmata"
	cthis removefrompck
	push "take"
	call advmouse,set
	push 1200
	push "show_blink"
	call ananim,anfadein
	push "e1_mg003_lustro_szmata_used"
	call clsave,bset
	call fxprzetrzyj,play
	jmp l6979
l6983:
	cthis advsetstdstate
	cthis item_gotopck
l6979:
	end method
	end game

	game mg002_witryna
	parent Banshee
	method init
	push "mg002_witryna"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "anim_koord.pyzH 3"
	push "klodka.pyz 4"
	push "ramka.pyz 20"
	push "popexit.pyz 21"
	cthis imgs=
	cthis butpopexit
	cthis stdstart
	push "sndstart"
	push "kinnat_c0d65"
	cthis newsnd
	push "onfinish"
	push "advsetstdstate"
	call sndstart,addmethod
	push A
	push "bgrszumN 30"
	push "bgrogienN 15"
	cthis sfxs=
	push "tim1"
	push 800
	push "mg002_witryna0"
	cthis timplay
	call imgbkg,mg002_witryna1
	call anklodka,mg002_witryna4
	new Film,filmb
	push "mus"
	call filmb,musicclass=
	push "onfinish"
	push "mg002_witryna7"
	call filmb,addmethod
	push "scripts/cs002_klodka/"
	push "film"
	call filmb,load
	call filmb,showfirstframe
	push 5
	call filmb,setz
	call ananim_koord,getpx
	call ananim_koord,getpy
	call filmb,setpos
	call filmb,hide
	end method
	method mg002_witryna0
	push "sndstart"
	cthis cbplay
	end method
	method mg002_witryna1
	push "isbutin"
	push "mg002_witryna2"
	cthis addmethod
	push "butclick"
	push "mg002_witryna3"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg002_witryna2
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpopup_bkg,isin
	neg
	end method
	method mg002_witryna3
	cthis advstdstate
	neg
	cmp0
	je l6985
	ret
l6985:
	cthis mend
	end method
	method mg002_witryna4
	cthis Button_isinalpha
	push "butmoveon"
	push "mg002_witryna5"
	cthis addmethod
	push "butmoveoff"
	push "mg002_witryna6"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg002_witryna5
	cthis advstdstate
	neg
	cmp0
	je l6987
	ret
l6987:
	push "e1_mg002_witryna_spinka_used"
	call clsave,bis
	neg
	cmp0
	je l6989
	push "use"
	call advmouse,set
l6989:
	end method
	method mg002_witryna6
	cthis advstdstate
	neg
	cmp0
	je l6991
	ret
l6991:
	call advmouse,setstd
	end method
	method mg002_witryna7
	cthis advsetstdstate
	cthis mend
	end method
	method USE_spinka
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 0
	call anklodka,isin
	cmp0
	je l6993
	push "e1_mg002_witryna_spinka_used"
	call clsave,bis
	neg
	jmp l6995
l6993:
	push 0
	jmp l6995
l6994:
	push 1
l6995:
	cmp0
	je l6996
	push "spinka"
	cthis removefrompck
	push "e1_mg002_witryna_spinka_used"
	call clsave,bset
	call filmb,play
	call advmouse,setstd
	jmp l6992
l6996:
	cthis advsetstdstate
	cthis item_gotopck
l6992:
	end method
	method HINT_CLICK
	push "taken_spinka"
	call clsave,bis
	cmp0
	je l6998
	push "e1_mg002_witryna_spinka_used"
	call clsave,bis
	neg
	jmp l7000
l6998:
	push 0
	jmp l7000
l6999:
	push 1
l7000:
	cmp0
	je l7001
	push "anpopup_bkg"
	cthis showhint
	push "spinka"
	cthis showhintitem
	jmp l6997
l7001:
	push "anpopexit"
	cthis showhint
l6997:
	end method
	method mend
	push "ad002a_kdoors"
	push "gamead002a_kdoors0"
	cthis stdexitdefadv
	end method
	end game

	game mg002_witryna_open
	parent Banshee
	method init
	push "mg002_witryna_open"
	clparent Banshee,init
	push A
	push "bkg.jpg "
	push "anim_coord.pyzH"
	push "popup_bkg.pyz 2"
	push "symbol2v.pyzH 5"
	push "ramka.pyzG 400"
	push "popexit.pyz 410"
	cthis imgs=
	cthis butpopexit
	cthis loadznakout
	new Film,filmb
	push "mus"
	call filmb,musicclass=
	push "scripts/cs002a_popup_ksiazka/"
	push "film"
	call filmb,load
	call ananim_coord,getpx
	call ananim_coord,getpy
	call filmb,setpos
	call filmb,showfirstframe
	push 300
	call filmb,setz
	call filmb,hide
	push "onfinish"
	push "mg002_witryna_open0"
	call filmb,addmethod
	push "e1_cs002a_popup_ksiazka_shown"
	call clsave,bis
	neg
	cmp0
	je l7003
	call anpopup_bkg,hide
	push "ansymbol2v"
	cthis gui_toloupe
	call ansymbol2v,anhideonsetframe
	call ansymbol2v,mg002_witryna_open1
	jmp l7002
l7003:
	call ansymbol2v,hide
l7002:
	call imgbkg,mg002_witryna_open4
	cthis stdstart
	end method
	method mg002_witryna_open0
	cthis mend
	end method
	method mg002_witryna_open1
	push "isbutin"
	push "mg002_witryna_open2"
	cthis addmethod
	push "butclick"
	push "mg002_witryna_open3"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg002_witryna_open2
	localint $1
	localint $2
	pop $2
	pop $1
	cthis advstdstate
	cmp0
	je l7004
	push $1
	push $2
	push 0
	push 0
	cthis isin
	cmp0
	je l7004
	cthis loupe_visible
	jmp l7006
l7004:
	push 0
	jmp l7006
l7005:
	push 1
l7006:
	end method
	method mg002_witryna_open3
	push "e1_cs002a_popup_ksiazka_shown"
	call clsave,bis
	neg
	cmp0
	je l7008
	cthis hide
	push "ansymbol2v"
	cthis gui_removefromloupe
	push "e1_cs002a_popup_ksiazka_shown"
	call clsave,bset
	call filmb,play
l7008:
	end method
	method mg002_witryna_open4
	push "isbutin"
	push "mg002_witryna_open5"
	cthis addmethod
	push "butclick"
	push "mg002_witryna_open6"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg002_witryna_open5
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpopup_bkg,isin
	neg
	end method
	method mg002_witryna_open6
	cthis advstdstate
	neg
	cmp0
	je l7010
	ret
l7010:
	cthis mend
	end method
	method HINT_CLICK
	push "anpopexit"
	cthis showhint
	end method
	method mend
	push "ad002a_kdoors"
	push "gamead002a_kdoors0"
	cthis stdexitdefadv
	end method
	end game

	game mg003_ksiazki
	parent Banshee
	method init
	push "mg003_ksiazki"
	clparent Banshee,init
	push A
	push "bkg.jpg 1"
	push "popup_bkg.pyz 2"
	push "ksiazka.pyz 3"
	push "ramka.pyz 4"
	push "popexit.pyz 5"
	push "ksiazka_open.pyzH 6"
	push "klucz_biblioteka.pyzH 7"
	cthis imgs=
	push "anklucz_biblioteka"
	cthis setasitemtopck
	cthis butpopexit
	cthis stdstart
	push A
	push "skrzypienie_podlogiN 15"
	push "wiatr_w_jaskiniN 50"
	push "book2"
	cthis sfxs=
	push "booksnd"
	push "kinnat_c0d65h"
	cthis newsnd
	push "onfinish"
	push "advsetstdstate"
	call booksnd,addmethod
	call imgbkg,mg003_ksiazki0
	call anksiazka,mg003_ksiazki3
	push "e1_mg003_ksiazki_ksiazka_open"
	call clsave,bis
	cmp0
	je l7018
	call anksiazka_open,show
	call anklucz_biblioteka,show
	push "taken_klucz_biblioteka"
	call clsave,bis
	neg
	cmp0
	je l7020
	call anklucz_biblioteka,show
	jmp l7019
l7020:
	call anklucz_biblioteka,hide
l7019:
l7018:
	end method
	method mg003_ksiazki0
	push "isbutin"
	push "mg003_ksiazki1"
	cthis addmethod
	push "butclick"
	push "mg003_ksiazki2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg003_ksiazki1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anpopup_bkg,isin
	neg
	end method
	method mg003_ksiazki2
	cthis advstdstate
	neg
	cmp0
	je l7012
	ret
l7012:
	cthis mend
	end method
	method mg003_ksiazki3
	cthis Button_isin
	cthis Button_moveonms
	cthis Button_moveoffms
	push "butclick"
	push "mg003_ksiazki4"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg003_ksiazki4
	cthis advstdstate
	neg
	cmp0
	je l7014
	ret
l7014:
	push "e1_mg003_ksiazki_ksiazka_open"
	call clsave,bis
	neg
	cmp0
	je l7016
	push 300
	push "null"
	call anksiazka_open,anfadein
	push 300
	push "null"
	call anklucz_biblioteka,anfadein
	push "e1_mg003_ksiazki_ksiazka_open"
	call clsave,bset
	push "booksnd"
	cthis cbplay
	call fxbook2,play
l7016:
	end method
	method mend
	push "ad003_ksrod"
	push "gamead003_ksrod0"
	cthis stdexitdefadv
	end method
	method anklucz_biblioteka_TAKE
	push "klucz_biblioteka"
	cthis isvisible_itempopup
	neg
	cmp0
	je l7022
	push "rotostart"
	push 0
	call anklucz_biblioteka,setframe
	push "klucz_biblioteka"
	push "anklucz_biblioteka"
	cthis show_itempopup
	jmp l7021
l7022:
	push "klucz_biblioteka"
	cthis hide_itempopup
	push "klucz_biblioteka"
	cthis item_takecenter
l7021:
	end method
	method popup_klucz_biblioteka_clickexit
	push "klucz_biblioteka"
	cthis setactitem
	push "anklucz_biblioteka"
	call butgame,sclicked=
	cthis anklucz_biblioteka_TAKE
	end method
	method anklucz_biblioteka_INPCK
	cthis set_mg_finished
	push "klucz_biblioteka"
	cthis addtopck
	cthis mend
	end method
	method HINT_CLICK
	push "e1_mg003_ksiazki_ksiazka_open"
	call clsave,bis
	neg
	cmp0
	je l7024
	push "anksiazka"
	cthis showhint
	jmp l7023
l7024:
	push "taken_klucz_biblioteka"
	call clsave,bis
	neg
	cmp0
	je l7026
	push "anklucz_biblioteka"
	cthis showhint
	jmp l7025
l7026:
	push "anpopexit"
	cthis showhint
l7025:
l7023:
	end method
	end game

	game mg004_ksiega
	parent Banshee
	method init
	new string,act_id
	push "null"
	pop act_id
	push "mg004_ksiega"
	clparent Banshee,init
	push "e1_kspok_kawalki_zebrane"
	call clsave,bis
	neg
	cmp0
	je l7028
	push "snd_brak_kawalkow"
	push "kinnat_c0d69"
	cthis newsnd
	push "onfinish"
	push "advsetstdstate"
	call snd_brak_kawalkow,addmethod
	push "snd_brak_kawalkow"
	cthis cbplay
l7028:
	push A
	push "bkg.jpg 0"
	push "popup_bkg.pyz 1"
	push "minigame_mask.pyzH 1"
	push "popexit.pyz 2"
	push "slot1.pyzH 3"
	push "slot2.pyzH 2"
	push "slot3.pyzH 3"
	push "slot4.pyzH 4"
	push "slot5.pyzH 5"
	push "1.pyz 6"
	push "2.pyz 7"
	push "3.pyz 8"
	push "4.pyz 9"
	push "5.pyz 5"
	cthis imgs=
	cthis butpopexit
	call imgbkg,mg004_ksiega0
	push "e1_kspok_kawalki_uzyte"
	call clsave,bis
	neg
	cmp0
	je l7032
	localint $1
	push 1
	pop $1
l7033:
	push $1
	push 6
	cmpjl
	cmp0
	je l7034
	jmp l7036
l7035:
	add $1,1
	pop $1
	jmp l7033
l7036:
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],hide
	jmp l7035
l7034:
	call anminigame_mask,mg004_ksiega3
l7032:
	push "e1_mg004_ksiega_1_inserted"
	call clsave,bis
	cmp0
	je l7044
	call anslot1,show
	call an1,hide
	jmp l7043
l7044:
	push "1"
	push 820
	push 502
	cthis init_coin
l7043:
	push "e1_mg004_ksiega_2_inserted"
	call clsave,bis
	cmp0
	je l7046
	call anslot2,show
	call an2,hide
	jmp l7045
l7046:
	push "2"
	push 780
	push 208
	cthis init_coin
l7045:
	push "e1_mg004_ksiega_3_inserted"
	call clsave,bis
	cmp0
	je l7048
	call anslot3,show
	call an3,hide
	jmp l7047
l7048:
	push "3"
	push 920
	push 500
	cthis init_coin
l7047:
	push "e1_mg004_ksiega_4_inserted"
	call clsave,bis
	cmp0
	je l7050
	call anslot4,show
	call an4,hide
	jmp l7049
l7050:
	push "4"
	push 980
	push 180
	cthis init_coin
l7049:
	push "e1_mg004_ksiega_5_inserted"
	call clsave,bis
	cmp0
	je l7052
	call anslot5,show
	call an5,hide
	jmp l7051
l7052:
	push "5"
	push 930
	push 350
	cthis init_coin
l7051:
	cthis stdstart
	end method
	method mg004_ksiega0
	push "isbutin"
	push "mg004_ksiega1"
	cthis addmethod
	push "butclick"
	push "mg004_ksiega2"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg004_ksiega1
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 0
	push 0
	call anminigame_mask,isin
	neg
	end method
	method mg004_ksiega2
	cthis advstdstate
	neg
	cmp0
	je l7030
	ret
l7030:
	cthis mend
	end method
	method mg004_ksiega3
	cthis Button_isinvis
	push "butmoveon"
	push "mg004_ksiega4"
	cthis addmethod
	push "butmoveoff"
	push "mg004_ksiega5"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg004_ksiega4
	cthis advstdstate
	neg
	cmp0
	je l7038
	ret
l7038:
	push "e1_kspok_kawalki_uzyte"
	call clsave,bis
	neg
	cmp0
	je l7040
	push "use"
	call advmouse,set
l7040:
	end method
	method mg004_ksiega5
	cthis advstdstate
	neg
	cmp0
	je l7042
	ret
l7042:
	call advmouse,setstd
	end method
	method init_coin
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push $1
	push $2
	push $3
	spop $a
	call [$a],mg004_ksiega6
	end method
	method mg004_ksiega6
	localstring $1
	localint $2
	localint $3
	pop $3
	pop $2
	pop $1
	push $2
	push $3
	cthis setpos
	push A
	push "name"
	push $1
	push "start_x"
	push $2
	push "start_y"
	push $3
	cthis vars2
	push "isbutin"
	push "mg004_ksiega7"
	cthis addmethod
	push "butclick"
	push "mg004_ksiega8"
	cthis addmethod
	cthis getname
	call butgame,add
	end method
	method mg004_ksiega7
	localdef $1
	localdef $2
	pop $2
	pop $1
	push $1
	push $2
	push 1
	push 1
	cthis isin
	end method
	method mg004_ksiega8
	cthis advstdstate
	neg
	cmp0
	jne l7055
	cthis is_mg_finished
	jmp l7056
l7054:
	push 0
	jmp l7056
l7055:
	push 1
l7056:
	cmp0
	je l7057
	ret
l7057:
	push "e1_kspok_kawalki_zebrane"
	call clsave,bis
	neg
	cmp0
	je l7059
	push "snd_brak_kawalkow"
	cthis cbplay
	ret
l7059:
	push act_id
	push "null"
	cmpje
	cmp0
	je l7061
	cthis getname
	pop act_id
	push 300
	cthis setz
	jmp l7060
l7061:
	push act_id
	cthis getname
	cmpje
	cmp0
	je l7063
	localdef $1
	push "anslot"
	cthis name
	pop $b
	popax
	add $a,$b
	pop $1
	push $1
	spushs
	call mouse,getpos
	push 0
	push 1
	spop $a
	call [$a],isin
	cmp0
	je l7065
	push $1
	spushs
	spop $a
	call [$a],show
	push "e1_mg004_ksiega_"
	cthis name
	pop $b
	popax
	add $a,$b
	push "_inserted"
	pop $b
	popax
	add $a,$b
	call clsave,bset
	cthis hide
	cthis check_won
	jmp l7064
l7065:
	cthis start_x
	cthis start_y
	cthis setpos
	push 2
	cthis setz
l7064:
	push "null"
	pop act_id
l7063:
l7060:
	call butgame,sort
	cthis advsetstdstate
	end method
	method check_all_done
	localint $1
	push 1
	pop $1
l7066:
	push $1
	push 6
	cmpjl
	cmp0
	je l7067
	jmp l7069
l7068:
	add $1,1
	pop $1
	jmp l7066
l7069:
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],isvisible
	cmp0
	je l7071
	push 0
	ret
l7071:
	jmp l7068
l7067:
	push 1
	ret
	end method
	method check_won
	cthis check_all_done
	cmp0
	je l7073
	cthis set_mg_finished
	push "timend"
	push 500
	push "mg004_ksiega9"
	cthis timplay
l7073:
	end method
	method mg004_ksiega9
	cthis start_film
	end method
	method start_film
	push "cs02_kinnatbook"
	push "-def"
	push "ad00_endintro"
	cthis watch_film
	end method
	method mouse_move
	push act_id
	push "null"
	cmpjne
	cmp0
	je l7075
	push act_id
	spushs
	call mouse,getpos
	spop $a
	call [$a],setpos
l7075:
	end method
	method go_to_next_location
	push "ad00_endintro"
	push "gamead00_endintro0"
	cthis stdexitdefadv
	end method
	method USE_kawalek_ksiazki_5
	cthis advsetstdstate
	call mouse,getpos
	push 0
	push 1
	call anminigame_mask,isin
	cmp0
	je l7077
	push "kawalek_ksiazki_5"
	cthis removefrompck
	localint $1
	push 1
	pop $1
l7078:
	push $1
	push 6
	cmpjl
	cmp0
	je l7079
	jmp l7081
l7080:
	add $1,1
	pop $1
	jmp l7078
l7081:
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	spop $a
	call [$a],hide
	jmp l7080
l7079:
	push "time_show_parts"
	push 0
	push "mg004_ksiega10"
	cthis timplay
	call advmouse,setstd
	push "e1_kspok_kawalki_uzyte"
	call clsave,bset
	jmp l7076
l7077:
	cthis item_gotopck
l7076:
	end method
	method mg004_ksiega10
	localint $1
	push 1
	pop $1
l7082:
	push $1
	push 6
	cmpjl
	cmp0
	je l7083
	jmp l7085
l7084:
	add $1,1
	pop $1
	jmp l7082
l7085:
	push "an"
	push $1
	pop $b
	popax
	add $a,$b
	spushs
	push 100
	push $1
	pop $b
	popax
	mul $a,$b
	push "null"
	spop $a
	call [$a],anfadein
	jmp l7084
l7083:
	end method
	method mend
	push "ad004_kspok"
	push "gamead004_kspok0"
	cthis stdexitdefadv
	end method
	end game

