/*
	tworzy z button z obiektu graficznego
*/

class classadvbut	{
	init(string sname)	{
		this.setadvbutmets(sname, "but");
	}
	setasbutton(string san, string sname)	{
		classadvbut::setasbutton2(san,sname,"but");
	}
	setasbutton2(string san, string sname, string styp)	{	// rozszerzanie obiektu o button
		<san>.addmethod("setadvbutmets","setadvbutmets");
		<san>.addmethod("setbuttyp","setbuttyp");
		<san>.addmethod("updatemousecursor","updatemousecursor");
		<san>.addmethod("refreshmousecursor","refreshmousecursor");
		<san>.addmethod("showmousecursor", "showmousecursor");
		<san>.addmethod("setadvbutpos","setadvbutpos");
		<san>.addmethod("setbutdir","setbutdir");
		<san>.addmethod("setbutbase1","setbutbase1");
		<san>.addmethod("setbutbase2","setbutbase2");
		<san>.addmethod("setbutbase","setbutbase");
		<san>.addmethod("getbase1","getbase1");
		<san>.addmethod("getbase2","getbase2");
		<san>.addmethod("getbutdir","getbutdir");
		<san>.addmethod("getbutname","getbutname");
		<san>.addmethod("gettyp","gettyp");
		<san>.addmethod("reachable", "reachable");
		<san>.addmethod("setreach", "setreach");
		<san>.addmethod("getgox","getgox");
		<san>.addmethod("getgoy","getgoy");
		
		<san>.addmethod("enable","enable");
		<san>.addmethod("disable","disable");
		<san>.addmethod("enabled","enabled");
		<san>.addmethod("setonce", "setonce" );
		<san>.addmethod("checkonce", "checkonce" );
		
		<san>.addmethod("setpocket", func { (string s) _spocket = s; } );
		<san>.addmethod("getpocket", func { _spocket; } );
		
		<san>.addmethod("moveon","moveon");
		<san>.addmethod("moveoff","moveoff");
		<san>.addmethod("clickon","clickon");
		<san>.addmethod("butlrel","butlrel");
		
		<san>.addmethod("becomebut", func { classadvbut::setasbut(this); });
		<san>.addmethod("becomeitem", func { classadvbut::setasitem(this); });
		<san>.addmethod("becomedoors", func { classadvbut::setasdoors(this); });
		
		<san>.addmethod("copyposfrompt", func { (string spt, int id)
			int i0 = <spt>.getbyname(id);
			.setadvbutpos(<spt>.getxver(i0) - <spt>.getposx, <spt>.getyver(i0) - <spt>.getposy );
			} );
		
		<san>.addmethod("butisin", func { (int x, int y, bool bv, bool ba)
			if( balpha==-1 )
				.isin(x,y,bv,ba);
			else .isin(x,y,bv,balpha);
			} );
		
		<san>.addmethod("ismask", func { bismask; } );
		<san>.addmethod("setbmask", func { (bool b) bismask = b; });
		
		<san>.addmethod("preparetosort", "preparetosort" );
		
		<san>.setadvbutmets(sname, styp);
		<san>.setreach(true);
	}
	setonce(string s)	{ _sonce = s; }
	checkonce	{
		if(_sonce!=null && !clsave.bis(_sonce))	{
			clsave.bset(_sonce);
			.disable;
		}
	}
	setadvbutmets(string sname, string styp)	{
		new string _styp = styp;
		new string _sname = sname;
		new int igox = this.getposx();		// jak dojsc do tego..
		new int igoy = this.getposy();
		new string sgox = null;
		new string sgoy = null;
		new string _sbutdir = "auto";
		new string _sbase1 = modadv.get("look:",1);
		new string _sbase2 = modadv.get("look:",2);
		new bool breachable = false;
		new string _spocket = sname;
		new string _sonce = null;
		new bool bismask = false;
		
		.vars2(A, "baseuse1", _sbase1, "baseuse2", _sbase2, "hideontake", true, "smousecursor", "active",
			"balpha", -1, "bautohint", true, "bshownonvis", false);
		.updatemousecursor;
		
		this.enable();
	}
	setasmask(string san)	{
		<san>.addmethod("butisin", func { (int x, int y, bool bv, bool ba)
			if( balpha==-1 )
				.isin(x, y, false, ba);
			else .isin(x, y, false, balpha);
			} );
		<san>.setbmask(true);
	}
	/*********************************/
	enable()	{
		if( AdventureGame )
			grbuts.addonce( this.getname() );
	}
	disable()	{
		if( AdventureGame )
			grbuts.remove(this.getname());
	}
	enabled()	{
		if( AdventureGame )
			grbuts.contains(this.getname());
		else 0;
	}
	/*********************************/
	setbutbase(string s1, string s2)	{
		.setbutbase1(s1);
		.setbutbase2(s2);
	}
	setreach(bool b)	{	breachable=b;	}
	reachable()		{	breachable;	}
	setbuttyp(string s)	{	_styp = s;	}
	updatemousecursor	{
		match(_styp)	{
			"but" => "active";
			"doors" => "exit";
			"item" => "take";
			? => smousecursor;
		}
		smousecursor = _;
	}
	refreshmousecursor(string scursor)	{
		smousecursor = scursor;
		.updatemousecursor;
		if( _slastms == this )
			advmouse.set(smousecursor);
	}
	showmousecursor	{	advmouse.set(smousecursor);	}
	/*************************/
	butlrel()	{}		// mouselrel
	clickon()	{	if( this.reachable() )	{	clwalkq.visit( this.getname() );	}	}
	moveon()	{
		if( .hasaddedmet("butmoveon") )
			.butmoveon;
		else {
			if( sItemMover==null )	{
				.showmousecursor;
			} else {
				<sItemMover>.checkusebutton(this, "setactive");
			}
		}
	}
	moveoff()	{
		if( .hasaddedmet("butmoveoff") )	.butmoveoff;
		else advmouse.setstd();
	}
	/*************************/
	setadvbutpos(string x, string y)	{	sgox=x; sgoy=y; igox = x; igoy=y;		}
	setbutdir(string sdir)	{	_sbutdir=sdir;	}
	setbutbase1(string sb1)	{	_sbase1=sb1; baseuse1 = sb1;	}
	setbutbase2(string sb2)	{	_sbase2=sb2; baseuse2 = sb2;	}
	string getbase1()	{	_sbase1;	}
	string getbase2()	{	_sbase2;	}
	string getbutdir()	{	_sbutdir;	}
	string getbutname()	{	_sname;	}
	string gettyp()		{	_styp;	}
	int getgox()	{
		if( sgox=="-hero" )	{
			sgoy=="-main" ? <smainhero>.getposx() : <sgoy>.getposx();
		} else if (sgox=="-but")	{
			<sgoy>.getcx;
		} else igox + clcamera.getposx();
	}
	int getgoy()	{
		if( sgox=="-hero" )	{
			sgoy=="-main" ? <smainhero>.getposy() : <sgoy>.getposy();
		} else if (sgox=="-but")	{
			<sgoy>.getey;
		} else igoy + clcamera.getposy();
	}
	/*******  virtuale  ****/
	virtual int getposx()	{	0;	}
	virtual int getposy()	{	0;	}
	virtual int getz()		{	0;	}
	virtual int butisin(int x, int y, bool bigv, bool biga)	{	0;	}
	virtual preparetosort(int x, int y)	{}
	virtual endsort	{}
	/***************************/
	public setasbut(string san)	{
		//<san>.setbutbase( modadv.get("take:",1), modadv.get("take:",2) );
		<san>.smousecursor = ("active");
	}
	public setasitem(string san)	{
		<san>.setbutbase( modadv.get("take:",1), modadv.get("take:",2) );
		<san>.smousecursor = ("take");
	}
	public setasdoors(string san)	{
		<san>.setbutbase( modadv.get("doors:",1), modadv.get("doors:",2) );
		<san>.smousecursor = ("exit");
	}
}

class classadvitem : classadvbut	{
	init(string sname)	{
		classadvbut::init(sname, "item");
		this.setbutbase( modadv.get("take:",1), modadv.get("take:",2) );
	}
	setasbutton(string san, string sname)	{
		classadvbut::setasbutton2(san, sname, "item");
		<san>.setbutbase( modadv.get("take:",1), modadv.get("take:",2) );
	}
}

class classadvdoors : classadvbut	{
	init(string sname)	{
		classadvbut::init(sname, "doors");
		this.setbutbase( modadv.get("doors:",1), modadv.get("doors:",2) );
	}
	setasbutton(string san, string sname)	{
		classadvbut::setasbutton2(san, sname, "doors");
		<san>.smousecursor=("active");
		<san>.setbutbase( modadv.get("doors:",1), modadv.get("doors:",2) );
	}
}
