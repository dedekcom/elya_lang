
new int iMenuPuzid = 1;
new int iIlePuz = .readcfg("iIlePuz:",iMenuPuzid);

new int iPuzRow = 5;
new int iPuzCol = 6;
new int iPuzCiecie = 0;
new bool bPlayMusic = true;
new int igmogg = true;
new bool bPuzRotate = false;
new bool bPuzHint = true;

public isjpgame	{	.checktouchpad || sgmpuzpref!="coralreef";	}

game MenuImg : MermaidStd	{
	init	{
		MermaidStd::init("menu_img");
		
		.imgs = (A, (.isjpgame ? "wyborbg.jpg" : "bkg.pyz"),
			"butok.pyz 30", "butnext.pyz 30", "putprev.pyz 30", "cien.pyz 10",
			"$scripts/common/cyfry.pyz 30");
		
		.cbutexit;
		.loadasker;
		.cbutmusic;
		
		if( !.checktouchpad )
			anbutok.imgbuildoverlay(.yellow,64,1200);
		
		if( igmandroid )	{
			int dx = 17->igetsc;
			int dy = 83->igetsc;
			ancien.move(dx, dy);
			anbutnext.move(dx, dy);
			anputprev.move(dx, dy);
			anbutok.move(dx, dy);
		}
		
		new gmimgvec grnr;
		int ile = .mputnumber(null,iIlePuz);
		int w = 1.1 * ancyfry.getw;
		for( int i=0; i<ile; i++ )	{
			@s = "anilepuz"+i;
			.copyanima("ancyfry", s);
			<s>.setpos( anbutok.getpx - w*(i+1), ancien.getey + 10->igetsc );
			s = "annr"+i;
			.copyanima("ancyfry", s);
			<s>.setpos( anbutok.getpx - w*(i+ile+2), ancien.getey + 10->igetsc );
			<s>.hide;
			grnr.add(s);
		}
		_ = .mputnumber("anilepuz", iIlePuz);
		ancyfry.setframe(1,0);
		ancyfry.setpos( anbutok.getpx - w*(ile+1), ancien.getey + 10->igetsc );
		
		new img imgpic1;
		new img imgpic2;
		new string spic1 = "imgpic1";
		new string spic2 = "imgpic2";
		<spic1>.mload;
		.mustawnr;
		new int ispeed;
		
		.cycle=("timrew", func {
			<spic1>.move( 0, ispeed );
			<spic2>.move( 0, ispeed );
			@dy = <spic2>.getpy;
			if( (ispeed<0 && dy<0 ) || (ispeed>0 && dy>0) )	{
				<spic1>.hide;
				<spic2>.mustaw;
				@s = spic1;
				spic1 = spic2;
				spic2 = s;
				.advsetstdstate;
				ancien.show;
				.mustawnr;
			} else .play;
			} );
		
		anbutnext.Button_addstdstate;
		anputprev.Button_addstdstate;
		
		anbutok.Button_addstdstate;
		
		.stdenter;
	}
	butclick_anbutnext	{	<GAME>.mnext(1);	}
	butclick_anputprev	{	<GAME>.mnext(-1);	}
	butclick_anbutok	{	.stdexit("MenuTryb");	}
	mustaw	{	.ansetcpos( ancien.getcx, ancien.getcy-1 );	}
	mload	{
		.load( "scripts/" + sgmpuzpref + "/mg_puzzle/imgs/p_puz" + iMenuPuzid + ".jpg" );
		.anzoom( 516.0 / 736.0 );
		.setz( 20 );
		.anclipob("ancien");
		.show;
		.mustaw;
	}
	mnext(int id)	{
		iMenuPuzid += id;
		if( iMenuPuzid < 1 ) iMenuPuzid = iIlePuz;
		else if ( iMenuPuzid > iIlePuz ) iMenuPuzid = 1;
		<spic2>.mload;
		ispeed = 0.4*<spic1>.geth;
		int dy = 5;
		if( id>0 ) {
			ispeed = -ispeed;
			<spic2>.move( 0, <spic1>.geth + dy );
		} else {
			<spic2>.move( 0, - <spic2>.geth - dy );
		}
		sgmstate = "state_rewind";
		ancien.hide;
		timrew.play;
	}
	int mputnumber(string spref, int number)	{
		int id = 0;
		while( number>0 )	{
			if( spref!=null )	{
				@s = spref + id;
				<s>.setframe( 0, number%10 );
				<s>.show;
			}
			number = number/10;
			id++;
		}
		id;
	}
	mustawnr	{
		grnr.hide;
		_ = .mputnumber("annr", iMenuPuzid);
	}
	butclick_anbutexit	{	.askfor("Outro");	}
}

game MenuTryb : MermaidStd	{
	init	{
		MermaidStd::init("menu_tryb");
		
		.imgs = (A, (.isjpgame ? "tryby.jpg" : "bkg.pyz"), 
			"butile.pyzG 10", "butok.pyz 20", "buthint.pyz 20", "butroto.pyz 20", "yesno.pyz 30");
		anyesno.addtogamevars("anmodehint");
		.copyanima("anyesno", "anmoderoto");
		.copyanima("anyesno", "anmodeile");
		
		anmodehint.setpos( anbuthint.getcx, anbuthint.getey );
		anmoderoto.setpos( anbutroto.getcx, anbutroto.getey );
		.msetmodes;
		
		.cbutexit;
		.cbutmusic;
		if( !.checktouchpad )
			anbutok.imgbuildoverlay(.yellow,64,1200);
		
		new string smodeile = null;
		grbutile.eval( func {
			.Button_std;
			.addmethod("butmoveon", func {
				sndfxmoveonms.play;
				advmouse.setact;
				if( this==smodeile )	{
					.setframe( -1, 3 );
				} else .setframe( -1, 1 );
				} );
			.addmethod("butmoveoff", func {
				advmouse.setstd;
				if( this==smodeile )	{
					.setframe( -1, 2 );
				} else .setframe( -1, 0 );
				} );
			.addmethod("butclick", func {
				if( .advstdstate )	{
					sndfxbutclick1.play;
					.msetile(this);
				}
				} );
			butgame.add(this);
			} );
		.msetile(grbutile.get(iPuzCiecie));
		
		anbutroto.Button_addstdstate;
		anbuthint.Button_addstdstate;
		
		anbutok.Button_addstdstate;
		
		.stdenter;
	}
	butclick_anbutroto	{	bPuzRotate = !bPuzRotate; .msetmodes;	}
	butclick_anbuthint	{	bPuzHint = !bPuzHint;	.msetmodes;	}
	butclick_anbutok	{
		match ( <smodeile>.actionname ) 	{
			"12" => { iPuzRow = 3; iPuzCol = 4; }
			"20" => { iPuzRow = 4; iPuzCol = 5; }
			"30" => { iPuzRow = 5; iPuzCol = 6; }
			"48" => { iPuzRow = 6; iPuzCol = 8; }
			? => ;
		}
		.stdexit("PuzzleB");
	}
	msetile(string s)	{
		if( smodeile!=null )	{
			<smodeile>.setframe(-1,0);
		}
		smodeile = s;
		iPuzCiecie = <smodeile>.actionnr(-1);
		<smodeile>.setframe(-1,3);
	}
	msetmodes	{
		anmodehint.setframe( -1, (bPuzHint ? 0 : 1) );
		anmoderoto.setframe( -1, (bPuzRotate ? 0 : 1) );
	}
	butclick_anbutexit	{	.stdexit("MenuImg");	}
}
