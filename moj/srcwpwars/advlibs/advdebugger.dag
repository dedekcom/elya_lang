
module moddbg : classlocker	{
	init()	{
		classlocker::init();
		new string sstate = "init";
		new int ilastx;
		new int ilasty;
		new text txtpos;
		txtpos.setz(5000);
		txtpos.setpos( 0, 0 );
		txtpos.setbkg(0,0,64,16, 0,0,0,192);
		
		new text txtswin;
		txtswin.setz(5000);
		txtswin.setbkg(0,0,64,16, 0,0,0,192);

		new text txtpod;
		txtpod.setz(5000);
		txtpod.setbkg(0,0,128,16, 0,0,0,192);

		this.disable();

	}
	public enable()	{
		this.unlock();
		txtpos.show();
		txtswin.show();
		txtpod.show();
	}
	public disable()	{
		this.lock();
		txtpos.hide();
		txtswin.hide();
		txtpod.hide();
	}
	public updatetxtpos(int x, int y)	{
		txtpos.set("" + ( x-clcamera.getposx() ) + "," + ( y-clcamera.getposy() ));
		txtpos.setpos(x-32,y+46);
		txtpod.setpos(x-64,y+30);
		txtpod.set( engine.getimg(x,y,true,true,-1000,1000));
	}
	public updateswin()	{
		txtswin.set(" " + (swinka.getposx()-clcamera.getposx()) + "," + (swinka.getposy()-clcamera.getposy()) );
		txtswin.setpos( swinka.getposx()-32, swinka.getposy() );
	}
	msminit(int x, int y)	{	this.updatetxtpos(x,y);	}
	msmmove(int x, int y)	{
		clcamera.moveplans(x-ilastx, y-ilasty);
		this.updatetxtpos(x,y);
	}
	public msmove()	{
		if( this.getlock()==true )	{	return;	}
		int x = mouse.getpx();
		int y = mouse.getpy();
		this.<"msm"+sstate>(x,y);
		ilastx=x;
		ilasty=y;
	}
	public mslclick()	{
		if( this.getlock()==true )	{	return;	}
		if( keyboard.iskeydown("space")==true )	{
			sstate="move";
		}
	}
	public mslrel()	{
		if( this.getlock()==true )	{	return;	}
		sstate = "init";
	}
	msrclick()	{
		int x = mouse.getpx();
		int y = mouse.getpy();
		int id = grbuts.isin(x,y,true,true);
		if( id!=false )	{
			string s = grbuts.get(id-1);
			s.print();
		} 
//		txtpod.set( engine.getimg(x,y,true,true,-1000,1000));
	}
	dbkeydown(){
		if( keyboard.iskey("d")==true )	{
			if(this.getlock()==true)	{
				this.enable();
			} else {
				this.disable();
			}
		}
		if( this.getlock()==true )	{	return;	}
		if( keyboard.iskey("s")==true )	{
			this.updateswin();
		}
		if( keyboard.iskey("z")==true )	{
			sgmlastscene = gameapi.getgamename();
			<sgmlastscene>.savescene();
			gameapi.play("gamezajezdnia");
		}

	}
}
